// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client.proto

#ifndef PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED
#define PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "dota_shared_enums.pb.h"
#include "dota_gcmessages_common.pb.h"
#include "gcsdk_gcmessages.pb.h"
#include "dota_gcmessages_common_match_management.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

class CMsgClientSuspended;
class CMsgRequestInternationalTicket;
class CMsgBalancedShuffleLobby;
class CMsgInitialQuestionnaireResponse;
class CMsgDOTAPlayerMatchHistory;
class CMsgDOTAMatchHistoryFilter;
class CMsgDOTARequestMatches;
class CMsgDOTARequestMatchesResponse;
class CMsgDOTARequestMatchesResponse_Series;
class CMsgDOTAPopup;
class CMsgDOTAReportsRemainingRequest;
class CMsgDOTAReportsRemainingResponse;
class CMsgDOTASubmitPlayerReport;
class CMsgDOTASubmitPlayerReportResponse;
class CMsgDOTAReportCountsRequest;
class CMsgDOTAReportCountsResponse;
class CMsgDOTASubmitLobbyMVPVote;
class CMsgDOTASubmitLobbyMVPVoteResponse;
class CMsgDOTALobbyMVPNotifyRecipient;
class CMsgDOTALobbyMVPAwarded;
class CMsgDOTAKickedFromMatchmakingQueue;
class CMsgDOTARequestSaveGames;
class CMsgDOTARequestSaveGamesResponse;
class CMsgGCMatchDetailsRequest;
class CMsgGCMatchDetailsResponse;
class CMsgServerToGCMatchDetailsRequest;
class CMsgGCToServerMatchDetailsResponse;
class CMsgDOTAProfileRequest;
class CMsgDOTAProfileResponse;
class CMsgDOTAProfileResponse_PlayedHero;
class CMsgDOTAProfileResponse_ShowcaseHero;
class CMsgDOTAProfileResponse_LeaguePass;
class CMsgDOTAProfileResponse_EventTicket;
class CMsgDOTAProfileResponse_FeaturedItem;
class CMsgDOTAProfileTickets;
class CMsgDOTAProfileTickets_LeaguePass;
class CMsgDOTAProfileTickets_EventTicket;
class CMsgClientToGCGetProfileTickets;
class CMsgGCSteamProfileRequest;
class CMsgGCSteamProfileRequestResponse;
class CMsgDOTAClearNotifySuccessfulReport;
class CMsgDOTAWelcome;
class CMsgDOTAWelcome_LocalizationDigest;
class CMsgDOTAWelcome_CExtraMsg;
class CSODOTAGameHeroFavorites;
class CMsgDOTAHeroFavoritesAdd;
class CMsgDOTAHeroFavoritesRemove;
class CMsgSetShowcaseHero;
class CMsgSetFeaturedItems;
class CMsgDOTAFeaturedItems;
class CMsgRequestLeagueInfo;
class CDynamicLeagueData;
class CStaticLeagueData;
class CLeagueData;
class CMsgResponseLeagueInfo;
class CMsgDOTAMatchVotes;
class CMsgDOTAMatchVotes_PlayerVote;
class CMsgCastMatchVote;
class CMsgRetrieveMatchVote;
class CMsgMatchVoteResponse;
class CMsgDOTAHallOfFame;
class CMsgDOTAHallOfFame_FeaturedPlayer;
class CMsgDOTAHallOfFame_FeaturedFarmer;
class CMsgDOTAHallOfFameRequest;
class CMsgDOTAHallOfFameResponse;
class CMsgDOTAHalloweenHighScoreRequest;
class CMsgDOTAHalloweenHighScoreResponse;
class CMsgDOTAStorePromoPagesRequest;
class CMsgDOTAStorePromoPagesResponse;
class CMsgDOTAStorePromoPagesResponse_PromoPage;
class CMsgLeagueScheduleBlockTeamInfo;
class CMsgLeagueScheduleBlock;
class CMsgDOTALeague;
class CMsgDOTALeagueScheduleRequest;
class CMsgDOTALeagueScheduleResponse;
class CMsgDOTALeagueScheduleEdit;
class CMsgDOTALeagueScheduleEditResponse;
class CMsgDOTALeaguesInMonthRequest;
class CMsgDOTALeaguesInMonthResponse;
class CMsgMatchmakingMatchGroupInfo;
class CMsgDOTAMatchmakingStatsRequest;
class CMsgDOTAMatchmakingStatsResponse;
class CMsgDOTAUpdateMatchmakingStats;
class CMsgDOTAUpdateMatchManagementStats;
class CMsgDOTASetMatchHistoryAccess;
class CMsgDOTASetMatchHistoryAccessResponse;
class CMsgDOTANotifyAccountFlagsChange;
class CMsgDOTASetProfilePrivacy;
class CMsgDOTASetProfilePrivacyResponse;
class CMsgUpgradeLeagueItem;
class CMsgUpgradeLeagueItemResponse;
class CMsgGCWatchDownloadedReplay;
class CMsgSetMapLocationState;
class CMsgSetMapLocationStateResponse;
class CMsgResetMapLocations;
class CMsgResetMapLocationsResponse;
class CMsgRefreshPartnerAccountLink;
class CMsgClientsRejoinChatChannels;
class CMsgDOTASendFriendRecruits;
class CMsgDOTAFriendRecruitsRequest;
class CMsgDOTAFriendRecruitsResponse;
class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus;
class CMsgDOTAFriendRecruitInviteAcceptDecline;
class CMsgRequestLeaguePrizePool;
class CMsgRequestLeaguePrizePoolResponse;
class CMsgGCGetHeroStandings;
class CMsgGCGetHeroStandingsResponse;
class CMsgGCGetHeroStandingsResponse_Hero;
class CMsgGCItemEditorReservationsRequest;
class CMsgGCItemEditorReservation;
class CMsgGCItemEditorReservationsResponse;
class CMsgGCItemEditorReserveItemDef;
class CMsgGCItemEditorReserveItemDefResponse;
class CMsgGCItemEditorReleaseReservation;
class CMsgGCItemEditorReleaseReservationResponse;
class CMsgGCItemEditorRequestLeagueInfo;
class CMsgGCItemEditorLeagueInfoResponse;
class CMsgDOTARewardTutorialPrizes;
class CMsgDOTALastHitChallengeHighScorePost;
class CMsgDOTALastHitChallengeHighScoreRequest;
class CMsgDOTALastHitChallengeHighScoreResponse;
class CMsgFlipLobbyTeams;
class CMsgPresentedClientTerminateDlg;
class CMsgGCLobbyUpdateBroadcastChannelInfo;
class CMsgDOTARedeemEventPrize;
class CMsgDOTARedeemEventPrizeResponse;
class CMsgDOTAGetEventPoints;
class CMsgDOTAGetEventPointsResponse;
class CMsgDOTAGetEventPointsResponse_Action;
class CMsgDOTALiveLeagueGameUpdate;
class CMsgDOTACompendiumSelection;
class CMsgDOTACompendiumSelectionResponse;
class CMsgDOTACompendiumData;
class CMsgDOTACompendiumDataRequest;
class CMsgDOTACompendiumDataResponse;
class CMsgDOTAGetPlayerMatchHistory;
class CMsgDOTAGetPlayerMatchHistoryResponse;
class CMsgDOTAGetPlayerMatchHistoryResponse_Match;
class CMsgDOTAStartDailyHeroChallenge;
class CMsgGCNotificationsRequest;
class CMsgGCNotificationsResponse;
class CMsgGCNotificationsResponse_Notification;
class CMsgGCNotificationsMarkReadRequest;
class CMsgClientToGCMarkNotificationListRead;
class CMsgGCLeagueAdminState;
class CMsgGCLeagueAdminState_PrivateLeagueKeys;
class CMsgGCPlayerInfoRequest;
class CMsgGCPlayerInfoRequest_PlayerInfo;
class CMsgGCPlayerInfoSubmit;
class CMsgGCPlayerInfoSubmitResponse;
class CMsgClientProvideSurveyResult;
class CMsgClientProvideSurveyResult_Response;
class CMsgDOTAEmoticonAccessSDO;
class CMsgClientToGCEmoticonDataRequest;
class CMsgGCToClientEmoticonData;
class CMsgClientToGCTrackDialogResult;
class CMsgGCToClientTournamentItemDrop;
class CMsgClientToGCSetAdditionalEquips;
class CMsgClientToGCSetAdditionalEquipsResponse;
class CMsgClientToGCGetAdditionalEquips;
class CMsgClientToGCGetAdditionalEquipsResponse;
class CMsgClientToGCGetAllHeroOrder;
class CMsgClientToGCGetAllHeroOrderResponse;
class CMsgClientToGCGetAllHeroProgress;
class CMsgClientToGCGetAllHeroProgressResponse;
class CMsgClientToGCGetTrophyList;
class CMsgClientToGCGetTrophyListResponse;
class CMsgClientToGCGetTrophyListResponse_Trophy;
class CMsgGCToClientTrophyAwarded;
class CMsgClientToGCGetProfileCard;
class CMsgClientToGCSetProfileCardSlots;
class CMsgClientToGCSetProfileCardSlots_CardSlot;
class CMsgClientToGCGetProfileCardStats;
class CMsgClientToGCCreateHeroStatue;
class CMsgGCToClientHeroStatueCreateResult;
class CMsgClientToGCRecordCompendiumStats;
class CMsgGCToClientEventStatusChanged;
class CMsgClientToGCPlayerStatsRequest;
class CMsgGCToClientPlayerStatsResponse;
class CMsgClientToGCCustomGamePlayerCountRequest;
class CMsgGCToClientCustomGamePlayerCountResponse;
class CMsgClientToGCCustomGamesFriendsPlayedRequest;
class CMsgGCToClientCustomGamesFriendsPlayedResponse;
class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame;
class CMsgClientToGCSocialFeedPostCommentRequest;
class CMsgGCToClientSocialFeedPostCommentResponse;
class CMsgClientToGCSocialFeedPostMessageRequest;
class CMsgGCToClientSocialFeedPostMessageResponse;
class CMsgClientToGCFriendsPlayedCustomGameRequest;
class CMsgGCToClientFriendsPlayedCustomGameResponse;
class CMsgClientToGCFeaturedHeroesRequest;
class CMsgGCToClientFeaturedHeroesResponse;
class CMsgGCToClientFeaturedHeroesResponse_DataField;
class CMsgGCToClientFeaturedHeroesResponse_FeaturedHero;
class CMsgGCToClientFeaturedHeroesResponse_Category;
class CMsgClientToGCSocialMatchPostCommentRequest;
class CMsgGCToClientSocialMatchPostCommentResponse;
class CMsgClientToGCSocialMatchDetailsRequest;
class CMsgGCToClientSocialMatchDetailsResponse;
class CMsgGCToClientSocialMatchDetailsResponse_Comment;
class CMsgDOTAPartyRichPresence;
class CMsgDOTAPartyRichPresence_Member;
class CMsgDOTAPartyRichPresence_WeekendTourney;
class CMsgDOTALobbyRichPresence;
class CMsgDOTACustomGameListenServerStartedLoading;
class CMsgDOTACustomGameClientFinishedLoading;
class CMsgClientToGCGetLeagueSeries;
class CMsgClientToGCGetLeagueSeriesResponse;
class CMsgClientToGCGetLeagueSeriesResponse_Series;
class CMsgClientToGCGetLeagueSeriesResponse_Series_Team;
class CMsgClientToGCApplyGemCombiner;
class CMsgClientToGCH264Unsupported;
class CMsgClientToGCRequestH264Support;
class CMsgClientToGCGetQuestProgress;
class CMsgClientToGCGetQuestProgressResponse;
class CMsgClientToGCGetQuestProgressResponse_Challenge;
class CMsgClientToGCGetQuestProgressResponse_Quest;
class CMsgGCToClientMatchSignedOut;
class CMsgGCGetHeroStatsHistory;
class CMsgGCGetHeroStatsHistoryResponse;
class CMsgPlayerConductScorecardRequest;
class CMsgPlayerConductScorecard;
class CMsgClientToGCWageringRequest;
class CMsgGCToClientWageringResponse;
class CMsgGCToClientWageringUpdate;
class CMsgGCToClientArcanaVotesUpdate;
class CMsgClientToGCMysteryItem;
class CMsgGCToClientMysteryItemResponse;
class CMsgClientToGCGetEventGoals;
class CMsgEventGoals;
class CMsgEventGoals_EventGoal;
class CMsgGCToGCLeaguePredictions;
class CMsgPredictionRankings;
class CMsgPredictionRankings_PredictionLine;
class CMsgPredictionRankings_Prediction;
class CMsgPredictionResults;
class CMsgPredictionResults_ResultBreakdown;
class CMsgPredictionResults_Result;
class CMsgClientToGCSuspiciousActivity;
class CMsgClientToGCHasPlayerVotedForMVP;
class CMsgClientToGCHasPlayerVotedForMVPResponse;
class CMsgClientToGCVoteForMVP;
class CMsgClientToGCVoteForMVPResponse;
class CMsgMVPVotesForMatch;
class CMsgMVPVotesForMatch_Player;
class CMsgLeaguePrizePool;
class CMsgClientToGCTeammateStatsRequest;
class CMsgClientToGCTeammateStatsResponse;
class CMsgClientToGCTeammateStatsResponse_TeammateStat;
class CMsgClientToGCVoteForArcana;
class CMsgClientToGCVoteForArcana_MatchVote;
class CMsgClientToGCVoteForArcanaResponse;
class CMsgArcanaVotes;
class CMsgArcanaVotes_Match;
class CMsgClientToGCRequestArcanaVotesRemaining;
class CMsgClientToGCRequestArcanaVotesRemainingResponse;
class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote;
class CMsgClientToGCRequestEventPointLog;
class CMsgClientToGCRequestEventPointLogResponse;
class CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent;
class CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent;
class CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent;
class CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent;
class CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent;
class CMsgClientToGCRequestEventPointLogResponse_AchievementEvent;
class CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent;
class CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent;
class CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent;
class CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent;
class CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent;
class CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent;
class CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction;
class CMsgClientToGCPublishUserStat;
class CMsgClientToGCAddTI6TreeProgress;
class CMsgClientToGCRedeemReward;
class CMsgGCToClientRedeemRewardResponse;
class CMsgClientToGCRequestLinaPlaysRemaining;
class CMsgClientToGCRequestLinaPlaysRemainingResponse;
class CMsgClientToGCRequestLinaGameResult;
class CMsgClientToGCRequestLinaGameResultResponse;
class CMsgGCToClientQuestProgressUpdated;
class CMsgGCToClientQuestProgressUpdated_Challenge;
class CMsgDOTARedeemItem;
class CMsgDOTARedeemItemResponse;
class CMsgPerfectWorldUserLookupRequest;
class CMsgPerfectWorldUserLookupResponse;
class CMsgNexonPartnerUpdate;
class CMsgMakeOffering;
class CMsgRequestOfferings;
class CMsgRequestOfferingsResponse;
class CMsgRequestOfferingsResponse_NewYearsOffering;
class CMsgDOTAPCBangTimedReward;
class CMsgDOTACompendiumInGamePredictionResults;
class CMsgDOTACompendiumInGamePredictionResults_PredictionResult;
class CMsgClientToGCSelectCompendiumInGamePrediction;
class CMsgClientToGCSelectCompendiumInGamePrediction_Prediction;
class CMsgClientToGCSelectCompendiumInGamePredictionResponse;
class CMsgClientToGCOpenPlayerCardPack;
class CMsgClientToGCOpenPlayerCardPackResponse;
class CMsgClientToGCRecyclePlayerCard;
class CMsgClientToGCRecyclePlayerCardResponse;
class CMsgClientToGCCreatePlayerCardPack;
class CMsgClientToGCCreatePlayerCardPackResponse;
class CMsgGCToClientBattlePassRollup_International2016;
class CMsgGCToClientBattlePassRollup_International2016_Questlines;
class CMsgGCToClientBattlePassRollup_International2016_Wagering;
class CMsgGCToClientBattlePassRollup_International2016_Achievements;
class CMsgGCToClientBattlePassRollup_International2016_BattleCup;
class CMsgGCToClientBattlePassRollup_International2016_Predictions;
class CMsgGCToClientBattlePassRollup_International2016_Bracket;
class CMsgGCToClientBattlePassRollup_International2016_PlayerCard;
class CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge;
class CMsgGCToClientBattlePassRollupRequest;
class CMsgGCToClientBattlePassRollupResponse;
class CMsgGCToClientBattlePassRollupListRequest;
class CMsgGCToClientBattlePassRollupListResponse;
class CMsgClientToGCTransferSeasonalMMRRequest;
class CMsgClientToGCTransferSeasonalMMRResponse;
class CMsgGCToClientPlaytestStatus;
class CMsgClientToGCJoinPlaytest;
class CMsgClientToGCJoinPlaytestResponse;
class CMsgDOTAEventInvite;
class CMsgDOTAEventInvite_Team;
class CMsgDOTASetFavoriteTeam;

enum CMsgDOTARequestMatches_SkillLevel {
  CMsgDOTARequestMatches_SkillLevel_Any = 0,
  CMsgDOTARequestMatches_SkillLevel_Normal = 1,
  CMsgDOTARequestMatches_SkillLevel_High = 2,
  CMsgDOTARequestMatches_SkillLevel_VeryHigh = 3
};
bool CMsgDOTARequestMatches_SkillLevel_IsValid(int value);
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN = CMsgDOTARequestMatches_SkillLevel_Any;
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX = CMsgDOTARequestMatches_SkillLevel_VeryHigh;
const int CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE = CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARequestMatches_SkillLevel_descriptor();
inline const ::std::string& CMsgDOTARequestMatches_SkillLevel_Name(CMsgDOTARequestMatches_SkillLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), value);
}
inline bool CMsgDOTARequestMatches_SkillLevel_Parse(
    const ::std::string& name, CMsgDOTARequestMatches_SkillLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARequestMatches_SkillLevel>(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), name, value);
}
enum CMsgDOTAPopup_PopupID {
  CMsgDOTAPopup_PopupID_NONE = -1,
  CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY = 0,
  CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY = 1,
  CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM = 2,
  CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED = 3,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH = 4,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING = 5,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL = 6,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD = 7,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT = 8,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = 9,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME = 10,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY = 11,
  CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED = 12,
  CMsgDOTAPopup_PopupID_INVITE_DENIED = 13,
  CMsgDOTAPopup_PopupID_PARTY_FULL = 14,
  CMsgDOTAPopup_PopupID_MADE_ADMIN = 15,
  CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE = 16,
  CMsgDOTAPopup_PopupID_SIGNON_MESSAGE = 17,
  CMsgDOTAPopup_PopupID_GUILD_KICKED = 18,
  CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE = 19,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND = 21,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID = 22,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID = 23,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = 24,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = 25,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED = 26,
  CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN = 27,
  CMsgDOTAPopup_PopupID_IN_ANOTHER_GAME = 29,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME = 30,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY = 31,
  CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE = 32,
  CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT = 38,
  CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS = 39,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL = 42,
  CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY = 44,
  CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED = 48,
  CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY = 49,
  CMsgDOTAPopup_PopupID_TROPHY_AWARDED = 50,
  CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP = 51,
  CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS = 52,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL = 53,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY = 54,
  CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH = 55,
  CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED = 56,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING = 57,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING = 58,
  CMsgDOTAPopup_PopupID_LOBBY_FULL = 62,
  CMsgDOTAPopup_PopupID_EVENT_POINTS_EARNED = 63,
  CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION = 64,
  CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT = 66,
  CMsgDOTAPopup_PopupID_EVENT_PREMIUM_POINTS_EARNED = 67,
  CMsgDOTAPopup_PopupID_LOBBY_MVP_AWARDED = 68,
  CMsgDOTAPopup_PopupID_LOW_BADGE_LEVEL_CHAT = 71,
  CMsgDOTAPopup_PopupID_GENERIC_INFO = 69,
  CMsgDOTAPopup_PopupID_GENERIC_ERROR = 70
};
bool CMsgDOTAPopup_PopupID_IsValid(int value);
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MIN = CMsgDOTAPopup_PopupID_NONE;
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MAX = CMsgDOTAPopup_PopupID_LOW_BADGE_LEVEL_CHAT;
const int CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE = CMsgDOTAPopup_PopupID_PopupID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAPopup_PopupID_descriptor();
inline const ::std::string& CMsgDOTAPopup_PopupID_Name(CMsgDOTAPopup_PopupID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAPopup_PopupID_descriptor(), value);
}
inline bool CMsgDOTAPopup_PopupID_Parse(
    const ::std::string& name, CMsgDOTAPopup_PopupID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAPopup_PopupID>(
    CMsgDOTAPopup_PopupID_descriptor(), name, value);
}
enum CMsgDOTAFriendRecruitsResponse_EResult {
  CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS = 0,
  CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgDOTAFriendRecruitsResponse_EResult_IsValid(int value);
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN = CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX = CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAFriendRecruitsResponse_EResult_Name(CMsgDOTAFriendRecruitsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAFriendRecruitsResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAFriendRecruitsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAFriendRecruitsResponse_EResult>(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTARedeemEventPrizeResponse_ResultCode {
  CMsgDOTARedeemEventPrizeResponse_ResultCode_Success = 0,
  CMsgDOTARedeemEventPrizeResponse_ResultCode_ServerError = 1,
  CMsgDOTARedeemEventPrizeResponse_ResultCode_InsufficientPoints = 2,
  CMsgDOTARedeemEventPrizeResponse_ResultCode_PointsHeld = 3
};
bool CMsgDOTARedeemEventPrizeResponse_ResultCode_IsValid(int value);
const CMsgDOTARedeemEventPrizeResponse_ResultCode CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MIN = CMsgDOTARedeemEventPrizeResponse_ResultCode_Success;
const CMsgDOTARedeemEventPrizeResponse_ResultCode CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MAX = CMsgDOTARedeemEventPrizeResponse_ResultCode_PointsHeld;
const int CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_ARRAYSIZE = CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor();
inline const ::std::string& CMsgDOTARedeemEventPrizeResponse_ResultCode_Name(CMsgDOTARedeemEventPrizeResponse_ResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor(), value);
}
inline bool CMsgDOTARedeemEventPrizeResponse_ResultCode_Parse(
    const ::std::string& name, CMsgDOTARedeemEventPrizeResponse_ResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARedeemEventPrizeResponse_ResultCode>(
    CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor(), name, value);
}
enum CMsgGCNotificationsResponse_EResult {
  CMsgGCNotificationsResponse_EResult_SUCCESS = 0,
  CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgGCNotificationsResponse_EResult_IsValid(int value);
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MIN = CMsgGCNotificationsResponse_EResult_SUCCESS;
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MAX = CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE = CMsgGCNotificationsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCNotificationsResponse_EResult_descriptor();
inline const ::std::string& CMsgGCNotificationsResponse_EResult_Name(CMsgGCNotificationsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCNotificationsResponse_EResult_descriptor(), value);
}
inline bool CMsgGCNotificationsResponse_EResult_Parse(
    const ::std::string& name, CMsgGCNotificationsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCNotificationsResponse_EResult>(
    CMsgGCNotificationsResponse_EResult_descriptor(), name, value);
}
enum CMsgGCPlayerInfoSubmitResponse_EResult {
  CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS = 0,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED = 2
};
bool CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(int value);
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN = CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
const int CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE = CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
inline const ::std::string& CMsgGCPlayerInfoSubmitResponse_EResult_Name(CMsgGCPlayerInfoSubmitResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), value);
}
inline bool CMsgGCPlayerInfoSubmitResponse_EResult_Parse(
    const ::std::string& name, CMsgGCPlayerInfoSubmitResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCPlayerInfoSubmitResponse_EResult>(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), name, value);
}
enum CMsgGCToClientMysteryItemResponse_Result {
  CMsgGCToClientMysteryItemResponse_Result_SUCCESS = 0,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_SDO_LOAD = 1,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_NO_ACTIONS = 2,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_NO_LOOTLIST = 3,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_EMPTY_LOOTLIST = 4,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_NO_ITEM_GENERATED = 5,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_SQL_COMMIT = 6,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_EVENT_NOT_OWNED = 7,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_INVALID_ACTION = 8,
  CMsgGCToClientMysteryItemResponse_Result_FAILURE_ALREADY_GRANTED = 9
};
bool CMsgGCToClientMysteryItemResponse_Result_IsValid(int value);
const CMsgGCToClientMysteryItemResponse_Result CMsgGCToClientMysteryItemResponse_Result_Result_MIN = CMsgGCToClientMysteryItemResponse_Result_SUCCESS;
const CMsgGCToClientMysteryItemResponse_Result CMsgGCToClientMysteryItemResponse_Result_Result_MAX = CMsgGCToClientMysteryItemResponse_Result_FAILURE_ALREADY_GRANTED;
const int CMsgGCToClientMysteryItemResponse_Result_Result_ARRAYSIZE = CMsgGCToClientMysteryItemResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCToClientMysteryItemResponse_Result_descriptor();
inline const ::std::string& CMsgGCToClientMysteryItemResponse_Result_Name(CMsgGCToClientMysteryItemResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCToClientMysteryItemResponse_Result_descriptor(), value);
}
inline bool CMsgGCToClientMysteryItemResponse_Result_Parse(
    const ::std::string& name, CMsgGCToClientMysteryItemResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCToClientMysteryItemResponse_Result>(
    CMsgGCToClientMysteryItemResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCVoteForArcanaResponse_Result {
  CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED = 0,
  CMsgClientToGCVoteForArcanaResponse_Result_VOTING_NOT_ENABLED_FOR_ROUND = 1,
  CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE = 2
};
bool CMsgClientToGCVoteForArcanaResponse_Result_IsValid(int value);
const CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse_Result_Result_MIN = CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED;
const CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX = CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE;
const int CMsgClientToGCVoteForArcanaResponse_Result_Result_ARRAYSIZE = CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCVoteForArcanaResponse_Result_Name(CMsgClientToGCVoteForArcanaResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCVoteForArcanaResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCVoteForArcanaResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCVoteForArcanaResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCVoteForArcanaResponse_Result>(
    CMsgClientToGCVoteForArcanaResponse_Result_descriptor(), name, value);
}
enum CMsgArcanaVotes_VotingState {
  CMsgArcanaVotes_VotingState_FINISHED = 0,
  CMsgArcanaVotes_VotingState_IN_PROGRESS = 1,
  CMsgArcanaVotes_VotingState_IN_FUTURE = 2
};
bool CMsgArcanaVotes_VotingState_IsValid(int value);
const CMsgArcanaVotes_VotingState CMsgArcanaVotes_VotingState_VotingState_MIN = CMsgArcanaVotes_VotingState_FINISHED;
const CMsgArcanaVotes_VotingState CMsgArcanaVotes_VotingState_VotingState_MAX = CMsgArcanaVotes_VotingState_IN_FUTURE;
const int CMsgArcanaVotes_VotingState_VotingState_ARRAYSIZE = CMsgArcanaVotes_VotingState_VotingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgArcanaVotes_VotingState_descriptor();
inline const ::std::string& CMsgArcanaVotes_VotingState_Name(CMsgArcanaVotes_VotingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgArcanaVotes_VotingState_descriptor(), value);
}
inline bool CMsgArcanaVotes_VotingState_Parse(
    const ::std::string& name, CMsgArcanaVotes_VotingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgArcanaVotes_VotingState>(
    CMsgArcanaVotes_VotingState_descriptor(), name, value);
}
enum CMsgGCToClientRedeemRewardResponse_Result {
  CMsgGCToClientRedeemRewardResponse_Result_SUCCESS = 0,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_SDO_LOCK = 1,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_SDO_LOAD = 2,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_EVENT_NOT_OWNED = 3,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_EVENT_NOT_ACTIVE = 4,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_INVALID_ACTION = 5,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_REQUIREMENTS_NOT_MET = 6,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_ALREADY_GRANTED = 7,
  CMsgGCToClientRedeemRewardResponse_Result_FAILURE_TIMEOUT = 8
};
bool CMsgGCToClientRedeemRewardResponse_Result_IsValid(int value);
const CMsgGCToClientRedeemRewardResponse_Result CMsgGCToClientRedeemRewardResponse_Result_Result_MIN = CMsgGCToClientRedeemRewardResponse_Result_SUCCESS;
const CMsgGCToClientRedeemRewardResponse_Result CMsgGCToClientRedeemRewardResponse_Result_Result_MAX = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_TIMEOUT;
const int CMsgGCToClientRedeemRewardResponse_Result_Result_ARRAYSIZE = CMsgGCToClientRedeemRewardResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCToClientRedeemRewardResponse_Result_descriptor();
inline const ::std::string& CMsgGCToClientRedeemRewardResponse_Result_Name(CMsgGCToClientRedeemRewardResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCToClientRedeemRewardResponse_Result_descriptor(), value);
}
inline bool CMsgGCToClientRedeemRewardResponse_Result_Parse(
    const ::std::string& name, CMsgGCToClientRedeemRewardResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCToClientRedeemRewardResponse_Result>(
    CMsgGCToClientRedeemRewardResponse_Result_descriptor(), name, value);
}
enum CMsgDOTARedeemItemResponse_EResultCode {
  CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded = 0,
  CMsgDOTARedeemItemResponse_EResultCode_k_Failed = 1
};
bool CMsgDOTARedeemItemResponse_EResultCode_IsValid(int value);
const CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MIN = CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded;
const CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX = CMsgDOTARedeemItemResponse_EResultCode_k_Failed;
const int CMsgDOTARedeemItemResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARedeemItemResponse_EResultCode_descriptor();
inline const ::std::string& CMsgDOTARedeemItemResponse_EResultCode_Name(CMsgDOTARedeemItemResponse_EResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARedeemItemResponse_EResultCode_descriptor(), value);
}
inline bool CMsgDOTARedeemItemResponse_EResultCode_Parse(
    const ::std::string& name, CMsgDOTARedeemItemResponse_EResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARedeemItemResponse_EResultCode>(
    CMsgDOTARedeemItemResponse_EResultCode_descriptor(), name, value);
}
enum CMsgPerfectWorldUserLookupResponse_EResultCode {
  CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND = 0,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_UNKNOWN = 1,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_USER_NAME_WRONG_FORMAT = 2,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND = 3,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND = 4
};
bool CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(int value);
const CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MIN = CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND;
const CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX = CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND;
const int CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
inline const ::std::string& CMsgPerfectWorldUserLookupResponse_EResultCode_Name(CMsgPerfectWorldUserLookupResponse_EResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor(), value);
}
inline bool CMsgPerfectWorldUserLookupResponse_EResultCode_Parse(
    const ::std::string& name, CMsgPerfectWorldUserLookupResponse_EResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPerfectWorldUserLookupResponse_EResultCode>(
    CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor(), name, value);
}
enum CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult {
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS = 0,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_INVALID_MATCH = 1,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_PREDICTIONS_ARE_CLOSED = 2,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR = 3
};
bool CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(int value);
const CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MIN = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS;
const CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR;
const int CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
inline const ::std::string& CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Name(CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor(), value);
}
inline bool CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Parse(
    const ::std::string& name, CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult>(
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCOpenPlayerCardPackResponse_Result {
  CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS = 1,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_TO_FIND_PACK = 3,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_ITEM_NOT_CARD_PACK = 4,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE = 5
};
bool CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(int value);
const CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MIN = CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS;
const CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX = CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE;
const int CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_ARRAYSIZE = CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCOpenPlayerCardPackResponse_Result_Name(CMsgClientToGCOpenPlayerCardPackResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCOpenPlayerCardPackResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCOpenPlayerCardPackResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCOpenPlayerCardPackResponse_Result>(
    CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCRecyclePlayerCardResponse_Result {
  CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS = 1,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_TO_FIND_PLAYER_CARD = 3,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_ITEM_NOT_PLAYER_CARD = 4,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_DUST_CARD_CREATE = 5,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED = 6
};
bool CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(int value);
const CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MIN = CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS;
const CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED;
const int CMsgClientToGCRecyclePlayerCardResponse_Result_Result_ARRAYSIZE = CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCRecyclePlayerCardResponse_Result_Name(CMsgClientToGCRecyclePlayerCardResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCRecyclePlayerCardResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCRecyclePlayerCardResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCRecyclePlayerCardResponse_Result>(
    CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCreatePlayerCardPackResponse_Result {
  CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS = 1,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INSUFFICIENT_DUST = 3,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_ITEM_NOT_DUST_ITEM = 4,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE = 5
};
bool CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(int value);
const CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MIN = CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS;
const CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX = CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
const int CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCreatePlayerCardPackResponse_Result_Name(CMsgClientToGCCreatePlayerCardPackResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCreatePlayerCardPackResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCreatePlayerCardPackResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCreatePlayerCardPackResponse_Result>(
    CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor(), name, value);
}
enum DOTA_WatchReplayType {
  DOTA_WATCH_REPLAY_NORMAL = 0,
  DOTA_WATCH_REPLAY_HIGHLIGHTS = 1
};
bool DOTA_WatchReplayType_IsValid(int value);
const DOTA_WatchReplayType DOTA_WatchReplayType_MIN = DOTA_WATCH_REPLAY_NORMAL;
const DOTA_WatchReplayType DOTA_WatchReplayType_MAX = DOTA_WATCH_REPLAY_HIGHLIGHTS;
const int DOTA_WatchReplayType_ARRAYSIZE = DOTA_WatchReplayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_WatchReplayType_descriptor();
inline const ::std::string& DOTA_WatchReplayType_Name(DOTA_WatchReplayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_WatchReplayType_descriptor(), value);
}
inline bool DOTA_WatchReplayType_Parse(
    const ::std::string& name, DOTA_WatchReplayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_WatchReplayType>(
    DOTA_WatchReplayType_descriptor(), name, value);
}
enum EItemEditorReservationResult {
  k_EItemEditorReservationResult_OK = 1,
  k_EItemEditorReservationResult_AlreadyExists = 2,
  k_EItemEditorReservationResult_Reserved = 3,
  k_EItemEditorReservationResult_TimedOut = 4
};
bool EItemEditorReservationResult_IsValid(int value);
const EItemEditorReservationResult EItemEditorReservationResult_MIN = k_EItemEditorReservationResult_OK;
const EItemEditorReservationResult EItemEditorReservationResult_MAX = k_EItemEditorReservationResult_TimedOut;
const int EItemEditorReservationResult_ARRAYSIZE = EItemEditorReservationResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EItemEditorReservationResult_descriptor();
inline const ::std::string& EItemEditorReservationResult_Name(EItemEditorReservationResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EItemEditorReservationResult_descriptor(), value);
}
inline bool EItemEditorReservationResult_Parse(
    const ::std::string& name, EItemEditorReservationResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EItemEditorReservationResult>(
    EItemEditorReservationResult_descriptor(), name, value);
}
enum EFeaturedHeroTextField {
  k_EFeaturedHeroTextField_NewHero = 0,
  k_EFeaturedHeroTextField_NewItem = 1,
  k_EFeaturedHeroTextField_ItemSetDescription = 2,
  k_EFeaturedHeroTextField_ItemDescription = 3,
  k_EFeaturedHeroTextField_Hype = 4,
  k_EFeaturedHeroTextField_HeroWinLoss = 5,
  k_EFeaturedHeroTextField_FrequentlyPlayedHero = 6,
  k_EFeaturedHeroTextField_FeaturedItem = 7,
  k_EFeaturedHeroTextField_PopularItem = 8,
  k_EFeaturedHeroTextField_SaleItem = 9,
  k_EFeaturedHeroTextField_SaleDiscount = 10,
  k_EFeaturedHeroTextField_Container = 11
};
bool EFeaturedHeroTextField_IsValid(int value);
const EFeaturedHeroTextField EFeaturedHeroTextField_MIN = k_EFeaturedHeroTextField_NewHero;
const EFeaturedHeroTextField EFeaturedHeroTextField_MAX = k_EFeaturedHeroTextField_Container;
const int EFeaturedHeroTextField_ARRAYSIZE = EFeaturedHeroTextField_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroTextField_descriptor();
inline const ::std::string& EFeaturedHeroTextField_Name(EFeaturedHeroTextField value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroTextField_descriptor(), value);
}
inline bool EFeaturedHeroTextField_Parse(
    const ::std::string& name, EFeaturedHeroTextField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroTextField>(
    EFeaturedHeroTextField_descriptor(), name, value);
}
enum EFeaturedHeroDataType {
  k_EFeaturedHeroDataType_HeroID = 0,
  k_EFeaturedHeroDataType_ItemDef = 1,
  k_EFeaturedHeroDataType_HypeString = 2,
  k_EFeaturedHeroDataType_StartTimestamp = 3,
  k_EFeaturedHeroDataType_ExpireTimestamp = 4,
  k_EFeaturedHeroDataType_HeroWins = 5,
  k_EFeaturedHeroDataType_HeroLosses = 6,
  k_EFeaturedHeroDataType_SaleDiscount = 7,
  k_EFeaturedHeroDataType_ContainerItemDef = 8
};
bool EFeaturedHeroDataType_IsValid(int value);
const EFeaturedHeroDataType EFeaturedHeroDataType_MIN = k_EFeaturedHeroDataType_HeroID;
const EFeaturedHeroDataType EFeaturedHeroDataType_MAX = k_EFeaturedHeroDataType_ContainerItemDef;
const int EFeaturedHeroDataType_ARRAYSIZE = EFeaturedHeroDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroDataType_descriptor();
inline const ::std::string& EFeaturedHeroDataType_Name(EFeaturedHeroDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroDataType_descriptor(), value);
}
inline bool EFeaturedHeroDataType_Parse(
    const ::std::string& name, EFeaturedHeroDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroDataType>(
    EFeaturedHeroDataType_descriptor(), name, value);
}
enum EWeekendTourneyRichPresenceEvent {
  k_EWeekendTourneyRichPresenceEvent_None = 0,
  k_EWeekendTourneyRichPresenceEvent_StartedMatch = 1,
  k_EWeekendTourneyRichPresenceEvent_WonMatch = 2,
  k_EWeekendTourneyRichPresenceEvent_Eliminated = 3
};
bool EWeekendTourneyRichPresenceEvent_IsValid(int value);
const EWeekendTourneyRichPresenceEvent EWeekendTourneyRichPresenceEvent_MIN = k_EWeekendTourneyRichPresenceEvent_None;
const EWeekendTourneyRichPresenceEvent EWeekendTourneyRichPresenceEvent_MAX = k_EWeekendTourneyRichPresenceEvent_Eliminated;
const int EWeekendTourneyRichPresenceEvent_ARRAYSIZE = EWeekendTourneyRichPresenceEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* EWeekendTourneyRichPresenceEvent_descriptor();
inline const ::std::string& EWeekendTourneyRichPresenceEvent_Name(EWeekendTourneyRichPresenceEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    EWeekendTourneyRichPresenceEvent_descriptor(), value);
}
inline bool EWeekendTourneyRichPresenceEvent_Parse(
    const ::std::string& name, EWeekendTourneyRichPresenceEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EWeekendTourneyRichPresenceEvent>(
    EWeekendTourneyRichPresenceEvent_descriptor(), name, value);
}
// ===================================================================

class CMsgClientSuspended : public ::google::protobuf::Message {
 public:
  CMsgClientSuspended();
  virtual ~CMsgClientSuspended();

  CMsgClientSuspended(const CMsgClientSuspended& from);

  inline CMsgClientSuspended& operator=(const CMsgClientSuspended& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSuspended& default_instance();

  void Swap(CMsgClientSuspended* other);

  // implements Message ----------------------------------------------

  CMsgClientSuspended* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientSuspended& from);
  void MergeFrom(const CMsgClientSuspended& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_end = 1;
  inline bool has_time_end() const;
  inline void clear_time_end();
  static const int kTimeEndFieldNumber = 1;
  inline ::google::protobuf::uint32 time_end() const;
  inline void set_time_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientSuspended)
 private:
  inline void set_has_time_end();
  inline void clear_has_time_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_end_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientSuspended* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestInternationalTicket : public ::google::protobuf::Message {
 public:
  CMsgRequestInternationalTicket();
  virtual ~CMsgRequestInternationalTicket();

  CMsgRequestInternationalTicket(const CMsgRequestInternationalTicket& from);

  inline CMsgRequestInternationalTicket& operator=(const CMsgRequestInternationalTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestInternationalTicket& default_instance();

  void Swap(CMsgRequestInternationalTicket* other);

  // implements Message ----------------------------------------------

  CMsgRequestInternationalTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestInternationalTicket& from);
  void MergeFrom(const CMsgRequestInternationalTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgRequestInternationalTicket)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestInternationalTicket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBalancedShuffleLobby : public ::google::protobuf::Message {
 public:
  CMsgBalancedShuffleLobby();
  virtual ~CMsgBalancedShuffleLobby();

  CMsgBalancedShuffleLobby(const CMsgBalancedShuffleLobby& from);

  inline CMsgBalancedShuffleLobby& operator=(const CMsgBalancedShuffleLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBalancedShuffleLobby& default_instance();

  void Swap(CMsgBalancedShuffleLobby* other);

  // implements Message ----------------------------------------------

  CMsgBalancedShuffleLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBalancedShuffleLobby& from);
  void MergeFrom(const CMsgBalancedShuffleLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgBalancedShuffleLobby)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgBalancedShuffleLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgInitialQuestionnaireResponse : public ::google::protobuf::Message {
 public:
  CMsgInitialQuestionnaireResponse();
  virtual ~CMsgInitialQuestionnaireResponse();

  CMsgInitialQuestionnaireResponse(const CMsgInitialQuestionnaireResponse& from);

  inline CMsgInitialQuestionnaireResponse& operator=(const CMsgInitialQuestionnaireResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgInitialQuestionnaireResponse& default_instance();

  void Swap(CMsgInitialQuestionnaireResponse* other);

  // implements Message ----------------------------------------------

  CMsgInitialQuestionnaireResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgInitialQuestionnaireResponse& from);
  void MergeFrom(const CMsgInitialQuestionnaireResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 initial_skill = 1;
  inline bool has_initial_skill() const;
  inline void clear_initial_skill();
  static const int kInitialSkillFieldNumber = 1;
  inline ::google::protobuf::uint32 initial_skill() const;
  inline void set_initial_skill(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgInitialQuestionnaireResponse)
 private:
  inline void set_has_initial_skill();
  inline void clear_has_initial_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 initial_skill_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgInitialQuestionnaireResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPlayerMatchHistory : public ::google::protobuf::Message {
 public:
  CMsgDOTAPlayerMatchHistory();
  virtual ~CMsgDOTAPlayerMatchHistory();

  CMsgDOTAPlayerMatchHistory(const CMsgDOTAPlayerMatchHistory& from);

  inline CMsgDOTAPlayerMatchHistory& operator=(const CMsgDOTAPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPlayerMatchHistory& default_instance();

  void Swap(CMsgDOTAPlayerMatchHistory* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPlayerMatchHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAPlayerMatchHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  inline int match_ids_size() const;
  inline void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 match_ids(int index) const;
  inline void set_match_ids(int index, ::google::protobuf::uint64 value);
  inline void add_match_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:CMsgDOTAPlayerMatchHistory)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPlayerMatchHistory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchHistoryFilter : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchHistoryFilter();
  virtual ~CMsgDOTAMatchHistoryFilter();

  CMsgDOTAMatchHistoryFilter(const CMsgDOTAMatchHistoryFilter& from);

  inline CMsgDOTAMatchHistoryFilter& operator=(const CMsgDOTAMatchHistoryFilter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchHistoryFilter& default_instance();

  void Swap(CMsgDOTAMatchHistoryFilter* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchHistoryFilter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchHistoryFilter& from);
  void MergeFrom(const CMsgDOTAMatchHistoryFilter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  inline int match_ids_size() const;
  inline void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 match_ids(int index) const;
  inline void set_match_ids(int index, ::google::protobuf::uint64 value);
  inline void add_match_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // optional uint64 newest_match_id_at_last_query = 2;
  inline bool has_newest_match_id_at_last_query() const;
  inline void clear_newest_match_id_at_last_query();
  static const int kNewestMatchIdAtLastQueryFieldNumber = 2;
  inline ::google::protobuf::uint64 newest_match_id_at_last_query() const;
  inline void set_newest_match_id_at_last_query(::google::protobuf::uint64 value);

  // optional uint32 time_last_query = 3;
  inline bool has_time_last_query() const;
  inline void clear_time_last_query();
  static const int kTimeLastQueryFieldNumber = 3;
  inline ::google::protobuf::uint32 time_last_query() const;
  inline void set_time_last_query(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchHistoryFilter)
 private:
  inline void set_has_newest_match_id_at_last_query();
  inline void clear_has_newest_match_id_at_last_query();
  inline void set_has_time_last_query();
  inline void clear_has_time_last_query();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  ::google::protobuf::uint64 newest_match_id_at_last_query_;
  ::google::protobuf::uint32 time_last_query_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchHistoryFilter* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatches : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestMatches();
  virtual ~CMsgDOTARequestMatches();

  CMsgDOTARequestMatches(const CMsgDOTARequestMatches& from);

  inline CMsgDOTARequestMatches& operator=(const CMsgDOTARequestMatches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatches& default_instance();

  void Swap(CMsgDOTARequestMatches* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestMatches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestMatches& from);
  void MergeFrom(const CMsgDOTARequestMatches& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatches_SkillLevel SkillLevel;
  static const SkillLevel Any = CMsgDOTARequestMatches_SkillLevel_Any;
  static const SkillLevel Normal = CMsgDOTARequestMatches_SkillLevel_Normal;
  static const SkillLevel High = CMsgDOTARequestMatches_SkillLevel_High;
  static const SkillLevel VeryHigh = CMsgDOTARequestMatches_SkillLevel_VeryHigh;
  static inline bool SkillLevel_IsValid(int value) {
    return CMsgDOTARequestMatches_SkillLevel_IsValid(value);
  }
  static const SkillLevel SkillLevel_MIN =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN;
  static const SkillLevel SkillLevel_MAX =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX;
  static const int SkillLevel_ARRAYSIZE =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SkillLevel_descriptor() {
    return CMsgDOTARequestMatches_SkillLevel_descriptor();
  }
  static inline const ::std::string& SkillLevel_Name(SkillLevel value) {
    return CMsgDOTARequestMatches_SkillLevel_Name(value);
  }
  static inline bool SkillLevel_Parse(const ::std::string& name,
      SkillLevel* value) {
    return CMsgDOTARequestMatches_SkillLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 3;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 3;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // optional fixed32 date_min = 6;
  inline bool has_date_min() const;
  inline void clear_date_min();
  static const int kDateMinFieldNumber = 6;
  inline ::google::protobuf::uint32 date_min() const;
  inline void set_date_min(::google::protobuf::uint32 value);

  // optional fixed32 date_max = 7;
  inline bool has_date_max() const;
  inline void clear_date_max();
  static const int kDateMaxFieldNumber = 7;
  inline ::google::protobuf::uint32 date_max() const;
  inline void set_date_max(::google::protobuf::uint32 value);

  // optional uint32 matches_requested = 10;
  inline bool has_matches_requested() const;
  inline void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 10;
  inline ::google::protobuf::uint32 matches_requested() const;
  inline void set_matches_requested(::google::protobuf::uint32 value);

  // optional uint64 start_at_match_id = 11;
  inline bool has_start_at_match_id() const;
  inline void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 11;
  inline ::google::protobuf::uint64 start_at_match_id() const;
  inline void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional fixed32 min_players = 12;
  inline bool has_min_players() const;
  inline void clear_min_players();
  static const int kMinPlayersFieldNumber = 12;
  inline ::google::protobuf::uint32 min_players() const;
  inline void set_min_players(::google::protobuf::uint32 value);

  // optional uint32 request_id = 13;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 13;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // optional bool tournament_games_only = 14;
  inline bool has_tournament_games_only() const;
  inline void clear_tournament_games_only();
  static const int kTournamentGamesOnlyFieldNumber = 14;
  inline bool tournament_games_only() const;
  inline void set_tournament_games_only(bool value);

  // optional uint32 account_id = 15;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 15;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 16;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 16;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional .CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 17;
  inline ::CMsgDOTARequestMatches_SkillLevel skill() const;
  inline void set_skill(::CMsgDOTARequestMatches_SkillLevel value);

  // optional uint32 team_id = 18;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 18;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional uint64 custom_game_id = 20;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 20;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestMatches)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_date_min();
  inline void clear_has_date_min();
  inline void set_has_date_max();
  inline void clear_has_date_max();
  inline void set_has_matches_requested();
  inline void clear_has_matches_requested();
  inline void set_has_start_at_match_id();
  inline void clear_has_start_at_match_id();
  inline void set_has_min_players();
  inline void clear_has_min_players();
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_tournament_games_only();
  inline void clear_has_tournament_games_only();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::uint32 date_min_;
  ::google::protobuf::uint32 date_max_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 min_players_;
  ::google::protobuf::uint32 request_id_;
  bool tournament_games_only_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 league_id_;
  int skill_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestMatches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse_Series : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestMatchesResponse_Series();
  virtual ~CMsgDOTARequestMatchesResponse_Series();

  CMsgDOTARequestMatchesResponse_Series(const CMsgDOTARequestMatchesResponse_Series& from);

  inline CMsgDOTARequestMatchesResponse_Series& operator=(const CMsgDOTARequestMatchesResponse_Series& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatchesResponse_Series& default_instance();

  void Swap(CMsgDOTARequestMatchesResponse_Series* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestMatchesResponse_Series* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatch matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAMatch& matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_matches(int index);
  inline ::CMsgDOTAMatch* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_matches();

  // optional uint32 series_id = 2;
  inline bool has_series_id() const;
  inline void clear_series_id();
  static const int kSeriesIdFieldNumber = 2;
  inline ::google::protobuf::uint32 series_id() const;
  inline void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 series_type = 3;
  inline bool has_series_type() const;
  inline void clear_series_type();
  static const int kSeriesTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 series_type() const;
  inline void set_series_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestMatchesResponse.Series)
 private:
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_series_type();
  inline void clear_has_series_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > matches_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 series_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestMatchesResponse_Series* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestMatchesResponse();
  virtual ~CMsgDOTARequestMatchesResponse();

  CMsgDOTARequestMatchesResponse(const CMsgDOTARequestMatchesResponse& from);

  inline CMsgDOTARequestMatchesResponse& operator=(const CMsgDOTARequestMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatchesResponse& default_instance();

  void Swap(CMsgDOTARequestMatchesResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestMatchesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestMatchesResponse& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatchesResponse_Series Series;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatch matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAMatch& matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_matches(int index);
  inline ::CMsgDOTAMatch* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_matches();

  // repeated .CMsgDOTARequestMatchesResponse.Series series = 2;
  inline int series_size() const;
  inline void clear_series();
  static const int kSeriesFieldNumber = 2;
  inline const ::CMsgDOTARequestMatchesResponse_Series& series(int index) const;
  inline ::CMsgDOTARequestMatchesResponse_Series* mutable_series(int index);
  inline ::CMsgDOTARequestMatchesResponse_Series* add_series();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >&
      series() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >*
      mutable_series();

  // optional uint32 request_id = 3;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // optional uint32 total_results = 4;
  inline bool has_total_results() const;
  inline void clear_total_results();
  static const int kTotalResultsFieldNumber = 4;
  inline ::google::protobuf::uint32 total_results() const;
  inline void set_total_results(::google::protobuf::uint32 value);

  // optional uint32 results_remaining = 5;
  inline bool has_results_remaining() const;
  inline void clear_results_remaining();
  static const int kResultsRemainingFieldNumber = 5;
  inline ::google::protobuf::uint32 results_remaining() const;
  inline void set_results_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestMatchesResponse)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_total_results();
  inline void clear_has_total_results();
  inline void set_has_results_remaining();
  inline void clear_has_results_remaining();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > matches_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series > series_;
  ::google::protobuf::uint32 request_id_;
  ::google::protobuf::uint32 total_results_;
  ::google::protobuf::uint32 results_remaining_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestMatchesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPopup : public ::google::protobuf::Message {
 public:
  CMsgDOTAPopup();
  virtual ~CMsgDOTAPopup();

  CMsgDOTAPopup(const CMsgDOTAPopup& from);

  inline CMsgDOTAPopup& operator=(const CMsgDOTAPopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPopup& default_instance();

  void Swap(CMsgDOTAPopup* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPopup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPopup& from);
  void MergeFrom(const CMsgDOTAPopup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPopup_PopupID PopupID;
  static const PopupID NONE = CMsgDOTAPopup_PopupID_NONE;
  static const PopupID KICKED_FROM_LOBBY = CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY;
  static const PopupID KICKED_FROM_PARTY = CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY;
  static const PopupID KICKED_FROM_TEAM = CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM;
  static const PopupID TEAM_WAS_DISBANDED = CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED;
  static const PopupID TEAM_MATCHMAKE_ALREADY_MATCH = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH;
  static const PopupID TEAM_MATCHMAKE_ALREADY_FINDING = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING;
  static const PopupID TEAM_MATCHMAKE_FULL = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD_CURRENT = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT;
  static const PopupID TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER;
  static const PopupID TEAM_MATCHMAKE_ALREADY_GAME = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME;
  static const PopupID TEAM_MATCHMAKE_FAIL_GET_PARTY = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY;
  static const PopupID MATCHMAKING_DISABLED = CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED;
  static const PopupID INVITE_DENIED = CMsgDOTAPopup_PopupID_INVITE_DENIED;
  static const PopupID PARTY_FULL = CMsgDOTAPopup_PopupID_PARTY_FULL;
  static const PopupID MADE_ADMIN = CMsgDOTAPopup_PopupID_MADE_ADMIN;
  static const PopupID NEED_TO_PURCHASE = CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE;
  static const PopupID SIGNON_MESSAGE = CMsgDOTAPopup_PopupID_SIGNON_MESSAGE;
  static const PopupID GUILD_KICKED = CMsgDOTAPopup_PopupID_GUILD_KICKED;
  static const PopupID MATCHMAKING_REGION_OFFLINE = CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE;
  static const PopupID TOURNAMENT_GAME_NOT_FOUND = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND;
  static const PopupID TOURNAMENT_GAME_HAS_LOBBY_ID = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID;
  static const PopupID TOURNAMENT_GAME_HAS_MATCH_ID = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID;
  static const PopupID TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM;
  static const PopupID TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM;
  static const PopupID TOURNAMENT_GAME_SQL_UPDATE_FAILED = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED;
  static const PopupID NOT_LEAGUE_ADMIN = CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN;
  static const PopupID IN_ANOTHER_GAME = CMsgDOTAPopup_PopupID_IN_ANOTHER_GAME;
  static const PopupID PARTY_MEMBER_IN_ANOTHER_GAME = CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME;
  static const PopupID PARTY_MEMBER_IN_LOW_PRIORITY = CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY;
  static const PopupID CLIENT_OUT_OF_DATE = CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE;
  static const PopupID SAVE_GAME_CORRUPT = CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT;
  static const PopupID INSUFFICIENT_INGOTS = CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS;
  static const PopupID COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL;
  static const PopupID PARTY_LEADER_JOINED_LOBBY = CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY;
  static const PopupID WEEKEND_TOURNEY_UNMATCHED = CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED;
  static const PopupID POST_MATCH_SURVEY = CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY;
  static const PopupID TROPHY_AWARDED = CMsgDOTAPopup_PopupID_TROPHY_AWARDED;
  static const PopupID TROPHY_LEVEL_UP = CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP;
  static const PopupID ALL_HERO_CHALLENGE_PROGRESS = CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS;
  static const PopupID NEED_INITIAL_SKILL = CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL;
  static const PopupID NEED_INITIAL_SKILL_IN_PARTY = CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY;
  static const PopupID TARGET_ENGINE_MISMATCH = CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH;
  static const PopupID VAC_NOT_VERIFIED = CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED;
  static const PopupID KICKED_FROM_QUEUE_EVENT_STARTING = CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING;
  static const PopupID KICKED_FROM_QUEUE_EVENT_ENDING = CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING;
  static const PopupID LOBBY_FULL = CMsgDOTAPopup_PopupID_LOBBY_FULL;
  static const PopupID EVENT_POINTS_EARNED = CMsgDOTAPopup_PopupID_EVENT_POINTS_EARNED;
  static const PopupID CUSTOM_GAME_INCORRECT_VERSION = CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION;
  static const PopupID LIMITED_USER_CHAT = CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT;
  static const PopupID EVENT_PREMIUM_POINTS_EARNED = CMsgDOTAPopup_PopupID_EVENT_PREMIUM_POINTS_EARNED;
  static const PopupID LOBBY_MVP_AWARDED = CMsgDOTAPopup_PopupID_LOBBY_MVP_AWARDED;
  static const PopupID LOW_BADGE_LEVEL_CHAT = CMsgDOTAPopup_PopupID_LOW_BADGE_LEVEL_CHAT;
  static const PopupID GENERIC_INFO = CMsgDOTAPopup_PopupID_GENERIC_INFO;
  static const PopupID GENERIC_ERROR = CMsgDOTAPopup_PopupID_GENERIC_ERROR;
  static inline bool PopupID_IsValid(int value) {
    return CMsgDOTAPopup_PopupID_IsValid(value);
  }
  static const PopupID PopupID_MIN =
    CMsgDOTAPopup_PopupID_PopupID_MIN;
  static const PopupID PopupID_MAX =
    CMsgDOTAPopup_PopupID_PopupID_MAX;
  static const int PopupID_ARRAYSIZE =
    CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PopupID_descriptor() {
    return CMsgDOTAPopup_PopupID_descriptor();
  }
  static inline const ::std::string& PopupID_Name(PopupID value) {
    return CMsgDOTAPopup_PopupID_Name(value);
  }
  static inline bool PopupID_Parse(const ::std::string& name,
      PopupID* value) {
    return CMsgDOTAPopup_PopupID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAPopup.PopupID id = 1 [default = NONE];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::CMsgDOTAPopup_PopupID id() const;
  inline void set_id(::CMsgDOTAPopup_PopupID value);

  // optional string custom_text = 2;
  inline bool has_custom_text() const;
  inline void clear_custom_text();
  static const int kCustomTextFieldNumber = 2;
  inline const ::std::string& custom_text() const;
  inline void set_custom_text(const ::std::string& value);
  inline void set_custom_text(const char* value);
  inline void set_custom_text(const char* value, size_t size);
  inline ::std::string* mutable_custom_text();
  inline ::std::string* release_custom_text();
  inline void set_allocated_custom_text(::std::string* custom_text);

  // optional sint32 int_data = 3;
  inline bool has_int_data() const;
  inline void clear_int_data();
  static const int kIntDataFieldNumber = 3;
  inline ::google::protobuf::int32 int_data() const;
  inline void set_int_data(::google::protobuf::int32 value);

  // optional bytes popup_data = 4;
  inline bool has_popup_data() const;
  inline void clear_popup_data();
  static const int kPopupDataFieldNumber = 4;
  inline const ::std::string& popup_data() const;
  inline void set_popup_data(const ::std::string& value);
  inline void set_popup_data(const char* value);
  inline void set_popup_data(const void* value, size_t size);
  inline ::std::string* mutable_popup_data();
  inline ::std::string* release_popup_data();
  inline void set_allocated_popup_data(::std::string* popup_data);

  // optional string loc_token_header = 5;
  inline bool has_loc_token_header() const;
  inline void clear_loc_token_header();
  static const int kLocTokenHeaderFieldNumber = 5;
  inline const ::std::string& loc_token_header() const;
  inline void set_loc_token_header(const ::std::string& value);
  inline void set_loc_token_header(const char* value);
  inline void set_loc_token_header(const char* value, size_t size);
  inline ::std::string* mutable_loc_token_header();
  inline ::std::string* release_loc_token_header();
  inline void set_allocated_loc_token_header(::std::string* loc_token_header);

  // optional string loc_token_msg = 6;
  inline bool has_loc_token_msg() const;
  inline void clear_loc_token_msg();
  static const int kLocTokenMsgFieldNumber = 6;
  inline const ::std::string& loc_token_msg() const;
  inline void set_loc_token_msg(const ::std::string& value);
  inline void set_loc_token_msg(const char* value);
  inline void set_loc_token_msg(const char* value, size_t size);
  inline ::std::string* mutable_loc_token_msg();
  inline ::std::string* release_loc_token_msg();
  inline void set_allocated_loc_token_msg(::std::string* loc_token_msg);

  // repeated string var_names = 7;
  inline int var_names_size() const;
  inline void clear_var_names();
  static const int kVarNamesFieldNumber = 7;
  inline const ::std::string& var_names(int index) const;
  inline ::std::string* mutable_var_names(int index);
  inline void set_var_names(int index, const ::std::string& value);
  inline void set_var_names(int index, const char* value);
  inline void set_var_names(int index, const char* value, size_t size);
  inline ::std::string* add_var_names();
  inline void add_var_names(const ::std::string& value);
  inline void add_var_names(const char* value);
  inline void add_var_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& var_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_var_names();

  // repeated string var_values = 8;
  inline int var_values_size() const;
  inline void clear_var_values();
  static const int kVarValuesFieldNumber = 8;
  inline const ::std::string& var_values(int index) const;
  inline ::std::string* mutable_var_values(int index);
  inline void set_var_values(int index, const ::std::string& value);
  inline void set_var_values(int index, const char* value);
  inline void set_var_values(int index, const char* value, size_t size);
  inline ::std::string* add_var_values();
  inline void add_var_values(const ::std::string& value);
  inline void add_var_values(const char* value);
  inline void add_var_values(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& var_values() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_var_values();

  // optional string debug_text = 9;
  inline bool has_debug_text() const;
  inline void clear_debug_text();
  static const int kDebugTextFieldNumber = 9;
  inline const ::std::string& debug_text() const;
  inline void set_debug_text(const ::std::string& value);
  inline void set_debug_text(const char* value);
  inline void set_debug_text(const char* value, size_t size);
  inline ::std::string* mutable_debug_text();
  inline ::std::string* release_debug_text();
  inline void set_allocated_debug_text(::std::string* debug_text);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPopup)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_custom_text();
  inline void clear_has_custom_text();
  inline void set_has_int_data();
  inline void clear_has_int_data();
  inline void set_has_popup_data();
  inline void clear_has_popup_data();
  inline void set_has_loc_token_header();
  inline void clear_has_loc_token_header();
  inline void set_has_loc_token_msg();
  inline void clear_has_loc_token_msg();
  inline void set_has_debug_text();
  inline void clear_has_debug_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* custom_text_;
  int id_;
  ::google::protobuf::int32 int_data_;
  ::std::string* popup_data_;
  ::std::string* loc_token_header_;
  ::std::string* loc_token_msg_;
  ::google::protobuf::RepeatedPtrField< ::std::string> var_names_;
  ::google::protobuf::RepeatedPtrField< ::std::string> var_values_;
  ::std::string* debug_text_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPopup* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportsRemainingRequest();
  virtual ~CMsgDOTAReportsRemainingRequest();

  CMsgDOTAReportsRemainingRequest(const CMsgDOTAReportsRemainingRequest& from);

  inline CMsgDOTAReportsRemainingRequest& operator=(const CMsgDOTAReportsRemainingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportsRemainingRequest& default_instance();

  void Swap(CMsgDOTAReportsRemainingRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportsRemainingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportsRemainingRequest& from);
  void MergeFrom(const CMsgDOTAReportsRemainingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportsRemainingRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportsRemainingRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportsRemainingResponse();
  virtual ~CMsgDOTAReportsRemainingResponse();

  CMsgDOTAReportsRemainingResponse(const CMsgDOTAReportsRemainingResponse& from);

  inline CMsgDOTAReportsRemainingResponse& operator=(const CMsgDOTAReportsRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportsRemainingResponse& default_instance();

  void Swap(CMsgDOTAReportsRemainingResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportsRemainingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportsRemainingResponse& from);
  void MergeFrom(const CMsgDOTAReportsRemainingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_positive_reports_remaining = 1;
  inline bool has_num_positive_reports_remaining() const;
  inline void clear_num_positive_reports_remaining();
  static const int kNumPositiveReportsRemainingFieldNumber = 1;
  inline ::google::protobuf::uint32 num_positive_reports_remaining() const;
  inline void set_num_positive_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_remaining = 2;
  inline bool has_num_negative_reports_remaining() const;
  inline void clear_num_negative_reports_remaining();
  static const int kNumNegativeReportsRemainingFieldNumber = 2;
  inline ::google::protobuf::uint32 num_negative_reports_remaining() const;
  inline void set_num_negative_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_positive_reports_total = 3;
  inline bool has_num_positive_reports_total() const;
  inline void clear_num_positive_reports_total();
  static const int kNumPositiveReportsTotalFieldNumber = 3;
  inline ::google::protobuf::uint32 num_positive_reports_total() const;
  inline void set_num_positive_reports_total(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_total = 4;
  inline bool has_num_negative_reports_total() const;
  inline void clear_num_negative_reports_total();
  static const int kNumNegativeReportsTotalFieldNumber = 4;
  inline ::google::protobuf::uint32 num_negative_reports_total() const;
  inline void set_num_negative_reports_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportsRemainingResponse)
 private:
  inline void set_has_num_positive_reports_remaining();
  inline void clear_has_num_positive_reports_remaining();
  inline void set_has_num_negative_reports_remaining();
  inline void clear_has_num_negative_reports_remaining();
  inline void set_has_num_positive_reports_total();
  inline void clear_has_num_positive_reports_total();
  inline void set_has_num_negative_reports_total();
  inline void clear_has_num_negative_reports_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_positive_reports_remaining_;
  ::google::protobuf::uint32 num_negative_reports_remaining_;
  ::google::protobuf::uint32 num_positive_reports_total_;
  ::google::protobuf::uint32 num_negative_reports_total_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportsRemainingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReport : public ::google::protobuf::Message {
 public:
  CMsgDOTASubmitPlayerReport();
  virtual ~CMsgDOTASubmitPlayerReport();

  CMsgDOTASubmitPlayerReport(const CMsgDOTASubmitPlayerReport& from);

  inline CMsgDOTASubmitPlayerReport& operator=(const CMsgDOTASubmitPlayerReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitPlayerReport& default_instance();

  void Swap(CMsgDOTASubmitPlayerReport* other);

  // implements Message ----------------------------------------------

  CMsgDOTASubmitPlayerReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASubmitPlayerReport& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  inline bool has_report_flags() const;
  inline void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 report_flags() const;
  inline void set_report_flags(::google::protobuf::uint32 value);

  // optional uint64 lobby_id = 4;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional string comment = 5;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 5;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgDOTASubmitPlayerReport)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_report_flags();
  inline void clear_has_report_flags();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::google::protobuf::uint64 lobby_id_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASubmitPlayerReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReportResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTASubmitPlayerReportResponse();
  virtual ~CMsgDOTASubmitPlayerReportResponse();

  CMsgDOTASubmitPlayerReportResponse(const CMsgDOTASubmitPlayerReportResponse& from);

  inline CMsgDOTASubmitPlayerReportResponse& operator=(const CMsgDOTASubmitPlayerReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitPlayerReportResponse& default_instance();

  void Swap(CMsgDOTASubmitPlayerReportResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTASubmitPlayerReportResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  inline bool has_report_flags() const;
  inline void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 report_flags() const;
  inline void set_report_flags(::google::protobuf::uint32 value);

  // optional uint32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string debug_message = 4;
  inline bool has_debug_message() const;
  inline void clear_debug_message();
  static const int kDebugMessageFieldNumber = 4;
  inline const ::std::string& debug_message() const;
  inline void set_debug_message(const ::std::string& value);
  inline void set_debug_message(const char* value);
  inline void set_debug_message(const char* value, size_t size);
  inline ::std::string* mutable_debug_message();
  inline ::std::string* release_debug_message();
  inline void set_allocated_debug_message(::std::string* debug_message);

  // @@protoc_insertion_point(class_scope:CMsgDOTASubmitPlayerReportResponse)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_report_flags();
  inline void clear_has_report_flags();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_debug_message();
  inline void clear_has_debug_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::std::string* debug_message_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASubmitPlayerReportResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportCountsRequest();
  virtual ~CMsgDOTAReportCountsRequest();

  CMsgDOTAReportCountsRequest(const CMsgDOTAReportCountsRequest& from);

  inline CMsgDOTAReportCountsRequest& operator=(const CMsgDOTAReportCountsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportCountsRequest& default_instance();

  void Swap(CMsgDOTAReportCountsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportCountsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportCountsRequest& from);
  void MergeFrom(const CMsgDOTAReportCountsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportCountsRequest)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportCountsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportCountsResponse();
  virtual ~CMsgDOTAReportCountsResponse();

  CMsgDOTAReportCountsResponse(const CMsgDOTAReportCountsResponse& from);

  inline CMsgDOTAReportCountsResponse& operator=(const CMsgDOTAReportCountsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportCountsResponse& default_instance();

  void Swap(CMsgDOTAReportCountsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportCountsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportCountsResponse& from);
  void MergeFrom(const CMsgDOTAReportCountsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 leadership_count = 2;
  inline bool has_leadership_count() const;
  inline void clear_leadership_count();
  static const int kLeadershipCountFieldNumber = 2;
  inline ::google::protobuf::uint32 leadership_count() const;
  inline void set_leadership_count(::google::protobuf::uint32 value);

  // optional uint32 teaching_count = 3;
  inline bool has_teaching_count() const;
  inline void clear_teaching_count();
  static const int kTeachingCountFieldNumber = 3;
  inline ::google::protobuf::uint32 teaching_count() const;
  inline void set_teaching_count(::google::protobuf::uint32 value);

  // optional uint32 friendly_count = 4;
  inline bool has_friendly_count() const;
  inline void clear_friendly_count();
  static const int kFriendlyCountFieldNumber = 4;
  inline ::google::protobuf::uint32 friendly_count() const;
  inline void set_friendly_count(::google::protobuf::uint32 value);

  // optional uint32 forgiving_count = 5;
  inline bool has_forgiving_count() const;
  inline void clear_forgiving_count();
  static const int kForgivingCountFieldNumber = 5;
  inline ::google::protobuf::uint32 forgiving_count() const;
  inline void set_forgiving_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportCountsResponse)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_leadership_count();
  inline void clear_has_leadership_count();
  inline void set_has_teaching_count();
  inline void clear_has_teaching_count();
  inline void set_has_friendly_count();
  inline void clear_has_friendly_count();
  inline void set_has_forgiving_count();
  inline void clear_has_forgiving_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 leadership_count_;
  ::google::protobuf::uint32 teaching_count_;
  ::google::protobuf::uint32 friendly_count_;
  ::google::protobuf::uint32 forgiving_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportCountsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitLobbyMVPVote : public ::google::protobuf::Message {
 public:
  CMsgDOTASubmitLobbyMVPVote();
  virtual ~CMsgDOTASubmitLobbyMVPVote();

  CMsgDOTASubmitLobbyMVPVote(const CMsgDOTASubmitLobbyMVPVote& from);

  inline CMsgDOTASubmitLobbyMVPVote& operator=(const CMsgDOTASubmitLobbyMVPVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitLobbyMVPVote& default_instance();

  void Swap(CMsgDOTASubmitLobbyMVPVote* other);

  // implements Message ----------------------------------------------

  CMsgDOTASubmitLobbyMVPVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASubmitLobbyMVPVote& from);
  void MergeFrom(const CMsgDOTASubmitLobbyMVPVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASubmitLobbyMVPVote)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASubmitLobbyMVPVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitLobbyMVPVoteResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTASubmitLobbyMVPVoteResponse();
  virtual ~CMsgDOTASubmitLobbyMVPVoteResponse();

  CMsgDOTASubmitLobbyMVPVoteResponse(const CMsgDOTASubmitLobbyMVPVoteResponse& from);

  inline CMsgDOTASubmitLobbyMVPVoteResponse& operator=(const CMsgDOTASubmitLobbyMVPVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitLobbyMVPVoteResponse& default_instance();

  void Swap(CMsgDOTASubmitLobbyMVPVoteResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTASubmitLobbyMVPVoteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASubmitLobbyMVPVoteResponse& from);
  void MergeFrom(const CMsgDOTASubmitLobbyMVPVoteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASubmitLobbyMVPVoteResponse)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASubmitLobbyMVPVoteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyMVPNotifyRecipient : public ::google::protobuf::Message {
 public:
  CMsgDOTALobbyMVPNotifyRecipient();
  virtual ~CMsgDOTALobbyMVPNotifyRecipient();

  CMsgDOTALobbyMVPNotifyRecipient(const CMsgDOTALobbyMVPNotifyRecipient& from);

  inline CMsgDOTALobbyMVPNotifyRecipient& operator=(const CMsgDOTALobbyMVPNotifyRecipient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALobbyMVPNotifyRecipient& default_instance();

  void Swap(CMsgDOTALobbyMVPNotifyRecipient* other);

  // implements Message ----------------------------------------------

  CMsgDOTALobbyMVPNotifyRecipient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALobbyMVPNotifyRecipient& from);
  void MergeFrom(const CMsgDOTALobbyMVPNotifyRecipient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 voter_account_id = 1;
  inline bool has_voter_account_id() const;
  inline void clear_voter_account_id();
  static const int kVoterAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 voter_account_id() const;
  inline void set_voter_account_id(::google::protobuf::uint32 value);

  // optional uint32 recipient_account_id = 2;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 num_votes = 3;
  inline bool has_num_votes() const;
  inline void clear_num_votes();
  static const int kNumVotesFieldNumber = 3;
  inline ::google::protobuf::uint32 num_votes() const;
  inline void set_num_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALobbyMVPNotifyRecipient)
 private:
  inline void set_has_voter_account_id();
  inline void clear_has_voter_account_id();
  inline void set_has_recipient_account_id();
  inline void clear_has_recipient_account_id();
  inline void set_has_num_votes();
  inline void clear_has_num_votes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 voter_account_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 num_votes_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALobbyMVPNotifyRecipient* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyMVPAwarded : public ::google::protobuf::Message {
 public:
  CMsgDOTALobbyMVPAwarded();
  virtual ~CMsgDOTALobbyMVPAwarded();

  CMsgDOTALobbyMVPAwarded(const CMsgDOTALobbyMVPAwarded& from);

  inline CMsgDOTALobbyMVPAwarded& operator=(const CMsgDOTALobbyMVPAwarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALobbyMVPAwarded& default_instance();

  void Swap(CMsgDOTALobbyMVPAwarded* other);

  // implements Message ----------------------------------------------

  CMsgDOTALobbyMVPAwarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALobbyMVPAwarded& from);
  void MergeFrom(const CMsgDOTALobbyMVPAwarded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mvp_account_id = 1;
  inline bool has_mvp_account_id() const;
  inline void clear_mvp_account_id();
  static const int kMvpAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mvp_account_id() const;
  inline void set_mvp_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALobbyMVPAwarded)
 private:
  inline void set_has_mvp_account_id();
  inline void clear_has_mvp_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mvp_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALobbyMVPAwarded* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAKickedFromMatchmakingQueue : public ::google::protobuf::Message {
 public:
  CMsgDOTAKickedFromMatchmakingQueue();
  virtual ~CMsgDOTAKickedFromMatchmakingQueue();

  CMsgDOTAKickedFromMatchmakingQueue(const CMsgDOTAKickedFromMatchmakingQueue& from);

  inline CMsgDOTAKickedFromMatchmakingQueue& operator=(const CMsgDOTAKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAKickedFromMatchmakingQueue& default_instance();

  void Swap(CMsgDOTAKickedFromMatchmakingQueue* other);

  // implements Message ----------------------------------------------

  CMsgDOTAKickedFromMatchmakingQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  inline ::MatchType match_type() const;
  inline void set_match_type(::MatchType value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAKickedFromMatchmakingQueue)
 private:
  inline void set_has_match_type();
  inline void clear_has_match_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int match_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAKickedFromMatchmakingQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGames : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestSaveGames();
  virtual ~CMsgDOTARequestSaveGames();

  CMsgDOTARequestSaveGames(const CMsgDOTARequestSaveGames& from);

  inline CMsgDOTARequestSaveGames& operator=(const CMsgDOTARequestSaveGames& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestSaveGames& default_instance();

  void Swap(CMsgDOTARequestSaveGames* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestSaveGames* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestSaveGames& from);
  void MergeFrom(const CMsgDOTARequestSaveGames& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestSaveGames)
 private:
  inline void set_has_server_region();
  inline void clear_has_server_region();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_region_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestSaveGames* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGamesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestSaveGamesResponse();
  virtual ~CMsgDOTARequestSaveGamesResponse();

  CMsgDOTARequestSaveGamesResponse(const CMsgDOTARequestSaveGamesResponse& from);

  inline CMsgDOTARequestSaveGamesResponse& operator=(const CMsgDOTARequestSaveGamesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestSaveGamesResponse& default_instance();

  void Swap(CMsgDOTARequestSaveGamesResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestSaveGamesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestSaveGamesResponse& from);
  void MergeFrom(const CMsgDOTARequestSaveGamesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // repeated .CDOTASaveGame save_games = 2;
  inline int save_games_size() const;
  inline void clear_save_games();
  static const int kSaveGamesFieldNumber = 2;
  inline const ::CDOTASaveGame& save_games(int index) const;
  inline ::CDOTASaveGame* mutable_save_games(int index);
  inline ::CDOTASaveGame* add_save_games();
  inline const ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >&
      save_games() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >*
      mutable_save_games();

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestSaveGamesResponse)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame > save_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestSaveGamesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsRequest : public ::google::protobuf::Message {
 public:
  CMsgGCMatchDetailsRequest();
  virtual ~CMsgGCMatchDetailsRequest();

  CMsgGCMatchDetailsRequest(const CMsgGCMatchDetailsRequest& from);

  inline CMsgGCMatchDetailsRequest& operator=(const CMsgGCMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchDetailsRequest& default_instance();

  void Swap(CMsgGCMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCMatchDetailsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchDetailsRequest& from);
  void MergeFrom(const CMsgGCMatchDetailsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMatchDetailsRequest)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMatchDetailsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCMatchDetailsResponse();
  virtual ~CMsgGCMatchDetailsResponse();

  CMsgGCMatchDetailsResponse(const CMsgGCMatchDetailsResponse& from);

  inline CMsgGCMatchDetailsResponse& operator=(const CMsgGCMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchDetailsResponse& default_instance();

  void Swap(CMsgGCMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCMatchDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCMatchDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .CMsgDOTAMatch match = 2;
  inline bool has_match() const;
  inline void clear_match();
  static const int kMatchFieldNumber = 2;
  inline const ::CMsgDOTAMatch& match() const;
  inline ::CMsgDOTAMatch* mutable_match();
  inline ::CMsgDOTAMatch* release_match();
  inline void set_allocated_match(::CMsgDOTAMatch* match);

  // optional .DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 3;
  inline ::DOTAMatchVote vote() const;
  inline void set_vote(::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:CMsgGCMatchDetailsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_match();
  inline void clear_has_match();
  inline void set_has_vote();
  inline void clear_has_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 result_;
  int vote_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMatchDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchDetailsRequest : public ::google::protobuf::Message {
 public:
  CMsgServerToGCMatchDetailsRequest();
  virtual ~CMsgServerToGCMatchDetailsRequest();

  CMsgServerToGCMatchDetailsRequest(const CMsgServerToGCMatchDetailsRequest& from);

  inline CMsgServerToGCMatchDetailsRequest& operator=(const CMsgServerToGCMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCMatchDetailsRequest& default_instance();

  void Swap(CMsgServerToGCMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  CMsgServerToGCMatchDetailsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCMatchDetailsRequest& from);
  void MergeFrom(const CMsgServerToGCMatchDetailsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  inline int match_ids_size() const;
  inline void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 match_ids(int index) const;
  inline void set_match_ids(int index, ::google::protobuf::uint64 value);
  inline void add_match_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:CMsgServerToGCMatchDetailsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCMatchDetailsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerMatchDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToServerMatchDetailsResponse();
  virtual ~CMsgGCToServerMatchDetailsResponse();

  CMsgGCToServerMatchDetailsResponse(const CMsgGCToServerMatchDetailsResponse& from);

  inline CMsgGCToServerMatchDetailsResponse& operator=(const CMsgGCToServerMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerMatchDetailsResponse& default_instance();

  void Swap(CMsgGCToServerMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToServerMatchDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCToServerMatchDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatch matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAMatch& matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_matches(int index);
  inline ::CMsgDOTAMatch* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_matches();

  // @@protoc_insertion_point(class_scope:CMsgGCToServerMatchDetailsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > matches_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerMatchDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileRequest();
  virtual ~CMsgDOTAProfileRequest();

  CMsgDOTAProfileRequest(const CMsgDOTAProfileRequest& from);

  inline CMsgDOTAProfileRequest& operator=(const CMsgDOTAProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileRequest& default_instance();

  void Swap(CMsgDOTAProfileRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileRequest& from);
  void MergeFrom(const CMsgDOTAProfileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bool request_name = 2;
  inline bool has_request_name() const;
  inline void clear_request_name();
  static const int kRequestNameFieldNumber = 2;
  inline bool request_name() const;
  inline void set_request_name(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_request_name();
  inline void clear_has_request_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  bool request_name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_PlayedHero : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_PlayedHero();
  virtual ~CMsgDOTAProfileResponse_PlayedHero();

  CMsgDOTAProfileResponse_PlayedHero(const CMsgDOTAProfileResponse_PlayedHero& from);

  inline CMsgDOTAProfileResponse_PlayedHero& operator=(const CMsgDOTAProfileResponse_PlayedHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_PlayedHero& default_instance();

  void Swap(CMsgDOTAProfileResponse_PlayedHero* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_PlayedHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_PlayedHero& from);
  void MergeFrom(const CMsgDOTAProfileResponse_PlayedHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 wins = 2;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 wins() const;
  inline void set_wins(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.PlayedHero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_wins();
  inline void clear_has_wins();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 wins_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_PlayedHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_ShowcaseHero : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_ShowcaseHero();
  virtual ~CMsgDOTAProfileResponse_ShowcaseHero();

  CMsgDOTAProfileResponse_ShowcaseHero(const CMsgDOTAProfileResponse_ShowcaseHero& from);

  inline CMsgDOTAProfileResponse_ShowcaseHero& operator=(const CMsgDOTAProfileResponse_ShowcaseHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_ShowcaseHero& default_instance();

  void Swap(CMsgDOTAProfileResponse_ShowcaseHero* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_ShowcaseHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_ShowcaseHero& from);
  void MergeFrom(const CMsgDOTAProfileResponse_ShowcaseHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // repeated bytes object_data = 2;
  inline int object_data_size() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data(int index) const;
  inline ::std::string* mutable_object_data(int index);
  inline void set_object_data(int index, const ::std::string& value);
  inline void set_object_data(int index, const char* value);
  inline void set_object_data(int index, const void* value, size_t size);
  inline ::std::string* add_object_data();
  inline void add_object_data(const ::std::string& value);
  inline void add_object_data(const char* value);
  inline void add_object_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.ShowcaseHero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_ShowcaseHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_LeaguePass : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_LeaguePass();
  virtual ~CMsgDOTAProfileResponse_LeaguePass();

  CMsgDOTAProfileResponse_LeaguePass(const CMsgDOTAProfileResponse_LeaguePass& from);

  inline CMsgDOTAProfileResponse_LeaguePass& operator=(const CMsgDOTAProfileResponse_LeaguePass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_LeaguePass& default_instance();

  void Swap(CMsgDOTAProfileResponse_LeaguePass* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_LeaguePass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_LeaguePass& from);
  void MergeFrom(const CMsgDOTAProfileResponse_LeaguePass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.LeaguePass)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_item_def();
  inline void clear_has_item_def();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_LeaguePass* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_EventTicket : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_EventTicket();
  virtual ~CMsgDOTAProfileResponse_EventTicket();

  CMsgDOTAProfileResponse_EventTicket(const CMsgDOTAProfileResponse_EventTicket& from);

  inline CMsgDOTAProfileResponse_EventTicket& operator=(const CMsgDOTAProfileResponse_EventTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_EventTicket& default_instance();

  void Swap(CMsgDOTAProfileResponse_EventTicket* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_EventTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_EventTicket& from);
  void MergeFrom(const CMsgDOTAProfileResponse_EventTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.EventTicket)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_EventTicket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_FeaturedItem : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_FeaturedItem();
  virtual ~CMsgDOTAProfileResponse_FeaturedItem();

  CMsgDOTAProfileResponse_FeaturedItem(const CMsgDOTAProfileResponse_FeaturedItem& from);

  inline CMsgDOTAProfileResponse_FeaturedItem& operator=(const CMsgDOTAProfileResponse_FeaturedItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_FeaturedItem& default_instance();

  void Swap(CMsgDOTAProfileResponse_FeaturedItem* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_FeaturedItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_FeaturedItem& from);
  void MergeFrom(const CMsgDOTAProfileResponse_FeaturedItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional bytes object_data = 2;
  inline bool has_object_data() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data() const;
  inline void set_object_data(const ::std::string& value);
  inline void set_object_data(const char* value);
  inline void set_object_data(const void* value, size_t size);
  inline ::std::string* mutable_object_data();
  inline ::std::string* release_object_data();
  inline void set_allocated_object_data(::std::string* object_data);

  // optional uint32 slot_index = 3;
  inline bool has_slot_index() const;
  inline void clear_slot_index();
  static const int kSlotIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 slot_index() const;
  inline void set_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.FeaturedItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_object_data();
  inline void clear_has_object_data();
  inline void set_has_slot_index();
  inline void clear_has_slot_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::std::string* object_data_;
  ::google::protobuf::uint32 slot_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_FeaturedItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse();
  virtual ~CMsgDOTAProfileResponse();

  CMsgDOTAProfileResponse(const CMsgDOTAProfileResponse& from);

  inline CMsgDOTAProfileResponse& operator=(const CMsgDOTAProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse& default_instance();

  void Swap(CMsgDOTAProfileResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse& from);
  void MergeFrom(const CMsgDOTAProfileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAProfileResponse_PlayedHero PlayedHero;
  typedef CMsgDOTAProfileResponse_ShowcaseHero ShowcaseHero;
  typedef CMsgDOTAProfileResponse_LeaguePass LeaguePass;
  typedef CMsgDOTAProfileResponse_EventTicket EventTicket;
  typedef CMsgDOTAProfileResponse_FeaturedItem FeaturedItem;

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .CSODOTAGameAccountClient game_account_client = 2;
  inline bool has_game_account_client() const;
  inline void clear_game_account_client();
  static const int kGameAccountClientFieldNumber = 2;
  inline const ::CSODOTAGameAccountClient& game_account_client() const;
  inline ::CSODOTAGameAccountClient* mutable_game_account_client();
  inline ::CSODOTAGameAccountClient* release_game_account_client();
  inline void set_allocated_game_account_client(::CSODOTAGameAccountClient* game_account_client);

  // repeated .CMsgDOTAMatch latest_matches = 3;
  inline int latest_matches_size() const;
  inline void clear_latest_matches();
  static const int kLatestMatchesFieldNumber = 3;
  inline const ::CMsgDOTAMatch& latest_matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_latest_matches(int index);
  inline ::CMsgDOTAMatch* add_latest_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      latest_matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_latest_matches();

  // repeated .CMsgDOTAProfileResponse.PlayedHero heroes = 4;
  inline int heroes_size() const;
  inline void clear_heroes();
  static const int kHeroesFieldNumber = 4;
  inline const ::CMsgDOTAProfileResponse_PlayedHero& heroes(int index) const;
  inline ::CMsgDOTAProfileResponse_PlayedHero* mutable_heroes(int index);
  inline ::CMsgDOTAProfileResponse_PlayedHero* add_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >&
      heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >*
      mutable_heroes();

  // optional string player_name = 5;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 5;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // optional string team_name = 6;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 6;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional string team_tag = 7;
  inline bool has_team_tag() const;
  inline void clear_team_tag();
  static const int kTeamTagFieldNumber = 7;
  inline const ::std::string& team_tag() const;
  inline void set_team_tag(const ::std::string& value);
  inline void set_team_tag(const char* value);
  inline void set_team_tag(const char* value, size_t size);
  inline ::std::string* mutable_team_tag();
  inline ::std::string* release_team_tag();
  inline void set_allocated_team_tag(::std::string* team_tag);

  // optional uint64 team_logo = 8;
  inline bool has_team_logo() const;
  inline void clear_team_logo();
  static const int kTeamLogoFieldNumber = 8;
  inline ::google::protobuf::uint64 team_logo() const;
  inline void set_team_logo(::google::protobuf::uint64 value);

  // optional .CMsgDOTAProfileResponse.ShowcaseHero showcase_hero = 9;
  inline bool has_showcase_hero() const;
  inline void clear_showcase_hero();
  static const int kShowcaseHeroFieldNumber = 9;
  inline const ::CMsgDOTAProfileResponse_ShowcaseHero& showcase_hero() const;
  inline ::CMsgDOTAProfileResponse_ShowcaseHero* mutable_showcase_hero();
  inline ::CMsgDOTAProfileResponse_ShowcaseHero* release_showcase_hero();
  inline void set_allocated_showcase_hero(::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero);

  // repeated .CMsgDOTAProfileResponse.LeaguePass league_passes = 10;
  inline int league_passes_size() const;
  inline void clear_league_passes();
  static const int kLeaguePassesFieldNumber = 10;
  inline const ::CMsgDOTAProfileResponse_LeaguePass& league_passes(int index) const;
  inline ::CMsgDOTAProfileResponse_LeaguePass* mutable_league_passes(int index);
  inline ::CMsgDOTAProfileResponse_LeaguePass* add_league_passes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >&
      league_passes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >*
      mutable_league_passes();

  // repeated .CMsgDOTAProfileResponse.EventTicket event_tickets = 11;
  inline int event_tickets_size() const;
  inline void clear_event_tickets();
  static const int kEventTicketsFieldNumber = 11;
  inline const ::CMsgDOTAProfileResponse_EventTicket& event_tickets(int index) const;
  inline ::CMsgDOTAProfileResponse_EventTicket* mutable_event_tickets(int index);
  inline ::CMsgDOTAProfileResponse_EventTicket* add_event_tickets();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >&
      event_tickets() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >*
      mutable_event_tickets();

  // optional uint32 team_id = 12;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 12;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional bool has_passport = 13;
  inline bool has_has_passport() const;
  inline void clear_has_passport();
  static const int kHasPassportFieldNumber = 13;
  inline bool has_passport() const;
  inline void set_has_passport(bool value);

  // repeated .CMsgDOTAProfileResponse.FeaturedItem featured_items = 14;
  inline int featured_items_size() const;
  inline void clear_featured_items();
  static const int kFeaturedItemsFieldNumber = 14;
  inline const ::CMsgDOTAProfileResponse_FeaturedItem& featured_items(int index) const;
  inline ::CMsgDOTAProfileResponse_FeaturedItem* mutable_featured_items(int index);
  inline ::CMsgDOTAProfileResponse_FeaturedItem* add_featured_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >&
      featured_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >*
      mutable_featured_items();

  // optional uint32 abandon_percent = 15;
  inline bool has_abandon_percent() const;
  inline void clear_abandon_percent();
  static const int kAbandonPercentFieldNumber = 15;
  inline ::google::protobuf::uint32 abandon_percent() const;
  inline void set_abandon_percent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_game_account_client();
  inline void clear_has_game_account_client();
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_team_tag();
  inline void clear_has_team_tag();
  inline void set_has_team_logo();
  inline void clear_has_team_logo();
  inline void set_has_showcase_hero();
  inline void clear_has_showcase_hero();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_has_passport();
  inline void clear_has_has_passport();
  inline void set_has_abandon_percent();
  inline void clear_has_abandon_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CSODOTAGameAccountClient* game_account_client_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > latest_matches_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero > heroes_;
  ::std::string* player_name_;
  ::std::string* team_name_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 team_id_;
  ::std::string* team_tag_;
  ::google::protobuf::uint64 team_logo_;
  ::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass > league_passes_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket > event_tickets_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem > featured_items_;
  bool has_passport_;
  ::google::protobuf::uint32 abandon_percent_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets_LeaguePass : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileTickets_LeaguePass();
  virtual ~CMsgDOTAProfileTickets_LeaguePass();

  CMsgDOTAProfileTickets_LeaguePass(const CMsgDOTAProfileTickets_LeaguePass& from);

  inline CMsgDOTAProfileTickets_LeaguePass& operator=(const CMsgDOTAProfileTickets_LeaguePass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileTickets_LeaguePass& default_instance();

  void Swap(CMsgDOTAProfileTickets_LeaguePass* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileTickets_LeaguePass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileTickets_LeaguePass& from);
  void MergeFrom(const CMsgDOTAProfileTickets_LeaguePass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileTickets.LeaguePass)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_item_def();
  inline void clear_has_item_def();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileTickets_LeaguePass* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets_EventTicket : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileTickets_EventTicket();
  virtual ~CMsgDOTAProfileTickets_EventTicket();

  CMsgDOTAProfileTickets_EventTicket(const CMsgDOTAProfileTickets_EventTicket& from);

  inline CMsgDOTAProfileTickets_EventTicket& operator=(const CMsgDOTAProfileTickets_EventTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileTickets_EventTicket& default_instance();

  void Swap(CMsgDOTAProfileTickets_EventTicket* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileTickets_EventTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileTickets_EventTicket& from);
  void MergeFrom(const CMsgDOTAProfileTickets_EventTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileTickets.EventTicket)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileTickets_EventTicket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileTickets();
  virtual ~CMsgDOTAProfileTickets();

  CMsgDOTAProfileTickets(const CMsgDOTAProfileTickets& from);

  inline CMsgDOTAProfileTickets& operator=(const CMsgDOTAProfileTickets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileTickets& default_instance();

  void Swap(CMsgDOTAProfileTickets* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileTickets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileTickets& from);
  void MergeFrom(const CMsgDOTAProfileTickets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAProfileTickets_LeaguePass LeaguePass;
  typedef CMsgDOTAProfileTickets_EventTicket EventTicket;

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAProfileTickets.LeaguePass league_passes = 3;
  inline int league_passes_size() const;
  inline void clear_league_passes();
  static const int kLeaguePassesFieldNumber = 3;
  inline const ::CMsgDOTAProfileTickets_LeaguePass& league_passes(int index) const;
  inline ::CMsgDOTAProfileTickets_LeaguePass* mutable_league_passes(int index);
  inline ::CMsgDOTAProfileTickets_LeaguePass* add_league_passes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_LeaguePass >&
      league_passes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_LeaguePass >*
      mutable_league_passes();

  // repeated .CMsgDOTAProfileTickets.EventTicket event_tickets = 4;
  inline int event_tickets_size() const;
  inline void clear_event_tickets();
  static const int kEventTicketsFieldNumber = 4;
  inline const ::CMsgDOTAProfileTickets_EventTicket& event_tickets(int index) const;
  inline ::CMsgDOTAProfileTickets_EventTicket* mutable_event_tickets(int index);
  inline ::CMsgDOTAProfileTickets_EventTicket* add_event_tickets();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_EventTicket >&
      event_tickets() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_EventTicket >*
      mutable_event_tickets();

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileTickets)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_LeaguePass > league_passes_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_EventTicket > event_tickets_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileTickets* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileTickets : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetProfileTickets();
  virtual ~CMsgClientToGCGetProfileTickets();

  CMsgClientToGCGetProfileTickets(const CMsgClientToGCGetProfileTickets& from);

  inline CMsgClientToGCGetProfileTickets& operator=(const CMsgClientToGCGetProfileTickets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileTickets& default_instance();

  void Swap(CMsgClientToGCGetProfileTickets* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetProfileTickets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetProfileTickets& from);
  void MergeFrom(const CMsgClientToGCGetProfileTickets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetProfileTickets)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetProfileTickets* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCSteamProfileRequest : public ::google::protobuf::Message {
 public:
  CMsgGCSteamProfileRequest();
  virtual ~CMsgGCSteamProfileRequest();

  CMsgGCSteamProfileRequest(const CMsgGCSteamProfileRequest& from);

  inline CMsgGCSteamProfileRequest& operator=(const CMsgGCSteamProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSteamProfileRequest& default_instance();

  void Swap(CMsgGCSteamProfileRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCSteamProfileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCSteamProfileRequest& from);
  void MergeFrom(const CMsgGCSteamProfileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCSteamProfileRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCSteamProfileRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCSteamProfileRequestResponse : public ::google::protobuf::Message {
 public:
  CMsgGCSteamProfileRequestResponse();
  virtual ~CMsgGCSteamProfileRequestResponse();

  CMsgGCSteamProfileRequestResponse(const CMsgGCSteamProfileRequestResponse& from);

  inline CMsgGCSteamProfileRequestResponse& operator=(const CMsgGCSteamProfileRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSteamProfileRequestResponse& default_instance();

  void Swap(CMsgGCSteamProfileRequestResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCSteamProfileRequestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCSteamProfileRequestResponse& from);
  void MergeFrom(const CMsgGCSteamProfileRequestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCSteamProfileRequestResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCSteamProfileRequestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAClearNotifySuccessfulReport : public ::google::protobuf::Message {
 public:
  CMsgDOTAClearNotifySuccessfulReport();
  virtual ~CMsgDOTAClearNotifySuccessfulReport();

  CMsgDOTAClearNotifySuccessfulReport(const CMsgDOTAClearNotifySuccessfulReport& from);

  inline CMsgDOTAClearNotifySuccessfulReport& operator=(const CMsgDOTAClearNotifySuccessfulReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClearNotifySuccessfulReport& default_instance();

  void Swap(CMsgDOTAClearNotifySuccessfulReport* other);

  // implements Message ----------------------------------------------

  CMsgDOTAClearNotifySuccessfulReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  void MergeFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAClearNotifySuccessfulReport)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAClearNotifySuccessfulReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome_LocalizationDigest : public ::google::protobuf::Message {
 public:
  CMsgDOTAWelcome_LocalizationDigest();
  virtual ~CMsgDOTAWelcome_LocalizationDigest();

  CMsgDOTAWelcome_LocalizationDigest(const CMsgDOTAWelcome_LocalizationDigest& from);

  inline CMsgDOTAWelcome_LocalizationDigest& operator=(const CMsgDOTAWelcome_LocalizationDigest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome_LocalizationDigest& default_instance();

  void Swap(CMsgDOTAWelcome_LocalizationDigest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAWelcome_LocalizationDigest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAWelcome_LocalizationDigest& from);
  void MergeFrom(const CMsgDOTAWelcome_LocalizationDigest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string context = 1;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline const ::std::string& context() const;
  inline void set_context(const ::std::string& value);
  inline void set_context(const char* value);
  inline void set_context(const char* value, size_t size);
  inline ::std::string* mutable_context();
  inline ::std::string* release_context();
  inline void set_allocated_context(::std::string* context);

  // optional .CMsgSHA1Digest english_language_file_sha1 = 2;
  inline bool has_english_language_file_sha1() const;
  inline void clear_english_language_file_sha1();
  static const int kEnglishLanguageFileSha1FieldNumber = 2;
  inline const ::CMsgSHA1Digest& english_language_file_sha1() const;
  inline ::CMsgSHA1Digest* mutable_english_language_file_sha1();
  inline ::CMsgSHA1Digest* release_english_language_file_sha1();
  inline void set_allocated_english_language_file_sha1(::CMsgSHA1Digest* english_language_file_sha1);

  // optional .CMsgSHA1Digest client_language_file_sha1 = 3;
  inline bool has_client_language_file_sha1() const;
  inline void clear_client_language_file_sha1();
  static const int kClientLanguageFileSha1FieldNumber = 3;
  inline const ::CMsgSHA1Digest& client_language_file_sha1() const;
  inline ::CMsgSHA1Digest* mutable_client_language_file_sha1();
  inline ::CMsgSHA1Digest* release_client_language_file_sha1();
  inline void set_allocated_client_language_file_sha1(::CMsgSHA1Digest* client_language_file_sha1);

  // @@protoc_insertion_point(class_scope:CMsgDOTAWelcome.LocalizationDigest)
 private:
  inline void set_has_context();
  inline void clear_has_context();
  inline void set_has_english_language_file_sha1();
  inline void clear_has_english_language_file_sha1();
  inline void set_has_client_language_file_sha1();
  inline void clear_has_client_language_file_sha1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* context_;
  ::CMsgSHA1Digest* english_language_file_sha1_;
  ::CMsgSHA1Digest* client_language_file_sha1_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAWelcome_LocalizationDigest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome_CExtraMsg : public ::google::protobuf::Message {
 public:
  CMsgDOTAWelcome_CExtraMsg();
  virtual ~CMsgDOTAWelcome_CExtraMsg();

  CMsgDOTAWelcome_CExtraMsg(const CMsgDOTAWelcome_CExtraMsg& from);

  inline CMsgDOTAWelcome_CExtraMsg& operator=(const CMsgDOTAWelcome_CExtraMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome_CExtraMsg& default_instance();

  void Swap(CMsgDOTAWelcome_CExtraMsg* other);

  // implements Message ----------------------------------------------

  CMsgDOTAWelcome_CExtraMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  void MergeFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional bytes contents = 2;
  inline bool has_contents() const;
  inline void clear_contents();
  static const int kContentsFieldNumber = 2;
  inline const ::std::string& contents() const;
  inline void set_contents(const ::std::string& value);
  inline void set_contents(const char* value);
  inline void set_contents(const void* value, size_t size);
  inline ::std::string* mutable_contents();
  inline ::std::string* release_contents();
  inline void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:CMsgDOTAWelcome.CExtraMsg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_contents();
  inline void clear_has_contents();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* contents_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAWelcome_CExtraMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome : public ::google::protobuf::Message {
 public:
  CMsgDOTAWelcome();
  virtual ~CMsgDOTAWelcome();

  CMsgDOTAWelcome(const CMsgDOTAWelcome& from);

  inline CMsgDOTAWelcome& operator=(const CMsgDOTAWelcome& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome& default_instance();

  void Swap(CMsgDOTAWelcome* other);

  // implements Message ----------------------------------------------

  CMsgDOTAWelcome* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAWelcome& from);
  void MergeFrom(const CMsgDOTAWelcome& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAWelcome_LocalizationDigest LocalizationDigest;
  typedef CMsgDOTAWelcome_CExtraMsg CExtraMsg;

  // accessors -------------------------------------------------------

  // optional uint32 store_item_hash = 5;
  inline bool has_store_item_hash() const;
  inline void clear_store_item_hash();
  static const int kStoreItemHashFieldNumber = 5;
  inline ::google::protobuf::uint32 store_item_hash() const;
  inline void set_store_item_hash(::google::protobuf::uint32 value);

  // optional uint32 timeplayedconsecutively = 6;
  inline bool has_timeplayedconsecutively() const;
  inline void clear_timeplayedconsecutively();
  static const int kTimeplayedconsecutivelyFieldNumber = 6;
  inline ::google::protobuf::uint32 timeplayedconsecutively() const;
  inline void set_timeplayedconsecutively(::google::protobuf::uint32 value);

  // optional bool allow_3rd_party_match_history = 7;
  inline bool has_allow_3rd_party_match_history() const;
  inline void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 7;
  inline bool allow_3rd_party_match_history() const;
  inline void set_allow_3rd_party_match_history(bool value);

  // optional .PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
  inline bool has_partner_account_type() const;
  inline void clear_partner_account_type();
  static const int kPartnerAccountTypeFieldNumber = 8;
  inline ::PartnerAccountType partner_account_type() const;
  inline void set_partner_account_type(::PartnerAccountType value);

  // optional uint32 banned_word_list_word_id = 9;
  inline bool has_banned_word_list_word_id() const;
  inline void clear_banned_word_list_word_id();
  static const int kBannedWordListWordIdFieldNumber = 9;
  inline ::google::protobuf::uint32 banned_word_list_word_id() const;
  inline void set_banned_word_list_word_id(::google::protobuf::uint32 value);

  // optional uint32 partner_account_state = 11;
  inline bool has_partner_account_state() const;
  inline void clear_partner_account_state();
  static const int kPartnerAccountStateFieldNumber = 11;
  inline ::google::protobuf::uint32 partner_account_state() const;
  inline void set_partner_account_state(::google::protobuf::uint32 value);

  // optional uint32 last_time_played = 12;
  inline bool has_last_time_played() const;
  inline void clear_last_time_played();
  static const int kLastTimePlayedFieldNumber = 12;
  inline ::google::protobuf::uint32 last_time_played() const;
  inline void set_last_time_played(::google::protobuf::uint32 value);

  // optional uint32 last_ip_address = 13;
  inline bool has_last_ip_address() const;
  inline void clear_last_ip_address();
  static const int kLastIpAddressFieldNumber = 13;
  inline ::google::protobuf::uint32 last_ip_address() const;
  inline void set_last_ip_address(::google::protobuf::uint32 value);

  // optional uint32 shutdownlawterminateminutes = 15;
  inline bool has_shutdownlawterminateminutes() const;
  inline void clear_shutdownlawterminateminutes();
  static const int kShutdownlawterminateminutesFieldNumber = 15;
  inline ::google::protobuf::uint32 shutdownlawterminateminutes() const;
  inline void set_shutdownlawterminateminutes(::google::protobuf::uint32 value);

  // optional uint32 banned_word_list_version = 16;
  inline bool has_banned_word_list_version() const;
  inline void clear_banned_word_list_version();
  static const int kBannedWordListVersionFieldNumber = 16;
  inline ::google::protobuf::uint32 banned_word_list_version() const;
  inline void set_banned_word_list_version(::google::protobuf::uint32 value);

  // optional bool profile_private = 17;
  inline bool has_profile_private() const;
  inline void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 17;
  inline bool profile_private() const;
  inline void set_profile_private(bool value);

  // optional uint32 currency = 18;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 18;
  inline ::google::protobuf::uint32 currency() const;
  inline void set_currency(::google::protobuf::uint32 value);

  // optional uint32 bang_no = 19;
  inline bool has_bang_no() const;
  inline void clear_bang_no();
  static const int kBangNoFieldNumber = 19;
  inline ::google::protobuf::uint32 bang_no() const;
  inline void set_bang_no(::google::protobuf::uint32 value);

  // optional bool should_request_player_origin = 20;
  inline bool has_should_request_player_origin() const;
  inline void clear_should_request_player_origin();
  static const int kShouldRequestPlayerOriginFieldNumber = 20;
  inline bool should_request_player_origin() const;
  inline void set_should_request_player_origin(bool value);

  // optional uint64 compendium_unlocks = 21;
  inline bool has_compendium_unlocks() const;
  inline void clear_compendium_unlocks();
  static const int kCompendiumUnlocksFieldNumber = 21;
  inline ::google::protobuf::uint64 compendium_unlocks() const;
  inline void set_compendium_unlocks(::google::protobuf::uint64 value);

  // optional uint32 gc_socache_file_version = 22;
  inline bool has_gc_socache_file_version() const;
  inline void clear_gc_socache_file_version();
  static const int kGcSocacheFileVersionFieldNumber = 22;
  inline ::google::protobuf::uint32 gc_socache_file_version() const;
  inline void set_gc_socache_file_version(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAWelcome.LocalizationDigest localization_digests = 23;
  inline int localization_digests_size() const;
  inline void clear_localization_digests();
  static const int kLocalizationDigestsFieldNumber = 23;
  inline const ::CMsgDOTAWelcome_LocalizationDigest& localization_digests(int index) const;
  inline ::CMsgDOTAWelcome_LocalizationDigest* mutable_localization_digests(int index);
  inline ::CMsgDOTAWelcome_LocalizationDigest* add_localization_digests();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >&
      localization_digests() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >*
      mutable_localization_digests();

  // optional bool is_perfect_world_test_account = 24;
  inline bool has_is_perfect_world_test_account() const;
  inline void clear_is_perfect_world_test_account();
  static const int kIsPerfectWorldTestAccountFieldNumber = 24;
  inline bool is_perfect_world_test_account() const;
  inline void set_is_perfect_world_test_account(bool value);

  // repeated .EEvent active_events = 25;
  inline int active_events_size() const;
  inline void clear_active_events();
  static const int kActiveEventsFieldNumber = 25;
  inline ::EEvent active_events(int index) const;
  inline void set_active_events(int index, ::EEvent value);
  inline void add_active_events(::EEvent value);
  inline const ::google::protobuf::RepeatedField<int>& active_events() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_active_events();

  // repeated .CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
  inline int extra_messages_size() const;
  inline void clear_extra_messages();
  static const int kExtraMessagesFieldNumber = 26;
  inline const ::CMsgDOTAWelcome_CExtraMsg& extra_messages(int index) const;
  inline ::CMsgDOTAWelcome_CExtraMsg* mutable_extra_messages(int index);
  inline ::CMsgDOTAWelcome_CExtraMsg* add_extra_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >&
      extra_messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >*
      mutable_extra_messages();

  // optional uint64 minimum_recent_item_id = 27;
  inline bool has_minimum_recent_item_id() const;
  inline void clear_minimum_recent_item_id();
  static const int kMinimumRecentItemIdFieldNumber = 27;
  inline ::google::protobuf::uint64 minimum_recent_item_id() const;
  inline void set_minimum_recent_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAWelcome)
 private:
  inline void set_has_store_item_hash();
  inline void clear_has_store_item_hash();
  inline void set_has_timeplayedconsecutively();
  inline void clear_has_timeplayedconsecutively();
  inline void set_has_allow_3rd_party_match_history();
  inline void clear_has_allow_3rd_party_match_history();
  inline void set_has_partner_account_type();
  inline void clear_has_partner_account_type();
  inline void set_has_banned_word_list_word_id();
  inline void clear_has_banned_word_list_word_id();
  inline void set_has_partner_account_state();
  inline void clear_has_partner_account_state();
  inline void set_has_last_time_played();
  inline void clear_has_last_time_played();
  inline void set_has_last_ip_address();
  inline void clear_has_last_ip_address();
  inline void set_has_shutdownlawterminateminutes();
  inline void clear_has_shutdownlawterminateminutes();
  inline void set_has_banned_word_list_version();
  inline void clear_has_banned_word_list_version();
  inline void set_has_profile_private();
  inline void clear_has_profile_private();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_bang_no();
  inline void clear_has_bang_no();
  inline void set_has_should_request_player_origin();
  inline void clear_has_should_request_player_origin();
  inline void set_has_compendium_unlocks();
  inline void clear_has_compendium_unlocks();
  inline void set_has_gc_socache_file_version();
  inline void clear_has_gc_socache_file_version();
  inline void set_has_is_perfect_world_test_account();
  inline void clear_has_is_perfect_world_test_account();
  inline void set_has_minimum_recent_item_id();
  inline void clear_has_minimum_recent_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 store_item_hash_;
  ::google::protobuf::uint32 timeplayedconsecutively_;
  int partner_account_type_;
  ::google::protobuf::uint32 banned_word_list_word_id_;
  ::google::protobuf::uint32 partner_account_state_;
  ::google::protobuf::uint32 last_time_played_;
  ::google::protobuf::uint32 last_ip_address_;
  ::google::protobuf::uint32 shutdownlawterminateminutes_;
  ::google::protobuf::uint32 banned_word_list_version_;
  bool allow_3rd_party_match_history_;
  bool profile_private_;
  bool should_request_player_origin_;
  bool is_perfect_world_test_account_;
  ::google::protobuf::uint32 currency_;
  ::google::protobuf::uint32 bang_no_;
  ::google::protobuf::uint64 compendium_unlocks_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest > localization_digests_;
  ::google::protobuf::RepeatedField<int> active_events_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg > extra_messages_;
  ::google::protobuf::uint64 minimum_recent_item_id_;
  ::google::protobuf::uint32 gc_socache_file_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAWelcome* default_instance_;
};
// -------------------------------------------------------------------

class CSODOTAGameHeroFavorites : public ::google::protobuf::Message {
 public:
  CSODOTAGameHeroFavorites();
  virtual ~CSODOTAGameHeroFavorites();

  CSODOTAGameHeroFavorites(const CSODOTAGameHeroFavorites& from);

  inline CSODOTAGameHeroFavorites& operator=(const CSODOTAGameHeroFavorites& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSODOTAGameHeroFavorites& default_instance();

  void Swap(CSODOTAGameHeroFavorites* other);

  // implements Message ----------------------------------------------

  CSODOTAGameHeroFavorites* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSODOTAGameHeroFavorites& from);
  void MergeFrom(const CSODOTAGameHeroFavorites& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSODOTAGameHeroFavorites)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CSODOTAGameHeroFavorites* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesAdd : public ::google::protobuf::Message {
 public:
  CMsgDOTAHeroFavoritesAdd();
  virtual ~CMsgDOTAHeroFavoritesAdd();

  CMsgDOTAHeroFavoritesAdd(const CMsgDOTAHeroFavoritesAdd& from);

  inline CMsgDOTAHeroFavoritesAdd& operator=(const CMsgDOTAHeroFavoritesAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHeroFavoritesAdd& default_instance();

  void Swap(CMsgDOTAHeroFavoritesAdd* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHeroFavoritesAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHeroFavoritesAdd& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHeroFavoritesAdd)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHeroFavoritesAdd* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesRemove : public ::google::protobuf::Message {
 public:
  CMsgDOTAHeroFavoritesRemove();
  virtual ~CMsgDOTAHeroFavoritesRemove();

  CMsgDOTAHeroFavoritesRemove(const CMsgDOTAHeroFavoritesRemove& from);

  inline CMsgDOTAHeroFavoritesRemove& operator=(const CMsgDOTAHeroFavoritesRemove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHeroFavoritesRemove& default_instance();

  void Swap(CMsgDOTAHeroFavoritesRemove* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHeroFavoritesRemove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHeroFavoritesRemove& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesRemove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHeroFavoritesRemove)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHeroFavoritesRemove* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetShowcaseHero : public ::google::protobuf::Message {
 public:
  CMsgSetShowcaseHero();
  virtual ~CMsgSetShowcaseHero();

  CMsgSetShowcaseHero(const CMsgSetShowcaseHero& from);

  inline CMsgSetShowcaseHero& operator=(const CMsgSetShowcaseHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetShowcaseHero& default_instance();

  void Swap(CMsgSetShowcaseHero* other);

  // implements Message ----------------------------------------------

  CMsgSetShowcaseHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetShowcaseHero& from);
  void MergeFrom(const CMsgSetShowcaseHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 showcase_hero_id = 1;
  inline bool has_showcase_hero_id() const;
  inline void clear_showcase_hero_id();
  static const int kShowcaseHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 showcase_hero_id() const;
  inline void set_showcase_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSetShowcaseHero)
 private:
  inline void set_has_showcase_hero_id();
  inline void clear_has_showcase_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 showcase_hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetShowcaseHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetFeaturedItems : public ::google::protobuf::Message {
 public:
  CMsgSetFeaturedItems();
  virtual ~CMsgSetFeaturedItems();

  CMsgSetFeaturedItems(const CMsgSetFeaturedItems& from);

  inline CMsgSetFeaturedItems& operator=(const CMsgSetFeaturedItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetFeaturedItems& default_instance();

  void Swap(CMsgSetFeaturedItems* other);

  // implements Message ----------------------------------------------

  CMsgSetFeaturedItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetFeaturedItems& from);
  void MergeFrom(const CMsgSetFeaturedItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 featured_item_id = 1;
  inline int featured_item_id_size() const;
  inline void clear_featured_item_id();
  static const int kFeaturedItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 featured_item_id(int index) const;
  inline void set_featured_item_id(int index, ::google::protobuf::uint64 value);
  inline void add_featured_item_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      featured_item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_featured_item_id();

  // @@protoc_insertion_point(class_scope:CMsgSetFeaturedItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > featured_item_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetFeaturedItems* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFeaturedItems : public ::google::protobuf::Message {
 public:
  CMsgDOTAFeaturedItems();
  virtual ~CMsgDOTAFeaturedItems();

  CMsgDOTAFeaturedItems(const CMsgDOTAFeaturedItems& from);

  inline CMsgDOTAFeaturedItems& operator=(const CMsgDOTAFeaturedItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFeaturedItems& default_instance();

  void Swap(CMsgDOTAFeaturedItems* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFeaturedItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFeaturedItems& from);
  void MergeFrom(const CMsgDOTAFeaturedItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated uint64 featured_item_id = 2;
  inline int featured_item_id_size() const;
  inline void clear_featured_item_id();
  static const int kFeaturedItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 featured_item_id(int index) const;
  inline void set_featured_item_id(int index, ::google::protobuf::uint64 value);
  inline void add_featured_item_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      featured_item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_featured_item_id();

  // repeated bytes object_data = 3;
  inline int object_data_size() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 3;
  inline const ::std::string& object_data(int index) const;
  inline ::std::string* mutable_object_data(int index);
  inline void set_object_data(int index, const ::std::string& value);
  inline void set_object_data(int index, const char* value);
  inline void set_object_data(int index, const void* value, size_t size);
  inline ::std::string* add_object_data();
  inline void add_object_data(const ::std::string& value);
  inline void add_object_data(const char* value);
  inline void add_object_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // @@protoc_insertion_point(class_scope:CMsgDOTAFeaturedItems)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > featured_item_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFeaturedItems* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestLeagueInfo : public ::google::protobuf::Message {
 public:
  CMsgRequestLeagueInfo();
  virtual ~CMsgRequestLeagueInfo();

  CMsgRequestLeagueInfo(const CMsgRequestLeagueInfo& from);

  inline CMsgRequestLeagueInfo& operator=(const CMsgRequestLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeagueInfo& default_instance();

  void Swap(CMsgRequestLeagueInfo* other);

  // implements Message ----------------------------------------------

  CMsgRequestLeagueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestLeagueInfo& from);
  void MergeFrom(const CMsgRequestLeagueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgRequestLeagueInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestLeagueInfo* default_instance_;
};
// -------------------------------------------------------------------

class CDynamicLeagueData : public ::google::protobuf::Message {
 public:
  CDynamicLeagueData();
  virtual ~CDynamicLeagueData();

  CDynamicLeagueData(const CDynamicLeagueData& from);

  inline CDynamicLeagueData& operator=(const CDynamicLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDynamicLeagueData& default_instance();

  void Swap(CDynamicLeagueData* other);

  // implements Message ----------------------------------------------

  CDynamicLeagueData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDynamicLeagueData& from);
  void MergeFrom(const CDynamicLeagueData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional fixed32 last_match_time = 2;
  inline bool has_last_match_time() const;
  inline void clear_last_match_time();
  static const int kLastMatchTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 last_match_time() const;
  inline void set_last_match_time(::google::protobuf::uint32 value);

  // optional uint32 prize_pool_usd = 3;
  inline bool has_prize_pool_usd() const;
  inline void clear_prize_pool_usd();
  static const int kPrizePoolUsdFieldNumber = 3;
  inline ::google::protobuf::uint32 prize_pool_usd() const;
  inline void set_prize_pool_usd(::google::protobuf::uint32 value);

  // optional bool has_live_matches = 4;
  inline bool has_has_live_matches() const;
  inline void clear_has_live_matches();
  static const int kHasLiveMatchesFieldNumber = 4;
  inline bool has_live_matches() const;
  inline void set_has_live_matches(bool value);

  // optional bool is_compendium_public = 5;
  inline bool has_is_compendium_public() const;
  inline void clear_is_compendium_public();
  static const int kIsCompendiumPublicFieldNumber = 5;
  inline bool is_compendium_public() const;
  inline void set_is_compendium_public(bool value);

  // optional uint32 compendium_version = 6;
  inline bool has_compendium_version() const;
  inline void clear_compendium_version();
  static const int kCompendiumVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 compendium_version() const;
  inline void set_compendium_version(::google::protobuf::uint32 value);

  // optional uint32 compendium_content_version = 7;
  inline bool has_compendium_content_version() const;
  inline void clear_compendium_content_version();
  static const int kCompendiumContentVersionFieldNumber = 7;
  inline ::google::protobuf::uint32 compendium_content_version() const;
  inline void set_compendium_content_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDynamicLeagueData)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_last_match_time();
  inline void clear_has_last_match_time();
  inline void set_has_prize_pool_usd();
  inline void clear_has_prize_pool_usd();
  inline void set_has_has_live_matches();
  inline void clear_has_has_live_matches();
  inline void set_has_is_compendium_public();
  inline void clear_has_is_compendium_public();
  inline void set_has_compendium_version();
  inline void clear_has_compendium_version();
  inline void set_has_compendium_content_version();
  inline void clear_has_compendium_content_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 last_match_time_;
  ::google::protobuf::uint32 prize_pool_usd_;
  bool has_live_matches_;
  bool is_compendium_public_;
  ::google::protobuf::uint32 compendium_version_;
  ::google::protobuf::uint32 compendium_content_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CDynamicLeagueData* default_instance_;
};
// -------------------------------------------------------------------

class CStaticLeagueData : public ::google::protobuf::Message {
 public:
  CStaticLeagueData();
  virtual ~CStaticLeagueData();

  CStaticLeagueData(const CStaticLeagueData& from);

  inline CStaticLeagueData& operator=(const CStaticLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CStaticLeagueData& default_instance();

  void Swap(CStaticLeagueData* other);

  // implements Message ----------------------------------------------

  CStaticLeagueData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CStaticLeagueData& from);
  void MergeFrom(const CStaticLeagueData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string banner_name = 4;
  inline bool has_banner_name() const;
  inline void clear_banner_name();
  static const int kBannerNameFieldNumber = 4;
  inline const ::std::string& banner_name() const;
  inline void set_banner_name(const ::std::string& value);
  inline void set_banner_name(const char* value);
  inline void set_banner_name(const char* value, size_t size);
  inline ::std::string* mutable_banner_name();
  inline ::std::string* release_banner_name();
  inline void set_allocated_banner_name(::std::string* banner_name);

  // optional string itemdef_name = 5;
  inline bool has_itemdef_name() const;
  inline void clear_itemdef_name();
  static const int kItemdefNameFieldNumber = 5;
  inline const ::std::string& itemdef_name() const;
  inline void set_itemdef_name(const ::std::string& value);
  inline void set_itemdef_name(const char* value);
  inline void set_itemdef_name(const char* value, size_t size);
  inline ::std::string* mutable_itemdef_name();
  inline ::std::string* release_itemdef_name();
  inline void set_allocated_itemdef_name(::std::string* itemdef_name);

  // optional string url = 6;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 6;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional uint32 item_def_index = 7;
  inline bool has_item_def_index() const;
  inline void clear_item_def_index();
  static const int kItemDefIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 item_def_index() const;
  inline void set_item_def_index(::google::protobuf::uint32 value);

  // optional uint32 hud_skin_item_def_index = 8;
  inline bool has_hud_skin_item_def_index() const;
  inline void clear_hud_skin_item_def_index();
  static const int kHudSkinItemDefIndexFieldNumber = 8;
  inline ::google::protobuf::uint32 hud_skin_item_def_index() const;
  inline void set_hud_skin_item_def_index(::google::protobuf::uint32 value);

  // optional string loading_screen_name = 9;
  inline bool has_loading_screen_name() const;
  inline void clear_loading_screen_name();
  static const int kLoadingScreenNameFieldNumber = 9;
  inline const ::std::string& loading_screen_name() const;
  inline void set_loading_screen_name(const ::std::string& value);
  inline void set_loading_screen_name(const char* value);
  inline void set_loading_screen_name(const char* value, size_t size);
  inline ::std::string* mutable_loading_screen_name();
  inline ::std::string* release_loading_screen_name();
  inline void set_allocated_loading_screen_name(::std::string* loading_screen_name);

  // optional uint32 base_prize_pool = 10;
  inline bool has_base_prize_pool() const;
  inline void clear_base_prize_pool();
  static const int kBasePrizePoolFieldNumber = 10;
  inline ::google::protobuf::uint32 base_prize_pool() const;
  inline void set_base_prize_pool(::google::protobuf::uint32 value);

  // optional bool is_major = 11;
  inline bool has_is_major() const;
  inline void clear_is_major();
  static const int kIsMajorFieldNumber = 11;
  inline bool is_major() const;
  inline void set_is_major(bool value);

  // optional uint32 sort_order = 12;
  inline bool has_sort_order() const;
  inline void clear_sort_order();
  static const int kSortOrderFieldNumber = 12;
  inline ::google::protobuf::uint32 sort_order() const;
  inline void set_sort_order(::google::protobuf::uint32 value);

  // optional uint32 tier = 13;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 13;
  inline ::google::protobuf::uint32 tier() const;
  inline void set_tier(::google::protobuf::uint32 value);

  // optional uint32 amateur_region = 14;
  inline bool has_amateur_region() const;
  inline void clear_amateur_region();
  static const int kAmateurRegionFieldNumber = 14;
  inline ::google::protobuf::uint32 amateur_region() const;
  inline void set_amateur_region(::google::protobuf::uint32 value);

  // optional string organizer = 15;
  inline bool has_organizer() const;
  inline void clear_organizer();
  static const int kOrganizerFieldNumber = 15;
  inline const ::std::string& organizer() const;
  inline void set_organizer(const ::std::string& value);
  inline void set_organizer(const char* value);
  inline void set_organizer(const char* value, size_t size);
  inline ::std::string* mutable_organizer();
  inline ::std::string* release_organizer();
  inline void set_allocated_organizer(::std::string* organizer);

  // optional uint32 start_date = 16;
  inline bool has_start_date() const;
  inline void clear_start_date();
  static const int kStartDateFieldNumber = 16;
  inline ::google::protobuf::uint32 start_date() const;
  inline void set_start_date(::google::protobuf::uint32 value);

  // optional uint32 end_date = 17;
  inline bool has_end_date() const;
  inline void clear_end_date();
  static const int kEndDateFieldNumber = 17;
  inline ::google::protobuf::uint32 end_date() const;
  inline void set_end_date(::google::protobuf::uint32 value);

  // optional string location = 18;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 18;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  inline void set_allocated_location(::std::string* location);

  // optional string inventory_image = 19;
  inline bool has_inventory_image() const;
  inline void clear_inventory_image();
  static const int kInventoryImageFieldNumber = 19;
  inline const ::std::string& inventory_image() const;
  inline void set_inventory_image(const ::std::string& value);
  inline void set_inventory_image(const char* value);
  inline void set_inventory_image(const char* value, size_t size);
  inline ::std::string* mutable_inventory_image();
  inline ::std::string* release_inventory_image();
  inline void set_allocated_inventory_image(::std::string* inventory_image);

  // optional string square_image = 20;
  inline bool has_square_image() const;
  inline void clear_square_image();
  static const int kSquareImageFieldNumber = 20;
  inline const ::std::string& square_image() const;
  inline void set_square_image(const ::std::string& value);
  inline void set_square_image(const char* value);
  inline void set_square_image(const char* value, size_t size);
  inline ::std::string* mutable_square_image();
  inline ::std::string* release_square_image();
  inline void set_allocated_square_image(::std::string* square_image);

  // optional bool battle_pass_rollup = 21;
  inline bool has_battle_pass_rollup() const;
  inline void clear_battle_pass_rollup();
  static const int kBattlePassRollupFieldNumber = 21;
  inline bool battle_pass_rollup() const;
  inline void set_battle_pass_rollup(bool value);

  // @@protoc_insertion_point(class_scope:CStaticLeagueData)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_banner_name();
  inline void clear_has_banner_name();
  inline void set_has_itemdef_name();
  inline void clear_has_itemdef_name();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_item_def_index();
  inline void clear_has_item_def_index();
  inline void set_has_hud_skin_item_def_index();
  inline void clear_has_hud_skin_item_def_index();
  inline void set_has_loading_screen_name();
  inline void clear_has_loading_screen_name();
  inline void set_has_base_prize_pool();
  inline void clear_has_base_prize_pool();
  inline void set_has_is_major();
  inline void clear_has_is_major();
  inline void set_has_sort_order();
  inline void clear_has_sort_order();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_amateur_region();
  inline void clear_has_amateur_region();
  inline void set_has_organizer();
  inline void clear_has_organizer();
  inline void set_has_start_date();
  inline void clear_has_start_date();
  inline void set_has_end_date();
  inline void clear_has_end_date();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_inventory_image();
  inline void clear_has_inventory_image();
  inline void set_has_square_image();
  inline void clear_has_square_image();
  inline void set_has_battle_pass_rollup();
  inline void clear_has_battle_pass_rollup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* description_;
  ::std::string* banner_name_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_index_;
  ::std::string* itemdef_name_;
  ::std::string* url_;
  ::std::string* loading_screen_name_;
  ::google::protobuf::uint32 hud_skin_item_def_index_;
  ::google::protobuf::uint32 base_prize_pool_;
  ::google::protobuf::uint32 sort_order_;
  ::google::protobuf::uint32 tier_;
  ::std::string* organizer_;
  ::google::protobuf::uint32 amateur_region_;
  ::google::protobuf::uint32 start_date_;
  bool is_major_;
  bool battle_pass_rollup_;
  ::google::protobuf::uint32 end_date_;
  ::std::string* location_;
  ::std::string* inventory_image_;
  ::std::string* square_image_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CStaticLeagueData* default_instance_;
};
// -------------------------------------------------------------------

class CLeagueData : public ::google::protobuf::Message {
 public:
  CLeagueData();
  virtual ~CLeagueData();

  CLeagueData(const CLeagueData& from);

  inline CLeagueData& operator=(const CLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLeagueData& default_instance();

  void Swap(CLeagueData* other);

  // implements Message ----------------------------------------------

  CLeagueData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLeagueData& from);
  void MergeFrom(const CLeagueData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CDynamicLeagueData dynamic_data = 1;
  inline bool has_dynamic_data() const;
  inline void clear_dynamic_data();
  static const int kDynamicDataFieldNumber = 1;
  inline const ::CDynamicLeagueData& dynamic_data() const;
  inline ::CDynamicLeagueData* mutable_dynamic_data();
  inline ::CDynamicLeagueData* release_dynamic_data();
  inline void set_allocated_dynamic_data(::CDynamicLeagueData* dynamic_data);

  // optional .CStaticLeagueData static_data = 2;
  inline bool has_static_data() const;
  inline void clear_static_data();
  static const int kStaticDataFieldNumber = 2;
  inline const ::CStaticLeagueData& static_data() const;
  inline ::CStaticLeagueData* mutable_static_data();
  inline ::CStaticLeagueData* release_static_data();
  inline void set_allocated_static_data(::CStaticLeagueData* static_data);

  // optional bool is_owned = 3;
  inline bool has_is_owned() const;
  inline void clear_is_owned();
  static const int kIsOwnedFieldNumber = 3;
  inline bool is_owned() const;
  inline void set_is_owned(bool value);

  // @@protoc_insertion_point(class_scope:CLeagueData)
 private:
  inline void set_has_dynamic_data();
  inline void clear_has_dynamic_data();
  inline void set_has_static_data();
  inline void clear_has_static_data();
  inline void set_has_is_owned();
  inline void clear_has_is_owned();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CDynamicLeagueData* dynamic_data_;
  ::CStaticLeagueData* static_data_;
  bool is_owned_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CLeagueData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgResponseLeagueInfo : public ::google::protobuf::Message {
 public:
  CMsgResponseLeagueInfo();
  virtual ~CMsgResponseLeagueInfo();

  CMsgResponseLeagueInfo(const CMsgResponseLeagueInfo& from);

  inline CMsgResponseLeagueInfo& operator=(const CMsgResponseLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResponseLeagueInfo& default_instance();

  void Swap(CMsgResponseLeagueInfo* other);

  // implements Message ----------------------------------------------

  CMsgResponseLeagueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgResponseLeagueInfo& from);
  void MergeFrom(const CMsgResponseLeagueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CDynamicLeagueData leagues = 1;
  inline int leagues_size() const;
  inline void clear_leagues();
  static const int kLeaguesFieldNumber = 1;
  inline const ::CDynamicLeagueData& leagues(int index) const;
  inline ::CDynamicLeagueData* mutable_leagues(int index);
  inline ::CDynamicLeagueData* add_leagues();
  inline const ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >&
      leagues() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >*
      mutable_leagues();

  // @@protoc_insertion_point(class_scope:CMsgResponseLeagueInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData > leagues_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgResponseLeagueInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes_PlayerVote : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchVotes_PlayerVote();
  virtual ~CMsgDOTAMatchVotes_PlayerVote();

  CMsgDOTAMatchVotes_PlayerVote(const CMsgDOTAMatchVotes_PlayerVote& from);

  inline CMsgDOTAMatchVotes_PlayerVote& operator=(const CMsgDOTAMatchVotes_PlayerVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchVotes_PlayerVote& default_instance();

  void Swap(CMsgDOTAMatchVotes_PlayerVote* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchVotes_PlayerVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  void MergeFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 vote = 2;
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 2;
  inline ::google::protobuf::uint32 vote() const;
  inline void set_vote(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchVotes.PlayerVote)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_vote();
  inline void clear_has_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 vote_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchVotes_PlayerVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchVotes();
  virtual ~CMsgDOTAMatchVotes();

  CMsgDOTAMatchVotes(const CMsgDOTAMatchVotes& from);

  inline CMsgDOTAMatchVotes& operator=(const CMsgDOTAMatchVotes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchVotes& default_instance();

  void Swap(CMsgDOTAMatchVotes* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchVotes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchVotes& from);
  void MergeFrom(const CMsgDOTAMatchVotes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMatchVotes_PlayerVote PlayerVote;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // repeated .CMsgDOTAMatchVotes.PlayerVote votes = 2;
  inline int votes_size() const;
  inline void clear_votes();
  static const int kVotesFieldNumber = 2;
  inline const ::CMsgDOTAMatchVotes_PlayerVote& votes(int index) const;
  inline ::CMsgDOTAMatchVotes_PlayerVote* mutable_votes(int index);
  inline ::CMsgDOTAMatchVotes_PlayerVote* add_votes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >&
      votes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >*
      mutable_votes();

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchVotes)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote > votes_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchVotes* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCastMatchVote : public ::google::protobuf::Message {
 public:
  CMsgCastMatchVote();
  virtual ~CMsgCastMatchVote();

  CMsgCastMatchVote(const CMsgCastMatchVote& from);

  inline CMsgCastMatchVote& operator=(const CMsgCastMatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCastMatchVote& default_instance();

  void Swap(CMsgCastMatchVote* other);

  // implements Message ----------------------------------------------

  CMsgCastMatchVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCastMatchVote& from);
  void MergeFrom(const CMsgCastMatchVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 2;
  inline ::DOTAMatchVote vote() const;
  inline void set_vote(::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:CMsgCastMatchVote)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_vote();
  inline void clear_has_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int vote_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgCastMatchVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRetrieveMatchVote : public ::google::protobuf::Message {
 public:
  CMsgRetrieveMatchVote();
  virtual ~CMsgRetrieveMatchVote();

  CMsgRetrieveMatchVote(const CMsgRetrieveMatchVote& from);

  inline CMsgRetrieveMatchVote& operator=(const CMsgRetrieveMatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRetrieveMatchVote& default_instance();

  void Swap(CMsgRetrieveMatchVote* other);

  // implements Message ----------------------------------------------

  CMsgRetrieveMatchVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRetrieveMatchVote& from);
  void MergeFrom(const CMsgRetrieveMatchVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 incremental = 2;
  inline bool has_incremental() const;
  inline void clear_incremental();
  static const int kIncrementalFieldNumber = 2;
  inline ::google::protobuf::uint32 incremental() const;
  inline void set_incremental(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRetrieveMatchVote)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_incremental();
  inline void clear_has_incremental();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 incremental_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRetrieveMatchVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchVoteResponse : public ::google::protobuf::Message {
 public:
  CMsgMatchVoteResponse();
  virtual ~CMsgMatchVoteResponse();

  CMsgMatchVoteResponse(const CMsgMatchVoteResponse& from);

  inline CMsgMatchVoteResponse& operator=(const CMsgMatchVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchVoteResponse& default_instance();

  void Swap(CMsgMatchVoteResponse* other);

  // implements Message ----------------------------------------------

  CMsgMatchVoteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchVoteResponse& from);
  void MergeFrom(const CMsgMatchVoteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 2;
  inline ::DOTAMatchVote vote() const;
  inline void set_vote(::DOTAMatchVote value);

  // optional uint32 positive_votes = 3;
  inline bool has_positive_votes() const;
  inline void clear_positive_votes();
  static const int kPositiveVotesFieldNumber = 3;
  inline ::google::protobuf::uint32 positive_votes() const;
  inline void set_positive_votes(::google::protobuf::uint32 value);

  // optional uint32 negative_votes = 4;
  inline bool has_negative_votes() const;
  inline void clear_negative_votes();
  static const int kNegativeVotesFieldNumber = 4;
  inline ::google::protobuf::uint32 negative_votes() const;
  inline void set_negative_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchVoteResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_vote();
  inline void clear_has_vote();
  inline void set_has_positive_votes();
  inline void clear_has_positive_votes();
  inline void set_has_negative_votes();
  inline void clear_has_negative_votes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  int vote_;
  ::google::protobuf::uint32 positive_votes_;
  ::google::protobuf::uint32 negative_votes_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchVoteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedPlayer : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFame_FeaturedPlayer();
  virtual ~CMsgDOTAHallOfFame_FeaturedPlayer();

  CMsgDOTAHallOfFame_FeaturedPlayer(const CMsgDOTAHallOfFame_FeaturedPlayer& from);

  inline CMsgDOTAHallOfFame_FeaturedPlayer& operator=(const CMsgDOTAHallOfFame_FeaturedPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame_FeaturedPlayer& default_instance();

  void Swap(CMsgDOTAHallOfFame_FeaturedPlayer* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFame_FeaturedPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional float average_scaled_metric = 3;
  inline bool has_average_scaled_metric() const;
  inline void clear_average_scaled_metric();
  static const int kAverageScaledMetricFieldNumber = 3;
  inline float average_scaled_metric() const;
  inline void set_average_scaled_metric(float value);

  // optional uint32 num_games = 4;
  inline bool has_num_games() const;
  inline void clear_num_games();
  static const int kNumGamesFieldNumber = 4;
  inline ::google::protobuf::uint32 num_games() const;
  inline void set_num_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFame.FeaturedPlayer)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_average_scaled_metric();
  inline void clear_has_average_scaled_metric();
  inline void set_has_num_games();
  inline void clear_has_num_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  float average_scaled_metric_;
  ::google::protobuf::uint32 num_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFame_FeaturedPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedFarmer : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFame_FeaturedFarmer();
  virtual ~CMsgDOTAHallOfFame_FeaturedFarmer();

  CMsgDOTAHallOfFame_FeaturedFarmer(const CMsgDOTAHallOfFame_FeaturedFarmer& from);

  inline CMsgDOTAHallOfFame_FeaturedFarmer& operator=(const CMsgDOTAHallOfFame_FeaturedFarmer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame_FeaturedFarmer& default_instance();

  void Swap(CMsgDOTAHallOfFame_FeaturedFarmer* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFame_FeaturedFarmer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 gold_per_min = 3;
  inline bool has_gold_per_min() const;
  inline void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 3;
  inline ::google::protobuf::uint32 gold_per_min() const;
  inline void set_gold_per_min(::google::protobuf::uint32 value);

  // optional uint64 match_id = 4;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFame.FeaturedFarmer)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_gold_per_min();
  inline void clear_has_gold_per_min();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 gold_per_min_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFame_FeaturedFarmer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFame();
  virtual ~CMsgDOTAHallOfFame();

  CMsgDOTAHallOfFame(const CMsgDOTAHallOfFame& from);

  inline CMsgDOTAHallOfFame& operator=(const CMsgDOTAHallOfFame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame& default_instance();

  void Swap(CMsgDOTAHallOfFame* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFame& from);
  void MergeFrom(const CMsgDOTAHallOfFame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAHallOfFame_FeaturedPlayer FeaturedPlayer;
  typedef CMsgDOTAHallOfFame_FeaturedFarmer FeaturedFarmer;

  // accessors -------------------------------------------------------

  // optional uint32 week = 1;
  inline bool has_week() const;
  inline void clear_week();
  static const int kWeekFieldNumber = 1;
  inline ::google::protobuf::uint32 week() const;
  inline void set_week(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
  inline int featured_players_size() const;
  inline void clear_featured_players();
  static const int kFeaturedPlayersFieldNumber = 2;
  inline const ::CMsgDOTAHallOfFame_FeaturedPlayer& featured_players(int index) const;
  inline ::CMsgDOTAHallOfFame_FeaturedPlayer* mutable_featured_players(int index);
  inline ::CMsgDOTAHallOfFame_FeaturedPlayer* add_featured_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >&
      featured_players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >*
      mutable_featured_players();

  // optional .CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
  inline bool has_featured_farmer() const;
  inline void clear_featured_farmer();
  static const int kFeaturedFarmerFieldNumber = 3;
  inline const ::CMsgDOTAHallOfFame_FeaturedFarmer& featured_farmer() const;
  inline ::CMsgDOTAHallOfFame_FeaturedFarmer* mutable_featured_farmer();
  inline ::CMsgDOTAHallOfFame_FeaturedFarmer* release_featured_farmer();
  inline void set_allocated_featured_farmer(::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFame)
 private:
  inline void set_has_week();
  inline void clear_has_week();
  inline void set_has_featured_farmer();
  inline void clear_has_featured_farmer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer > featured_players_;
  ::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer_;
  ::google::protobuf::uint32 week_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFameRequest();
  virtual ~CMsgDOTAHallOfFameRequest();

  CMsgDOTAHallOfFameRequest(const CMsgDOTAHallOfFameRequest& from);

  inline CMsgDOTAHallOfFameRequest& operator=(const CMsgDOTAHallOfFameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFameRequest& default_instance();

  void Swap(CMsgDOTAHallOfFameRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFameRequest& from);
  void MergeFrom(const CMsgDOTAHallOfFameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 week = 1;
  inline bool has_week() const;
  inline void clear_week();
  static const int kWeekFieldNumber = 1;
  inline ::google::protobuf::uint32 week() const;
  inline void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFameRequest)
 private:
  inline void set_has_week();
  inline void clear_has_week();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 week_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFameResponse();
  virtual ~CMsgDOTAHallOfFameResponse();

  CMsgDOTAHallOfFameResponse(const CMsgDOTAHallOfFameResponse& from);

  inline CMsgDOTAHallOfFameResponse& operator=(const CMsgDOTAHallOfFameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFameResponse& default_instance();

  void Swap(CMsgDOTAHallOfFameResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFameResponse& from);
  void MergeFrom(const CMsgDOTAHallOfFameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAHallOfFame hall_of_fame = 1;
  inline bool has_hall_of_fame() const;
  inline void clear_hall_of_fame();
  static const int kHallOfFameFieldNumber = 1;
  inline const ::CMsgDOTAHallOfFame& hall_of_fame() const;
  inline ::CMsgDOTAHallOfFame* mutable_hall_of_fame();
  inline ::CMsgDOTAHallOfFame* release_hall_of_fame();
  inline void set_allocated_hall_of_fame(::CMsgDOTAHallOfFame* hall_of_fame);

  // optional uint32 eresult = 2 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFameResponse)
 private:
  inline void set_has_hall_of_fame();
  inline void clear_has_hall_of_fame();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAHallOfFame* hall_of_fame_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAHalloweenHighScoreRequest();
  virtual ~CMsgDOTAHalloweenHighScoreRequest();

  CMsgDOTAHalloweenHighScoreRequest(const CMsgDOTAHalloweenHighScoreRequest& from);

  inline CMsgDOTAHalloweenHighScoreRequest& operator=(const CMsgDOTAHalloweenHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHalloweenHighScoreRequest& default_instance();

  void Swap(CMsgDOTAHalloweenHighScoreRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHalloweenHighScoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 round = 1 [default = -1];
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHalloweenHighScoreRequest)
 private:
  inline void set_has_round();
  inline void clear_has_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 round_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHalloweenHighScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAHalloweenHighScoreResponse();
  virtual ~CMsgDOTAHalloweenHighScoreResponse();

  CMsgDOTAHalloweenHighScoreResponse(const CMsgDOTAHalloweenHighScoreResponse& from);

  inline CMsgDOTAHalloweenHighScoreResponse& operator=(const CMsgDOTAHalloweenHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHalloweenHighScoreResponse& default_instance();

  void Swap(CMsgDOTAHalloweenHighScoreResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHalloweenHighScoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional .CMsgDOTAMatch match = 2;
  inline bool has_match() const;
  inline void clear_match();
  static const int kMatchFieldNumber = 2;
  inline const ::CMsgDOTAMatch& match() const;
  inline ::CMsgDOTAMatch* mutable_match();
  inline ::CMsgDOTAMatch* release_match();
  inline void set_allocated_match(::CMsgDOTAMatch* match);

  // optional uint32 eresult = 3;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 3;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional int32 round = 4;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 4;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHalloweenHighScoreResponse)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_match();
  inline void clear_has_match();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_round();
  inline void clear_has_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::int32 round_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHalloweenHighScoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAStorePromoPagesRequest();
  virtual ~CMsgDOTAStorePromoPagesRequest();

  CMsgDOTAStorePromoPagesRequest(const CMsgDOTAStorePromoPagesRequest& from);

  inline CMsgDOTAStorePromoPagesRequest& operator=(const CMsgDOTAStorePromoPagesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesRequest& default_instance();

  void Swap(CMsgDOTAStorePromoPagesRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStorePromoPagesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStorePromoPagesRequest& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version_seen = 1;
  inline bool has_version_seen() const;
  inline void clear_version_seen();
  static const int kVersionSeenFieldNumber = 1;
  inline ::google::protobuf::uint32 version_seen() const;
  inline void set_version_seen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAStorePromoPagesRequest)
 private:
  inline void set_has_version_seen();
  inline void clear_has_version_seen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_seen_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStorePromoPagesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse_PromoPage : public ::google::protobuf::Message {
 public:
  CMsgDOTAStorePromoPagesResponse_PromoPage();
  virtual ~CMsgDOTAStorePromoPagesResponse_PromoPage();

  CMsgDOTAStorePromoPagesResponse_PromoPage(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);

  inline CMsgDOTAStorePromoPagesResponse_PromoPage& operator=(const CMsgDOTAStorePromoPagesResponse_PromoPage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesResponse_PromoPage& default_instance();

  void Swap(CMsgDOTAStorePromoPagesResponse_PromoPage* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStorePromoPagesResponse_PromoPage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 promo_id = 1;
  inline bool has_promo_id() const;
  inline void clear_promo_id();
  static const int kPromoIdFieldNumber = 1;
  inline ::google::protobuf::uint32 promo_id() const;
  inline void set_promo_id(::google::protobuf::uint32 value);

  // optional string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string url = 3;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 3;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:CMsgDOTAStorePromoPagesResponse.PromoPage)
 private:
  inline void set_has_promo_id();
  inline void clear_has_promo_id();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* url_;
  ::google::protobuf::uint32 promo_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStorePromoPagesResponse_PromoPage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAStorePromoPagesResponse();
  virtual ~CMsgDOTAStorePromoPagesResponse();

  CMsgDOTAStorePromoPagesResponse(const CMsgDOTAStorePromoPagesResponse& from);

  inline CMsgDOTAStorePromoPagesResponse& operator=(const CMsgDOTAStorePromoPagesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesResponse& default_instance();

  void Swap(CMsgDOTAStorePromoPagesResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStorePromoPagesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAStorePromoPagesResponse_PromoPage PromoPage;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
  inline int pages_size() const;
  inline void clear_pages();
  static const int kPagesFieldNumber = 1;
  inline const ::CMsgDOTAStorePromoPagesResponse_PromoPage& pages(int index) const;
  inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* mutable_pages(int index);
  inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* add_pages();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >&
      pages() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >*
      mutable_pages();

  // @@protoc_insertion_point(class_scope:CMsgDOTAStorePromoPagesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage > pages_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStorePromoPagesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeagueScheduleBlockTeamInfo : public ::google::protobuf::Message {
 public:
  CMsgLeagueScheduleBlockTeamInfo();
  virtual ~CMsgLeagueScheduleBlockTeamInfo();

  CMsgLeagueScheduleBlockTeamInfo(const CMsgLeagueScheduleBlockTeamInfo& from);

  inline CMsgLeagueScheduleBlockTeamInfo& operator=(const CMsgLeagueScheduleBlockTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeagueScheduleBlockTeamInfo& default_instance();

  void Swap(CMsgLeagueScheduleBlockTeamInfo* other);

  // implements Message ----------------------------------------------

  CMsgLeagueScheduleBlockTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeagueScheduleBlockTeamInfo& from);
  void MergeFrom(const CMsgLeagueScheduleBlockTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 logo = 4;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgLeagueScheduleBlockTeamInfo)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_logo();
  inline void clear_has_logo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeagueScheduleBlockTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeagueScheduleBlock : public ::google::protobuf::Message {
 public:
  CMsgLeagueScheduleBlock();
  virtual ~CMsgLeagueScheduleBlock();

  CMsgLeagueScheduleBlock(const CMsgLeagueScheduleBlock& from);

  inline CMsgLeagueScheduleBlock& operator=(const CMsgLeagueScheduleBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeagueScheduleBlock& default_instance();

  void Swap(CMsgLeagueScheduleBlock* other);

  // implements Message ----------------------------------------------

  CMsgLeagueScheduleBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeagueScheduleBlock& from);
  void MergeFrom(const CMsgLeagueScheduleBlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 block_id = 1;
  inline bool has_block_id() const;
  inline void clear_block_id();
  static const int kBlockIdFieldNumber = 1;
  inline ::google::protobuf::uint32 block_id() const;
  inline void set_block_id(::google::protobuf::uint32 value);

  // optional uint32 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional bool finals = 4;
  inline bool has_finals() const;
  inline void clear_finals();
  static const int kFinalsFieldNumber = 4;
  inline bool finals() const;
  inline void set_finals(bool value);

  // optional string comment = 5;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 5;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // repeated .CMsgLeagueScheduleBlockTeamInfo teams = 6;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 6;
  inline const ::CMsgLeagueScheduleBlockTeamInfo& teams(int index) const;
  inline ::CMsgLeagueScheduleBlockTeamInfo* mutable_teams(int index);
  inline ::CMsgLeagueScheduleBlockTeamInfo* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >*
      mutable_teams();

  // @@protoc_insertion_point(class_scope:CMsgLeagueScheduleBlock)
 private:
  inline void set_has_block_id();
  inline void clear_has_block_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_finals();
  inline void clear_has_finals();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 start_time_;
  ::std::string* comment_;
  ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo > teams_;
  bool finals_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeagueScheduleBlock* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeague : public ::google::protobuf::Message {
 public:
  CMsgDOTALeague();
  virtual ~CMsgDOTALeague();

  CMsgDOTALeague(const CMsgDOTALeague& from);

  inline CMsgDOTALeague& operator=(const CMsgDOTALeague& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeague& default_instance();

  void Swap(CMsgDOTALeague* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeague* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeague& from);
  void MergeFrom(const CMsgDOTALeague& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // repeated .CMsgLeagueScheduleBlock schedule = 2;
  inline int schedule_size() const;
  inline void clear_schedule();
  static const int kScheduleFieldNumber = 2;
  inline const ::CMsgLeagueScheduleBlock& schedule(int index) const;
  inline ::CMsgLeagueScheduleBlock* mutable_schedule(int index);
  inline ::CMsgLeagueScheduleBlock* add_schedule();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >&
      schedule() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >*
      mutable_schedule();

  // @@protoc_insertion_point(class_scope:CMsgDOTALeague)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock > schedule_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeague* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleRequest();
  virtual ~CMsgDOTALeagueScheduleRequest();

  CMsgDOTALeagueScheduleRequest(const CMsgDOTALeagueScheduleRequest& from);

  inline CMsgDOTALeagueScheduleRequest& operator=(const CMsgDOTALeagueScheduleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleRequest& default_instance();

  void Swap(CMsgDOTALeagueScheduleRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleRequest& from);
  void MergeFrom(const CMsgDOTALeagueScheduleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleRequest)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleResponse();
  virtual ~CMsgDOTALeagueScheduleResponse();

  CMsgDOTALeagueScheduleResponse(const CMsgDOTALeagueScheduleResponse& from);

  inline CMsgDOTALeagueScheduleResponse& operator=(const CMsgDOTALeagueScheduleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleResponse& default_instance();

  void Swap(CMsgDOTALeagueScheduleResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleResponse& from);
  void MergeFrom(const CMsgDOTALeagueScheduleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTALeague league = 1;
  inline bool has_league() const;
  inline void clear_league();
  static const int kLeagueFieldNumber = 1;
  inline const ::CMsgDOTALeague& league() const;
  inline ::CMsgDOTALeague* mutable_league();
  inline ::CMsgDOTALeague* release_league();
  inline void set_allocated_league(::CMsgDOTALeague* league);

  // optional uint32 eresult = 2 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleResponse)
 private:
  inline void set_has_league();
  inline void clear_has_league();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTALeague* league_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleEdit : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleEdit();
  virtual ~CMsgDOTALeagueScheduleEdit();

  CMsgDOTALeagueScheduleEdit(const CMsgDOTALeagueScheduleEdit& from);

  inline CMsgDOTALeagueScheduleEdit& operator=(const CMsgDOTALeagueScheduleEdit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleEdit& default_instance();

  void Swap(CMsgDOTALeagueScheduleEdit* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleEdit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleEdit& from);
  void MergeFrom(const CMsgDOTALeagueScheduleEdit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional .CMsgLeagueScheduleBlock schedule = 2;
  inline bool has_schedule() const;
  inline void clear_schedule();
  static const int kScheduleFieldNumber = 2;
  inline const ::CMsgLeagueScheduleBlock& schedule() const;
  inline ::CMsgLeagueScheduleBlock* mutable_schedule();
  inline ::CMsgLeagueScheduleBlock* release_schedule();
  inline void set_allocated_schedule(::CMsgLeagueScheduleBlock* schedule);

  // optional bool delete_block = 3;
  inline bool has_delete_block() const;
  inline void clear_delete_block();
  static const int kDeleteBlockFieldNumber = 3;
  inline bool delete_block() const;
  inline void set_delete_block(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleEdit)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_schedule();
  inline void clear_has_schedule();
  inline void set_has_delete_block();
  inline void clear_has_delete_block();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgLeagueScheduleBlock* schedule_;
  ::google::protobuf::uint32 league_id_;
  bool delete_block_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleEdit* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleEditResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleEditResponse();
  virtual ~CMsgDOTALeagueScheduleEditResponse();

  CMsgDOTALeagueScheduleEditResponse(const CMsgDOTALeagueScheduleEditResponse& from);

  inline CMsgDOTALeagueScheduleEditResponse& operator=(const CMsgDOTALeagueScheduleEditResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleEditResponse& default_instance();

  void Swap(CMsgDOTALeagueScheduleEditResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleEditResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleEditResponse& from);
  void MergeFrom(const CMsgDOTALeagueScheduleEditResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTALeague league = 1;
  inline bool has_league() const;
  inline void clear_league();
  static const int kLeagueFieldNumber = 1;
  inline const ::CMsgDOTALeague& league() const;
  inline ::CMsgDOTALeague* mutable_league();
  inline ::CMsgDOTALeague* release_league();
  inline void set_allocated_league(::CMsgDOTALeague* league);

  // optional uint32 eresult = 2 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleEditResponse)
 private:
  inline void set_has_league();
  inline void clear_has_league();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTALeague* league_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleEditResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeaguesInMonthRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTALeaguesInMonthRequest();
  virtual ~CMsgDOTALeaguesInMonthRequest();

  CMsgDOTALeaguesInMonthRequest(const CMsgDOTALeaguesInMonthRequest& from);

  inline CMsgDOTALeaguesInMonthRequest& operator=(const CMsgDOTALeaguesInMonthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaguesInMonthRequest& default_instance();

  void Swap(CMsgDOTALeaguesInMonthRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeaguesInMonthRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeaguesInMonthRequest& from);
  void MergeFrom(const CMsgDOTALeaguesInMonthRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 month = 1;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 1;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);

  // optional uint32 year = 2;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 2;
  inline ::google::protobuf::uint32 year() const;
  inline void set_year(::google::protobuf::uint32 value);

  // optional uint32 tier = 3;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 3;
  inline ::google::protobuf::uint32 tier() const;
  inline void set_tier(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeaguesInMonthRequest)
 private:
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_year();
  inline void clear_has_year();
  inline void set_has_tier();
  inline void clear_has_tier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 tier_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeaguesInMonthRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeaguesInMonthResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALeaguesInMonthResponse();
  virtual ~CMsgDOTALeaguesInMonthResponse();

  CMsgDOTALeaguesInMonthResponse(const CMsgDOTALeaguesInMonthResponse& from);

  inline CMsgDOTALeaguesInMonthResponse& operator=(const CMsgDOTALeaguesInMonthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaguesInMonthResponse& default_instance();

  void Swap(CMsgDOTALeaguesInMonthResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeaguesInMonthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeaguesInMonthResponse& from);
  void MergeFrom(const CMsgDOTALeaguesInMonthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 month = 2;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 2;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);

  // optional uint32 year = 3;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 3;
  inline ::google::protobuf::uint32 year() const;
  inline void set_year(::google::protobuf::uint32 value);

  // repeated .CMsgDOTALeague leagues = 4;
  inline int leagues_size() const;
  inline void clear_leagues();
  static const int kLeaguesFieldNumber = 4;
  inline const ::CMsgDOTALeague& leagues(int index) const;
  inline ::CMsgDOTALeague* mutable_leagues(int index);
  inline ::CMsgDOTALeague* add_leagues();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >&
      leagues() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >*
      mutable_leagues();

  // @@protoc_insertion_point(class_scope:CMsgDOTALeaguesInMonthResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_year();
  inline void clear_has_year();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague > leagues_;
  ::google::protobuf::uint32 year_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeaguesInMonthResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingMatchGroupInfo : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingMatchGroupInfo();
  virtual ~CMsgMatchmakingMatchGroupInfo();

  CMsgMatchmakingMatchGroupInfo(const CMsgMatchmakingMatchGroupInfo& from);

  inline CMsgMatchmakingMatchGroupInfo& operator=(const CMsgMatchmakingMatchGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingMatchGroupInfo& default_instance();

  void Swap(CMsgMatchmakingMatchGroupInfo* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingMatchGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingMatchGroupInfo& from);
  void MergeFrom(const CMsgMatchmakingMatchGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 players_searching = 1;
  inline bool has_players_searching() const;
  inline void clear_players_searching();
  static const int kPlayersSearchingFieldNumber = 1;
  inline ::google::protobuf::uint32 players_searching() const;
  inline void set_players_searching(::google::protobuf::uint32 value);

  // optional sint32 auto_region_select_ping_penalty = 2;
  inline bool has_auto_region_select_ping_penalty() const;
  inline void clear_auto_region_select_ping_penalty();
  static const int kAutoRegionSelectPingPenaltyFieldNumber = 2;
  inline ::google::protobuf::int32 auto_region_select_ping_penalty() const;
  inline void set_auto_region_select_ping_penalty(::google::protobuf::int32 value);

  // optional .EMatchGroupServerStatus status = 3 [default = k_EMatchGroupServerStatus_OK];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::EMatchGroupServerStatus status() const;
  inline void set_status(::EMatchGroupServerStatus value);

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingMatchGroupInfo)
 private:
  inline void set_has_players_searching();
  inline void clear_has_players_searching();
  inline void set_has_auto_region_select_ping_penalty();
  inline void clear_has_auto_region_select_ping_penalty();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 players_searching_;
  ::google::protobuf::int32 auto_region_select_ping_penalty_;
  int status_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingMatchGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchmakingStatsRequest();
  virtual ~CMsgDOTAMatchmakingStatsRequest();

  CMsgDOTAMatchmakingStatsRequest(const CMsgDOTAMatchmakingStatsRequest& from);

  inline CMsgDOTAMatchmakingStatsRequest& operator=(const CMsgDOTAMatchmakingStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchmakingStatsRequest& default_instance();

  void Swap(CMsgDOTAMatchmakingStatsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchmakingStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchmakingStatsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchmakingStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchmakingStatsResponse();
  virtual ~CMsgDOTAMatchmakingStatsResponse();

  CMsgDOTAMatchmakingStatsResponse(const CMsgDOTAMatchmakingStatsResponse& from);

  inline CMsgDOTAMatchmakingStatsResponse& operator=(const CMsgDOTAMatchmakingStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchmakingStatsResponse& default_instance();

  void Swap(CMsgDOTAMatchmakingStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchmakingStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 matchgroups_version = 1;
  inline bool has_matchgroups_version() const;
  inline void clear_matchgroups_version();
  static const int kMatchgroupsVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 matchgroups_version() const;
  inline void set_matchgroups_version(::google::protobuf::uint32 value);

  // repeated uint32 legacy_searching_players_by_group_source2 = 7;
  inline int legacy_searching_players_by_group_source2_size() const;
  inline void clear_legacy_searching_players_by_group_source2();
  static const int kLegacySearchingPlayersByGroupSource2FieldNumber = 7;
  inline ::google::protobuf::uint32 legacy_searching_players_by_group_source2(int index) const;
  inline void set_legacy_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value);
  inline void add_legacy_searching_players_by_group_source2(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      legacy_searching_players_by_group_source2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_legacy_searching_players_by_group_source2();

  // repeated .CMsgMatchmakingMatchGroupInfo match_groups = 8;
  inline int match_groups_size() const;
  inline void clear_match_groups();
  static const int kMatchGroupsFieldNumber = 8;
  inline const ::CMsgMatchmakingMatchGroupInfo& match_groups(int index) const;
  inline ::CMsgMatchmakingMatchGroupInfo* mutable_match_groups(int index);
  inline ::CMsgMatchmakingMatchGroupInfo* add_match_groups();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMatchmakingMatchGroupInfo >&
      match_groups() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMatchmakingMatchGroupInfo >*
      mutable_match_groups();

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchmakingStatsResponse)
 private:
  inline void set_has_matchgroups_version();
  inline void clear_has_matchgroups_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > legacy_searching_players_by_group_source2_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMatchmakingMatchGroupInfo > match_groups_;
  ::google::protobuf::uint32 matchgroups_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchmakingStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateMatchmakingStats : public ::google::protobuf::Message {
 public:
  CMsgDOTAUpdateMatchmakingStats();
  virtual ~CMsgDOTAUpdateMatchmakingStats();

  CMsgDOTAUpdateMatchmakingStats(const CMsgDOTAUpdateMatchmakingStats& from);

  inline CMsgDOTAUpdateMatchmakingStats& operator=(const CMsgDOTAUpdateMatchmakingStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUpdateMatchmakingStats& default_instance();

  void Swap(CMsgDOTAUpdateMatchmakingStats* other);

  // implements Message ----------------------------------------------

  CMsgDOTAUpdateMatchmakingStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAUpdateMatchmakingStats& from);
  void MergeFrom(const CMsgDOTAUpdateMatchmakingStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAMatchmakingStatsResponse stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline const ::CMsgDOTAMatchmakingStatsResponse& stats() const;
  inline ::CMsgDOTAMatchmakingStatsResponse* mutable_stats();
  inline ::CMsgDOTAMatchmakingStatsResponse* release_stats();
  inline void set_allocated_stats(::CMsgDOTAMatchmakingStatsResponse* stats);

  // @@protoc_insertion_point(class_scope:CMsgDOTAUpdateMatchmakingStats)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAMatchmakingStatsResponse* stats_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAUpdateMatchmakingStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateMatchManagementStats : public ::google::protobuf::Message {
 public:
  CMsgDOTAUpdateMatchManagementStats();
  virtual ~CMsgDOTAUpdateMatchManagementStats();

  CMsgDOTAUpdateMatchManagementStats(const CMsgDOTAUpdateMatchManagementStats& from);

  inline CMsgDOTAUpdateMatchManagementStats& operator=(const CMsgDOTAUpdateMatchManagementStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUpdateMatchManagementStats& default_instance();

  void Swap(CMsgDOTAUpdateMatchManagementStats* other);

  // implements Message ----------------------------------------------

  CMsgDOTAUpdateMatchManagementStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAUpdateMatchManagementStats& from);
  void MergeFrom(const CMsgDOTAUpdateMatchManagementStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAMatchmakingStatsResponse stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline const ::CMsgDOTAMatchmakingStatsResponse& stats() const;
  inline ::CMsgDOTAMatchmakingStatsResponse* mutable_stats();
  inline ::CMsgDOTAMatchmakingStatsResponse* release_stats();
  inline void set_allocated_stats(::CMsgDOTAMatchmakingStatsResponse* stats);

  // @@protoc_insertion_point(class_scope:CMsgDOTAUpdateMatchManagementStats)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAMatchmakingStatsResponse* stats_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAUpdateMatchManagementStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccess : public ::google::protobuf::Message {
 public:
  CMsgDOTASetMatchHistoryAccess();
  virtual ~CMsgDOTASetMatchHistoryAccess();

  CMsgDOTASetMatchHistoryAccess(const CMsgDOTASetMatchHistoryAccess& from);

  inline CMsgDOTASetMatchHistoryAccess& operator=(const CMsgDOTASetMatchHistoryAccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetMatchHistoryAccess& default_instance();

  void Swap(CMsgDOTASetMatchHistoryAccess* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetMatchHistoryAccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetMatchHistoryAccess& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool allow_3rd_party_match_history = 1;
  inline bool has_allow_3rd_party_match_history() const;
  inline void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 1;
  inline bool allow_3rd_party_match_history() const;
  inline void set_allow_3rd_party_match_history(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetMatchHistoryAccess)
 private:
  inline void set_has_allow_3rd_party_match_history();
  inline void clear_has_allow_3rd_party_match_history();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool allow_3rd_party_match_history_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetMatchHistoryAccess* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccessResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTASetMatchHistoryAccessResponse();
  virtual ~CMsgDOTASetMatchHistoryAccessResponse();

  CMsgDOTASetMatchHistoryAccessResponse(const CMsgDOTASetMatchHistoryAccessResponse& from);

  inline CMsgDOTASetMatchHistoryAccessResponse& operator=(const CMsgDOTASetMatchHistoryAccessResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetMatchHistoryAccessResponse& default_instance();

  void Swap(CMsgDOTASetMatchHistoryAccessResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetMatchHistoryAccessResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetMatchHistoryAccessResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetMatchHistoryAccessResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTANotifyAccountFlagsChange : public ::google::protobuf::Message {
 public:
  CMsgDOTANotifyAccountFlagsChange();
  virtual ~CMsgDOTANotifyAccountFlagsChange();

  CMsgDOTANotifyAccountFlagsChange(const CMsgDOTANotifyAccountFlagsChange& from);

  inline CMsgDOTANotifyAccountFlagsChange& operator=(const CMsgDOTANotifyAccountFlagsChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTANotifyAccountFlagsChange& default_instance();

  void Swap(CMsgDOTANotifyAccountFlagsChange* other);

  // implements Message ----------------------------------------------

  CMsgDOTANotifyAccountFlagsChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  void MergeFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 account_flags = 2;
  inline bool has_account_flags() const;
  inline void clear_account_flags();
  static const int kAccountFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 account_flags() const;
  inline void set_account_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTANotifyAccountFlagsChange)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_account_flags();
  inline void clear_has_account_flags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 account_flags_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTANotifyAccountFlagsChange* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacy : public ::google::protobuf::Message {
 public:
  CMsgDOTASetProfilePrivacy();
  virtual ~CMsgDOTASetProfilePrivacy();

  CMsgDOTASetProfilePrivacy(const CMsgDOTASetProfilePrivacy& from);

  inline CMsgDOTASetProfilePrivacy& operator=(const CMsgDOTASetProfilePrivacy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetProfilePrivacy& default_instance();

  void Swap(CMsgDOTASetProfilePrivacy* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetProfilePrivacy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetProfilePrivacy& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool profile_private = 1;
  inline bool has_profile_private() const;
  inline void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 1;
  inline bool profile_private() const;
  inline void set_profile_private(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetProfilePrivacy)
 private:
  inline void set_has_profile_private();
  inline void clear_has_profile_private();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool profile_private_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetProfilePrivacy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacyResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTASetProfilePrivacyResponse();
  virtual ~CMsgDOTASetProfilePrivacyResponse();

  CMsgDOTASetProfilePrivacyResponse(const CMsgDOTASetProfilePrivacyResponse& from);

  inline CMsgDOTASetProfilePrivacyResponse& operator=(const CMsgDOTASetProfilePrivacyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetProfilePrivacyResponse& default_instance();

  void Swap(CMsgDOTASetProfilePrivacyResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetProfilePrivacyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetProfilePrivacyResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetProfilePrivacyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItem : public ::google::protobuf::Message {
 public:
  CMsgUpgradeLeagueItem();
  virtual ~CMsgUpgradeLeagueItem();

  CMsgUpgradeLeagueItem(const CMsgUpgradeLeagueItem& from);

  inline CMsgUpgradeLeagueItem& operator=(const CMsgUpgradeLeagueItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpgradeLeagueItem& default_instance();

  void Swap(CMsgUpgradeLeagueItem* other);

  // implements Message ----------------------------------------------

  CMsgUpgradeLeagueItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpgradeLeagueItem& from);
  void MergeFrom(const CMsgUpgradeLeagueItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 2;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgUpgradeLeagueItem)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpgradeLeagueItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItemResponse : public ::google::protobuf::Message {
 public:
  CMsgUpgradeLeagueItemResponse();
  virtual ~CMsgUpgradeLeagueItemResponse();

  CMsgUpgradeLeagueItemResponse(const CMsgUpgradeLeagueItemResponse& from);

  inline CMsgUpgradeLeagueItemResponse& operator=(const CMsgUpgradeLeagueItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpgradeLeagueItemResponse& default_instance();

  void Swap(CMsgUpgradeLeagueItemResponse* other);

  // implements Message ----------------------------------------------

  CMsgUpgradeLeagueItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpgradeLeagueItemResponse& from);
  void MergeFrom(const CMsgUpgradeLeagueItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgUpgradeLeagueItemResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpgradeLeagueItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCWatchDownloadedReplay : public ::google::protobuf::Message {
 public:
  CMsgGCWatchDownloadedReplay();
  virtual ~CMsgGCWatchDownloadedReplay();

  CMsgGCWatchDownloadedReplay(const CMsgGCWatchDownloadedReplay& from);

  inline CMsgGCWatchDownloadedReplay& operator=(const CMsgGCWatchDownloadedReplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCWatchDownloadedReplay& default_instance();

  void Swap(CMsgGCWatchDownloadedReplay* other);

  // implements Message ----------------------------------------------

  CMsgGCWatchDownloadedReplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCWatchDownloadedReplay& from);
  void MergeFrom(const CMsgGCWatchDownloadedReplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional .DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
  inline bool has_watch_type() const;
  inline void clear_watch_type();
  static const int kWatchTypeFieldNumber = 2;
  inline ::DOTA_WatchReplayType watch_type() const;
  inline void set_watch_type(::DOTA_WatchReplayType value);

  // @@protoc_insertion_point(class_scope:CMsgGCWatchDownloadedReplay)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_watch_type();
  inline void clear_has_watch_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int watch_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCWatchDownloadedReplay* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationState : public ::google::protobuf::Message {
 public:
  CMsgSetMapLocationState();
  virtual ~CMsgSetMapLocationState();

  CMsgSetMapLocationState(const CMsgSetMapLocationState& from);

  inline CMsgSetMapLocationState& operator=(const CMsgSetMapLocationState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetMapLocationState& default_instance();

  void Swap(CMsgSetMapLocationState* other);

  // implements Message ----------------------------------------------

  CMsgSetMapLocationState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetMapLocationState& from);
  void MergeFrom(const CMsgSetMapLocationState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 location_id = 1;
  inline bool has_location_id() const;
  inline void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  inline ::google::protobuf::int32 location_id() const;
  inline void set_location_id(::google::protobuf::int32 value);

  // optional bool completed = 2;
  inline bool has_completed() const;
  inline void clear_completed();
  static const int kCompletedFieldNumber = 2;
  inline bool completed() const;
  inline void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:CMsgSetMapLocationState)
 private:
  inline void set_has_location_id();
  inline void clear_has_location_id();
  inline void set_has_completed();
  inline void clear_has_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 location_id_;
  bool completed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetMapLocationState* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationStateResponse : public ::google::protobuf::Message {
 public:
  CMsgSetMapLocationStateResponse();
  virtual ~CMsgSetMapLocationStateResponse();

  CMsgSetMapLocationStateResponse(const CMsgSetMapLocationStateResponse& from);

  inline CMsgSetMapLocationStateResponse& operator=(const CMsgSetMapLocationStateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetMapLocationStateResponse& default_instance();

  void Swap(CMsgSetMapLocationStateResponse* other);

  // implements Message ----------------------------------------------

  CMsgSetMapLocationStateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetMapLocationStateResponse& from);
  void MergeFrom(const CMsgSetMapLocationStateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSetMapLocationStateResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetMapLocationStateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgResetMapLocations : public ::google::protobuf::Message {
 public:
  CMsgResetMapLocations();
  virtual ~CMsgResetMapLocations();

  CMsgResetMapLocations(const CMsgResetMapLocations& from);

  inline CMsgResetMapLocations& operator=(const CMsgResetMapLocations& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResetMapLocations& default_instance();

  void Swap(CMsgResetMapLocations* other);

  // implements Message ----------------------------------------------

  CMsgResetMapLocations* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgResetMapLocations& from);
  void MergeFrom(const CMsgResetMapLocations& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgResetMapLocations)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgResetMapLocations* default_instance_;
};
// -------------------------------------------------------------------

class CMsgResetMapLocationsResponse : public ::google::protobuf::Message {
 public:
  CMsgResetMapLocationsResponse();
  virtual ~CMsgResetMapLocationsResponse();

  CMsgResetMapLocationsResponse(const CMsgResetMapLocationsResponse& from);

  inline CMsgResetMapLocationsResponse& operator=(const CMsgResetMapLocationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResetMapLocationsResponse& default_instance();

  void Swap(CMsgResetMapLocationsResponse* other);

  // implements Message ----------------------------------------------

  CMsgResetMapLocationsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgResetMapLocationsResponse& from);
  void MergeFrom(const CMsgResetMapLocationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgResetMapLocationsResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgResetMapLocationsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRefreshPartnerAccountLink : public ::google::protobuf::Message {
 public:
  CMsgRefreshPartnerAccountLink();
  virtual ~CMsgRefreshPartnerAccountLink();

  CMsgRefreshPartnerAccountLink(const CMsgRefreshPartnerAccountLink& from);

  inline CMsgRefreshPartnerAccountLink& operator=(const CMsgRefreshPartnerAccountLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRefreshPartnerAccountLink& default_instance();

  void Swap(CMsgRefreshPartnerAccountLink* other);

  // implements Message ----------------------------------------------

  CMsgRefreshPartnerAccountLink* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRefreshPartnerAccountLink& from);
  void MergeFrom(const CMsgRefreshPartnerAccountLink& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 partner_type = 1;
  inline bool has_partner_type() const;
  inline void clear_partner_type();
  static const int kPartnerTypeFieldNumber = 1;
  inline ::google::protobuf::int32 partner_type() const;
  inline void set_partner_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgRefreshPartnerAccountLink)
 private:
  inline void set_has_partner_type();
  inline void clear_has_partner_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 partner_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRefreshPartnerAccountLink* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientsRejoinChatChannels : public ::google::protobuf::Message {
 public:
  CMsgClientsRejoinChatChannels();
  virtual ~CMsgClientsRejoinChatChannels();

  CMsgClientsRejoinChatChannels(const CMsgClientsRejoinChatChannels& from);

  inline CMsgClientsRejoinChatChannels& operator=(const CMsgClientsRejoinChatChannels& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientsRejoinChatChannels& default_instance();

  void Swap(CMsgClientsRejoinChatChannels* other);

  // implements Message ----------------------------------------------

  CMsgClientsRejoinChatChannels* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientsRejoinChatChannels& from);
  void MergeFrom(const CMsgClientsRejoinChatChannels& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientsRejoinChatChannels)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientsRejoinChatChannels* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASendFriendRecruits : public ::google::protobuf::Message {
 public:
  CMsgDOTASendFriendRecruits();
  virtual ~CMsgDOTASendFriendRecruits();

  CMsgDOTASendFriendRecruits(const CMsgDOTASendFriendRecruits& from);

  inline CMsgDOTASendFriendRecruits& operator=(const CMsgDOTASendFriendRecruits& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASendFriendRecruits& default_instance();

  void Swap(CMsgDOTASendFriendRecruits* other);

  // implements Message ----------------------------------------------

  CMsgDOTASendFriendRecruits* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASendFriendRecruits& from);
  void MergeFrom(const CMsgDOTASendFriendRecruits& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recruits = 1;
  inline int recruits_size() const;
  inline void clear_recruits();
  static const int kRecruitsFieldNumber = 1;
  inline ::google::protobuf::uint32 recruits(int index) const;
  inline void set_recruits(int index, ::google::protobuf::uint32 value);
  inline void add_recruits(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recruits() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recruits();

  // @@protoc_insertion_point(class_scope:CMsgDOTASendFriendRecruits)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recruits_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASendFriendRecruits* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitsRequest();
  virtual ~CMsgDOTAFriendRecruitsRequest();

  CMsgDOTAFriendRecruitsRequest(const CMsgDOTAFriendRecruitsRequest& from);

  inline CMsgDOTAFriendRecruitsRequest& operator=(const CMsgDOTAFriendRecruitsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsRequest& default_instance();

  void Swap(CMsgDOTAFriendRecruitsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitsRequest& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();
  virtual ~CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);

  inline CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& operator=(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& default_instance();

  void Swap(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 levels_earned = 3;
  inline bool has_levels_earned() const;
  inline void clear_levels_earned();
  static const int kLevelsEarnedFieldNumber = 3;
  inline ::google::protobuf::uint32 levels_earned() const;
  inline void set_levels_earned(::google::protobuf::uint32 value);

  // optional bool bonus = 4;
  inline bool has_bonus() const;
  inline void clear_bonus();
  static const int kBonusFieldNumber = 4;
  inline bool bonus() const;
  inline void set_bonus(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_levels_earned();
  inline void clear_has_levels_earned();
  inline void set_has_bonus();
  inline void clear_has_bonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 levels_earned_;
  bool bonus_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitsResponse();
  virtual ~CMsgDOTAFriendRecruitsResponse();

  CMsgDOTAFriendRecruitsResponse(const CMsgDOTAFriendRecruitsResponse& from);

  inline CMsgDOTAFriendRecruitsResponse& operator=(const CMsgDOTAFriendRecruitsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsResponse& default_instance();

  void Swap(CMsgDOTAFriendRecruitsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus FriendRecruitStatus;

  typedef CMsgDOTAFriendRecruitsResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAFriendRecruitsResponse_EResult result() const;
  inline void set_result(::CMsgDOTAFriendRecruitsResponse_EResult value);

  // repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
  inline int recruits_size() const;
  inline void clear_recruits();
  static const int kRecruitsFieldNumber = 2;
  inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruits(int index) const;
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruits(int index);
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruits();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruits() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruits();

  // repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
  inline int recruiters_size() const;
  inline void clear_recruiters();
  static const int kRecruitersFieldNumber = 3;
  inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruiters(int index) const;
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruiters(int index);
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruiters();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruiters() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruiters();

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruits_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruiters_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitInviteAcceptDecline : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitInviteAcceptDecline();
  virtual ~CMsgDOTAFriendRecruitInviteAcceptDecline();

  CMsgDOTAFriendRecruitInviteAcceptDecline(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);

  inline CMsgDOTAFriendRecruitInviteAcceptDecline& operator=(const CMsgDOTAFriendRecruitInviteAcceptDecline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitInviteAcceptDecline& default_instance();

  void Swap(CMsgDOTAFriendRecruitInviteAcceptDecline* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitInviteAcceptDecline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  void MergeFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accepted = 1;
  inline bool has_accepted() const;
  inline void clear_accepted();
  static const int kAcceptedFieldNumber = 1;
  inline bool accepted() const;
  inline void set_accepted(bool value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitInviteAcceptDecline)
 private:
  inline void set_has_accepted();
  inline void clear_has_accepted();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool accepted_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitInviteAcceptDecline* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePool : public ::google::protobuf::Message {
 public:
  CMsgRequestLeaguePrizePool();
  virtual ~CMsgRequestLeaguePrizePool();

  CMsgRequestLeaguePrizePool(const CMsgRequestLeaguePrizePool& from);

  inline CMsgRequestLeaguePrizePool& operator=(const CMsgRequestLeaguePrizePool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeaguePrizePool& default_instance();

  void Swap(CMsgRequestLeaguePrizePool* other);

  // implements Message ----------------------------------------------

  CMsgRequestLeaguePrizePool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestLeaguePrizePool& from);
  void MergeFrom(const CMsgRequestLeaguePrizePool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRequestLeaguePrizePool)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestLeaguePrizePool* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePoolResponse : public ::google::protobuf::Message {
 public:
  CMsgRequestLeaguePrizePoolResponse();
  virtual ~CMsgRequestLeaguePrizePoolResponse();

  CMsgRequestLeaguePrizePoolResponse(const CMsgRequestLeaguePrizePoolResponse& from);

  inline CMsgRequestLeaguePrizePoolResponse& operator=(const CMsgRequestLeaguePrizePoolResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeaguePrizePoolResponse& default_instance();

  void Swap(CMsgRequestLeaguePrizePoolResponse* other);

  // implements Message ----------------------------------------------

  CMsgRequestLeaguePrizePoolResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  void MergeFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 prize_pool = 2;
  inline bool has_prize_pool() const;
  inline void clear_prize_pool();
  static const int kPrizePoolFieldNumber = 2;
  inline ::google::protobuf::uint32 prize_pool() const;
  inline void set_prize_pool(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRequestLeaguePrizePoolResponse)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_prize_pool();
  inline void clear_has_prize_pool();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 prize_pool_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestLeaguePrizePoolResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandings : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStandings();
  virtual ~CMsgGCGetHeroStandings();

  CMsgGCGetHeroStandings(const CMsgGCGetHeroStandings& from);

  inline CMsgGCGetHeroStandings& operator=(const CMsgGCGetHeroStandings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandings& default_instance();

  void Swap(CMsgGCGetHeroStandings* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStandings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStandings& from);
  void MergeFrom(const CMsgGCGetHeroStandings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStandings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStandings* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse_Hero : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStandingsResponse_Hero();
  virtual ~CMsgGCGetHeroStandingsResponse_Hero();

  CMsgGCGetHeroStandingsResponse_Hero(const CMsgGCGetHeroStandingsResponse_Hero& from);

  inline CMsgGCGetHeroStandingsResponse_Hero& operator=(const CMsgGCGetHeroStandingsResponse_Hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandingsResponse_Hero& default_instance();

  void Swap(CMsgGCGetHeroStandingsResponse_Hero* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStandingsResponse_Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 wins = 2;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 wins() const;
  inline void set_wins(::google::protobuf::uint32 value);

  // optional uint32 losses = 3;
  inline bool has_losses() const;
  inline void clear_losses();
  static const int kLossesFieldNumber = 3;
  inline ::google::protobuf::uint32 losses() const;
  inline void set_losses(::google::protobuf::uint32 value);

  // optional uint32 win_streak = 4;
  inline bool has_win_streak() const;
  inline void clear_win_streak();
  static const int kWinStreakFieldNumber = 4;
  inline ::google::protobuf::uint32 win_streak() const;
  inline void set_win_streak(::google::protobuf::uint32 value);

  // optional uint32 best_win_streak = 5;
  inline bool has_best_win_streak() const;
  inline void clear_best_win_streak();
  static const int kBestWinStreakFieldNumber = 5;
  inline ::google::protobuf::uint32 best_win_streak() const;
  inline void set_best_win_streak(::google::protobuf::uint32 value);

  // optional float avg_kills = 6;
  inline bool has_avg_kills() const;
  inline void clear_avg_kills();
  static const int kAvgKillsFieldNumber = 6;
  inline float avg_kills() const;
  inline void set_avg_kills(float value);

  // optional float avg_deaths = 7;
  inline bool has_avg_deaths() const;
  inline void clear_avg_deaths();
  static const int kAvgDeathsFieldNumber = 7;
  inline float avg_deaths() const;
  inline void set_avg_deaths(float value);

  // optional float avg_assists = 8;
  inline bool has_avg_assists() const;
  inline void clear_avg_assists();
  static const int kAvgAssistsFieldNumber = 8;
  inline float avg_assists() const;
  inline void set_avg_assists(float value);

  // optional float avg_gpm = 9;
  inline bool has_avg_gpm() const;
  inline void clear_avg_gpm();
  static const int kAvgGpmFieldNumber = 9;
  inline float avg_gpm() const;
  inline void set_avg_gpm(float value);

  // optional float avg_xpm = 10;
  inline bool has_avg_xpm() const;
  inline void clear_avg_xpm();
  static const int kAvgXpmFieldNumber = 10;
  inline float avg_xpm() const;
  inline void set_avg_xpm(float value);

  // optional uint32 best_kills = 11;
  inline bool has_best_kills() const;
  inline void clear_best_kills();
  static const int kBestKillsFieldNumber = 11;
  inline ::google::protobuf::uint32 best_kills() const;
  inline void set_best_kills(::google::protobuf::uint32 value);

  // optional uint32 best_assists = 12;
  inline bool has_best_assists() const;
  inline void clear_best_assists();
  static const int kBestAssistsFieldNumber = 12;
  inline ::google::protobuf::uint32 best_assists() const;
  inline void set_best_assists(::google::protobuf::uint32 value);

  // optional uint32 best_gpm = 13;
  inline bool has_best_gpm() const;
  inline void clear_best_gpm();
  static const int kBestGpmFieldNumber = 13;
  inline ::google::protobuf::uint32 best_gpm() const;
  inline void set_best_gpm(::google::protobuf::uint32 value);

  // optional uint32 best_xpm = 14;
  inline bool has_best_xpm() const;
  inline void clear_best_xpm();
  static const int kBestXpmFieldNumber = 14;
  inline ::google::protobuf::uint32 best_xpm() const;
  inline void set_best_xpm(::google::protobuf::uint32 value);

  // optional float performance = 15;
  inline bool has_performance() const;
  inline void clear_performance();
  static const int kPerformanceFieldNumber = 15;
  inline float performance() const;
  inline void set_performance(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStandingsResponse.Hero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_losses();
  inline void clear_has_losses();
  inline void set_has_win_streak();
  inline void clear_has_win_streak();
  inline void set_has_best_win_streak();
  inline void clear_has_best_win_streak();
  inline void set_has_avg_kills();
  inline void clear_has_avg_kills();
  inline void set_has_avg_deaths();
  inline void clear_has_avg_deaths();
  inline void set_has_avg_assists();
  inline void clear_has_avg_assists();
  inline void set_has_avg_gpm();
  inline void clear_has_avg_gpm();
  inline void set_has_avg_xpm();
  inline void clear_has_avg_xpm();
  inline void set_has_best_kills();
  inline void clear_has_best_kills();
  inline void set_has_best_assists();
  inline void clear_has_best_assists();
  inline void set_has_best_gpm();
  inline void clear_has_best_gpm();
  inline void set_has_best_xpm();
  inline void clear_has_best_xpm();
  inline void set_has_performance();
  inline void clear_has_performance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 losses_;
  ::google::protobuf::uint32 win_streak_;
  ::google::protobuf::uint32 best_win_streak_;
  float avg_kills_;
  float avg_deaths_;
  float avg_assists_;
  float avg_gpm_;
  float avg_xpm_;
  ::google::protobuf::uint32 best_kills_;
  ::google::protobuf::uint32 best_assists_;
  ::google::protobuf::uint32 best_gpm_;
  ::google::protobuf::uint32 best_xpm_;
  float performance_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStandingsResponse_Hero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStandingsResponse();
  virtual ~CMsgGCGetHeroStandingsResponse();

  CMsgGCGetHeroStandingsResponse(const CMsgGCGetHeroStandingsResponse& from);

  inline CMsgGCGetHeroStandingsResponse& operator=(const CMsgGCGetHeroStandingsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandingsResponse& default_instance();

  void Swap(CMsgGCGetHeroStandingsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStandingsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStandingsResponse& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCGetHeroStandingsResponse_Hero Hero;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCGetHeroStandingsResponse.Hero standings = 1;
  inline int standings_size() const;
  inline void clear_standings();
  static const int kStandingsFieldNumber = 1;
  inline const ::CMsgGCGetHeroStandingsResponse_Hero& standings(int index) const;
  inline ::CMsgGCGetHeroStandingsResponse_Hero* mutable_standings(int index);
  inline ::CMsgGCGetHeroStandingsResponse_Hero* add_standings();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >&
      standings() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >*
      mutable_standings();

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStandingsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero > standings_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStandingsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsRequest : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReservationsRequest();
  virtual ~CMsgGCItemEditorReservationsRequest();

  CMsgGCItemEditorReservationsRequest(const CMsgGCItemEditorReservationsRequest& from);

  inline CMsgGCItemEditorReservationsRequest& operator=(const CMsgGCItemEditorReservationsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservationsRequest& default_instance();

  void Swap(CMsgGCItemEditorReservationsRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReservationsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReservationsRequest& from);
  void MergeFrom(const CMsgGCItemEditorReservationsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReservationsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReservationsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservation : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReservation();
  virtual ~CMsgGCItemEditorReservation();

  CMsgGCItemEditorReservation(const CMsgGCItemEditorReservation& from);

  inline CMsgGCItemEditorReservation& operator=(const CMsgGCItemEditorReservation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservation& default_instance();

  void Swap(CMsgGCItemEditorReservation* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReservation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReservation& from);
  void MergeFrom(const CMsgGCItemEditorReservation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReservation)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReservation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReservationsResponse();
  virtual ~CMsgGCItemEditorReservationsResponse();

  CMsgGCItemEditorReservationsResponse(const CMsgGCItemEditorReservationsResponse& from);

  inline CMsgGCItemEditorReservationsResponse& operator=(const CMsgGCItemEditorReservationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservationsResponse& default_instance();

  void Swap(CMsgGCItemEditorReservationsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReservationsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReservationsResponse& from);
  void MergeFrom(const CMsgGCItemEditorReservationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCItemEditorReservation reservations = 1;
  inline int reservations_size() const;
  inline void clear_reservations();
  static const int kReservationsFieldNumber = 1;
  inline const ::CMsgGCItemEditorReservation& reservations(int index) const;
  inline ::CMsgGCItemEditorReservation* mutable_reservations(int index);
  inline ::CMsgGCItemEditorReservation* add_reservations();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >&
      reservations() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >*
      mutable_reservations();

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReservationsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation > reservations_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReservationsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDef : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReserveItemDef();
  virtual ~CMsgGCItemEditorReserveItemDef();

  CMsgGCItemEditorReserveItemDef(const CMsgGCItemEditorReserveItemDef& from);

  inline CMsgGCItemEditorReserveItemDef& operator=(const CMsgGCItemEditorReserveItemDef& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReserveItemDef& default_instance();

  void Swap(CMsgGCItemEditorReserveItemDef* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReserveItemDef* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReserveItemDef& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDef& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReserveItemDef)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::google::protobuf::uint32 def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReserveItemDef* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDefResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReserveItemDefResponse();
  virtual ~CMsgGCItemEditorReserveItemDefResponse();

  CMsgGCItemEditorReserveItemDefResponse(const CMsgGCItemEditorReserveItemDefResponse& from);

  inline CMsgGCItemEditorReserveItemDefResponse& operator=(const CMsgGCItemEditorReserveItemDefResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReserveItemDefResponse& default_instance();

  void Swap(CMsgGCItemEditorReserveItemDefResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReserveItemDefResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional uint32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReserveItemDefResponse)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReserveItemDefResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservation : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReleaseReservation();
  virtual ~CMsgGCItemEditorReleaseReservation();

  CMsgGCItemEditorReleaseReservation(const CMsgGCItemEditorReleaseReservation& from);

  inline CMsgGCItemEditorReleaseReservation& operator=(const CMsgGCItemEditorReleaseReservation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReleaseReservation& default_instance();

  void Swap(CMsgGCItemEditorReleaseReservation* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReleaseReservation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReleaseReservation& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReleaseReservation)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::google::protobuf::uint32 def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReleaseReservation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservationResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReleaseReservationResponse();
  virtual ~CMsgGCItemEditorReleaseReservationResponse();

  CMsgGCItemEditorReleaseReservationResponse(const CMsgGCItemEditorReleaseReservationResponse& from);

  inline CMsgGCItemEditorReleaseReservationResponse& operator=(const CMsgGCItemEditorReleaseReservationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReleaseReservationResponse& default_instance();

  void Swap(CMsgGCItemEditorReleaseReservationResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReleaseReservationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional bool released = 2;
  inline bool has_released() const;
  inline void clear_released();
  static const int kReleasedFieldNumber = 2;
  inline bool released() const;
  inline void set_released(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReleaseReservationResponse)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_released();
  inline void clear_has_released();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 def_index_;
  bool released_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReleaseReservationResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorRequestLeagueInfo : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorRequestLeagueInfo();
  virtual ~CMsgGCItemEditorRequestLeagueInfo();

  CMsgGCItemEditorRequestLeagueInfo(const CMsgGCItemEditorRequestLeagueInfo& from);

  inline CMsgGCItemEditorRequestLeagueInfo& operator=(const CMsgGCItemEditorRequestLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorRequestLeagueInfo& default_instance();

  void Swap(CMsgGCItemEditorRequestLeagueInfo* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorRequestLeagueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorRequestLeagueInfo& from);
  void MergeFrom(const CMsgGCItemEditorRequestLeagueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorRequestLeagueInfo)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorRequestLeagueInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorLeagueInfoResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorLeagueInfoResponse();
  virtual ~CMsgGCItemEditorLeagueInfoResponse();

  CMsgGCItemEditorLeagueInfoResponse(const CMsgGCItemEditorLeagueInfoResponse& from);

  inline CMsgGCItemEditorLeagueInfoResponse& operator=(const CMsgGCItemEditorLeagueInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorLeagueInfoResponse& default_instance();

  void Swap(CMsgGCItemEditorLeagueInfoResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorLeagueInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorLeagueInfoResponse& from);
  void MergeFrom(const CMsgGCItemEditorLeagueInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional string league_name = 2;
  inline bool has_league_name() const;
  inline void clear_league_name();
  static const int kLeagueNameFieldNumber = 2;
  inline const ::std::string& league_name() const;
  inline void set_league_name(const ::std::string& value);
  inline void set_league_name(const char* value);
  inline void set_league_name(const char* value, size_t size);
  inline ::std::string* mutable_league_name();
  inline ::std::string* release_league_name();
  inline void set_allocated_league_name(::std::string* league_name);

  // optional string league_desc = 3;
  inline bool has_league_desc() const;
  inline void clear_league_desc();
  static const int kLeagueDescFieldNumber = 3;
  inline const ::std::string& league_desc() const;
  inline void set_league_desc(const ::std::string& value);
  inline void set_league_desc(const char* value);
  inline void set_league_desc(const char* value, size_t size);
  inline ::std::string* mutable_league_desc();
  inline ::std::string* release_league_desc();
  inline void set_allocated_league_desc(::std::string* league_desc);

  // optional string league_url = 4;
  inline bool has_league_url() const;
  inline void clear_league_url();
  static const int kLeagueUrlFieldNumber = 4;
  inline const ::std::string& league_url() const;
  inline void set_league_url(const ::std::string& value);
  inline void set_league_url(const char* value);
  inline void set_league_url(const char* value, size_t size);
  inline ::std::string* mutable_league_url();
  inline ::std::string* release_league_url();
  inline void set_allocated_league_url(::std::string* league_url);

  // optional string revenue_url = 5;
  inline bool has_revenue_url() const;
  inline void clear_revenue_url();
  static const int kRevenueUrlFieldNumber = 5;
  inline const ::std::string& revenue_url() const;
  inline void set_revenue_url(const ::std::string& value);
  inline void set_revenue_url(const char* value);
  inline void set_revenue_url(const char* value, size_t size);
  inline ::std::string* mutable_revenue_url();
  inline ::std::string* release_revenue_url();
  inline void set_allocated_revenue_url(::std::string* revenue_url);

  // optional uint32 tier = 6;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 6;
  inline ::google::protobuf::uint32 tier() const;
  inline void set_tier(::google::protobuf::uint32 value);

  // optional uint32 location = 7;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 7;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);

  // optional uint32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorLeagueInfoResponse)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_league_name();
  inline void clear_has_league_name();
  inline void set_has_league_desc();
  inline void clear_has_league_desc();
  inline void set_has_league_url();
  inline void clear_has_league_url();
  inline void set_has_revenue_url();
  inline void clear_has_revenue_url();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* league_name_;
  ::std::string* league_desc_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 tier_;
  ::std::string* league_url_;
  ::std::string* revenue_url_;
  ::google::protobuf::uint32 location_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorLeagueInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARewardTutorialPrizes : public ::google::protobuf::Message {
 public:
  CMsgDOTARewardTutorialPrizes();
  virtual ~CMsgDOTARewardTutorialPrizes();

  CMsgDOTARewardTutorialPrizes(const CMsgDOTARewardTutorialPrizes& from);

  inline CMsgDOTARewardTutorialPrizes& operator=(const CMsgDOTARewardTutorialPrizes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARewardTutorialPrizes& default_instance();

  void Swap(CMsgDOTARewardTutorialPrizes* other);

  // implements Message ----------------------------------------------

  CMsgDOTARewardTutorialPrizes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARewardTutorialPrizes& from);
  void MergeFrom(const CMsgDOTARewardTutorialPrizes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 location_id = 1;
  inline bool has_location_id() const;
  inline void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  inline ::google::protobuf::uint32 location_id() const;
  inline void set_location_id(::google::protobuf::uint32 value);

  // optional bool tracking_only = 2;
  inline bool has_tracking_only() const;
  inline void clear_tracking_only();
  static const int kTrackingOnlyFieldNumber = 2;
  inline bool tracking_only() const;
  inline void set_tracking_only(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARewardTutorialPrizes)
 private:
  inline void set_has_location_id();
  inline void clear_has_location_id();
  inline void set_has_tracking_only();
  inline void clear_has_tracking_only();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 location_id_;
  bool tracking_only_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARewardTutorialPrizes* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScorePost : public ::google::protobuf::Message {
 public:
  CMsgDOTALastHitChallengeHighScorePost();
  virtual ~CMsgDOTALastHitChallengeHighScorePost();

  CMsgDOTALastHitChallengeHighScorePost(const CMsgDOTALastHitChallengeHighScorePost& from);

  inline CMsgDOTALastHitChallengeHighScorePost& operator=(const CMsgDOTALastHitChallengeHighScorePost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScorePost& default_instance();

  void Swap(CMsgDOTALastHitChallengeHighScorePost* other);

  // implements Message ----------------------------------------------

  CMsgDOTALastHitChallengeHighScorePost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 high_score = 2;
  inline bool has_high_score() const;
  inline void clear_high_score();
  static const int kHighScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 high_score() const;
  inline void set_high_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALastHitChallengeHighScorePost)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_high_score();
  inline void clear_has_high_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 high_score_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALastHitChallengeHighScorePost* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTALastHitChallengeHighScoreRequest();
  virtual ~CMsgDOTALastHitChallengeHighScoreRequest();

  CMsgDOTALastHitChallengeHighScoreRequest(const CMsgDOTALastHitChallengeHighScoreRequest& from);

  inline CMsgDOTALastHitChallengeHighScoreRequest& operator=(const CMsgDOTALastHitChallengeHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScoreRequest& default_instance();

  void Swap(CMsgDOTALastHitChallengeHighScoreRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTALastHitChallengeHighScoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALastHitChallengeHighScoreRequest)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALastHitChallengeHighScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALastHitChallengeHighScoreResponse();
  virtual ~CMsgDOTALastHitChallengeHighScoreResponse();

  CMsgDOTALastHitChallengeHighScoreResponse(const CMsgDOTALastHitChallengeHighScoreResponse& from);

  inline CMsgDOTALastHitChallengeHighScoreResponse& operator=(const CMsgDOTALastHitChallengeHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScoreResponse& default_instance();

  void Swap(CMsgDOTALastHitChallengeHighScoreResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALastHitChallengeHighScoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALastHitChallengeHighScoreResponse)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALastHitChallengeHighScoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFlipLobbyTeams : public ::google::protobuf::Message {
 public:
  CMsgFlipLobbyTeams();
  virtual ~CMsgFlipLobbyTeams();

  CMsgFlipLobbyTeams(const CMsgFlipLobbyTeams& from);

  inline CMsgFlipLobbyTeams& operator=(const CMsgFlipLobbyTeams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFlipLobbyTeams& default_instance();

  void Swap(CMsgFlipLobbyTeams* other);

  // implements Message ----------------------------------------------

  CMsgFlipLobbyTeams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFlipLobbyTeams& from);
  void MergeFrom(const CMsgFlipLobbyTeams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgFlipLobbyTeams)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgFlipLobbyTeams* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPresentedClientTerminateDlg : public ::google::protobuf::Message {
 public:
  CMsgPresentedClientTerminateDlg();
  virtual ~CMsgPresentedClientTerminateDlg();

  CMsgPresentedClientTerminateDlg(const CMsgPresentedClientTerminateDlg& from);

  inline CMsgPresentedClientTerminateDlg& operator=(const CMsgPresentedClientTerminateDlg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPresentedClientTerminateDlg& default_instance();

  void Swap(CMsgPresentedClientTerminateDlg* other);

  // implements Message ----------------------------------------------

  CMsgPresentedClientTerminateDlg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPresentedClientTerminateDlg& from);
  void MergeFrom(const CMsgPresentedClientTerminateDlg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPresentedClientTerminateDlg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPresentedClientTerminateDlg* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCLobbyUpdateBroadcastChannelInfo : public ::google::protobuf::Message {
 public:
  CMsgGCLobbyUpdateBroadcastChannelInfo();
  virtual ~CMsgGCLobbyUpdateBroadcastChannelInfo();

  CMsgGCLobbyUpdateBroadcastChannelInfo(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);

  inline CMsgGCLobbyUpdateBroadcastChannelInfo& operator=(const CMsgGCLobbyUpdateBroadcastChannelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLobbyUpdateBroadcastChannelInfo& default_instance();

  void Swap(CMsgGCLobbyUpdateBroadcastChannelInfo* other);

  // implements Message ----------------------------------------------

  CMsgGCLobbyUpdateBroadcastChannelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  void MergeFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional string country_code = 2;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string language_code = 4;
  inline bool has_language_code() const;
  inline void clear_language_code();
  static const int kLanguageCodeFieldNumber = 4;
  inline const ::std::string& language_code() const;
  inline void set_language_code(const ::std::string& value);
  inline void set_language_code(const char* value);
  inline void set_language_code(const char* value, size_t size);
  inline ::std::string* mutable_language_code();
  inline ::std::string* release_language_code();
  inline void set_allocated_language_code(::std::string* language_code);

  // @@protoc_insertion_point(class_scope:CMsgGCLobbyUpdateBroadcastChannelInfo)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_language_code();
  inline void clear_has_language_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* country_code_;
  ::std::string* description_;
  ::std::string* language_code_;
  ::google::protobuf::uint32 channel_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCLobbyUpdateBroadcastChannelInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemEventPrize : public ::google::protobuf::Message {
 public:
  CMsgDOTARedeemEventPrize();
  virtual ~CMsgDOTARedeemEventPrize();

  CMsgDOTARedeemEventPrize(const CMsgDOTARedeemEventPrize& from);

  inline CMsgDOTARedeemEventPrize& operator=(const CMsgDOTARedeemEventPrize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemEventPrize& default_instance();

  void Swap(CMsgDOTARedeemEventPrize* other);

  // implements Message ----------------------------------------------

  CMsgDOTARedeemEventPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARedeemEventPrize& from);
  void MergeFrom(const CMsgDOTARedeemEventPrize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_id = 1;
  inline bool has_prize_id() const;
  inline void clear_prize_id();
  static const int kPrizeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 prize_id() const;
  inline void set_prize_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 2;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 quantity = 3 [default = 1];
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 3;
  inline ::google::protobuf::uint32 quantity() const;
  inline void set_quantity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARedeemEventPrize)
 private:
  inline void set_has_prize_id();
  inline void clear_has_prize_id();
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_quantity();
  inline void clear_has_quantity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prize_id_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 quantity_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARedeemEventPrize* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemEventPrizeResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARedeemEventPrizeResponse();
  virtual ~CMsgDOTARedeemEventPrizeResponse();

  CMsgDOTARedeemEventPrizeResponse(const CMsgDOTARedeemEventPrizeResponse& from);

  inline CMsgDOTARedeemEventPrizeResponse& operator=(const CMsgDOTARedeemEventPrizeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemEventPrizeResponse& default_instance();

  void Swap(CMsgDOTARedeemEventPrizeResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARedeemEventPrizeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARedeemEventPrizeResponse& from);
  void MergeFrom(const CMsgDOTARedeemEventPrizeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARedeemEventPrizeResponse_ResultCode ResultCode;
  static const ResultCode Success = CMsgDOTARedeemEventPrizeResponse_ResultCode_Success;
  static const ResultCode ServerError = CMsgDOTARedeemEventPrizeResponse_ResultCode_ServerError;
  static const ResultCode InsufficientPoints = CMsgDOTARedeemEventPrizeResponse_ResultCode_InsufficientPoints;
  static const ResultCode PointsHeld = CMsgDOTARedeemEventPrizeResponse_ResultCode_PointsHeld;
  static inline bool ResultCode_IsValid(int value) {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_IsValid(value);
  }
  static const ResultCode ResultCode_MIN =
    CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MIN;
  static const ResultCode ResultCode_MAX =
    CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MAX;
  static const int ResultCode_ARRAYSIZE =
    CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResultCode_descriptor() {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor();
  }
  static inline const ::std::string& ResultCode_Name(ResultCode value) {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_Name(value);
  }
  static inline bool ResultCode_Parse(const ::std::string& name,
      ResultCode* value) {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTARedeemEventPrizeResponse.ResultCode result = 1 [default = Success];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTARedeemEventPrizeResponse_ResultCode result() const;
  inline void set_result(::CMsgDOTARedeemEventPrizeResponse_ResultCode value);

  // optional uint32 remaining_points = 2;
  inline bool has_remaining_points() const;
  inline void clear_remaining_points();
  static const int kRemainingPointsFieldNumber = 2;
  inline ::google::protobuf::uint32 remaining_points() const;
  inline void set_remaining_points(::google::protobuf::uint32 value);

  // optional uint32 remaining_premium_points = 3;
  inline bool has_remaining_premium_points() const;
  inline void clear_remaining_premium_points();
  static const int kRemainingPremiumPointsFieldNumber = 3;
  inline ::google::protobuf::uint32 remaining_premium_points() const;
  inline void set_remaining_premium_points(::google::protobuf::uint32 value);

  // optional uint32 event_id = 4;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 4;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARedeemEventPrizeResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_remaining_points();
  inline void clear_has_remaining_points();
  inline void set_has_remaining_premium_points();
  inline void clear_has_remaining_premium_points();
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  ::google::protobuf::uint32 remaining_points_;
  ::google::protobuf::uint32 remaining_premium_points_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARedeemEventPrizeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPoints : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetEventPoints();
  virtual ~CMsgDOTAGetEventPoints();

  CMsgDOTAGetEventPoints(const CMsgDOTAGetEventPoints& from);

  inline CMsgDOTAGetEventPoints& operator=(const CMsgDOTAGetEventPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPoints& default_instance();

  void Swap(CMsgDOTAGetEventPoints* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetEventPoints* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetEventPoints& from);
  void MergeFrom(const CMsgDOTAGetEventPoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetEventPoints)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetEventPoints* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse_Action : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetEventPointsResponse_Action();
  virtual ~CMsgDOTAGetEventPointsResponse_Action();

  CMsgDOTAGetEventPointsResponse_Action(const CMsgDOTAGetEventPointsResponse_Action& from);

  inline CMsgDOTAGetEventPointsResponse_Action& operator=(const CMsgDOTAGetEventPointsResponse_Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPointsResponse_Action& default_instance();

  void Swap(CMsgDOTAGetEventPointsResponse_Action* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetEventPointsResponse_Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action_id = 1;
  inline bool has_action_id() const;
  inline void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 action_id() const;
  inline void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 times_completed = 2 [default = 1];
  inline bool has_times_completed() const;
  inline void clear_times_completed();
  static const int kTimesCompletedFieldNumber = 2;
  inline ::google::protobuf::uint32 times_completed() const;
  inline void set_times_completed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetEventPointsResponse.Action)
 private:
  inline void set_has_action_id();
  inline void clear_has_action_id();
  inline void set_has_times_completed();
  inline void clear_has_times_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 times_completed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetEventPointsResponse_Action* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetEventPointsResponse();
  virtual ~CMsgDOTAGetEventPointsResponse();

  CMsgDOTAGetEventPointsResponse(const CMsgDOTAGetEventPointsResponse& from);

  inline CMsgDOTAGetEventPointsResponse& operator=(const CMsgDOTAGetEventPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPointsResponse& default_instance();

  void Swap(CMsgDOTAGetEventPointsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetEventPointsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetEventPointsResponse& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetEventPointsResponse_Action Action;

  // accessors -------------------------------------------------------

  // optional uint32 total_points = 1;
  inline bool has_total_points() const;
  inline void clear_total_points();
  static const int kTotalPointsFieldNumber = 1;
  inline ::google::protobuf::uint32 total_points() const;
  inline void set_total_points(::google::protobuf::uint32 value);

  // optional uint32 total_premium_points = 2;
  inline bool has_total_premium_points() const;
  inline void clear_total_premium_points();
  static const int kTotalPremiumPointsFieldNumber = 2;
  inline ::google::protobuf::uint32 total_premium_points() const;
  inline void set_total_premium_points(::google::protobuf::uint32 value);

  // optional uint32 event_id = 3;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 points = 4;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 4;
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // optional uint32 premium_points = 5;
  inline bool has_premium_points() const;
  inline void clear_premium_points();
  static const int kPremiumPointsFieldNumber = 5;
  inline ::google::protobuf::uint32 premium_points() const;
  inline void set_premium_points(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
  inline int completed_actions_size() const;
  inline void clear_completed_actions();
  static const int kCompletedActionsFieldNumber = 6;
  inline const ::CMsgDOTAGetEventPointsResponse_Action& completed_actions(int index) const;
  inline ::CMsgDOTAGetEventPointsResponse_Action* mutable_completed_actions(int index);
  inline ::CMsgDOTAGetEventPointsResponse_Action* add_completed_actions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >&
      completed_actions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >*
      mutable_completed_actions();

  // optional uint32 account_id = 7;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 7;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bool owned = 8;
  inline bool has_owned() const;
  inline void clear_owned();
  static const int kOwnedFieldNumber = 8;
  inline bool owned() const;
  inline void set_owned(bool value);

  // optional uint32 audit_action = 9;
  inline bool has_audit_action() const;
  inline void clear_audit_action();
  static const int kAuditActionFieldNumber = 9;
  inline ::google::protobuf::uint32 audit_action() const;
  inline void set_audit_action(::google::protobuf::uint32 value);

  // optional uint32 wager_tokens_remaining = 10;
  inline bool has_wager_tokens_remaining() const;
  inline void clear_wager_tokens_remaining();
  static const int kWagerTokensRemainingFieldNumber = 10;
  inline ::google::protobuf::uint32 wager_tokens_remaining() const;
  inline void set_wager_tokens_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetEventPointsResponse)
 private:
  inline void set_has_total_points();
  inline void clear_has_total_points();
  inline void set_has_total_premium_points();
  inline void clear_has_total_premium_points();
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_points();
  inline void clear_has_points();
  inline void set_has_premium_points();
  inline void clear_has_premium_points();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_owned();
  inline void clear_has_owned();
  inline void set_has_audit_action();
  inline void clear_has_audit_action();
  inline void set_has_wager_tokens_remaining();
  inline void clear_has_wager_tokens_remaining();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 total_points_;
  ::google::protobuf::uint32 total_premium_points_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 points_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action > completed_actions_;
  ::google::protobuf::uint32 premium_points_;
  ::google::protobuf::uint32 account_id_;
  bool owned_;
  ::google::protobuf::uint32 audit_action_;
  ::google::protobuf::uint32 wager_tokens_remaining_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetEventPointsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALiveLeagueGameUpdate : public ::google::protobuf::Message {
 public:
  CMsgDOTALiveLeagueGameUpdate();
  virtual ~CMsgDOTALiveLeagueGameUpdate();

  CMsgDOTALiveLeagueGameUpdate(const CMsgDOTALiveLeagueGameUpdate& from);

  inline CMsgDOTALiveLeagueGameUpdate& operator=(const CMsgDOTALiveLeagueGameUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALiveLeagueGameUpdate& default_instance();

  void Swap(CMsgDOTALiveLeagueGameUpdate* other);

  // implements Message ----------------------------------------------

  CMsgDOTALiveLeagueGameUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  void MergeFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 live_league_games = 1;
  inline bool has_live_league_games() const;
  inline void clear_live_league_games();
  static const int kLiveLeagueGamesFieldNumber = 1;
  inline ::google::protobuf::uint32 live_league_games() const;
  inline void set_live_league_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALiveLeagueGameUpdate)
 private:
  inline void set_has_live_league_games();
  inline void clear_has_live_league_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 live_league_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALiveLeagueGameUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelection : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumSelection();
  virtual ~CMsgDOTACompendiumSelection();

  CMsgDOTACompendiumSelection(const CMsgDOTACompendiumSelection& from);

  inline CMsgDOTACompendiumSelection& operator=(const CMsgDOTACompendiumSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumSelection& default_instance();

  void Swap(CMsgDOTACompendiumSelection* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumSelection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumSelection& from);
  void MergeFrom(const CMsgDOTACompendiumSelection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 selection_index = 1;
  inline bool has_selection_index() const;
  inline void clear_selection_index();
  static const int kSelectionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 selection_index() const;
  inline void set_selection_index(::google::protobuf::uint32 value);

  // optional uint32 selection = 2;
  inline bool has_selection() const;
  inline void clear_selection();
  static const int kSelectionFieldNumber = 2;
  inline ::google::protobuf::uint32 selection() const;
  inline void set_selection(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 3;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 3;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumSelection)
 private:
  inline void set_has_selection_index();
  inline void clear_has_selection_index();
  inline void set_has_selection();
  inline void clear_has_selection();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 selection_index_;
  ::google::protobuf::uint32 selection_;
  ::google::protobuf::uint32 leagueid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumSelection* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelectionResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumSelectionResponse();
  virtual ~CMsgDOTACompendiumSelectionResponse();

  CMsgDOTACompendiumSelectionResponse(const CMsgDOTACompendiumSelectionResponse& from);

  inline CMsgDOTACompendiumSelectionResponse& operator=(const CMsgDOTACompendiumSelectionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumSelectionResponse& default_instance();

  void Swap(CMsgDOTACompendiumSelectionResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumSelectionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumSelectionResponse& from);
  void MergeFrom(const CMsgDOTACompendiumSelectionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // repeated .CMsgDOTACompendiumSelection extra_selections = 2;
  inline int extra_selections_size() const;
  inline void clear_extra_selections();
  static const int kExtraSelectionsFieldNumber = 2;
  inline const ::CMsgDOTACompendiumSelection& extra_selections(int index) const;
  inline ::CMsgDOTACompendiumSelection* mutable_extra_selections(int index);
  inline ::CMsgDOTACompendiumSelection* add_extra_selections();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
      extra_selections() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
      mutable_extra_selections();

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumSelectionResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection > extra_selections_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumSelectionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumData : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumData();
  virtual ~CMsgDOTACompendiumData();

  CMsgDOTACompendiumData(const CMsgDOTACompendiumData& from);

  inline CMsgDOTACompendiumData& operator=(const CMsgDOTACompendiumData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumData& default_instance();

  void Swap(CMsgDOTACompendiumData* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumData& from);
  void MergeFrom(const CMsgDOTACompendiumData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTACompendiumSelection selections = 1;
  inline int selections_size() const;
  inline void clear_selections();
  static const int kSelectionsFieldNumber = 1;
  inline const ::CMsgDOTACompendiumSelection& selections(int index) const;
  inline ::CMsgDOTACompendiumSelection* mutable_selections(int index);
  inline ::CMsgDOTACompendiumSelection* add_selections();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
      selections() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
      mutable_selections();

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection > selections_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumDataRequest();
  virtual ~CMsgDOTACompendiumDataRequest();

  CMsgDOTACompendiumDataRequest(const CMsgDOTACompendiumDataRequest& from);

  inline CMsgDOTACompendiumDataRequest& operator=(const CMsgDOTACompendiumDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumDataRequest& default_instance();

  void Swap(CMsgDOTACompendiumDataRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumDataRequest& from);
  void MergeFrom(const CMsgDOTACompendiumDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumDataRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumDataResponse();
  virtual ~CMsgDOTACompendiumDataResponse();

  CMsgDOTACompendiumDataResponse(const CMsgDOTACompendiumDataResponse& from);

  inline CMsgDOTACompendiumDataResponse& operator=(const CMsgDOTACompendiumDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumDataResponse& default_instance();

  void Swap(CMsgDOTACompendiumDataResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumDataResponse& from);
  void MergeFrom(const CMsgDOTACompendiumDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 result = 3 [default = 2];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .CMsgDOTACompendiumData compendium_data = 4;
  inline bool has_compendium_data() const;
  inline void clear_compendium_data();
  static const int kCompendiumDataFieldNumber = 4;
  inline const ::CMsgDOTACompendiumData& compendium_data() const;
  inline ::CMsgDOTACompendiumData* mutable_compendium_data();
  inline ::CMsgDOTACompendiumData* release_compendium_data();
  inline void set_allocated_compendium_data(::CMsgDOTACompendiumData* compendium_data);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumDataResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_compendium_data();
  inline void clear_has_compendium_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  ::CMsgDOTACompendiumData* compendium_data_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistory : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetPlayerMatchHistory();
  virtual ~CMsgDOTAGetPlayerMatchHistory();

  CMsgDOTAGetPlayerMatchHistory(const CMsgDOTAGetPlayerMatchHistory& from);

  inline CMsgDOTAGetPlayerMatchHistory& operator=(const CMsgDOTAGetPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistory& default_instance();

  void Swap(CMsgDOTAGetPlayerMatchHistory* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetPlayerMatchHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 start_at_match_id = 2;
  inline bool has_start_at_match_id() const;
  inline void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 start_at_match_id() const;
  inline void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional uint32 matches_requested = 3;
  inline bool has_matches_requested() const;
  inline void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 3;
  inline ::google::protobuf::uint32 matches_requested() const;
  inline void set_matches_requested(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 request_id = 5;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 5;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // optional bool include_practice_matches = 7;
  inline bool has_include_practice_matches() const;
  inline void clear_include_practice_matches();
  static const int kIncludePracticeMatchesFieldNumber = 7;
  inline bool include_practice_matches() const;
  inline void set_include_practice_matches(bool value);

  // optional bool include_custom_games = 8;
  inline bool has_include_custom_games() const;
  inline void clear_include_custom_games();
  static const int kIncludeCustomGamesFieldNumber = 8;
  inline bool include_custom_games() const;
  inline void set_include_custom_games(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetPlayerMatchHistory)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_start_at_match_id();
  inline void clear_has_start_at_match_id();
  inline void set_has_matches_requested();
  inline void clear_has_matches_requested();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_include_practice_matches();
  inline void clear_has_include_practice_matches();
  inline void set_has_include_custom_games();
  inline void clear_has_include_custom_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 request_id_;
  bool include_practice_matches_;
  bool include_custom_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetPlayerMatchHistory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse_Match : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse_Match();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse_Match();

  CMsgDOTAGetPlayerMatchHistoryResponse_Match(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse_Match& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistoryResponse_Match& default_instance();

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse_Match* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetPlayerMatchHistoryResponse_Match* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional bool winner = 4;
  inline bool has_winner() const;
  inline void clear_winner();
  static const int kWinnerFieldNumber = 4;
  inline bool winner() const;
  inline void set_winner(bool value);

  // optional uint32 game_mode = 5;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 5;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // optional int32 rank_change = 6;
  inline bool has_rank_change() const;
  inline void clear_rank_change();
  static const int kRankChangeFieldNumber = 6;
  inline ::google::protobuf::int32 rank_change() const;
  inline void set_rank_change(::google::protobuf::int32 value);

  // optional uint32 previous_rank = 7;
  inline bool has_previous_rank() const;
  inline void clear_previous_rank();
  static const int kPreviousRankFieldNumber = 7;
  inline ::google::protobuf::uint32 previous_rank() const;
  inline void set_previous_rank(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 8;
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 lobby_type() const;
  inline void set_lobby_type(::google::protobuf::uint32 value);

  // optional bool solo_rank = 9;
  inline bool has_solo_rank() const;
  inline void clear_solo_rank();
  static const int kSoloRankFieldNumber = 9;
  inline bool solo_rank() const;
  inline void set_solo_rank(bool value);

  // optional bool abandon = 10;
  inline bool has_abandon() const;
  inline void clear_abandon();
  static const int kAbandonFieldNumber = 10;
  inline bool abandon() const;
  inline void set_abandon(bool value);

  // optional uint32 duration = 11;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 11;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);

  // optional uint32 engine = 12;
  inline bool has_engine() const;
  inline void clear_engine();
  static const int kEngineFieldNumber = 12;
  inline ::google::protobuf::uint32 engine() const;
  inline void set_engine(::google::protobuf::uint32 value);

  // optional bool active_battle_pass = 13;
  inline bool has_active_battle_pass() const;
  inline void clear_active_battle_pass();
  static const int kActiveBattlePassFieldNumber = 13;
  inline bool active_battle_pass() const;
  inline void set_active_battle_pass(bool value);

  // optional bool seasonal_rank = 14;
  inline bool has_seasonal_rank() const;
  inline void clear_seasonal_rank();
  static const int kSeasonalRankFieldNumber = 14;
  inline bool seasonal_rank() const;
  inline void set_seasonal_rank(bool value);

  // optional uint32 tourney_id = 15;
  inline bool has_tourney_id() const;
  inline void clear_tourney_id();
  static const int kTourneyIdFieldNumber = 15;
  inline ::google::protobuf::uint32 tourney_id() const;
  inline void set_tourney_id(::google::protobuf::uint32 value);

  // optional uint32 tourney_round = 16;
  inline bool has_tourney_round() const;
  inline void clear_tourney_round();
  static const int kTourneyRoundFieldNumber = 16;
  inline ::google::protobuf::uint32 tourney_round() const;
  inline void set_tourney_round(::google::protobuf::uint32 value);

  // optional uint32 tourney_tier = 17;
  inline bool has_tourney_tier() const;
  inline void clear_tourney_tier();
  static const int kTourneyTierFieldNumber = 17;
  inline ::google::protobuf::uint32 tourney_tier() const;
  inline void set_tourney_tier(::google::protobuf::uint32 value);

  // optional uint32 tourney_division = 18;
  inline bool has_tourney_division() const;
  inline void clear_tourney_division();
  static const int kTourneyDivisionFieldNumber = 18;
  inline ::google::protobuf::uint32 tourney_division() const;
  inline void set_tourney_division(::google::protobuf::uint32 value);

  // optional uint32 team_id = 19;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 19;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string team_name = 20;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 20;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional uint64 ugc_team_ui_logo = 21;
  inline bool has_ugc_team_ui_logo() const;
  inline void clear_ugc_team_ui_logo();
  static const int kUgcTeamUiLogoFieldNumber = 21;
  inline ::google::protobuf::uint64 ugc_team_ui_logo() const;
  inline void set_ugc_team_ui_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetPlayerMatchHistoryResponse.Match)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_winner();
  inline void clear_has_winner();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_rank_change();
  inline void clear_has_rank_change();
  inline void set_has_previous_rank();
  inline void clear_has_previous_rank();
  inline void set_has_lobby_type();
  inline void clear_has_lobby_type();
  inline void set_has_solo_rank();
  inline void clear_has_solo_rank();
  inline void set_has_abandon();
  inline void clear_has_abandon();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_engine();
  inline void clear_has_engine();
  inline void set_has_active_battle_pass();
  inline void clear_has_active_battle_pass();
  inline void set_has_seasonal_rank();
  inline void clear_has_seasonal_rank();
  inline void set_has_tourney_id();
  inline void clear_has_tourney_id();
  inline void set_has_tourney_round();
  inline void clear_has_tourney_round();
  inline void set_has_tourney_tier();
  inline void clear_has_tourney_tier();
  inline void set_has_tourney_division();
  inline void clear_has_tourney_division();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_ugc_team_ui_logo();
  inline void clear_has_ugc_team_ui_logo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::int32 rank_change_;
  ::google::protobuf::uint32 previous_rank_;
  ::google::protobuf::uint32 lobby_type_;
  bool winner_;
  bool solo_rank_;
  bool abandon_;
  bool active_battle_pass_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 engine_;
  bool seasonal_rank_;
  ::google::protobuf::uint32 tourney_id_;
  ::google::protobuf::uint32 tourney_round_;
  ::google::protobuf::uint32 tourney_tier_;
  ::google::protobuf::uint32 tourney_division_;
  ::std::string* team_name_;
  ::google::protobuf::uint64 ugc_team_ui_logo_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetPlayerMatchHistoryResponse_Match* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse();

  CMsgDOTAGetPlayerMatchHistoryResponse(const CMsgDOTAGetPlayerMatchHistoryResponse& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistoryResponse& default_instance();

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetPlayerMatchHistoryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetPlayerMatchHistoryResponse_Match Match;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAGetPlayerMatchHistoryResponse_Match& matches(int index) const;
  inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* mutable_matches(int index);
  inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
      mutable_matches();

  // optional uint32 request_id = 2;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetPlayerMatchHistoryResponse)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match > matches_;
  ::google::protobuf::uint32 request_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetPlayerMatchHistoryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStartDailyHeroChallenge : public ::google::protobuf::Message {
 public:
  CMsgDOTAStartDailyHeroChallenge();
  virtual ~CMsgDOTAStartDailyHeroChallenge();

  CMsgDOTAStartDailyHeroChallenge(const CMsgDOTAStartDailyHeroChallenge& from);

  inline CMsgDOTAStartDailyHeroChallenge& operator=(const CMsgDOTAStartDailyHeroChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStartDailyHeroChallenge& default_instance();

  void Swap(CMsgDOTAStartDailyHeroChallenge* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStartDailyHeroChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  void MergeFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAStartDailyHeroChallenge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStartDailyHeroChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsRequest : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsRequest();
  virtual ~CMsgGCNotificationsRequest();

  CMsgGCNotificationsRequest(const CMsgGCNotificationsRequest& from);

  inline CMsgGCNotificationsRequest& operator=(const CMsgGCNotificationsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsRequest& default_instance();

  void Swap(CMsgGCNotificationsRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsRequest& from);
  void MergeFrom(const CMsgGCNotificationsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse_Notification : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsResponse_Notification();
  virtual ~CMsgGCNotificationsResponse_Notification();

  CMsgGCNotificationsResponse_Notification(const CMsgGCNotificationsResponse_Notification& from);

  inline CMsgGCNotificationsResponse_Notification& operator=(const CMsgGCNotificationsResponse_Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsResponse_Notification& default_instance();

  void Swap(CMsgGCNotificationsResponse_Notification* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsResponse_Notification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsResponse_Notification& from);
  void MergeFrom(const CMsgGCNotificationsResponse_Notification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 reference_a = 4;
  inline bool has_reference_a() const;
  inline void clear_reference_a();
  static const int kReferenceAFieldNumber = 4;
  inline ::google::protobuf::uint32 reference_a() const;
  inline void set_reference_a(::google::protobuf::uint32 value);

  // optional uint32 reference_b = 5;
  inline bool has_reference_b() const;
  inline void clear_reference_b();
  static const int kReferenceBFieldNumber = 5;
  inline ::google::protobuf::uint32 reference_b() const;
  inline void set_reference_b(::google::protobuf::uint32 value);

  // optional uint32 reference_c = 6;
  inline bool has_reference_c() const;
  inline void clear_reference_c();
  static const int kReferenceCFieldNumber = 6;
  inline ::google::protobuf::uint32 reference_c() const;
  inline void set_reference_c(::google::protobuf::uint32 value);

  // optional string message = 7;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 7;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool unread = 8;
  inline bool has_unread() const;
  inline void clear_unread();
  static const int kUnreadFieldNumber = 8;
  inline bool unread() const;
  inline void set_unread(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsResponse.Notification)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_reference_a();
  inline void clear_has_reference_a();
  inline void set_has_reference_b();
  inline void clear_has_reference_b();
  inline void set_has_reference_c();
  inline void clear_has_reference_c();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_unread();
  inline void clear_has_unread();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 reference_a_;
  ::google::protobuf::uint32 reference_b_;
  ::std::string* message_;
  ::google::protobuf::uint32 reference_c_;
  bool unread_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsResponse_Notification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsResponse();
  virtual ~CMsgGCNotificationsResponse();

  CMsgGCNotificationsResponse(const CMsgGCNotificationsResponse& from);

  inline CMsgGCNotificationsResponse& operator=(const CMsgGCNotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsResponse& default_instance();

  void Swap(CMsgGCNotificationsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsResponse& from);
  void MergeFrom(const CMsgGCNotificationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCNotificationsResponse_Notification Notification;

  typedef CMsgGCNotificationsResponse_EResult EResult;
  static const EResult SUCCESS = CMsgGCNotificationsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCNotificationsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCNotificationsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCNotificationsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCNotificationsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCNotificationsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCNotificationsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgGCNotificationsResponse_EResult result() const;
  inline void set_result(::CMsgGCNotificationsResponse_EResult value);

  // repeated .CMsgGCNotificationsResponse.Notification notifications = 2;
  inline int notifications_size() const;
  inline void clear_notifications();
  static const int kNotificationsFieldNumber = 2;
  inline const ::CMsgGCNotificationsResponse_Notification& notifications(int index) const;
  inline ::CMsgGCNotificationsResponse_Notification* mutable_notifications(int index);
  inline ::CMsgGCNotificationsResponse_Notification* add_notifications();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >&
      notifications() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >*
      mutable_notifications();

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification > notifications_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsMarkReadRequest : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsMarkReadRequest();
  virtual ~CMsgGCNotificationsMarkReadRequest();

  CMsgGCNotificationsMarkReadRequest(const CMsgGCNotificationsMarkReadRequest& from);

  inline CMsgGCNotificationsMarkReadRequest& operator=(const CMsgGCNotificationsMarkReadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsMarkReadRequest& default_instance();

  void Swap(CMsgGCNotificationsMarkReadRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsMarkReadRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsMarkReadRequest& from);
  void MergeFrom(const CMsgGCNotificationsMarkReadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsMarkReadRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsMarkReadRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCMarkNotificationListRead : public ::google::protobuf::Message {
 public:
  CMsgClientToGCMarkNotificationListRead();
  virtual ~CMsgClientToGCMarkNotificationListRead();

  CMsgClientToGCMarkNotificationListRead(const CMsgClientToGCMarkNotificationListRead& from);

  inline CMsgClientToGCMarkNotificationListRead& operator=(const CMsgClientToGCMarkNotificationListRead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCMarkNotificationListRead& default_instance();

  void Swap(CMsgClientToGCMarkNotificationListRead* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCMarkNotificationListRead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCMarkNotificationListRead& from);
  void MergeFrom(const CMsgClientToGCMarkNotificationListRead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 notification_ids = 1;
  inline int notification_ids_size() const;
  inline void clear_notification_ids();
  static const int kNotificationIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 notification_ids(int index) const;
  inline void set_notification_ids(int index, ::google::protobuf::uint64 value);
  inline void add_notification_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      notification_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_notification_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCMarkNotificationListRead)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > notification_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCMarkNotificationListRead* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCLeagueAdminState_PrivateLeagueKeys : public ::google::protobuf::Message {
 public:
  CMsgGCLeagueAdminState_PrivateLeagueKeys();
  virtual ~CMsgGCLeagueAdminState_PrivateLeagueKeys();

  CMsgGCLeagueAdminState_PrivateLeagueKeys(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);

  inline CMsgGCLeagueAdminState_PrivateLeagueKeys& operator=(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLeagueAdminState_PrivateLeagueKeys& default_instance();

  void Swap(CMsgGCLeagueAdminState_PrivateLeagueKeys* other);

  // implements Message ----------------------------------------------

  CMsgGCLeagueAdminState_PrivateLeagueKeys* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);
  void MergeFrom(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 leagueid = 1;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 1;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 privatekey = 2;
  inline bool has_privatekey() const;
  inline void clear_privatekey();
  static const int kPrivatekeyFieldNumber = 2;
  inline ::google::protobuf::uint32 privatekey() const;
  inline void set_privatekey(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCLeagueAdminState.PrivateLeagueKeys)
 private:
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_privatekey();
  inline void clear_has_privatekey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 privatekey_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCLeagueAdminState_PrivateLeagueKeys* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCLeagueAdminState : public ::google::protobuf::Message {
 public:
  CMsgGCLeagueAdminState();
  virtual ~CMsgGCLeagueAdminState();

  CMsgGCLeagueAdminState(const CMsgGCLeagueAdminState& from);

  inline CMsgGCLeagueAdminState& operator=(const CMsgGCLeagueAdminState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLeagueAdminState& default_instance();

  void Swap(CMsgGCLeagueAdminState* other);

  // implements Message ----------------------------------------------

  CMsgGCLeagueAdminState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCLeagueAdminState& from);
  void MergeFrom(const CMsgGCLeagueAdminState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCLeagueAdminState_PrivateLeagueKeys PrivateLeagueKeys;

  // accessors -------------------------------------------------------

  // repeated uint32 leagues = 1;
  inline int leagues_size() const;
  inline void clear_leagues();
  static const int kLeaguesFieldNumber = 1;
  inline ::google::protobuf::uint32 leagues(int index) const;
  inline void set_leagues(int index, ::google::protobuf::uint32 value);
  inline void add_leagues(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      leagues() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_leagues();

  // repeated .CMsgGCLeagueAdminState.PrivateLeagueKeys keys = 2;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 2;
  inline const ::CMsgGCLeagueAdminState_PrivateLeagueKeys& keys(int index) const;
  inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* mutable_keys(int index);
  inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* add_keys();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >&
      keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >*
      mutable_keys();

  // @@protoc_insertion_point(class_scope:CMsgGCLeagueAdminState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > leagues_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys > keys_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCLeagueAdminState* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoRequest_PlayerInfo : public ::google::protobuf::Message {
 public:
  CMsgGCPlayerInfoRequest_PlayerInfo();
  virtual ~CMsgGCPlayerInfoRequest_PlayerInfo();

  CMsgGCPlayerInfoRequest_PlayerInfo(const CMsgGCPlayerInfoRequest_PlayerInfo& from);

  inline CMsgGCPlayerInfoRequest_PlayerInfo& operator=(const CMsgGCPlayerInfoRequest_PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoRequest_PlayerInfo& default_instance();

  void Swap(CMsgGCPlayerInfoRequest_PlayerInfo* other);

  // implements Message ----------------------------------------------

  CMsgGCPlayerInfoRequest_PlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCPlayerInfoRequest_PlayerInfo& from);
  void MergeFrom(const CMsgGCPlayerInfoRequest_PlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfoRequest.PlayerInfo)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCPlayerInfoRequest_PlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoRequest : public ::google::protobuf::Message {
 public:
  CMsgGCPlayerInfoRequest();
  virtual ~CMsgGCPlayerInfoRequest();

  CMsgGCPlayerInfoRequest(const CMsgGCPlayerInfoRequest& from);

  inline CMsgGCPlayerInfoRequest& operator=(const CMsgGCPlayerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoRequest& default_instance();

  void Swap(CMsgGCPlayerInfoRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCPlayerInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCPlayerInfoRequest& from);
  void MergeFrom(const CMsgGCPlayerInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCPlayerInfoRequest_PlayerInfo PlayerInfo;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCPlayerInfoRequest.PlayerInfo player_infos = 1;
  inline int player_infos_size() const;
  inline void clear_player_infos();
  static const int kPlayerInfosFieldNumber = 1;
  inline const ::CMsgGCPlayerInfoRequest_PlayerInfo& player_infos(int index) const;
  inline ::CMsgGCPlayerInfoRequest_PlayerInfo* mutable_player_infos(int index);
  inline ::CMsgGCPlayerInfoRequest_PlayerInfo* add_player_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCPlayerInfoRequest_PlayerInfo >&
      player_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCPlayerInfoRequest_PlayerInfo >*
      mutable_player_infos();

  // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfoRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCPlayerInfoRequest_PlayerInfo > player_infos_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCPlayerInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmit : public ::google::protobuf::Message {
 public:
  CMsgGCPlayerInfoSubmit();
  virtual ~CMsgGCPlayerInfoSubmit();

  CMsgGCPlayerInfoSubmit(const CMsgGCPlayerInfoSubmit& from);

  inline CMsgGCPlayerInfoSubmit& operator=(const CMsgGCPlayerInfoSubmit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoSubmit& default_instance();

  void Swap(CMsgGCPlayerInfoSubmit* other);

  // implements Message ----------------------------------------------

  CMsgGCPlayerInfoSubmit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCPlayerInfoSubmit& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string country_code = 2;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional uint32 fantasy_role = 3;
  inline bool has_fantasy_role() const;
  inline void clear_fantasy_role();
  static const int kFantasyRoleFieldNumber = 3;
  inline ::google::protobuf::uint32 fantasy_role() const;
  inline void set_fantasy_role(::google::protobuf::uint32 value);

  // optional uint32 team_id = 4;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 4;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string sponsor = 5;
  inline bool has_sponsor() const;
  inline void clear_sponsor();
  static const int kSponsorFieldNumber = 5;
  inline const ::std::string& sponsor() const;
  inline void set_sponsor(const ::std::string& value);
  inline void set_sponsor(const char* value);
  inline void set_sponsor(const char* value, size_t size);
  inline ::std::string* mutable_sponsor();
  inline ::std::string* release_sponsor();
  inline void set_allocated_sponsor(::std::string* sponsor);

  // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfoSubmit)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_fantasy_role();
  inline void clear_has_fantasy_role();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_sponsor();
  inline void clear_has_sponsor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* country_code_;
  ::google::protobuf::uint32 fantasy_role_;
  ::google::protobuf::uint32 team_id_;
  ::std::string* sponsor_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCPlayerInfoSubmit* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmitResponse : public ::google::protobuf::Message {
 public:
  CMsgGCPlayerInfoSubmitResponse();
  virtual ~CMsgGCPlayerInfoSubmitResponse();

  CMsgGCPlayerInfoSubmitResponse(const CMsgGCPlayerInfoSubmitResponse& from);

  inline CMsgGCPlayerInfoSubmitResponse& operator=(const CMsgGCPlayerInfoSubmitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoSubmitResponse& default_instance();

  void Swap(CMsgGCPlayerInfoSubmitResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCPlayerInfoSubmitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCPlayerInfoSubmitResponse_EResult EResult;
  static const EResult SUCCESS = CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_INFO_LOCKED = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgGCPlayerInfoSubmitResponse_EResult result() const;
  inline void set_result(::CMsgGCPlayerInfoSubmitResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfoSubmitResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCPlayerInfoSubmitResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult_Response : public ::google::protobuf::Message {
 public:
  CMsgClientProvideSurveyResult_Response();
  virtual ~CMsgClientProvideSurveyResult_Response();

  CMsgClientProvideSurveyResult_Response(const CMsgClientProvideSurveyResult_Response& from);

  inline CMsgClientProvideSurveyResult_Response& operator=(const CMsgClientProvideSurveyResult_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientProvideSurveyResult_Response& default_instance();

  void Swap(CMsgClientProvideSurveyResult_Response* other);

  // implements Message ----------------------------------------------

  CMsgClientProvideSurveyResult_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientProvideSurveyResult_Response& from);
  void MergeFrom(const CMsgClientProvideSurveyResult_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 question_id = 1;
  inline bool has_question_id() const;
  inline void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 question_id() const;
  inline void set_question_id(::google::protobuf::uint32 value);

  // optional uint32 survey_value = 2;
  inline bool has_survey_value() const;
  inline void clear_survey_value();
  static const int kSurveyValueFieldNumber = 2;
  inline ::google::protobuf::uint32 survey_value() const;
  inline void set_survey_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientProvideSurveyResult.Response)
 private:
  inline void set_has_question_id();
  inline void clear_has_question_id();
  inline void set_has_survey_value();
  inline void clear_has_survey_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint32 survey_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientProvideSurveyResult_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult : public ::google::protobuf::Message {
 public:
  CMsgClientProvideSurveyResult();
  virtual ~CMsgClientProvideSurveyResult();

  CMsgClientProvideSurveyResult(const CMsgClientProvideSurveyResult& from);

  inline CMsgClientProvideSurveyResult& operator=(const CMsgClientProvideSurveyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientProvideSurveyResult& default_instance();

  void Swap(CMsgClientProvideSurveyResult* other);

  // implements Message ----------------------------------------------

  CMsgClientProvideSurveyResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientProvideSurveyResult& from);
  void MergeFrom(const CMsgClientProvideSurveyResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientProvideSurveyResult_Response Response;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientProvideSurveyResult.Response responses = 1;
  inline int responses_size() const;
  inline void clear_responses();
  static const int kResponsesFieldNumber = 1;
  inline const ::CMsgClientProvideSurveyResult_Response& responses(int index) const;
  inline ::CMsgClientProvideSurveyResult_Response* mutable_responses(int index);
  inline ::CMsgClientProvideSurveyResult_Response* add_responses();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >&
      responses() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >*
      mutable_responses();

  // optional uint64 survey_key = 2;
  inline bool has_survey_key() const;
  inline void clear_survey_key();
  static const int kSurveyKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 survey_key() const;
  inline void set_survey_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientProvideSurveyResult)
 private:
  inline void set_has_survey_key();
  inline void clear_has_survey_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response > responses_;
  ::google::protobuf::uint64 survey_key_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientProvideSurveyResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEmoticonAccessSDO : public ::google::protobuf::Message {
 public:
  CMsgDOTAEmoticonAccessSDO();
  virtual ~CMsgDOTAEmoticonAccessSDO();

  CMsgDOTAEmoticonAccessSDO(const CMsgDOTAEmoticonAccessSDO& from);

  inline CMsgDOTAEmoticonAccessSDO& operator=(const CMsgDOTAEmoticonAccessSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEmoticonAccessSDO& default_instance();

  void Swap(CMsgDOTAEmoticonAccessSDO* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEmoticonAccessSDO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEmoticonAccessSDO& from);
  void MergeFrom(const CMsgDOTAEmoticonAccessSDO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bytes unlocked_emoticons = 2;
  inline bool has_unlocked_emoticons() const;
  inline void clear_unlocked_emoticons();
  static const int kUnlockedEmoticonsFieldNumber = 2;
  inline const ::std::string& unlocked_emoticons() const;
  inline void set_unlocked_emoticons(const ::std::string& value);
  inline void set_unlocked_emoticons(const char* value);
  inline void set_unlocked_emoticons(const void* value, size_t size);
  inline ::std::string* mutable_unlocked_emoticons();
  inline ::std::string* release_unlocked_emoticons();
  inline void set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons);

  // @@protoc_insertion_point(class_scope:CMsgDOTAEmoticonAccessSDO)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_unlocked_emoticons();
  inline void clear_has_unlocked_emoticons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* unlocked_emoticons_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEmoticonAccessSDO* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCEmoticonDataRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCEmoticonDataRequest();
  virtual ~CMsgClientToGCEmoticonDataRequest();

  CMsgClientToGCEmoticonDataRequest(const CMsgClientToGCEmoticonDataRequest& from);

  inline CMsgClientToGCEmoticonDataRequest& operator=(const CMsgClientToGCEmoticonDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCEmoticonDataRequest& default_instance();

  void Swap(CMsgClientToGCEmoticonDataRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCEmoticonDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCEmoticonDataRequest& from);
  void MergeFrom(const CMsgClientToGCEmoticonDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCEmoticonDataRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCEmoticonDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientEmoticonData : public ::google::protobuf::Message {
 public:
  CMsgGCToClientEmoticonData();
  virtual ~CMsgGCToClientEmoticonData();

  CMsgGCToClientEmoticonData(const CMsgGCToClientEmoticonData& from);

  inline CMsgGCToClientEmoticonData& operator=(const CMsgGCToClientEmoticonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientEmoticonData& default_instance();

  void Swap(CMsgGCToClientEmoticonData* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientEmoticonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientEmoticonData& from);
  void MergeFrom(const CMsgGCToClientEmoticonData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
  inline bool has_emoticon_access() const;
  inline void clear_emoticon_access();
  static const int kEmoticonAccessFieldNumber = 1;
  inline const ::CMsgDOTAEmoticonAccessSDO& emoticon_access() const;
  inline ::CMsgDOTAEmoticonAccessSDO* mutable_emoticon_access();
  inline ::CMsgDOTAEmoticonAccessSDO* release_emoticon_access();
  inline void set_allocated_emoticon_access(::CMsgDOTAEmoticonAccessSDO* emoticon_access);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientEmoticonData)
 private:
  inline void set_has_emoticon_access();
  inline void clear_has_emoticon_access();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAEmoticonAccessSDO* emoticon_access_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientEmoticonData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTrackDialogResult : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTrackDialogResult();
  virtual ~CMsgClientToGCTrackDialogResult();

  CMsgClientToGCTrackDialogResult(const CMsgClientToGCTrackDialogResult& from);

  inline CMsgClientToGCTrackDialogResult& operator=(const CMsgClientToGCTrackDialogResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTrackDialogResult& default_instance();

  void Swap(CMsgClientToGCTrackDialogResult* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTrackDialogResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTrackDialogResult& from);
  void MergeFrom(const CMsgClientToGCTrackDialogResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dialog_id = 1;
  inline bool has_dialog_id() const;
  inline void clear_dialog_id();
  static const int kDialogIdFieldNumber = 1;
  inline ::google::protobuf::uint32 dialog_id() const;
  inline void set_dialog_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTrackDialogResult)
 private:
  inline void set_has_dialog_id();
  inline void clear_has_dialog_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dialog_id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTrackDialogResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientTournamentItemDrop : public ::google::protobuf::Message {
 public:
  CMsgGCToClientTournamentItemDrop();
  virtual ~CMsgGCToClientTournamentItemDrop();

  CMsgGCToClientTournamentItemDrop(const CMsgGCToClientTournamentItemDrop& from);

  inline CMsgGCToClientTournamentItemDrop& operator=(const CMsgGCToClientTournamentItemDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTournamentItemDrop& default_instance();

  void Swap(CMsgGCToClientTournamentItemDrop* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientTournamentItemDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientTournamentItemDrop& from);
  void MergeFrom(const CMsgGCToClientTournamentItemDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 event_type = 2;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 event_type() const;
  inline void set_event_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientTournamentItemDrop)
 private:
  inline void set_has_item_def();
  inline void clear_has_item_def();
  inline void set_has_event_type();
  inline void clear_has_event_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 event_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientTournamentItemDrop* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquips : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetAdditionalEquips();
  virtual ~CMsgClientToGCSetAdditionalEquips();

  CMsgClientToGCSetAdditionalEquips(const CMsgClientToGCSetAdditionalEquips& from);

  inline CMsgClientToGCSetAdditionalEquips& operator=(const CMsgClientToGCSetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetAdditionalEquips& default_instance();

  void Swap(CMsgClientToGCSetAdditionalEquips* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetAdditionalEquips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CAdditionalEquipSlot equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::CAdditionalEquipSlot& equips(int index) const;
  inline ::CAdditionalEquipSlot* mutable_equips(int index);
  inline ::CAdditionalEquipSlot* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
      mutable_equips();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetAdditionalEquips)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot > equips_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetAdditionalEquips* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquipsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCSetAdditionalEquipsResponse();

  CMsgClientToGCSetAdditionalEquipsResponse(const CMsgClientToGCSetAdditionalEquipsResponse& from);

  inline CMsgClientToGCSetAdditionalEquipsResponse& operator=(const CMsgClientToGCSetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetAdditionalEquipsResponse& default_instance();

  void Swap(CMsgClientToGCSetAdditionalEquipsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetAdditionalEquipsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetAdditionalEquipsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetAdditionalEquipsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquips : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAdditionalEquips();
  virtual ~CMsgClientToGCGetAdditionalEquips();

  CMsgClientToGCGetAdditionalEquips(const CMsgClientToGCGetAdditionalEquips& from);

  inline CMsgClientToGCGetAdditionalEquips& operator=(const CMsgClientToGCGetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAdditionalEquips& default_instance();

  void Swap(CMsgClientToGCGetAdditionalEquips* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAdditionalEquips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAdditionalEquips)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAdditionalEquips* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquipsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCGetAdditionalEquipsResponse();

  CMsgClientToGCGetAdditionalEquipsResponse(const CMsgClientToGCGetAdditionalEquipsResponse& from);

  inline CMsgClientToGCGetAdditionalEquipsResponse& operator=(const CMsgClientToGCGetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAdditionalEquipsResponse& default_instance();

  void Swap(CMsgClientToGCGetAdditionalEquipsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAdditionalEquipsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CAdditionalEquipSlot equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::CAdditionalEquipSlot& equips(int index) const;
  inline ::CAdditionalEquipSlot* mutable_equips(int index);
  inline ::CAdditionalEquipSlot* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
      mutable_equips();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAdditionalEquipsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot > equips_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAdditionalEquipsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrder : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroOrder();
  virtual ~CMsgClientToGCGetAllHeroOrder();

  CMsgClientToGCGetAllHeroOrder(const CMsgClientToGCGetAllHeroOrder& from);

  inline CMsgClientToGCGetAllHeroOrder& operator=(const CMsgClientToGCGetAllHeroOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroOrder& default_instance();

  void Swap(CMsgClientToGCGetAllHeroOrder* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroOrder& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroOrder)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroOrder* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrderResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroOrderResponse();
  virtual ~CMsgClientToGCGetAllHeroOrderResponse();

  CMsgClientToGCGetAllHeroOrderResponse(const CMsgClientToGCGetAllHeroOrderResponse& from);

  inline CMsgClientToGCGetAllHeroOrderResponse& operator=(const CMsgClientToGCGetAllHeroOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroOrderResponse& default_instance();

  void Swap(CMsgClientToGCGetAllHeroOrderResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroOrderResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroOrderResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroOrderResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgress : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroProgress();
  virtual ~CMsgClientToGCGetAllHeroProgress();

  CMsgClientToGCGetAllHeroProgress(const CMsgClientToGCGetAllHeroProgress& from);

  inline CMsgClientToGCGetAllHeroProgress& operator=(const CMsgClientToGCGetAllHeroProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroProgress& default_instance();

  void Swap(CMsgClientToGCGetAllHeroProgress* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroProgress& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroProgress)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgressResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroProgressResponse();
  virtual ~CMsgClientToGCGetAllHeroProgressResponse();

  CMsgClientToGCGetAllHeroProgressResponse(const CMsgClientToGCGetAllHeroProgressResponse& from);

  inline CMsgClientToGCGetAllHeroProgressResponse& operator=(const CMsgClientToGCGetAllHeroProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroProgressResponse& default_instance();

  void Swap(CMsgClientToGCGetAllHeroProgressResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroProgressResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_id = 2;
  inline bool has_curr_hero_id() const;
  inline void clear_curr_hero_id();
  static const int kCurrHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 curr_hero_id() const;
  inline void set_curr_hero_id(::google::protobuf::uint32 value);

  // optional uint32 laps_completed = 3;
  inline bool has_laps_completed() const;
  inline void clear_laps_completed();
  static const int kLapsCompletedFieldNumber = 3;
  inline ::google::protobuf::uint32 laps_completed() const;
  inline void set_laps_completed(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_games = 4;
  inline bool has_curr_hero_games() const;
  inline void clear_curr_hero_games();
  static const int kCurrHeroGamesFieldNumber = 4;
  inline ::google::protobuf::uint32 curr_hero_games() const;
  inline void set_curr_hero_games(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_time_started = 5;
  inline bool has_curr_lap_time_started() const;
  inline void clear_curr_lap_time_started();
  static const int kCurrLapTimeStartedFieldNumber = 5;
  inline ::google::protobuf::uint32 curr_lap_time_started() const;
  inline void set_curr_lap_time_started(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_games = 6;
  inline bool has_curr_lap_games() const;
  inline void clear_curr_lap_games();
  static const int kCurrLapGamesFieldNumber = 6;
  inline ::google::protobuf::uint32 curr_lap_games() const;
  inline void set_curr_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_games = 7;
  inline bool has_best_lap_games() const;
  inline void clear_best_lap_games();
  static const int kBestLapGamesFieldNumber = 7;
  inline ::google::protobuf::uint32 best_lap_games() const;
  inline void set_best_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_time = 8;
  inline bool has_best_lap_time() const;
  inline void clear_best_lap_time();
  static const int kBestLapTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 best_lap_time() const;
  inline void set_best_lap_time(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_completed = 9;
  inline bool has_lap_heroes_completed() const;
  inline void clear_lap_heroes_completed();
  static const int kLapHeroesCompletedFieldNumber = 9;
  inline ::google::protobuf::uint32 lap_heroes_completed() const;
  inline void set_lap_heroes_completed(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_remaining = 10;
  inline bool has_lap_heroes_remaining() const;
  inline void clear_lap_heroes_remaining();
  static const int kLapHeroesRemainingFieldNumber = 10;
  inline ::google::protobuf::uint32 lap_heroes_remaining() const;
  inline void set_lap_heroes_remaining(::google::protobuf::uint32 value);

  // optional uint32 next_hero_id = 11;
  inline bool has_next_hero_id() const;
  inline void clear_next_hero_id();
  static const int kNextHeroIdFieldNumber = 11;
  inline ::google::protobuf::uint32 next_hero_id() const;
  inline void set_next_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_id = 12;
  inline bool has_prev_hero_id() const;
  inline void clear_prev_hero_id();
  static const int kPrevHeroIdFieldNumber = 12;
  inline ::google::protobuf::uint32 prev_hero_id() const;
  inline void set_prev_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_games = 13;
  inline bool has_prev_hero_games() const;
  inline void clear_prev_hero_games();
  static const int kPrevHeroGamesFieldNumber = 13;
  inline ::google::protobuf::uint32 prev_hero_games() const;
  inline void set_prev_hero_games(::google::protobuf::uint32 value);

  // optional float prev_avg_tries = 14;
  inline bool has_prev_avg_tries() const;
  inline void clear_prev_avg_tries();
  static const int kPrevAvgTriesFieldNumber = 14;
  inline float prev_avg_tries() const;
  inline void set_prev_avg_tries(float value);

  // optional float curr_avg_tries = 15;
  inline bool has_curr_avg_tries() const;
  inline void clear_curr_avg_tries();
  static const int kCurrAvgTriesFieldNumber = 15;
  inline float curr_avg_tries() const;
  inline void set_curr_avg_tries(float value);

  // optional float next_avg_tries = 16;
  inline bool has_next_avg_tries() const;
  inline void clear_next_avg_tries();
  static const int kNextAvgTriesFieldNumber = 16;
  inline float next_avg_tries() const;
  inline void set_next_avg_tries(float value);

  // optional float full_lap_avg_tries = 17;
  inline bool has_full_lap_avg_tries() const;
  inline void clear_full_lap_avg_tries();
  static const int kFullLapAvgTriesFieldNumber = 17;
  inline float full_lap_avg_tries() const;
  inline void set_full_lap_avg_tries(float value);

  // optional float curr_lap_avg_tries = 18;
  inline bool has_curr_lap_avg_tries() const;
  inline void clear_curr_lap_avg_tries();
  static const int kCurrLapAvgTriesFieldNumber = 18;
  inline float curr_lap_avg_tries() const;
  inline void set_curr_lap_avg_tries(float value);

  // optional string profile_name = 19;
  inline bool has_profile_name() const;
  inline void clear_profile_name();
  static const int kProfileNameFieldNumber = 19;
  inline const ::std::string& profile_name() const;
  inline void set_profile_name(const ::std::string& value);
  inline void set_profile_name(const char* value);
  inline void set_profile_name(const char* value, size_t size);
  inline ::std::string* mutable_profile_name();
  inline ::std::string* release_profile_name();
  inline void set_allocated_profile_name(::std::string* profile_name);

  // optional uint32 start_hero_id = 20;
  inline bool has_start_hero_id() const;
  inline void clear_start_hero_id();
  static const int kStartHeroIdFieldNumber = 20;
  inline ::google::protobuf::uint32 start_hero_id() const;
  inline void set_start_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroProgressResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_curr_hero_id();
  inline void clear_has_curr_hero_id();
  inline void set_has_laps_completed();
  inline void clear_has_laps_completed();
  inline void set_has_curr_hero_games();
  inline void clear_has_curr_hero_games();
  inline void set_has_curr_lap_time_started();
  inline void clear_has_curr_lap_time_started();
  inline void set_has_curr_lap_games();
  inline void clear_has_curr_lap_games();
  inline void set_has_best_lap_games();
  inline void clear_has_best_lap_games();
  inline void set_has_best_lap_time();
  inline void clear_has_best_lap_time();
  inline void set_has_lap_heroes_completed();
  inline void clear_has_lap_heroes_completed();
  inline void set_has_lap_heroes_remaining();
  inline void clear_has_lap_heroes_remaining();
  inline void set_has_next_hero_id();
  inline void clear_has_next_hero_id();
  inline void set_has_prev_hero_id();
  inline void clear_has_prev_hero_id();
  inline void set_has_prev_hero_games();
  inline void clear_has_prev_hero_games();
  inline void set_has_prev_avg_tries();
  inline void clear_has_prev_avg_tries();
  inline void set_has_curr_avg_tries();
  inline void clear_has_curr_avg_tries();
  inline void set_has_next_avg_tries();
  inline void clear_has_next_avg_tries();
  inline void set_has_full_lap_avg_tries();
  inline void clear_has_full_lap_avg_tries();
  inline void set_has_curr_lap_avg_tries();
  inline void clear_has_curr_lap_avg_tries();
  inline void set_has_profile_name();
  inline void clear_has_profile_name();
  inline void set_has_start_hero_id();
  inline void clear_has_start_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 curr_hero_id_;
  ::google::protobuf::uint32 laps_completed_;
  ::google::protobuf::uint32 curr_hero_games_;
  ::google::protobuf::uint32 curr_lap_time_started_;
  ::google::protobuf::uint32 curr_lap_games_;
  ::google::protobuf::uint32 best_lap_games_;
  ::google::protobuf::uint32 best_lap_time_;
  ::google::protobuf::uint32 lap_heroes_completed_;
  ::google::protobuf::uint32 lap_heroes_remaining_;
  ::google::protobuf::uint32 next_hero_id_;
  ::google::protobuf::uint32 prev_hero_id_;
  ::google::protobuf::uint32 prev_hero_games_;
  float prev_avg_tries_;
  float curr_avg_tries_;
  float next_avg_tries_;
  float full_lap_avg_tries_;
  float curr_lap_avg_tries_;
  ::std::string* profile_name_;
  ::google::protobuf::uint32 start_hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroProgressResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyList : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetTrophyList();
  virtual ~CMsgClientToGCGetTrophyList();

  CMsgClientToGCGetTrophyList(const CMsgClientToGCGetTrophyList& from);

  inline CMsgClientToGCGetTrophyList& operator=(const CMsgClientToGCGetTrophyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyList& default_instance();

  void Swap(CMsgClientToGCGetTrophyList* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetTrophyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetTrophyList& from);
  void MergeFrom(const CMsgClientToGCGetTrophyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetTrophyList)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetTrophyList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse_Trophy : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetTrophyListResponse_Trophy();
  virtual ~CMsgClientToGCGetTrophyListResponse_Trophy();

  CMsgClientToGCGetTrophyListResponse_Trophy(const CMsgClientToGCGetTrophyListResponse_Trophy& from);

  inline CMsgClientToGCGetTrophyListResponse_Trophy& operator=(const CMsgClientToGCGetTrophyListResponse_Trophy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyListResponse_Trophy& default_instance();

  void Swap(CMsgClientToGCGetTrophyListResponse_Trophy* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetTrophyListResponse_Trophy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  inline bool has_trophy_id() const;
  inline void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 trophy_id() const;
  inline void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  inline bool has_trophy_score() const;
  inline void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 trophy_score() const;
  inline void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 3;
  inline bool has_last_updated() const;
  inline void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 3;
  inline ::google::protobuf::uint32 last_updated() const;
  inline void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetTrophyListResponse.Trophy)
 private:
  inline void set_has_trophy_id();
  inline void clear_has_trophy_id();
  inline void set_has_trophy_score();
  inline void clear_has_trophy_score();
  inline void set_has_last_updated();
  inline void clear_has_last_updated();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 last_updated_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetTrophyListResponse_Trophy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetTrophyListResponse();
  virtual ~CMsgClientToGCGetTrophyListResponse();

  CMsgClientToGCGetTrophyListResponse(const CMsgClientToGCGetTrophyListResponse& from);

  inline CMsgClientToGCGetTrophyListResponse& operator=(const CMsgClientToGCGetTrophyListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyListResponse& default_instance();

  void Swap(CMsgClientToGCGetTrophyListResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetTrophyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetTrophyListResponse_Trophy Trophy;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated .CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
  inline int trophies_size() const;
  inline void clear_trophies();
  static const int kTrophiesFieldNumber = 2;
  inline const ::CMsgClientToGCGetTrophyListResponse_Trophy& trophies(int index) const;
  inline ::CMsgClientToGCGetTrophyListResponse_Trophy* mutable_trophies(int index);
  inline ::CMsgClientToGCGetTrophyListResponse_Trophy* add_trophies();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >&
      trophies() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >*
      mutable_trophies();

  // optional string profile_name = 3;
  inline bool has_profile_name() const;
  inline void clear_profile_name();
  static const int kProfileNameFieldNumber = 3;
  inline const ::std::string& profile_name() const;
  inline void set_profile_name(const ::std::string& value);
  inline void set_profile_name(const char* value);
  inline void set_profile_name(const char* value, size_t size);
  inline ::std::string* mutable_profile_name();
  inline ::std::string* release_profile_name();
  inline void set_allocated_profile_name(::std::string* profile_name);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetTrophyListResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_profile_name();
  inline void clear_has_profile_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy > trophies_;
  ::std::string* profile_name_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetTrophyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientTrophyAwarded : public ::google::protobuf::Message {
 public:
  CMsgGCToClientTrophyAwarded();
  virtual ~CMsgGCToClientTrophyAwarded();

  CMsgGCToClientTrophyAwarded(const CMsgGCToClientTrophyAwarded& from);

  inline CMsgGCToClientTrophyAwarded& operator=(const CMsgGCToClientTrophyAwarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTrophyAwarded& default_instance();

  void Swap(CMsgGCToClientTrophyAwarded* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientTrophyAwarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientTrophyAwarded& from);
  void MergeFrom(const CMsgGCToClientTrophyAwarded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  inline bool has_trophy_id() const;
  inline void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 trophy_id() const;
  inline void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  inline bool has_trophy_score() const;
  inline void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 trophy_score() const;
  inline void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 trophy_old_score = 3;
  inline bool has_trophy_old_score() const;
  inline void clear_trophy_old_score();
  static const int kTrophyOldScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 trophy_old_score() const;
  inline void set_trophy_old_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 4;
  inline bool has_last_updated() const;
  inline void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 4;
  inline ::google::protobuf::uint32 last_updated() const;
  inline void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientTrophyAwarded)
 private:
  inline void set_has_trophy_id();
  inline void clear_has_trophy_id();
  inline void set_has_trophy_score();
  inline void clear_has_trophy_score();
  inline void set_has_trophy_old_score();
  inline void clear_has_trophy_old_score();
  inline void set_has_last_updated();
  inline void clear_has_last_updated();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 trophy_old_score_;
  ::google::protobuf::uint32 last_updated_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientTrophyAwarded* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCard : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetProfileCard();
  virtual ~CMsgClientToGCGetProfileCard();

  CMsgClientToGCGetProfileCard(const CMsgClientToGCGetProfileCard& from);

  inline CMsgClientToGCGetProfileCard& operator=(const CMsgClientToGCGetProfileCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileCard& default_instance();

  void Swap(CMsgClientToGCGetProfileCard* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetProfileCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetProfileCard& from);
  void MergeFrom(const CMsgClientToGCGetProfileCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetProfileCard)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetProfileCard* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots_CardSlot : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetProfileCardSlots_CardSlot();
  virtual ~CMsgClientToGCSetProfileCardSlots_CardSlot();

  CMsgClientToGCSetProfileCardSlots_CardSlot(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);

  inline CMsgClientToGCSetProfileCardSlots_CardSlot& operator=(const CMsgClientToGCSetProfileCardSlots_CardSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetProfileCardSlots_CardSlot& default_instance();

  void Swap(CMsgClientToGCSetProfileCardSlots_CardSlot* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetProfileCardSlots_CardSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot_id = 1;
  inline bool has_slot_id() const;
  inline void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  inline ::google::protobuf::uint32 slot_id() const;
  inline void set_slot_id(::google::protobuf::uint32 value);

  // optional .EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
  inline bool has_slot_type() const;
  inline void clear_slot_type();
  static const int kSlotTypeFieldNumber = 2;
  inline ::EProfileCardSlotType slot_type() const;
  inline void set_slot_type(::EProfileCardSlotType value);

  // optional uint64 slot_value = 3;
  inline bool has_slot_value() const;
  inline void clear_slot_value();
  static const int kSlotValueFieldNumber = 3;
  inline ::google::protobuf::uint64 slot_value() const;
  inline void set_slot_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetProfileCardSlots.CardSlot)
 private:
  inline void set_has_slot_id();
  inline void clear_has_slot_id();
  inline void set_has_slot_type();
  inline void clear_has_slot_type();
  inline void set_has_slot_value();
  inline void clear_has_slot_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_id_;
  int slot_type_;
  ::google::protobuf::uint64 slot_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetProfileCardSlots_CardSlot* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetProfileCardSlots();
  virtual ~CMsgClientToGCSetProfileCardSlots();

  CMsgClientToGCSetProfileCardSlots(const CMsgClientToGCSetProfileCardSlots& from);

  inline CMsgClientToGCSetProfileCardSlots& operator=(const CMsgClientToGCSetProfileCardSlots& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetProfileCardSlots& default_instance();

  void Swap(CMsgClientToGCSetProfileCardSlots* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetProfileCardSlots* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetProfileCardSlots_CardSlot CardSlot;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 1;
  inline const ::CMsgClientToGCSetProfileCardSlots_CardSlot& slots(int index) const;
  inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* mutable_slots(int index);
  inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >*
      mutable_slots();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetProfileCardSlots)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot > slots_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetProfileCardSlots* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCardStats : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetProfileCardStats();
  virtual ~CMsgClientToGCGetProfileCardStats();

  CMsgClientToGCGetProfileCardStats(const CMsgClientToGCGetProfileCardStats& from);

  inline CMsgClientToGCGetProfileCardStats& operator=(const CMsgClientToGCGetProfileCardStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileCardStats& default_instance();

  void Swap(CMsgClientToGCGetProfileCardStats* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetProfileCardStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetProfileCardStats& from);
  void MergeFrom(const CMsgClientToGCGetProfileCardStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetProfileCardStats)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetProfileCardStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateHeroStatue : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreateHeroStatue();
  virtual ~CMsgClientToGCCreateHeroStatue();

  CMsgClientToGCCreateHeroStatue(const CMsgClientToGCCreateHeroStatue& from);

  inline CMsgClientToGCCreateHeroStatue& operator=(const CMsgClientToGCCreateHeroStatue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreateHeroStatue& default_instance();

  void Swap(CMsgClientToGCCreateHeroStatue* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateHeroStatue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreateHeroStatue& from);
  void MergeFrom(const CMsgClientToGCCreateHeroStatue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 source_item = 1;
  inline bool has_source_item() const;
  inline void clear_source_item();
  static const int kSourceItemFieldNumber = 1;
  inline ::google::protobuf::uint64 source_item() const;
  inline void set_source_item(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional string sequence_name = 4;
  inline bool has_sequence_name() const;
  inline void clear_sequence_name();
  static const int kSequenceNameFieldNumber = 4;
  inline const ::std::string& sequence_name() const;
  inline void set_sequence_name(const ::std::string& value);
  inline void set_sequence_name(const char* value);
  inline void set_sequence_name(const char* value, size_t size);
  inline ::std::string* mutable_sequence_name();
  inline ::std::string* release_sequence_name();
  inline void set_allocated_sequence_name(::std::string* sequence_name);

  // optional float cycle = 5;
  inline bool has_cycle() const;
  inline void clear_cycle();
  static const int kCycleFieldNumber = 5;
  inline float cycle() const;
  inline void set_cycle(float value);

  // repeated uint32 wearables = 6;
  inline int wearables_size() const;
  inline void clear_wearables();
  static const int kWearablesFieldNumber = 6;
  inline ::google::protobuf::uint32 wearables(int index) const;
  inline void set_wearables(int index, ::google::protobuf::uint32 value);
  inline void add_wearables(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wearables() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wearables();

  // optional string inscription = 7;
  inline bool has_inscription() const;
  inline void clear_inscription();
  static const int kInscriptionFieldNumber = 7;
  inline const ::std::string& inscription() const;
  inline void set_inscription(const ::std::string& value);
  inline void set_inscription(const char* value);
  inline void set_inscription(const char* value, size_t size);
  inline ::std::string* mutable_inscription();
  inline ::std::string* release_inscription();
  inline void set_allocated_inscription(::std::string* inscription);

  // repeated uint32 styles = 8;
  inline int styles_size() const;
  inline void clear_styles();
  static const int kStylesFieldNumber = 8;
  inline ::google::protobuf::uint32 styles(int index) const;
  inline void set_styles(int index, ::google::protobuf::uint32 value);
  inline void add_styles(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      styles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_styles();

  // optional uint64 reforger_item = 9;
  inline bool has_reforger_item() const;
  inline void clear_reforger_item();
  static const int kReforgerItemFieldNumber = 9;
  inline ::google::protobuf::uint64 reforger_item() const;
  inline void set_reforger_item(::google::protobuf::uint64 value);

  // optional bool tournament_drop = 10;
  inline bool has_tournament_drop() const;
  inline void clear_tournament_drop();
  static const int kTournamentDropFieldNumber = 10;
  inline bool tournament_drop() const;
  inline void set_tournament_drop(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateHeroStatue)
 private:
  inline void set_has_source_item();
  inline void clear_has_source_item();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_sequence_name();
  inline void clear_has_sequence_name();
  inline void set_has_cycle();
  inline void clear_has_cycle();
  inline void set_has_inscription();
  inline void clear_has_inscription();
  inline void set_has_reforger_item();
  inline void clear_has_reforger_item();
  inline void set_has_tournament_drop();
  inline void clear_has_tournament_drop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 source_item_;
  ::std::string* sequence_name_;
  ::google::protobuf::uint32 hero_id_;
  float cycle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wearables_;
  ::std::string* inscription_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > styles_;
  ::google::protobuf::uint64 reforger_item_;
  bool tournament_drop_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreateHeroStatue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientHeroStatueCreateResult : public ::google::protobuf::Message {
 public:
  CMsgGCToClientHeroStatueCreateResult();
  virtual ~CMsgGCToClientHeroStatueCreateResult();

  CMsgGCToClientHeroStatueCreateResult(const CMsgGCToClientHeroStatueCreateResult& from);

  inline CMsgGCToClientHeroStatueCreateResult& operator=(const CMsgGCToClientHeroStatueCreateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientHeroStatueCreateResult& default_instance();

  void Swap(CMsgGCToClientHeroStatueCreateResult* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientHeroStatueCreateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  void MergeFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 resulting_item = 1;
  inline bool has_resulting_item() const;
  inline void clear_resulting_item();
  static const int kResultingItemFieldNumber = 1;
  inline ::google::protobuf::uint64 resulting_item() const;
  inline void set_resulting_item(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientHeroStatueCreateResult)
 private:
  inline void set_has_resulting_item();
  inline void clear_has_resulting_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 resulting_item_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientHeroStatueCreateResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecordCompendiumStats : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRecordCompendiumStats();
  virtual ~CMsgClientToGCRecordCompendiumStats();

  CMsgClientToGCRecordCompendiumStats(const CMsgClientToGCRecordCompendiumStats& from);

  inline CMsgClientToGCRecordCompendiumStats& operator=(const CMsgClientToGCRecordCompendiumStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRecordCompendiumStats& default_instance();

  void Swap(CMsgClientToGCRecordCompendiumStats* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRecordCompendiumStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRecordCompendiumStats& from);
  void MergeFrom(const CMsgClientToGCRecordCompendiumStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 view_duration_s = 2;
  inline bool has_view_duration_s() const;
  inline void clear_view_duration_s();
  static const int kViewDurationSFieldNumber = 2;
  inline ::google::protobuf::uint32 view_duration_s() const;
  inline void set_view_duration_s(::google::protobuf::uint32 value);

  // optional uint32 videos_viewed = 3;
  inline bool has_videos_viewed() const;
  inline void clear_videos_viewed();
  static const int kVideosViewedFieldNumber = 3;
  inline ::google::protobuf::uint32 videos_viewed() const;
  inline void set_videos_viewed(::google::protobuf::uint32 value);

  // optional uint32 page_turns = 4;
  inline bool has_page_turns() const;
  inline void clear_page_turns();
  static const int kPageTurnsFieldNumber = 4;
  inline ::google::protobuf::uint32 page_turns() const;
  inline void set_page_turns(::google::protobuf::uint32 value);

  // optional uint32 links_followed = 5;
  inline bool has_links_followed() const;
  inline void clear_links_followed();
  static const int kLinksFollowedFieldNumber = 5;
  inline ::google::protobuf::uint32 links_followed() const;
  inline void set_links_followed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRecordCompendiumStats)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_view_duration_s();
  inline void clear_has_view_duration_s();
  inline void set_has_videos_viewed();
  inline void clear_has_videos_viewed();
  inline void set_has_page_turns();
  inline void clear_has_page_turns();
  inline void set_has_links_followed();
  inline void clear_has_links_followed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 view_duration_s_;
  ::google::protobuf::uint32 videos_viewed_;
  ::google::protobuf::uint32 page_turns_;
  ::google::protobuf::uint32 links_followed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRecordCompendiumStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientEventStatusChanged : public ::google::protobuf::Message {
 public:
  CMsgGCToClientEventStatusChanged();
  virtual ~CMsgGCToClientEventStatusChanged();

  CMsgGCToClientEventStatusChanged(const CMsgGCToClientEventStatusChanged& from);

  inline CMsgGCToClientEventStatusChanged& operator=(const CMsgGCToClientEventStatusChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientEventStatusChanged& default_instance();

  void Swap(CMsgGCToClientEventStatusChanged* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientEventStatusChanged* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientEventStatusChanged& from);
  void MergeFrom(const CMsgGCToClientEventStatusChanged& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EEvent active_events = 1;
  inline int active_events_size() const;
  inline void clear_active_events();
  static const int kActiveEventsFieldNumber = 1;
  inline ::EEvent active_events(int index) const;
  inline void set_active_events(int index, ::EEvent value);
  inline void add_active_events(::EEvent value);
  inline const ::google::protobuf::RepeatedField<int>& active_events() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_active_events();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientEventStatusChanged)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> active_events_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientEventStatusChanged* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCPlayerStatsRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCPlayerStatsRequest();
  virtual ~CMsgClientToGCPlayerStatsRequest();

  CMsgClientToGCPlayerStatsRequest(const CMsgClientToGCPlayerStatsRequest& from);

  inline CMsgClientToGCPlayerStatsRequest& operator=(const CMsgClientToGCPlayerStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCPlayerStatsRequest& default_instance();

  void Swap(CMsgClientToGCPlayerStatsRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCPlayerStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCPlayerStatsRequest& from);
  void MergeFrom(const CMsgClientToGCPlayerStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPlayerStatsRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCPlayerStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientPlayerStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientPlayerStatsResponse();
  virtual ~CMsgGCToClientPlayerStatsResponse();

  CMsgGCToClientPlayerStatsResponse(const CMsgGCToClientPlayerStatsResponse& from);

  inline CMsgGCToClientPlayerStatsResponse& operator=(const CMsgGCToClientPlayerStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientPlayerStatsResponse& default_instance();

  void Swap(CMsgGCToClientPlayerStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientPlayerStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientPlayerStatsResponse& from);
  void MergeFrom(const CMsgGCToClientPlayerStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated float player_stats = 2;
  inline int player_stats_size() const;
  inline void clear_player_stats();
  static const int kPlayerStatsFieldNumber = 2;
  inline float player_stats(int index) const;
  inline void set_player_stats(int index, float value);
  inline void add_player_stats(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      player_stats() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_player_stats();

  // optional uint32 match_count = 3;
  inline bool has_match_count() const;
  inline void clear_match_count();
  static const int kMatchCountFieldNumber = 3;
  inline ::google::protobuf::uint32 match_count() const;
  inline void set_match_count(::google::protobuf::uint32 value);

  // optional float mean_gpm = 4;
  inline bool has_mean_gpm() const;
  inline void clear_mean_gpm();
  static const int kMeanGpmFieldNumber = 4;
  inline float mean_gpm() const;
  inline void set_mean_gpm(float value);

  // optional float mean_xppm = 5;
  inline bool has_mean_xppm() const;
  inline void clear_mean_xppm();
  static const int kMeanXppmFieldNumber = 5;
  inline float mean_xppm() const;
  inline void set_mean_xppm(float value);

  // optional float mean_lasthits = 6;
  inline bool has_mean_lasthits() const;
  inline void clear_mean_lasthits();
  static const int kMeanLasthitsFieldNumber = 6;
  inline float mean_lasthits() const;
  inline void set_mean_lasthits(float value);

  // optional uint32 rampages = 7;
  inline bool has_rampages() const;
  inline void clear_rampages();
  static const int kRampagesFieldNumber = 7;
  inline ::google::protobuf::uint32 rampages() const;
  inline void set_rampages(::google::protobuf::uint32 value);

  // optional uint32 triple_kills = 8;
  inline bool has_triple_kills() const;
  inline void clear_triple_kills();
  static const int kTripleKillsFieldNumber = 8;
  inline ::google::protobuf::uint32 triple_kills() const;
  inline void set_triple_kills(::google::protobuf::uint32 value);

  // optional uint32 first_blood_claimed = 9;
  inline bool has_first_blood_claimed() const;
  inline void clear_first_blood_claimed();
  static const int kFirstBloodClaimedFieldNumber = 9;
  inline ::google::protobuf::uint32 first_blood_claimed() const;
  inline void set_first_blood_claimed(::google::protobuf::uint32 value);

  // optional uint32 first_blood_given = 10;
  inline bool has_first_blood_given() const;
  inline void clear_first_blood_given();
  static const int kFirstBloodGivenFieldNumber = 10;
  inline ::google::protobuf::uint32 first_blood_given() const;
  inline void set_first_blood_given(::google::protobuf::uint32 value);

  // optional uint32 couriers_killed = 11;
  inline bool has_couriers_killed() const;
  inline void clear_couriers_killed();
  static const int kCouriersKilledFieldNumber = 11;
  inline ::google::protobuf::uint32 couriers_killed() const;
  inline void set_couriers_killed(::google::protobuf::uint32 value);

  // optional uint32 aegises_snatched = 12;
  inline bool has_aegises_snatched() const;
  inline void clear_aegises_snatched();
  static const int kAegisesSnatchedFieldNumber = 12;
  inline ::google::protobuf::uint32 aegises_snatched() const;
  inline void set_aegises_snatched(::google::protobuf::uint32 value);

  // optional uint32 cheeses_eaten = 13;
  inline bool has_cheeses_eaten() const;
  inline void clear_cheeses_eaten();
  static const int kCheesesEatenFieldNumber = 13;
  inline ::google::protobuf::uint32 cheeses_eaten() const;
  inline void set_cheeses_eaten(::google::protobuf::uint32 value);

  // optional uint32 creeps_stacked = 14;
  inline bool has_creeps_stacked() const;
  inline void clear_creeps_stacked();
  static const int kCreepsStackedFieldNumber = 14;
  inline ::google::protobuf::uint32 creeps_stacked() const;
  inline void set_creeps_stacked(::google::protobuf::uint32 value);

  // optional float fight_score = 15;
  inline bool has_fight_score() const;
  inline void clear_fight_score();
  static const int kFightScoreFieldNumber = 15;
  inline float fight_score() const;
  inline void set_fight_score(float value);

  // optional float farm_score = 16;
  inline bool has_farm_score() const;
  inline void clear_farm_score();
  static const int kFarmScoreFieldNumber = 16;
  inline float farm_score() const;
  inline void set_farm_score(float value);

  // optional float support_score = 17;
  inline bool has_support_score() const;
  inline void clear_support_score();
  static const int kSupportScoreFieldNumber = 17;
  inline float support_score() const;
  inline void set_support_score(float value);

  // optional float push_score = 18;
  inline bool has_push_score() const;
  inline void clear_push_score();
  static const int kPushScoreFieldNumber = 18;
  inline float push_score() const;
  inline void set_push_score(float value);

  // optional float versatility_score = 19;
  inline bool has_versatility_score() const;
  inline void clear_versatility_score();
  static const int kVersatilityScoreFieldNumber = 19;
  inline float versatility_score() const;
  inline void set_versatility_score(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPlayerStatsResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_count();
  inline void clear_has_match_count();
  inline void set_has_mean_gpm();
  inline void clear_has_mean_gpm();
  inline void set_has_mean_xppm();
  inline void clear_has_mean_xppm();
  inline void set_has_mean_lasthits();
  inline void clear_has_mean_lasthits();
  inline void set_has_rampages();
  inline void clear_has_rampages();
  inline void set_has_triple_kills();
  inline void clear_has_triple_kills();
  inline void set_has_first_blood_claimed();
  inline void clear_has_first_blood_claimed();
  inline void set_has_first_blood_given();
  inline void clear_has_first_blood_given();
  inline void set_has_couriers_killed();
  inline void clear_has_couriers_killed();
  inline void set_has_aegises_snatched();
  inline void clear_has_aegises_snatched();
  inline void set_has_cheeses_eaten();
  inline void clear_has_cheeses_eaten();
  inline void set_has_creeps_stacked();
  inline void clear_has_creeps_stacked();
  inline void set_has_fight_score();
  inline void clear_has_fight_score();
  inline void set_has_farm_score();
  inline void clear_has_farm_score();
  inline void set_has_support_score();
  inline void clear_has_support_score();
  inline void set_has_push_score();
  inline void clear_has_push_score();
  inline void set_has_versatility_score();
  inline void clear_has_versatility_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > player_stats_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 match_count_;
  float mean_gpm_;
  float mean_xppm_;
  float mean_lasthits_;
  ::google::protobuf::uint32 rampages_;
  ::google::protobuf::uint32 triple_kills_;
  ::google::protobuf::uint32 first_blood_claimed_;
  ::google::protobuf::uint32 first_blood_given_;
  ::google::protobuf::uint32 couriers_killed_;
  ::google::protobuf::uint32 aegises_snatched_;
  ::google::protobuf::uint32 cheeses_eaten_;
  ::google::protobuf::uint32 creeps_stacked_;
  float fight_score_;
  float farm_score_;
  float support_score_;
  float push_score_;
  float versatility_score_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientPlayerStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamePlayerCountRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCustomGamePlayerCountRequest();
  virtual ~CMsgClientToGCCustomGamePlayerCountRequest();

  CMsgClientToGCCustomGamePlayerCountRequest(const CMsgClientToGCCustomGamePlayerCountRequest& from);

  inline CMsgClientToGCCustomGamePlayerCountRequest& operator=(const CMsgClientToGCCustomGamePlayerCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCustomGamePlayerCountRequest& default_instance();

  void Swap(CMsgClientToGCCustomGamePlayerCountRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCustomGamePlayerCountRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCustomGamePlayerCountRequest)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCustomGamePlayerCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamePlayerCountResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientCustomGamePlayerCountResponse();
  virtual ~CMsgGCToClientCustomGamePlayerCountResponse();

  CMsgGCToClientCustomGamePlayerCountResponse(const CMsgGCToClientCustomGamePlayerCountResponse& from);

  inline CMsgGCToClientCustomGamePlayerCountResponse& operator=(const CMsgGCToClientCustomGamePlayerCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamePlayerCountResponse& default_instance();

  void Swap(CMsgGCToClientCustomGamePlayerCountResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientCustomGamePlayerCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint64 player_count = 2;
  inline bool has_player_count() const;
  inline void clear_player_count();
  static const int kPlayerCountFieldNumber = 2;
  inline ::google::protobuf::uint64 player_count() const;
  inline void set_player_count(::google::protobuf::uint64 value);

  // optional uint64 spectator_count = 3;
  inline bool has_spectator_count() const;
  inline void clear_spectator_count();
  static const int kSpectatorCountFieldNumber = 3;
  inline ::google::protobuf::uint64 spectator_count() const;
  inline void set_spectator_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCustomGamePlayerCountResponse)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_player_count();
  inline void clear_has_player_count();
  inline void set_has_spectator_count();
  inline void clear_has_spectator_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint64 player_count_;
  ::google::protobuf::uint64 spectator_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientCustomGamePlayerCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamesFriendsPlayedRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCustomGamesFriendsPlayedRequest();
  virtual ~CMsgClientToGCCustomGamesFriendsPlayedRequest();

  CMsgClientToGCCustomGamesFriendsPlayedRequest(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);

  inline CMsgClientToGCCustomGamesFriendsPlayedRequest& operator=(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCustomGamesFriendsPlayedRequest& default_instance();

  void Swap(CMsgClientToGCCustomGamesFriendsPlayedRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCustomGamesFriendsPlayedRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCustomGamesFriendsPlayedRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCustomGamesFriendsPlayedRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame : public ::google::protobuf::Message {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& default_instance();

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // repeated uint32 account_ids = 2;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse();

  CMsgGCToClientCustomGamesFriendsPlayedResponse(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse& default_instance();

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientCustomGamesFriendsPlayedResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame CustomGame;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated .CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
  inline int games_size() const;
  inline void clear_games();
  static const int kGamesFieldNumber = 2;
  inline const ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& games(int index) const;
  inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* mutable_games(int index);
  inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* add_games();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
      games() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
      mutable_games();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCustomGamesFriendsPlayedResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame > games_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientCustomGamesFriendsPlayedResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostCommentRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialFeedPostCommentRequest();
  virtual ~CMsgClientToGCSocialFeedPostCommentRequest();

  CMsgClientToGCSocialFeedPostCommentRequest(const CMsgClientToGCSocialFeedPostCommentRequest& from);

  inline CMsgClientToGCSocialFeedPostCommentRequest& operator=(const CMsgClientToGCSocialFeedPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialFeedPostCommentRequest& default_instance();

  void Swap(CMsgClientToGCSocialFeedPostCommentRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialFeedPostCommentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint64 event_id() const;
  inline void set_event_id(::google::protobuf::uint64 value);

  // optional string comment = 2;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 2;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialFeedPostCommentRequest)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 event_id_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialFeedPostCommentRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostCommentResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialFeedPostCommentResponse();
  virtual ~CMsgGCToClientSocialFeedPostCommentResponse();

  CMsgGCToClientSocialFeedPostCommentResponse(const CMsgGCToClientSocialFeedPostCommentResponse& from);

  inline CMsgGCToClientSocialFeedPostCommentResponse& operator=(const CMsgGCToClientSocialFeedPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialFeedPostCommentResponse& default_instance();

  void Swap(CMsgGCToClientSocialFeedPostCommentResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialFeedPostCommentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialFeedPostCommentResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialFeedPostCommentResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostMessageRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialFeedPostMessageRequest();
  virtual ~CMsgClientToGCSocialFeedPostMessageRequest();

  CMsgClientToGCSocialFeedPostMessageRequest(const CMsgClientToGCSocialFeedPostMessageRequest& from);

  inline CMsgClientToGCSocialFeedPostMessageRequest& operator=(const CMsgClientToGCSocialFeedPostMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialFeedPostMessageRequest& default_instance();

  void Swap(CMsgClientToGCSocialFeedPostMessageRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialFeedPostMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional uint64 match_id = 2;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 match_timestamp = 3;
  inline bool has_match_timestamp() const;
  inline void clear_match_timestamp();
  static const int kMatchTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 match_timestamp() const;
  inline void set_match_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialFeedPostMessageRequest)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_match_timestamp();
  inline void clear_has_match_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 match_timestamp_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialFeedPostMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostMessageResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialFeedPostMessageResponse();
  virtual ~CMsgGCToClientSocialFeedPostMessageResponse();

  CMsgGCToClientSocialFeedPostMessageResponse(const CMsgGCToClientSocialFeedPostMessageResponse& from);

  inline CMsgGCToClientSocialFeedPostMessageResponse& operator=(const CMsgGCToClientSocialFeedPostMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialFeedPostMessageResponse& default_instance();

  void Swap(CMsgGCToClientSocialFeedPostMessageResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialFeedPostMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialFeedPostMessageResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialFeedPostMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCFriendsPlayedCustomGameRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCFriendsPlayedCustomGameRequest();
  virtual ~CMsgClientToGCFriendsPlayedCustomGameRequest();

  CMsgClientToGCFriendsPlayedCustomGameRequest(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);

  inline CMsgClientToGCFriendsPlayedCustomGameRequest& operator=(const CMsgClientToGCFriendsPlayedCustomGameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFriendsPlayedCustomGameRequest& default_instance();

  void Swap(CMsgClientToGCFriendsPlayedCustomGameRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCFriendsPlayedCustomGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  void MergeFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFriendsPlayedCustomGameRequest)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCFriendsPlayedCustomGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFriendsPlayedCustomGameResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFriendsPlayedCustomGameResponse();
  virtual ~CMsgGCToClientFriendsPlayedCustomGameResponse();

  CMsgGCToClientFriendsPlayedCustomGameResponse(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);

  inline CMsgGCToClientFriendsPlayedCustomGameResponse& operator=(const CMsgGCToClientFriendsPlayedCustomGameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFriendsPlayedCustomGameResponse& default_instance();

  void Swap(CMsgGCToClientFriendsPlayedCustomGameResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFriendsPlayedCustomGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  void MergeFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // repeated uint32 account_ids = 2;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFriendsPlayedCustomGameResponse)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFriendsPlayedCustomGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCFeaturedHeroesRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCFeaturedHeroesRequest();
  virtual ~CMsgClientToGCFeaturedHeroesRequest();

  CMsgClientToGCFeaturedHeroesRequest(const CMsgClientToGCFeaturedHeroesRequest& from);

  inline CMsgClientToGCFeaturedHeroesRequest& operator=(const CMsgClientToGCFeaturedHeroesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFeaturedHeroesRequest& default_instance();

  void Swap(CMsgClientToGCFeaturedHeroesRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCFeaturedHeroesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCFeaturedHeroesRequest& from);
  void MergeFrom(const CMsgClientToGCFeaturedHeroesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFeaturedHeroesRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCFeaturedHeroesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_DataField : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse_DataField();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_DataField();

  CMsgGCToClientFeaturedHeroesResponse_DataField(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);

  inline CMsgGCToClientFeaturedHeroesResponse_DataField& operator=(const CMsgGCToClientFeaturedHeroesResponse_DataField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_DataField& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse_DataField* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse_DataField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EFeaturedHeroDataType data_type = 1 [default = k_EFeaturedHeroDataType_HeroID];
  inline bool has_data_type() const;
  inline void clear_data_type();
  static const int kDataTypeFieldNumber = 1;
  inline ::EFeaturedHeroDataType data_type() const;
  inline void set_data_type(::EFeaturedHeroDataType value);

  // optional uint32 uint32_value = 2;
  inline bool has_uint32_value() const;
  inline void clear_uint32_value();
  static const int kUint32ValueFieldNumber = 2;
  inline ::google::protobuf::uint32 uint32_value() const;
  inline void set_uint32_value(::google::protobuf::uint32 value);

  // optional uint64 uint64_value = 3;
  inline bool has_uint64_value() const;
  inline void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 3;
  inline ::google::protobuf::uint64 uint64_value() const;
  inline void set_uint64_value(::google::protobuf::uint64 value);

  // optional string string_value = 4;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 4;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const char* value, size_t size);
  inline ::std::string* mutable_string_value();
  inline ::std::string* release_string_value();
  inline void set_allocated_string_value(::std::string* string_value);

  // optional float float_value = 5;
  inline bool has_float_value() const;
  inline void clear_float_value();
  static const int kFloatValueFieldNumber = 5;
  inline float float_value() const;
  inline void set_float_value(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse.DataField)
 private:
  inline void set_has_data_type();
  inline void clear_has_data_type();
  inline void set_has_uint32_value();
  inline void clear_has_uint32_value();
  inline void set_has_uint64_value();
  inline void clear_has_uint64_value();
  inline void set_has_string_value();
  inline void clear_has_string_value();
  inline void set_has_float_value();
  inline void clear_has_float_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int data_type_;
  ::google::protobuf::uint32 uint32_value_;
  ::google::protobuf::uint64 uint64_value_;
  ::std::string* string_value_;
  float float_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse_DataField* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_FeaturedHero : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_FeaturedHero();

  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);

  inline CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& operator=(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCToClientFeaturedHeroesResponse.DataField data_fields = 1;
  inline int data_fields_size() const;
  inline void clear_data_fields();
  static const int kDataFieldsFieldNumber = 1;
  inline const ::CMsgGCToClientFeaturedHeroesResponse_DataField& data_fields(int index) const;
  inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* mutable_data_fields(int index);
  inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* add_data_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >&
      data_fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >*
      mutable_data_fields();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField > data_fields_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_Category : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse_Category();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_Category();

  CMsgGCToClientFeaturedHeroesResponse_Category(const CMsgGCToClientFeaturedHeroesResponse_Category& from);

  inline CMsgGCToClientFeaturedHeroesResponse_Category& operator=(const CMsgGCToClientFeaturedHeroesResponse_Category& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_Category& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse_Category* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse_Category* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_Category& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_Category& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 category_weight = 1;
  inline bool has_category_weight() const;
  inline void clear_category_weight();
  static const int kCategoryWeightFieldNumber = 1;
  inline ::google::protobuf::int32 category_weight() const;
  inline void set_category_weight(::google::protobuf::int32 value);

  // repeated .EFeaturedHeroTextField text_fields = 2;
  inline int text_fields_size() const;
  inline void clear_text_fields();
  static const int kTextFieldsFieldNumber = 2;
  inline ::EFeaturedHeroTextField text_fields(int index) const;
  inline void set_text_fields(int index, ::EFeaturedHeroTextField value);
  inline void add_text_fields(::EFeaturedHeroTextField value);
  inline const ::google::protobuf::RepeatedField<int>& text_fields() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_text_fields();

  // repeated .CMsgGCToClientFeaturedHeroesResponse.FeaturedHero featured_heroes = 3;
  inline int featured_heroes_size() const;
  inline void clear_featured_heroes();
  static const int kFeaturedHeroesFieldNumber = 3;
  inline const ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& featured_heroes(int index) const;
  inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* mutable_featured_heroes(int index);
  inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* add_featured_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >&
      featured_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >*
      mutable_featured_heroes();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse.Category)
 private:
  inline void set_has_category_weight();
  inline void clear_has_category_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> text_fields_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero > featured_heroes_;
  ::google::protobuf::int32 category_weight_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse_Category* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse();
  virtual ~CMsgGCToClientFeaturedHeroesResponse();

  CMsgGCToClientFeaturedHeroesResponse(const CMsgGCToClientFeaturedHeroesResponse& from);

  inline CMsgGCToClientFeaturedHeroesResponse& operator=(const CMsgGCToClientFeaturedHeroesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientFeaturedHeroesResponse_DataField DataField;
  typedef CMsgGCToClientFeaturedHeroesResponse_FeaturedHero FeaturedHero;
  typedef CMsgGCToClientFeaturedHeroesResponse_Category Category;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCToClientFeaturedHeroesResponse.Category categories = 1;
  inline int categories_size() const;
  inline void clear_categories();
  static const int kCategoriesFieldNumber = 1;
  inline const ::CMsgGCToClientFeaturedHeroesResponse_Category& categories(int index) const;
  inline ::CMsgGCToClientFeaturedHeroesResponse_Category* mutable_categories(int index);
  inline ::CMsgGCToClientFeaturedHeroesResponse_Category* add_categories();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >&
      categories() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >*
      mutable_categories();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category > categories_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchPostCommentRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialMatchPostCommentRequest();
  virtual ~CMsgClientToGCSocialMatchPostCommentRequest();

  CMsgClientToGCSocialMatchPostCommentRequest(const CMsgClientToGCSocialMatchPostCommentRequest& from);

  inline CMsgClientToGCSocialMatchPostCommentRequest& operator=(const CMsgClientToGCSocialMatchPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialMatchPostCommentRequest& default_instance();

  void Swap(CMsgClientToGCSocialMatchPostCommentRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialMatchPostCommentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional string comment = 2;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 2;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialMatchPostCommentRequest)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialMatchPostCommentRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchPostCommentResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialMatchPostCommentResponse();
  virtual ~CMsgGCToClientSocialMatchPostCommentResponse();

  CMsgGCToClientSocialMatchPostCommentResponse(const CMsgGCToClientSocialMatchPostCommentResponse& from);

  inline CMsgGCToClientSocialMatchPostCommentResponse& operator=(const CMsgGCToClientSocialMatchPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchPostCommentResponse& default_instance();

  void Swap(CMsgGCToClientSocialMatchPostCommentResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialMatchPostCommentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialMatchPostCommentResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialMatchPostCommentResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchDetailsRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialMatchDetailsRequest();
  virtual ~CMsgClientToGCSocialMatchDetailsRequest();

  CMsgClientToGCSocialMatchDetailsRequest(const CMsgClientToGCSocialMatchDetailsRequest& from);

  inline CMsgClientToGCSocialMatchDetailsRequest& operator=(const CMsgClientToGCSocialMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialMatchDetailsRequest& default_instance();

  void Swap(CMsgClientToGCSocialMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialMatchDetailsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 pagination_timestamp = 2;
  inline bool has_pagination_timestamp() const;
  inline void clear_pagination_timestamp();
  static const int kPaginationTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 pagination_timestamp() const;
  inline void set_pagination_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialMatchDetailsRequest)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_pagination_timestamp();
  inline void clear_has_pagination_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 pagination_timestamp_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialMatchDetailsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse_Comment : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialMatchDetailsResponse_Comment();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse_Comment();

  CMsgGCToClientSocialMatchDetailsResponse_Comment(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);

  inline CMsgGCToClientSocialMatchDetailsResponse_Comment& operator=(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchDetailsResponse_Comment& default_instance();

  void Swap(CMsgGCToClientSocialMatchDetailsResponse_Comment* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialMatchDetailsResponse_Comment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // optional uint32 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional string comment = 4;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 4;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialMatchDetailsResponse.Comment)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* persona_name_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialMatchDetailsResponse_Comment* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialMatchDetailsResponse();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse();

  CMsgGCToClientSocialMatchDetailsResponse(const CMsgGCToClientSocialMatchDetailsResponse& from);

  inline CMsgGCToClientSocialMatchDetailsResponse& operator=(const CMsgGCToClientSocialMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchDetailsResponse& default_instance();

  void Swap(CMsgGCToClientSocialMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialMatchDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientSocialMatchDetailsResponse_Comment Comment;

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // repeated .CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
  inline int comments_size() const;
  inline void clear_comments();
  static const int kCommentsFieldNumber = 2;
  inline const ::CMsgGCToClientSocialMatchDetailsResponse_Comment& comments(int index) const;
  inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* mutable_comments(int index);
  inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* add_comments();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
      comments() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
      mutable_comments();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialMatchDetailsResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment > comments_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialMatchDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence_Member : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartyRichPresence_Member();
  virtual ~CMsgDOTAPartyRichPresence_Member();

  CMsgDOTAPartyRichPresence_Member(const CMsgDOTAPartyRichPresence_Member& from);

  inline CMsgDOTAPartyRichPresence_Member& operator=(const CMsgDOTAPartyRichPresence_Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence_Member& default_instance();

  void Swap(CMsgDOTAPartyRichPresence_Member* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartyRichPresence_Member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartyRichPresence_Member& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence_Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional bool coach = 2;
  inline bool has_coach() const;
  inline void clear_coach();
  static const int kCoachFieldNumber = 2;
  inline bool coach() const;
  inline void set_coach(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartyRichPresence.Member)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_coach();
  inline void clear_has_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool coach_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartyRichPresence_Member* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence_WeekendTourney : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartyRichPresence_WeekendTourney();
  virtual ~CMsgDOTAPartyRichPresence_WeekendTourney();

  CMsgDOTAPartyRichPresence_WeekendTourney(const CMsgDOTAPartyRichPresence_WeekendTourney& from);

  inline CMsgDOTAPartyRichPresence_WeekendTourney& operator=(const CMsgDOTAPartyRichPresence_WeekendTourney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence_WeekendTourney& default_instance();

  void Swap(CMsgDOTAPartyRichPresence_WeekendTourney* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartyRichPresence_WeekendTourney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartyRichPresence_WeekendTourney& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence_WeekendTourney& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 division = 1;
  inline bool has_division() const;
  inline void clear_division();
  static const int kDivisionFieldNumber = 1;
  inline ::google::protobuf::uint32 division() const;
  inline void set_division(::google::protobuf::uint32 value);

  // optional uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // optional uint32 round = 3;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 3;
  inline ::google::protobuf::uint32 round() const;
  inline void set_round(::google::protobuf::uint32 value);

  // optional uint32 tournament_id = 4;
  inline bool has_tournament_id() const;
  inline void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 4;
  inline ::google::protobuf::uint32 tournament_id() const;
  inline void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 state_seq_num = 5;
  inline bool has_state_seq_num() const;
  inline void clear_state_seq_num();
  static const int kStateSeqNumFieldNumber = 5;
  inline ::google::protobuf::uint32 state_seq_num() const;
  inline void set_state_seq_num(::google::protobuf::uint32 value);

  // optional .EWeekendTourneyRichPresenceEvent event = 6 [default = k_EWeekendTourneyRichPresenceEvent_None];
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 6;
  inline ::EWeekendTourneyRichPresenceEvent event() const;
  inline void set_event(::EWeekendTourneyRichPresenceEvent value);

  // optional uint32 event_round = 7;
  inline bool has_event_round() const;
  inline void clear_event_round();
  static const int kEventRoundFieldNumber = 7;
  inline ::google::protobuf::uint32 event_round() const;
  inline void set_event_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartyRichPresence.WeekendTourney)
 private:
  inline void set_has_division();
  inline void clear_has_division();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_tournament_id();
  inline void clear_has_tournament_id();
  inline void set_has_state_seq_num();
  inline void clear_has_state_seq_num();
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_event_round();
  inline void clear_has_event_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 division_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 round_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 state_seq_num_;
  int event_;
  ::google::protobuf::uint32 event_round_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartyRichPresence_WeekendTourney* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartyRichPresence();
  virtual ~CMsgDOTAPartyRichPresence();

  CMsgDOTAPartyRichPresence(const CMsgDOTAPartyRichPresence& from);

  inline CMsgDOTAPartyRichPresence& operator=(const CMsgDOTAPartyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence& default_instance();

  void Swap(CMsgDOTAPartyRichPresence* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartyRichPresence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartyRichPresence& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPartyRichPresence_Member Member;
  typedef CMsgDOTAPartyRichPresence_WeekendTourney WeekendTourney;

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional .CSODOTAParty.State party_state = 2 [default = UI];
  inline bool has_party_state() const;
  inline void clear_party_state();
  static const int kPartyStateFieldNumber = 2;
  inline ::CSODOTAParty_State party_state() const;
  inline void set_party_state(::CSODOTAParty_State value);

  // optional bool open = 3;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);

  // optional bool low_priority = 5;
  inline bool has_low_priority() const;
  inline void clear_low_priority();
  static const int kLowPriorityFieldNumber = 5;
  inline bool low_priority() const;
  inline void set_low_priority(bool value);

  // optional uint32 team_id = 7;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 7;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string team_name = 8;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 8;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional uint64 ugc_team_ui_logo = 9;
  inline bool has_ugc_team_ui_logo() const;
  inline void clear_ugc_team_ui_logo();
  static const int kUgcTeamUiLogoFieldNumber = 9;
  inline ::google::protobuf::uint64 ugc_team_ui_logo() const;
  inline void set_ugc_team_ui_logo(::google::protobuf::uint64 value);

  // repeated .CMsgDOTAPartyRichPresence.Member members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::CMsgDOTAPartyRichPresence_Member& members(int index) const;
  inline ::CMsgDOTAPartyRichPresence_Member* mutable_members(int index);
  inline ::CMsgDOTAPartyRichPresence_Member* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >*
      mutable_members();

  // optional .CMsgDOTAPartyRichPresence.WeekendTourney weekend_tourney = 6;
  inline bool has_weekend_tourney() const;
  inline void clear_weekend_tourney();
  static const int kWeekendTourneyFieldNumber = 6;
  inline const ::CMsgDOTAPartyRichPresence_WeekendTourney& weekend_tourney() const;
  inline ::CMsgDOTAPartyRichPresence_WeekendTourney* mutable_weekend_tourney();
  inline ::CMsgDOTAPartyRichPresence_WeekendTourney* release_weekend_tourney();
  inline void set_allocated_weekend_tourney(::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartyRichPresence)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_party_state();
  inline void clear_has_party_state();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_low_priority();
  inline void clear_has_low_priority();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_ugc_team_ui_logo();
  inline void clear_has_ugc_team_ui_logo();
  inline void set_has_weekend_tourney();
  inline void clear_has_weekend_tourney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  int party_state_;
  bool open_;
  bool low_priority_;
  ::std::string* team_name_;
  ::google::protobuf::uint64 ugc_team_ui_logo_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member > members_;
  ::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartyRichPresence* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyRichPresence : public ::google::protobuf::Message {
 public:
  CMsgDOTALobbyRichPresence();
  virtual ~CMsgDOTALobbyRichPresence();

  CMsgDOTALobbyRichPresence(const CMsgDOTALobbyRichPresence& from);

  inline CMsgDOTALobbyRichPresence& operator=(const CMsgDOTALobbyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALobbyRichPresence& default_instance();

  void Swap(CMsgDOTALobbyRichPresence* other);

  // implements Message ----------------------------------------------

  CMsgDOTALobbyRichPresence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALobbyRichPresence& from);
  void MergeFrom(const CMsgDOTALobbyRichPresence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional .CSODOTALobby.State lobby_state = 2 [default = UI];
  inline bool has_lobby_state() const;
  inline void clear_lobby_state();
  static const int kLobbyStateFieldNumber = 2;
  inline ::CSODOTALobby_State lobby_state() const;
  inline void set_lobby_state(::CSODOTALobby_State value);

  // optional bool password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline bool password() const;
  inline void set_password(bool value);

  // optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // optional uint32 member_count = 5;
  inline bool has_member_count() const;
  inline void clear_member_count();
  static const int kMemberCountFieldNumber = 5;
  inline ::google::protobuf::uint32 member_count() const;
  inline void set_member_count(::google::protobuf::uint32 value);

  // optional uint32 max_member_count = 6;
  inline bool has_max_member_count() const;
  inline void clear_max_member_count();
  static const int kMaxMemberCountFieldNumber = 6;
  inline ::google::protobuf::uint32 max_member_count() const;
  inline void set_max_member_count(::google::protobuf::uint32 value);

  // optional fixed64 custom_game_id = 7;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 7;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional string name = 8;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 8;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 lobby_type = 9;
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 lobby_type() const;
  inline void set_lobby_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALobbyRichPresence)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_lobby_state();
  inline void clear_has_lobby_state();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_member_count();
  inline void clear_has_member_count();
  inline void set_has_max_member_count();
  inline void clear_has_max_member_count();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lobby_type();
  inline void clear_has_lobby_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  int lobby_state_;
  bool password_;
  int game_mode_;
  ::google::protobuf::uint32 member_count_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 max_member_count_;
  ::google::protobuf::uint32 lobby_type_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALobbyRichPresence* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameListenServerStartedLoading : public ::google::protobuf::Message {
 public:
  CMsgDOTACustomGameListenServerStartedLoading();
  virtual ~CMsgDOTACustomGameListenServerStartedLoading();

  CMsgDOTACustomGameListenServerStartedLoading(const CMsgDOTACustomGameListenServerStartedLoading& from);

  inline CMsgDOTACustomGameListenServerStartedLoading& operator=(const CMsgDOTACustomGameListenServerStartedLoading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACustomGameListenServerStartedLoading& default_instance();

  void Swap(CMsgDOTACustomGameListenServerStartedLoading* other);

  // implements Message ----------------------------------------------

  CMsgDOTACustomGameListenServerStartedLoading* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 custom_game_id = 2;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 2;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // repeated uint32 lobby_members = 3;
  inline int lobby_members_size() const;
  inline void clear_lobby_members();
  static const int kLobbyMembersFieldNumber = 3;
  inline ::google::protobuf::uint32 lobby_members(int index) const;
  inline void set_lobby_members(int index, ::google::protobuf::uint32 value);
  inline void add_lobby_members(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lobby_members() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lobby_members();

  // optional uint32 start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACustomGameListenServerStartedLoading)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lobby_members_;
  ::google::protobuf::uint32 start_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACustomGameListenServerStartedLoading* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameClientFinishedLoading : public ::google::protobuf::Message {
 public:
  CMsgDOTACustomGameClientFinishedLoading();
  virtual ~CMsgDOTACustomGameClientFinishedLoading();

  CMsgDOTACustomGameClientFinishedLoading(const CMsgDOTACustomGameClientFinishedLoading& from);

  inline CMsgDOTACustomGameClientFinishedLoading& operator=(const CMsgDOTACustomGameClientFinishedLoading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACustomGameClientFinishedLoading& default_instance();

  void Swap(CMsgDOTACustomGameClientFinishedLoading* other);

  // implements Message ----------------------------------------------

  CMsgDOTACustomGameClientFinishedLoading* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 loading_duration = 2;
  inline bool has_loading_duration() const;
  inline void clear_loading_duration();
  static const int kLoadingDurationFieldNumber = 2;
  inline ::google::protobuf::uint32 loading_duration() const;
  inline void set_loading_duration(::google::protobuf::uint32 value);

  // optional sint32 result_code = 3;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 3;
  inline ::google::protobuf::int32 result_code() const;
  inline void set_result_code(::google::protobuf::int32 value);

  // optional string result_string = 4;
  inline bool has_result_string() const;
  inline void clear_result_string();
  static const int kResultStringFieldNumber = 4;
  inline const ::std::string& result_string() const;
  inline void set_result_string(const ::std::string& value);
  inline void set_result_string(const char* value);
  inline void set_result_string(const char* value, size_t size);
  inline ::std::string* mutable_result_string();
  inline ::std::string* release_result_string();
  inline void set_allocated_result_string(::std::string* result_string);

  // optional uint32 signon_states = 5;
  inline bool has_signon_states() const;
  inline void clear_signon_states();
  static const int kSignonStatesFieldNumber = 5;
  inline ::google::protobuf::uint32 signon_states() const;
  inline void set_signon_states(::google::protobuf::uint32 value);

  // optional string comment = 6;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 6;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgDOTACustomGameClientFinishedLoading)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_loading_duration();
  inline void clear_has_loading_duration();
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_result_string();
  inline void clear_has_result_string();
  inline void set_has_signon_states();
  inline void clear_has_signon_states();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 loading_duration_;
  ::google::protobuf::int32 result_code_;
  ::std::string* result_string_;
  ::std::string* comment_;
  ::google::protobuf::uint32 signon_states_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACustomGameClientFinishedLoading* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeries : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeries();
  virtual ~CMsgClientToGCGetLeagueSeries();

  CMsgClientToGCGetLeagueSeries(const CMsgClientToGCGetLeagueSeries& from);

  inline CMsgClientToGCGetLeagueSeries& operator=(const CMsgClientToGCGetLeagueSeries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeries& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeries* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeries* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeries& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeries& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeries)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeries* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse_Series_Team : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeriesResponse_Series_Team();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse_Series_Team();

  CMsgClientToGCGetLeagueSeriesResponse_Series_Team(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);

  inline CMsgClientToGCGetLeagueSeriesResponse_Series_Team& operator=(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeriesResponse_Series_Team* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeriesResponse_Series_Team* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string team_name = 2;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional string team_tag = 3;
  inline bool has_team_tag() const;
  inline void clear_team_tag();
  static const int kTeamTagFieldNumber = 3;
  inline const ::std::string& team_tag() const;
  inline void set_team_tag(const ::std::string& value);
  inline void set_team_tag(const char* value);
  inline void set_team_tag(const char* value, size_t size);
  inline ::std::string* mutable_team_tag();
  inline ::std::string* release_team_tag();
  inline void set_allocated_team_tag(::std::string* team_tag);

  // optional uint32 team_score = 4;
  inline bool has_team_score() const;
  inline void clear_team_score();
  static const int kTeamScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 team_score() const;
  inline void set_team_score(::google::protobuf::uint32 value);

  // optional uint32 team_wins = 5;
  inline bool has_team_wins() const;
  inline void clear_team_wins();
  static const int kTeamWinsFieldNumber = 5;
  inline ::google::protobuf::uint32 team_wins() const;
  inline void set_team_wins(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeriesResponse.Series.Team)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_team_tag();
  inline void clear_has_team_tag();
  inline void set_has_team_score();
  inline void clear_has_team_score();
  inline void set_has_team_wins();
  inline void clear_has_team_wins();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* team_name_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 team_score_;
  ::std::string* team_tag_;
  ::google::protobuf::uint32 team_wins_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeriesResponse_Series_Team* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse_Series : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeriesResponse_Series();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse_Series();

  CMsgClientToGCGetLeagueSeriesResponse_Series(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);

  inline CMsgClientToGCGetLeagueSeriesResponse_Series& operator=(const CMsgClientToGCGetLeagueSeriesResponse_Series& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse_Series& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeriesResponse_Series* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeriesResponse_Series* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLeagueSeriesResponse_Series_Team Team;

  // accessors -------------------------------------------------------

  // optional uint32 series_id = 1;
  inline bool has_series_id() const;
  inline void clear_series_id();
  static const int kSeriesIdFieldNumber = 1;
  inline ::google::protobuf::uint32 series_id() const;
  inline void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 num_games = 2;
  inline bool has_num_games() const;
  inline void clear_num_games();
  static const int kNumGamesFieldNumber = 2;
  inline ::google::protobuf::uint32 num_games() const;
  inline void set_num_games(::google::protobuf::uint32 value);

  // repeated .CMsgClientToGCGetLeagueSeriesResponse.Series.Team teams = 3;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 3;
  inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team& teams(int index) const;
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* mutable_teams(int index);
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >*
      mutable_teams();

  // optional string series_name = 4;
  inline bool has_series_name() const;
  inline void clear_series_name();
  static const int kSeriesNameFieldNumber = 4;
  inline const ::std::string& series_name() const;
  inline void set_series_name(const ::std::string& value);
  inline void set_series_name(const char* value);
  inline void set_series_name(const char* value, size_t size);
  inline ::std::string* mutable_series_name();
  inline ::std::string* release_series_name();
  inline void set_allocated_series_name(::std::string* series_name);

  // optional string phase_name = 5;
  inline bool has_phase_name() const;
  inline void clear_phase_name();
  static const int kPhaseNameFieldNumber = 5;
  inline const ::std::string& phase_name() const;
  inline void set_phase_name(const ::std::string& value);
  inline void set_phase_name(const char* value);
  inline void set_phase_name(const char* value, size_t size);
  inline ::std::string* mutable_phase_name();
  inline ::std::string* release_phase_name();
  inline void set_allocated_phase_name(::std::string* phase_name);

  // optional uint32 start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 after_series_id = 7;
  inline bool has_after_series_id() const;
  inline void clear_after_series_id();
  static const int kAfterSeriesIdFieldNumber = 7;
  inline ::google::protobuf::uint32 after_series_id() const;
  inline void set_after_series_id(::google::protobuf::uint32 value);

  // optional uint32 num_completed_games = 8;
  inline bool has_num_completed_games() const;
  inline void clear_num_completed_games();
  static const int kNumCompletedGamesFieldNumber = 8;
  inline ::google::protobuf::uint32 num_completed_games() const;
  inline void set_num_completed_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeriesResponse.Series)
 private:
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_num_games();
  inline void clear_has_num_games();
  inline void set_has_series_name();
  inline void clear_has_series_name();
  inline void set_has_phase_name();
  inline void clear_has_phase_name();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_after_series_id();
  inline void clear_has_after_series_id();
  inline void set_has_num_completed_games();
  inline void clear_has_num_completed_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 num_games_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team > teams_;
  ::std::string* series_name_;
  ::std::string* phase_name_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 after_series_id_;
  ::google::protobuf::uint32 num_completed_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeriesResponse_Series* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeriesResponse();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse();

  CMsgClientToGCGetLeagueSeriesResponse(const CMsgClientToGCGetLeagueSeriesResponse& from);

  inline CMsgClientToGCGetLeagueSeriesResponse& operator=(const CMsgClientToGCGetLeagueSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeriesResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeriesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLeagueSeriesResponse_Series Series;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientToGCGetLeagueSeriesResponse.Series series = 1;
  inline int series_size() const;
  inline void clear_series();
  static const int kSeriesFieldNumber = 1;
  inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series& series(int index) const;
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* mutable_series(int index);
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* add_series();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >&
      series() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >*
      mutable_series();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeriesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series > series_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeriesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCApplyGemCombiner : public ::google::protobuf::Message {
 public:
  CMsgClientToGCApplyGemCombiner();
  virtual ~CMsgClientToGCApplyGemCombiner();

  CMsgClientToGCApplyGemCombiner(const CMsgClientToGCApplyGemCombiner& from);

  inline CMsgClientToGCApplyGemCombiner& operator=(const CMsgClientToGCApplyGemCombiner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCApplyGemCombiner& default_instance();

  void Swap(CMsgClientToGCApplyGemCombiner* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCApplyGemCombiner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCApplyGemCombiner& from);
  void MergeFrom(const CMsgClientToGCApplyGemCombiner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id_1 = 1;
  inline bool has_item_id_1() const;
  inline void clear_item_id_1();
  static const int kItemId1FieldNumber = 1;
  inline ::google::protobuf::uint64 item_id_1() const;
  inline void set_item_id_1(::google::protobuf::uint64 value);

  // optional uint64 item_id_2 = 2;
  inline bool has_item_id_2() const;
  inline void clear_item_id_2();
  static const int kItemId2FieldNumber = 2;
  inline ::google::protobuf::uint64 item_id_2() const;
  inline void set_item_id_2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCApplyGemCombiner)
 private:
  inline void set_has_item_id_1();
  inline void clear_has_item_id_1();
  inline void set_has_item_id_2();
  inline void clear_has_item_id_2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_1_;
  ::google::protobuf::uint64 item_id_2_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCApplyGemCombiner* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCH264Unsupported : public ::google::protobuf::Message {
 public:
  CMsgClientToGCH264Unsupported();
  virtual ~CMsgClientToGCH264Unsupported();

  CMsgClientToGCH264Unsupported(const CMsgClientToGCH264Unsupported& from);

  inline CMsgClientToGCH264Unsupported& operator=(const CMsgClientToGCH264Unsupported& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCH264Unsupported& default_instance();

  void Swap(CMsgClientToGCH264Unsupported* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCH264Unsupported* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCH264Unsupported& from);
  void MergeFrom(const CMsgClientToGCH264Unsupported& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCH264Unsupported)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCH264Unsupported* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestH264Support : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestH264Support();
  virtual ~CMsgClientToGCRequestH264Support();

  CMsgClientToGCRequestH264Support(const CMsgClientToGCRequestH264Support& from);

  inline CMsgClientToGCRequestH264Support& operator=(const CMsgClientToGCRequestH264Support& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestH264Support& default_instance();

  void Swap(CMsgClientToGCRequestH264Support* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestH264Support* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestH264Support& from);
  void MergeFrom(const CMsgClientToGCRequestH264Support& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestH264Support)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestH264Support* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgress : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetQuestProgress();
  virtual ~CMsgClientToGCGetQuestProgress();

  CMsgClientToGCGetQuestProgress(const CMsgClientToGCGetQuestProgress& from);

  inline CMsgClientToGCGetQuestProgress& operator=(const CMsgClientToGCGetQuestProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgress& default_instance();

  void Swap(CMsgClientToGCGetQuestProgress* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetQuestProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetQuestProgress& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 quest_ids = 1;
  inline int quest_ids_size() const;
  inline void clear_quest_ids();
  static const int kQuestIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_ids(int index) const;
  inline void set_quest_ids(int index, ::google::protobuf::uint32 value);
  inline void add_quest_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      quest_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_quest_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetQuestProgress)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > quest_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetQuestProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse_Challenge : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetQuestProgressResponse_Challenge();
  virtual ~CMsgClientToGCGetQuestProgressResponse_Challenge();

  CMsgClientToGCGetQuestProgressResponse_Challenge(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);

  inline CMsgClientToGCGetQuestProgressResponse_Challenge& operator=(const CMsgClientToGCGetQuestProgressResponse_Challenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgressResponse_Challenge& default_instance();

  void Swap(CMsgClientToGCGetQuestProgressResponse_Challenge* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetQuestProgressResponse_Challenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 challenge_id = 1;
  inline bool has_challenge_id() const;
  inline void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 challenge_id() const;
  inline void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 time_completed = 2;
  inline bool has_time_completed() const;
  inline void clear_time_completed();
  static const int kTimeCompletedFieldNumber = 2;
  inline ::google::protobuf::uint32 time_completed() const;
  inline void set_time_completed(::google::protobuf::uint32 value);

  // optional uint32 attempts = 3;
  inline bool has_attempts() const;
  inline void clear_attempts();
  static const int kAttemptsFieldNumber = 3;
  inline ::google::protobuf::uint32 attempts() const;
  inline void set_attempts(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 challenge_type = 5;
  inline bool has_challenge_type() const;
  inline void clear_challenge_type();
  static const int kChallengeTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 challenge_type() const;
  inline void set_challenge_type(::google::protobuf::uint32 value);

  // optional uint32 quest_rank = 6;
  inline bool has_quest_rank() const;
  inline void clear_quest_rank();
  static const int kQuestRankFieldNumber = 6;
  inline ::google::protobuf::uint32 quest_rank() const;
  inline void set_quest_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetQuestProgressResponse.Challenge)
 private:
  inline void set_has_challenge_id();
  inline void clear_has_challenge_id();
  inline void set_has_time_completed();
  inline void clear_has_time_completed();
  inline void set_has_attempts();
  inline void clear_has_attempts();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_challenge_type();
  inline void clear_has_challenge_type();
  inline void set_has_quest_rank();
  inline void clear_has_quest_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 time_completed_;
  ::google::protobuf::uint32 attempts_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 challenge_type_;
  ::google::protobuf::uint32 quest_rank_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetQuestProgressResponse_Challenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse_Quest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetQuestProgressResponse_Quest();
  virtual ~CMsgClientToGCGetQuestProgressResponse_Quest();

  CMsgClientToGCGetQuestProgressResponse_Quest(const CMsgClientToGCGetQuestProgressResponse_Quest& from);

  inline CMsgClientToGCGetQuestProgressResponse_Quest& operator=(const CMsgClientToGCGetQuestProgressResponse_Quest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgressResponse_Quest& default_instance();

  void Swap(CMsgClientToGCGetQuestProgressResponse_Quest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetQuestProgressResponse_Quest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse_Quest& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse_Quest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // repeated .CMsgClientToGCGetQuestProgressResponse.Challenge completed_challenges = 2;
  inline int completed_challenges_size() const;
  inline void clear_completed_challenges();
  static const int kCompletedChallengesFieldNumber = 2;
  inline const ::CMsgClientToGCGetQuestProgressResponse_Challenge& completed_challenges(int index) const;
  inline ::CMsgClientToGCGetQuestProgressResponse_Challenge* mutable_completed_challenges(int index);
  inline ::CMsgClientToGCGetQuestProgressResponse_Challenge* add_completed_challenges();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Challenge >&
      completed_challenges() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Challenge >*
      mutable_completed_challenges();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetQuestProgressResponse.Quest)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Challenge > completed_challenges_;
  ::google::protobuf::uint32 quest_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetQuestProgressResponse_Quest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetQuestProgressResponse();
  virtual ~CMsgClientToGCGetQuestProgressResponse();

  CMsgClientToGCGetQuestProgressResponse(const CMsgClientToGCGetQuestProgressResponse& from);

  inline CMsgClientToGCGetQuestProgressResponse& operator=(const CMsgClientToGCGetQuestProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgressResponse& default_instance();

  void Swap(CMsgClientToGCGetQuestProgressResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetQuestProgressResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetQuestProgressResponse_Challenge Challenge;
  typedef CMsgClientToGCGetQuestProgressResponse_Quest Quest;

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // repeated .CMsgClientToGCGetQuestProgressResponse.Quest quests = 2;
  inline int quests_size() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 2;
  inline const ::CMsgClientToGCGetQuestProgressResponse_Quest& quests(int index) const;
  inline ::CMsgClientToGCGetQuestProgressResponse_Quest* mutable_quests(int index);
  inline ::CMsgClientToGCGetQuestProgressResponse_Quest* add_quests();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Quest >&
      quests() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Quest >*
      mutable_quests();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetQuestProgressResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Quest > quests_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetQuestProgressResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientMatchSignedOut : public ::google::protobuf::Message {
 public:
  CMsgGCToClientMatchSignedOut();
  virtual ~CMsgGCToClientMatchSignedOut();

  CMsgGCToClientMatchSignedOut(const CMsgGCToClientMatchSignedOut& from);

  inline CMsgGCToClientMatchSignedOut& operator=(const CMsgGCToClientMatchSignedOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientMatchSignedOut& default_instance();

  void Swap(CMsgGCToClientMatchSignedOut* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientMatchSignedOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientMatchSignedOut& from);
  void MergeFrom(const CMsgGCToClientMatchSignedOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientMatchSignedOut)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientMatchSignedOut* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStatsHistory : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStatsHistory();
  virtual ~CMsgGCGetHeroStatsHistory();

  CMsgGCGetHeroStatsHistory(const CMsgGCGetHeroStatsHistory& from);

  inline CMsgGCGetHeroStatsHistory& operator=(const CMsgGCGetHeroStatsHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStatsHistory& default_instance();

  void Swap(CMsgGCGetHeroStatsHistory* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStatsHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStatsHistory& from);
  void MergeFrom(const CMsgGCGetHeroStatsHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStatsHistory)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStatsHistory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStatsHistoryResponse : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStatsHistoryResponse();
  virtual ~CMsgGCGetHeroStatsHistoryResponse();

  CMsgGCGetHeroStatsHistoryResponse(const CMsgGCGetHeroStatsHistoryResponse& from);

  inline CMsgGCGetHeroStatsHistoryResponse& operator=(const CMsgGCGetHeroStatsHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStatsHistoryResponse& default_instance();

  void Swap(CMsgGCGetHeroStatsHistoryResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStatsHistoryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStatsHistoryResponse& from);
  void MergeFrom(const CMsgGCGetHeroStatsHistoryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // repeated .CMsgDOTASDOHeroStatsHistory records = 2;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 2;
  inline const ::CMsgDOTASDOHeroStatsHistory& records(int index) const;
  inline ::CMsgDOTASDOHeroStatsHistory* mutable_records(int index);
  inline ::CMsgDOTASDOHeroStatsHistory* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTASDOHeroStatsHistory >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTASDOHeroStatsHistory >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStatsHistoryResponse)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTASDOHeroStatsHistory > records_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStatsHistoryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPlayerConductScorecardRequest : public ::google::protobuf::Message {
 public:
  CMsgPlayerConductScorecardRequest();
  virtual ~CMsgPlayerConductScorecardRequest();

  CMsgPlayerConductScorecardRequest(const CMsgPlayerConductScorecardRequest& from);

  inline CMsgPlayerConductScorecardRequest& operator=(const CMsgPlayerConductScorecardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerConductScorecardRequest& default_instance();

  void Swap(CMsgPlayerConductScorecardRequest* other);

  // implements Message ----------------------------------------------

  CMsgPlayerConductScorecardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPlayerConductScorecardRequest& from);
  void MergeFrom(const CMsgPlayerConductScorecardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPlayerConductScorecardRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPlayerConductScorecardRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPlayerConductScorecard : public ::google::protobuf::Message {
 public:
  CMsgPlayerConductScorecard();
  virtual ~CMsgPlayerConductScorecard();

  CMsgPlayerConductScorecard(const CMsgPlayerConductScorecard& from);

  inline CMsgPlayerConductScorecard& operator=(const CMsgPlayerConductScorecard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerConductScorecard& default_instance();

  void Swap(CMsgPlayerConductScorecard* other);

  // implements Message ----------------------------------------------

  CMsgPlayerConductScorecard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPlayerConductScorecard& from);
  void MergeFrom(const CMsgPlayerConductScorecard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 2;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 seq_num = 3;
  inline bool has_seq_num() const;
  inline void clear_seq_num();
  static const int kSeqNumFieldNumber = 3;
  inline ::google::protobuf::uint32 seq_num() const;
  inline void set_seq_num(::google::protobuf::uint32 value);

  // optional uint32 reasons = 4;
  inline bool has_reasons() const;
  inline void clear_reasons();
  static const int kReasonsFieldNumber = 4;
  inline ::google::protobuf::uint32 reasons() const;
  inline void set_reasons(::google::protobuf::uint32 value);

  // optional uint32 matches_in_report = 5;
  inline bool has_matches_in_report() const;
  inline void clear_matches_in_report();
  static const int kMatchesInReportFieldNumber = 5;
  inline ::google::protobuf::uint32 matches_in_report() const;
  inline void set_matches_in_report(::google::protobuf::uint32 value);

  // optional uint32 matches_clean = 6;
  inline bool has_matches_clean() const;
  inline void clear_matches_clean();
  static const int kMatchesCleanFieldNumber = 6;
  inline ::google::protobuf::uint32 matches_clean() const;
  inline void set_matches_clean(::google::protobuf::uint32 value);

  // optional uint32 matches_reported = 7;
  inline bool has_matches_reported() const;
  inline void clear_matches_reported();
  static const int kMatchesReportedFieldNumber = 7;
  inline ::google::protobuf::uint32 matches_reported() const;
  inline void set_matches_reported(::google::protobuf::uint32 value);

  // optional uint32 matches_abandoned = 8;
  inline bool has_matches_abandoned() const;
  inline void clear_matches_abandoned();
  static const int kMatchesAbandonedFieldNumber = 8;
  inline ::google::protobuf::uint32 matches_abandoned() const;
  inline void set_matches_abandoned(::google::protobuf::uint32 value);

  // optional uint32 reports_count = 9;
  inline bool has_reports_count() const;
  inline void clear_reports_count();
  static const int kReportsCountFieldNumber = 9;
  inline ::google::protobuf::uint32 reports_count() const;
  inline void set_reports_count(::google::protobuf::uint32 value);

  // optional uint32 reports_parties = 10;
  inline bool has_reports_parties() const;
  inline void clear_reports_parties();
  static const int kReportsPartiesFieldNumber = 10;
  inline ::google::protobuf::uint32 reports_parties() const;
  inline void set_reports_parties(::google::protobuf::uint32 value);

  // optional uint32 commend_count = 11;
  inline bool has_commend_count() const;
  inline void clear_commend_count();
  static const int kCommendCountFieldNumber = 11;
  inline ::google::protobuf::uint32 commend_count() const;
  inline void set_commend_count(::google::protobuf::uint32 value);

  // optional uint32 end_score = 13;
  inline bool has_end_score() const;
  inline void clear_end_score();
  static const int kEndScoreFieldNumber = 13;
  inline ::google::protobuf::uint32 end_score() const;
  inline void set_end_score(::google::protobuf::uint32 value);

  // optional uint32 date = 14;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 14;
  inline ::google::protobuf::uint32 date() const;
  inline void set_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPlayerConductScorecard)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_seq_num();
  inline void clear_has_seq_num();
  inline void set_has_reasons();
  inline void clear_has_reasons();
  inline void set_has_matches_in_report();
  inline void clear_has_matches_in_report();
  inline void set_has_matches_clean();
  inline void clear_has_matches_clean();
  inline void set_has_matches_reported();
  inline void clear_has_matches_reported();
  inline void set_has_matches_abandoned();
  inline void clear_has_matches_abandoned();
  inline void set_has_reports_count();
  inline void clear_has_reports_count();
  inline void set_has_reports_parties();
  inline void clear_has_reports_parties();
  inline void set_has_commend_count();
  inline void clear_has_commend_count();
  inline void set_has_end_score();
  inline void clear_has_end_score();
  inline void set_has_date();
  inline void clear_has_date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 seq_num_;
  ::google::protobuf::uint32 reasons_;
  ::google::protobuf::uint32 matches_in_report_;
  ::google::protobuf::uint32 matches_clean_;
  ::google::protobuf::uint32 matches_reported_;
  ::google::protobuf::uint32 matches_abandoned_;
  ::google::protobuf::uint32 reports_count_;
  ::google::protobuf::uint32 reports_parties_;
  ::google::protobuf::uint32 commend_count_;
  ::google::protobuf::uint32 end_score_;
  ::google::protobuf::uint32 date_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPlayerConductScorecard* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCWageringRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCWageringRequest();
  virtual ~CMsgClientToGCWageringRequest();

  CMsgClientToGCWageringRequest(const CMsgClientToGCWageringRequest& from);

  inline CMsgClientToGCWageringRequest& operator=(const CMsgClientToGCWageringRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCWageringRequest& default_instance();

  void Swap(CMsgClientToGCWageringRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCWageringRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCWageringRequest& from);
  void MergeFrom(const CMsgClientToGCWageringRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCWageringRequest)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCWageringRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientWageringResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientWageringResponse();
  virtual ~CMsgGCToClientWageringResponse();

  CMsgGCToClientWageringResponse(const CMsgGCToClientWageringResponse& from);

  inline CMsgGCToClientWageringResponse& operator=(const CMsgGCToClientWageringResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientWageringResponse& default_instance();

  void Swap(CMsgGCToClientWageringResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientWageringResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientWageringResponse& from);
  void MergeFrom(const CMsgGCToClientWageringResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 coins_remaining = 1;
  inline bool has_coins_remaining() const;
  inline void clear_coins_remaining();
  static const int kCoinsRemainingFieldNumber = 1;
  inline ::google::protobuf::uint32 coins_remaining() const;
  inline void set_coins_remaining(::google::protobuf::uint32 value);

  // optional uint32 total_points_won = 2;
  inline bool has_total_points_won() const;
  inline void clear_total_points_won();
  static const int kTotalPointsWonFieldNumber = 2;
  inline ::google::protobuf::uint32 total_points_won() const;
  inline void set_total_points_won(::google::protobuf::uint32 value);

  // optional uint32 total_points_wagered = 3;
  inline bool has_total_points_wagered() const;
  inline void clear_total_points_wagered();
  static const int kTotalPointsWageredFieldNumber = 3;
  inline ::google::protobuf::uint32 total_points_wagered() const;
  inline void set_total_points_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_points_tipped = 4;
  inline bool has_total_points_tipped() const;
  inline void clear_total_points_tipped();
  static const int kTotalPointsTippedFieldNumber = 4;
  inline ::google::protobuf::uint32 total_points_tipped() const;
  inline void set_total_points_tipped(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 5;
  inline bool has_success_rate() const;
  inline void clear_success_rate();
  static const int kSuccessRateFieldNumber = 5;
  inline ::google::protobuf::uint32 success_rate() const;
  inline void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_games_wagered = 6;
  inline bool has_total_games_wagered() const;
  inline void clear_total_games_wagered();
  static const int kTotalGamesWageredFieldNumber = 6;
  inline ::google::protobuf::uint32 total_games_wagered() const;
  inline void set_total_games_wagered(::google::protobuf::uint32 value);

  // optional uint32 coins_max = 7;
  inline bool has_coins_max() const;
  inline void clear_coins_max();
  static const int kCoinsMaxFieldNumber = 7;
  inline ::google::protobuf::uint32 coins_max() const;
  inline void set_coins_max(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientWageringResponse)
 private:
  inline void set_has_coins_remaining();
  inline void clear_has_coins_remaining();
  inline void set_has_total_points_won();
  inline void clear_has_total_points_won();
  inline void set_has_total_points_wagered();
  inline void clear_has_total_points_wagered();
  inline void set_has_total_points_tipped();
  inline void clear_has_total_points_tipped();
  inline void set_has_success_rate();
  inline void clear_has_success_rate();
  inline void set_has_total_games_wagered();
  inline void clear_has_total_games_wagered();
  inline void set_has_coins_max();
  inline void clear_has_coins_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 coins_remaining_;
  ::google::protobuf::uint32 total_points_won_;
  ::google::protobuf::uint32 total_points_wagered_;
  ::google::protobuf::uint32 total_points_tipped_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_games_wagered_;
  ::google::protobuf::uint32 coins_max_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientWageringResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientWageringUpdate : public ::google::protobuf::Message {
 public:
  CMsgGCToClientWageringUpdate();
  virtual ~CMsgGCToClientWageringUpdate();

  CMsgGCToClientWageringUpdate(const CMsgGCToClientWageringUpdate& from);

  inline CMsgGCToClientWageringUpdate& operator=(const CMsgGCToClientWageringUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientWageringUpdate& default_instance();

  void Swap(CMsgGCToClientWageringUpdate* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientWageringUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientWageringUpdate& from);
  void MergeFrom(const CMsgGCToClientWageringUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional .CMsgGCToClientWageringResponse wagering_info = 2;
  inline bool has_wagering_info() const;
  inline void clear_wagering_info();
  static const int kWageringInfoFieldNumber = 2;
  inline const ::CMsgGCToClientWageringResponse& wagering_info() const;
  inline ::CMsgGCToClientWageringResponse* mutable_wagering_info();
  inline ::CMsgGCToClientWageringResponse* release_wagering_info();
  inline void set_allocated_wagering_info(::CMsgGCToClientWageringResponse* wagering_info);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientWageringUpdate)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_wagering_info();
  inline void clear_has_wagering_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgGCToClientWageringResponse* wagering_info_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientWageringUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientArcanaVotesUpdate : public ::google::protobuf::Message {
 public:
  CMsgGCToClientArcanaVotesUpdate();
  virtual ~CMsgGCToClientArcanaVotesUpdate();

  CMsgGCToClientArcanaVotesUpdate(const CMsgGCToClientArcanaVotesUpdate& from);

  inline CMsgGCToClientArcanaVotesUpdate& operator=(const CMsgGCToClientArcanaVotesUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientArcanaVotesUpdate& default_instance();

  void Swap(CMsgGCToClientArcanaVotesUpdate* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientArcanaVotesUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientArcanaVotesUpdate& from);
  void MergeFrom(const CMsgGCToClientArcanaVotesUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional .CMsgClientToGCRequestArcanaVotesRemainingResponse arcana_votes = 2;
  inline bool has_arcana_votes() const;
  inline void clear_arcana_votes();
  static const int kArcanaVotesFieldNumber = 2;
  inline const ::CMsgClientToGCRequestArcanaVotesRemainingResponse& arcana_votes() const;
  inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse* mutable_arcana_votes();
  inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse* release_arcana_votes();
  inline void set_allocated_arcana_votes(::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientArcanaVotesUpdate)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_arcana_votes();
  inline void clear_has_arcana_votes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientArcanaVotesUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCMysteryItem : public ::google::protobuf::Message {
 public:
  CMsgClientToGCMysteryItem();
  virtual ~CMsgClientToGCMysteryItem();

  CMsgClientToGCMysteryItem(const CMsgClientToGCMysteryItem& from);

  inline CMsgClientToGCMysteryItem& operator=(const CMsgClientToGCMysteryItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCMysteryItem& default_instance();

  void Swap(CMsgClientToGCMysteryItem* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCMysteryItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCMysteryItem& from);
  void MergeFrom(const CMsgClientToGCMysteryItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 action_id = 2;
  inline bool has_action_id() const;
  inline void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 action_id() const;
  inline void set_action_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCMysteryItem)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_action_id();
  inline void clear_has_action_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 action_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCMysteryItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientMysteryItemResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientMysteryItemResponse();
  virtual ~CMsgGCToClientMysteryItemResponse();

  CMsgGCToClientMysteryItemResponse(const CMsgGCToClientMysteryItemResponse& from);

  inline CMsgGCToClientMysteryItemResponse& operator=(const CMsgGCToClientMysteryItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientMysteryItemResponse& default_instance();

  void Swap(CMsgGCToClientMysteryItemResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientMysteryItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientMysteryItemResponse& from);
  void MergeFrom(const CMsgGCToClientMysteryItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientMysteryItemResponse_Result Result;
  static const Result SUCCESS = CMsgGCToClientMysteryItemResponse_Result_SUCCESS;
  static const Result FAILURE_SDO_LOAD = CMsgGCToClientMysteryItemResponse_Result_FAILURE_SDO_LOAD;
  static const Result FAILURE_NO_ACTIONS = CMsgGCToClientMysteryItemResponse_Result_FAILURE_NO_ACTIONS;
  static const Result FAILURE_NO_LOOTLIST = CMsgGCToClientMysteryItemResponse_Result_FAILURE_NO_LOOTLIST;
  static const Result FAILURE_EMPTY_LOOTLIST = CMsgGCToClientMysteryItemResponse_Result_FAILURE_EMPTY_LOOTLIST;
  static const Result FAILURE_NO_ITEM_GENERATED = CMsgGCToClientMysteryItemResponse_Result_FAILURE_NO_ITEM_GENERATED;
  static const Result FAILURE_SQL_COMMIT = CMsgGCToClientMysteryItemResponse_Result_FAILURE_SQL_COMMIT;
  static const Result FAILURE_EVENT_NOT_OWNED = CMsgGCToClientMysteryItemResponse_Result_FAILURE_EVENT_NOT_OWNED;
  static const Result FAILURE_INVALID_ACTION = CMsgGCToClientMysteryItemResponse_Result_FAILURE_INVALID_ACTION;
  static const Result FAILURE_ALREADY_GRANTED = CMsgGCToClientMysteryItemResponse_Result_FAILURE_ALREADY_GRANTED;
  static inline bool Result_IsValid(int value) {
    return CMsgGCToClientMysteryItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgGCToClientMysteryItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgGCToClientMysteryItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgGCToClientMysteryItemResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgGCToClientMysteryItemResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgGCToClientMysteryItemResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgGCToClientMysteryItemResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGCToClientMysteryItemResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgGCToClientMysteryItemResponse_Result result() const;
  inline void set_result(::CMsgGCToClientMysteryItemResponse_Result value);

  // optional uint32 reward_type = 2;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_type() const;
  inline void set_reward_type(::google::protobuf::uint32 value);

  // optional uint32 itemdef = 3;
  inline bool has_itemdef() const;
  inline void clear_itemdef();
  static const int kItemdefFieldNumber = 3;
  inline ::google::protobuf::uint32 itemdef() const;
  inline void set_itemdef(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientMysteryItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  inline void set_has_itemdef();
  inline void clear_has_itemdef();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  ::google::protobuf::uint32 reward_type_;
  ::google::protobuf::uint32 itemdef_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientMysteryItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetEventGoals : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetEventGoals();
  virtual ~CMsgClientToGCGetEventGoals();

  CMsgClientToGCGetEventGoals(const CMsgClientToGCGetEventGoals& from);

  inline CMsgClientToGCGetEventGoals& operator=(const CMsgClientToGCGetEventGoals& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetEventGoals& default_instance();

  void Swap(CMsgClientToGCGetEventGoals* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetEventGoals* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetEventGoals& from);
  void MergeFrom(const CMsgClientToGCGetEventGoals& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EEvent event_ids = 1;
  inline int event_ids_size() const;
  inline void clear_event_ids();
  static const int kEventIdsFieldNumber = 1;
  inline ::EEvent event_ids(int index) const;
  inline void set_event_ids(int index, ::EEvent value);
  inline void add_event_ids(::EEvent value);
  inline const ::google::protobuf::RepeatedField<int>& event_ids() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_event_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetEventGoals)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> event_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetEventGoals* default_instance_;
};
// -------------------------------------------------------------------

class CMsgEventGoals_EventGoal : public ::google::protobuf::Message {
 public:
  CMsgEventGoals_EventGoal();
  virtual ~CMsgEventGoals_EventGoal();

  CMsgEventGoals_EventGoal(const CMsgEventGoals_EventGoal& from);

  inline CMsgEventGoals_EventGoal& operator=(const CMsgEventGoals_EventGoal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEventGoals_EventGoal& default_instance();

  void Swap(CMsgEventGoals_EventGoal* other);

  // implements Message ----------------------------------------------

  CMsgEventGoals_EventGoal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgEventGoals_EventGoal& from);
  void MergeFrom(const CMsgEventGoals_EventGoal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::EEvent event_id() const;
  inline void set_event_id(::EEvent value);

  // optional uint32 goal_id = 2;
  inline bool has_goal_id() const;
  inline void clear_goal_id();
  static const int kGoalIdFieldNumber = 2;
  inline ::google::protobuf::uint32 goal_id() const;
  inline void set_goal_id(::google::protobuf::uint32 value);

  // optional uint64 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgEventGoals.EventGoal)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_goal_id();
  inline void clear_has_goal_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 goal_id_;
  ::google::protobuf::uint64 value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgEventGoals_EventGoal* default_instance_;
};
// -------------------------------------------------------------------

class CMsgEventGoals : public ::google::protobuf::Message {
 public:
  CMsgEventGoals();
  virtual ~CMsgEventGoals();

  CMsgEventGoals(const CMsgEventGoals& from);

  inline CMsgEventGoals& operator=(const CMsgEventGoals& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEventGoals& default_instance();

  void Swap(CMsgEventGoals* other);

  // implements Message ----------------------------------------------

  CMsgEventGoals* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgEventGoals& from);
  void MergeFrom(const CMsgEventGoals& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgEventGoals_EventGoal EventGoal;

  // accessors -------------------------------------------------------

  // repeated .CMsgEventGoals.EventGoal event_goals = 1;
  inline int event_goals_size() const;
  inline void clear_event_goals();
  static const int kEventGoalsFieldNumber = 1;
  inline const ::CMsgEventGoals_EventGoal& event_goals(int index) const;
  inline ::CMsgEventGoals_EventGoal* mutable_event_goals(int index);
  inline ::CMsgEventGoals_EventGoal* add_event_goals();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgEventGoals_EventGoal >&
      event_goals() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgEventGoals_EventGoal >*
      mutable_event_goals();

  // @@protoc_insertion_point(class_scope:CMsgEventGoals)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgEventGoals_EventGoal > event_goals_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgEventGoals* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToGCLeaguePredictions : public ::google::protobuf::Message {
 public:
  CMsgGCToGCLeaguePredictions();
  virtual ~CMsgGCToGCLeaguePredictions();

  CMsgGCToGCLeaguePredictions(const CMsgGCToGCLeaguePredictions& from);

  inline CMsgGCToGCLeaguePredictions& operator=(const CMsgGCToGCLeaguePredictions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCLeaguePredictions& default_instance();

  void Swap(CMsgGCToGCLeaguePredictions* other);

  // implements Message ----------------------------------------------

  CMsgGCToGCLeaguePredictions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToGCLeaguePredictions& from);
  void MergeFrom(const CMsgGCToGCLeaguePredictions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToGCLeaguePredictions)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToGCLeaguePredictions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings_PredictionLine : public ::google::protobuf::Message {
 public:
  CMsgPredictionRankings_PredictionLine();
  virtual ~CMsgPredictionRankings_PredictionLine();

  CMsgPredictionRankings_PredictionLine(const CMsgPredictionRankings_PredictionLine& from);

  inline CMsgPredictionRankings_PredictionLine& operator=(const CMsgPredictionRankings_PredictionLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionRankings_PredictionLine& default_instance();

  void Swap(CMsgPredictionRankings_PredictionLine* other);

  // implements Message ----------------------------------------------

  CMsgPredictionRankings_PredictionLine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPredictionRankings_PredictionLine& from);
  void MergeFrom(const CMsgPredictionRankings_PredictionLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 answer_id = 1;
  inline bool has_answer_id() const;
  inline void clear_answer_id();
  static const int kAnswerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 answer_id() const;
  inline void set_answer_id(::google::protobuf::uint32 value);

  // optional string answer_name = 2;
  inline bool has_answer_name() const;
  inline void clear_answer_name();
  static const int kAnswerNameFieldNumber = 2;
  inline const ::std::string& answer_name() const;
  inline void set_answer_name(const ::std::string& value);
  inline void set_answer_name(const char* value);
  inline void set_answer_name(const char* value, size_t size);
  inline ::std::string* mutable_answer_name();
  inline ::std::string* release_answer_name();
  inline void set_allocated_answer_name(::std::string* answer_name);

  // optional uint64 answer_logo = 3;
  inline bool has_answer_logo() const;
  inline void clear_answer_logo();
  static const int kAnswerLogoFieldNumber = 3;
  inline ::google::protobuf::uint64 answer_logo() const;
  inline void set_answer_logo(::google::protobuf::uint64 value);

  // optional float answer_value = 4;
  inline bool has_answer_value() const;
  inline void clear_answer_value();
  static const int kAnswerValueFieldNumber = 4;
  inline float answer_value() const;
  inline void set_answer_value(float value);

  // @@protoc_insertion_point(class_scope:CMsgPredictionRankings.PredictionLine)
 private:
  inline void set_has_answer_id();
  inline void clear_has_answer_id();
  inline void set_has_answer_name();
  inline void clear_has_answer_name();
  inline void set_has_answer_logo();
  inline void clear_has_answer_logo();
  inline void set_has_answer_value();
  inline void clear_has_answer_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* answer_name_;
  ::google::protobuf::uint32 answer_id_;
  float answer_value_;
  ::google::protobuf::uint64 answer_logo_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPredictionRankings_PredictionLine* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings_Prediction : public ::google::protobuf::Message {
 public:
  CMsgPredictionRankings_Prediction();
  virtual ~CMsgPredictionRankings_Prediction();

  CMsgPredictionRankings_Prediction(const CMsgPredictionRankings_Prediction& from);

  inline CMsgPredictionRankings_Prediction& operator=(const CMsgPredictionRankings_Prediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionRankings_Prediction& default_instance();

  void Swap(CMsgPredictionRankings_Prediction* other);

  // implements Message ----------------------------------------------

  CMsgPredictionRankings_Prediction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPredictionRankings_Prediction& from);
  void MergeFrom(const CMsgPredictionRankings_Prediction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 selection_id = 1;
  inline bool has_selection_id() const;
  inline void clear_selection_id();
  static const int kSelectionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 selection_id() const;
  inline void set_selection_id(::google::protobuf::uint32 value);

  // repeated .CMsgPredictionRankings.PredictionLine prediction_lines = 2;
  inline int prediction_lines_size() const;
  inline void clear_prediction_lines();
  static const int kPredictionLinesFieldNumber = 2;
  inline const ::CMsgPredictionRankings_PredictionLine& prediction_lines(int index) const;
  inline ::CMsgPredictionRankings_PredictionLine* mutable_prediction_lines(int index);
  inline ::CMsgPredictionRankings_PredictionLine* add_prediction_lines();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_PredictionLine >&
      prediction_lines() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_PredictionLine >*
      mutable_prediction_lines();

  // @@protoc_insertion_point(class_scope:CMsgPredictionRankings.Prediction)
 private:
  inline void set_has_selection_id();
  inline void clear_has_selection_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_PredictionLine > prediction_lines_;
  ::google::protobuf::uint32 selection_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPredictionRankings_Prediction* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings : public ::google::protobuf::Message {
 public:
  CMsgPredictionRankings();
  virtual ~CMsgPredictionRankings();

  CMsgPredictionRankings(const CMsgPredictionRankings& from);

  inline CMsgPredictionRankings& operator=(const CMsgPredictionRankings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionRankings& default_instance();

  void Swap(CMsgPredictionRankings* other);

  // implements Message ----------------------------------------------

  CMsgPredictionRankings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPredictionRankings& from);
  void MergeFrom(const CMsgPredictionRankings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPredictionRankings_PredictionLine PredictionLine;
  typedef CMsgPredictionRankings_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .CMsgPredictionRankings.Prediction predictions = 1;
  inline int predictions_size() const;
  inline void clear_predictions();
  static const int kPredictionsFieldNumber = 1;
  inline const ::CMsgPredictionRankings_Prediction& predictions(int index) const;
  inline ::CMsgPredictionRankings_Prediction* mutable_predictions(int index);
  inline ::CMsgPredictionRankings_Prediction* add_predictions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_Prediction >&
      predictions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_Prediction >*
      mutable_predictions();

  // @@protoc_insertion_point(class_scope:CMsgPredictionRankings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_Prediction > predictions_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPredictionRankings* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPredictionResults_ResultBreakdown : public ::google::protobuf::Message {
 public:
  CMsgPredictionResults_ResultBreakdown();
  virtual ~CMsgPredictionResults_ResultBreakdown();

  CMsgPredictionResults_ResultBreakdown(const CMsgPredictionResults_ResultBreakdown& from);

  inline CMsgPredictionResults_ResultBreakdown& operator=(const CMsgPredictionResults_ResultBreakdown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionResults_ResultBreakdown& default_instance();

  void Swap(CMsgPredictionResults_ResultBreakdown* other);

  // implements Message ----------------------------------------------

  CMsgPredictionResults_ResultBreakdown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPredictionResults_ResultBreakdown& from);
  void MergeFrom(const CMsgPredictionResults_ResultBreakdown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 answer_selection = 2;
  inline bool has_answer_selection() const;
  inline void clear_answer_selection();
  static const int kAnswerSelectionFieldNumber = 2;
  inline ::google::protobuf::uint32 answer_selection() const;
  inline void set_answer_selection(::google::protobuf::uint32 value);

  // optional float answer_value = 3;
  inline bool has_answer_value() const;
  inline void clear_answer_value();
  static const int kAnswerValueFieldNumber = 3;
  inline float answer_value() const;
  inline void set_answer_value(float value);

  // @@protoc_insertion_point(class_scope:CMsgPredictionResults.ResultBreakdown)
 private:
  inline void set_has_answer_selection();
  inline void clear_has_answer_selection();
  inline void set_has_answer_value();
  inline void clear_has_answer_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 answer_selection_;
  float answer_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPredictionResults_ResultBreakdown* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPredictionResults_Result : public ::google::protobuf::Message {
 public:
  CMsgPredictionResults_Result();
  virtual ~CMsgPredictionResults_Result();

  CMsgPredictionResults_Result(const CMsgPredictionResults_Result& from);

  inline CMsgPredictionResults_Result& operator=(const CMsgPredictionResults_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionResults_Result& default_instance();

  void Swap(CMsgPredictionResults_Result* other);

  // implements Message ----------------------------------------------

  CMsgPredictionResults_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPredictionResults_Result& from);
  void MergeFrom(const CMsgPredictionResults_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 selection_id = 1;
  inline bool has_selection_id() const;
  inline void clear_selection_id();
  static const int kSelectionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 selection_id() const;
  inline void set_selection_id(::google::protobuf::uint32 value);

  // repeated .CMsgPredictionResults.ResultBreakdown result_breakdown = 2;
  inline int result_breakdown_size() const;
  inline void clear_result_breakdown();
  static const int kResultBreakdownFieldNumber = 2;
  inline const ::CMsgPredictionResults_ResultBreakdown& result_breakdown(int index) const;
  inline ::CMsgPredictionResults_ResultBreakdown* mutable_result_breakdown(int index);
  inline ::CMsgPredictionResults_ResultBreakdown* add_result_breakdown();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_ResultBreakdown >&
      result_breakdown() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_ResultBreakdown >*
      mutable_result_breakdown();

  // @@protoc_insertion_point(class_scope:CMsgPredictionResults.Result)
 private:
  inline void set_has_selection_id();
  inline void clear_has_selection_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_ResultBreakdown > result_breakdown_;
  ::google::protobuf::uint32 selection_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPredictionResults_Result* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPredictionResults : public ::google::protobuf::Message {
 public:
  CMsgPredictionResults();
  virtual ~CMsgPredictionResults();

  CMsgPredictionResults(const CMsgPredictionResults& from);

  inline CMsgPredictionResults& operator=(const CMsgPredictionResults& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionResults& default_instance();

  void Swap(CMsgPredictionResults* other);

  // implements Message ----------------------------------------------

  CMsgPredictionResults* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPredictionResults& from);
  void MergeFrom(const CMsgPredictionResults& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPredictionResults_ResultBreakdown ResultBreakdown;
  typedef CMsgPredictionResults_Result Result;

  // accessors -------------------------------------------------------

  // repeated .CMsgPredictionResults.Result results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline const ::CMsgPredictionResults_Result& results(int index) const;
  inline ::CMsgPredictionResults_Result* mutable_results(int index);
  inline ::CMsgPredictionResults_Result* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_Result >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_Result >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:CMsgPredictionResults)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_Result > results_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPredictionResults* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSuspiciousActivity : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSuspiciousActivity();
  virtual ~CMsgClientToGCSuspiciousActivity();

  CMsgClientToGCSuspiciousActivity(const CMsgClientToGCSuspiciousActivity& from);

  inline CMsgClientToGCSuspiciousActivity& operator=(const CMsgClientToGCSuspiciousActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSuspiciousActivity& default_instance();

  void Swap(CMsgClientToGCSuspiciousActivity* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSuspiciousActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSuspiciousActivity& from);
  void MergeFrom(const CMsgClientToGCSuspiciousActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 app_data = 1;
  inline bool has_app_data() const;
  inline void clear_app_data();
  static const int kAppDataFieldNumber = 1;
  inline ::google::protobuf::uint64 app_data() const;
  inline void set_app_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSuspiciousActivity)
 private:
  inline void set_has_app_data();
  inline void clear_has_app_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 app_data_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSuspiciousActivity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCHasPlayerVotedForMVP : public ::google::protobuf::Message {
 public:
  CMsgClientToGCHasPlayerVotedForMVP();
  virtual ~CMsgClientToGCHasPlayerVotedForMVP();

  CMsgClientToGCHasPlayerVotedForMVP(const CMsgClientToGCHasPlayerVotedForMVP& from);

  inline CMsgClientToGCHasPlayerVotedForMVP& operator=(const CMsgClientToGCHasPlayerVotedForMVP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCHasPlayerVotedForMVP& default_instance();

  void Swap(CMsgClientToGCHasPlayerVotedForMVP* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCHasPlayerVotedForMVP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCHasPlayerVotedForMVP& from);
  void MergeFrom(const CMsgClientToGCHasPlayerVotedForMVP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCHasPlayerVotedForMVP)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCHasPlayerVotedForMVP* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCHasPlayerVotedForMVPResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCHasPlayerVotedForMVPResponse();
  virtual ~CMsgClientToGCHasPlayerVotedForMVPResponse();

  CMsgClientToGCHasPlayerVotedForMVPResponse(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);

  inline CMsgClientToGCHasPlayerVotedForMVPResponse& operator=(const CMsgClientToGCHasPlayerVotedForMVPResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCHasPlayerVotedForMVPResponse& default_instance();

  void Swap(CMsgClientToGCHasPlayerVotedForMVPResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCHasPlayerVotedForMVPResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);
  void MergeFrom(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCHasPlayerVotedForMVPResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCHasPlayerVotedForMVPResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForMVP : public ::google::protobuf::Message {
 public:
  CMsgClientToGCVoteForMVP();
  virtual ~CMsgClientToGCVoteForMVP();

  CMsgClientToGCVoteForMVP(const CMsgClientToGCVoteForMVP& from);

  inline CMsgClientToGCVoteForMVP& operator=(const CMsgClientToGCVoteForMVP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForMVP& default_instance();

  void Swap(CMsgClientToGCVoteForMVP* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCVoteForMVP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCVoteForMVP& from);
  void MergeFrom(const CMsgClientToGCVoteForMVP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 3;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCVoteForMVP)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCVoteForMVP* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForMVPResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCVoteForMVPResponse();
  virtual ~CMsgClientToGCVoteForMVPResponse();

  CMsgClientToGCVoteForMVPResponse(const CMsgClientToGCVoteForMVPResponse& from);

  inline CMsgClientToGCVoteForMVPResponse& operator=(const CMsgClientToGCVoteForMVPResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForMVPResponse& default_instance();

  void Swap(CMsgClientToGCVoteForMVPResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCVoteForMVPResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCVoteForMVPResponse& from);
  void MergeFrom(const CMsgClientToGCVoteForMVPResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCVoteForMVPResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCVoteForMVPResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMVPVotesForMatch_Player : public ::google::protobuf::Message {
 public:
  CMsgMVPVotesForMatch_Player();
  virtual ~CMsgMVPVotesForMatch_Player();

  CMsgMVPVotesForMatch_Player(const CMsgMVPVotesForMatch_Player& from);

  inline CMsgMVPVotesForMatch_Player& operator=(const CMsgMVPVotesForMatch_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMVPVotesForMatch_Player& default_instance();

  void Swap(CMsgMVPVotesForMatch_Player* other);

  // implements Message ----------------------------------------------

  CMsgMVPVotesForMatch_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMVPVotesForMatch_Player& from);
  void MergeFrom(const CMsgMVPVotesForMatch_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 2;
  inline bool has_vote_count() const;
  inline void clear_vote_count();
  static const int kVoteCountFieldNumber = 2;
  inline ::google::protobuf::uint32 vote_count() const;
  inline void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMVPVotesForMatch.Player)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_vote_count();
  inline void clear_has_vote_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 vote_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgMVPVotesForMatch_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMVPVotesForMatch : public ::google::protobuf::Message {
 public:
  CMsgMVPVotesForMatch();
  virtual ~CMsgMVPVotesForMatch();

  CMsgMVPVotesForMatch(const CMsgMVPVotesForMatch& from);

  inline CMsgMVPVotesForMatch& operator=(const CMsgMVPVotesForMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMVPVotesForMatch& default_instance();

  void Swap(CMsgMVPVotesForMatch* other);

  // implements Message ----------------------------------------------

  CMsgMVPVotesForMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMVPVotesForMatch& from);
  void MergeFrom(const CMsgMVPVotesForMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgMVPVotesForMatch_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgMVPVotesForMatch.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CMsgMVPVotesForMatch_Player& players(int index) const;
  inline ::CMsgMVPVotesForMatch_Player* mutable_players(int index);
  inline ::CMsgMVPVotesForMatch_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMVPVotesForMatch_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMVPVotesForMatch_Player >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:CMsgMVPVotesForMatch)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMVPVotesForMatch_Player > players_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgMVPVotesForMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaguePrizePool : public ::google::protobuf::Message {
 public:
  CMsgLeaguePrizePool();
  virtual ~CMsgLeaguePrizePool();

  CMsgLeaguePrizePool(const CMsgLeaguePrizePool& from);

  inline CMsgLeaguePrizePool& operator=(const CMsgLeaguePrizePool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaguePrizePool& default_instance();

  void Swap(CMsgLeaguePrizePool* other);

  // implements Message ----------------------------------------------

  CMsgLeaguePrizePool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaguePrizePool& from);
  void MergeFrom(const CMsgLeaguePrizePool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_pool = 1;
  inline bool has_prize_pool() const;
  inline void clear_prize_pool();
  static const int kPrizePoolFieldNumber = 1;
  inline ::google::protobuf::uint32 prize_pool() const;
  inline void set_prize_pool(::google::protobuf::uint32 value);

  // optional float increment_per_second = 2;
  inline bool has_increment_per_second() const;
  inline void clear_increment_per_second();
  static const int kIncrementPerSecondFieldNumber = 2;
  inline float increment_per_second() const;
  inline void set_increment_per_second(float value);

  // @@protoc_insertion_point(class_scope:CMsgLeaguePrizePool)
 private:
  inline void set_has_prize_pool();
  inline void clear_has_prize_pool();
  inline void set_has_increment_per_second();
  inline void clear_has_increment_per_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prize_pool_;
  float increment_per_second_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaguePrizePool* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTeammateStatsRequest();
  virtual ~CMsgClientToGCTeammateStatsRequest();

  CMsgClientToGCTeammateStatsRequest(const CMsgClientToGCTeammateStatsRequest& from);

  inline CMsgClientToGCTeammateStatsRequest& operator=(const CMsgClientToGCTeammateStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTeammateStatsRequest& default_instance();

  void Swap(CMsgClientToGCTeammateStatsRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTeammateStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTeammateStatsRequest& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTeammateStatsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTeammateStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsResponse_TeammateStat : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTeammateStatsResponse_TeammateStat();
  virtual ~CMsgClientToGCTeammateStatsResponse_TeammateStat();

  CMsgClientToGCTeammateStatsResponse_TeammateStat(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);

  inline CMsgClientToGCTeammateStatsResponse_TeammateStat& operator=(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTeammateStatsResponse_TeammateStat& default_instance();

  void Swap(CMsgClientToGCTeammateStatsResponse_TeammateStat* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTeammateStatsResponse_TeammateStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 games = 2;
  inline bool has_games() const;
  inline void clear_games();
  static const int kGamesFieldNumber = 2;
  inline ::google::protobuf::uint32 games() const;
  inline void set_games(::google::protobuf::uint32 value);

  // optional uint32 wins = 3;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 3;
  inline ::google::protobuf::uint32 wins() const;
  inline void set_wins(::google::protobuf::uint32 value);

  // optional uint32 most_recent_game_timestamp = 4;
  inline bool has_most_recent_game_timestamp() const;
  inline void clear_most_recent_game_timestamp();
  static const int kMostRecentGameTimestampFieldNumber = 4;
  inline ::google::protobuf::uint32 most_recent_game_timestamp() const;
  inline void set_most_recent_game_timestamp(::google::protobuf::uint32 value);

  // optional uint64 most_recent_game_match_id = 5;
  inline bool has_most_recent_game_match_id() const;
  inline void clear_most_recent_game_match_id();
  static const int kMostRecentGameMatchIdFieldNumber = 5;
  inline ::google::protobuf::uint64 most_recent_game_match_id() const;
  inline void set_most_recent_game_match_id(::google::protobuf::uint64 value);

  // optional float performance = 100;
  inline bool has_performance() const;
  inline void clear_performance();
  static const int kPerformanceFieldNumber = 100;
  inline float performance() const;
  inline void set_performance(float value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTeammateStatsResponse.TeammateStat)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_games();
  inline void clear_has_games();
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_most_recent_game_timestamp();
  inline void clear_has_most_recent_game_timestamp();
  inline void set_has_most_recent_game_match_id();
  inline void clear_has_most_recent_game_match_id();
  inline void set_has_performance();
  inline void clear_has_performance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 games_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 most_recent_game_timestamp_;
  ::google::protobuf::uint64 most_recent_game_match_id_;
  float performance_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTeammateStatsResponse_TeammateStat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTeammateStatsResponse();
  virtual ~CMsgClientToGCTeammateStatsResponse();

  CMsgClientToGCTeammateStatsResponse(const CMsgClientToGCTeammateStatsResponse& from);

  inline CMsgClientToGCTeammateStatsResponse& operator=(const CMsgClientToGCTeammateStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTeammateStatsResponse& default_instance();

  void Swap(CMsgClientToGCTeammateStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTeammateStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTeammateStatsResponse& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCTeammateStatsResponse_TeammateStat TeammateStat;

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // repeated .CMsgClientToGCTeammateStatsResponse.TeammateStat teammate_stats = 2;
  inline int teammate_stats_size() const;
  inline void clear_teammate_stats();
  static const int kTeammateStatsFieldNumber = 2;
  inline const ::CMsgClientToGCTeammateStatsResponse_TeammateStat& teammate_stats(int index) const;
  inline ::CMsgClientToGCTeammateStatsResponse_TeammateStat* mutable_teammate_stats(int index);
  inline ::CMsgClientToGCTeammateStatsResponse_TeammateStat* add_teammate_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCTeammateStatsResponse_TeammateStat >&
      teammate_stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCTeammateStatsResponse_TeammateStat >*
      mutable_teammate_stats();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTeammateStatsResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCTeammateStatsResponse_TeammateStat > teammate_stats_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTeammateStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcana_MatchVote : public ::google::protobuf::Message {
 public:
  CMsgClientToGCVoteForArcana_MatchVote();
  virtual ~CMsgClientToGCVoteForArcana_MatchVote();

  CMsgClientToGCVoteForArcana_MatchVote(const CMsgClientToGCVoteForArcana_MatchVote& from);

  inline CMsgClientToGCVoteForArcana_MatchVote& operator=(const CMsgClientToGCVoteForArcana_MatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForArcana_MatchVote& default_instance();

  void Swap(CMsgClientToGCVoteForArcana_MatchVote* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCVoteForArcana_MatchVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCVoteForArcana_MatchVote& from);
  void MergeFrom(const CMsgClientToGCVoteForArcana_MatchVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 3;
  inline bool has_vote_count() const;
  inline void clear_vote_count();
  static const int kVoteCountFieldNumber = 3;
  inline ::google::protobuf::uint32 vote_count() const;
  inline void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCVoteForArcana.MatchVote)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_vote_count();
  inline void clear_has_vote_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 vote_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCVoteForArcana_MatchVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcana : public ::google::protobuf::Message {
 public:
  CMsgClientToGCVoteForArcana();
  virtual ~CMsgClientToGCVoteForArcana();

  CMsgClientToGCVoteForArcana(const CMsgClientToGCVoteForArcana& from);

  inline CMsgClientToGCVoteForArcana& operator=(const CMsgClientToGCVoteForArcana& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForArcana& default_instance();

  void Swap(CMsgClientToGCVoteForArcana* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCVoteForArcana* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCVoteForArcana& from);
  void MergeFrom(const CMsgClientToGCVoteForArcana& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCVoteForArcana_MatchVote MatchVote;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientToGCVoteForArcana.MatchVote matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgClientToGCVoteForArcana_MatchVote& matches(int index) const;
  inline ::CMsgClientToGCVoteForArcana_MatchVote* mutable_matches(int index);
  inline ::CMsgClientToGCVoteForArcana_MatchVote* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCVoteForArcana_MatchVote >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCVoteForArcana_MatchVote >*
      mutable_matches();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCVoteForArcana)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCVoteForArcana_MatchVote > matches_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCVoteForArcana* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcanaResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCVoteForArcanaResponse();
  virtual ~CMsgClientToGCVoteForArcanaResponse();

  CMsgClientToGCVoteForArcanaResponse(const CMsgClientToGCVoteForArcanaResponse& from);

  inline CMsgClientToGCVoteForArcanaResponse& operator=(const CMsgClientToGCVoteForArcanaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForArcanaResponse& default_instance();

  void Swap(CMsgClientToGCVoteForArcanaResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCVoteForArcanaResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCVoteForArcanaResponse& from);
  void MergeFrom(const CMsgClientToGCVoteForArcanaResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCVoteForArcanaResponse_Result Result;
  static const Result SUCCEEDED = CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED;
  static const Result VOTING_NOT_ENABLED_FOR_ROUND = CMsgClientToGCVoteForArcanaResponse_Result_VOTING_NOT_ENABLED_FOR_ROUND;
  static const Result UNKNOWN_FAILURE = CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgClientToGCVoteForArcanaResponse.Result result = 1 [default = SUCCEEDED];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgClientToGCVoteForArcanaResponse_Result result() const;
  inline void set_result(::CMsgClientToGCVoteForArcanaResponse_Result value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCVoteForArcanaResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCVoteForArcanaResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgArcanaVotes_Match : public ::google::protobuf::Message {
 public:
  CMsgArcanaVotes_Match();
  virtual ~CMsgArcanaVotes_Match();

  CMsgArcanaVotes_Match(const CMsgArcanaVotes_Match& from);

  inline CMsgArcanaVotes_Match& operator=(const CMsgArcanaVotes_Match& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgArcanaVotes_Match& default_instance();

  void Swap(CMsgArcanaVotes_Match* other);

  // implements Message ----------------------------------------------

  CMsgArcanaVotes_Match* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgArcanaVotes_Match& from);
  void MergeFrom(const CMsgArcanaVotes_Match& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint32 match_id() const;
  inline void set_match_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id_0 = 2;
  inline bool has_hero_id_0() const;
  inline void clear_hero_id_0();
  static const int kHeroId0FieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id_0() const;
  inline void set_hero_id_0(::google::protobuf::uint32 value);

  // optional uint32 hero_id_1 = 3;
  inline bool has_hero_id_1() const;
  inline void clear_hero_id_1();
  static const int kHeroId1FieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id_1() const;
  inline void set_hero_id_1(::google::protobuf::uint32 value);

  // optional uint32 hero_seeding_0 = 4;
  inline bool has_hero_seeding_0() const;
  inline void clear_hero_seeding_0();
  static const int kHeroSeeding0FieldNumber = 4;
  inline ::google::protobuf::uint32 hero_seeding_0() const;
  inline void set_hero_seeding_0(::google::protobuf::uint32 value);

  // optional uint32 hero_seeding_1 = 5;
  inline bool has_hero_seeding_1() const;
  inline void clear_hero_seeding_1();
  static const int kHeroSeeding1FieldNumber = 5;
  inline ::google::protobuf::uint32 hero_seeding_1() const;
  inline void set_hero_seeding_1(::google::protobuf::uint32 value);

  // optional uint32 vote_count_0 = 6;
  inline bool has_vote_count_0() const;
  inline void clear_vote_count_0();
  static const int kVoteCount0FieldNumber = 6;
  inline ::google::protobuf::uint32 vote_count_0() const;
  inline void set_vote_count_0(::google::protobuf::uint32 value);

  // optional uint32 vote_count_1 = 7;
  inline bool has_vote_count_1() const;
  inline void clear_vote_count_1();
  static const int kVoteCount1FieldNumber = 7;
  inline ::google::protobuf::uint32 vote_count_1() const;
  inline void set_vote_count_1(::google::protobuf::uint32 value);

  // optional uint32 voting_state = 8;
  inline bool has_voting_state() const;
  inline void clear_voting_state();
  static const int kVotingStateFieldNumber = 8;
  inline ::google::protobuf::uint32 voting_state() const;
  inline void set_voting_state(::google::protobuf::uint32 value);

  // optional uint32 round_number = 9;
  inline bool has_round_number() const;
  inline void clear_round_number();
  static const int kRoundNumberFieldNumber = 9;
  inline ::google::protobuf::uint32 round_number() const;
  inline void set_round_number(::google::protobuf::uint32 value);

  // optional bool is_votes_hidden = 10;
  inline bool has_is_votes_hidden() const;
  inline void clear_is_votes_hidden();
  static const int kIsVotesHiddenFieldNumber = 10;
  inline bool is_votes_hidden() const;
  inline void set_is_votes_hidden(bool value);

  // optional uint32 calibration_time_remaining = 11;
  inline bool has_calibration_time_remaining() const;
  inline void clear_calibration_time_remaining();
  static const int kCalibrationTimeRemainingFieldNumber = 11;
  inline ::google::protobuf::uint32 calibration_time_remaining() const;
  inline void set_calibration_time_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgArcanaVotes.Match)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_hero_id_0();
  inline void clear_has_hero_id_0();
  inline void set_has_hero_id_1();
  inline void clear_has_hero_id_1();
  inline void set_has_hero_seeding_0();
  inline void clear_has_hero_seeding_0();
  inline void set_has_hero_seeding_1();
  inline void clear_has_hero_seeding_1();
  inline void set_has_vote_count_0();
  inline void clear_has_vote_count_0();
  inline void set_has_vote_count_1();
  inline void clear_has_vote_count_1();
  inline void set_has_voting_state();
  inline void clear_has_voting_state();
  inline void set_has_round_number();
  inline void clear_has_round_number();
  inline void set_has_is_votes_hidden();
  inline void clear_has_is_votes_hidden();
  inline void set_has_calibration_time_remaining();
  inline void clear_has_calibration_time_remaining();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 hero_id_0_;
  ::google::protobuf::uint32 hero_id_1_;
  ::google::protobuf::uint32 hero_seeding_0_;
  ::google::protobuf::uint32 hero_seeding_1_;
  ::google::protobuf::uint32 vote_count_0_;
  ::google::protobuf::uint32 vote_count_1_;
  ::google::protobuf::uint32 voting_state_;
  ::google::protobuf::uint32 round_number_;
  bool is_votes_hidden_;
  ::google::protobuf::uint32 calibration_time_remaining_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgArcanaVotes_Match* default_instance_;
};
// -------------------------------------------------------------------

class CMsgArcanaVotes : public ::google::protobuf::Message {
 public:
  CMsgArcanaVotes();
  virtual ~CMsgArcanaVotes();

  CMsgArcanaVotes(const CMsgArcanaVotes& from);

  inline CMsgArcanaVotes& operator=(const CMsgArcanaVotes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgArcanaVotes& default_instance();

  void Swap(CMsgArcanaVotes* other);

  // implements Message ----------------------------------------------

  CMsgArcanaVotes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgArcanaVotes& from);
  void MergeFrom(const CMsgArcanaVotes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgArcanaVotes_Match Match;

  typedef CMsgArcanaVotes_VotingState VotingState;
  static const VotingState FINISHED = CMsgArcanaVotes_VotingState_FINISHED;
  static const VotingState IN_PROGRESS = CMsgArcanaVotes_VotingState_IN_PROGRESS;
  static const VotingState IN_FUTURE = CMsgArcanaVotes_VotingState_IN_FUTURE;
  static inline bool VotingState_IsValid(int value) {
    return CMsgArcanaVotes_VotingState_IsValid(value);
  }
  static const VotingState VotingState_MIN =
    CMsgArcanaVotes_VotingState_VotingState_MIN;
  static const VotingState VotingState_MAX =
    CMsgArcanaVotes_VotingState_VotingState_MAX;
  static const int VotingState_ARRAYSIZE =
    CMsgArcanaVotes_VotingState_VotingState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VotingState_descriptor() {
    return CMsgArcanaVotes_VotingState_descriptor();
  }
  static inline const ::std::string& VotingState_Name(VotingState value) {
    return CMsgArcanaVotes_VotingState_Name(value);
  }
  static inline bool VotingState_Parse(const ::std::string& name,
      VotingState* value) {
    return CMsgArcanaVotes_VotingState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgArcanaVotes.Match matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgArcanaVotes_Match& matches(int index) const;
  inline ::CMsgArcanaVotes_Match* mutable_matches(int index);
  inline ::CMsgArcanaVotes_Match* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgArcanaVotes_Match >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgArcanaVotes_Match >*
      mutable_matches();

  // optional uint32 round_time_remaining = 2;
  inline bool has_round_time_remaining() const;
  inline void clear_round_time_remaining();
  static const int kRoundTimeRemainingFieldNumber = 2;
  inline ::google::protobuf::uint32 round_time_remaining() const;
  inline void set_round_time_remaining(::google::protobuf::uint32 value);

  // optional uint32 round_number = 3;
  inline bool has_round_number() const;
  inline void clear_round_number();
  static const int kRoundNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 round_number() const;
  inline void set_round_number(::google::protobuf::uint32 value);

  // optional uint32 voting_state = 4;
  inline bool has_voting_state() const;
  inline void clear_voting_state();
  static const int kVotingStateFieldNumber = 4;
  inline ::google::protobuf::uint32 voting_state() const;
  inline void set_voting_state(::google::protobuf::uint32 value);

  // optional bool is_current_round_calibrating = 5;
  inline bool has_is_current_round_calibrating() const;
  inline void clear_is_current_round_calibrating();
  static const int kIsCurrentRoundCalibratingFieldNumber = 5;
  inline bool is_current_round_calibrating() const;
  inline void set_is_current_round_calibrating(bool value);

  // optional uint32 closest_active_match_id = 6;
  inline bool has_closest_active_match_id() const;
  inline void clear_closest_active_match_id();
  static const int kClosestActiveMatchIdFieldNumber = 6;
  inline ::google::protobuf::uint32 closest_active_match_id() const;
  inline void set_closest_active_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgArcanaVotes)
 private:
  inline void set_has_round_time_remaining();
  inline void clear_has_round_time_remaining();
  inline void set_has_round_number();
  inline void clear_has_round_number();
  inline void set_has_voting_state();
  inline void clear_has_voting_state();
  inline void set_has_is_current_round_calibrating();
  inline void clear_has_is_current_round_calibrating();
  inline void set_has_closest_active_match_id();
  inline void clear_has_closest_active_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgArcanaVotes_Match > matches_;
  ::google::protobuf::uint32 round_time_remaining_;
  ::google::protobuf::uint32 round_number_;
  ::google::protobuf::uint32 voting_state_;
  bool is_current_round_calibrating_;
  ::google::protobuf::uint32 closest_active_match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgArcanaVotes* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemaining : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestArcanaVotesRemaining();
  virtual ~CMsgClientToGCRequestArcanaVotesRemaining();

  CMsgClientToGCRequestArcanaVotesRemaining(const CMsgClientToGCRequestArcanaVotesRemaining& from);

  inline CMsgClientToGCRequestArcanaVotesRemaining& operator=(const CMsgClientToGCRequestArcanaVotesRemaining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestArcanaVotesRemaining& default_instance();

  void Swap(CMsgClientToGCRequestArcanaVotesRemaining* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestArcanaVotesRemaining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemaining& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemaining& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestArcanaVotesRemaining)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestArcanaVotesRemaining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote();
  virtual ~CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote();

  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& operator=(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& default_instance();

  void Swap(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 3;
  inline bool has_vote_count() const;
  inline void clear_vote_count();
  static const int kVoteCountFieldNumber = 3;
  inline ::google::protobuf::uint32 vote_count() const;
  inline void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_vote_count();
  inline void clear_has_vote_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 vote_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemainingResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestArcanaVotesRemainingResponse();
  virtual ~CMsgClientToGCRequestArcanaVotesRemainingResponse();

  CMsgClientToGCRequestArcanaVotesRemainingResponse(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse& operator=(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestArcanaVotesRemainingResponse& default_instance();

  void Swap(CMsgClientToGCRequestArcanaVotesRemainingResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestArcanaVotesRemainingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote MatchVote;

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // optional uint32 votes_remaining = 2;
  inline bool has_votes_remaining() const;
  inline void clear_votes_remaining();
  static const int kVotesRemainingFieldNumber = 2;
  inline ::google::protobuf::uint32 votes_remaining() const;
  inline void set_votes_remaining(::google::protobuf::uint32 value);

  // optional uint32 votes_total = 3;
  inline bool has_votes_total() const;
  inline void clear_votes_total();
  static const int kVotesTotalFieldNumber = 3;
  inline ::google::protobuf::uint32 votes_total() const;
  inline void set_votes_total(::google::protobuf::uint32 value);

  // repeated .CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote matches_previously_voted_for = 4;
  inline int matches_previously_voted_for_size() const;
  inline void clear_matches_previously_voted_for();
  static const int kMatchesPreviouslyVotedForFieldNumber = 4;
  inline const ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& matches_previously_voted_for(int index) const;
  inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* mutable_matches_previously_voted_for(int index);
  inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* add_matches_previously_voted_for();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >&
      matches_previously_voted_for() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >*
      mutable_matches_previously_voted_for();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestArcanaVotesRemainingResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_votes_remaining();
  inline void clear_has_votes_remaining();
  inline void set_has_votes_total();
  inline void clear_has_votes_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool result_;
  ::google::protobuf::uint32 votes_remaining_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote > matches_previously_voted_for_;
  ::google::protobuf::uint32 votes_total_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestArcanaVotesRemainingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLog : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLog();
  virtual ~CMsgClientToGCRequestEventPointLog();

  CMsgClientToGCRequestEventPointLog(const CMsgClientToGCRequestEventPointLog& from);

  inline CMsgClientToGCRequestEventPointLog& operator=(const CMsgClientToGCRequestEventPointLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLog& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLog* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLog& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLog)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLog* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent();

  CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // optional uint32 challenge_id = 2;
  inline bool has_challenge_id() const;
  inline void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 2;
  inline ::google::protobuf::uint32 challenge_id() const;
  inline void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_challenge_id();
  inline void clear_has_challenge_id();
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent();

  CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent();

  CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_account_id = 1;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional string recipient_name = 2;
  inline bool has_recipient_name() const;
  inline void clear_recipient_name();
  static const int kRecipientNameFieldNumber = 2;
  inline const ::std::string& recipient_name() const;
  inline void set_recipient_name(const ::std::string& value);
  inline void set_recipient_name(const char* value);
  inline void set_recipient_name(const char* value, size_t size);
  inline ::std::string* mutable_recipient_name();
  inline ::std::string* release_recipient_name();
  inline void set_allocated_recipient_name(::std::string* recipient_name);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent)
 private:
  inline void set_has_recipient_account_id();
  inline void clear_has_recipient_account_id();
  inline void set_has_recipient_name();
  inline void clear_has_recipient_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* recipient_name_;
  ::google::protobuf::uint32 recipient_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent();

  CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 giver_account_id = 1;
  inline bool has_giver_account_id() const;
  inline void clear_giver_account_id();
  static const int kGiverAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 giver_account_id() const;
  inline void set_giver_account_id(::google::protobuf::uint32 value);

  // optional string giver_name = 2;
  inline bool has_giver_name() const;
  inline void clear_giver_name();
  static const int kGiverNameFieldNumber = 2;
  inline const ::std::string& giver_name() const;
  inline void set_giver_name(const ::std::string& value);
  inline void set_giver_name(const char* value);
  inline void set_giver_name(const char* value, size_t size);
  inline ::std::string* mutable_giver_name();
  inline ::std::string* release_giver_name();
  inline void set_allocated_giver_name(::std::string* giver_name);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent)
 private:
  inline void set_has_giver_account_id();
  inline void clear_has_giver_account_id();
  inline void set_has_giver_name();
  inline void clear_has_giver_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* giver_name_;
  ::google::protobuf::uint32 giver_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent();

  CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipe_item_def_index = 1;
  inline bool has_recipe_item_def_index() const;
  inline void clear_recipe_item_def_index();
  static const int kRecipeItemDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 recipe_item_def_index() const;
  inline void set_recipe_item_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent)
 private:
  inline void set_has_recipe_item_def_index();
  inline void clear_has_recipe_item_def_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipe_item_def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_AchievementEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_AchievementEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_AchievementEvent();

  CMsgClientToGCRequestEventPointLogResponse_AchievementEvent(const CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action_id = 1;
  inline bool has_action_id() const;
  inline void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 action_id() const;
  inline void set_action_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.AchievementEvent)
 private:
  inline void set_has_action_id();
  inline void clear_has_action_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 action_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent();

  CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool community_goal_item = 1;
  inline bool has_community_goal_item() const;
  inline void clear_community_goal_item();
  static const int kCommunityGoalItemFieldNumber = 1;
  inline bool community_goal_item() const;
  inline void set_community_goal_item(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent)
 private:
  inline void set_has_community_goal_item();
  inline void clear_has_community_goal_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool community_goal_item_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent();

  CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  inline bool has_prediction_id() const;
  inline void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 prediction_id() const;
  inline void set_prediction_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent)
 private:
  inline void set_has_prediction_id();
  inline void clear_has_prediction_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent();

  CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent();

  CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 team_gid = 1;
  inline bool has_team_gid() const;
  inline void clear_team_gid();
  static const int kTeamGidFieldNumber = 1;
  inline ::google::protobuf::uint64 team_gid() const;
  inline void set_team_gid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent)
 private:
  inline void set_has_team_gid();
  inline void clear_has_team_gid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 team_gid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent();

  CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 percentile = 1;
  inline bool has_percentile() const;
  inline void clear_percentile();
  static const int kPercentileFieldNumber = 1;
  inline ::google::protobuf::uint32 percentile() const;
  inline void set_percentile(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent)
 private:
  inline void set_has_percentile();
  inline void clear_has_percentile();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 percentile_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent();

  CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct_answers = 1;
  inline bool has_correct_answers() const;
  inline void clear_correct_answers();
  static const int kCorrectAnswersFieldNumber = 1;
  inline ::google::protobuf::uint32 correct_answers() const;
  inline void set_correct_answers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent)
 private:
  inline void set_has_correct_answers();
  inline void clear_has_correct_answers();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_answers_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction();

  CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from);

  inline CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& operator=(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional int32 event_points = 2;
  inline bool has_event_points() const;
  inline void clear_event_points();
  static const int kEventPointsFieldNumber = 2;
  inline ::google::protobuf::int32 event_points() const;
  inline void set_event_points(::google::protobuf::int32 value);

  // optional bool compendium_activated_event = 3;
  inline bool has_compendium_activated_event() const;
  inline void clear_compendium_activated_event();
  static const int kCompendiumActivatedEventFieldNumber = 3;
  inline bool compendium_activated_event() const;
  inline void set_compendium_activated_event(bool value);

  // optional bool point_item_used_event = 4;
  inline bool has_point_item_used_event() const;
  inline void clear_point_item_used_event();
  static const int kPointItemUsedEventFieldNumber = 4;
  inline bool point_item_used_event() const;
  inline void set_point_item_used_event(bool value);

  // optional .CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent wager_won_event = 5;
  inline bool has_wager_won_event() const;
  inline void clear_wager_won_event();
  static const int kWagerWonEventFieldNumber = 5;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& wager_won_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* mutable_wager_won_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* release_wager_won_event();
  inline void set_allocated_wager_won_event(::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* wager_won_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent mystery_item_received_event = 6;
  inline bool has_mystery_item_received_event() const;
  inline void clear_mystery_item_received_event();
  static const int kMysteryItemReceivedEventFieldNumber = 6;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& mystery_item_received_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mutable_mystery_item_received_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* release_mystery_item_received_event();
  inline void set_allocated_mystery_item_received_event(::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mystery_item_received_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent quest_challenge_event = 7;
  inline bool has_quest_challenge_event() const;
  inline void clear_quest_challenge_event();
  static const int kQuestChallengeEventFieldNumber = 7;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& quest_challenge_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* mutable_quest_challenge_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* release_quest_challenge_event();
  inline void set_allocated_quest_challenge_event(::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* quest_challenge_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent tip_given_event = 8;
  inline bool has_tip_given_event() const;
  inline void clear_tip_given_event();
  static const int kTipGivenEventFieldNumber = 8;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& tip_given_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* mutable_tip_given_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* release_tip_given_event();
  inline void set_allocated_tip_given_event(::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* tip_given_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent tip_received_event = 9;
  inline bool has_tip_received_event() const;
  inline void clear_tip_received_event();
  static const int kTipReceivedEventFieldNumber = 9;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& tip_received_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* mutable_tip_received_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* release_tip_received_event();
  inline void set_allocated_tip_received_event(::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* tip_received_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent recycled_item_event = 10;
  inline bool has_recycled_item_event() const;
  inline void clear_recycled_item_event();
  static const int kRecycledItemEventFieldNumber = 10;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& recycled_item_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* mutable_recycled_item_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* release_recycled_item_event();
  inline void set_allocated_recycled_item_event(::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* recycled_item_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.AchievementEvent achievement_event = 11;
  inline bool has_achievement_event() const;
  inline void clear_achievement_event();
  static const int kAchievementEventFieldNumber = 11;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& achievement_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* mutable_achievement_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* release_achievement_event();
  inline void set_allocated_achievement_event(::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* achievement_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent in_game_prediction_event = 12;
  inline bool has_in_game_prediction_event() const;
  inline void clear_in_game_prediction_event();
  static const int kInGamePredictionEventFieldNumber = 12;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& in_game_prediction_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* mutable_in_game_prediction_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* release_in_game_prediction_event();
  inline void set_allocated_in_game_prediction_event(::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* in_game_prediction_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent prediction_event = 13;
  inline bool has_prediction_event() const;
  inline void clear_prediction_event();
  static const int kPredictionEventFieldNumber = 13;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& prediction_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* mutable_prediction_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* release_prediction_event();
  inline void set_allocated_prediction_event(::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* prediction_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent weekend_tourney_payout_event = 14;
  inline bool has_weekend_tourney_payout_event() const;
  inline void clear_weekend_tourney_payout_event();
  static const int kWeekendTourneyPayoutEventFieldNumber = 14;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& weekend_tourney_payout_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* mutable_weekend_tourney_payout_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* release_weekend_tourney_payout_event();
  inline void set_allocated_weekend_tourney_payout_event(::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* weekend_tourney_payout_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent fantasy_reward_event = 15;
  inline bool has_fantasy_reward_event() const;
  inline void clear_fantasy_reward_event();
  static const int kFantasyRewardEventFieldNumber = 15;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& fantasy_reward_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* mutable_fantasy_reward_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* release_fantasy_reward_event();
  inline void set_allocated_fantasy_reward_event(::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* fantasy_reward_event);

  // optional .CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent bracket_reward_event = 16;
  inline bool has_bracket_reward_event() const;
  inline void clear_bracket_reward_event();
  static const int kBracketRewardEventFieldNumber = 16;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& bracket_reward_event() const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* mutable_bracket_reward_event();
  inline ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* release_bracket_reward_event();
  inline void set_allocated_bracket_reward_event(::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* bracket_reward_event);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_event_points();
  inline void clear_has_event_points();
  inline void set_has_compendium_activated_event();
  inline void clear_has_compendium_activated_event();
  inline void set_has_point_item_used_event();
  inline void clear_has_point_item_used_event();
  inline void set_has_wager_won_event();
  inline void clear_has_wager_won_event();
  inline void set_has_mystery_item_received_event();
  inline void clear_has_mystery_item_received_event();
  inline void set_has_quest_challenge_event();
  inline void clear_has_quest_challenge_event();
  inline void set_has_tip_given_event();
  inline void clear_has_tip_given_event();
  inline void set_has_tip_received_event();
  inline void clear_has_tip_received_event();
  inline void set_has_recycled_item_event();
  inline void clear_has_recycled_item_event();
  inline void set_has_achievement_event();
  inline void clear_has_achievement_event();
  inline void set_has_in_game_prediction_event();
  inline void clear_has_in_game_prediction_event();
  inline void set_has_prediction_event();
  inline void clear_has_prediction_event();
  inline void set_has_weekend_tourney_payout_event();
  inline void clear_has_weekend_tourney_payout_event();
  inline void set_has_fantasy_reward_event();
  inline void clear_has_fantasy_reward_event();
  inline void set_has_bracket_reward_event();
  inline void clear_has_bracket_reward_event();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::int32 event_points_;
  ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* wager_won_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mystery_item_received_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* quest_challenge_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* tip_given_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* tip_received_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* recycled_item_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* achievement_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* in_game_prediction_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* prediction_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* weekend_tourney_payout_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* fantasy_reward_event_;
  ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* bracket_reward_event_;
  bool compendium_activated_event_;
  bool point_item_used_event_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestEventPointLogResponse();
  virtual ~CMsgClientToGCRequestEventPointLogResponse();

  CMsgClientToGCRequestEventPointLogResponse(const CMsgClientToGCRequestEventPointLogResponse& from);

  inline CMsgClientToGCRequestEventPointLogResponse& operator=(const CMsgClientToGCRequestEventPointLogResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse& default_instance();

  void Swap(CMsgClientToGCRequestEventPointLogResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestEventPointLogResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent QuestChallengeEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent WagerWonEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent TipGivenEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent TipReceivedEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent RecycledItemEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_AchievementEvent AchievementEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent MysteryItemReceivedEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent CorrectPredictionEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent InGamePredictionCorrectEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent WeekendTourneyPayoutEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent FantasyRewardEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent BracketRewardEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction EventPointTransaction;

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // repeated .CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction transactions = 2;
  inline int transactions_size() const;
  inline void clear_transactions();
  static const int kTransactionsFieldNumber = 2;
  inline const ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& transactions(int index) const;
  inline ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* mutable_transactions(int index);
  inline ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* add_transactions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >&
      transactions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >*
      mutable_transactions();

  // optional uint32 event_id = 3;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestEventPointLogResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction > transactions_;
  bool result_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestEventPointLogResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCPublishUserStat : public ::google::protobuf::Message {
 public:
  CMsgClientToGCPublishUserStat();
  virtual ~CMsgClientToGCPublishUserStat();

  CMsgClientToGCPublishUserStat(const CMsgClientToGCPublishUserStat& from);

  inline CMsgClientToGCPublishUserStat& operator=(const CMsgClientToGCPublishUserStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCPublishUserStat& default_instance();

  void Swap(CMsgClientToGCPublishUserStat* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCPublishUserStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCPublishUserStat& from);
  void MergeFrom(const CMsgClientToGCPublishUserStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 user_stats_event = 1;
  inline bool has_user_stats_event() const;
  inline void clear_user_stats_event();
  static const int kUserStatsEventFieldNumber = 1;
  inline ::google::protobuf::uint32 user_stats_event() const;
  inline void set_user_stats_event(::google::protobuf::uint32 value);

  // optional uint64 reference_data = 2;
  inline bool has_reference_data() const;
  inline void clear_reference_data();
  static const int kReferenceDataFieldNumber = 2;
  inline ::google::protobuf::uint64 reference_data() const;
  inline void set_reference_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPublishUserStat)
 private:
  inline void set_has_user_stats_event();
  inline void clear_has_user_stats_event();
  inline void set_has_reference_data();
  inline void clear_has_reference_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 reference_data_;
  ::google::protobuf::uint32 user_stats_event_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCPublishUserStat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCAddTI6TreeProgress : public ::google::protobuf::Message {
 public:
  CMsgClientToGCAddTI6TreeProgress();
  virtual ~CMsgClientToGCAddTI6TreeProgress();

  CMsgClientToGCAddTI6TreeProgress(const CMsgClientToGCAddTI6TreeProgress& from);

  inline CMsgClientToGCAddTI6TreeProgress& operator=(const CMsgClientToGCAddTI6TreeProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCAddTI6TreeProgress& default_instance();

  void Swap(CMsgClientToGCAddTI6TreeProgress* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCAddTI6TreeProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCAddTI6TreeProgress& from);
  void MergeFrom(const CMsgClientToGCAddTI6TreeProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trees = 1;
  inline bool has_trees() const;
  inline void clear_trees();
  static const int kTreesFieldNumber = 1;
  inline ::google::protobuf::uint32 trees() const;
  inline void set_trees(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAddTI6TreeProgress)
 private:
  inline void set_has_trees();
  inline void clear_has_trees();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 trees_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCAddTI6TreeProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRedeemReward : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRedeemReward();
  virtual ~CMsgClientToGCRedeemReward();

  CMsgClientToGCRedeemReward(const CMsgClientToGCRedeemReward& from);

  inline CMsgClientToGCRedeemReward& operator=(const CMsgClientToGCRedeemReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRedeemReward& default_instance();

  void Swap(CMsgClientToGCRedeemReward* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRedeemReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRedeemReward& from);
  void MergeFrom(const CMsgClientToGCRedeemReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 action_id = 2;
  inline bool has_action_id() const;
  inline void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 action_id() const;
  inline void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 base_action_id = 3;
  inline bool has_base_action_id() const;
  inline void clear_base_action_id();
  static const int kBaseActionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 base_action_id() const;
  inline void set_base_action_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRedeemReward)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_action_id();
  inline void clear_has_action_id();
  inline void set_has_base_action_id();
  inline void clear_has_base_action_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 base_action_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRedeemReward* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientRedeemRewardResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientRedeemRewardResponse();
  virtual ~CMsgGCToClientRedeemRewardResponse();

  CMsgGCToClientRedeemRewardResponse(const CMsgGCToClientRedeemRewardResponse& from);

  inline CMsgGCToClientRedeemRewardResponse& operator=(const CMsgGCToClientRedeemRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientRedeemRewardResponse& default_instance();

  void Swap(CMsgGCToClientRedeemRewardResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientRedeemRewardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientRedeemRewardResponse& from);
  void MergeFrom(const CMsgGCToClientRedeemRewardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientRedeemRewardResponse_Result Result;
  static const Result SUCCESS = CMsgGCToClientRedeemRewardResponse_Result_SUCCESS;
  static const Result FAILURE_SDO_LOCK = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_SDO_LOCK;
  static const Result FAILURE_SDO_LOAD = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_SDO_LOAD;
  static const Result FAILURE_EVENT_NOT_OWNED = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_EVENT_NOT_OWNED;
  static const Result FAILURE_EVENT_NOT_ACTIVE = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_EVENT_NOT_ACTIVE;
  static const Result FAILURE_INVALID_ACTION = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_INVALID_ACTION;
  static const Result FAILURE_REQUIREMENTS_NOT_MET = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_REQUIREMENTS_NOT_MET;
  static const Result FAILURE_ALREADY_GRANTED = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_ALREADY_GRANTED;
  static const Result FAILURE_TIMEOUT = CMsgGCToClientRedeemRewardResponse_Result_FAILURE_TIMEOUT;
  static inline bool Result_IsValid(int value) {
    return CMsgGCToClientRedeemRewardResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgGCToClientRedeemRewardResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgGCToClientRedeemRewardResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgGCToClientRedeemRewardResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgGCToClientRedeemRewardResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgGCToClientRedeemRewardResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgGCToClientRedeemRewardResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGCToClientRedeemRewardResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgGCToClientRedeemRewardResponse_Result result() const;
  inline void set_result(::CMsgGCToClientRedeemRewardResponse_Result value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientRedeemRewardResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientRedeemRewardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaPlaysRemaining : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestLinaPlaysRemaining();
  virtual ~CMsgClientToGCRequestLinaPlaysRemaining();

  CMsgClientToGCRequestLinaPlaysRemaining(const CMsgClientToGCRequestLinaPlaysRemaining& from);

  inline CMsgClientToGCRequestLinaPlaysRemaining& operator=(const CMsgClientToGCRequestLinaPlaysRemaining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaPlaysRemaining& default_instance();

  void Swap(CMsgClientToGCRequestLinaPlaysRemaining* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestLinaPlaysRemaining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestLinaPlaysRemaining& from);
  void MergeFrom(const CMsgClientToGCRequestLinaPlaysRemaining& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::EEvent event_id() const;
  inline void set_event_id(::EEvent value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestLinaPlaysRemaining)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestLinaPlaysRemaining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaPlaysRemainingResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestLinaPlaysRemainingResponse();
  virtual ~CMsgClientToGCRequestLinaPlaysRemainingResponse();

  CMsgClientToGCRequestLinaPlaysRemainingResponse(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);

  inline CMsgClientToGCRequestLinaPlaysRemainingResponse& operator=(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaPlaysRemainingResponse& default_instance();

  void Swap(CMsgClientToGCRequestLinaPlaysRemainingResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestLinaPlaysRemainingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);
  void MergeFrom(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 plays_remaining = 1;
  inline bool has_plays_remaining() const;
  inline void clear_plays_remaining();
  static const int kPlaysRemainingFieldNumber = 1;
  inline ::google::protobuf::uint32 plays_remaining() const;
  inline void set_plays_remaining(::google::protobuf::uint32 value);

  // optional uint32 plays_total = 2;
  inline bool has_plays_total() const;
  inline void clear_plays_total();
  static const int kPlaysTotalFieldNumber = 2;
  inline ::google::protobuf::uint32 plays_total() const;
  inline void set_plays_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestLinaPlaysRemainingResponse)
 private:
  inline void set_has_plays_remaining();
  inline void clear_has_plays_remaining();
  inline void set_has_plays_total();
  inline void clear_has_plays_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 plays_remaining_;
  ::google::protobuf::uint32 plays_total_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestLinaPlaysRemainingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaGameResult : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestLinaGameResult();
  virtual ~CMsgClientToGCRequestLinaGameResult();

  CMsgClientToGCRequestLinaGameResult(const CMsgClientToGCRequestLinaGameResult& from);

  inline CMsgClientToGCRequestLinaGameResult& operator=(const CMsgClientToGCRequestLinaGameResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaGameResult& default_instance();

  void Swap(CMsgClientToGCRequestLinaGameResult* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestLinaGameResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestLinaGameResult& from);
  void MergeFrom(const CMsgClientToGCRequestLinaGameResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::EEvent event_id() const;
  inline void set_event_id(::EEvent value);

  // optional uint32 slot_chosen = 2;
  inline bool has_slot_chosen() const;
  inline void clear_slot_chosen();
  static const int kSlotChosenFieldNumber = 2;
  inline ::google::protobuf::uint32 slot_chosen() const;
  inline void set_slot_chosen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestLinaGameResult)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_slot_chosen();
  inline void clear_has_slot_chosen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 slot_chosen_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestLinaGameResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaGameResultResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRequestLinaGameResultResponse();
  virtual ~CMsgClientToGCRequestLinaGameResultResponse();

  CMsgClientToGCRequestLinaGameResultResponse(const CMsgClientToGCRequestLinaGameResultResponse& from);

  inline CMsgClientToGCRequestLinaGameResultResponse& operator=(const CMsgClientToGCRequestLinaGameResultResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaGameResultResponse& default_instance();

  void Swap(CMsgClientToGCRequestLinaGameResultResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestLinaGameResultResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRequestLinaGameResultResponse& from);
  void MergeFrom(const CMsgClientToGCRequestLinaGameResultResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestLinaGameResultResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRequestLinaGameResultResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientQuestProgressUpdated_Challenge : public ::google::protobuf::Message {
 public:
  CMsgGCToClientQuestProgressUpdated_Challenge();
  virtual ~CMsgGCToClientQuestProgressUpdated_Challenge();

  CMsgGCToClientQuestProgressUpdated_Challenge(const CMsgGCToClientQuestProgressUpdated_Challenge& from);

  inline CMsgGCToClientQuestProgressUpdated_Challenge& operator=(const CMsgGCToClientQuestProgressUpdated_Challenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientQuestProgressUpdated_Challenge& default_instance();

  void Swap(CMsgGCToClientQuestProgressUpdated_Challenge* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientQuestProgressUpdated_Challenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientQuestProgressUpdated_Challenge& from);
  void MergeFrom(const CMsgGCToClientQuestProgressUpdated_Challenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 challenge_id = 1;
  inline bool has_challenge_id() const;
  inline void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 challenge_id() const;
  inline void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 time_completed = 2;
  inline bool has_time_completed() const;
  inline void clear_time_completed();
  static const int kTimeCompletedFieldNumber = 2;
  inline ::google::protobuf::uint32 time_completed() const;
  inline void set_time_completed(::google::protobuf::uint32 value);

  // optional uint32 attempts = 3;
  inline bool has_attempts() const;
  inline void clear_attempts();
  static const int kAttemptsFieldNumber = 3;
  inline ::google::protobuf::uint32 attempts() const;
  inline void set_attempts(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 challenge_type = 5;
  inline bool has_challenge_type() const;
  inline void clear_challenge_type();
  static const int kChallengeTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 challenge_type() const;
  inline void set_challenge_type(::google::protobuf::uint32 value);

  // optional uint32 quest_rank = 6;
  inline bool has_quest_rank() const;
  inline void clear_quest_rank();
  static const int kQuestRankFieldNumber = 6;
  inline ::google::protobuf::uint32 quest_rank() const;
  inline void set_quest_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientQuestProgressUpdated.Challenge)
 private:
  inline void set_has_challenge_id();
  inline void clear_has_challenge_id();
  inline void set_has_time_completed();
  inline void clear_has_time_completed();
  inline void set_has_attempts();
  inline void clear_has_attempts();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_challenge_type();
  inline void clear_has_challenge_type();
  inline void set_has_quest_rank();
  inline void clear_has_quest_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 time_completed_;
  ::google::protobuf::uint32 attempts_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 challenge_type_;
  ::google::protobuf::uint32 quest_rank_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientQuestProgressUpdated_Challenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientQuestProgressUpdated : public ::google::protobuf::Message {
 public:
  CMsgGCToClientQuestProgressUpdated();
  virtual ~CMsgGCToClientQuestProgressUpdated();

  CMsgGCToClientQuestProgressUpdated(const CMsgGCToClientQuestProgressUpdated& from);

  inline CMsgGCToClientQuestProgressUpdated& operator=(const CMsgGCToClientQuestProgressUpdated& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientQuestProgressUpdated& default_instance();

  void Swap(CMsgGCToClientQuestProgressUpdated* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientQuestProgressUpdated* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientQuestProgressUpdated& from);
  void MergeFrom(const CMsgGCToClientQuestProgressUpdated& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientQuestProgressUpdated_Challenge Challenge;

  // accessors -------------------------------------------------------

  // optional uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // repeated .CMsgGCToClientQuestProgressUpdated.Challenge completed_challenges = 2;
  inline int completed_challenges_size() const;
  inline void clear_completed_challenges();
  static const int kCompletedChallengesFieldNumber = 2;
  inline const ::CMsgGCToClientQuestProgressUpdated_Challenge& completed_challenges(int index) const;
  inline ::CMsgGCToClientQuestProgressUpdated_Challenge* mutable_completed_challenges(int index);
  inline ::CMsgGCToClientQuestProgressUpdated_Challenge* add_completed_challenges();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientQuestProgressUpdated_Challenge >&
      completed_challenges() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientQuestProgressUpdated_Challenge >*
      mutable_completed_challenges();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientQuestProgressUpdated)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientQuestProgressUpdated_Challenge > completed_challenges_;
  ::google::protobuf::uint32 quest_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientQuestProgressUpdated* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemItem : public ::google::protobuf::Message {
 public:
  CMsgDOTARedeemItem();
  virtual ~CMsgDOTARedeemItem();

  CMsgDOTARedeemItem(const CMsgDOTARedeemItem& from);

  inline CMsgDOTARedeemItem& operator=(const CMsgDOTARedeemItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemItem& default_instance();

  void Swap(CMsgDOTARedeemItem* other);

  // implements Message ----------------------------------------------

  CMsgDOTARedeemItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARedeemItem& from);
  void MergeFrom(const CMsgDOTARedeemItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 currency_id = 1;
  inline bool has_currency_id() const;
  inline void clear_currency_id();
  static const int kCurrencyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 currency_id() const;
  inline void set_currency_id(::google::protobuf::uint64 value);

  // optional uint32 purchase_def = 2;
  inline bool has_purchase_def() const;
  inline void clear_purchase_def();
  static const int kPurchaseDefFieldNumber = 2;
  inline ::google::protobuf::uint32 purchase_def() const;
  inline void set_purchase_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARedeemItem)
 private:
  inline void set_has_currency_id();
  inline void clear_has_currency_id();
  inline void set_has_purchase_def();
  inline void clear_has_purchase_def();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 currency_id_;
  ::google::protobuf::uint32 purchase_def_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARedeemItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemItemResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARedeemItemResponse();
  virtual ~CMsgDOTARedeemItemResponse();

  CMsgDOTARedeemItemResponse(const CMsgDOTARedeemItemResponse& from);

  inline CMsgDOTARedeemItemResponse& operator=(const CMsgDOTARedeemItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemItemResponse& default_instance();

  void Swap(CMsgDOTARedeemItemResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARedeemItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARedeemItemResponse& from);
  void MergeFrom(const CMsgDOTARedeemItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARedeemItemResponse_EResultCode EResultCode;
  static const EResultCode k_Succeeded = CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded;
  static const EResultCode k_Failed = CMsgDOTARedeemItemResponse_EResultCode_k_Failed;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgDOTARedeemItemResponse_EResultCode_IsValid(value);
  }
  static const EResultCode EResultCode_MIN =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MIN;
  static const EResultCode EResultCode_MAX =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX;
  static const int EResultCode_ARRAYSIZE =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgDOTARedeemItemResponse_EResultCode_descriptor();
  }
  static inline const ::std::string& EResultCode_Name(EResultCode value) {
    return CMsgDOTARedeemItemResponse_EResultCode_Name(value);
  }
  static inline bool EResultCode_Parse(const ::std::string& name,
      EResultCode* value) {
    return CMsgDOTARedeemItemResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTARedeemItemResponse.EResultCode response = 1 [default = k_Succeeded];
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline ::CMsgDOTARedeemItemResponse_EResultCode response() const;
  inline void set_response(::CMsgDOTARedeemItemResponse_EResultCode value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARedeemItemResponse)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int response_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARedeemItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPerfectWorldUserLookupRequest : public ::google::protobuf::Message {
 public:
  CMsgPerfectWorldUserLookupRequest();
  virtual ~CMsgPerfectWorldUserLookupRequest();

  CMsgPerfectWorldUserLookupRequest(const CMsgPerfectWorldUserLookupRequest& from);

  inline CMsgPerfectWorldUserLookupRequest& operator=(const CMsgPerfectWorldUserLookupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPerfectWorldUserLookupRequest& default_instance();

  void Swap(CMsgPerfectWorldUserLookupRequest* other);

  // implements Message ----------------------------------------------

  CMsgPerfectWorldUserLookupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPerfectWorldUserLookupRequest& from);
  void MergeFrom(const CMsgPerfectWorldUserLookupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:CMsgPerfectWorldUserLookupRequest)
 private:
  inline void set_has_user_name();
  inline void clear_has_user_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPerfectWorldUserLookupRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPerfectWorldUserLookupResponse : public ::google::protobuf::Message {
 public:
  CMsgPerfectWorldUserLookupResponse();
  virtual ~CMsgPerfectWorldUserLookupResponse();

  CMsgPerfectWorldUserLookupResponse(const CMsgPerfectWorldUserLookupResponse& from);

  inline CMsgPerfectWorldUserLookupResponse& operator=(const CMsgPerfectWorldUserLookupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPerfectWorldUserLookupResponse& default_instance();

  void Swap(CMsgPerfectWorldUserLookupResponse* other);

  // implements Message ----------------------------------------------

  CMsgPerfectWorldUserLookupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPerfectWorldUserLookupResponse& from);
  void MergeFrom(const CMsgPerfectWorldUserLookupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPerfectWorldUserLookupResponse_EResultCode EResultCode;
  static const EResultCode SUCCESS_ACCOUNT_FOUND = CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND;
  static const EResultCode ERROR_UNKNOWN = CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_UNKNOWN;
  static const EResultCode ERROR_USER_NAME_WRONG_FORMAT = CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_USER_NAME_WRONG_FORMAT;
  static const EResultCode ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND = CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND;
  static const EResultCode ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND = CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(value);
  }
  static const EResultCode EResultCode_MIN =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MIN;
  static const EResultCode EResultCode_MAX =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX;
  static const int EResultCode_ARRAYSIZE =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
  }
  static inline const ::std::string& EResultCode_Name(EResultCode value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_Name(value);
  }
  static inline bool EResultCode_Parse(const ::std::string& name,
      EResultCode* value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  inline ::CMsgPerfectWorldUserLookupResponse_EResultCode result_code() const;
  inline void set_result_code(::CMsgPerfectWorldUserLookupResponse_EResultCode value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPerfectWorldUserLookupResponse)
 private:
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_code_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPerfectWorldUserLookupResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNexonPartnerUpdate : public ::google::protobuf::Message {
 public:
  CMsgNexonPartnerUpdate();
  virtual ~CMsgNexonPartnerUpdate();

  CMsgNexonPartnerUpdate(const CMsgNexonPartnerUpdate& from);

  inline CMsgNexonPartnerUpdate& operator=(const CMsgNexonPartnerUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNexonPartnerUpdate& default_instance();

  void Swap(CMsgNexonPartnerUpdate* other);

  // implements Message ----------------------------------------------

  CMsgNexonPartnerUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNexonPartnerUpdate& from);
  void MergeFrom(const CMsgNexonPartnerUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 messagetype = 1;
  inline bool has_messagetype() const;
  inline void clear_messagetype();
  static const int kMessagetypeFieldNumber = 1;
  inline ::google::protobuf::uint32 messagetype() const;
  inline void set_messagetype(::google::protobuf::uint32 value);

  // optional uint32 timeremaining = 2;
  inline bool has_timeremaining() const;
  inline void clear_timeremaining();
  static const int kTimeremainingFieldNumber = 2;
  inline ::google::protobuf::uint32 timeremaining() const;
  inline void set_timeremaining(::google::protobuf::uint32 value);

  // optional bool terminate = 3;
  inline bool has_terminate() const;
  inline void clear_terminate();
  static const int kTerminateFieldNumber = 3;
  inline bool terminate() const;
  inline void set_terminate(bool value);

  // @@protoc_insertion_point(class_scope:CMsgNexonPartnerUpdate)
 private:
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_timeremaining();
  inline void clear_has_timeremaining();
  inline void set_has_terminate();
  inline void clear_has_terminate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 messagetype_;
  ::google::protobuf::uint32 timeremaining_;
  bool terminate_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgNexonPartnerUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMakeOffering : public ::google::protobuf::Message {
 public:
  CMsgMakeOffering();
  virtual ~CMsgMakeOffering();

  CMsgMakeOffering(const CMsgMakeOffering& from);

  inline CMsgMakeOffering& operator=(const CMsgMakeOffering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMakeOffering& default_instance();

  void Swap(CMsgMakeOffering* other);

  // implements Message ----------------------------------------------

  CMsgMakeOffering* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMakeOffering& from);
  void MergeFrom(const CMsgMakeOffering& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgMakeOffering)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgMakeOffering* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestOfferings : public ::google::protobuf::Message {
 public:
  CMsgRequestOfferings();
  virtual ~CMsgRequestOfferings();

  CMsgRequestOfferings(const CMsgRequestOfferings& from);

  inline CMsgRequestOfferings& operator=(const CMsgRequestOfferings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestOfferings& default_instance();

  void Swap(CMsgRequestOfferings* other);

  // implements Message ----------------------------------------------

  CMsgRequestOfferings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestOfferings& from);
  void MergeFrom(const CMsgRequestOfferings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgRequestOfferings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestOfferings* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestOfferingsResponse_NewYearsOffering : public ::google::protobuf::Message {
 public:
  CMsgRequestOfferingsResponse_NewYearsOffering();
  virtual ~CMsgRequestOfferingsResponse_NewYearsOffering();

  CMsgRequestOfferingsResponse_NewYearsOffering(const CMsgRequestOfferingsResponse_NewYearsOffering& from);

  inline CMsgRequestOfferingsResponse_NewYearsOffering& operator=(const CMsgRequestOfferingsResponse_NewYearsOffering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestOfferingsResponse_NewYearsOffering& default_instance();

  void Swap(CMsgRequestOfferingsResponse_NewYearsOffering* other);

  // implements Message ----------------------------------------------

  CMsgRequestOfferingsResponse_NewYearsOffering* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestOfferingsResponse_NewYearsOffering& from);
  void MergeFrom(const CMsgRequestOfferingsResponse_NewYearsOffering& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint64 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgRequestOfferingsResponse.NewYearsOffering)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestOfferingsResponse_NewYearsOffering* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestOfferingsResponse : public ::google::protobuf::Message {
 public:
  CMsgRequestOfferingsResponse();
  virtual ~CMsgRequestOfferingsResponse();

  CMsgRequestOfferingsResponse(const CMsgRequestOfferingsResponse& from);

  inline CMsgRequestOfferingsResponse& operator=(const CMsgRequestOfferingsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestOfferingsResponse& default_instance();

  void Swap(CMsgRequestOfferingsResponse* other);

  // implements Message ----------------------------------------------

  CMsgRequestOfferingsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestOfferingsResponse& from);
  void MergeFrom(const CMsgRequestOfferingsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgRequestOfferingsResponse_NewYearsOffering NewYearsOffering;

  // accessors -------------------------------------------------------

  // repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
  inline int offerings_size() const;
  inline void clear_offerings();
  static const int kOfferingsFieldNumber = 1;
  inline const ::CMsgRequestOfferingsResponse_NewYearsOffering& offerings(int index) const;
  inline ::CMsgRequestOfferingsResponse_NewYearsOffering* mutable_offerings(int index);
  inline ::CMsgRequestOfferingsResponse_NewYearsOffering* add_offerings();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgRequestOfferingsResponse_NewYearsOffering >&
      offerings() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgRequestOfferingsResponse_NewYearsOffering >*
      mutable_offerings();

  // optional bool completed = 2;
  inline bool has_completed() const;
  inline void clear_completed();
  static const int kCompletedFieldNumber = 2;
  inline bool completed() const;
  inline void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:CMsgRequestOfferingsResponse)
 private:
  inline void set_has_completed();
  inline void clear_has_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgRequestOfferingsResponse_NewYearsOffering > offerings_;
  bool completed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestOfferingsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPCBangTimedReward : public ::google::protobuf::Message {
 public:
  CMsgDOTAPCBangTimedReward();
  virtual ~CMsgDOTAPCBangTimedReward();

  CMsgDOTAPCBangTimedReward(const CMsgDOTAPCBangTimedReward& from);

  inline CMsgDOTAPCBangTimedReward& operator=(const CMsgDOTAPCBangTimedReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPCBangTimedReward& default_instance();

  void Swap(CMsgDOTAPCBangTimedReward* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPCBangTimedReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPCBangTimedReward& from);
  void MergeFrom(const CMsgDOTAPCBangTimedReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona = 1;
  inline bool has_persona() const;
  inline void clear_persona();
  static const int kPersonaFieldNumber = 1;
  inline const ::std::string& persona() const;
  inline void set_persona(const ::std::string& value);
  inline void set_persona(const char* value);
  inline void set_persona(const char* value, size_t size);
  inline ::std::string* mutable_persona();
  inline ::std::string* release_persona();
  inline void set_allocated_persona(::std::string* persona);

  // optional uint32 itemdef = 2;
  inline bool has_itemdef() const;
  inline void clear_itemdef();
  static const int kItemdefFieldNumber = 2;
  inline ::google::protobuf::uint32 itemdef() const;
  inline void set_itemdef(::google::protobuf::uint32 value);

  // optional string pcbangname = 3;
  inline bool has_pcbangname() const;
  inline void clear_pcbangname();
  static const int kPcbangnameFieldNumber = 3;
  inline const ::std::string& pcbangname() const;
  inline void set_pcbangname(const ::std::string& value);
  inline void set_pcbangname(const char* value);
  inline void set_pcbangname(const char* value, size_t size);
  inline ::std::string* mutable_pcbangname();
  inline ::std::string* release_pcbangname();
  inline void set_allocated_pcbangname(::std::string* pcbangname);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPCBangTimedReward)
 private:
  inline void set_has_persona();
  inline void clear_has_persona();
  inline void set_has_itemdef();
  inline void clear_has_itemdef();
  inline void set_has_pcbangname();
  inline void clear_has_pcbangname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* persona_;
  ::std::string* pcbangname_;
  ::google::protobuf::uint32 itemdef_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPCBangTimedReward* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumInGamePredictionResults_PredictionResult : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumInGamePredictionResults_PredictionResult();
  virtual ~CMsgDOTACompendiumInGamePredictionResults_PredictionResult();

  CMsgDOTACompendiumInGamePredictionResults_PredictionResult(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);

  inline CMsgDOTACompendiumInGamePredictionResults_PredictionResult& operator=(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& default_instance();

  void Swap(CMsgDOTACompendiumInGamePredictionResults_PredictionResult* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumInGamePredictionResults_PredictionResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);
  void MergeFrom(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  inline bool has_prediction_id() const;
  inline void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 prediction_id() const;
  inline void set_prediction_id(::google::protobuf::uint32 value);

  // optional uint32 prediction_value = 2;
  inline bool has_prediction_value() const;
  inline void clear_prediction_value();
  static const int kPredictionValueFieldNumber = 2;
  inline ::google::protobuf::uint32 prediction_value() const;
  inline void set_prediction_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumInGamePredictionResults.PredictionResult)
 private:
  inline void set_has_prediction_id();
  inline void clear_has_prediction_id();
  inline void set_has_prediction_value();
  inline void clear_has_prediction_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  ::google::protobuf::uint32 prediction_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumInGamePredictionResults_PredictionResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumInGamePredictionResults : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumInGamePredictionResults();
  virtual ~CMsgDOTACompendiumInGamePredictionResults();

  CMsgDOTACompendiumInGamePredictionResults(const CMsgDOTACompendiumInGamePredictionResults& from);

  inline CMsgDOTACompendiumInGamePredictionResults& operator=(const CMsgDOTACompendiumInGamePredictionResults& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumInGamePredictionResults& default_instance();

  void Swap(CMsgDOTACompendiumInGamePredictionResults* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumInGamePredictionResults* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumInGamePredictionResults& from);
  void MergeFrom(const CMsgDOTACompendiumInGamePredictionResults& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTACompendiumInGamePredictionResults_PredictionResult PredictionResult;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTACompendiumInGamePredictionResults.PredictionResult results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline const ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult& results(int index) const;
  inline ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* mutable_results(int index);
  inline ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >*
      mutable_results();

  // optional uint32 league_id = 2;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional bool predictions_closed = 3;
  inline bool has_predictions_closed() const;
  inline void clear_predictions_closed();
  static const int kPredictionsClosedFieldNumber = 3;
  inline bool predictions_closed() const;
  inline void set_predictions_closed(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumInGamePredictionResults)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_predictions_closed();
  inline void clear_has_predictions_closed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult > results_;
  ::google::protobuf::uint32 league_id_;
  bool predictions_closed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumInGamePredictionResults* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePrediction_Prediction : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction();
  virtual ~CMsgClientToGCSelectCompendiumInGamePrediction_Prediction();

  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);

  inline CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& operator=(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& default_instance();

  void Swap(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  inline bool has_prediction_id() const;
  inline void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 prediction_id() const;
  inline void set_prediction_id(::google::protobuf::uint32 value);

  // optional uint32 prediction_value = 2;
  inline bool has_prediction_value() const;
  inline void clear_prediction_value();
  static const int kPredictionValueFieldNumber = 2;
  inline ::google::protobuf::uint32 prediction_value() const;
  inline void set_prediction_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSelectCompendiumInGamePrediction.Prediction)
 private:
  inline void set_has_prediction_id();
  inline void clear_has_prediction_id();
  inline void set_has_prediction_value();
  inline void clear_has_prediction_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  ::google::protobuf::uint32 prediction_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePrediction : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSelectCompendiumInGamePrediction();
  virtual ~CMsgClientToGCSelectCompendiumInGamePrediction();

  CMsgClientToGCSelectCompendiumInGamePrediction(const CMsgClientToGCSelectCompendiumInGamePrediction& from);

  inline CMsgClientToGCSelectCompendiumInGamePrediction& operator=(const CMsgClientToGCSelectCompendiumInGamePrediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSelectCompendiumInGamePrediction& default_instance();

  void Swap(CMsgClientToGCSelectCompendiumInGamePrediction* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSelectCompendiumInGamePrediction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePrediction& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePrediction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSelectCompendiumInGamePrediction_Prediction Prediction;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // repeated .CMsgClientToGCSelectCompendiumInGamePrediction.Prediction predictions = 2;
  inline int predictions_size() const;
  inline void clear_predictions();
  static const int kPredictionsFieldNumber = 2;
  inline const ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& predictions(int index) const;
  inline ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* mutable_predictions(int index);
  inline ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* add_predictions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >&
      predictions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >*
      mutable_predictions();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSelectCompendiumInGamePrediction)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction > predictions_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSelectCompendiumInGamePrediction* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePredictionResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSelectCompendiumInGamePredictionResponse();
  virtual ~CMsgClientToGCSelectCompendiumInGamePredictionResponse();

  CMsgClientToGCSelectCompendiumInGamePredictionResponse(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);

  inline CMsgClientToGCSelectCompendiumInGamePredictionResponse& operator=(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSelectCompendiumInGamePredictionResponse& default_instance();

  void Swap(CMsgClientToGCSelectCompendiumInGamePredictionResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSelectCompendiumInGamePredictionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult EResult;
  static const EResult SUCCESS = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS;
  static const EResult INVALID_MATCH = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_INVALID_MATCH;
  static const EResult PREDICTIONS_ARE_CLOSED = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_PREDICTIONS_ARE_CLOSED;
  static const EResult OTHER_ERROR = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgClientToGCSelectCompendiumInGamePredictionResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult result() const;
  inline void set_result(::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSelectCompendiumInGamePredictionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSelectCompendiumInGamePredictionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCOpenPlayerCardPack : public ::google::protobuf::Message {
 public:
  CMsgClientToGCOpenPlayerCardPack();
  virtual ~CMsgClientToGCOpenPlayerCardPack();

  CMsgClientToGCOpenPlayerCardPack(const CMsgClientToGCOpenPlayerCardPack& from);

  inline CMsgClientToGCOpenPlayerCardPack& operator=(const CMsgClientToGCOpenPlayerCardPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCOpenPlayerCardPack& default_instance();

  void Swap(CMsgClientToGCOpenPlayerCardPack* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCOpenPlayerCardPack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCOpenPlayerCardPack& from);
  void MergeFrom(const CMsgClientToGCOpenPlayerCardPack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_card_pack_item_id = 1;
  inline bool has_player_card_pack_item_id() const;
  inline void clear_player_card_pack_item_id();
  static const int kPlayerCardPackItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_card_pack_item_id() const;
  inline void set_player_card_pack_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCOpenPlayerCardPack)
 private:
  inline void set_has_player_card_pack_item_id();
  inline void clear_has_player_card_pack_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 player_card_pack_item_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCOpenPlayerCardPack* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCOpenPlayerCardPackResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCOpenPlayerCardPackResponse();
  virtual ~CMsgClientToGCOpenPlayerCardPackResponse();

  CMsgClientToGCOpenPlayerCardPackResponse(const CMsgClientToGCOpenPlayerCardPackResponse& from);

  inline CMsgClientToGCOpenPlayerCardPackResponse& operator=(const CMsgClientToGCOpenPlayerCardPackResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCOpenPlayerCardPackResponse& default_instance();

  void Swap(CMsgClientToGCOpenPlayerCardPackResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCOpenPlayerCardPackResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCOpenPlayerCardPackResponse& from);
  void MergeFrom(const CMsgClientToGCOpenPlayerCardPackResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCOpenPlayerCardPackResponse_Result Result;
  static const Result SUCCESS = CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL = CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_FAILED_TO_FIND_PACK = CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_TO_FIND_PACK;
  static const Result ERROR_ITEM_NOT_CARD_PACK = CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_ITEM_NOT_CARD_PACK;
  static const Result ERROR_FAILED_CARD_CREATE = CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgClientToGCOpenPlayerCardPackResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgClientToGCOpenPlayerCardPackResponse_Result result() const;
  inline void set_result(::CMsgClientToGCOpenPlayerCardPackResponse_Result value);

  // repeated uint64 player_card_item_ids = 2;
  inline int player_card_item_ids_size() const;
  inline void clear_player_card_item_ids();
  static const int kPlayerCardItemIdsFieldNumber = 2;
  inline ::google::protobuf::uint64 player_card_item_ids(int index) const;
  inline void set_player_card_item_ids(int index, ::google::protobuf::uint64 value);
  inline void add_player_card_item_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_card_item_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_card_item_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCOpenPlayerCardPackResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_card_item_ids_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCOpenPlayerCardPackResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecyclePlayerCard : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRecyclePlayerCard();
  virtual ~CMsgClientToGCRecyclePlayerCard();

  CMsgClientToGCRecyclePlayerCard(const CMsgClientToGCRecyclePlayerCard& from);

  inline CMsgClientToGCRecyclePlayerCard& operator=(const CMsgClientToGCRecyclePlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRecyclePlayerCard& default_instance();

  void Swap(CMsgClientToGCRecyclePlayerCard* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRecyclePlayerCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRecyclePlayerCard& from);
  void MergeFrom(const CMsgClientToGCRecyclePlayerCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_card_item_id = 1;
  inline bool has_player_card_item_id() const;
  inline void clear_player_card_item_id();
  static const int kPlayerCardItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_card_item_id() const;
  inline void set_player_card_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRecyclePlayerCard)
 private:
  inline void set_has_player_card_item_id();
  inline void clear_has_player_card_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 player_card_item_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRecyclePlayerCard* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecyclePlayerCardResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRecyclePlayerCardResponse();
  virtual ~CMsgClientToGCRecyclePlayerCardResponse();

  CMsgClientToGCRecyclePlayerCardResponse(const CMsgClientToGCRecyclePlayerCardResponse& from);

  inline CMsgClientToGCRecyclePlayerCardResponse& operator=(const CMsgClientToGCRecyclePlayerCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRecyclePlayerCardResponse& default_instance();

  void Swap(CMsgClientToGCRecyclePlayerCardResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRecyclePlayerCardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRecyclePlayerCardResponse& from);
  void MergeFrom(const CMsgClientToGCRecyclePlayerCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRecyclePlayerCardResponse_Result Result;
  static const Result SUCCESS = CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_FAILED_TO_FIND_PLAYER_CARD = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_TO_FIND_PLAYER_CARD;
  static const Result ERROR_ITEM_NOT_PLAYER_CARD = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_ITEM_NOT_PLAYER_CARD;
  static const Result ERROR_FAILED_DUST_CARD_CREATE = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_DUST_CARD_CREATE;
  static const Result ERROR_CARD_LOCKED = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgClientToGCRecyclePlayerCardResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgClientToGCRecyclePlayerCardResponse_Result result() const;
  inline void set_result(::CMsgClientToGCRecyclePlayerCardResponse_Result value);

  // optional uint32 dust_amount = 2;
  inline bool has_dust_amount() const;
  inline void clear_dust_amount();
  static const int kDustAmountFieldNumber = 2;
  inline ::google::protobuf::uint32 dust_amount() const;
  inline void set_dust_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRecyclePlayerCardResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_dust_amount();
  inline void clear_has_dust_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  ::google::protobuf::uint32 dust_amount_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRecyclePlayerCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreatePlayerCardPack : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreatePlayerCardPack();
  virtual ~CMsgClientToGCCreatePlayerCardPack();

  CMsgClientToGCCreatePlayerCardPack(const CMsgClientToGCCreatePlayerCardPack& from);

  inline CMsgClientToGCCreatePlayerCardPack& operator=(const CMsgClientToGCCreatePlayerCardPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreatePlayerCardPack& default_instance();

  void Swap(CMsgClientToGCCreatePlayerCardPack* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreatePlayerCardPack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreatePlayerCardPack& from);
  void MergeFrom(const CMsgClientToGCCreatePlayerCardPack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 card_dust_item_id = 1;
  inline bool has_card_dust_item_id() const;
  inline void clear_card_dust_item_id();
  static const int kCardDustItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 card_dust_item_id() const;
  inline void set_card_dust_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreatePlayerCardPack)
 private:
  inline void set_has_card_dust_item_id();
  inline void clear_has_card_dust_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 card_dust_item_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreatePlayerCardPack* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreatePlayerCardPackResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreatePlayerCardPackResponse();
  virtual ~CMsgClientToGCCreatePlayerCardPackResponse();

  CMsgClientToGCCreatePlayerCardPackResponse(const CMsgClientToGCCreatePlayerCardPackResponse& from);

  inline CMsgClientToGCCreatePlayerCardPackResponse& operator=(const CMsgClientToGCCreatePlayerCardPackResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreatePlayerCardPackResponse& default_instance();

  void Swap(CMsgClientToGCCreatePlayerCardPackResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreatePlayerCardPackResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreatePlayerCardPackResponse& from);
  void MergeFrom(const CMsgClientToGCCreatePlayerCardPackResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreatePlayerCardPackResponse_Result Result;
  static const Result SUCCESS = CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL = CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_INSUFFICIENT_DUST = CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INSUFFICIENT_DUST;
  static const Result ERROR_ITEM_NOT_DUST_ITEM = CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_ITEM_NOT_DUST_ITEM;
  static const Result ERROR_FAILED_CARD_PACK_CREATE = CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgClientToGCCreatePlayerCardPackResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgClientToGCCreatePlayerCardPackResponse_Result result() const;
  inline void set_result(::CMsgClientToGCCreatePlayerCardPackResponse_Result value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreatePlayerCardPackResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreatePlayerCardPackResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Questlines : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Questlines();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Questlines();

  CMsgGCToClientBattlePassRollup_International2016_Questlines(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Questlines& operator=(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Questlines& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Questlines* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_Questlines* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 onestar = 2;
  inline bool has_onestar() const;
  inline void clear_onestar();
  static const int kOnestarFieldNumber = 2;
  inline ::google::protobuf::uint32 onestar() const;
  inline void set_onestar(::google::protobuf::uint32 value);

  // optional uint32 twostar = 3;
  inline bool has_twostar() const;
  inline void clear_twostar();
  static const int kTwostarFieldNumber = 3;
  inline ::google::protobuf::uint32 twostar() const;
  inline void set_twostar(::google::protobuf::uint32 value);

  // optional uint32 threestar = 4;
  inline bool has_threestar() const;
  inline void clear_threestar();
  static const int kThreestarFieldNumber = 4;
  inline ::google::protobuf::uint32 threestar() const;
  inline void set_threestar(::google::protobuf::uint32 value);

  // optional uint32 total = 5;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 5;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.Questlines)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_onestar();
  inline void clear_has_onestar();
  inline void set_has_twostar();
  inline void clear_has_twostar();
  inline void set_has_threestar();
  inline void clear_has_threestar();
  inline void set_has_total();
  inline void clear_has_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 onestar_;
  ::google::protobuf::uint32 twostar_;
  ::google::protobuf::uint32 threestar_;
  ::google::protobuf::uint32 total_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_Questlines* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Wagering : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Wagering();

  CMsgGCToClientBattlePassRollup_International2016_Wagering(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Wagering& operator=(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Wagering& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Wagering* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_Wagering* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  inline bool has_total_wagered() const;
  inline void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  inline ::google::protobuf::uint32 total_wagered() const;
  inline void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  inline bool has_total_won() const;
  inline void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  inline ::google::protobuf::uint32 total_won() const;
  inline void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  inline bool has_average_won() const;
  inline void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  inline ::google::protobuf::uint32 average_won() const;
  inline void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  inline bool has_success_rate() const;
  inline void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  inline ::google::protobuf::uint32 success_rate() const;
  inline void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  inline bool has_total_tips() const;
  inline void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  inline ::google::protobuf::uint32 total_tips() const;
  inline void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.Wagering)
 private:
  inline void set_has_total_wagered();
  inline void clear_has_total_wagered();
  inline void set_has_total_won();
  inline void clear_has_total_won();
  inline void set_has_average_won();
  inline void clear_has_average_won();
  inline void set_has_success_rate();
  inline void clear_has_success_rate();
  inline void set_has_total_tips();
  inline void clear_has_total_tips();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_Wagering* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Achievements : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Achievements();

  CMsgGCToClientBattlePassRollup_International2016_Achievements(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Achievements& operator=(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Achievements& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Achievements* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_Achievements* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  inline bool has_completed() const;
  inline void clear_completed();
  static const int kCompletedFieldNumber = 1;
  inline ::google::protobuf::uint32 completed() const;
  inline void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 2;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 3;
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.Achievements)
 private:
  inline void set_has_completed();
  inline void clear_has_completed();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_Achievements* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_BattleCup : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_BattleCup();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_BattleCup();

  CMsgGCToClientBattlePassRollup_International2016_BattleCup(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);

  inline CMsgGCToClientBattlePassRollup_International2016_BattleCup& operator=(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_BattleCup& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_BattleCup* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_BattleCup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wins = 1;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 1;
  inline ::google::protobuf::uint32 wins() const;
  inline void set_wins(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.BattleCup)
 private:
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_BattleCup* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Predictions : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Predictions();

  CMsgGCToClientBattlePassRollup_International2016_Predictions(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Predictions& operator=(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Predictions& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Predictions* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_Predictions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  inline bool has_correct() const;
  inline void clear_correct();
  static const int kCorrectFieldNumber = 1;
  inline ::google::protobuf::uint32 correct() const;
  inline void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 2;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 3;
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.Predictions)
 private:
  inline void set_has_correct();
  inline void clear_has_correct();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_Predictions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Bracket : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Bracket();

  CMsgGCToClientBattlePassRollup_International2016_Bracket(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Bracket& operator=(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Bracket& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Bracket* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_Bracket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  inline bool has_correct() const;
  inline void clear_correct();
  static const int kCorrectFieldNumber = 1;
  inline ::google::protobuf::uint32 correct() const;
  inline void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 2;
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.Bracket)
 private:
  inline void set_has_correct();
  inline void clear_has_correct();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_Bracket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_PlayerCard : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_PlayerCard();

  CMsgGCToClientBattlePassRollup_International2016_PlayerCard(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_International2016_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_PlayerCard* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_PlayerCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.PlayerCard)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_PlayerCard* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  inline float total_score() const;
  inline void set_total_score(float value);

  // optional float percentile = 2;
  inline bool has_percentile() const;
  inline void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  inline float percentile() const;
  inline void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge)
 private:
  inline void set_has_total_score();
  inline void clear_has_total_score();
  inline void set_has_percentile();
  inline void clear_has_percentile();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float total_score_;
  float percentile_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016 : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollup_International2016();
  virtual ~CMsgGCToClientBattlePassRollup_International2016();

  CMsgGCToClientBattlePassRollup_International2016(const CMsgGCToClientBattlePassRollup_International2016& from);

  inline CMsgGCToClientBattlePassRollup_International2016& operator=(const CMsgGCToClientBattlePassRollup_International2016& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016& default_instance();

  void Swap(CMsgGCToClientBattlePassRollup_International2016* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollup_International2016* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_International2016_Questlines Questlines;
  typedef CMsgGCToClientBattlePassRollup_International2016_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_International2016_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_International2016_BattleCup BattleCup;
  typedef CMsgGCToClientBattlePassRollup_International2016_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_International2016_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_International2016_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // optional uint32 battle_pass_level = 1;
  inline bool has_battle_pass_level() const;
  inline void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 battle_pass_level() const;
  inline void set_battle_pass_level(::google::protobuf::uint32 value);

  // repeated .CMsgGCToClientBattlePassRollup_International2016.Questlines questlines = 2;
  inline int questlines_size() const;
  inline void clear_questlines();
  static const int kQuestlinesFieldNumber = 2;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_Questlines& questlines(int index) const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_Questlines* mutable_questlines(int index);
  inline ::CMsgGCToClientBattlePassRollup_International2016_Questlines* add_questlines();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_Questlines >&
      questlines() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_Questlines >*
      mutable_questlines();

  // optional .CMsgGCToClientBattlePassRollup_International2016.Wagering wagering = 3;
  inline bool has_wagering() const;
  inline void clear_wagering();
  static const int kWageringFieldNumber = 3;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_Wagering& wagering() const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_Wagering* mutable_wagering();
  inline ::CMsgGCToClientBattlePassRollup_International2016_Wagering* release_wagering();
  inline void set_allocated_wagering(::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering);

  // optional .CMsgGCToClientBattlePassRollup_International2016.Achievements achievements = 4;
  inline bool has_achievements() const;
  inline void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_Achievements& achievements() const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_Achievements* mutable_achievements();
  inline ::CMsgGCToClientBattlePassRollup_International2016_Achievements* release_achievements();
  inline void set_allocated_achievements(::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements);

  // optional .CMsgGCToClientBattlePassRollup_International2016.BattleCup battle_cup = 5;
  inline bool has_battle_cup() const;
  inline void clear_battle_cup();
  static const int kBattleCupFieldNumber = 5;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_BattleCup& battle_cup() const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_BattleCup* mutable_battle_cup();
  inline ::CMsgGCToClientBattlePassRollup_International2016_BattleCup* release_battle_cup();
  inline void set_allocated_battle_cup(::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup);

  // optional .CMsgGCToClientBattlePassRollup_International2016.Predictions predictions = 6;
  inline bool has_predictions() const;
  inline void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_Predictions& predictions() const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_Predictions* mutable_predictions();
  inline ::CMsgGCToClientBattlePassRollup_International2016_Predictions* release_predictions();
  inline void set_allocated_predictions(::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions);

  // optional .CMsgGCToClientBattlePassRollup_International2016.Bracket bracket = 7;
  inline bool has_bracket() const;
  inline void clear_bracket();
  static const int kBracketFieldNumber = 7;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_Bracket& bracket() const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_Bracket* mutable_bracket();
  inline ::CMsgGCToClientBattlePassRollup_International2016_Bracket* release_bracket();
  inline void set_allocated_bracket(::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket);

  // repeated .CMsgGCToClientBattlePassRollup_International2016.PlayerCard player_cards = 8;
  inline int player_cards_size() const;
  inline void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard& player_cards(int index) const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* mutable_player_cards(int index);
  inline ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* add_player_cards();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >&
      player_cards() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >*
      mutable_player_cards();

  // optional .CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge fantasy_challenge = 9;
  inline bool has_fantasy_challenge() const;
  inline void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  inline const ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& fantasy_challenge() const;
  inline ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* mutable_fantasy_challenge();
  inline ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* release_fantasy_challenge();
  inline void set_allocated_fantasy_challenge(::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollup_International2016)
 private:
  inline void set_has_battle_pass_level();
  inline void clear_has_battle_pass_level();
  inline void set_has_wagering();
  inline void clear_has_wagering();
  inline void set_has_achievements();
  inline void clear_has_achievements();
  inline void set_has_battle_cup();
  inline void clear_has_battle_cup();
  inline void set_has_predictions();
  inline void clear_has_predictions();
  inline void set_has_bracket();
  inline void clear_has_bracket();
  inline void set_has_fantasy_challenge();
  inline void clear_has_fantasy_challenge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_Questlines > questlines_;
  ::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering_;
  ::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements_;
  ::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup_;
  ::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions_;
  ::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard > player_cards_;
  ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollup_International2016* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupRequest : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollupRequest();
  virtual ~CMsgGCToClientBattlePassRollupRequest();

  CMsgGCToClientBattlePassRollupRequest(const CMsgGCToClientBattlePassRollupRequest& from);

  inline CMsgGCToClientBattlePassRollupRequest& operator=(const CMsgGCToClientBattlePassRollupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupRequest& default_instance();

  void Swap(CMsgGCToClientBattlePassRollupRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollupRequest& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollupRequest)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollupRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollupResponse();
  virtual ~CMsgGCToClientBattlePassRollupResponse();

  CMsgGCToClientBattlePassRollupResponse(const CMsgGCToClientBattlePassRollupResponse& from);

  inline CMsgGCToClientBattlePassRollupResponse& operator=(const CMsgGCToClientBattlePassRollupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupResponse& default_instance();

  void Swap(CMsgGCToClientBattlePassRollupResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollupResponse& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgGCToClientBattlePassRollup_International2016 event_ti6 = 1;
  inline bool has_event_ti6() const;
  inline void clear_event_ti6();
  static const int kEventTi6FieldNumber = 1;
  inline const ::CMsgGCToClientBattlePassRollup_International2016& event_ti6() const;
  inline ::CMsgGCToClientBattlePassRollup_International2016* mutable_event_ti6();
  inline ::CMsgGCToClientBattlePassRollup_International2016* release_event_ti6();
  inline void set_allocated_event_ti6(::CMsgGCToClientBattlePassRollup_International2016* event_ti6);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollupResponse)
 private:
  inline void set_has_event_ti6();
  inline void clear_has_event_ti6();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgGCToClientBattlePassRollup_International2016* event_ti6_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollupResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupListRequest : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollupListRequest();
  virtual ~CMsgGCToClientBattlePassRollupListRequest();

  CMsgGCToClientBattlePassRollupListRequest(const CMsgGCToClientBattlePassRollupListRequest& from);

  inline CMsgGCToClientBattlePassRollupListRequest& operator=(const CMsgGCToClientBattlePassRollupListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupListRequest& default_instance();

  void Swap(CMsgGCToClientBattlePassRollupListRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollupListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollupListRequest& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollupListRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollupListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupListResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientBattlePassRollupListResponse();
  virtual ~CMsgGCToClientBattlePassRollupListResponse();

  CMsgGCToClientBattlePassRollupListResponse(const CMsgGCToClientBattlePassRollupListResponse& from);

  inline CMsgGCToClientBattlePassRollupListResponse& operator=(const CMsgGCToClientBattlePassRollupListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupListResponse& default_instance();

  void Swap(CMsgGCToClientBattlePassRollupListResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientBattlePassRollupListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientBattlePassRollupListResponse& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 event_id = 1;
  inline int event_id_size() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id(int index) const;
  inline void set_event_id(int index, ::google::protobuf::uint32 value);
  inline void add_event_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      event_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_event_id();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBattlePassRollupListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientBattlePassRollupListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTransferSeasonalMMRRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTransferSeasonalMMRRequest();
  virtual ~CMsgClientToGCTransferSeasonalMMRRequest();

  CMsgClientToGCTransferSeasonalMMRRequest(const CMsgClientToGCTransferSeasonalMMRRequest& from);

  inline CMsgClientToGCTransferSeasonalMMRRequest& operator=(const CMsgClientToGCTransferSeasonalMMRRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTransferSeasonalMMRRequest& default_instance();

  void Swap(CMsgClientToGCTransferSeasonalMMRRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTransferSeasonalMMRRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTransferSeasonalMMRRequest& from);
  void MergeFrom(const CMsgClientToGCTransferSeasonalMMRRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_party = 1;
  inline bool has_is_party() const;
  inline void clear_is_party();
  static const int kIsPartyFieldNumber = 1;
  inline bool is_party() const;
  inline void set_is_party(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTransferSeasonalMMRRequest)
 private:
  inline void set_has_is_party();
  inline void clear_has_is_party();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_party_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTransferSeasonalMMRRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTransferSeasonalMMRResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTransferSeasonalMMRResponse();
  virtual ~CMsgClientToGCTransferSeasonalMMRResponse();

  CMsgClientToGCTransferSeasonalMMRResponse(const CMsgClientToGCTransferSeasonalMMRResponse& from);

  inline CMsgClientToGCTransferSeasonalMMRResponse& operator=(const CMsgClientToGCTransferSeasonalMMRResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTransferSeasonalMMRResponse& default_instance();

  void Swap(CMsgClientToGCTransferSeasonalMMRResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTransferSeasonalMMRResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTransferSeasonalMMRResponse& from);
  void MergeFrom(const CMsgClientToGCTransferSeasonalMMRResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTransferSeasonalMMRResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTransferSeasonalMMRResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientPlaytestStatus : public ::google::protobuf::Message {
 public:
  CMsgGCToClientPlaytestStatus();
  virtual ~CMsgGCToClientPlaytestStatus();

  CMsgGCToClientPlaytestStatus(const CMsgGCToClientPlaytestStatus& from);

  inline CMsgGCToClientPlaytestStatus& operator=(const CMsgGCToClientPlaytestStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientPlaytestStatus& default_instance();

  void Swap(CMsgGCToClientPlaytestStatus* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientPlaytestStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientPlaytestStatus& from);
  void MergeFrom(const CMsgGCToClientPlaytestStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool active = 1;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 1;
  inline bool active() const;
  inline void set_active(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPlaytestStatus)
 private:
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool active_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientPlaytestStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPlaytest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCJoinPlaytest();
  virtual ~CMsgClientToGCJoinPlaytest();

  CMsgClientToGCJoinPlaytest(const CMsgClientToGCJoinPlaytest& from);

  inline CMsgClientToGCJoinPlaytest& operator=(const CMsgClientToGCJoinPlaytest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCJoinPlaytest& default_instance();

  void Swap(CMsgClientToGCJoinPlaytest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCJoinPlaytest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCJoinPlaytest& from);
  void MergeFrom(const CMsgClientToGCJoinPlaytest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 client_version = 1;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCJoinPlaytest)
 private:
  inline void set_has_client_version();
  inline void clear_has_client_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCJoinPlaytest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPlaytestResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCJoinPlaytestResponse();
  virtual ~CMsgClientToGCJoinPlaytestResponse();

  CMsgClientToGCJoinPlaytestResponse(const CMsgClientToGCJoinPlaytestResponse& from);

  inline CMsgClientToGCJoinPlaytestResponse& operator=(const CMsgClientToGCJoinPlaytestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCJoinPlaytestResponse& default_instance();

  void Swap(CMsgClientToGCJoinPlaytestResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCJoinPlaytestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCJoinPlaytestResponse& from);
  void MergeFrom(const CMsgClientToGCJoinPlaytestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCJoinPlaytestResponse)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCJoinPlaytestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEventInvite_Team : public ::google::protobuf::Message {
 public:
  CMsgDOTAEventInvite_Team();
  virtual ~CMsgDOTAEventInvite_Team();

  CMsgDOTAEventInvite_Team(const CMsgDOTAEventInvite_Team& from);

  inline CMsgDOTAEventInvite_Team& operator=(const CMsgDOTAEventInvite_Team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEventInvite_Team& default_instance();

  void Swap(CMsgDOTAEventInvite_Team* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEventInvite_Team* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEventInvite_Team& from);
  void MergeFrom(const CMsgDOTAEventInvite_Team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 announcement_date = 2;
  inline bool has_announcement_date() const;
  inline void clear_announcement_date();
  static const int kAnnouncementDateFieldNumber = 2;
  inline ::google::protobuf::uint32 announcement_date() const;
  inline void set_announcement_date(::google::protobuf::uint32 value);

  // optional string team_name = 3;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 3;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional uint32 invite_type = 4;
  inline bool has_invite_type() const;
  inline void clear_invite_type();
  static const int kInviteTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 invite_type() const;
  inline void set_invite_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAEventInvite.Team)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_announcement_date();
  inline void clear_has_announcement_date();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_invite_type();
  inline void clear_has_invite_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 announcement_date_;
  ::std::string* team_name_;
  ::google::protobuf::uint32 invite_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEventInvite_Team* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEventInvite : public ::google::protobuf::Message {
 public:
  CMsgDOTAEventInvite();
  virtual ~CMsgDOTAEventInvite();

  CMsgDOTAEventInvite(const CMsgDOTAEventInvite& from);

  inline CMsgDOTAEventInvite& operator=(const CMsgDOTAEventInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEventInvite& default_instance();

  void Swap(CMsgDOTAEventInvite* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEventInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEventInvite& from);
  void MergeFrom(const CMsgDOTAEventInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAEventInvite_Team Team;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAEventInvite.Team teams = 1;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 1;
  inline const ::CMsgDOTAEventInvite_Team& teams(int index) const;
  inline ::CMsgDOTAEventInvite_Team* mutable_teams(int index);
  inline ::CMsgDOTAEventInvite_Team* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAEventInvite_Team >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAEventInvite_Team >*
      mutable_teams();

  // @@protoc_insertion_point(class_scope:CMsgDOTAEventInvite)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAEventInvite_Team > teams_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEventInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetFavoriteTeam : public ::google::protobuf::Message {
 public:
  CMsgDOTASetFavoriteTeam();
  virtual ~CMsgDOTASetFavoriteTeam();

  CMsgDOTASetFavoriteTeam(const CMsgDOTASetFavoriteTeam& from);

  inline CMsgDOTASetFavoriteTeam& operator=(const CMsgDOTASetFavoriteTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetFavoriteTeam& default_instance();

  void Swap(CMsgDOTASetFavoriteTeam* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetFavoriteTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetFavoriteTeam& from);
  void MergeFrom(const CMsgDOTASetFavoriteTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetFavoriteTeam)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetFavoriteTeam* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgClientSuspended

// optional uint32 time_end = 1;
inline bool CMsgClientSuspended::has_time_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSuspended::set_has_time_end() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSuspended::clear_has_time_end() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSuspended::clear_time_end() {
  time_end_ = 0u;
  clear_has_time_end();
}
inline ::google::protobuf::uint32 CMsgClientSuspended::time_end() const {
  // @@protoc_insertion_point(field_get:CMsgClientSuspended.time_end)
  return time_end_;
}
inline void CMsgClientSuspended::set_time_end(::google::protobuf::uint32 value) {
  set_has_time_end();
  time_end_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientSuspended.time_end)
}

// -------------------------------------------------------------------

// CMsgRequestInternationalTicket

// -------------------------------------------------------------------

// CMsgBalancedShuffleLobby

// -------------------------------------------------------------------

// CMsgInitialQuestionnaireResponse

// optional uint32 initial_skill = 1;
inline bool CMsgInitialQuestionnaireResponse::has_initial_skill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgInitialQuestionnaireResponse::set_has_initial_skill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgInitialQuestionnaireResponse::clear_has_initial_skill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgInitialQuestionnaireResponse::clear_initial_skill() {
  initial_skill_ = 0u;
  clear_has_initial_skill();
}
inline ::google::protobuf::uint32 CMsgInitialQuestionnaireResponse::initial_skill() const {
  // @@protoc_insertion_point(field_get:CMsgInitialQuestionnaireResponse.initial_skill)
  return initial_skill_;
}
inline void CMsgInitialQuestionnaireResponse::set_initial_skill(::google::protobuf::uint32 value) {
  set_has_initial_skill();
  initial_skill_ = value;
  // @@protoc_insertion_point(field_set:CMsgInitialQuestionnaireResponse.initial_skill)
}

// -------------------------------------------------------------------

// CMsgDOTAPlayerMatchHistory

// repeated uint64 match_ids = 1;
inline int CMsgDOTAPlayerMatchHistory::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAPlayerMatchHistory::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerMatchHistory::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAPlayerMatchHistory::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPlayerMatchHistory.match_ids)
}
inline void CMsgDOTAPlayerMatchHistory::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAPlayerMatchHistory.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerMatchHistory::match_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerMatchHistory::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPlayerMatchHistory.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchHistoryFilter

// repeated uint64 match_ids = 1;
inline int CMsgDOTAMatchHistoryFilter::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAMatchHistoryFilter::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAMatchHistoryFilter::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchHistoryFilter.match_ids)
}
inline void CMsgDOTAMatchHistoryFilter::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchHistoryFilter.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAMatchHistoryFilter::match_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAMatchHistoryFilter::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchHistoryFilter.match_ids)
  return &match_ids_;
}

// optional uint64 newest_match_id_at_last_query = 2;
inline bool CMsgDOTAMatchHistoryFilter::has_newest_match_id_at_last_query() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::set_has_newest_match_id_at_last_query() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_has_newest_match_id_at_last_query() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_newest_match_id_at_last_query() {
  newest_match_id_at_last_query_ = GOOGLE_ULONGLONG(0);
  clear_has_newest_match_id_at_last_query();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::newest_match_id_at_last_query() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
  return newest_match_id_at_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_newest_match_id_at_last_query(::google::protobuf::uint64 value) {
  set_has_newest_match_id_at_last_query();
  newest_match_id_at_last_query_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
}

// optional uint32 time_last_query = 3;
inline bool CMsgDOTAMatchHistoryFilter::has_time_last_query() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::set_has_time_last_query() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_has_time_last_query() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_time_last_query() {
  time_last_query_ = 0u;
  clear_has_time_last_query();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchHistoryFilter::time_last_query() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchHistoryFilter.time_last_query)
  return time_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_time_last_query(::google::protobuf::uint32 value) {
  set_has_time_last_query();
  time_last_query_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchHistoryFilter.time_last_query)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatches

// optional uint32 hero_id = 2;
inline bool CMsgDOTARequestMatches::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestMatches::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestMatches::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.hero_id)
  return hero_id_;
}
inline void CMsgDOTARequestMatches::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.hero_id)
}

// optional uint32 game_mode = 3;
inline bool CMsgDOTARequestMatches::has_game_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_game_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestMatches::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestMatches::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.game_mode)
  return game_mode_;
}
inline void CMsgDOTARequestMatches::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.game_mode)
}

// optional fixed32 date_min = 6;
inline bool CMsgDOTARequestMatches::has_date_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_date_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatches::clear_has_date_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatches::clear_date_min() {
  date_min_ = 0u;
  clear_has_date_min();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.date_min)
  return date_min_;
}
inline void CMsgDOTARequestMatches::set_date_min(::google::protobuf::uint32 value) {
  set_has_date_min();
  date_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.date_min)
}

// optional fixed32 date_max = 7;
inline bool CMsgDOTARequestMatches::has_date_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_date_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARequestMatches::clear_has_date_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARequestMatches::clear_date_max() {
  date_max_ = 0u;
  clear_has_date_max();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_max() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.date_max)
  return date_max_;
}
inline void CMsgDOTARequestMatches::set_date_max(::google::protobuf::uint32 value) {
  set_has_date_max();
  date_max_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.date_max)
}

// optional uint32 matches_requested = 10;
inline bool CMsgDOTARequestMatches::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_matches_requested() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTARequestMatches::clear_has_matches_requested() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTARequestMatches::clear_matches_requested() {
  matches_requested_ = 0u;
  clear_has_matches_requested();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::matches_requested() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTARequestMatches::set_matches_requested(::google::protobuf::uint32 value) {
  set_has_matches_requested();
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.matches_requested)
}

// optional uint64 start_at_match_id = 11;
inline bool CMsgDOTARequestMatches::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_start_at_match_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTARequestMatches::clear_has_start_at_match_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTARequestMatches::clear_start_at_match_id() {
  start_at_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_start_at_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTARequestMatches::set_start_at_match_id(::google::protobuf::uint64 value) {
  set_has_start_at_match_id();
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.start_at_match_id)
}

// optional fixed32 min_players = 12;
inline bool CMsgDOTARequestMatches::has_min_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_min_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTARequestMatches::clear_has_min_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTARequestMatches::clear_min_players() {
  min_players_ = 0u;
  clear_has_min_players();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::min_players() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.min_players)
  return min_players_;
}
inline void CMsgDOTARequestMatches::set_min_players(::google::protobuf::uint32 value) {
  set_has_min_players();
  min_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.min_players)
}

// optional uint32 request_id = 13;
inline bool CMsgDOTARequestMatches::has_request_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_request_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTARequestMatches::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTARequestMatches::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatches::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.request_id)
}

// optional bool tournament_games_only = 14;
inline bool CMsgDOTARequestMatches::has_tournament_games_only() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_tournament_games_only() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTARequestMatches::clear_has_tournament_games_only() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTARequestMatches::clear_tournament_games_only() {
  tournament_games_only_ = false;
  clear_has_tournament_games_only();
}
inline bool CMsgDOTARequestMatches::tournament_games_only() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.tournament_games_only)
  return tournament_games_only_;
}
inline void CMsgDOTARequestMatches::set_tournament_games_only(bool value) {
  set_has_tournament_games_only();
  tournament_games_only_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.tournament_games_only)
}

// optional uint32 account_id = 15;
inline bool CMsgDOTARequestMatches::has_account_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_account_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTARequestMatches::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTARequestMatches::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.account_id)
  return account_id_;
}
inline void CMsgDOTARequestMatches::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.account_id)
}

// optional uint32 league_id = 16;
inline bool CMsgDOTARequestMatches::has_league_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_league_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTARequestMatches::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTARequestMatches::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.league_id)
  return league_id_;
}
inline void CMsgDOTARequestMatches::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.league_id)
}

// optional .CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
inline bool CMsgDOTARequestMatches::has_skill() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_skill() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTARequestMatches::clear_has_skill() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTARequestMatches::clear_skill() {
  skill_ = 0;
  clear_has_skill();
}
inline ::CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches::skill() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.skill)
  return static_cast< ::CMsgDOTARequestMatches_SkillLevel >(skill_);
}
inline void CMsgDOTARequestMatches::set_skill(::CMsgDOTARequestMatches_SkillLevel value) {
  assert(::CMsgDOTARequestMatches_SkillLevel_IsValid(value));
  set_has_skill();
  skill_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.skill)
}

// optional uint32 team_id = 18;
inline bool CMsgDOTARequestMatches::has_team_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_team_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTARequestMatches::clear_has_team_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTARequestMatches::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.team_id)
  return team_id_;
}
inline void CMsgDOTARequestMatches::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.team_id)
}

// optional uint64 custom_game_id = 20;
inline bool CMsgDOTARequestMatches::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTARequestMatches::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTARequestMatches::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTARequestMatches::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse_Series

// repeated .CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse_Series::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse_Series::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse_Series::matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse_Series::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestMatchesResponse.Series.matches)
  return &matches_;
}

// optional uint32 series_id = 2;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_has_series_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.Series.series_id)
  return series_id_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.Series.series_id)
}

// optional uint32 series_type = 3;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_has_series_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_has_series_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_type() {
  series_type_ = 0u;
  clear_has_series_type();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.Series.series_type)
  return series_type_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_type(::google::protobuf::uint32 value) {
  set_has_series_type();
  series_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.Series.series_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse

// repeated .CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTARequestMatchesResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestMatchesResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestMatchesResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestMatchesResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestMatchesResponse.matches)
  return &matches_;
}

// repeated .CMsgDOTARequestMatchesResponse.Series series = 2;
inline int CMsgDOTARequestMatchesResponse::series_size() const {
  return series_.size();
}
inline void CMsgDOTARequestMatchesResponse::clear_series() {
  series_.Clear();
}
inline const ::CMsgDOTARequestMatchesResponse_Series& CMsgDOTARequestMatchesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.series)
  return series_.Get(index);
}
inline ::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestMatchesResponse.series)
  return series_.Mutable(index);
}
inline ::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::add_series() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestMatchesResponse.series)
  return series_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >&
CMsgDOTARequestMatchesResponse::series() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestMatchesResponse.series)
  return series_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >*
CMsgDOTARequestMatchesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestMatchesResponse.series)
  return &series_;
}

// optional uint32 request_id = 3;
inline bool CMsgDOTARequestMatchesResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatchesResponse::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.request_id)
}

// optional uint32 total_results = 4;
inline bool CMsgDOTARequestMatchesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARequestMatchesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.total_results)
  return total_results_;
}
inline void CMsgDOTARequestMatchesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.total_results)
}

// optional uint32 results_remaining = 5;
inline bool CMsgDOTARequestMatchesResponse::has_results_remaining() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_results_remaining() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_results_remaining() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTARequestMatchesResponse::clear_results_remaining() {
  results_remaining_ = 0u;
  clear_has_results_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::results_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.results_remaining)
  return results_remaining_;
}
inline void CMsgDOTARequestMatchesResponse::set_results_remaining(::google::protobuf::uint32 value) {
  set_has_results_remaining();
  results_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.results_remaining)
}

// -------------------------------------------------------------------

// CMsgDOTAPopup

// optional .CMsgDOTAPopup.PopupID id = 1 [default = NONE];
inline bool CMsgDOTAPopup::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPopup::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPopup::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPopup::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::CMsgDOTAPopup_PopupID CMsgDOTAPopup::id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.id)
  return static_cast< ::CMsgDOTAPopup_PopupID >(id_);
}
inline void CMsgDOTAPopup::set_id(::CMsgDOTAPopup_PopupID value) {
  assert(::CMsgDOTAPopup_PopupID_IsValid(value));
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.id)
}

// optional string custom_text = 2;
inline bool CMsgDOTAPopup::has_custom_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPopup::set_has_custom_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPopup::clear_has_custom_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPopup::clear_custom_text() {
  if (custom_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_->clear();
  }
  clear_has_custom_text();
}
inline const ::std::string& CMsgDOTAPopup::custom_text() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.custom_text)
  return *custom_text_;
}
inline void CMsgDOTAPopup::set_custom_text(const ::std::string& value) {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  custom_text_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.custom_text)
}
inline void CMsgDOTAPopup::set_custom_text(const char* value) {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  custom_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.custom_text)
}
inline void CMsgDOTAPopup::set_custom_text(const char* value, size_t size) {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  custom_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.custom_text)
}
inline ::std::string* CMsgDOTAPopup::mutable_custom_text() {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.custom_text)
  return custom_text_;
}
inline ::std::string* CMsgDOTAPopup::release_custom_text() {
  clear_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_text_;
    custom_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPopup::set_allocated_custom_text(::std::string* custom_text) {
  if (custom_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_text_;
  }
  if (custom_text) {
    set_has_custom_text();
    custom_text_ = custom_text;
  } else {
    clear_has_custom_text();
    custom_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPopup.custom_text)
}

// optional sint32 int_data = 3;
inline bool CMsgDOTAPopup::has_int_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPopup::set_has_int_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPopup::clear_has_int_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPopup::clear_int_data() {
  int_data_ = 0;
  clear_has_int_data();
}
inline ::google::protobuf::int32 CMsgDOTAPopup::int_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.int_data)
  return int_data_;
}
inline void CMsgDOTAPopup::set_int_data(::google::protobuf::int32 value) {
  set_has_int_data();
  int_data_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.int_data)
}

// optional bytes popup_data = 4;
inline bool CMsgDOTAPopup::has_popup_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPopup::set_has_popup_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPopup::clear_has_popup_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPopup::clear_popup_data() {
  if (popup_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_->clear();
  }
  clear_has_popup_data();
}
inline const ::std::string& CMsgDOTAPopup::popup_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.popup_data)
  return *popup_data_;
}
inline void CMsgDOTAPopup::set_popup_data(const ::std::string& value) {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  popup_data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.popup_data)
}
inline void CMsgDOTAPopup::set_popup_data(const char* value) {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  popup_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.popup_data)
}
inline void CMsgDOTAPopup::set_popup_data(const void* value, size_t size) {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  popup_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.popup_data)
}
inline ::std::string* CMsgDOTAPopup::mutable_popup_data() {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.popup_data)
  return popup_data_;
}
inline ::std::string* CMsgDOTAPopup::release_popup_data() {
  clear_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = popup_data_;
    popup_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPopup::set_allocated_popup_data(::std::string* popup_data) {
  if (popup_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete popup_data_;
  }
  if (popup_data) {
    set_has_popup_data();
    popup_data_ = popup_data;
  } else {
    clear_has_popup_data();
    popup_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPopup.popup_data)
}

// optional string loc_token_header = 5;
inline bool CMsgDOTAPopup::has_loc_token_header() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPopup::set_has_loc_token_header() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAPopup::clear_has_loc_token_header() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAPopup::clear_loc_token_header() {
  if (loc_token_header_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_header_->clear();
  }
  clear_has_loc_token_header();
}
inline const ::std::string& CMsgDOTAPopup::loc_token_header() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.loc_token_header)
  return *loc_token_header_;
}
inline void CMsgDOTAPopup::set_loc_token_header(const ::std::string& value) {
  set_has_loc_token_header();
  if (loc_token_header_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_header_ = new ::std::string;
  }
  loc_token_header_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.loc_token_header)
}
inline void CMsgDOTAPopup::set_loc_token_header(const char* value) {
  set_has_loc_token_header();
  if (loc_token_header_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_header_ = new ::std::string;
  }
  loc_token_header_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.loc_token_header)
}
inline void CMsgDOTAPopup::set_loc_token_header(const char* value, size_t size) {
  set_has_loc_token_header();
  if (loc_token_header_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_header_ = new ::std::string;
  }
  loc_token_header_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.loc_token_header)
}
inline ::std::string* CMsgDOTAPopup::mutable_loc_token_header() {
  set_has_loc_token_header();
  if (loc_token_header_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_header_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.loc_token_header)
  return loc_token_header_;
}
inline ::std::string* CMsgDOTAPopup::release_loc_token_header() {
  clear_has_loc_token_header();
  if (loc_token_header_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loc_token_header_;
    loc_token_header_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPopup::set_allocated_loc_token_header(::std::string* loc_token_header) {
  if (loc_token_header_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loc_token_header_;
  }
  if (loc_token_header) {
    set_has_loc_token_header();
    loc_token_header_ = loc_token_header;
  } else {
    clear_has_loc_token_header();
    loc_token_header_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPopup.loc_token_header)
}

// optional string loc_token_msg = 6;
inline bool CMsgDOTAPopup::has_loc_token_msg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPopup::set_has_loc_token_msg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAPopup::clear_has_loc_token_msg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAPopup::clear_loc_token_msg() {
  if (loc_token_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_msg_->clear();
  }
  clear_has_loc_token_msg();
}
inline const ::std::string& CMsgDOTAPopup::loc_token_msg() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.loc_token_msg)
  return *loc_token_msg_;
}
inline void CMsgDOTAPopup::set_loc_token_msg(const ::std::string& value) {
  set_has_loc_token_msg();
  if (loc_token_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_msg_ = new ::std::string;
  }
  loc_token_msg_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.loc_token_msg)
}
inline void CMsgDOTAPopup::set_loc_token_msg(const char* value) {
  set_has_loc_token_msg();
  if (loc_token_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_msg_ = new ::std::string;
  }
  loc_token_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.loc_token_msg)
}
inline void CMsgDOTAPopup::set_loc_token_msg(const char* value, size_t size) {
  set_has_loc_token_msg();
  if (loc_token_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_msg_ = new ::std::string;
  }
  loc_token_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.loc_token_msg)
}
inline ::std::string* CMsgDOTAPopup::mutable_loc_token_msg() {
  set_has_loc_token_msg();
  if (loc_token_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loc_token_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.loc_token_msg)
  return loc_token_msg_;
}
inline ::std::string* CMsgDOTAPopup::release_loc_token_msg() {
  clear_has_loc_token_msg();
  if (loc_token_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loc_token_msg_;
    loc_token_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPopup::set_allocated_loc_token_msg(::std::string* loc_token_msg) {
  if (loc_token_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loc_token_msg_;
  }
  if (loc_token_msg) {
    set_has_loc_token_msg();
    loc_token_msg_ = loc_token_msg;
  } else {
    clear_has_loc_token_msg();
    loc_token_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPopup.loc_token_msg)
}

// repeated string var_names = 7;
inline int CMsgDOTAPopup::var_names_size() const {
  return var_names_.size();
}
inline void CMsgDOTAPopup::clear_var_names() {
  var_names_.Clear();
}
inline const ::std::string& CMsgDOTAPopup::var_names(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.var_names)
  return var_names_.Get(index);
}
inline ::std::string* CMsgDOTAPopup::mutable_var_names(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.var_names)
  return var_names_.Mutable(index);
}
inline void CMsgDOTAPopup::set_var_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.var_names)
  var_names_.Mutable(index)->assign(value);
}
inline void CMsgDOTAPopup::set_var_names(int index, const char* value) {
  var_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.var_names)
}
inline void CMsgDOTAPopup::set_var_names(int index, const char* value, size_t size) {
  var_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.var_names)
}
inline ::std::string* CMsgDOTAPopup::add_var_names() {
  return var_names_.Add();
}
inline void CMsgDOTAPopup::add_var_names(const ::std::string& value) {
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAPopup.var_names)
}
inline void CMsgDOTAPopup::add_var_names(const char* value) {
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDOTAPopup.var_names)
}
inline void CMsgDOTAPopup::add_var_names(const char* value, size_t size) {
  var_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDOTAPopup.var_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAPopup::var_names() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPopup.var_names)
  return var_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAPopup::mutable_var_names() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPopup.var_names)
  return &var_names_;
}

// repeated string var_values = 8;
inline int CMsgDOTAPopup::var_values_size() const {
  return var_values_.size();
}
inline void CMsgDOTAPopup::clear_var_values() {
  var_values_.Clear();
}
inline const ::std::string& CMsgDOTAPopup::var_values(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.var_values)
  return var_values_.Get(index);
}
inline ::std::string* CMsgDOTAPopup::mutable_var_values(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.var_values)
  return var_values_.Mutable(index);
}
inline void CMsgDOTAPopup::set_var_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.var_values)
  var_values_.Mutable(index)->assign(value);
}
inline void CMsgDOTAPopup::set_var_values(int index, const char* value) {
  var_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.var_values)
}
inline void CMsgDOTAPopup::set_var_values(int index, const char* value, size_t size) {
  var_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.var_values)
}
inline ::std::string* CMsgDOTAPopup::add_var_values() {
  return var_values_.Add();
}
inline void CMsgDOTAPopup::add_var_values(const ::std::string& value) {
  var_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAPopup.var_values)
}
inline void CMsgDOTAPopup::add_var_values(const char* value) {
  var_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDOTAPopup.var_values)
}
inline void CMsgDOTAPopup::add_var_values(const char* value, size_t size) {
  var_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDOTAPopup.var_values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAPopup::var_values() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPopup.var_values)
  return var_values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAPopup::mutable_var_values() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPopup.var_values)
  return &var_values_;
}

// optional string debug_text = 9;
inline bool CMsgDOTAPopup::has_debug_text() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAPopup::set_has_debug_text() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAPopup::clear_has_debug_text() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAPopup::clear_debug_text() {
  if (debug_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_text_->clear();
  }
  clear_has_debug_text();
}
inline const ::std::string& CMsgDOTAPopup::debug_text() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.debug_text)
  return *debug_text_;
}
inline void CMsgDOTAPopup::set_debug_text(const ::std::string& value) {
  set_has_debug_text();
  if (debug_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_text_ = new ::std::string;
  }
  debug_text_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.debug_text)
}
inline void CMsgDOTAPopup::set_debug_text(const char* value) {
  set_has_debug_text();
  if (debug_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_text_ = new ::std::string;
  }
  debug_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.debug_text)
}
inline void CMsgDOTAPopup::set_debug_text(const char* value, size_t size) {
  set_has_debug_text();
  if (debug_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_text_ = new ::std::string;
  }
  debug_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.debug_text)
}
inline ::std::string* CMsgDOTAPopup::mutable_debug_text() {
  set_has_debug_text();
  if (debug_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.debug_text)
  return debug_text_;
}
inline ::std::string* CMsgDOTAPopup::release_debug_text() {
  clear_has_debug_text();
  if (debug_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = debug_text_;
    debug_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPopup::set_allocated_debug_text(::std::string* debug_text) {
  if (debug_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete debug_text_;
  }
  if (debug_text) {
    set_has_debug_text();
    debug_text_ = debug_text;
  } else {
    clear_has_debug_text();
    debug_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPopup.debug_text)
}

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingRequest

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingResponse

// optional uint32 num_positive_reports_remaining = 1;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_positive_reports_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_positive_reports_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_remaining() {
  num_positive_reports_remaining_ = 0u;
  clear_has_num_positive_reports_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
  return num_positive_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_remaining(::google::protobuf::uint32 value) {
  set_has_num_positive_reports_remaining();
  num_positive_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
}

// optional uint32 num_negative_reports_remaining = 2;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_negative_reports_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_negative_reports_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_remaining() {
  num_negative_reports_remaining_ = 0u;
  clear_has_num_negative_reports_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
  return num_negative_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_remaining(::google::protobuf::uint32 value) {
  set_has_num_negative_reports_remaining();
  num_negative_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
}

// optional uint32 num_positive_reports_total = 3;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_positive_reports_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_positive_reports_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_total() {
  num_positive_reports_total_ = 0u;
  clear_has_num_positive_reports_total();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_total() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
  return num_positive_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_total(::google::protobuf::uint32 value) {
  set_has_num_positive_reports_total();
  num_positive_reports_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
}

// optional uint32 num_negative_reports_total = 4;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_negative_reports_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_negative_reports_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_total() {
  num_negative_reports_total_ = 0u;
  clear_has_num_negative_reports_total();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_total() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
  return num_negative_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_total(::google::protobuf::uint32 value) {
  set_has_num_negative_reports_total();
  num_negative_reports_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReport

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReport::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitPlayerReport::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReport.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReport::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReport.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReport::has_report_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_report_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_report_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitPlayerReport::clear_report_flags() {
  report_flags_ = 0u;
  clear_has_report_flags();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::report_flags() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReport.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReport::set_report_flags(::google::protobuf::uint32 value) {
  set_has_report_flags();
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReport.report_flags)
}

// optional uint64 lobby_id = 4;
inline bool CMsgDOTASubmitPlayerReport::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTASubmitPlayerReport::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTASubmitPlayerReport::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReport.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTASubmitPlayerReport::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReport.lobby_id)
}

// optional string comment = 5;
inline bool CMsgDOTASubmitPlayerReport::has_comment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_comment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_comment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTASubmitPlayerReport::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgDOTASubmitPlayerReport::comment() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReport.comment)
  return *comment_;
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReport.comment)
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTASubmitPlayerReport.comment)
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTASubmitPlayerReport.comment)
}
inline ::std::string* CMsgDOTASubmitPlayerReport::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTASubmitPlayerReport.comment)
  return comment_;
}
inline ::std::string* CMsgDOTASubmitPlayerReport::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTASubmitPlayerReport::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTASubmitPlayerReport.comment)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReportResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReportResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReportResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReportResponse.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReportResponse::has_report_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_report_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_report_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_report_flags() {
  report_flags_ = 0u;
  clear_has_report_flags();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::report_flags() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReportResponse.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_report_flags(::google::protobuf::uint32 value) {
  set_has_report_flags();
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReportResponse.report_flags)
}

// optional uint32 result = 3;
inline bool CMsgDOTASubmitPlayerReportResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReportResponse.result)
  return result_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReportResponse.result)
}

// optional string debug_message = 4;
inline bool CMsgDOTASubmitPlayerReportResponse::has_debug_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_debug_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_debug_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_debug_message() {
  if (debug_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_message_->clear();
  }
  clear_has_debug_message();
}
inline const ::std::string& CMsgDOTASubmitPlayerReportResponse::debug_message() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReportResponse.debug_message)
  return *debug_message_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const ::std::string& value) {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_message_ = new ::std::string;
  }
  debug_message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReportResponse.debug_message)
}
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const char* value) {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_message_ = new ::std::string;
  }
  debug_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTASubmitPlayerReportResponse.debug_message)
}
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const char* value, size_t size) {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_message_ = new ::std::string;
  }
  debug_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTASubmitPlayerReportResponse.debug_message)
}
inline ::std::string* CMsgDOTASubmitPlayerReportResponse::mutable_debug_message() {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTASubmitPlayerReportResponse.debug_message)
  return debug_message_;
}
inline ::std::string* CMsgDOTASubmitPlayerReportResponse::release_debug_message() {
  clear_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = debug_message_;
    debug_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTASubmitPlayerReportResponse::set_allocated_debug_message(::std::string* debug_message) {
  if (debug_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete debug_message_;
  }
  if (debug_message) {
    set_has_debug_message();
    debug_message_ = debug_message;
  } else {
    clear_has_debug_message();
    debug_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTASubmitPlayerReportResponse.debug_message)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsRequest

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsRequest::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsRequest::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportCountsRequest::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportCountsRequest::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsRequest::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsRequest.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsRequest::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsRequest.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportCountsResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.target_account_id)
}

// optional uint32 leadership_count = 2;
inline bool CMsgDOTAReportCountsResponse::has_leadership_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_leadership_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_leadership_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAReportCountsResponse::clear_leadership_count() {
  leadership_count_ = 0u;
  clear_has_leadership_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::leadership_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.leadership_count)
  return leadership_count_;
}
inline void CMsgDOTAReportCountsResponse::set_leadership_count(::google::protobuf::uint32 value) {
  set_has_leadership_count();
  leadership_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.leadership_count)
}

// optional uint32 teaching_count = 3;
inline bool CMsgDOTAReportCountsResponse::has_teaching_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_teaching_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_teaching_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAReportCountsResponse::clear_teaching_count() {
  teaching_count_ = 0u;
  clear_has_teaching_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::teaching_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.teaching_count)
  return teaching_count_;
}
inline void CMsgDOTAReportCountsResponse::set_teaching_count(::google::protobuf::uint32 value) {
  set_has_teaching_count();
  teaching_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.teaching_count)
}

// optional uint32 friendly_count = 4;
inline bool CMsgDOTAReportCountsResponse::has_friendly_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_friendly_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_friendly_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAReportCountsResponse::clear_friendly_count() {
  friendly_count_ = 0u;
  clear_has_friendly_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::friendly_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.friendly_count)
  return friendly_count_;
}
inline void CMsgDOTAReportCountsResponse::set_friendly_count(::google::protobuf::uint32 value) {
  set_has_friendly_count();
  friendly_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.friendly_count)
}

// optional uint32 forgiving_count = 5;
inline bool CMsgDOTAReportCountsResponse::has_forgiving_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_forgiving_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_forgiving_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAReportCountsResponse::clear_forgiving_count() {
  forgiving_count_ = 0u;
  clear_has_forgiving_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::forgiving_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.forgiving_count)
  return forgiving_count_;
}
inline void CMsgDOTAReportCountsResponse::set_forgiving_count(::google::protobuf::uint32 value) {
  set_has_forgiving_count();
  forgiving_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.forgiving_count)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitLobbyMVPVote

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitLobbyMVPVote::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVote::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVote::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVote::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVote::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitLobbyMVPVote.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitLobbyMVPVote::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitLobbyMVPVote.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitLobbyMVPVoteResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitLobbyMVPVoteResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVoteResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitLobbyMVPVoteResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitLobbyMVPVoteResponse.target_account_id)
}

// optional uint32 eresult = 2;
inline bool CMsgDOTASubmitLobbyMVPVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitLobbyMVPVoteResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitLobbyMVPVoteResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyMVPNotifyRecipient

// optional uint32 voter_account_id = 1;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_voter_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_has_voter_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_has_voter_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_voter_account_id() {
  voter_account_id_ = 0u;
  clear_has_voter_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::voter_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyMVPNotifyRecipient.voter_account_id)
  return voter_account_id_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_voter_account_id(::google::protobuf::uint32 value) {
  set_has_voter_account_id();
  voter_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyMVPNotifyRecipient.voter_account_id)
}

// optional uint32 recipient_account_id = 2;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyMVPNotifyRecipient.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyMVPNotifyRecipient.recipient_account_id)
}

// optional uint32 num_votes = 3;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_num_votes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_has_num_votes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_has_num_votes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_num_votes() {
  num_votes_ = 0u;
  clear_has_num_votes();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::num_votes() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyMVPNotifyRecipient.num_votes)
  return num_votes_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_num_votes(::google::protobuf::uint32 value) {
  set_has_num_votes();
  num_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyMVPNotifyRecipient.num_votes)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyMVPAwarded

// optional uint32 mvp_account_id = 1;
inline bool CMsgDOTALobbyMVPAwarded::has_mvp_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyMVPAwarded::set_has_mvp_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALobbyMVPAwarded::clear_has_mvp_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALobbyMVPAwarded::clear_mvp_account_id() {
  mvp_account_id_ = 0u;
  clear_has_mvp_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPAwarded::mvp_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyMVPAwarded.mvp_account_id)
  return mvp_account_id_;
}
inline void CMsgDOTALobbyMVPAwarded::set_mvp_account_id(::google::protobuf::uint32 value) {
  set_has_mvp_account_id();
  mvp_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyMVPAwarded.mvp_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAKickedFromMatchmakingQueue

// optional .MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
inline bool CMsgDOTAKickedFromMatchmakingQueue::has_match_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::set_has_match_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::clear_match_type() {
  match_type_ = 0;
  clear_has_match_type();
}
inline ::MatchType CMsgDOTAKickedFromMatchmakingQueue::match_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAKickedFromMatchmakingQueue.match_type)
  return static_cast< ::MatchType >(match_type_);
}
inline void CMsgDOTAKickedFromMatchmakingQueue::set_match_type(::MatchType value) {
  assert(::MatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAKickedFromMatchmakingQueue.match_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGames

// optional uint32 server_region = 1;
inline bool CMsgDOTARequestSaveGames::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGames::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestSaveGames::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestSaveGames::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgDOTARequestSaveGames::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestSaveGames.server_region)
  return server_region_;
}
inline void CMsgDOTARequestSaveGames::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestSaveGames.server_region)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGamesResponse

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestSaveGamesResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGamesResponse::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestSaveGamesResponse::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestSaveGamesResponse::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestSaveGamesResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestSaveGamesResponse.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestSaveGamesResponse::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestSaveGamesResponse.steam_id)
}

// repeated .CDOTASaveGame save_games = 2;
inline int CMsgDOTARequestSaveGamesResponse::save_games_size() const {
  return save_games_.size();
}
inline void CMsgDOTARequestSaveGamesResponse::clear_save_games() {
  save_games_.Clear();
}
inline const ::CDOTASaveGame& CMsgDOTARequestSaveGamesResponse::save_games(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Get(index);
}
inline ::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::mutable_save_games(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Mutable(index);
}
inline ::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::add_save_games() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >&
CMsgDOTARequestSaveGamesResponse::save_games() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >*
CMsgDOTARequestSaveGamesResponse::mutable_save_games() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestSaveGamesResponse.save_games)
  return &save_games_;
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgGCMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchDetailsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMatchDetailsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMatchDetailsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgGCMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMatchDetailsRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsResponse

// optional uint32 result = 1;
inline bool CMsgGCMatchDetailsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMatchDetailsResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCMatchDetailsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsResponse.result)
  return result_;
}
inline void CMsgGCMatchDetailsResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMatchDetailsResponse.result)
}

// optional .CMsgDOTAMatch match = 2;
inline bool CMsgGCMatchDetailsResponse::has_match() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_match() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_match() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMatchDetailsResponse::clear_match() {
  if (match_ != NULL) match_->::CMsgDOTAMatch::Clear();
  clear_has_match();
}
inline const ::CMsgDOTAMatch& CMsgGCMatchDetailsResponse::match() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsResponse.match)
  return match_ != NULL ? *match_ : *default_instance_->match_;
}
inline ::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::mutable_match() {
  set_has_match();
  if (match_ == NULL) match_ = new ::CMsgDOTAMatch;
  // @@protoc_insertion_point(field_mutable:CMsgGCMatchDetailsResponse.match)
  return match_;
}
inline ::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::release_match() {
  clear_has_match();
  ::CMsgDOTAMatch* temp = match_;
  match_ = NULL;
  return temp;
}
inline void CMsgGCMatchDetailsResponse::set_allocated_match(::CMsgDOTAMatch* match) {
  delete match_;
  match_ = match;
  if (match) {
    set_has_match();
  } else {
    clear_has_match();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMatchDetailsResponse.match)
}

// optional .DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
inline bool CMsgGCMatchDetailsResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_vote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_vote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCMatchDetailsResponse::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::DOTAMatchVote CMsgGCMatchDetailsResponse::vote() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsResponse.vote)
  return static_cast< ::DOTAMatchVote >(vote_);
}
inline void CMsgGCMatchDetailsResponse::set_vote(::DOTAMatchVote value) {
  assert(::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMatchDetailsResponse.vote)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchDetailsRequest

// repeated uint64 match_ids = 1;
inline int CMsgServerToGCMatchDetailsRequest::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgServerToGCMatchDetailsRequest::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgServerToGCMatchDetailsRequest::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchDetailsRequest.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgServerToGCMatchDetailsRequest::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchDetailsRequest.match_ids)
}
inline void CMsgServerToGCMatchDetailsRequest::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgServerToGCMatchDetailsRequest.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgServerToGCMatchDetailsRequest::match_ids() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCMatchDetailsRequest.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgServerToGCMatchDetailsRequest::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCMatchDetailsRequest.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToServerMatchDetailsResponse

// repeated .CMsgDOTAMatch matches = 1;
inline int CMsgGCToServerMatchDetailsResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgGCToServerMatchDetailsResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgGCToServerMatchDetailsResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgGCToServerMatchDetailsResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgGCToServerMatchDetailsResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgGCToServerMatchDetailsResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgGCToServerMatchDetailsResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgGCToServerMatchDetailsResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToServerMatchDetailsResponse.matches)
  return &matches_;
}

// -------------------------------------------------------------------

// CMsgDOTAProfileRequest

// optional uint32 account_id = 1;
inline bool CMsgDOTAProfileRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileRequest.account_id)
  return account_id_;
}
inline void CMsgDOTAProfileRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileRequest.account_id)
}

// optional bool request_name = 2;
inline bool CMsgDOTAProfileRequest::has_request_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileRequest::set_has_request_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileRequest::clear_has_request_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileRequest::clear_request_name() {
  request_name_ = false;
  clear_has_request_name();
}
inline bool CMsgDOTAProfileRequest::request_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileRequest.request_name)
  return request_name_;
}
inline void CMsgDOTAProfileRequest::set_request_name(bool value) {
  set_has_request_name();
  request_name_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileRequest.request_name)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_PlayedHero

// optional uint32 hero_id = 1;
inline bool CMsgDOTAProfileResponse_PlayedHero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_PlayedHero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.PlayedHero.hero_id)
  return hero_id_;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.PlayedHero.hero_id)
}

// optional uint32 wins = 2;
inline bool CMsgDOTAProfileResponse_PlayedHero::has_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_has_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_has_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_PlayedHero::wins() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.PlayedHero.wins)
  return wins_;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.PlayedHero.wins)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_ShowcaseHero

// optional uint32 hero_id = 1;
inline bool CMsgDOTAProfileResponse_ShowcaseHero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_ShowcaseHero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.ShowcaseHero.hero_id)
  return hero_id_;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.ShowcaseHero.hero_id)
}

// repeated bytes object_data = 2;
inline int CMsgDOTAProfileResponse_ShowcaseHero::object_data_size() const {
  return object_data_.size();
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgDOTAProfileResponse_ShowcaseHero::object_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgDOTAProfileResponse_ShowcaseHero::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const char* value) {
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline ::std::string* CMsgDOTAProfileResponse_ShowcaseHero::add_object_data() {
  return object_data_.Add();
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const char* value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAProfileResponse_ShowcaseHero::object_data() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAProfileResponse_ShowcaseHero::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_LeaguePass

// optional uint32 league_id = 1;
inline bool CMsgDOTAProfileResponse_LeaguePass::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_LeaguePass::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.LeaguePass.league_id)
  return league_id_;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.LeaguePass.league_id)
}

// optional uint32 item_def = 2;
inline bool CMsgDOTAProfileResponse_LeaguePass::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_LeaguePass::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.LeaguePass.item_def)
  return item_def_;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.LeaguePass.item_def)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_EventTicket

// optional uint32 event_id = 1;
inline bool CMsgDOTAProfileResponse_EventTicket::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_EventTicket::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_EventTicket::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_EventTicket::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_EventTicket::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.EventTicket.event_id)
  return event_id_;
}
inline void CMsgDOTAProfileResponse_EventTicket::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.EventTicket.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_FeaturedItem

// optional uint64 item_id = 1;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgDOTAProfileResponse_FeaturedItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.FeaturedItem.item_id)
  return item_id_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.FeaturedItem.item_id)
}

// optional bytes object_data = 2;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_object_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_object_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_object_data() {
  if (object_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_->clear();
  }
  clear_has_object_data();
}
inline const ::std::string& CMsgDOTAProfileResponse_FeaturedItem::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.FeaturedItem.object_data)
  return *object_data_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const ::std::string& value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const char* value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline ::std::string* CMsgDOTAProfileResponse_FeaturedItem::mutable_object_data() {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.FeaturedItem.object_data)
  return object_data_;
}
inline ::std::string* CMsgDOTAProfileResponse_FeaturedItem::release_object_data() {
  clear_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = object_data_;
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_allocated_object_data(::std::string* object_data) {
  if (object_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete object_data_;
  }
  if (object_data) {
    set_has_object_data();
    object_data_ = object_data;
  } else {
    clear_has_object_data();
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}

// optional uint32 slot_index = 3;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_slot_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_slot_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_slot_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_slot_index() {
  slot_index_ = 0u;
  clear_has_slot_index();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_FeaturedItem::slot_index() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.FeaturedItem.slot_index)
  return slot_index_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_slot_index(::google::protobuf::uint32 value) {
  set_has_slot_index();
  slot_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.FeaturedItem.slot_index)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse

// optional uint32 result = 1;
inline bool CMsgDOTAProfileResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.result)
  return result_;
}
inline void CMsgDOTAProfileResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.result)
}

// optional .CSODOTAGameAccountClient game_account_client = 2;
inline bool CMsgDOTAProfileResponse::has_game_account_client() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_game_account_client() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse::clear_has_game_account_client() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse::clear_game_account_client() {
  if (game_account_client_ != NULL) game_account_client_->::CSODOTAGameAccountClient::Clear();
  clear_has_game_account_client();
}
inline const ::CSODOTAGameAccountClient& CMsgDOTAProfileResponse::game_account_client() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.game_account_client)
  return game_account_client_ != NULL ? *game_account_client_ : *default_instance_->game_account_client_;
}
inline ::CSODOTAGameAccountClient* CMsgDOTAProfileResponse::mutable_game_account_client() {
  set_has_game_account_client();
  if (game_account_client_ == NULL) game_account_client_ = new ::CSODOTAGameAccountClient;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.game_account_client)
  return game_account_client_;
}
inline ::CSODOTAGameAccountClient* CMsgDOTAProfileResponse::release_game_account_client() {
  clear_has_game_account_client();
  ::CSODOTAGameAccountClient* temp = game_account_client_;
  game_account_client_ = NULL;
  return temp;
}
inline void CMsgDOTAProfileResponse::set_allocated_game_account_client(::CSODOTAGameAccountClient* game_account_client) {
  delete game_account_client_;
  game_account_client_ = game_account_client;
  if (game_account_client) {
    set_has_game_account_client();
  } else {
    clear_has_game_account_client();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.game_account_client)
}

// repeated .CMsgDOTAMatch latest_matches = 3;
inline int CMsgDOTAProfileResponse::latest_matches_size() const {
  return latest_matches_.size();
}
inline void CMsgDOTAProfileResponse::clear_latest_matches() {
  latest_matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgDOTAProfileResponse::latest_matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgDOTAProfileResponse::mutable_latest_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgDOTAProfileResponse::add_latest_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgDOTAProfileResponse::latest_matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgDOTAProfileResponse::mutable_latest_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.latest_matches)
  return &latest_matches_;
}

// repeated .CMsgDOTAProfileResponse.PlayedHero heroes = 4;
inline int CMsgDOTAProfileResponse::heroes_size() const {
  return heroes_.size();
}
inline void CMsgDOTAProfileResponse::clear_heroes() {
  heroes_.Clear();
}
inline const ::CMsgDOTAProfileResponse_PlayedHero& CMsgDOTAProfileResponse::heroes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.heroes)
  return heroes_.Get(index);
}
inline ::CMsgDOTAProfileResponse_PlayedHero* CMsgDOTAProfileResponse::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.heroes)
  return heroes_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_PlayedHero* CMsgDOTAProfileResponse::add_heroes() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.heroes)
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >&
CMsgDOTAProfileResponse::heroes() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.heroes)
  return heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >*
CMsgDOTAProfileResponse::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.heroes)
  return &heroes_;
}

// optional string player_name = 5;
inline bool CMsgDOTAProfileResponse::has_player_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_player_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAProfileResponse::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAProfileResponse::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& CMsgDOTAProfileResponse::player_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.player_name)
  return *player_name_;
}
inline void CMsgDOTAProfileResponse::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.player_name)
}
inline void CMsgDOTAProfileResponse::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.player_name)
}
inline void CMsgDOTAProfileResponse::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.player_name)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.player_name)
  return player_name_;
}
inline ::std::string* CMsgDOTAProfileResponse::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.player_name)
}

// optional string team_name = 6;
inline bool CMsgDOTAProfileResponse::has_team_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAProfileResponse::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAProfileResponse::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_name)
  return *team_name_;
}
inline void CMsgDOTAProfileResponse::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_name)
}
inline void CMsgDOTAProfileResponse::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.team_name)
}
inline void CMsgDOTAProfileResponse::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.team_name)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTAProfileResponse::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.team_name)
}

// optional string team_tag = 7;
inline bool CMsgDOTAProfileResponse::has_team_tag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_tag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_tag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAProfileResponse::clear_team_tag() {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_->clear();
  }
  clear_has_team_tag();
}
inline const ::std::string& CMsgDOTAProfileResponse::team_tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_tag)
  return *team_tag_;
}
inline void CMsgDOTAProfileResponse::set_team_tag(const ::std::string& value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_tag)
}
inline void CMsgDOTAProfileResponse::set_team_tag(const char* value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.team_tag)
}
inline void CMsgDOTAProfileResponse::set_team_tag(const char* value, size_t size) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.team_tag)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_team_tag() {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.team_tag)
  return team_tag_;
}
inline ::std::string* CMsgDOTAProfileResponse::release_team_tag() {
  clear_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_tag_;
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse::set_allocated_team_tag(::std::string* team_tag) {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_tag_;
  }
  if (team_tag) {
    set_has_team_tag();
    team_tag_ = team_tag;
  } else {
    clear_has_team_tag();
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.team_tag)
}

// optional uint64 team_logo = 8;
inline bool CMsgDOTAProfileResponse::has_team_logo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_logo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_logo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAProfileResponse::clear_team_logo() {
  team_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_team_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAProfileResponse::team_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_logo)
  return team_logo_;
}
inline void CMsgDOTAProfileResponse::set_team_logo(::google::protobuf::uint64 value) {
  set_has_team_logo();
  team_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_logo)
}

// optional .CMsgDOTAProfileResponse.ShowcaseHero showcase_hero = 9;
inline bool CMsgDOTAProfileResponse::has_showcase_hero() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_showcase_hero() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAProfileResponse::clear_has_showcase_hero() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAProfileResponse::clear_showcase_hero() {
  if (showcase_hero_ != NULL) showcase_hero_->::CMsgDOTAProfileResponse_ShowcaseHero::Clear();
  clear_has_showcase_hero();
}
inline const ::CMsgDOTAProfileResponse_ShowcaseHero& CMsgDOTAProfileResponse::showcase_hero() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.showcase_hero)
  return showcase_hero_ != NULL ? *showcase_hero_ : *default_instance_->showcase_hero_;
}
inline ::CMsgDOTAProfileResponse_ShowcaseHero* CMsgDOTAProfileResponse::mutable_showcase_hero() {
  set_has_showcase_hero();
  if (showcase_hero_ == NULL) showcase_hero_ = new ::CMsgDOTAProfileResponse_ShowcaseHero;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.showcase_hero)
  return showcase_hero_;
}
inline ::CMsgDOTAProfileResponse_ShowcaseHero* CMsgDOTAProfileResponse::release_showcase_hero() {
  clear_has_showcase_hero();
  ::CMsgDOTAProfileResponse_ShowcaseHero* temp = showcase_hero_;
  showcase_hero_ = NULL;
  return temp;
}
inline void CMsgDOTAProfileResponse::set_allocated_showcase_hero(::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero) {
  delete showcase_hero_;
  showcase_hero_ = showcase_hero;
  if (showcase_hero) {
    set_has_showcase_hero();
  } else {
    clear_has_showcase_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.showcase_hero)
}

// repeated .CMsgDOTAProfileResponse.LeaguePass league_passes = 10;
inline int CMsgDOTAProfileResponse::league_passes_size() const {
  return league_passes_.size();
}
inline void CMsgDOTAProfileResponse::clear_league_passes() {
  league_passes_.Clear();
}
inline const ::CMsgDOTAProfileResponse_LeaguePass& CMsgDOTAProfileResponse::league_passes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Get(index);
}
inline ::CMsgDOTAProfileResponse_LeaguePass* CMsgDOTAProfileResponse::mutable_league_passes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_LeaguePass* CMsgDOTAProfileResponse::add_league_passes() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >&
CMsgDOTAProfileResponse::league_passes() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.league_passes)
  return league_passes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >*
CMsgDOTAProfileResponse::mutable_league_passes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.league_passes)
  return &league_passes_;
}

// repeated .CMsgDOTAProfileResponse.EventTicket event_tickets = 11;
inline int CMsgDOTAProfileResponse::event_tickets_size() const {
  return event_tickets_.size();
}
inline void CMsgDOTAProfileResponse::clear_event_tickets() {
  event_tickets_.Clear();
}
inline const ::CMsgDOTAProfileResponse_EventTicket& CMsgDOTAProfileResponse::event_tickets(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Get(index);
}
inline ::CMsgDOTAProfileResponse_EventTicket* CMsgDOTAProfileResponse::mutable_event_tickets(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_EventTicket* CMsgDOTAProfileResponse::add_event_tickets() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >&
CMsgDOTAProfileResponse::event_tickets() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >*
CMsgDOTAProfileResponse::mutable_event_tickets() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.event_tickets)
  return &event_tickets_;
}

// optional uint32 team_id = 12;
inline bool CMsgDOTAProfileResponse::has_team_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAProfileResponse::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_id)
  return team_id_;
}
inline void CMsgDOTAProfileResponse::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_id)
}

// optional bool has_passport = 13;
inline bool CMsgDOTAProfileResponse::has_has_passport() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_has_passport() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAProfileResponse::clear_has_has_passport() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAProfileResponse::clear_has_passport() {
  has_passport_ = false;
  clear_has_has_passport();
}
inline bool CMsgDOTAProfileResponse::has_passport() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.has_passport)
  return has_passport_;
}
inline void CMsgDOTAProfileResponse::set_has_passport(bool value) {
  set_has_has_passport();
  has_passport_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.has_passport)
}

// repeated .CMsgDOTAProfileResponse.FeaturedItem featured_items = 14;
inline int CMsgDOTAProfileResponse::featured_items_size() const {
  return featured_items_.size();
}
inline void CMsgDOTAProfileResponse::clear_featured_items() {
  featured_items_.Clear();
}
inline const ::CMsgDOTAProfileResponse_FeaturedItem& CMsgDOTAProfileResponse::featured_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Get(index);
}
inline ::CMsgDOTAProfileResponse_FeaturedItem* CMsgDOTAProfileResponse::mutable_featured_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_FeaturedItem* CMsgDOTAProfileResponse::add_featured_items() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >&
CMsgDOTAProfileResponse::featured_items() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.featured_items)
  return featured_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >*
CMsgDOTAProfileResponse::mutable_featured_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.featured_items)
  return &featured_items_;
}

// optional uint32 abandon_percent = 15;
inline bool CMsgDOTAProfileResponse::has_abandon_percent() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_abandon_percent() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAProfileResponse::clear_has_abandon_percent() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAProfileResponse::clear_abandon_percent() {
  abandon_percent_ = 0u;
  clear_has_abandon_percent();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::abandon_percent() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.abandon_percent)
  return abandon_percent_;
}
inline void CMsgDOTAProfileResponse::set_abandon_percent(::google::protobuf::uint32 value) {
  set_has_abandon_percent();
  abandon_percent_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.abandon_percent)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets_LeaguePass

// optional uint32 league_id = 1;
inline bool CMsgDOTAProfileTickets_LeaguePass::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_LeaguePass::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileTickets.LeaguePass.league_id)
  return league_id_;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileTickets.LeaguePass.league_id)
}

// optional uint32 item_def = 2;
inline bool CMsgDOTAProfileTickets_LeaguePass::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_LeaguePass::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileTickets.LeaguePass.item_def)
  return item_def_;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileTickets.LeaguePass.item_def)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets_EventTicket

// optional uint32 event_id = 1;
inline bool CMsgDOTAProfileTickets_EventTicket::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets_EventTicket::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileTickets_EventTicket::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileTickets_EventTicket::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_EventTicket::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileTickets.EventTicket.event_id)
  return event_id_;
}
inline void CMsgDOTAProfileTickets_EventTicket::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileTickets.EventTicket.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets

// optional uint32 result = 1;
inline bool CMsgDOTAProfileTickets::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileTickets::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileTickets::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileTickets.result)
  return result_;
}
inline void CMsgDOTAProfileTickets::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileTickets.result)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAProfileTickets::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileTickets::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileTickets::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileTickets::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileTickets.account_id)
  return account_id_;
}
inline void CMsgDOTAProfileTickets::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileTickets.account_id)
}

// repeated .CMsgDOTAProfileTickets.LeaguePass league_passes = 3;
inline int CMsgDOTAProfileTickets::league_passes_size() const {
  return league_passes_.size();
}
inline void CMsgDOTAProfileTickets::clear_league_passes() {
  league_passes_.Clear();
}
inline const ::CMsgDOTAProfileTickets_LeaguePass& CMsgDOTAProfileTickets::league_passes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Get(index);
}
inline ::CMsgDOTAProfileTickets_LeaguePass* CMsgDOTAProfileTickets::mutable_league_passes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Mutable(index);
}
inline ::CMsgDOTAProfileTickets_LeaguePass* CMsgDOTAProfileTickets::add_league_passes() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_LeaguePass >&
CMsgDOTAProfileTickets::league_passes() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileTickets.league_passes)
  return league_passes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_LeaguePass >*
CMsgDOTAProfileTickets::mutable_league_passes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileTickets.league_passes)
  return &league_passes_;
}

// repeated .CMsgDOTAProfileTickets.EventTicket event_tickets = 4;
inline int CMsgDOTAProfileTickets::event_tickets_size() const {
  return event_tickets_.size();
}
inline void CMsgDOTAProfileTickets::clear_event_tickets() {
  event_tickets_.Clear();
}
inline const ::CMsgDOTAProfileTickets_EventTicket& CMsgDOTAProfileTickets::event_tickets(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_.Get(index);
}
inline ::CMsgDOTAProfileTickets_EventTicket* CMsgDOTAProfileTickets::mutable_event_tickets(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_.Mutable(index);
}
inline ::CMsgDOTAProfileTickets_EventTicket* CMsgDOTAProfileTickets::add_event_tickets() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_EventTicket >&
CMsgDOTAProfileTickets::event_tickets() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileTickets_EventTicket >*
CMsgDOTAProfileTickets::mutable_event_tickets() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileTickets.event_tickets)
  return &event_tickets_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileTickets

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileTickets::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetProfileTickets::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetProfileTickets::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetProfileTickets::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetProfileTickets::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetProfileTickets.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetProfileTickets::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetProfileTickets.account_id)
}

// -------------------------------------------------------------------

// CMsgGCSteamProfileRequest

// optional uint32 account_id = 1;
inline bool CMsgGCSteamProfileRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSteamProfileRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSteamProfileRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSteamProfileRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCSteamProfileRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCSteamProfileRequest.account_id)
  return account_id_;
}
inline void CMsgGCSteamProfileRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSteamProfileRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCSteamProfileRequestResponse

// optional uint32 result = 1;
inline bool CMsgGCSteamProfileRequestResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSteamProfileRequestResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSteamProfileRequestResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSteamProfileRequestResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCSteamProfileRequestResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCSteamProfileRequestResponse.result)
  return result_;
}
inline void CMsgGCSteamProfileRequestResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSteamProfileRequestResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAClearNotifySuccessfulReport

// -------------------------------------------------------------------

// CMsgDOTAWelcome_LocalizationDigest

// optional string context = 1;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_context() {
  if (context_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_->clear();
  }
  clear_has_context();
}
inline const ::std::string& CMsgDOTAWelcome_LocalizationDigest::context() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.LocalizationDigest.context)
  return *context_;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const ::std::string& value) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  context_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.LocalizationDigest.context)
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const char* value) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  context_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAWelcome.LocalizationDigest.context)
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const char* value, size_t size) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  context_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAWelcome.LocalizationDigest.context)
}
inline ::std::string* CMsgDOTAWelcome_LocalizationDigest::mutable_context() {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.LocalizationDigest.context)
  return context_;
}
inline ::std::string* CMsgDOTAWelcome_LocalizationDigest::release_context() {
  clear_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = context_;
    context_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_context(::std::string* context) {
  if (context_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete context_;
  }
  if (context) {
    set_has_context();
    context_ = context;
  } else {
    clear_has_context();
    context_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.LocalizationDigest.context)
}

// optional .CMsgSHA1Digest english_language_file_sha1 = 2;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_english_language_file_sha1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_english_language_file_sha1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_english_language_file_sha1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_english_language_file_sha1() {
  if (english_language_file_sha1_ != NULL) english_language_file_sha1_->::CMsgSHA1Digest::Clear();
  clear_has_english_language_file_sha1();
}
inline const ::CMsgSHA1Digest& CMsgDOTAWelcome_LocalizationDigest::english_language_file_sha1() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
  return english_language_file_sha1_ != NULL ? *english_language_file_sha1_ : *default_instance_->english_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::mutable_english_language_file_sha1() {
  set_has_english_language_file_sha1();
  if (english_language_file_sha1_ == NULL) english_language_file_sha1_ = new ::CMsgSHA1Digest;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
  return english_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::release_english_language_file_sha1() {
  clear_has_english_language_file_sha1();
  ::CMsgSHA1Digest* temp = english_language_file_sha1_;
  english_language_file_sha1_ = NULL;
  return temp;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_english_language_file_sha1(::CMsgSHA1Digest* english_language_file_sha1) {
  delete english_language_file_sha1_;
  english_language_file_sha1_ = english_language_file_sha1;
  if (english_language_file_sha1) {
    set_has_english_language_file_sha1();
  } else {
    clear_has_english_language_file_sha1();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
}

// optional .CMsgSHA1Digest client_language_file_sha1 = 3;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_client_language_file_sha1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_client_language_file_sha1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_client_language_file_sha1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_client_language_file_sha1() {
  if (client_language_file_sha1_ != NULL) client_language_file_sha1_->::CMsgSHA1Digest::Clear();
  clear_has_client_language_file_sha1();
}
inline const ::CMsgSHA1Digest& CMsgDOTAWelcome_LocalizationDigest::client_language_file_sha1() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
  return client_language_file_sha1_ != NULL ? *client_language_file_sha1_ : *default_instance_->client_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::mutable_client_language_file_sha1() {
  set_has_client_language_file_sha1();
  if (client_language_file_sha1_ == NULL) client_language_file_sha1_ = new ::CMsgSHA1Digest;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
  return client_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::release_client_language_file_sha1() {
  clear_has_client_language_file_sha1();
  ::CMsgSHA1Digest* temp = client_language_file_sha1_;
  client_language_file_sha1_ = NULL;
  return temp;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_client_language_file_sha1(::CMsgSHA1Digest* client_language_file_sha1) {
  delete client_language_file_sha1_;
  client_language_file_sha1_ = client_language_file_sha1;
  if (client_language_file_sha1) {
    set_has_client_language_file_sha1();
  } else {
    clear_has_client_language_file_sha1();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
}

// -------------------------------------------------------------------

// CMsgDOTAWelcome_CExtraMsg

// optional uint32 id = 1;
inline bool CMsgDOTAWelcome_CExtraMsg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome_CExtraMsg::id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.CExtraMsg.id)
  return id_;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.CExtraMsg.id)
}

// optional bytes contents = 2;
inline bool CMsgDOTAWelcome_CExtraMsg::has_contents() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_has_contents() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_has_contents() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_contents() {
  if (contents_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_->clear();
  }
  clear_has_contents();
}
inline const ::std::string& CMsgDOTAWelcome_CExtraMsg::contents() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.CExtraMsg.contents)
  return *contents_;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const ::std::string& value) {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  contents_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.CExtraMsg.contents)
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const char* value) {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  contents_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAWelcome.CExtraMsg.contents)
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const void* value, size_t size) {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  contents_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAWelcome.CExtraMsg.contents)
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::mutable_contents() {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.CExtraMsg.contents)
  return contents_;
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::release_contents() {
  clear_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = contents_;
    contents_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAWelcome_CExtraMsg::set_allocated_contents(::std::string* contents) {
  if (contents_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete contents_;
  }
  if (contents) {
    set_has_contents();
    contents_ = contents;
  } else {
    clear_has_contents();
    contents_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.CExtraMsg.contents)
}

// -------------------------------------------------------------------

// CMsgDOTAWelcome

// optional uint32 store_item_hash = 5;
inline bool CMsgDOTAWelcome::has_store_item_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome::set_has_store_item_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome::clear_has_store_item_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome::clear_store_item_hash() {
  store_item_hash_ = 0u;
  clear_has_store_item_hash();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::store_item_hash() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.store_item_hash)
  return store_item_hash_;
}
inline void CMsgDOTAWelcome::set_store_item_hash(::google::protobuf::uint32 value) {
  set_has_store_item_hash();
  store_item_hash_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.store_item_hash)
}

// optional uint32 timeplayedconsecutively = 6;
inline bool CMsgDOTAWelcome::has_timeplayedconsecutively() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome::set_has_timeplayedconsecutively() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome::clear_has_timeplayedconsecutively() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome::clear_timeplayedconsecutively() {
  timeplayedconsecutively_ = 0u;
  clear_has_timeplayedconsecutively();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::timeplayedconsecutively() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.timeplayedconsecutively)
  return timeplayedconsecutively_;
}
inline void CMsgDOTAWelcome::set_timeplayedconsecutively(::google::protobuf::uint32 value) {
  set_has_timeplayedconsecutively();
  timeplayedconsecutively_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.timeplayedconsecutively)
}

// optional bool allow_3rd_party_match_history = 7;
inline bool CMsgDOTAWelcome::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAWelcome::set_has_allow_3rd_party_match_history() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAWelcome::clear_has_allow_3rd_party_match_history() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAWelcome::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  clear_has_allow_3rd_party_match_history();
}
inline bool CMsgDOTAWelcome::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTAWelcome::set_allow_3rd_party_match_history(bool value) {
  set_has_allow_3rd_party_match_history();
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.allow_3rd_party_match_history)
}

// optional .PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
inline bool CMsgDOTAWelcome::has_partner_account_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAWelcome::set_has_partner_account_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAWelcome::clear_has_partner_account_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAWelcome::clear_partner_account_type() {
  partner_account_type_ = 0;
  clear_has_partner_account_type();
}
inline ::PartnerAccountType CMsgDOTAWelcome::partner_account_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.partner_account_type)
  return static_cast< ::PartnerAccountType >(partner_account_type_);
}
inline void CMsgDOTAWelcome::set_partner_account_type(::PartnerAccountType value) {
  assert(::PartnerAccountType_IsValid(value));
  set_has_partner_account_type();
  partner_account_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.partner_account_type)
}

// optional uint32 banned_word_list_word_id = 9;
inline bool CMsgDOTAWelcome::has_banned_word_list_word_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAWelcome::set_has_banned_word_list_word_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAWelcome::clear_has_banned_word_list_word_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAWelcome::clear_banned_word_list_word_id() {
  banned_word_list_word_id_ = 0u;
  clear_has_banned_word_list_word_id();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::banned_word_list_word_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.banned_word_list_word_id)
  return banned_word_list_word_id_;
}
inline void CMsgDOTAWelcome::set_banned_word_list_word_id(::google::protobuf::uint32 value) {
  set_has_banned_word_list_word_id();
  banned_word_list_word_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.banned_word_list_word_id)
}

// optional uint32 partner_account_state = 11;
inline bool CMsgDOTAWelcome::has_partner_account_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAWelcome::set_has_partner_account_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAWelcome::clear_has_partner_account_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAWelcome::clear_partner_account_state() {
  partner_account_state_ = 0u;
  clear_has_partner_account_state();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::partner_account_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.partner_account_state)
  return partner_account_state_;
}
inline void CMsgDOTAWelcome::set_partner_account_state(::google::protobuf::uint32 value) {
  set_has_partner_account_state();
  partner_account_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.partner_account_state)
}

// optional uint32 last_time_played = 12;
inline bool CMsgDOTAWelcome::has_last_time_played() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAWelcome::set_has_last_time_played() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAWelcome::clear_has_last_time_played() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAWelcome::clear_last_time_played() {
  last_time_played_ = 0u;
  clear_has_last_time_played();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_time_played() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.last_time_played)
  return last_time_played_;
}
inline void CMsgDOTAWelcome::set_last_time_played(::google::protobuf::uint32 value) {
  set_has_last_time_played();
  last_time_played_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.last_time_played)
}

// optional uint32 last_ip_address = 13;
inline bool CMsgDOTAWelcome::has_last_ip_address() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAWelcome::set_has_last_ip_address() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAWelcome::clear_has_last_ip_address() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAWelcome::clear_last_ip_address() {
  last_ip_address_ = 0u;
  clear_has_last_ip_address();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_ip_address() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.last_ip_address)
  return last_ip_address_;
}
inline void CMsgDOTAWelcome::set_last_ip_address(::google::protobuf::uint32 value) {
  set_has_last_ip_address();
  last_ip_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.last_ip_address)
}

// optional uint32 shutdownlawterminateminutes = 15;
inline bool CMsgDOTAWelcome::has_shutdownlawterminateminutes() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAWelcome::set_has_shutdownlawterminateminutes() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAWelcome::clear_has_shutdownlawterminateminutes() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAWelcome::clear_shutdownlawterminateminutes() {
  shutdownlawterminateminutes_ = 0u;
  clear_has_shutdownlawterminateminutes();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::shutdownlawterminateminutes() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.shutdownlawterminateminutes)
  return shutdownlawterminateminutes_;
}
inline void CMsgDOTAWelcome::set_shutdownlawterminateminutes(::google::protobuf::uint32 value) {
  set_has_shutdownlawterminateminutes();
  shutdownlawterminateminutes_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.shutdownlawterminateminutes)
}

// optional uint32 banned_word_list_version = 16;
inline bool CMsgDOTAWelcome::has_banned_word_list_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAWelcome::set_has_banned_word_list_version() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAWelcome::clear_has_banned_word_list_version() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAWelcome::clear_banned_word_list_version() {
  banned_word_list_version_ = 0u;
  clear_has_banned_word_list_version();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::banned_word_list_version() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.banned_word_list_version)
  return banned_word_list_version_;
}
inline void CMsgDOTAWelcome::set_banned_word_list_version(::google::protobuf::uint32 value) {
  set_has_banned_word_list_version();
  banned_word_list_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.banned_word_list_version)
}

// optional bool profile_private = 17;
inline bool CMsgDOTAWelcome::has_profile_private() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAWelcome::set_has_profile_private() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAWelcome::clear_has_profile_private() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAWelcome::clear_profile_private() {
  profile_private_ = false;
  clear_has_profile_private();
}
inline bool CMsgDOTAWelcome::profile_private() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.profile_private)
  return profile_private_;
}
inline void CMsgDOTAWelcome::set_profile_private(bool value) {
  set_has_profile_private();
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.profile_private)
}

// optional uint32 currency = 18;
inline bool CMsgDOTAWelcome::has_currency() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAWelcome::set_has_currency() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAWelcome::clear_has_currency() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAWelcome::clear_currency() {
  currency_ = 0u;
  clear_has_currency();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::currency() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.currency)
  return currency_;
}
inline void CMsgDOTAWelcome::set_currency(::google::protobuf::uint32 value) {
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.currency)
}

// optional uint32 bang_no = 19;
inline bool CMsgDOTAWelcome::has_bang_no() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_bang_no() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAWelcome::clear_has_bang_no() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAWelcome::clear_bang_no() {
  bang_no_ = 0u;
  clear_has_bang_no();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::bang_no() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.bang_no)
  return bang_no_;
}
inline void CMsgDOTAWelcome::set_bang_no(::google::protobuf::uint32 value) {
  set_has_bang_no();
  bang_no_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.bang_no)
}

// optional bool should_request_player_origin = 20;
inline bool CMsgDOTAWelcome::has_should_request_player_origin() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_should_request_player_origin() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAWelcome::clear_has_should_request_player_origin() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAWelcome::clear_should_request_player_origin() {
  should_request_player_origin_ = false;
  clear_has_should_request_player_origin();
}
inline bool CMsgDOTAWelcome::should_request_player_origin() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.should_request_player_origin)
  return should_request_player_origin_;
}
inline void CMsgDOTAWelcome::set_should_request_player_origin(bool value) {
  set_has_should_request_player_origin();
  should_request_player_origin_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.should_request_player_origin)
}

// optional uint64 compendium_unlocks = 21;
inline bool CMsgDOTAWelcome::has_compendium_unlocks() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_compendium_unlocks() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAWelcome::clear_has_compendium_unlocks() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAWelcome::clear_compendium_unlocks() {
  compendium_unlocks_ = GOOGLE_ULONGLONG(0);
  clear_has_compendium_unlocks();
}
inline ::google::protobuf::uint64 CMsgDOTAWelcome::compendium_unlocks() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.compendium_unlocks)
  return compendium_unlocks_;
}
inline void CMsgDOTAWelcome::set_compendium_unlocks(::google::protobuf::uint64 value) {
  set_has_compendium_unlocks();
  compendium_unlocks_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.compendium_unlocks)
}

// optional uint32 gc_socache_file_version = 22;
inline bool CMsgDOTAWelcome::has_gc_socache_file_version() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_gc_socache_file_version() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAWelcome::clear_has_gc_socache_file_version() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAWelcome::clear_gc_socache_file_version() {
  gc_socache_file_version_ = 0u;
  clear_has_gc_socache_file_version();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::gc_socache_file_version() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.gc_socache_file_version)
  return gc_socache_file_version_;
}
inline void CMsgDOTAWelcome::set_gc_socache_file_version(::google::protobuf::uint32 value) {
  set_has_gc_socache_file_version();
  gc_socache_file_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.gc_socache_file_version)
}

// repeated .CMsgDOTAWelcome.LocalizationDigest localization_digests = 23;
inline int CMsgDOTAWelcome::localization_digests_size() const {
  return localization_digests_.size();
}
inline void CMsgDOTAWelcome::clear_localization_digests() {
  localization_digests_.Clear();
}
inline const ::CMsgDOTAWelcome_LocalizationDigest& CMsgDOTAWelcome::localization_digests(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Get(index);
}
inline ::CMsgDOTAWelcome_LocalizationDigest* CMsgDOTAWelcome::mutable_localization_digests(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Mutable(index);
}
inline ::CMsgDOTAWelcome_LocalizationDigest* CMsgDOTAWelcome::add_localization_digests() {
  // @@protoc_insertion_point(field_add:CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >&
CMsgDOTAWelcome::localization_digests() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAWelcome.localization_digests)
  return localization_digests_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >*
CMsgDOTAWelcome::mutable_localization_digests() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAWelcome.localization_digests)
  return &localization_digests_;
}

// optional bool is_perfect_world_test_account = 24;
inline bool CMsgDOTAWelcome::has_is_perfect_world_test_account() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_is_perfect_world_test_account() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAWelcome::clear_has_is_perfect_world_test_account() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAWelcome::clear_is_perfect_world_test_account() {
  is_perfect_world_test_account_ = false;
  clear_has_is_perfect_world_test_account();
}
inline bool CMsgDOTAWelcome::is_perfect_world_test_account() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.is_perfect_world_test_account)
  return is_perfect_world_test_account_;
}
inline void CMsgDOTAWelcome::set_is_perfect_world_test_account(bool value) {
  set_has_is_perfect_world_test_account();
  is_perfect_world_test_account_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.is_perfect_world_test_account)
}

// repeated .EEvent active_events = 25;
inline int CMsgDOTAWelcome::active_events_size() const {
  return active_events_.size();
}
inline void CMsgDOTAWelcome::clear_active_events() {
  active_events_.Clear();
}
inline ::EEvent CMsgDOTAWelcome::active_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.active_events)
  return static_cast< ::EEvent >(active_events_.Get(index));
}
inline void CMsgDOTAWelcome::set_active_events(int index, ::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.active_events)
}
inline void CMsgDOTAWelcome::add_active_events(::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAWelcome.active_events)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgDOTAWelcome::active_events() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAWelcome.active_events)
  return active_events_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgDOTAWelcome::mutable_active_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAWelcome.active_events)
  return &active_events_;
}

// repeated .CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
inline int CMsgDOTAWelcome::extra_messages_size() const {
  return extra_messages_.size();
}
inline void CMsgDOTAWelcome::clear_extra_messages() {
  extra_messages_.Clear();
}
inline const ::CMsgDOTAWelcome_CExtraMsg& CMsgDOTAWelcome::extra_messages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Get(index);
}
inline ::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::mutable_extra_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Mutable(index);
}
inline ::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::add_extra_messages() {
  // @@protoc_insertion_point(field_add:CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >&
CMsgDOTAWelcome::extra_messages() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAWelcome.extra_messages)
  return extra_messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >*
CMsgDOTAWelcome::mutable_extra_messages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAWelcome.extra_messages)
  return &extra_messages_;
}

// optional uint64 minimum_recent_item_id = 27;
inline bool CMsgDOTAWelcome::has_minimum_recent_item_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_minimum_recent_item_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgDOTAWelcome::clear_has_minimum_recent_item_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgDOTAWelcome::clear_minimum_recent_item_id() {
  minimum_recent_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_minimum_recent_item_id();
}
inline ::google::protobuf::uint64 CMsgDOTAWelcome::minimum_recent_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.minimum_recent_item_id)
  return minimum_recent_item_id_;
}
inline void CMsgDOTAWelcome::set_minimum_recent_item_id(::google::protobuf::uint64 value) {
  set_has_minimum_recent_item_id();
  minimum_recent_item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.minimum_recent_item_id)
}

// -------------------------------------------------------------------

// CSODOTAGameHeroFavorites

// optional uint32 account_id = 1;
inline bool CSODOTAGameHeroFavorites::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSODOTAGameHeroFavorites::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSODOTAGameHeroFavorites::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSODOTAGameHeroFavorites::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::account_id() const {
  // @@protoc_insertion_point(field_get:CSODOTAGameHeroFavorites.account_id)
  return account_id_;
}
inline void CSODOTAGameHeroFavorites::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSODOTAGameHeroFavorites.account_id)
}

// optional uint32 hero_id = 2;
inline bool CSODOTAGameHeroFavorites::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSODOTAGameHeroFavorites::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSODOTAGameHeroFavorites::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSODOTAGameHeroFavorites::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::hero_id() const {
  // @@protoc_insertion_point(field_get:CSODOTAGameHeroFavorites.hero_id)
  return hero_id_;
}
inline void CSODOTAGameHeroFavorites::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CSODOTAGameHeroFavorites.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesAdd

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesAdd::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesAdd::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHeroFavoritesAdd::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHeroFavoritesAdd::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesAdd::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHeroFavoritesAdd.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesAdd::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHeroFavoritesAdd.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesRemove

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesRemove::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesRemove::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHeroFavoritesRemove::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHeroFavoritesRemove::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesRemove::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHeroFavoritesRemove.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesRemove::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHeroFavoritesRemove.hero_id)
}

// -------------------------------------------------------------------

// CMsgSetShowcaseHero

// optional uint32 showcase_hero_id = 1;
inline bool CMsgSetShowcaseHero::has_showcase_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetShowcaseHero::set_has_showcase_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetShowcaseHero::clear_has_showcase_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetShowcaseHero::clear_showcase_hero_id() {
  showcase_hero_id_ = 0u;
  clear_has_showcase_hero_id();
}
inline ::google::protobuf::uint32 CMsgSetShowcaseHero::showcase_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetShowcaseHero.showcase_hero_id)
  return showcase_hero_id_;
}
inline void CMsgSetShowcaseHero::set_showcase_hero_id(::google::protobuf::uint32 value) {
  set_has_showcase_hero_id();
  showcase_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetShowcaseHero.showcase_hero_id)
}

// -------------------------------------------------------------------

// CMsgSetFeaturedItems

// repeated uint64 featured_item_id = 1;
inline int CMsgSetFeaturedItems::featured_item_id_size() const {
  return featured_item_id_.size();
}
inline void CMsgSetFeaturedItems::clear_featured_item_id() {
  featured_item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgSetFeaturedItems::featured_item_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSetFeaturedItems.featured_item_id)
  return featured_item_id_.Get(index);
}
inline void CMsgSetFeaturedItems::set_featured_item_id(int index, ::google::protobuf::uint64 value) {
  featured_item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSetFeaturedItems.featured_item_id)
}
inline void CMsgSetFeaturedItems::add_featured_item_id(::google::protobuf::uint64 value) {
  featured_item_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSetFeaturedItems.featured_item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSetFeaturedItems::featured_item_id() const {
  // @@protoc_insertion_point(field_list:CMsgSetFeaturedItems.featured_item_id)
  return featured_item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSetFeaturedItems::mutable_featured_item_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSetFeaturedItems.featured_item_id)
  return &featured_item_id_;
}

// -------------------------------------------------------------------

// CMsgDOTAFeaturedItems

// optional uint32 account_id = 1;
inline bool CMsgDOTAFeaturedItems::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFeaturedItems::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFeaturedItems::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFeaturedItems::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFeaturedItems::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFeaturedItems.account_id)
  return account_id_;
}
inline void CMsgDOTAFeaturedItems::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFeaturedItems.account_id)
}

// repeated uint64 featured_item_id = 2;
inline int CMsgDOTAFeaturedItems::featured_item_id_size() const {
  return featured_item_id_.size();
}
inline void CMsgDOTAFeaturedItems::clear_featured_item_id() {
  featured_item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAFeaturedItems::featured_item_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_.Get(index);
}
inline void CMsgDOTAFeaturedItems::set_featured_item_id(int index, ::google::protobuf::uint64 value) {
  featured_item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAFeaturedItems.featured_item_id)
}
inline void CMsgDOTAFeaturedItems::add_featured_item_id(::google::protobuf::uint64 value) {
  featured_item_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAFeaturedItems.featured_item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAFeaturedItems::featured_item_id() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAFeaturedItems::mutable_featured_item_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFeaturedItems.featured_item_id)
  return &featured_item_id_;
}

// repeated bytes object_data = 3;
inline int CMsgDOTAFeaturedItems::object_data_size() const {
  return object_data_.size();
}
inline void CMsgDOTAFeaturedItems::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgDOTAFeaturedItems::object_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFeaturedItems.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgDOTAFeaturedItems::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAFeaturedItems.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgDOTAFeaturedItems.object_data)
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const char* value) {
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAFeaturedItems.object_data)
}
inline ::std::string* CMsgDOTAFeaturedItems::add_object_data() {
  return object_data_.Add();
}
inline void CMsgDOTAFeaturedItems::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::add_object_data(const char* value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDOTAFeaturedItems.object_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAFeaturedItems::object_data() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFeaturedItems.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAFeaturedItems::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFeaturedItems.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgRequestLeagueInfo

// -------------------------------------------------------------------

// CDynamicLeagueData

// optional uint32 league_id = 1;
inline bool CDynamicLeagueData::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDynamicLeagueData::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDynamicLeagueData::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDynamicLeagueData::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::league_id() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.league_id)
  return league_id_;
}
inline void CDynamicLeagueData::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.league_id)
}

// optional fixed32 last_match_time = 2;
inline bool CDynamicLeagueData::has_last_match_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDynamicLeagueData::set_has_last_match_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDynamicLeagueData::clear_has_last_match_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDynamicLeagueData::clear_last_match_time() {
  last_match_time_ = 0u;
  clear_has_last_match_time();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::last_match_time() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.last_match_time)
  return last_match_time_;
}
inline void CDynamicLeagueData::set_last_match_time(::google::protobuf::uint32 value) {
  set_has_last_match_time();
  last_match_time_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.last_match_time)
}

// optional uint32 prize_pool_usd = 3;
inline bool CDynamicLeagueData::has_prize_pool_usd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDynamicLeagueData::set_has_prize_pool_usd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDynamicLeagueData::clear_has_prize_pool_usd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDynamicLeagueData::clear_prize_pool_usd() {
  prize_pool_usd_ = 0u;
  clear_has_prize_pool_usd();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::prize_pool_usd() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.prize_pool_usd)
  return prize_pool_usd_;
}
inline void CDynamicLeagueData::set_prize_pool_usd(::google::protobuf::uint32 value) {
  set_has_prize_pool_usd();
  prize_pool_usd_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.prize_pool_usd)
}

// optional bool has_live_matches = 4;
inline bool CDynamicLeagueData::has_has_live_matches() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDynamicLeagueData::set_has_has_live_matches() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDynamicLeagueData::clear_has_has_live_matches() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDynamicLeagueData::clear_has_live_matches() {
  has_live_matches_ = false;
  clear_has_has_live_matches();
}
inline bool CDynamicLeagueData::has_live_matches() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.has_live_matches)
  return has_live_matches_;
}
inline void CDynamicLeagueData::set_has_live_matches(bool value) {
  set_has_has_live_matches();
  has_live_matches_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.has_live_matches)
}

// optional bool is_compendium_public = 5;
inline bool CDynamicLeagueData::has_is_compendium_public() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDynamicLeagueData::set_has_is_compendium_public() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDynamicLeagueData::clear_has_is_compendium_public() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDynamicLeagueData::clear_is_compendium_public() {
  is_compendium_public_ = false;
  clear_has_is_compendium_public();
}
inline bool CDynamicLeagueData::is_compendium_public() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.is_compendium_public)
  return is_compendium_public_;
}
inline void CDynamicLeagueData::set_is_compendium_public(bool value) {
  set_has_is_compendium_public();
  is_compendium_public_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.is_compendium_public)
}

// optional uint32 compendium_version = 6;
inline bool CDynamicLeagueData::has_compendium_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDynamicLeagueData::set_has_compendium_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDynamicLeagueData::clear_has_compendium_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDynamicLeagueData::clear_compendium_version() {
  compendium_version_ = 0u;
  clear_has_compendium_version();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::compendium_version() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.compendium_version)
  return compendium_version_;
}
inline void CDynamicLeagueData::set_compendium_version(::google::protobuf::uint32 value) {
  set_has_compendium_version();
  compendium_version_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.compendium_version)
}

// optional uint32 compendium_content_version = 7;
inline bool CDynamicLeagueData::has_compendium_content_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDynamicLeagueData::set_has_compendium_content_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDynamicLeagueData::clear_has_compendium_content_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDynamicLeagueData::clear_compendium_content_version() {
  compendium_content_version_ = 0u;
  clear_has_compendium_content_version();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::compendium_content_version() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.compendium_content_version)
  return compendium_content_version_;
}
inline void CDynamicLeagueData::set_compendium_content_version(::google::protobuf::uint32 value) {
  set_has_compendium_content_version();
  compendium_content_version_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.compendium_content_version)
}

// -------------------------------------------------------------------

// CStaticLeagueData

// optional uint32 league_id = 1;
inline bool CStaticLeagueData::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStaticLeagueData::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CStaticLeagueData::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CStaticLeagueData::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CStaticLeagueData::league_id() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.league_id)
  return league_id_;
}
inline void CStaticLeagueData::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.league_id)
}

// optional string name = 2;
inline bool CStaticLeagueData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStaticLeagueData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CStaticLeagueData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CStaticLeagueData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CStaticLeagueData::name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.name)
  return *name_;
}
inline void CStaticLeagueData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.name)
}
inline void CStaticLeagueData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.name)
}
inline void CStaticLeagueData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.name)
}
inline ::std::string* CStaticLeagueData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.name)
  return name_;
}
inline ::std::string* CStaticLeagueData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.name)
}

// optional string description = 3;
inline bool CStaticLeagueData::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStaticLeagueData::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CStaticLeagueData::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CStaticLeagueData::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CStaticLeagueData::description() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.description)
  return *description_;
}
inline void CStaticLeagueData::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.description)
}
inline void CStaticLeagueData::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.description)
}
inline void CStaticLeagueData::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.description)
}
inline ::std::string* CStaticLeagueData::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.description)
  return description_;
}
inline ::std::string* CStaticLeagueData::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.description)
}

// optional string banner_name = 4;
inline bool CStaticLeagueData::has_banner_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CStaticLeagueData::set_has_banner_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CStaticLeagueData::clear_has_banner_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CStaticLeagueData::clear_banner_name() {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_->clear();
  }
  clear_has_banner_name();
}
inline const ::std::string& CStaticLeagueData::banner_name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.banner_name)
  return *banner_name_;
}
inline void CStaticLeagueData::set_banner_name(const ::std::string& value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.banner_name)
}
inline void CStaticLeagueData::set_banner_name(const char* value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.banner_name)
}
inline void CStaticLeagueData::set_banner_name(const char* value, size_t size) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.banner_name)
}
inline ::std::string* CStaticLeagueData::mutable_banner_name() {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.banner_name)
  return banner_name_;
}
inline ::std::string* CStaticLeagueData::release_banner_name() {
  clear_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = banner_name_;
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_banner_name(::std::string* banner_name) {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banner_name_;
  }
  if (banner_name) {
    set_has_banner_name();
    banner_name_ = banner_name;
  } else {
    clear_has_banner_name();
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.banner_name)
}

// optional string itemdef_name = 5;
inline bool CStaticLeagueData::has_itemdef_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CStaticLeagueData::set_has_itemdef_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CStaticLeagueData::clear_has_itemdef_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CStaticLeagueData::clear_itemdef_name() {
  if (itemdef_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_->clear();
  }
  clear_has_itemdef_name();
}
inline const ::std::string& CStaticLeagueData::itemdef_name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.itemdef_name)
  return *itemdef_name_;
}
inline void CStaticLeagueData::set_itemdef_name(const ::std::string& value) {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  itemdef_name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.itemdef_name)
}
inline void CStaticLeagueData::set_itemdef_name(const char* value) {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  itemdef_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.itemdef_name)
}
inline void CStaticLeagueData::set_itemdef_name(const char* value, size_t size) {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  itemdef_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.itemdef_name)
}
inline ::std::string* CStaticLeagueData::mutable_itemdef_name() {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.itemdef_name)
  return itemdef_name_;
}
inline ::std::string* CStaticLeagueData::release_itemdef_name() {
  clear_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemdef_name_;
    itemdef_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_itemdef_name(::std::string* itemdef_name) {
  if (itemdef_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemdef_name_;
  }
  if (itemdef_name) {
    set_has_itemdef_name();
    itemdef_name_ = itemdef_name;
  } else {
    clear_has_itemdef_name();
    itemdef_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.itemdef_name)
}

// optional string url = 6;
inline bool CStaticLeagueData::has_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CStaticLeagueData::set_has_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CStaticLeagueData::clear_has_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CStaticLeagueData::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CStaticLeagueData::url() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.url)
  return *url_;
}
inline void CStaticLeagueData::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.url)
}
inline void CStaticLeagueData::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.url)
}
inline void CStaticLeagueData::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.url)
}
inline ::std::string* CStaticLeagueData::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.url)
  return url_;
}
inline ::std::string* CStaticLeagueData::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.url)
}

// optional uint32 item_def_index = 7;
inline bool CStaticLeagueData::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CStaticLeagueData::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CStaticLeagueData::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CStaticLeagueData::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
inline ::google::protobuf::uint32 CStaticLeagueData::item_def_index() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.item_def_index)
  return item_def_index_;
}
inline void CStaticLeagueData::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.item_def_index)
}

// optional uint32 hud_skin_item_def_index = 8;
inline bool CStaticLeagueData::has_hud_skin_item_def_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CStaticLeagueData::set_has_hud_skin_item_def_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CStaticLeagueData::clear_has_hud_skin_item_def_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CStaticLeagueData::clear_hud_skin_item_def_index() {
  hud_skin_item_def_index_ = 0u;
  clear_has_hud_skin_item_def_index();
}
inline ::google::protobuf::uint32 CStaticLeagueData::hud_skin_item_def_index() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.hud_skin_item_def_index)
  return hud_skin_item_def_index_;
}
inline void CStaticLeagueData::set_hud_skin_item_def_index(::google::protobuf::uint32 value) {
  set_has_hud_skin_item_def_index();
  hud_skin_item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.hud_skin_item_def_index)
}

// optional string loading_screen_name = 9;
inline bool CStaticLeagueData::has_loading_screen_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CStaticLeagueData::set_has_loading_screen_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CStaticLeagueData::clear_has_loading_screen_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CStaticLeagueData::clear_loading_screen_name() {
  if (loading_screen_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_->clear();
  }
  clear_has_loading_screen_name();
}
inline const ::std::string& CStaticLeagueData::loading_screen_name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.loading_screen_name)
  return *loading_screen_name_;
}
inline void CStaticLeagueData::set_loading_screen_name(const ::std::string& value) {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  loading_screen_name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.loading_screen_name)
}
inline void CStaticLeagueData::set_loading_screen_name(const char* value) {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  loading_screen_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.loading_screen_name)
}
inline void CStaticLeagueData::set_loading_screen_name(const char* value, size_t size) {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  loading_screen_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.loading_screen_name)
}
inline ::std::string* CStaticLeagueData::mutable_loading_screen_name() {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.loading_screen_name)
  return loading_screen_name_;
}
inline ::std::string* CStaticLeagueData::release_loading_screen_name() {
  clear_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loading_screen_name_;
    loading_screen_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_loading_screen_name(::std::string* loading_screen_name) {
  if (loading_screen_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loading_screen_name_;
  }
  if (loading_screen_name) {
    set_has_loading_screen_name();
    loading_screen_name_ = loading_screen_name;
  } else {
    clear_has_loading_screen_name();
    loading_screen_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.loading_screen_name)
}

// optional uint32 base_prize_pool = 10;
inline bool CStaticLeagueData::has_base_prize_pool() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CStaticLeagueData::set_has_base_prize_pool() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CStaticLeagueData::clear_has_base_prize_pool() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CStaticLeagueData::clear_base_prize_pool() {
  base_prize_pool_ = 0u;
  clear_has_base_prize_pool();
}
inline ::google::protobuf::uint32 CStaticLeagueData::base_prize_pool() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.base_prize_pool)
  return base_prize_pool_;
}
inline void CStaticLeagueData::set_base_prize_pool(::google::protobuf::uint32 value) {
  set_has_base_prize_pool();
  base_prize_pool_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.base_prize_pool)
}

// optional bool is_major = 11;
inline bool CStaticLeagueData::has_is_major() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CStaticLeagueData::set_has_is_major() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CStaticLeagueData::clear_has_is_major() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CStaticLeagueData::clear_is_major() {
  is_major_ = false;
  clear_has_is_major();
}
inline bool CStaticLeagueData::is_major() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.is_major)
  return is_major_;
}
inline void CStaticLeagueData::set_is_major(bool value) {
  set_has_is_major();
  is_major_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.is_major)
}

// optional uint32 sort_order = 12;
inline bool CStaticLeagueData::has_sort_order() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CStaticLeagueData::set_has_sort_order() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CStaticLeagueData::clear_has_sort_order() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CStaticLeagueData::clear_sort_order() {
  sort_order_ = 0u;
  clear_has_sort_order();
}
inline ::google::protobuf::uint32 CStaticLeagueData::sort_order() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.sort_order)
  return sort_order_;
}
inline void CStaticLeagueData::set_sort_order(::google::protobuf::uint32 value) {
  set_has_sort_order();
  sort_order_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.sort_order)
}

// optional uint32 tier = 13;
inline bool CStaticLeagueData::has_tier() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CStaticLeagueData::set_has_tier() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CStaticLeagueData::clear_has_tier() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CStaticLeagueData::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CStaticLeagueData::tier() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.tier)
  return tier_;
}
inline void CStaticLeagueData::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.tier)
}

// optional uint32 amateur_region = 14;
inline bool CStaticLeagueData::has_amateur_region() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CStaticLeagueData::set_has_amateur_region() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CStaticLeagueData::clear_has_amateur_region() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CStaticLeagueData::clear_amateur_region() {
  amateur_region_ = 0u;
  clear_has_amateur_region();
}
inline ::google::protobuf::uint32 CStaticLeagueData::amateur_region() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.amateur_region)
  return amateur_region_;
}
inline void CStaticLeagueData::set_amateur_region(::google::protobuf::uint32 value) {
  set_has_amateur_region();
  amateur_region_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.amateur_region)
}

// optional string organizer = 15;
inline bool CStaticLeagueData::has_organizer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CStaticLeagueData::set_has_organizer() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CStaticLeagueData::clear_has_organizer() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CStaticLeagueData::clear_organizer() {
  if (organizer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    organizer_->clear();
  }
  clear_has_organizer();
}
inline const ::std::string& CStaticLeagueData::organizer() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.organizer)
  return *organizer_;
}
inline void CStaticLeagueData::set_organizer(const ::std::string& value) {
  set_has_organizer();
  if (organizer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    organizer_ = new ::std::string;
  }
  organizer_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.organizer)
}
inline void CStaticLeagueData::set_organizer(const char* value) {
  set_has_organizer();
  if (organizer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    organizer_ = new ::std::string;
  }
  organizer_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.organizer)
}
inline void CStaticLeagueData::set_organizer(const char* value, size_t size) {
  set_has_organizer();
  if (organizer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    organizer_ = new ::std::string;
  }
  organizer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.organizer)
}
inline ::std::string* CStaticLeagueData::mutable_organizer() {
  set_has_organizer();
  if (organizer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    organizer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.organizer)
  return organizer_;
}
inline ::std::string* CStaticLeagueData::release_organizer() {
  clear_has_organizer();
  if (organizer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = organizer_;
    organizer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_organizer(::std::string* organizer) {
  if (organizer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete organizer_;
  }
  if (organizer) {
    set_has_organizer();
    organizer_ = organizer;
  } else {
    clear_has_organizer();
    organizer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.organizer)
}

// optional uint32 start_date = 16;
inline bool CStaticLeagueData::has_start_date() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CStaticLeagueData::set_has_start_date() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CStaticLeagueData::clear_has_start_date() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CStaticLeagueData::clear_start_date() {
  start_date_ = 0u;
  clear_has_start_date();
}
inline ::google::protobuf::uint32 CStaticLeagueData::start_date() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.start_date)
  return start_date_;
}
inline void CStaticLeagueData::set_start_date(::google::protobuf::uint32 value) {
  set_has_start_date();
  start_date_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.start_date)
}

// optional uint32 end_date = 17;
inline bool CStaticLeagueData::has_end_date() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CStaticLeagueData::set_has_end_date() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CStaticLeagueData::clear_has_end_date() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CStaticLeagueData::clear_end_date() {
  end_date_ = 0u;
  clear_has_end_date();
}
inline ::google::protobuf::uint32 CStaticLeagueData::end_date() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.end_date)
  return end_date_;
}
inline void CStaticLeagueData::set_end_date(::google::protobuf::uint32 value) {
  set_has_end_date();
  end_date_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.end_date)
}

// optional string location = 18;
inline bool CStaticLeagueData::has_location() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CStaticLeagueData::set_has_location() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CStaticLeagueData::clear_has_location() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CStaticLeagueData::clear_location() {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& CStaticLeagueData::location() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.location)
  return *location_;
}
inline void CStaticLeagueData::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.location)
}
inline void CStaticLeagueData::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.location)
}
inline void CStaticLeagueData::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.location)
}
inline ::std::string* CStaticLeagueData::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.location)
  return location_;
}
inline ::std::string* CStaticLeagueData::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_location(::std::string* location) {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_;
  }
  if (location) {
    set_has_location();
    location_ = location;
  } else {
    clear_has_location();
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.location)
}

// optional string inventory_image = 19;
inline bool CStaticLeagueData::has_inventory_image() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CStaticLeagueData::set_has_inventory_image() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CStaticLeagueData::clear_has_inventory_image() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CStaticLeagueData::clear_inventory_image() {
  if (inventory_image_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inventory_image_->clear();
  }
  clear_has_inventory_image();
}
inline const ::std::string& CStaticLeagueData::inventory_image() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.inventory_image)
  return *inventory_image_;
}
inline void CStaticLeagueData::set_inventory_image(const ::std::string& value) {
  set_has_inventory_image();
  if (inventory_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inventory_image_ = new ::std::string;
  }
  inventory_image_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.inventory_image)
}
inline void CStaticLeagueData::set_inventory_image(const char* value) {
  set_has_inventory_image();
  if (inventory_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inventory_image_ = new ::std::string;
  }
  inventory_image_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.inventory_image)
}
inline void CStaticLeagueData::set_inventory_image(const char* value, size_t size) {
  set_has_inventory_image();
  if (inventory_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inventory_image_ = new ::std::string;
  }
  inventory_image_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.inventory_image)
}
inline ::std::string* CStaticLeagueData::mutable_inventory_image() {
  set_has_inventory_image();
  if (inventory_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inventory_image_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.inventory_image)
  return inventory_image_;
}
inline ::std::string* CStaticLeagueData::release_inventory_image() {
  clear_has_inventory_image();
  if (inventory_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inventory_image_;
    inventory_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_inventory_image(::std::string* inventory_image) {
  if (inventory_image_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inventory_image_;
  }
  if (inventory_image) {
    set_has_inventory_image();
    inventory_image_ = inventory_image;
  } else {
    clear_has_inventory_image();
    inventory_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.inventory_image)
}

// optional string square_image = 20;
inline bool CStaticLeagueData::has_square_image() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CStaticLeagueData::set_has_square_image() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CStaticLeagueData::clear_has_square_image() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CStaticLeagueData::clear_square_image() {
  if (square_image_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    square_image_->clear();
  }
  clear_has_square_image();
}
inline const ::std::string& CStaticLeagueData::square_image() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.square_image)
  return *square_image_;
}
inline void CStaticLeagueData::set_square_image(const ::std::string& value) {
  set_has_square_image();
  if (square_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    square_image_ = new ::std::string;
  }
  square_image_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.square_image)
}
inline void CStaticLeagueData::set_square_image(const char* value) {
  set_has_square_image();
  if (square_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    square_image_ = new ::std::string;
  }
  square_image_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.square_image)
}
inline void CStaticLeagueData::set_square_image(const char* value, size_t size) {
  set_has_square_image();
  if (square_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    square_image_ = new ::std::string;
  }
  square_image_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.square_image)
}
inline ::std::string* CStaticLeagueData::mutable_square_image() {
  set_has_square_image();
  if (square_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    square_image_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.square_image)
  return square_image_;
}
inline ::std::string* CStaticLeagueData::release_square_image() {
  clear_has_square_image();
  if (square_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = square_image_;
    square_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_square_image(::std::string* square_image) {
  if (square_image_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete square_image_;
  }
  if (square_image) {
    set_has_square_image();
    square_image_ = square_image;
  } else {
    clear_has_square_image();
    square_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.square_image)
}

// optional bool battle_pass_rollup = 21;
inline bool CStaticLeagueData::has_battle_pass_rollup() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CStaticLeagueData::set_has_battle_pass_rollup() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CStaticLeagueData::clear_has_battle_pass_rollup() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CStaticLeagueData::clear_battle_pass_rollup() {
  battle_pass_rollup_ = false;
  clear_has_battle_pass_rollup();
}
inline bool CStaticLeagueData::battle_pass_rollup() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.battle_pass_rollup)
  return battle_pass_rollup_;
}
inline void CStaticLeagueData::set_battle_pass_rollup(bool value) {
  set_has_battle_pass_rollup();
  battle_pass_rollup_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.battle_pass_rollup)
}

// -------------------------------------------------------------------

// CLeagueData

// optional .CDynamicLeagueData dynamic_data = 1;
inline bool CLeagueData::has_dynamic_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLeagueData::set_has_dynamic_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLeagueData::clear_has_dynamic_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLeagueData::clear_dynamic_data() {
  if (dynamic_data_ != NULL) dynamic_data_->::CDynamicLeagueData::Clear();
  clear_has_dynamic_data();
}
inline const ::CDynamicLeagueData& CLeagueData::dynamic_data() const {
  // @@protoc_insertion_point(field_get:CLeagueData.dynamic_data)
  return dynamic_data_ != NULL ? *dynamic_data_ : *default_instance_->dynamic_data_;
}
inline ::CDynamicLeagueData* CLeagueData::mutable_dynamic_data() {
  set_has_dynamic_data();
  if (dynamic_data_ == NULL) dynamic_data_ = new ::CDynamicLeagueData;
  // @@protoc_insertion_point(field_mutable:CLeagueData.dynamic_data)
  return dynamic_data_;
}
inline ::CDynamicLeagueData* CLeagueData::release_dynamic_data() {
  clear_has_dynamic_data();
  ::CDynamicLeagueData* temp = dynamic_data_;
  dynamic_data_ = NULL;
  return temp;
}
inline void CLeagueData::set_allocated_dynamic_data(::CDynamicLeagueData* dynamic_data) {
  delete dynamic_data_;
  dynamic_data_ = dynamic_data;
  if (dynamic_data) {
    set_has_dynamic_data();
  } else {
    clear_has_dynamic_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CLeagueData.dynamic_data)
}

// optional .CStaticLeagueData static_data = 2;
inline bool CLeagueData::has_static_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLeagueData::set_has_static_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLeagueData::clear_has_static_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLeagueData::clear_static_data() {
  if (static_data_ != NULL) static_data_->::CStaticLeagueData::Clear();
  clear_has_static_data();
}
inline const ::CStaticLeagueData& CLeagueData::static_data() const {
  // @@protoc_insertion_point(field_get:CLeagueData.static_data)
  return static_data_ != NULL ? *static_data_ : *default_instance_->static_data_;
}
inline ::CStaticLeagueData* CLeagueData::mutable_static_data() {
  set_has_static_data();
  if (static_data_ == NULL) static_data_ = new ::CStaticLeagueData;
  // @@protoc_insertion_point(field_mutable:CLeagueData.static_data)
  return static_data_;
}
inline ::CStaticLeagueData* CLeagueData::release_static_data() {
  clear_has_static_data();
  ::CStaticLeagueData* temp = static_data_;
  static_data_ = NULL;
  return temp;
}
inline void CLeagueData::set_allocated_static_data(::CStaticLeagueData* static_data) {
  delete static_data_;
  static_data_ = static_data;
  if (static_data) {
    set_has_static_data();
  } else {
    clear_has_static_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CLeagueData.static_data)
}

// optional bool is_owned = 3;
inline bool CLeagueData::has_is_owned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLeagueData::set_has_is_owned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLeagueData::clear_has_is_owned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLeagueData::clear_is_owned() {
  is_owned_ = false;
  clear_has_is_owned();
}
inline bool CLeagueData::is_owned() const {
  // @@protoc_insertion_point(field_get:CLeagueData.is_owned)
  return is_owned_;
}
inline void CLeagueData::set_is_owned(bool value) {
  set_has_is_owned();
  is_owned_ = value;
  // @@protoc_insertion_point(field_set:CLeagueData.is_owned)
}

// -------------------------------------------------------------------

// CMsgResponseLeagueInfo

// repeated .CDynamicLeagueData leagues = 1;
inline int CMsgResponseLeagueInfo::leagues_size() const {
  return leagues_.size();
}
inline void CMsgResponseLeagueInfo::clear_leagues() {
  leagues_.Clear();
}
inline const ::CDynamicLeagueData& CMsgResponseLeagueInfo::leagues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgResponseLeagueInfo.leagues)
  return leagues_.Get(index);
}
inline ::CDynamicLeagueData* CMsgResponseLeagueInfo::mutable_leagues(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgResponseLeagueInfo.leagues)
  return leagues_.Mutable(index);
}
inline ::CDynamicLeagueData* CMsgResponseLeagueInfo::add_leagues() {
  // @@protoc_insertion_point(field_add:CMsgResponseLeagueInfo.leagues)
  return leagues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >&
CMsgResponseLeagueInfo::leagues() const {
  // @@protoc_insertion_point(field_list:CMsgResponseLeagueInfo.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >*
CMsgResponseLeagueInfo::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgResponseLeagueInfo.leagues)
  return &leagues_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes_PlayerVote

// optional uint32 account_id = 1;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.PlayerVote.account_id)
  return account_id_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchVotes.PlayerVote.account_id)
}

// optional uint32 vote = 2;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_vote() {
  vote_ = 0u;
  clear_has_vote();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::vote() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.PlayerVote.vote)
  return vote_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_vote(::google::protobuf::uint32 value) {
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchVotes.PlayerVote.vote)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes

// optional uint64 match_id = 1;
inline bool CMsgDOTAMatchVotes::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchVotes::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchVotes::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchVotes::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.match_id)
  return match_id_;
}
inline void CMsgDOTAMatchVotes::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchVotes.match_id)
}

// repeated .CMsgDOTAMatchVotes.PlayerVote votes = 2;
inline int CMsgDOTAMatchVotes::votes_size() const {
  return votes_.size();
}
inline void CMsgDOTAMatchVotes::clear_votes() {
  votes_.Clear();
}
inline const ::CMsgDOTAMatchVotes_PlayerVote& CMsgDOTAMatchVotes::votes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.votes)
  return votes_.Get(index);
}
inline ::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchVotes.votes)
  return votes_.Mutable(index);
}
inline ::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::add_votes() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchVotes.votes)
  return votes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >&
CMsgDOTAMatchVotes::votes() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchVotes.votes)
  return votes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >*
CMsgDOTAMatchVotes::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchVotes.votes)
  return &votes_;
}

// -------------------------------------------------------------------

// CMsgCastMatchVote

// optional uint64 match_id = 1;
inline bool CMsgCastMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCastMatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCastMatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCastMatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgCastMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgCastMatchVote.match_id)
  return match_id_;
}
inline void CMsgCastMatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgCastMatchVote.match_id)
}

// optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgCastMatchVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCastMatchVote::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCastMatchVote::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCastMatchVote::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::DOTAMatchVote CMsgCastMatchVote::vote() const {
  // @@protoc_insertion_point(field_get:CMsgCastMatchVote.vote)
  return static_cast< ::DOTAMatchVote >(vote_);
}
inline void CMsgCastMatchVote::set_vote(::DOTAMatchVote value) {
  assert(::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgCastMatchVote.vote)
}

// -------------------------------------------------------------------

// CMsgRetrieveMatchVote

// optional uint64 match_id = 1;
inline bool CMsgRetrieveMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRetrieveMatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRetrieveMatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRetrieveMatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgRetrieveMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgRetrieveMatchVote.match_id)
  return match_id_;
}
inline void CMsgRetrieveMatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRetrieveMatchVote.match_id)
}

// optional uint32 incremental = 2;
inline bool CMsgRetrieveMatchVote::has_incremental() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRetrieveMatchVote::set_has_incremental() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRetrieveMatchVote::clear_has_incremental() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRetrieveMatchVote::clear_incremental() {
  incremental_ = 0u;
  clear_has_incremental();
}
inline ::google::protobuf::uint32 CMsgRetrieveMatchVote::incremental() const {
  // @@protoc_insertion_point(field_get:CMsgRetrieveMatchVote.incremental)
  return incremental_;
}
inline void CMsgRetrieveMatchVote::set_incremental(::google::protobuf::uint32 value) {
  set_has_incremental();
  incremental_ = value;
  // @@protoc_insertion_point(field_set:CMsgRetrieveMatchVote.incremental)
}

// -------------------------------------------------------------------

// CMsgMatchVoteResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgMatchVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchVoteResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchVoteResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.eresult)
  return eresult_;
}
inline void CMsgMatchVoteResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.eresult)
}

// optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgMatchVoteResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchVoteResponse::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchVoteResponse::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::DOTAMatchVote CMsgMatchVoteResponse::vote() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.vote)
  return static_cast< ::DOTAMatchVote >(vote_);
}
inline void CMsgMatchVoteResponse::set_vote(::DOTAMatchVote value) {
  assert(::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.vote)
}

// optional uint32 positive_votes = 3;
inline bool CMsgMatchVoteResponse::has_positive_votes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_positive_votes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchVoteResponse::clear_has_positive_votes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchVoteResponse::clear_positive_votes() {
  positive_votes_ = 0u;
  clear_has_positive_votes();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::positive_votes() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.positive_votes)
  return positive_votes_;
}
inline void CMsgMatchVoteResponse::set_positive_votes(::google::protobuf::uint32 value) {
  set_has_positive_votes();
  positive_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.positive_votes)
}

// optional uint32 negative_votes = 4;
inline bool CMsgMatchVoteResponse::has_negative_votes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_negative_votes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchVoteResponse::clear_has_negative_votes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchVoteResponse::clear_negative_votes() {
  negative_votes_ = 0u;
  clear_has_negative_votes();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::negative_votes() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.negative_votes)
  return negative_votes_;
}
inline void CMsgMatchVoteResponse::set_negative_votes(::google::protobuf::uint32 value) {
  set_has_negative_votes();
  negative_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.negative_votes)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedPlayer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
}

// optional float average_scaled_metric = 3;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_average_scaled_metric() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_average_scaled_metric() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_average_scaled_metric() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_average_scaled_metric() {
  average_scaled_metric_ = 0;
  clear_has_average_scaled_metric();
}
inline float CMsgDOTAHallOfFame_FeaturedPlayer::average_scaled_metric() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
  return average_scaled_metric_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_average_scaled_metric(float value) {
  set_has_average_scaled_metric();
  average_scaled_metric_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
}

// optional uint32 num_games = 4;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_num_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_num_games() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::num_games() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
  return num_games_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedFarmer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
}

// optional uint32 gold_per_min = 3;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_gold_per_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_gold_per_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_gold_per_min() {
  gold_per_min_ = 0u;
  clear_has_gold_per_min();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::gold_per_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
  return gold_per_min_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_gold_per_min(::google::protobuf::uint32 value) {
  set_has_gold_per_min();
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
}

// optional uint64 match_id = 4;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_match_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_match_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAHallOfFame_FeaturedFarmer::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
  return match_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFame::has_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame::set_has_week() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame::clear_has_week() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame::clear_week() {
  week_ = 0u;
  clear_has_week();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame::week() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.week)
  return week_;
}
inline void CMsgDOTAHallOfFame::set_week(::google::protobuf::uint32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.week)
}

// repeated .CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
inline int CMsgDOTAHallOfFame::featured_players_size() const {
  return featured_players_.size();
}
inline void CMsgDOTAHallOfFame::clear_featured_players() {
  featured_players_.Clear();
}
inline const ::CMsgDOTAHallOfFame_FeaturedPlayer& CMsgDOTAHallOfFame::featured_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Get(index);
}
inline ::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::mutable_featured_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Mutable(index);
}
inline ::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::add_featured_players() {
  // @@protoc_insertion_point(field_add:CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >&
CMsgDOTAHallOfFame::featured_players() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAHallOfFame.featured_players)
  return featured_players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >*
CMsgDOTAHallOfFame::mutable_featured_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAHallOfFame.featured_players)
  return &featured_players_;
}

// optional .CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
inline bool CMsgDOTAHallOfFame::has_featured_farmer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame::set_has_featured_farmer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame::clear_has_featured_farmer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame::clear_featured_farmer() {
  if (featured_farmer_ != NULL) featured_farmer_->::CMsgDOTAHallOfFame_FeaturedFarmer::Clear();
  clear_has_featured_farmer();
}
inline const ::CMsgDOTAHallOfFame_FeaturedFarmer& CMsgDOTAHallOfFame::featured_farmer() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.featured_farmer)
  return featured_farmer_ != NULL ? *featured_farmer_ : *default_instance_->featured_farmer_;
}
inline ::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::mutable_featured_farmer() {
  set_has_featured_farmer();
  if (featured_farmer_ == NULL) featured_farmer_ = new ::CMsgDOTAHallOfFame_FeaturedFarmer;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHallOfFame.featured_farmer)
  return featured_farmer_;
}
inline ::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::release_featured_farmer() {
  clear_has_featured_farmer();
  ::CMsgDOTAHallOfFame_FeaturedFarmer* temp = featured_farmer_;
  featured_farmer_ = NULL;
  return temp;
}
inline void CMsgDOTAHallOfFame::set_allocated_featured_farmer(::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer) {
  delete featured_farmer_;
  featured_farmer_ = featured_farmer;
  if (featured_farmer) {
    set_has_featured_farmer();
  } else {
    clear_has_featured_farmer();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAHallOfFame.featured_farmer)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameRequest

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFameRequest::has_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameRequest::set_has_week() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFameRequest::clear_has_week() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFameRequest::clear_week() {
  week_ = 0u;
  clear_has_week();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameRequest::week() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFameRequest.week)
  return week_;
}
inline void CMsgDOTAHallOfFameRequest::set_week(::google::protobuf::uint32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFameRequest.week)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameResponse

// optional .CMsgDOTAHallOfFame hall_of_fame = 1;
inline bool CMsgDOTAHallOfFameResponse::has_hall_of_fame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::set_has_hall_of_fame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFameResponse::clear_has_hall_of_fame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFameResponse::clear_hall_of_fame() {
  if (hall_of_fame_ != NULL) hall_of_fame_->::CMsgDOTAHallOfFame::Clear();
  clear_has_hall_of_fame();
}
inline const ::CMsgDOTAHallOfFame& CMsgDOTAHallOfFameResponse::hall_of_fame() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFameResponse.hall_of_fame)
  return hall_of_fame_ != NULL ? *hall_of_fame_ : *default_instance_->hall_of_fame_;
}
inline ::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::mutable_hall_of_fame() {
  set_has_hall_of_fame();
  if (hall_of_fame_ == NULL) hall_of_fame_ = new ::CMsgDOTAHallOfFame;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHallOfFameResponse.hall_of_fame)
  return hall_of_fame_;
}
inline ::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::release_hall_of_fame() {
  clear_has_hall_of_fame();
  ::CMsgDOTAHallOfFame* temp = hall_of_fame_;
  hall_of_fame_ = NULL;
  return temp;
}
inline void CMsgDOTAHallOfFameResponse::set_allocated_hall_of_fame(::CMsgDOTAHallOfFame* hall_of_fame) {
  delete hall_of_fame_;
  hall_of_fame_ = hall_of_fame;
  if (hall_of_fame) {
    set_has_hall_of_fame();
  } else {
    clear_has_hall_of_fame();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAHallOfFameResponse.hall_of_fame)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTAHallOfFameResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFameResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFameResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFameResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHallOfFameResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFameResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreRequest

// optional int32 round = 1 [default = -1];
inline bool CMsgDOTAHalloweenHighScoreRequest::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreRequest::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreRequest::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreRequest::clear_round() {
  round_ = -1;
  clear_has_round();
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreRequest::round() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreRequest.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreRequest::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreRequest.round)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreResponse.score)
}

// optional .CMsgDOTAMatch match = 2;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_match() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_match() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_match() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_match() {
  if (match_ != NULL) match_->::CMsgDOTAMatch::Clear();
  clear_has_match();
}
inline const ::CMsgDOTAMatch& CMsgDOTAHalloweenHighScoreResponse::match() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.match)
  return match_ != NULL ? *match_ : *default_instance_->match_;
}
inline ::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::mutable_match() {
  set_has_match();
  if (match_ == NULL) match_ = new ::CMsgDOTAMatch;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHalloweenHighScoreResponse.match)
  return match_;
}
inline ::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::release_match() {
  clear_has_match();
  ::CMsgDOTAMatch* temp = match_;
  match_ = NULL;
  return temp;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_allocated_match(::CMsgDOTAMatch* match) {
  delete match_;
  match_ = match;
  if (match) {
    set_has_match();
  } else {
    clear_has_match();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAHalloweenHighScoreResponse.match)
}

// optional uint32 eresult = 3;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreResponse.eresult)
}

// optional int32 round = 4;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_round() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_round() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_round() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreResponse::round() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreResponse.round)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesRequest

// optional uint32 version_seen = 1;
inline bool CMsgDOTAStorePromoPagesRequest::has_version_seen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesRequest::set_has_version_seen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAStorePromoPagesRequest::clear_has_version_seen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAStorePromoPagesRequest::clear_version_seen() {
  version_seen_ = 0u;
  clear_has_version_seen();
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesRequest::version_seen() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesRequest.version_seen)
  return version_seen_;
}
inline void CMsgDOTAStorePromoPagesRequest::set_version_seen(::google::protobuf::uint32 value) {
  set_has_version_seen();
  version_seen_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesRequest.version_seen)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse_PromoPage

// optional uint32 promo_id = 1;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_promo_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_promo_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_promo_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_promo_id() {
  promo_id_ = 0u;
  clear_has_promo_id();
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesResponse_PromoPage::promo_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
  return promo_id_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_promo_id(::google::protobuf::uint32 value) {
  set_has_promo_id();
  promo_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
}

// optional string title = 2;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::title() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return *title_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return title_;
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}

// optional string url = 3;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::url() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return *url_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return url_;
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse

// repeated .CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
inline int CMsgDOTAStorePromoPagesResponse::pages_size() const {
  return pages_.size();
}
inline void CMsgDOTAStorePromoPagesResponse::clear_pages() {
  pages_.Clear();
}
inline const ::CMsgDOTAStorePromoPagesResponse_PromoPage& CMsgDOTAStorePromoPagesResponse::pages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Get(index);
}
inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Mutable(index);
}
inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::add_pages() {
  // @@protoc_insertion_point(field_add:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >&
CMsgDOTAStorePromoPagesResponse::pages() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >*
CMsgDOTAStorePromoPagesResponse::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAStorePromoPagesResponse.pages)
  return &pages_;
}

// -------------------------------------------------------------------

// CMsgLeagueScheduleBlockTeamInfo

// optional uint32 team_id = 1;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlockTeamInfo::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlockTeamInfo.team_id)
  return team_id_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlockTeamInfo.team_id)
}

// optional string name = 2;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgLeagueScheduleBlockTeamInfo::name() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlockTeamInfo.name)
  return *name_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlockTeamInfo.name)
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgLeagueScheduleBlockTeamInfo.name)
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgLeagueScheduleBlockTeamInfo.name)
}
inline ::std::string* CMsgLeagueScheduleBlockTeamInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLeagueScheduleBlockTeamInfo.name)
  return name_;
}
inline ::std::string* CMsgLeagueScheduleBlockTeamInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLeagueScheduleBlockTeamInfo.name)
}

// optional uint64 logo = 4;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgLeagueScheduleBlockTeamInfo::logo() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlockTeamInfo.logo)
  return logo_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlockTeamInfo.logo)
}

// -------------------------------------------------------------------

// CMsgLeagueScheduleBlock

// optional uint32 block_id = 1;
inline bool CMsgLeagueScheduleBlock::has_block_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_block_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeagueScheduleBlock::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeagueScheduleBlock::clear_block_id() {
  block_id_ = 0u;
  clear_has_block_id();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlock::block_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.block_id)
  return block_id_;
}
inline void CMsgLeagueScheduleBlock::set_block_id(::google::protobuf::uint32 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.block_id)
}

// optional uint32 start_time = 2;
inline bool CMsgLeagueScheduleBlock::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeagueScheduleBlock::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeagueScheduleBlock::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlock::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.start_time)
  return start_time_;
}
inline void CMsgLeagueScheduleBlock::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.start_time)
}

// optional bool finals = 4;
inline bool CMsgLeagueScheduleBlock::has_finals() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_finals() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLeagueScheduleBlock::clear_has_finals() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLeagueScheduleBlock::clear_finals() {
  finals_ = false;
  clear_has_finals();
}
inline bool CMsgLeagueScheduleBlock::finals() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.finals)
  return finals_;
}
inline void CMsgLeagueScheduleBlock::set_finals(bool value) {
  set_has_finals();
  finals_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.finals)
}

// optional string comment = 5;
inline bool CMsgLeagueScheduleBlock::has_comment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_comment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLeagueScheduleBlock::clear_has_comment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLeagueScheduleBlock::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgLeagueScheduleBlock::comment() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.comment)
  return *comment_;
}
inline void CMsgLeagueScheduleBlock::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.comment)
}
inline void CMsgLeagueScheduleBlock::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgLeagueScheduleBlock.comment)
}
inline void CMsgLeagueScheduleBlock::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgLeagueScheduleBlock.comment)
}
inline ::std::string* CMsgLeagueScheduleBlock::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLeagueScheduleBlock.comment)
  return comment_;
}
inline ::std::string* CMsgLeagueScheduleBlock::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgLeagueScheduleBlock::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLeagueScheduleBlock.comment)
}

// repeated .CMsgLeagueScheduleBlockTeamInfo teams = 6;
inline int CMsgLeagueScheduleBlock::teams_size() const {
  return teams_.size();
}
inline void CMsgLeagueScheduleBlock::clear_teams() {
  teams_.Clear();
}
inline const ::CMsgLeagueScheduleBlockTeamInfo& CMsgLeagueScheduleBlock::teams(int index) const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.teams)
  return teams_.Get(index);
}
inline ::CMsgLeagueScheduleBlockTeamInfo* CMsgLeagueScheduleBlock::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgLeagueScheduleBlock.teams)
  return teams_.Mutable(index);
}
inline ::CMsgLeagueScheduleBlockTeamInfo* CMsgLeagueScheduleBlock::add_teams() {
  // @@protoc_insertion_point(field_add:CMsgLeagueScheduleBlock.teams)
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >&
CMsgLeagueScheduleBlock::teams() const {
  // @@protoc_insertion_point(field_list:CMsgLeagueScheduleBlock.teams)
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >*
CMsgLeagueScheduleBlock::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:CMsgLeagueScheduleBlock.teams)
  return &teams_;
}

// -------------------------------------------------------------------

// CMsgDOTALeague

// optional uint32 league_id = 1;
inline bool CMsgDOTALeague::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeague::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeague::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeague::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeague::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeague.league_id)
  return league_id_;
}
inline void CMsgDOTALeague::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeague.league_id)
}

// repeated .CMsgLeagueScheduleBlock schedule = 2;
inline int CMsgDOTALeague::schedule_size() const {
  return schedule_.size();
}
inline void CMsgDOTALeague::clear_schedule() {
  schedule_.Clear();
}
inline const ::CMsgLeagueScheduleBlock& CMsgDOTALeague::schedule(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeague.schedule)
  return schedule_.Get(index);
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeague::mutable_schedule(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeague.schedule)
  return schedule_.Mutable(index);
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeague::add_schedule() {
  // @@protoc_insertion_point(field_add:CMsgDOTALeague.schedule)
  return schedule_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >&
CMsgDOTALeague::schedule() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALeague.schedule)
  return schedule_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >*
CMsgDOTALeague::mutable_schedule() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALeague.schedule)
  return &schedule_;
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleRequest

// optional uint32 league_id = 1;
inline bool CMsgDOTALeagueScheduleRequest::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleRequest::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleRequest::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleRequest::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleRequest::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleRequest.league_id)
  return league_id_;
}
inline void CMsgDOTALeagueScheduleRequest::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleRequest.league_id)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleResponse

// optional .CMsgDOTALeague league = 1;
inline bool CMsgDOTALeagueScheduleResponse::has_league() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleResponse::set_has_league() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_has_league() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_league() {
  if (league_ != NULL) league_->::CMsgDOTALeague::Clear();
  clear_has_league();
}
inline const ::CMsgDOTALeague& CMsgDOTALeagueScheduleResponse::league() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleResponse.league)
  return league_ != NULL ? *league_ : *default_instance_->league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleResponse::mutable_league() {
  set_has_league();
  if (league_ == NULL) league_ = new ::CMsgDOTALeague;
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeagueScheduleResponse.league)
  return league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleResponse::release_league() {
  clear_has_league();
  ::CMsgDOTALeague* temp = league_;
  league_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleResponse::set_allocated_league(::CMsgDOTALeague* league) {
  delete league_;
  league_ = league;
  if (league) {
    set_has_league();
  } else {
    clear_has_league();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALeagueScheduleResponse.league)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTALeagueScheduleResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeagueScheduleResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleEdit

// optional uint32 league_id = 1;
inline bool CMsgDOTALeagueScheduleEdit::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleEdit::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEdit.league_id)
  return league_id_;
}
inline void CMsgDOTALeagueScheduleEdit::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleEdit.league_id)
}

// optional .CMsgLeagueScheduleBlock schedule = 2;
inline bool CMsgDOTALeagueScheduleEdit::has_schedule() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_schedule() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_schedule() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_schedule() {
  if (schedule_ != NULL) schedule_->::CMsgLeagueScheduleBlock::Clear();
  clear_has_schedule();
}
inline const ::CMsgLeagueScheduleBlock& CMsgDOTALeagueScheduleEdit::schedule() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEdit.schedule)
  return schedule_ != NULL ? *schedule_ : *default_instance_->schedule_;
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeagueScheduleEdit::mutable_schedule() {
  set_has_schedule();
  if (schedule_ == NULL) schedule_ = new ::CMsgLeagueScheduleBlock;
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeagueScheduleEdit.schedule)
  return schedule_;
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeagueScheduleEdit::release_schedule() {
  clear_has_schedule();
  ::CMsgLeagueScheduleBlock* temp = schedule_;
  schedule_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleEdit::set_allocated_schedule(::CMsgLeagueScheduleBlock* schedule) {
  delete schedule_;
  schedule_ = schedule;
  if (schedule) {
    set_has_schedule();
  } else {
    clear_has_schedule();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALeagueScheduleEdit.schedule)
}

// optional bool delete_block = 3;
inline bool CMsgDOTALeagueScheduleEdit::has_delete_block() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_delete_block() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_delete_block() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_delete_block() {
  delete_block_ = false;
  clear_has_delete_block();
}
inline bool CMsgDOTALeagueScheduleEdit::delete_block() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEdit.delete_block)
  return delete_block_;
}
inline void CMsgDOTALeagueScheduleEdit::set_delete_block(bool value) {
  set_has_delete_block();
  delete_block_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleEdit.delete_block)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleEditResponse

// optional .CMsgDOTALeague league = 1;
inline bool CMsgDOTALeagueScheduleEditResponse::has_league() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_has_league() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_has_league() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_league() {
  if (league_ != NULL) league_->::CMsgDOTALeague::Clear();
  clear_has_league();
}
inline const ::CMsgDOTALeague& CMsgDOTALeagueScheduleEditResponse::league() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEditResponse.league)
  return league_ != NULL ? *league_ : *default_instance_->league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleEditResponse::mutable_league() {
  set_has_league();
  if (league_ == NULL) league_ = new ::CMsgDOTALeague;
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeagueScheduleEditResponse.league)
  return league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleEditResponse::release_league() {
  clear_has_league();
  ::CMsgDOTALeague* temp = league_;
  league_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_allocated_league(::CMsgDOTALeague* league) {
  delete league_;
  league_ = league;
  if (league) {
    set_has_league();
  } else {
    clear_has_league();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALeagueScheduleEditResponse.league)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTALeagueScheduleEditResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleEditResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEditResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleEditResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALeaguesInMonthRequest

// optional uint32 month = 1;
inline bool CMsgDOTALeaguesInMonthRequest::has_month() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_month() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_month() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::month() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthRequest.month)
  return month_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthRequest.month)
}

// optional uint32 year = 2;
inline bool CMsgDOTALeaguesInMonthRequest::has_year() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_year() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_year() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::year() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthRequest.year)
  return year_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthRequest.year)
}

// optional uint32 tier = 3;
inline bool CMsgDOTALeaguesInMonthRequest::has_tier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_tier() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_tier() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::tier() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthRequest.tier)
  return tier_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthRequest.tier)
}

// -------------------------------------------------------------------

// CMsgDOTALeaguesInMonthResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTALeaguesInMonthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthResponse.eresult)
}

// optional uint32 month = 2;
inline bool CMsgDOTALeaguesInMonthResponse::has_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_month() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_month() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::month() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.month)
  return month_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthResponse.month)
}

// optional uint32 year = 3;
inline bool CMsgDOTALeaguesInMonthResponse::has_year() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_year() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_year() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::year() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.year)
  return year_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthResponse.year)
}

// repeated .CMsgDOTALeague leagues = 4;
inline int CMsgDOTALeaguesInMonthResponse::leagues_size() const {
  return leagues_.size();
}
inline void CMsgDOTALeaguesInMonthResponse::clear_leagues() {
  leagues_.Clear();
}
inline const ::CMsgDOTALeague& CMsgDOTALeaguesInMonthResponse::leagues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Get(index);
}
inline ::CMsgDOTALeague* CMsgDOTALeaguesInMonthResponse::mutable_leagues(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Mutable(index);
}
inline ::CMsgDOTALeague* CMsgDOTALeaguesInMonthResponse::add_leagues() {
  // @@protoc_insertion_point(field_add:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >&
CMsgDOTALeaguesInMonthResponse::leagues() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >*
CMsgDOTALeaguesInMonthResponse::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALeaguesInMonthResponse.leagues)
  return &leagues_;
}

// -------------------------------------------------------------------

// CMsgMatchmakingMatchGroupInfo

// optional uint32 players_searching = 1;
inline bool CMsgMatchmakingMatchGroupInfo::has_players_searching() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::set_has_players_searching() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_has_players_searching() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_players_searching() {
  players_searching_ = 0u;
  clear_has_players_searching();
}
inline ::google::protobuf::uint32 CMsgMatchmakingMatchGroupInfo::players_searching() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingMatchGroupInfo.players_searching)
  return players_searching_;
}
inline void CMsgMatchmakingMatchGroupInfo::set_players_searching(::google::protobuf::uint32 value) {
  set_has_players_searching();
  players_searching_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingMatchGroupInfo.players_searching)
}

// optional sint32 auto_region_select_ping_penalty = 2;
inline bool CMsgMatchmakingMatchGroupInfo::has_auto_region_select_ping_penalty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::set_has_auto_region_select_ping_penalty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_has_auto_region_select_ping_penalty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_auto_region_select_ping_penalty() {
  auto_region_select_ping_penalty_ = 0;
  clear_has_auto_region_select_ping_penalty();
}
inline ::google::protobuf::int32 CMsgMatchmakingMatchGroupInfo::auto_region_select_ping_penalty() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingMatchGroupInfo.auto_region_select_ping_penalty)
  return auto_region_select_ping_penalty_;
}
inline void CMsgMatchmakingMatchGroupInfo::set_auto_region_select_ping_penalty(::google::protobuf::int32 value) {
  set_has_auto_region_select_ping_penalty();
  auto_region_select_ping_penalty_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingMatchGroupInfo.auto_region_select_ping_penalty)
}

// optional .EMatchGroupServerStatus status = 3 [default = k_EMatchGroupServerStatus_OK];
inline bool CMsgMatchmakingMatchGroupInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::EMatchGroupServerStatus CMsgMatchmakingMatchGroupInfo::status() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingMatchGroupInfo.status)
  return static_cast< ::EMatchGroupServerStatus >(status_);
}
inline void CMsgMatchmakingMatchGroupInfo::set_status(::EMatchGroupServerStatus value) {
  assert(::EMatchGroupServerStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingMatchGroupInfo.status)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsRequest

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsResponse

// optional uint32 matchgroups_version = 1;
inline bool CMsgDOTAMatchmakingStatsResponse::has_matchgroups_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_has_matchgroups_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_has_matchgroups_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_matchgroups_version() {
  matchgroups_version_ = 0u;
  clear_has_matchgroups_version();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::matchgroups_version() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.matchgroups_version)
  return matchgroups_version_;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_matchgroups_version(::google::protobuf::uint32 value) {
  set_has_matchgroups_version();
  matchgroups_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchmakingStatsResponse.matchgroups_version)
}

// repeated uint32 legacy_searching_players_by_group_source2 = 7;
inline int CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2_size() const {
  return legacy_searching_players_by_group_source2_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_legacy_searching_players_by_group_source2() {
  legacy_searching_players_by_group_source2_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return legacy_searching_players_by_group_source2_.Get(index);
}
inline void CMsgDOTAMatchmakingStatsResponse::set_legacy_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value) {
  legacy_searching_players_by_group_source2_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
}
inline void CMsgDOTAMatchmakingStatsResponse::add_legacy_searching_players_by_group_source2(::google::protobuf::uint32 value) {
  legacy_searching_players_by_group_source2_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return legacy_searching_players_by_group_source2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatchmakingStatsResponse::mutable_legacy_searching_players_by_group_source2() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return &legacy_searching_players_by_group_source2_;
}

// repeated .CMsgMatchmakingMatchGroupInfo match_groups = 8;
inline int CMsgDOTAMatchmakingStatsResponse::match_groups_size() const {
  return match_groups_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_match_groups() {
  match_groups_.Clear();
}
inline const ::CMsgMatchmakingMatchGroupInfo& CMsgDOTAMatchmakingStatsResponse::match_groups(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Get(index);
}
inline ::CMsgMatchmakingMatchGroupInfo* CMsgDOTAMatchmakingStatsResponse::mutable_match_groups(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Mutable(index);
}
inline ::CMsgMatchmakingMatchGroupInfo* CMsgDOTAMatchmakingStatsResponse::add_match_groups() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMatchmakingMatchGroupInfo >&
CMsgDOTAMatchmakingStatsResponse::match_groups() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMatchmakingMatchGroupInfo >*
CMsgDOTAMatchmakingStatsResponse::mutable_match_groups() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchmakingStatsResponse.match_groups)
  return &match_groups_;
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateMatchmakingStats

// optional .CMsgDOTAMatchmakingStatsResponse stats = 1;
inline bool CMsgDOTAUpdateMatchmakingStats::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUpdateMatchmakingStats::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAUpdateMatchmakingStats::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAUpdateMatchmakingStats::clear_stats() {
  if (stats_ != NULL) stats_->::CMsgDOTAMatchmakingStatsResponse::Clear();
  clear_has_stats();
}
inline const ::CMsgDOTAMatchmakingStatsResponse& CMsgDOTAUpdateMatchmakingStats::stats() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAUpdateMatchmakingStats.stats)
  return stats_ != NULL ? *stats_ : *default_instance_->stats_;
}
inline ::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchmakingStats::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) stats_ = new ::CMsgDOTAMatchmakingStatsResponse;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAUpdateMatchmakingStats.stats)
  return stats_;
}
inline ::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchmakingStats::release_stats() {
  clear_has_stats();
  ::CMsgDOTAMatchmakingStatsResponse* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void CMsgDOTAUpdateMatchmakingStats::set_allocated_stats(::CMsgDOTAMatchmakingStatsResponse* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAUpdateMatchmakingStats.stats)
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateMatchManagementStats

// optional .CMsgDOTAMatchmakingStatsResponse stats = 1;
inline bool CMsgDOTAUpdateMatchManagementStats::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUpdateMatchManagementStats::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAUpdateMatchManagementStats::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAUpdateMatchManagementStats::clear_stats() {
  if (stats_ != NULL) stats_->::CMsgDOTAMatchmakingStatsResponse::Clear();
  clear_has_stats();
}
inline const ::CMsgDOTAMatchmakingStatsResponse& CMsgDOTAUpdateMatchManagementStats::stats() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAUpdateMatchManagementStats.stats)
  return stats_ != NULL ? *stats_ : *default_instance_->stats_;
}
inline ::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchManagementStats::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) stats_ = new ::CMsgDOTAMatchmakingStatsResponse;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAUpdateMatchManagementStats.stats)
  return stats_;
}
inline ::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchManagementStats::release_stats() {
  clear_has_stats();
  ::CMsgDOTAMatchmakingStatsResponse* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void CMsgDOTAUpdateMatchManagementStats::set_allocated_stats(::CMsgDOTAMatchmakingStatsResponse* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAUpdateMatchManagementStats.stats)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccess

// optional bool allow_3rd_party_match_history = 1;
inline bool CMsgDOTASetMatchHistoryAccess::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccess::set_has_allow_3rd_party_match_history() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccess::clear_has_allow_3rd_party_match_history() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccess::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  clear_has_allow_3rd_party_match_history();
}
inline bool CMsgDOTASetMatchHistoryAccess::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTASetMatchHistoryAccess::set_allow_3rd_party_match_history(bool value) {
  set_has_allow_3rd_party_match_history();
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccessResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTASetMatchHistoryAccessResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASetMatchHistoryAccessResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetMatchHistoryAccessResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetMatchHistoryAccessResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTANotifyAccountFlagsChange

// optional uint32 accountid = 1;
inline bool CMsgDOTANotifyAccountFlagsChange::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::accountid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTANotifyAccountFlagsChange.accountid)
  return accountid_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTANotifyAccountFlagsChange.accountid)
}

// optional uint32 account_flags = 2;
inline bool CMsgDOTANotifyAccountFlagsChange::has_account_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_has_account_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_has_account_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_account_flags() {
  account_flags_ = 0u;
  clear_has_account_flags();
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::account_flags() const {
  // @@protoc_insertion_point(field_get:CMsgDOTANotifyAccountFlagsChange.account_flags)
  return account_flags_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_account_flags(::google::protobuf::uint32 value) {
  set_has_account_flags();
  account_flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTANotifyAccountFlagsChange.account_flags)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacy

// optional bool profile_private = 1;
inline bool CMsgDOTASetProfilePrivacy::has_profile_private() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacy::set_has_profile_private() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetProfilePrivacy::clear_has_profile_private() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetProfilePrivacy::clear_profile_private() {
  profile_private_ = false;
  clear_has_profile_private();
}
inline bool CMsgDOTASetProfilePrivacy::profile_private() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetProfilePrivacy.profile_private)
  return profile_private_;
}
inline void CMsgDOTASetProfilePrivacy::set_profile_private(bool value) {
  set_has_profile_private();
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetProfilePrivacy.profile_private)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacyResponse

// optional uint32 eresult = 1;
inline bool CMsgDOTASetProfilePrivacyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacyResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetProfilePrivacyResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetProfilePrivacyResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASetProfilePrivacyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetProfilePrivacyResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetProfilePrivacyResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetProfilePrivacyResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItem

// optional uint64 match_id = 1;
inline bool CMsgUpgradeLeagueItem::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpgradeLeagueItem::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpgradeLeagueItem::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpgradeLeagueItem::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgUpgradeLeagueItem::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpgradeLeagueItem.match_id)
  return match_id_;
}
inline void CMsgUpgradeLeagueItem::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpgradeLeagueItem.match_id)
}

// optional uint32 league_id = 2;
inline bool CMsgUpgradeLeagueItem::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpgradeLeagueItem::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUpgradeLeagueItem::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUpgradeLeagueItem::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgUpgradeLeagueItem::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpgradeLeagueItem.league_id)
  return league_id_;
}
inline void CMsgUpgradeLeagueItem::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpgradeLeagueItem.league_id)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItemResponse

// -------------------------------------------------------------------

// CMsgGCWatchDownloadedReplay

// optional uint64 match_id = 1;
inline bool CMsgGCWatchDownloadedReplay::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCWatchDownloadedReplay::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCWatchDownloadedReplay::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCWatchDownloadedReplay::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCWatchDownloadedReplay.match_id)
  return match_id_;
}
inline void CMsgGCWatchDownloadedReplay::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCWatchDownloadedReplay.match_id)
}

// optional .DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
inline bool CMsgGCWatchDownloadedReplay::has_watch_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::set_has_watch_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCWatchDownloadedReplay::clear_has_watch_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCWatchDownloadedReplay::clear_watch_type() {
  watch_type_ = 0;
  clear_has_watch_type();
}
inline ::DOTA_WatchReplayType CMsgGCWatchDownloadedReplay::watch_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCWatchDownloadedReplay.watch_type)
  return static_cast< ::DOTA_WatchReplayType >(watch_type_);
}
inline void CMsgGCWatchDownloadedReplay::set_watch_type(::DOTA_WatchReplayType value) {
  assert(::DOTA_WatchReplayType_IsValid(value));
  set_has_watch_type();
  watch_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCWatchDownloadedReplay.watch_type)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationState

// optional int32 location_id = 1;
inline bool CMsgSetMapLocationState::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationState::set_has_location_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetMapLocationState::clear_has_location_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetMapLocationState::clear_location_id() {
  location_id_ = 0;
  clear_has_location_id();
}
inline ::google::protobuf::int32 CMsgSetMapLocationState::location_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetMapLocationState.location_id)
  return location_id_;
}
inline void CMsgSetMapLocationState::set_location_id(::google::protobuf::int32 value) {
  set_has_location_id();
  location_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetMapLocationState.location_id)
}

// optional bool completed = 2;
inline bool CMsgSetMapLocationState::has_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetMapLocationState::set_has_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetMapLocationState::clear_has_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetMapLocationState::clear_completed() {
  completed_ = false;
  clear_has_completed();
}
inline bool CMsgSetMapLocationState::completed() const {
  // @@protoc_insertion_point(field_get:CMsgSetMapLocationState.completed)
  return completed_;
}
inline void CMsgSetMapLocationState::set_completed(bool value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetMapLocationState.completed)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationStateResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgSetMapLocationStateResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationStateResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetMapLocationStateResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetMapLocationStateResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgSetMapLocationStateResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgSetMapLocationStateResponse.eresult)
  return eresult_;
}
inline void CMsgSetMapLocationStateResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetMapLocationStateResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgResetMapLocations

// -------------------------------------------------------------------

// CMsgResetMapLocationsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgResetMapLocationsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgResetMapLocationsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgResetMapLocationsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgResetMapLocationsResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgResetMapLocationsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgResetMapLocationsResponse.eresult)
  return eresult_;
}
inline void CMsgResetMapLocationsResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgResetMapLocationsResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgRefreshPartnerAccountLink

// optional int32 partner_type = 1;
inline bool CMsgRefreshPartnerAccountLink::has_partner_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRefreshPartnerAccountLink::set_has_partner_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRefreshPartnerAccountLink::clear_has_partner_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRefreshPartnerAccountLink::clear_partner_type() {
  partner_type_ = 0;
  clear_has_partner_type();
}
inline ::google::protobuf::int32 CMsgRefreshPartnerAccountLink::partner_type() const {
  // @@protoc_insertion_point(field_get:CMsgRefreshPartnerAccountLink.partner_type)
  return partner_type_;
}
inline void CMsgRefreshPartnerAccountLink::set_partner_type(::google::protobuf::int32 value) {
  set_has_partner_type();
  partner_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgRefreshPartnerAccountLink.partner_type)
}

// -------------------------------------------------------------------

// CMsgClientsRejoinChatChannels

// -------------------------------------------------------------------

// CMsgDOTASendFriendRecruits

// repeated uint32 recruits = 1;
inline int CMsgDOTASendFriendRecruits::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTASendFriendRecruits::clear_recruits() {
  recruits_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTASendFriendRecruits::recruits(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTASendFriendRecruits.recruits)
  return recruits_.Get(index);
}
inline void CMsgDOTASendFriendRecruits::set_recruits(int index, ::google::protobuf::uint32 value) {
  recruits_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTASendFriendRecruits.recruits)
}
inline void CMsgDOTASendFriendRecruits::add_recruits(::google::protobuf::uint32 value) {
  recruits_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTASendFriendRecruits.recruits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTASendFriendRecruits::recruits() const {
  // @@protoc_insertion_point(field_list:CMsgDOTASendFriendRecruits.recruits)
  return recruits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTASendFriendRecruits::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTASendFriendRecruits.recruits)
  return &recruits_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsRequest

// repeated uint32 account_ids = 1;
inline int CMsgDOTAFriendRecruitsRequest::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgDOTAFriendRecruitsRequest::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsRequest::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgDOTAFriendRecruitsRequest::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline void CMsgDOTAFriendRecruitsRequest::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAFriendRecruitsRequest::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAFriendRecruitsRequest::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFriendRecruitsRequest.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus

// optional uint32 account_id = 1;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
}

// optional uint32 status = 2;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::status() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
  return status_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
}

// optional uint32 levels_earned = 3;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_levels_earned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_levels_earned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_levels_earned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_levels_earned() {
  levels_earned_ = 0u;
  clear_has_levels_earned();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::levels_earned() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
  return levels_earned_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_levels_earned(::google::protobuf::uint32 value) {
  set_has_levels_earned();
  levels_earned_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
}

// optional bool bonus = 4;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_bonus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_bonus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_bonus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_bonus() {
  bonus_ = false;
  clear_has_bonus();
}
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::bonus() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
  return bonus_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_bonus(bool value) {
  set_has_bonus();
  bonus_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse

// optional .CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAFriendRecruitsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.result)
  return static_cast< ::CMsgDOTAFriendRecruitsResponse_EResult >(result_);
}
inline void CMsgDOTAFriendRecruitsResponse::set_result(::CMsgDOTAFriendRecruitsResponse_EResult value) {
  assert(::CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.result)
}

// repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
inline int CMsgDOTAFriendRecruitsResponse::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruits() {
  recruits_.Clear();
}
inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruits(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Get(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruits(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Mutable(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruits() {
  // @@protoc_insertion_point(field_add:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruits() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFriendRecruitsResponse.recruits)
  return &recruits_;
}

// repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
inline int CMsgDOTAFriendRecruitsResponse::recruiters_size() const {
  return recruiters_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruiters() {
  recruiters_.Clear();
}
inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruiters(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Get(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruiters(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Mutable(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruiters() {
  // @@protoc_insertion_point(field_add:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruiters() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruiters() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFriendRecruitsResponse.recruiters)
  return &recruiters_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitInviteAcceptDecline

// optional bool accepted = 1;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_accepted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_has_accepted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_accepted() {
  accepted_ = false;
  clear_has_accepted();
}
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::accepted() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
  return accepted_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitInviteAcceptDecline::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePool

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePool::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePool::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestLeaguePrizePool::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestLeaguePrizePool::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePool::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgRequestLeaguePrizePool.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePool::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestLeaguePrizePool.league_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePoolResponse

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePoolResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgRequestLeaguePrizePoolResponse.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestLeaguePrizePoolResponse.league_id)
}

// optional uint32 prize_pool = 2;
inline bool CMsgRequestLeaguePrizePoolResponse::has_prize_pool() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_has_prize_pool() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_has_prize_pool() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_prize_pool() {
  prize_pool_ = 0u;
  clear_has_prize_pool();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::prize_pool() const {
  // @@protoc_insertion_point(field_get:CMsgRequestLeaguePrizePoolResponse.prize_pool)
  return prize_pool_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_prize_pool(::google::protobuf::uint32 value) {
  set_has_prize_pool();
  prize_pool_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestLeaguePrizePoolResponse.prize_pool)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandings

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse_Hero

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.hero_id)
}

// optional uint32 wins = 2;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::wins() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.wins)
  return wins_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.wins)
}

// optional uint32 losses = 3;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_losses() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_losses() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_losses() {
  losses_ = 0u;
  clear_has_losses();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::losses() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.losses)
  return losses_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_losses(::google::protobuf::uint32 value) {
  set_has_losses();
  losses_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.losses)
}

// optional uint32 win_streak = 4;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_win_streak() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_win_streak() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_win_streak() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_win_streak() {
  win_streak_ = 0u;
  clear_has_win_streak();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::win_streak() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.win_streak)
  return win_streak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_win_streak(::google::protobuf::uint32 value) {
  set_has_win_streak();
  win_streak_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.win_streak)
}

// optional uint32 best_win_streak = 5;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_win_streak() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_win_streak() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_win_streak() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_win_streak() {
  best_win_streak_ = 0u;
  clear_has_best_win_streak();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_win_streak() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.best_win_streak)
  return best_win_streak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_win_streak(::google::protobuf::uint32 value) {
  set_has_best_win_streak();
  best_win_streak_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.best_win_streak)
}

// optional float avg_kills = 6;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_kills() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_kills() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_kills() {
  avg_kills_ = 0;
  clear_has_avg_kills();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.avg_kills)
  return avg_kills_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_kills(float value) {
  set_has_avg_kills();
  avg_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.avg_kills)
}

// optional float avg_deaths = 7;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_deaths() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_deaths() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_deaths() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_deaths() {
  avg_deaths_ = 0;
  clear_has_avg_deaths();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_deaths() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.avg_deaths)
  return avg_deaths_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_deaths(float value) {
  set_has_avg_deaths();
  avg_deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.avg_deaths)
}

// optional float avg_assists = 8;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_assists() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_assists() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_assists() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_assists() {
  avg_assists_ = 0;
  clear_has_avg_assists();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_assists() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.avg_assists)
  return avg_assists_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_assists(float value) {
  set_has_avg_assists();
  avg_assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.avg_assists)
}

// optional float avg_gpm = 9;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_gpm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_gpm() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_gpm() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_gpm() {
  avg_gpm_ = 0;
  clear_has_avg_gpm();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_gpm() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.avg_gpm)
  return avg_gpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_gpm(float value) {
  set_has_avg_gpm();
  avg_gpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.avg_gpm)
}

// optional float avg_xpm = 10;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_xpm() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_xpm() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_xpm() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_xpm() {
  avg_xpm_ = 0;
  clear_has_avg_xpm();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_xpm() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.avg_xpm)
  return avg_xpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_xpm(float value) {
  set_has_avg_xpm();
  avg_xpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.avg_xpm)
}

// optional uint32 best_kills = 11;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_kills() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_kills() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_kills() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_kills() {
  best_kills_ = 0u;
  clear_has_best_kills();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.best_kills)
  return best_kills_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_kills(::google::protobuf::uint32 value) {
  set_has_best_kills();
  best_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.best_kills)
}

// optional uint32 best_assists = 12;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_assists() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_assists() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_assists() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_assists() {
  best_assists_ = 0u;
  clear_has_best_assists();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_assists() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.best_assists)
  return best_assists_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_assists(::google::protobuf::uint32 value) {
  set_has_best_assists();
  best_assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.best_assists)
}

// optional uint32 best_gpm = 13;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_gpm() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_gpm() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_gpm() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_gpm() {
  best_gpm_ = 0u;
  clear_has_best_gpm();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_gpm() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.best_gpm)
  return best_gpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_gpm(::google::protobuf::uint32 value) {
  set_has_best_gpm();
  best_gpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.best_gpm)
}

// optional uint32 best_xpm = 14;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_xpm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_xpm() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_xpm() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_xpm() {
  best_xpm_ = 0u;
  clear_has_best_xpm();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_xpm() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.best_xpm)
  return best_xpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_xpm(::google::protobuf::uint32 value) {
  set_has_best_xpm();
  best_xpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.best_xpm)
}

// optional float performance = 15;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_performance() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_performance() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_performance() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_performance() {
  performance_ = 0;
  clear_has_performance();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::performance() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.performance)
  return performance_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_performance(float value) {
  set_has_performance();
  performance_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.performance)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse

// repeated .CMsgGCGetHeroStandingsResponse.Hero standings = 1;
inline int CMsgGCGetHeroStandingsResponse::standings_size() const {
  return standings_.size();
}
inline void CMsgGCGetHeroStandingsResponse::clear_standings() {
  standings_.Clear();
}
inline const ::CMsgGCGetHeroStandingsResponse_Hero& CMsgGCGetHeroStandingsResponse::standings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Get(index);
}
inline ::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::mutable_standings(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Mutable(index);
}
inline ::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::add_standings() {
  // @@protoc_insertion_point(field_add:CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >&
CMsgGCGetHeroStandingsResponse::standings() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetHeroStandingsResponse.standings)
  return standings_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >*
CMsgGCGetHeroStandingsResponse::mutable_standings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetHeroStandingsResponse.standings)
  return &standings_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsRequest

// -------------------------------------------------------------------

// CMsgGCItemEditorReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReservation::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReservation::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReservation::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReservation::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReservation::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReservation.def_index)
}

// optional string name = 2;
inline bool CMsgGCItemEditorReservation::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReservation::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReservation::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReservation::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCItemEditorReservation::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReservation.name)
  return *name_;
}
inline void CMsgGCItemEditorReservation::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReservation.name)
}
inline void CMsgGCItemEditorReservation::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReservation.name)
}
inline void CMsgGCItemEditorReservation::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReservation.name)
}
inline ::std::string* CMsgGCItemEditorReservation::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReservation.name)
  return name_;
}
inline ::std::string* CMsgGCItemEditorReservation::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReservation::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReservation.name)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsResponse

// repeated .CMsgGCItemEditorReservation reservations = 1;
inline int CMsgGCItemEditorReservationsResponse::reservations_size() const {
  return reservations_.size();
}
inline void CMsgGCItemEditorReservationsResponse::clear_reservations() {
  reservations_.Clear();
}
inline const ::CMsgGCItemEditorReservation& CMsgGCItemEditorReservationsResponse::reservations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Get(index);
}
inline ::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::mutable_reservations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Mutable(index);
}
inline ::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::add_reservations() {
  // @@protoc_insertion_point(field_add:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >&
CMsgGCItemEditorReservationsResponse::reservations() const {
  // @@protoc_insertion_point(field_list:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >*
CMsgGCItemEditorReservationsResponse::mutable_reservations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCItemEditorReservationsResponse.reservations)
  return &reservations_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDef

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDef::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDef::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDef.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDef::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDef.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDef::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReserveItemDef::username() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDef.username)
  return *username_;
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDef.username)
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReserveItemDef.username)
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReserveItemDef.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReserveItemDef.username)
  return username_;
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReserveItemDef::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReserveItemDef.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDefResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDefResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDefResponse.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReserveItemDefResponse::username() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDefResponse.username)
  return *username_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDefResponse.username)
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReserveItemDefResponse.username)
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReserveItemDefResponse.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReserveItemDefResponse.username)
  return username_;
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReserveItemDefResponse.username)
}

// optional uint32 result = 3;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDefResponse.result)
  return result_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDefResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservation::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservation::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservation.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReleaseReservation::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReleaseReservation::username() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservation.username)
  return *username_;
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservation.username)
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReleaseReservation.username)
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReleaseReservation.username)
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReleaseReservation.username)
  return username_;
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReleaseReservation::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReleaseReservation.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservationResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservationResponse::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservationResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservationResponse.def_index)
}

// optional bool released = 2;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_released() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_has_released() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_has_released() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_released() {
  released_ = false;
  clear_has_released();
}
inline bool CMsgGCItemEditorReleaseReservationResponse::released() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservationResponse.released)
  return released_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_released(bool value) {
  set_has_released();
  released_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservationResponse.released)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorRequestLeagueInfo

// optional uint32 league_id = 1;
inline bool CMsgGCItemEditorRequestLeagueInfo::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorRequestLeagueInfo::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorRequestLeagueInfo::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorRequestLeagueInfo::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorRequestLeagueInfo::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorRequestLeagueInfo.league_id)
  return league_id_;
}
inline void CMsgGCItemEditorRequestLeagueInfo::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorRequestLeagueInfo.league_id)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorLeagueInfoResponse

// optional uint32 league_id = 1;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_id)
  return league_id_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_id)
}

// optional string league_name = 2;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_name() {
  if (league_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_->clear();
  }
  clear_has_league_name();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_name)
  return *league_name_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const ::std::string& value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const char* value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const char* value, size_t size) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_name() {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.league_name)
  return league_name_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_name() {
  clear_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = league_name_;
    league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_name(::std::string* league_name) {
  if (league_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete league_name_;
  }
  if (league_name) {
    set_has_league_name();
    league_name_ = league_name;
  } else {
    clear_has_league_name();
    league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.league_name)
}

// optional string league_desc = 3;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_desc() {
  if (league_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_->clear();
  }
  clear_has_league_desc();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_desc() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_desc)
  return *league_desc_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const ::std::string& value) {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  league_desc_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const char* value) {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  league_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const char* value, size_t size) {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  league_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_desc() {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.league_desc)
  return league_desc_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_desc() {
  clear_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = league_desc_;
    league_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_desc(::std::string* league_desc) {
  if (league_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete league_desc_;
  }
  if (league_desc) {
    set_has_league_desc();
    league_desc_ = league_desc;
  } else {
    clear_has_league_desc();
    league_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}

// optional string league_url = 4;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_url() {
  if (league_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_->clear();
  }
  clear_has_league_url();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_url() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_url)
  return *league_url_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const ::std::string& value) {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  league_url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const char* value) {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  league_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const char* value, size_t size) {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  league_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_url() {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.league_url)
  return league_url_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_url() {
  clear_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = league_url_;
    league_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_url(::std::string* league_url) {
  if (league_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete league_url_;
  }
  if (league_url) {
    set_has_league_url();
    league_url_ = league_url;
  } else {
    clear_has_league_url();
    league_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.league_url)
}

// optional string revenue_url = 5;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_revenue_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_revenue_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_revenue_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_revenue_url() {
  if (revenue_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_->clear();
  }
  clear_has_revenue_url();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::revenue_url() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
  return *revenue_url_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const ::std::string& value) {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  revenue_url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const char* value) {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  revenue_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const char* value, size_t size) {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  revenue_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_revenue_url() {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
  return revenue_url_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_revenue_url() {
  clear_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = revenue_url_;
    revenue_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_revenue_url(::std::string* revenue_url) {
  if (revenue_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revenue_url_;
  }
  if (revenue_url) {
    set_has_revenue_url();
    revenue_url_ = revenue_url;
  } else {
    clear_has_revenue_url();
    revenue_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}

// optional uint32 tier = 6;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_tier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_tier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_tier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::tier() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.tier)
  return tier_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.tier)
}

// optional uint32 location = 7;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_location() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_location() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_location() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::location() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.location)
  return location_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.location)
}

// optional uint32 result = 8;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.result)
  return result_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTARewardTutorialPrizes

// optional uint32 location_id = 1;
inline bool CMsgDOTARewardTutorialPrizes::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::set_has_location_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_has_location_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_location_id() {
  location_id_ = 0u;
  clear_has_location_id();
}
inline ::google::protobuf::uint32 CMsgDOTARewardTutorialPrizes::location_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARewardTutorialPrizes.location_id)
  return location_id_;
}
inline void CMsgDOTARewardTutorialPrizes::set_location_id(::google::protobuf::uint32 value) {
  set_has_location_id();
  location_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARewardTutorialPrizes.location_id)
}

// optional bool tracking_only = 2;
inline bool CMsgDOTARewardTutorialPrizes::has_tracking_only() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::set_has_tracking_only() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_has_tracking_only() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_tracking_only() {
  tracking_only_ = false;
  clear_has_tracking_only();
}
inline bool CMsgDOTARewardTutorialPrizes::tracking_only() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARewardTutorialPrizes.tracking_only)
  return tracking_only_;
}
inline void CMsgDOTARewardTutorialPrizes::set_tracking_only(bool value) {
  set_has_tracking_only();
  tracking_only_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARewardTutorialPrizes.tracking_only)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScorePost

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScorePost.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScorePost.hero_id)
}

// optional uint32 high_score = 2;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_high_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_has_high_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_has_high_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_high_score() {
  high_score_ = 0u;
  clear_has_high_score();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::high_score() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScorePost.high_score)
  return high_score_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_high_score(::google::protobuf::uint32 value) {
  set_has_high_score();
  high_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScorePost.high_score)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreRequest

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScoreRequest::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreRequest::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScoreResponse.score)
}

// optional uint32 eresult = 2;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScoreResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgFlipLobbyTeams

// -------------------------------------------------------------------

// CMsgPresentedClientTerminateDlg

// -------------------------------------------------------------------

// CMsgGCLobbyUpdateBroadcastChannelInfo

// optional uint32 channel_id = 1;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CMsgGCLobbyUpdateBroadcastChannelInfo::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
  return channel_id_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
}

// optional string country_code = 2;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_country_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return *country_code_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return country_code_;
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}

// optional string description = 3;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::description() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return *description_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return description_;
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}

// optional string language_code = 4;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_language_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_language_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_language_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_language_code() {
  if (language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_->clear();
  }
  clear_has_language_code();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::language_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return *language_code_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const ::std::string& value) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value, size_t size) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_language_code() {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return language_code_;
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_language_code() {
  clear_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = language_code_;
    language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_language_code(::std::string* language_code) {
  if (language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete language_code_;
  }
  if (language_code) {
    set_has_language_code();
    language_code_ = language_code;
  } else {
    clear_has_language_code();
    language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}

// -------------------------------------------------------------------

// CMsgDOTARedeemEventPrize

// optional uint32 prize_id = 1;
inline bool CMsgDOTARedeemEventPrize::has_prize_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemEventPrize::set_has_prize_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemEventPrize::clear_has_prize_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemEventPrize::clear_prize_id() {
  prize_id_ = 0u;
  clear_has_prize_id();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrize::prize_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrize.prize_id)
  return prize_id_;
}
inline void CMsgDOTARedeemEventPrize::set_prize_id(::google::protobuf::uint32 value) {
  set_has_prize_id();
  prize_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrize.prize_id)
}

// optional uint32 event_id = 2;
inline bool CMsgDOTARedeemEventPrize::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARedeemEventPrize::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARedeemEventPrize::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARedeemEventPrize::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrize::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrize.event_id)
  return event_id_;
}
inline void CMsgDOTARedeemEventPrize::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrize.event_id)
}

// optional uint32 quantity = 3 [default = 1];
inline bool CMsgDOTARedeemEventPrize::has_quantity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARedeemEventPrize::set_has_quantity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARedeemEventPrize::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARedeemEventPrize::clear_quantity() {
  quantity_ = 1u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrize::quantity() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrize.quantity)
  return quantity_;
}
inline void CMsgDOTARedeemEventPrize::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrize.quantity)
}

// -------------------------------------------------------------------

// CMsgDOTARedeemEventPrizeResponse

// optional .CMsgDOTARedeemEventPrizeResponse.ResultCode result = 1 [default = Success];
inline bool CMsgDOTARedeemEventPrizeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTARedeemEventPrizeResponse_ResultCode CMsgDOTARedeemEventPrizeResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.result)
  return static_cast< ::CMsgDOTARedeemEventPrizeResponse_ResultCode >(result_);
}
inline void CMsgDOTARedeemEventPrizeResponse::set_result(::CMsgDOTARedeemEventPrizeResponse_ResultCode value) {
  assert(::CMsgDOTARedeemEventPrizeResponse_ResultCode_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.result)
}

// optional uint32 remaining_points = 2;
inline bool CMsgDOTARedeemEventPrizeResponse::has_remaining_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_remaining_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_remaining_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_remaining_points() {
  remaining_points_ = 0u;
  clear_has_remaining_points();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrizeResponse::remaining_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.remaining_points)
  return remaining_points_;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_remaining_points(::google::protobuf::uint32 value) {
  set_has_remaining_points();
  remaining_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.remaining_points)
}

// optional uint32 remaining_premium_points = 3;
inline bool CMsgDOTARedeemEventPrizeResponse::has_remaining_premium_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_remaining_premium_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_remaining_premium_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_remaining_premium_points() {
  remaining_premium_points_ = 0u;
  clear_has_remaining_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrizeResponse::remaining_premium_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.remaining_premium_points)
  return remaining_premium_points_;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_remaining_premium_points(::google::protobuf::uint32 value) {
  set_has_remaining_premium_points();
  remaining_premium_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.remaining_premium_points)
}

// optional uint32 event_id = 4;
inline bool CMsgDOTARedeemEventPrizeResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrizeResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.event_id)
  return event_id_;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPoints

// optional uint32 event_id = 1;
inline bool CMsgDOTAGetEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPoints::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPoints::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPoints::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPoints.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPoints::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPoints.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAGetEventPoints::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPoints::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPoints::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPoints::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPoints.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPoints::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPoints.account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse_Action

// optional uint32 action_id = 1;
inline bool CMsgDOTAGetEventPointsResponse_Action::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::action_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.Action.action_id)
  return action_id_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.Action.action_id)
}

// optional uint32 times_completed = 2 [default = 1];
inline bool CMsgDOTAGetEventPointsResponse_Action::has_times_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_has_times_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_has_times_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_times_completed() {
  times_completed_ = 1u;
  clear_has_times_completed();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::times_completed() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.Action.times_completed)
  return times_completed_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_times_completed(::google::protobuf::uint32 value) {
  set_has_times_completed();
  times_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.Action.times_completed)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse

// optional uint32 total_points = 1;
inline bool CMsgDOTAGetEventPointsResponse::has_total_points() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_total_points() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_total_points() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_points() {
  total_points_ = 0u;
  clear_has_total_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.total_points)
  return total_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_points(::google::protobuf::uint32 value) {
  set_has_total_points();
  total_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.total_points)
}

// optional uint32 total_premium_points = 2;
inline bool CMsgDOTAGetEventPointsResponse::has_total_premium_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_total_premium_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_total_premium_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_premium_points() {
  total_premium_points_ = 0u;
  clear_has_total_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_premium_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.total_premium_points)
  return total_premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_premium_points(::google::protobuf::uint32 value) {
  set_has_total_premium_points();
  total_premium_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.total_premium_points)
}

// optional uint32 event_id = 3;
inline bool CMsgDOTAGetEventPointsResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.event_id)
}

// optional uint32 points = 4;
inline bool CMsgDOTAGetEventPointsResponse::has_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_points() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_points() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.points)
  return points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.points)
}

// optional uint32 premium_points = 5;
inline bool CMsgDOTAGetEventPointsResponse::has_premium_points() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_premium_points() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_premium_points() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_premium_points() {
  premium_points_ = 0u;
  clear_has_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::premium_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.premium_points)
  return premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_premium_points(::google::protobuf::uint32 value) {
  set_has_premium_points();
  premium_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.premium_points)
}

// repeated .CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
inline int CMsgDOTAGetEventPointsResponse::completed_actions_size() const {
  return completed_actions_.size();
}
inline void CMsgDOTAGetEventPointsResponse::clear_completed_actions() {
  completed_actions_.Clear();
}
inline const ::CMsgDOTAGetEventPointsResponse_Action& CMsgDOTAGetEventPointsResponse::completed_actions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Get(index);
}
inline ::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::mutable_completed_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Mutable(index);
}
inline ::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::add_completed_actions() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >&
CMsgDOTAGetEventPointsResponse::completed_actions() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >*
CMsgDOTAGetEventPointsResponse::mutable_completed_actions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGetEventPointsResponse.completed_actions)
  return &completed_actions_;
}

// optional uint32 account_id = 7;
inline bool CMsgDOTAGetEventPointsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.account_id)
}

// optional bool owned = 8;
inline bool CMsgDOTAGetEventPointsResponse::has_owned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_owned() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_owned() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_owned() {
  owned_ = false;
  clear_has_owned();
}
inline bool CMsgDOTAGetEventPointsResponse::owned() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.owned)
  return owned_;
}
inline void CMsgDOTAGetEventPointsResponse::set_owned(bool value) {
  set_has_owned();
  owned_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.owned)
}

// optional uint32 audit_action = 9;
inline bool CMsgDOTAGetEventPointsResponse::has_audit_action() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_audit_action() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_audit_action() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_audit_action() {
  audit_action_ = 0u;
  clear_has_audit_action();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::audit_action() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.audit_action)
  return audit_action_;
}
inline void CMsgDOTAGetEventPointsResponse::set_audit_action(::google::protobuf::uint32 value) {
  set_has_audit_action();
  audit_action_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.audit_action)
}

// optional uint32 wager_tokens_remaining = 10;
inline bool CMsgDOTAGetEventPointsResponse::has_wager_tokens_remaining() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_wager_tokens_remaining() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_wager_tokens_remaining() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_wager_tokens_remaining() {
  wager_tokens_remaining_ = 0u;
  clear_has_wager_tokens_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::wager_tokens_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.wager_tokens_remaining)
  return wager_tokens_remaining_;
}
inline void CMsgDOTAGetEventPointsResponse::set_wager_tokens_remaining(::google::protobuf::uint32 value) {
  set_has_wager_tokens_remaining();
  wager_tokens_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.wager_tokens_remaining)
}

// -------------------------------------------------------------------

// CMsgDOTALiveLeagueGameUpdate

// optional uint32 live_league_games = 1;
inline bool CMsgDOTALiveLeagueGameUpdate::has_live_league_games() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveLeagueGameUpdate::set_has_live_league_games() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALiveLeagueGameUpdate::clear_has_live_league_games() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALiveLeagueGameUpdate::clear_live_league_games() {
  live_league_games_ = 0u;
  clear_has_live_league_games();
}
inline ::google::protobuf::uint32 CMsgDOTALiveLeagueGameUpdate::live_league_games() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveLeagueGameUpdate.live_league_games)
  return live_league_games_;
}
inline void CMsgDOTALiveLeagueGameUpdate::set_live_league_games(::google::protobuf::uint32 value) {
  set_has_live_league_games();
  live_league_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveLeagueGameUpdate.live_league_games)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelection

// optional uint32 selection_index = 1;
inline bool CMsgDOTACompendiumSelection::has_selection_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_selection_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumSelection::clear_has_selection_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumSelection::clear_selection_index() {
  selection_index_ = 0u;
  clear_has_selection_index();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection_index() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelection.selection_index)
  return selection_index_;
}
inline void CMsgDOTACompendiumSelection::set_selection_index(::google::protobuf::uint32 value) {
  set_has_selection_index();
  selection_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelection.selection_index)
}

// optional uint32 selection = 2;
inline bool CMsgDOTACompendiumSelection::has_selection() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_selection() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumSelection::clear_has_selection() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumSelection::clear_selection() {
  selection_ = 0u;
  clear_has_selection();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelection.selection)
  return selection_;
}
inline void CMsgDOTACompendiumSelection::set_selection(::google::protobuf::uint32 value) {
  set_has_selection();
  selection_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelection.selection)
}

// optional uint32 leagueid = 3;
inline bool CMsgDOTACompendiumSelection::has_leagueid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_leagueid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACompendiumSelection::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACompendiumSelection::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelection.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumSelection::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelection.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelectionResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTACompendiumSelectionResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelectionResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumSelectionResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumSelectionResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelectionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelectionResponse.eresult)
  return eresult_;
}
inline void CMsgDOTACompendiumSelectionResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelectionResponse.eresult)
}

// repeated .CMsgDOTACompendiumSelection extra_selections = 2;
inline int CMsgDOTACompendiumSelectionResponse::extra_selections_size() const {
  return extra_selections_.size();
}
inline void CMsgDOTACompendiumSelectionResponse::clear_extra_selections() {
  extra_selections_.Clear();
}
inline const ::CMsgDOTACompendiumSelection& CMsgDOTACompendiumSelectionResponse::extra_selections(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Get(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::mutable_extra_selections(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Mutable(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::add_extra_selections() {
  // @@protoc_insertion_point(field_add:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumSelectionResponse::extra_selections() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumSelectionResponse::mutable_extra_selections() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return &extra_selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumData

// repeated .CMsgDOTACompendiumSelection selections = 1;
inline int CMsgDOTACompendiumData::selections_size() const {
  return selections_.size();
}
inline void CMsgDOTACompendiumData::clear_selections() {
  selections_.Clear();
}
inline const ::CMsgDOTACompendiumSelection& CMsgDOTACompendiumData::selections(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumData.selections)
  return selections_.Get(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::mutable_selections(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTACompendiumData.selections)
  return selections_.Mutable(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::add_selections() {
  // @@protoc_insertion_point(field_add:CMsgDOTACompendiumData.selections)
  return selections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumData::selections() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACompendiumData.selections)
  return selections_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumData::mutable_selections() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACompendiumData.selections)
  return &selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataRequest

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumDataRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumDataRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataRequest.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataRequest.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataRequest::has_leagueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::set_has_leagueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumDataRequest::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumDataRequest::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataRequest.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataRequest::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataRequest.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataResponse

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumDataResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataResponse.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataResponse::has_leagueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_leagueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumDataResponse::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataResponse::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataResponse.leagueid)
}

// optional uint32 result = 3 [default = 2];
inline bool CMsgDOTACompendiumDataResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACompendiumDataResponse::clear_result() {
  result_ = 2u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.result)
  return result_;
}
inline void CMsgDOTACompendiumDataResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataResponse.result)
}

// optional .CMsgDOTACompendiumData compendium_data = 4;
inline bool CMsgDOTACompendiumDataResponse::has_compendium_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_compendium_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_compendium_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACompendiumDataResponse::clear_compendium_data() {
  if (compendium_data_ != NULL) compendium_data_->::CMsgDOTACompendiumData::Clear();
  clear_has_compendium_data();
}
inline const ::CMsgDOTACompendiumData& CMsgDOTACompendiumDataResponse::compendium_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.compendium_data)
  return compendium_data_ != NULL ? *compendium_data_ : *default_instance_->compendium_data_;
}
inline ::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::mutable_compendium_data() {
  set_has_compendium_data();
  if (compendium_data_ == NULL) compendium_data_ = new ::CMsgDOTACompendiumData;
  // @@protoc_insertion_point(field_mutable:CMsgDOTACompendiumDataResponse.compendium_data)
  return compendium_data_;
}
inline ::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::release_compendium_data() {
  clear_has_compendium_data();
  ::CMsgDOTACompendiumData* temp = compendium_data_;
  compendium_data_ = NULL;
  return temp;
}
inline void CMsgDOTACompendiumDataResponse::set_allocated_compendium_data(::CMsgDOTACompendiumData* compendium_data) {
  delete compendium_data_;
  compendium_data_ = compendium_data;
  if (compendium_data) {
    set_has_compendium_data();
  } else {
    clear_has_compendium_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACompendiumDataResponse.compendium_data)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistory

// optional uint32 account_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistory::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.account_id)
  return account_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.account_id)
}

// optional uint64 start_at_match_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistory::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_start_at_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_start_at_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_start_at_match_id() {
  start_at_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_start_at_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistory::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_start_at_match_id(::google::protobuf::uint64 value) {
  set_has_start_at_match_id();
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
}

// optional uint32 matches_requested = 3;
inline bool CMsgDOTAGetPlayerMatchHistory::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_matches_requested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_matches_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_matches_requested() {
  matches_requested_ = 0u;
  clear_has_matches_requested();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::matches_requested() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_matches_requested(::google::protobuf::uint32 value) {
  set_has_matches_requested();
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.matches_requested)
}

// optional uint32 hero_id = 4;
inline bool CMsgDOTAGetPlayerMatchHistory::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.hero_id)
}

// optional uint32 request_id = 5;
inline bool CMsgDOTAGetPlayerMatchHistory::has_request_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_request_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.request_id)
}

// optional bool include_practice_matches = 7;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_practice_matches() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_include_practice_matches() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_include_practice_matches() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_practice_matches() {
  include_practice_matches_ = false;
  clear_has_include_practice_matches();
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_practice_matches() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
  return include_practice_matches_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_practice_matches(bool value) {
  set_has_include_practice_matches();
  include_practice_matches_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
}

// optional bool include_custom_games = 8;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_custom_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_include_custom_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_include_custom_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_custom_games() {
  include_custom_games_ = false;
  clear_has_include_custom_games();
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_custom_games() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.include_custom_games)
  return include_custom_games_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_custom_games(bool value) {
  set_has_include_custom_games();
  include_custom_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.include_custom_games)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse_Match

// optional uint64 match_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistoryResponse_Match::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
  return match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
}

// optional uint32 start_time = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
  return start_time_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
}

// optional uint32 hero_id = 3;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
}

// optional bool winner = 4;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_winner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_winner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_winner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_winner() {
  winner_ = false;
  clear_has_winner();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::winner() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
  return winner_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_winner(bool value) {
  set_has_winner();
  winner_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
}

// optional uint32 game_mode = 5;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_game_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
  return game_mode_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
}

// optional int32 rank_change = 6;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_rank_change() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_rank_change() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_rank_change() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_rank_change() {
  rank_change_ = 0;
  clear_has_rank_change();
}
inline ::google::protobuf::int32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::rank_change() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
  return rank_change_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_rank_change(::google::protobuf::int32 value) {
  set_has_rank_change();
  rank_change_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
}

// optional uint32 previous_rank = 7;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_previous_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_previous_rank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_previous_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_previous_rank() {
  previous_rank_ = 0u;
  clear_has_previous_rank();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::previous_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
  return previous_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_previous_rank(::google::protobuf::uint32 value) {
  set_has_previous_rank();
  previous_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
}

// optional uint32 lobby_type = 8;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_lobby_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::lobby_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
}

// optional bool solo_rank = 9;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_solo_rank() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_solo_rank() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_solo_rank() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_solo_rank() {
  solo_rank_ = false;
  clear_has_solo_rank();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::solo_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
  return solo_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_solo_rank(bool value) {
  set_has_solo_rank();
  solo_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
}

// optional bool abandon = 10;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_abandon() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_abandon() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_abandon() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_abandon() {
  abandon_ = false;
  clear_has_abandon();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::abandon() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
  return abandon_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_abandon(bool value) {
  set_has_abandon();
  abandon_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
}

// optional uint32 duration = 11;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_duration() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_duration() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_duration() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::duration() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
  return duration_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
}

// optional uint32 engine = 12;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_engine() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_engine() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_engine() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_engine() {
  engine_ = 0u;
  clear_has_engine();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::engine() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
  return engine_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_engine(::google::protobuf::uint32 value) {
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
}

// optional bool active_battle_pass = 13;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_active_battle_pass() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_active_battle_pass() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_active_battle_pass() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_active_battle_pass() {
  active_battle_pass_ = false;
  clear_has_active_battle_pass();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::active_battle_pass() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.active_battle_pass)
  return active_battle_pass_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_active_battle_pass(bool value) {
  set_has_active_battle_pass();
  active_battle_pass_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.active_battle_pass)
}

// optional bool seasonal_rank = 14;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_seasonal_rank() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_seasonal_rank() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_seasonal_rank() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_seasonal_rank() {
  seasonal_rank_ = false;
  clear_has_seasonal_rank();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::seasonal_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.seasonal_rank)
  return seasonal_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_seasonal_rank(bool value) {
  set_has_seasonal_rank();
  seasonal_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.seasonal_rank)
}

// optional uint32 tourney_id = 15;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_id() {
  tourney_id_ = 0u;
  clear_has_tourney_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_id)
  return tourney_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_id(::google::protobuf::uint32 value) {
  set_has_tourney_id();
  tourney_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_id)
}

// optional uint32 tourney_round = 16;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_round() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_round() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_round() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_round() {
  tourney_round_ = 0u;
  clear_has_tourney_round();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_round() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_round)
  return tourney_round_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_round(::google::protobuf::uint32 value) {
  set_has_tourney_round();
  tourney_round_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_round)
}

// optional uint32 tourney_tier = 17;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_tier() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_tier() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_tier() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_tier() {
  tourney_tier_ = 0u;
  clear_has_tourney_tier();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_tier() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_tier)
  return tourney_tier_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_tier(::google::protobuf::uint32 value) {
  set_has_tourney_tier();
  tourney_tier_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_tier)
}

// optional uint32 tourney_division = 18;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_division() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_division() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_division() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_division() {
  tourney_division_ = 0u;
  clear_has_tourney_division();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_division() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_division)
  return tourney_division_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_division(::google::protobuf::uint32 value) {
  set_has_tourney_division();
  tourney_division_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_division)
}

// optional uint32 team_id = 19;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_team_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_team_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_team_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_id)
  return team_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_id)
}

// optional string team_name = 20;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_team_name() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_team_name() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_team_name() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAGetPlayerMatchHistoryResponse_Match::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  return *team_name_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
inline ::std::string* CMsgDOTAGetPlayerMatchHistoryResponse_Match::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTAGetPlayerMatchHistoryResponse_Match::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}

// optional uint64 ugc_team_ui_logo = 21;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_ugc_team_ui_logo() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_ugc_team_ui_logo() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_ugc_team_ui_logo() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_ugc_team_ui_logo() {
  ugc_team_ui_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_team_ui_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistoryResponse_Match::ugc_team_ui_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.ugc_team_ui_logo)
  return ugc_team_ui_logo_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_ugc_team_ui_logo(::google::protobuf::uint64 value) {
  set_has_ugc_team_ui_logo();
  ugc_team_ui_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.ugc_team_ui_logo)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse

// repeated .CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
inline int CMsgDOTAGetPlayerMatchHistoryResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAGetPlayerMatchHistoryResponse_Match& CMsgDOTAGetPlayerMatchHistoryResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
CMsgDOTAGetPlayerMatchHistoryResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return &matches_;
}

// optional uint32 request_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
}

// -------------------------------------------------------------------

// CMsgDOTAStartDailyHeroChallenge

// -------------------------------------------------------------------

// CMsgGCNotificationsRequest

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse_Notification

// optional uint64 id = 1;
inline bool CMsgGCNotificationsResponse_Notification::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CMsgGCNotificationsResponse_Notification::id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.id)
  return id_;
}
inline void CMsgGCNotificationsResponse_Notification::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.id)
}

// optional uint32 type = 2;
inline bool CMsgGCNotificationsResponse_Notification::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::type() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.type)
  return type_;
}
inline void CMsgGCNotificationsResponse_Notification::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.type)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCNotificationsResponse_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.timestamp)
  return timestamp_;
}
inline void CMsgGCNotificationsResponse_Notification::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.timestamp)
}

// optional uint32 reference_a = 4;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_a() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_a() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_a() {
  reference_a_ = 0u;
  clear_has_reference_a();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_a() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.reference_a)
  return reference_a_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_a(::google::protobuf::uint32 value) {
  set_has_reference_a();
  reference_a_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.reference_a)
}

// optional uint32 reference_b = 5;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_b() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_b() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_b() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_b() {
  reference_b_ = 0u;
  clear_has_reference_b();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_b() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.reference_b)
  return reference_b_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_b(::google::protobuf::uint32 value) {
  set_has_reference_b();
  reference_b_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.reference_b)
}

// optional uint32 reference_c = 6;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_c() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_c() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_c() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_c() {
  reference_c_ = 0u;
  clear_has_reference_c();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_c() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.reference_c)
  return reference_c_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_c(::google::protobuf::uint32 value) {
  set_has_reference_c();
  reference_c_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.reference_c)
}

// optional string message = 7;
inline bool CMsgGCNotificationsResponse_Notification::has_message() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_message() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_message() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgGCNotificationsResponse_Notification::message() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.message)
  return *message_;
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.message)
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCNotificationsResponse.Notification.message)
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCNotificationsResponse.Notification.message)
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCNotificationsResponse.Notification.message)
  return message_;
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCNotificationsResponse_Notification::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCNotificationsResponse.Notification.message)
}

// optional bool unread = 8;
inline bool CMsgGCNotificationsResponse_Notification::has_unread() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_unread() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_unread() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_unread() {
  unread_ = false;
  clear_has_unread();
}
inline bool CMsgGCNotificationsResponse_Notification::unread() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.unread)
  return unread_;
}
inline void CMsgGCNotificationsResponse_Notification::set_unread(bool value) {
  set_has_unread();
  unread_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.unread)
}

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse

// optional .CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCNotificationsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotificationsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotificationsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.result)
  return static_cast< ::CMsgGCNotificationsResponse_EResult >(result_);
}
inline void CMsgGCNotificationsResponse::set_result(::CMsgGCNotificationsResponse_EResult value) {
  assert(::CMsgGCNotificationsResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.result)
}

// repeated .CMsgGCNotificationsResponse.Notification notifications = 2;
inline int CMsgGCNotificationsResponse::notifications_size() const {
  return notifications_.size();
}
inline void CMsgGCNotificationsResponse::clear_notifications() {
  notifications_.Clear();
}
inline const ::CMsgGCNotificationsResponse_Notification& CMsgGCNotificationsResponse::notifications(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.notifications)
  return notifications_.Get(index);
}
inline ::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCNotificationsResponse.notifications)
  return notifications_.Mutable(index);
}
inline ::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::add_notifications() {
  // @@protoc_insertion_point(field_add:CMsgGCNotificationsResponse.notifications)
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >&
CMsgGCNotificationsResponse::notifications() const {
  // @@protoc_insertion_point(field_list:CMsgGCNotificationsResponse.notifications)
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >*
CMsgGCNotificationsResponse::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCNotificationsResponse.notifications)
  return &notifications_;
}

// -------------------------------------------------------------------

// CMsgGCNotificationsMarkReadRequest

// -------------------------------------------------------------------

// CMsgClientToGCMarkNotificationListRead

// repeated uint64 notification_ids = 1;
inline int CMsgClientToGCMarkNotificationListRead::notification_ids_size() const {
  return notification_ids_.size();
}
inline void CMsgClientToGCMarkNotificationListRead::clear_notification_ids() {
  notification_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCMarkNotificationListRead::notification_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_.Get(index);
}
inline void CMsgClientToGCMarkNotificationListRead::set_notification_ids(int index, ::google::protobuf::uint64 value) {
  notification_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline void CMsgClientToGCMarkNotificationListRead::add_notification_ids(::google::protobuf::uint64 value) {
  notification_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCMarkNotificationListRead::notification_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCMarkNotificationListRead::mutable_notification_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCMarkNotificationListRead.notification_ids)
  return &notification_ids_;
}

// -------------------------------------------------------------------

// CMsgGCLeagueAdminState_PrivateLeagueKeys

// optional uint32 leagueid = 1;
inline bool CMsgGCLeagueAdminState_PrivateLeagueKeys::has_leagueid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_has_leagueid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState_PrivateLeagueKeys::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.PrivateLeagueKeys.leagueid)
  return leagueid_;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCLeagueAdminState.PrivateLeagueKeys.leagueid)
}

// optional uint32 privatekey = 2;
inline bool CMsgGCLeagueAdminState_PrivateLeagueKeys::has_privatekey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_has_privatekey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_has_privatekey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_privatekey() {
  privatekey_ = 0u;
  clear_has_privatekey();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState_PrivateLeagueKeys::privatekey() const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.PrivateLeagueKeys.privatekey)
  return privatekey_;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_privatekey(::google::protobuf::uint32 value) {
  set_has_privatekey();
  privatekey_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCLeagueAdminState.PrivateLeagueKeys.privatekey)
}

// -------------------------------------------------------------------

// CMsgGCLeagueAdminState

// repeated uint32 leagues = 1;
inline int CMsgGCLeagueAdminState::leagues_size() const {
  return leagues_.size();
}
inline void CMsgGCLeagueAdminState::clear_leagues() {
  leagues_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState::leagues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.leagues)
  return leagues_.Get(index);
}
inline void CMsgGCLeagueAdminState::set_leagues(int index, ::google::protobuf::uint32 value) {
  leagues_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCLeagueAdminState.leagues)
}
inline void CMsgGCLeagueAdminState::add_leagues(::google::protobuf::uint32 value) {
  leagues_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCLeagueAdminState.leagues)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCLeagueAdminState::leagues() const {
  // @@protoc_insertion_point(field_list:CMsgGCLeagueAdminState.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCLeagueAdminState::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCLeagueAdminState.leagues)
  return &leagues_;
}

// repeated .CMsgGCLeagueAdminState.PrivateLeagueKeys keys = 2;
inline int CMsgGCLeagueAdminState::keys_size() const {
  return keys_.size();
}
inline void CMsgGCLeagueAdminState::clear_keys() {
  keys_.Clear();
}
inline const ::CMsgGCLeagueAdminState_PrivateLeagueKeys& CMsgGCLeagueAdminState::keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.keys)
  return keys_.Get(index);
}
inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* CMsgGCLeagueAdminState::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCLeagueAdminState.keys)
  return keys_.Mutable(index);
}
inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* CMsgGCLeagueAdminState::add_keys() {
  // @@protoc_insertion_point(field_add:CMsgGCLeagueAdminState.keys)
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >&
CMsgGCLeagueAdminState::keys() const {
  // @@protoc_insertion_point(field_list:CMsgGCLeagueAdminState.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >*
CMsgGCLeagueAdminState::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCLeagueAdminState.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoRequest_PlayerInfo

// optional uint32 account_id = 1;
inline bool CMsgGCPlayerInfoRequest_PlayerInfo::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoRequest_PlayerInfo::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoRequest.PlayerInfo.account_id)
  return account_id_;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoRequest.PlayerInfo.account_id)
}

// optional uint32 timestamp = 2;
inline bool CMsgGCPlayerInfoRequest_PlayerInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoRequest_PlayerInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoRequest.PlayerInfo.timestamp)
  return timestamp_;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoRequest.PlayerInfo.timestamp)
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoRequest

// repeated .CMsgGCPlayerInfoRequest.PlayerInfo player_infos = 1;
inline int CMsgGCPlayerInfoRequest::player_infos_size() const {
  return player_infos_.size();
}
inline void CMsgGCPlayerInfoRequest::clear_player_infos() {
  player_infos_.Clear();
}
inline const ::CMsgGCPlayerInfoRequest_PlayerInfo& CMsgGCPlayerInfoRequest::player_infos(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Get(index);
}
inline ::CMsgGCPlayerInfoRequest_PlayerInfo* CMsgGCPlayerInfoRequest::mutable_player_infos(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Mutable(index);
}
inline ::CMsgGCPlayerInfoRequest_PlayerInfo* CMsgGCPlayerInfoRequest::add_player_infos() {
  // @@protoc_insertion_point(field_add:CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCPlayerInfoRequest_PlayerInfo >&
CMsgGCPlayerInfoRequest::player_infos() const {
  // @@protoc_insertion_point(field_list:CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCPlayerInfoRequest_PlayerInfo >*
CMsgGCPlayerInfoRequest::mutable_player_infos() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCPlayerInfoRequest.player_infos)
  return &player_infos_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmit

// optional string name = 1;
inline bool CMsgGCPlayerInfoSubmit::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoSubmit::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.name)
  return *name_;
}
inline void CMsgGCPlayerInfoSubmit::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.name)
}
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCPlayerInfoSubmit.name)
}
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCPlayerInfoSubmit.name)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCPlayerInfoSubmit.name)
  return name_;
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCPlayerInfoSubmit.name)
}

// optional string country_code = 2;
inline bool CMsgGCPlayerInfoSubmit::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_country_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCPlayerInfoSubmit::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.country_code)
  return *country_code_;
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.country_code)
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCPlayerInfoSubmit.country_code)
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCPlayerInfoSubmit.country_code)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCPlayerInfoSubmit.country_code)
  return country_code_;
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCPlayerInfoSubmit.country_code)
}

// optional uint32 fantasy_role = 3;
inline bool CMsgGCPlayerInfoSubmit::has_fantasy_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_fantasy_role() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_fantasy_role() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCPlayerInfoSubmit::clear_fantasy_role() {
  fantasy_role_ = 0u;
  clear_has_fantasy_role();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::fantasy_role() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.fantasy_role)
  return fantasy_role_;
}
inline void CMsgGCPlayerInfoSubmit::set_fantasy_role(::google::protobuf::uint32 value) {
  set_has_fantasy_role();
  fantasy_role_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.fantasy_role)
}

// optional uint32 team_id = 4;
inline bool CMsgGCPlayerInfoSubmit::has_team_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_team_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCPlayerInfoSubmit::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.team_id)
  return team_id_;
}
inline void CMsgGCPlayerInfoSubmit::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.team_id)
}

// optional string sponsor = 5;
inline bool CMsgGCPlayerInfoSubmit::has_sponsor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_sponsor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_sponsor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCPlayerInfoSubmit::clear_sponsor() {
  if (sponsor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_->clear();
  }
  clear_has_sponsor();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::sponsor() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.sponsor)
  return *sponsor_;
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const ::std::string& value) {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  sponsor_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.sponsor)
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value) {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  sponsor_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCPlayerInfoSubmit.sponsor)
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value, size_t size) {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  sponsor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCPlayerInfoSubmit.sponsor)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_sponsor() {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCPlayerInfoSubmit.sponsor)
  return sponsor_;
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_sponsor() {
  clear_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sponsor_;
    sponsor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_sponsor(::std::string* sponsor) {
  if (sponsor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sponsor_;
  }
  if (sponsor) {
    set_has_sponsor();
    sponsor_ = sponsor;
  } else {
    clear_has_sponsor();
    sponsor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCPlayerInfoSubmit.sponsor)
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmitResponse

// optional .CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCPlayerInfoSubmitResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmitResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoSubmitResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoSubmitResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmitResponse.result)
  return static_cast< ::CMsgGCPlayerInfoSubmitResponse_EResult >(result_);
}
inline void CMsgGCPlayerInfoSubmitResponse::set_result(::CMsgGCPlayerInfoSubmitResponse_EResult value) {
  assert(::CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmitResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult_Response

// optional uint32 question_id = 1;
inline bool CMsgClientProvideSurveyResult_Response::has_question_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::set_has_question_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_has_question_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_question_id() {
  question_id_ = 0u;
  clear_has_question_id();
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::question_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.Response.question_id)
  return question_id_;
}
inline void CMsgClientProvideSurveyResult_Response::set_question_id(::google::protobuf::uint32 value) {
  set_has_question_id();
  question_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientProvideSurveyResult.Response.question_id)
}

// optional uint32 survey_value = 2;
inline bool CMsgClientProvideSurveyResult_Response::has_survey_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::set_has_survey_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_has_survey_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_survey_value() {
  survey_value_ = 0u;
  clear_has_survey_value();
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::survey_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.Response.survey_value)
  return survey_value_;
}
inline void CMsgClientProvideSurveyResult_Response::set_survey_value(::google::protobuf::uint32 value) {
  set_has_survey_value();
  survey_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientProvideSurveyResult.Response.survey_value)
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult

// repeated .CMsgClientProvideSurveyResult.Response responses = 1;
inline int CMsgClientProvideSurveyResult::responses_size() const {
  return responses_.size();
}
inline void CMsgClientProvideSurveyResult::clear_responses() {
  responses_.Clear();
}
inline const ::CMsgClientProvideSurveyResult_Response& CMsgClientProvideSurveyResult::responses(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.responses)
  return responses_.Get(index);
}
inline ::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientProvideSurveyResult.responses)
  return responses_.Mutable(index);
}
inline ::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::add_responses() {
  // @@protoc_insertion_point(field_add:CMsgClientProvideSurveyResult.responses)
  return responses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >&
CMsgClientProvideSurveyResult::responses() const {
  // @@protoc_insertion_point(field_list:CMsgClientProvideSurveyResult.responses)
  return responses_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >*
CMsgClientProvideSurveyResult::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientProvideSurveyResult.responses)
  return &responses_;
}

// optional uint64 survey_key = 2;
inline bool CMsgClientProvideSurveyResult::has_survey_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientProvideSurveyResult::set_has_survey_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientProvideSurveyResult::clear_has_survey_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientProvideSurveyResult::clear_survey_key() {
  survey_key_ = GOOGLE_ULONGLONG(0);
  clear_has_survey_key();
}
inline ::google::protobuf::uint64 CMsgClientProvideSurveyResult::survey_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.survey_key)
  return survey_key_;
}
inline void CMsgClientProvideSurveyResult::set_survey_key(::google::protobuf::uint64 value) {
  set_has_survey_key();
  survey_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientProvideSurveyResult.survey_key)
}

// -------------------------------------------------------------------

// CMsgDOTAEmoticonAccessSDO

// optional uint32 account_id = 1;
inline bool CMsgDOTAEmoticonAccessSDO::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEmoticonAccessSDO::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEmoticonAccessSDO.account_id)
  return account_id_;
}
inline void CMsgDOTAEmoticonAccessSDO::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEmoticonAccessSDO.account_id)
}

// optional bytes unlocked_emoticons = 2;
inline bool CMsgDOTAEmoticonAccessSDO::has_unlocked_emoticons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::set_has_unlocked_emoticons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_has_unlocked_emoticons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_unlocked_emoticons() {
  if (unlocked_emoticons_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_->clear();
  }
  clear_has_unlocked_emoticons();
}
inline const ::std::string& CMsgDOTAEmoticonAccessSDO::unlocked_emoticons() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return *unlocked_emoticons_;
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const ::std::string& value) {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  unlocked_emoticons_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const char* value) {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  unlocked_emoticons_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const void* value, size_t size) {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  unlocked_emoticons_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::mutable_unlocked_emoticons() {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return unlocked_emoticons_;
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::release_unlocked_emoticons() {
  clear_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = unlocked_emoticons_;
    unlocked_emoticons_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEmoticonAccessSDO::set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons) {
  if (unlocked_emoticons_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unlocked_emoticons_;
  }
  if (unlocked_emoticons) {
    set_has_unlocked_emoticons();
    unlocked_emoticons_ = unlocked_emoticons;
  } else {
    clear_has_unlocked_emoticons();
    unlocked_emoticons_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}

// -------------------------------------------------------------------

// CMsgClientToGCEmoticonDataRequest

// -------------------------------------------------------------------

// CMsgGCToClientEmoticonData

// optional .CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
inline bool CMsgGCToClientEmoticonData::has_emoticon_access() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientEmoticonData::set_has_emoticon_access() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientEmoticonData::clear_has_emoticon_access() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientEmoticonData::clear_emoticon_access() {
  if (emoticon_access_ != NULL) emoticon_access_->::CMsgDOTAEmoticonAccessSDO::Clear();
  clear_has_emoticon_access();
}
inline const ::CMsgDOTAEmoticonAccessSDO& CMsgGCToClientEmoticonData::emoticon_access() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientEmoticonData.emoticon_access)
  return emoticon_access_ != NULL ? *emoticon_access_ : *default_instance_->emoticon_access_;
}
inline ::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::mutable_emoticon_access() {
  set_has_emoticon_access();
  if (emoticon_access_ == NULL) emoticon_access_ = new ::CMsgDOTAEmoticonAccessSDO;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientEmoticonData.emoticon_access)
  return emoticon_access_;
}
inline ::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::release_emoticon_access() {
  clear_has_emoticon_access();
  ::CMsgDOTAEmoticonAccessSDO* temp = emoticon_access_;
  emoticon_access_ = NULL;
  return temp;
}
inline void CMsgGCToClientEmoticonData::set_allocated_emoticon_access(::CMsgDOTAEmoticonAccessSDO* emoticon_access) {
  delete emoticon_access_;
  emoticon_access_ = emoticon_access;
  if (emoticon_access) {
    set_has_emoticon_access();
  } else {
    clear_has_emoticon_access();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientEmoticonData.emoticon_access)
}

// -------------------------------------------------------------------

// CMsgClientToGCTrackDialogResult

// optional uint32 dialog_id = 1;
inline bool CMsgClientToGCTrackDialogResult::has_dialog_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::set_has_dialog_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTrackDialogResult::clear_has_dialog_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTrackDialogResult::clear_dialog_id() {
  dialog_id_ = 0u;
  clear_has_dialog_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::dialog_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTrackDialogResult.dialog_id)
  return dialog_id_;
}
inline void CMsgClientToGCTrackDialogResult::set_dialog_id(::google::protobuf::uint32 value) {
  set_has_dialog_id();
  dialog_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTrackDialogResult.dialog_id)
}

// optional uint32 value = 2;
inline bool CMsgClientToGCTrackDialogResult::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCTrackDialogResult::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCTrackDialogResult::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTrackDialogResult.value)
  return value_;
}
inline void CMsgClientToGCTrackDialogResult::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTrackDialogResult.value)
}

// -------------------------------------------------------------------

// CMsgGCToClientTournamentItemDrop

// optional uint32 item_def = 1;
inline bool CMsgGCToClientTournamentItemDrop::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTournamentItemDrop.item_def)
  return item_def_;
}
inline void CMsgGCToClientTournamentItemDrop::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTournamentItemDrop.item_def)
}

// optional uint32 event_type = 2;
inline bool CMsgGCToClientTournamentItemDrop::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTournamentItemDrop.event_type)
  return event_type_;
}
inline void CMsgGCToClientTournamentItemDrop::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTournamentItemDrop.event_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquips

// repeated .CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCSetAdditionalEquips::equips_size() const {
  return equips_.size();
}
inline void CMsgClientToGCSetAdditionalEquips::clear_equips() {
  equips_.Clear();
}
inline const ::CAdditionalEquipSlot& CMsgClientToGCSetAdditionalEquips::equips(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Get(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Mutable(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::add_equips() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
CMsgClientToGCSetAdditionalEquips::equips() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
CMsgClientToGCSetAdditionalEquips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetAdditionalEquips.equips)
  return &equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquipsResponse

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquips

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquipsResponse

// repeated .CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCGetAdditionalEquipsResponse::equips_size() const {
  return equips_.size();
}
inline void CMsgClientToGCGetAdditionalEquipsResponse::clear_equips() {
  equips_.Clear();
}
inline const ::CAdditionalEquipSlot& CMsgClientToGCGetAdditionalEquipsResponse::equips(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Get(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Mutable(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::add_equips() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
CMsgClientToGCGetAdditionalEquipsResponse::equips() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return &equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrder

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrderResponse

// repeated uint32 hero_ids = 1;
inline int CMsgClientToGCGetAllHeroOrderResponse::hero_ids_size() const {
  return hero_ids_.size();
}
inline void CMsgClientToGCGetAllHeroOrderResponse::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroOrderResponse::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_.Get(index);
}
inline void CMsgClientToGCGetAllHeroOrderResponse::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline void CMsgClientToGCGetAllHeroOrderResponse::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCGetAllHeroOrderResponse::hero_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCGetAllHeroOrderResponse::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return &hero_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgress

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgress::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgress::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgress::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgress::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgress::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgress.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgress::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgress.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgressResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.account_id)
}

// optional uint32 curr_hero_id = 2;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_id() {
  curr_hero_id_ = 0u;
  clear_has_curr_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
  return curr_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_id(::google::protobuf::uint32 value) {
  set_has_curr_hero_id();
  curr_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
}

// optional uint32 laps_completed = 3;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_laps_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_laps_completed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_laps_completed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_laps_completed() {
  laps_completed_ = 0u;
  clear_has_laps_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::laps_completed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
  return laps_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_laps_completed(::google::protobuf::uint32 value) {
  set_has_laps_completed();
  laps_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
}

// optional uint32 curr_hero_games = 4;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_hero_games() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_hero_games() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_games() {
  curr_hero_games_ = 0u;
  clear_has_curr_hero_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
  return curr_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_games(::google::protobuf::uint32 value) {
  set_has_curr_hero_games();
  curr_hero_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
}

// optional uint32 curr_lap_time_started = 5;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_time_started() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_time_started() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_time_started() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_time_started() {
  curr_lap_time_started_ = 0u;
  clear_has_curr_lap_time_started();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_time_started() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
  return curr_lap_time_started_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_time_started(::google::protobuf::uint32 value) {
  set_has_curr_lap_time_started();
  curr_lap_time_started_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
}

// optional uint32 curr_lap_games = 6;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_games() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_games() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_games() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_games() {
  curr_lap_games_ = 0u;
  clear_has_curr_lap_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
  return curr_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_games(::google::protobuf::uint32 value) {
  set_has_curr_lap_games();
  curr_lap_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
}

// optional uint32 best_lap_games = 7;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_best_lap_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_best_lap_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_games() {
  best_lap_games_ = 0u;
  clear_has_best_lap_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
  return best_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_games(::google::protobuf::uint32 value) {
  set_has_best_lap_games();
  best_lap_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
}

// optional uint32 best_lap_time = 8;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_best_lap_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_best_lap_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_time() {
  best_lap_time_ = 0u;
  clear_has_best_lap_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
  return best_lap_time_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_time(::google::protobuf::uint32 value) {
  set_has_best_lap_time();
  best_lap_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
}

// optional uint32 lap_heroes_completed = 9;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_completed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_lap_heroes_completed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_lap_heroes_completed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_completed() {
  lap_heroes_completed_ = 0u;
  clear_has_lap_heroes_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_completed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
  return lap_heroes_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_completed(::google::protobuf::uint32 value) {
  set_has_lap_heroes_completed();
  lap_heroes_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
}

// optional uint32 lap_heroes_remaining = 10;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_remaining() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_lap_heroes_remaining() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_lap_heroes_remaining() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_remaining() {
  lap_heroes_remaining_ = 0u;
  clear_has_lap_heroes_remaining();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
  return lap_heroes_remaining_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_remaining(::google::protobuf::uint32 value) {
  set_has_lap_heroes_remaining();
  lap_heroes_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
}

// optional uint32 next_hero_id = 11;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_hero_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_next_hero_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_next_hero_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_hero_id() {
  next_hero_id_ = 0u;
  clear_has_next_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::next_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
  return next_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_hero_id(::google::protobuf::uint32 value) {
  set_has_next_hero_id();
  next_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
}

// optional uint32 prev_hero_id = 12;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_hero_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_hero_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_id() {
  prev_hero_id_ = 0u;
  clear_has_prev_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
  return prev_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_id(::google::protobuf::uint32 value) {
  set_has_prev_hero_id();
  prev_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
}

// optional uint32 prev_hero_games = 13;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_games() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_hero_games() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_hero_games() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_games() {
  prev_hero_games_ = 0u;
  clear_has_prev_hero_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
  return prev_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_games(::google::protobuf::uint32 value) {
  set_has_prev_hero_games();
  prev_hero_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
}

// optional float prev_avg_tries = 14;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_avg_tries() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_avg_tries() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_avg_tries() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_avg_tries() {
  prev_avg_tries_ = 0;
  clear_has_prev_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::prev_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
  return prev_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_avg_tries(float value) {
  set_has_prev_avg_tries();
  prev_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
}

// optional float curr_avg_tries = 15;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_avg_tries() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_avg_tries() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_avg_tries() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_avg_tries() {
  curr_avg_tries_ = 0;
  clear_has_curr_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
  return curr_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_avg_tries(float value) {
  set_has_curr_avg_tries();
  curr_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
}

// optional float next_avg_tries = 16;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_avg_tries() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_next_avg_tries() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_next_avg_tries() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_avg_tries() {
  next_avg_tries_ = 0;
  clear_has_next_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::next_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
  return next_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_avg_tries(float value) {
  set_has_next_avg_tries();
  next_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
}

// optional float full_lap_avg_tries = 17;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_full_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_full_lap_avg_tries() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_full_lap_avg_tries() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_full_lap_avg_tries() {
  full_lap_avg_tries_ = 0;
  clear_has_full_lap_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::full_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
  return full_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_full_lap_avg_tries(float value) {
  set_has_full_lap_avg_tries();
  full_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
}

// optional float curr_lap_avg_tries = 18;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_avg_tries() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_avg_tries() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_avg_tries() {
  curr_lap_avg_tries_ = 0;
  clear_has_curr_lap_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
  return curr_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_avg_tries(float value) {
  set_has_curr_lap_avg_tries();
  curr_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
}

// optional string profile_name = 19;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_profile_name() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_profile_name() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_profile_name() {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_->clear();
  }
  clear_has_profile_name();
}
inline const ::std::string& CMsgClientToGCGetAllHeroProgressResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return *profile_name_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const ::std::string& value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value, size_t size) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::mutable_profile_name() {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return profile_name_;
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::release_profile_name() {
  clear_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profile_name_;
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profile_name_;
  }
  if (profile_name) {
    set_has_profile_name();
    profile_name_ = profile_name;
  } else {
    clear_has_profile_name();
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}

// optional uint32 start_hero_id = 20;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_start_hero_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_start_hero_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_start_hero_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_start_hero_id() {
  start_hero_id_ = 0u;
  clear_has_start_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::start_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
  return start_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_start_hero_id(::google::protobuf::uint32 value) {
  set_has_start_hero_id();
  start_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyList

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyList::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyList::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyList::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyList::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyList::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyList.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyList::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyList.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse_Trophy

// optional uint32 trophy_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_trophy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_trophy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_id() {
  trophy_id_ = 0u;
  clear_has_trophy_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
  return trophy_id_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_id(::google::protobuf::uint32 value) {
  set_has_trophy_id();
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_trophy_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_trophy_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_score() {
  trophy_score_ = 0u;
  clear_has_trophy_score();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_score() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
  return trophy_score_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_score(::google::protobuf::uint32 value) {
  set_has_trophy_score();
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
}

// optional uint32 last_updated = 3;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_last_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_last_updated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_last_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_last_updated() {
  last_updated_ = 0u;
  clear_has_last_updated();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::last_updated() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
  return last_updated_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_last_updated(::google::protobuf::uint32 value) {
  set_has_last_updated();
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyListResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.account_id)
}

// repeated .CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
inline int CMsgClientToGCGetTrophyListResponse::trophies_size() const {
  return trophies_.size();
}
inline void CMsgClientToGCGetTrophyListResponse::clear_trophies() {
  trophies_.Clear();
}
inline const ::CMsgClientToGCGetTrophyListResponse_Trophy& CMsgClientToGCGetTrophyListResponse::trophies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Get(index);
}
inline ::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::mutable_trophies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Mutable(index);
}
inline ::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::add_trophies() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >&
CMsgClientToGCGetTrophyListResponse::trophies() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >*
CMsgClientToGCGetTrophyListResponse::mutable_trophies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetTrophyListResponse.trophies)
  return &trophies_;
}

// optional string profile_name = 3;
inline bool CMsgClientToGCGetTrophyListResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::set_has_profile_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_has_profile_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_profile_name() {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_->clear();
  }
  clear_has_profile_name();
}
inline const ::std::string& CMsgClientToGCGetTrophyListResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.profile_name)
  return *profile_name_;
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const ::std::string& value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value, size_t size) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::mutable_profile_name() {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetTrophyListResponse.profile_name)
  return profile_name_;
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::release_profile_name() {
  clear_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profile_name_;
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetTrophyListResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profile_name_;
  }
  if (profile_name) {
    set_has_profile_name();
    profile_name_ = profile_name;
  } else {
    clear_has_profile_name();
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetTrophyListResponse.profile_name)
}

// -------------------------------------------------------------------

// CMsgGCToClientTrophyAwarded

// optional uint32 trophy_id = 1;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_id() {
  trophy_id_ = 0u;
  clear_has_trophy_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.trophy_id)
  return trophy_id_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_id(::google::protobuf::uint32 value) {
  set_has_trophy_id();
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_score() {
  trophy_score_ = 0u;
  clear_has_trophy_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.trophy_score)
  return trophy_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_score(::google::protobuf::uint32 value) {
  set_has_trophy_score();
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.trophy_score)
}

// optional uint32 trophy_old_score = 3;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_old_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_old_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_old_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_old_score() {
  trophy_old_score_ = 0u;
  clear_has_trophy_old_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_old_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.trophy_old_score)
  return trophy_old_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_old_score(::google::protobuf::uint32 value) {
  set_has_trophy_old_score();
  trophy_old_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.trophy_old_score)
}

// optional uint32 last_updated = 4;
inline bool CMsgGCToClientTrophyAwarded::has_last_updated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_last_updated() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_last_updated() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientTrophyAwarded::clear_last_updated() {
  last_updated_ = 0u;
  clear_has_last_updated();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::last_updated() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.last_updated)
  return last_updated_;
}
inline void CMsgGCToClientTrophyAwarded::set_last_updated(::google::protobuf::uint32 value) {
  set_has_last_updated();
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCard

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetProfileCard::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetProfileCard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetProfileCard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetProfileCard::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetProfileCard.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetProfileCard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetProfileCard.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots_CardSlot

// optional uint32 slot_id = 1;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
  return slot_id_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
}

// optional .EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_type() {
  slot_type_ = 0;
  clear_has_slot_type();
}
inline ::EProfileCardSlotType CMsgClientToGCSetProfileCardSlots_CardSlot::slot_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
  return static_cast< ::EProfileCardSlotType >(slot_type_);
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_type(::EProfileCardSlotType value) {
  assert(::EProfileCardSlotType_IsValid(value));
  set_has_slot_type();
  slot_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
}

// optional uint64 slot_value = 3;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_value() {
  slot_value_ = GOOGLE_ULONGLONG(0);
  clear_has_slot_value();
}
inline ::google::protobuf::uint64 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
  return slot_value_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_value(::google::protobuf::uint64 value) {
  set_has_slot_value();
  slot_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots

// repeated .CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
inline int CMsgClientToGCSetProfileCardSlots::slots_size() const {
  return slots_.size();
}
inline void CMsgClientToGCSetProfileCardSlots::clear_slots() {
  slots_.Clear();
}
inline const ::CMsgClientToGCSetProfileCardSlots_CardSlot& CMsgClientToGCSetProfileCardSlots::slots(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Get(index);
}
inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Mutable(index);
}
inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::add_slots() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >&
CMsgClientToGCSetProfileCardSlots::slots() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >*
CMsgClientToGCSetProfileCardSlots::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetProfileCardSlots.slots)
  return &slots_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCardStats

// -------------------------------------------------------------------

// CMsgClientToGCCreateHeroStatue

// optional uint64 source_item = 1;
inline bool CMsgClientToGCCreateHeroStatue::has_source_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_source_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_source_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_source_item() {
  source_item_ = GOOGLE_ULONGLONG(0);
  clear_has_source_item();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::source_item() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.source_item)
  return source_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_source_item(::google::protobuf::uint64 value) {
  set_has_source_item();
  source_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.source_item)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCCreateHeroStatue::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCCreateHeroStatue::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.hero_id)
}

// optional string sequence_name = 4;
inline bool CMsgClientToGCCreateHeroStatue::has_sequence_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_sequence_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_sequence_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_sequence_name() {
  if (sequence_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_->clear();
  }
  clear_has_sequence_name();
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::sequence_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.sequence_name)
  return *sequence_name_;
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const ::std::string& value) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value, size_t size) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_sequence_name() {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateHeroStatue.sequence_name)
  return sequence_name_;
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_sequence_name() {
  clear_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sequence_name_;
    sequence_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_sequence_name(::std::string* sequence_name) {
  if (sequence_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequence_name_;
  }
  if (sequence_name) {
    set_has_sequence_name();
    sequence_name_ = sequence_name;
  } else {
    clear_has_sequence_name();
    sequence_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCCreateHeroStatue.sequence_name)
}

// optional float cycle = 5;
inline bool CMsgClientToGCCreateHeroStatue::has_cycle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_cycle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
inline float CMsgClientToGCCreateHeroStatue::cycle() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.cycle)
  return cycle_;
}
inline void CMsgClientToGCCreateHeroStatue::set_cycle(float value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.cycle)
}

// repeated uint32 wearables = 6;
inline int CMsgClientToGCCreateHeroStatue::wearables_size() const {
  return wearables_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_wearables() {
  wearables_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::wearables(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_wearables(int index, ::google::protobuf::uint32 value) {
  wearables_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.wearables)
}
inline void CMsgClientToGCCreateHeroStatue::add_wearables(::google::protobuf::uint32 value) {
  wearables_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateHeroStatue.wearables)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::wearables() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_wearables() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateHeroStatue.wearables)
  return &wearables_;
}

// optional string inscription = 7;
inline bool CMsgClientToGCCreateHeroStatue::has_inscription() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_inscription() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_inscription() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_inscription() {
  if (inscription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_->clear();
  }
  clear_has_inscription();
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::inscription() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.inscription)
  return *inscription_;
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const ::std::string& value) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.inscription)
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCCreateHeroStatue.inscription)
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value, size_t size) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCCreateHeroStatue.inscription)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_inscription() {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateHeroStatue.inscription)
  return inscription_;
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_inscription() {
  clear_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inscription_;
    inscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_inscription(::std::string* inscription) {
  if (inscription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inscription_;
  }
  if (inscription) {
    set_has_inscription();
    inscription_ = inscription;
  } else {
    clear_has_inscription();
    inscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCCreateHeroStatue.inscription)
}

// repeated uint32 styles = 8;
inline int CMsgClientToGCCreateHeroStatue::styles_size() const {
  return styles_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_styles() {
  styles_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::styles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.styles)
  return styles_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_styles(int index, ::google::protobuf::uint32 value) {
  styles_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.styles)
}
inline void CMsgClientToGCCreateHeroStatue::add_styles(::google::protobuf::uint32 value) {
  styles_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateHeroStatue.styles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::styles() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateHeroStatue.styles)
  return styles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_styles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateHeroStatue.styles)
  return &styles_;
}

// optional uint64 reforger_item = 9;
inline bool CMsgClientToGCCreateHeroStatue::has_reforger_item() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_reforger_item() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_reforger_item() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_reforger_item() {
  reforger_item_ = GOOGLE_ULONGLONG(0);
  clear_has_reforger_item();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::reforger_item() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.reforger_item)
  return reforger_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_reforger_item(::google::protobuf::uint64 value) {
  set_has_reforger_item();
  reforger_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.reforger_item)
}

// optional bool tournament_drop = 10;
inline bool CMsgClientToGCCreateHeroStatue::has_tournament_drop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_tournament_drop() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_tournament_drop() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_tournament_drop() {
  tournament_drop_ = false;
  clear_has_tournament_drop();
}
inline bool CMsgClientToGCCreateHeroStatue::tournament_drop() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.tournament_drop)
  return tournament_drop_;
}
inline void CMsgClientToGCCreateHeroStatue::set_tournament_drop(bool value) {
  set_has_tournament_drop();
  tournament_drop_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.tournament_drop)
}

// -------------------------------------------------------------------

// CMsgGCToClientHeroStatueCreateResult

// optional uint64 resulting_item = 1;
inline bool CMsgGCToClientHeroStatueCreateResult::has_resulting_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientHeroStatueCreateResult::set_has_resulting_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientHeroStatueCreateResult::clear_has_resulting_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientHeroStatueCreateResult::clear_resulting_item() {
  resulting_item_ = GOOGLE_ULONGLONG(0);
  clear_has_resulting_item();
}
inline ::google::protobuf::uint64 CMsgGCToClientHeroStatueCreateResult::resulting_item() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroStatueCreateResult.resulting_item)
  return resulting_item_;
}
inline void CMsgGCToClientHeroStatueCreateResult::set_resulting_item(::google::protobuf::uint64 value) {
  set_has_resulting_item();
  resulting_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientHeroStatueCreateResult.resulting_item)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecordCompendiumStats

// optional uint32 league_id = 1;
inline bool CMsgClientToGCRecordCompendiumStats::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.league_id)
  return league_id_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.league_id)
}

// optional uint32 view_duration_s = 2;
inline bool CMsgClientToGCRecordCompendiumStats::has_view_duration_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_view_duration_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_view_duration_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_view_duration_s() {
  view_duration_s_ = 0u;
  clear_has_view_duration_s();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::view_duration_s() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.view_duration_s)
  return view_duration_s_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_view_duration_s(::google::protobuf::uint32 value) {
  set_has_view_duration_s();
  view_duration_s_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.view_duration_s)
}

// optional uint32 videos_viewed = 3;
inline bool CMsgClientToGCRecordCompendiumStats::has_videos_viewed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_videos_viewed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_videos_viewed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_videos_viewed() {
  videos_viewed_ = 0u;
  clear_has_videos_viewed();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::videos_viewed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.videos_viewed)
  return videos_viewed_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_videos_viewed(::google::protobuf::uint32 value) {
  set_has_videos_viewed();
  videos_viewed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.videos_viewed)
}

// optional uint32 page_turns = 4;
inline bool CMsgClientToGCRecordCompendiumStats::has_page_turns() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_page_turns() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_page_turns() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_page_turns() {
  page_turns_ = 0u;
  clear_has_page_turns();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::page_turns() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.page_turns)
  return page_turns_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_page_turns(::google::protobuf::uint32 value) {
  set_has_page_turns();
  page_turns_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.page_turns)
}

// optional uint32 links_followed = 5;
inline bool CMsgClientToGCRecordCompendiumStats::has_links_followed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_links_followed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_links_followed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_links_followed() {
  links_followed_ = 0u;
  clear_has_links_followed();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::links_followed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.links_followed)
  return links_followed_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_links_followed(::google::protobuf::uint32 value) {
  set_has_links_followed();
  links_followed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.links_followed)
}

// -------------------------------------------------------------------

// CMsgGCToClientEventStatusChanged

// repeated .EEvent active_events = 1;
inline int CMsgGCToClientEventStatusChanged::active_events_size() const {
  return active_events_.size();
}
inline void CMsgGCToClientEventStatusChanged::clear_active_events() {
  active_events_.Clear();
}
inline ::EEvent CMsgGCToClientEventStatusChanged::active_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientEventStatusChanged.active_events)
  return static_cast< ::EEvent >(active_events_.Get(index));
}
inline void CMsgGCToClientEventStatusChanged::set_active_events(int index, ::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientEventStatusChanged.active_events)
}
inline void CMsgGCToClientEventStatusChanged::add_active_events(::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientEventStatusChanged.active_events)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgGCToClientEventStatusChanged::active_events() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientEventStatusChanged.active_events)
  return active_events_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgGCToClientEventStatusChanged::mutable_active_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientEventStatusChanged.active_events)
  return &active_events_;
}

// -------------------------------------------------------------------

// CMsgClientToGCPlayerStatsRequest

// optional uint32 account_id = 1;
inline bool CMsgClientToGCPlayerStatsRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPlayerStatsRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCPlayerStatsRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCPlayerStatsRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCPlayerStatsRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPlayerStatsRequest.account_id)
  return account_id_;
}
inline void CMsgClientToGCPlayerStatsRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCPlayerStatsRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientPlayerStatsResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientPlayerStatsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.account_id)
}

// repeated float player_stats = 2;
inline int CMsgGCToClientPlayerStatsResponse::player_stats_size() const {
  return player_stats_.size();
}
inline void CMsgGCToClientPlayerStatsResponse::clear_player_stats() {
  player_stats_.Clear();
}
inline float CMsgGCToClientPlayerStatsResponse::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_.Get(index);
}
inline void CMsgGCToClientPlayerStatsResponse::set_player_stats(int index, float value) {
  player_stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline void CMsgGCToClientPlayerStatsResponse::add_player_stats(float value) {
  player_stats_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGCToClientPlayerStatsResponse::player_stats() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGCToClientPlayerStatsResponse::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientPlayerStatsResponse.player_stats)
  return &player_stats_;
}

// optional uint32 match_count = 3;
inline bool CMsgGCToClientPlayerStatsResponse::has_match_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_match_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_match_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_match_count() {
  match_count_ = 0u;
  clear_has_match_count();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::match_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.match_count)
  return match_count_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_match_count(::google::protobuf::uint32 value) {
  set_has_match_count();
  match_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.match_count)
}

// optional float mean_gpm = 4;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_gpm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_gpm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_gpm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_gpm() {
  mean_gpm_ = 0;
  clear_has_mean_gpm();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_gpm() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.mean_gpm)
  return mean_gpm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_gpm(float value) {
  set_has_mean_gpm();
  mean_gpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.mean_gpm)
}

// optional float mean_xppm = 5;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_xppm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_xppm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_xppm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_xppm() {
  mean_xppm_ = 0;
  clear_has_mean_xppm();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_xppm() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.mean_xppm)
  return mean_xppm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_xppm(float value) {
  set_has_mean_xppm();
  mean_xppm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.mean_xppm)
}

// optional float mean_lasthits = 6;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_lasthits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_lasthits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_lasthits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_lasthits() {
  mean_lasthits_ = 0;
  clear_has_mean_lasthits();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_lasthits() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.mean_lasthits)
  return mean_lasthits_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_lasthits(float value) {
  set_has_mean_lasthits();
  mean_lasthits_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.mean_lasthits)
}

// optional uint32 rampages = 7;
inline bool CMsgGCToClientPlayerStatsResponse::has_rampages() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_rampages() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_rampages() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_rampages() {
  rampages_ = 0u;
  clear_has_rampages();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::rampages() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.rampages)
  return rampages_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_rampages(::google::protobuf::uint32 value) {
  set_has_rampages();
  rampages_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.rampages)
}

// optional uint32 triple_kills = 8;
inline bool CMsgGCToClientPlayerStatsResponse::has_triple_kills() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_triple_kills() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_triple_kills() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_triple_kills() {
  triple_kills_ = 0u;
  clear_has_triple_kills();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::triple_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.triple_kills)
  return triple_kills_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_triple_kills(::google::protobuf::uint32 value) {
  set_has_triple_kills();
  triple_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.triple_kills)
}

// optional uint32 first_blood_claimed = 9;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_claimed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_first_blood_claimed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_first_blood_claimed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_claimed() {
  first_blood_claimed_ = 0u;
  clear_has_first_blood_claimed();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_claimed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
  return first_blood_claimed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_claimed(::google::protobuf::uint32 value) {
  set_has_first_blood_claimed();
  first_blood_claimed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
}

// optional uint32 first_blood_given = 10;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_given() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_first_blood_given() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_first_blood_given() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_given() {
  first_blood_given_ = 0u;
  clear_has_first_blood_given();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_given() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.first_blood_given)
  return first_blood_given_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_given(::google::protobuf::uint32 value) {
  set_has_first_blood_given();
  first_blood_given_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.first_blood_given)
}

// optional uint32 couriers_killed = 11;
inline bool CMsgGCToClientPlayerStatsResponse::has_couriers_killed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_couriers_killed() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_couriers_killed() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_couriers_killed() {
  couriers_killed_ = 0u;
  clear_has_couriers_killed();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::couriers_killed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.couriers_killed)
  return couriers_killed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_couriers_killed(::google::protobuf::uint32 value) {
  set_has_couriers_killed();
  couriers_killed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.couriers_killed)
}

// optional uint32 aegises_snatched = 12;
inline bool CMsgGCToClientPlayerStatsResponse::has_aegises_snatched() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_aegises_snatched() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_aegises_snatched() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_aegises_snatched() {
  aegises_snatched_ = 0u;
  clear_has_aegises_snatched();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::aegises_snatched() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.aegises_snatched)
  return aegises_snatched_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_aegises_snatched(::google::protobuf::uint32 value) {
  set_has_aegises_snatched();
  aegises_snatched_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.aegises_snatched)
}

// optional uint32 cheeses_eaten = 13;
inline bool CMsgGCToClientPlayerStatsResponse::has_cheeses_eaten() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_cheeses_eaten() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_cheeses_eaten() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_cheeses_eaten() {
  cheeses_eaten_ = 0u;
  clear_has_cheeses_eaten();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::cheeses_eaten() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
  return cheeses_eaten_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_cheeses_eaten(::google::protobuf::uint32 value) {
  set_has_cheeses_eaten();
  cheeses_eaten_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
}

// optional uint32 creeps_stacked = 14;
inline bool CMsgGCToClientPlayerStatsResponse::has_creeps_stacked() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_creeps_stacked() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_creeps_stacked() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_creeps_stacked() {
  creeps_stacked_ = 0u;
  clear_has_creeps_stacked();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::creeps_stacked() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.creeps_stacked)
  return creeps_stacked_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_creeps_stacked(::google::protobuf::uint32 value) {
  set_has_creeps_stacked();
  creeps_stacked_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.creeps_stacked)
}

// optional float fight_score = 15;
inline bool CMsgGCToClientPlayerStatsResponse::has_fight_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_fight_score() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_fight_score() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_fight_score() {
  fight_score_ = 0;
  clear_has_fight_score();
}
inline float CMsgGCToClientPlayerStatsResponse::fight_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.fight_score)
  return fight_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_fight_score(float value) {
  set_has_fight_score();
  fight_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.fight_score)
}

// optional float farm_score = 16;
inline bool CMsgGCToClientPlayerStatsResponse::has_farm_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_farm_score() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_farm_score() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_farm_score() {
  farm_score_ = 0;
  clear_has_farm_score();
}
inline float CMsgGCToClientPlayerStatsResponse::farm_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.farm_score)
  return farm_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_farm_score(float value) {
  set_has_farm_score();
  farm_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.farm_score)
}

// optional float support_score = 17;
inline bool CMsgGCToClientPlayerStatsResponse::has_support_score() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_support_score() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_support_score() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_support_score() {
  support_score_ = 0;
  clear_has_support_score();
}
inline float CMsgGCToClientPlayerStatsResponse::support_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.support_score)
  return support_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_support_score(float value) {
  set_has_support_score();
  support_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.support_score)
}

// optional float push_score = 18;
inline bool CMsgGCToClientPlayerStatsResponse::has_push_score() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_push_score() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_push_score() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_push_score() {
  push_score_ = 0;
  clear_has_push_score();
}
inline float CMsgGCToClientPlayerStatsResponse::push_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.push_score)
  return push_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_push_score(float value) {
  set_has_push_score();
  push_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.push_score)
}

// optional float versatility_score = 19;
inline bool CMsgGCToClientPlayerStatsResponse::has_versatility_score() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_versatility_score() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_versatility_score() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_versatility_score() {
  versatility_score_ = 0;
  clear_has_versatility_score();
}
inline float CMsgGCToClientPlayerStatsResponse::versatility_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.versatility_score)
  return versatility_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_versatility_score(float value) {
  set_has_versatility_score();
  versatility_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.versatility_score)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamePlayerCountRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCCustomGamePlayerCountRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCCustomGamePlayerCountRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamePlayerCountResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
}

// optional uint64 player_count = 2;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_player_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_player_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_player_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_player_count() {
  player_count_ = GOOGLE_ULONGLONG(0);
  clear_has_player_count();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::player_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamePlayerCountResponse.player_count)
  return player_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_player_count(::google::protobuf::uint64 value) {
  set_has_player_count();
  player_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamePlayerCountResponse.player_count)
}

// optional uint64 spectator_count = 3;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_spectator_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_spectator_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_spectator_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_spectator_count() {
  spectator_count_ = GOOGLE_ULONGLONG(0);
  clear_has_spectator_count();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::spectator_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
  return spectator_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_spectator_count(::google::protobuf::uint64 value) {
  set_has_spectator_count();
  spectator_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamesFriendsPlayedRequest

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
}

// repeated .CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse::games_size() const {
  return games_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_games() {
  games_.Clear();
}
inline const ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& CMsgGCToClientCustomGamesFriendsPlayedResponse::games(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Get(index);
}
inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Mutable(index);
}
inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::add_games() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
CMsgGCToClientCustomGamesFriendsPlayedResponse::games() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return &games_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostCommentRequest

// optional uint64 event_id = 1;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_event_id() {
  event_id_ = GOOGLE_ULONGLONG(0);
  clear_has_event_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostCommentRequest::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostCommentRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_event_id(::google::protobuf::uint64 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostCommentRequest.event_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgClientToGCSocialFeedPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return *comment_;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return comment_;
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialFeedPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialFeedPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialFeedPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostMessageRequest

// optional string message = 1;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgClientToGCSocialFeedPostMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostMessageRequest.message)
  return *message_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSocialFeedPostMessageRequest.message)
  return message_;
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSocialFeedPostMessageRequest.message)
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostMessageRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostMessageRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostMessageRequest.match_id)
}

// optional uint32 match_timestamp = 3;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_match_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_match_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_timestamp() {
  match_timestamp_ = 0u;
  clear_has_match_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialFeedPostMessageRequest::match_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
  return match_timestamp_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_timestamp(::google::protobuf::uint32 value) {
  set_has_match_timestamp();
  match_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostMessageResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostMessageResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialFeedPostMessageResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialFeedPostMessageResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialFeedPostMessageResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCFriendsPlayedCustomGameRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCFriendsPlayedCustomGameRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCFriendsPlayedCustomGameRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientFriendsPlayedCustomGameResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientFriendsPlayedCustomGameResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientFriendsPlayedCustomGameResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientFriendsPlayedCustomGameResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCFeaturedHeroesRequest

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_DataField

// optional .EFeaturedHeroDataType data_type = 1 [default = k_EFeaturedHeroDataType_HeroID];
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_data_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
inline ::EFeaturedHeroDataType CMsgGCToClientFeaturedHeroesResponse_DataField::data_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.data_type)
  return static_cast< ::EFeaturedHeroDataType >(data_type_);
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_data_type(::EFeaturedHeroDataType value) {
  assert(::EFeaturedHeroDataType_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.data_type)
}

// optional uint32 uint32_value = 2;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_uint32_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_uint32_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_uint32_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_uint32_value() {
  uint32_value_ = 0u;
  clear_has_uint32_value();
}
inline ::google::protobuf::uint32 CMsgGCToClientFeaturedHeroesResponse_DataField::uint32_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.uint32_value)
  return uint32_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_uint32_value(::google::protobuf::uint32 value) {
  set_has_uint32_value();
  uint32_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.uint32_value)
}

// optional uint64 uint64_value = 3;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_uint64_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_uint64_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_uint64_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_uint64_value() {
  uint64_value_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64_value();
}
inline ::google::protobuf::uint64 CMsgGCToClientFeaturedHeroesResponse_DataField::uint64_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.uint64_value)
  return uint64_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_uint64_value(::google::protobuf::uint64 value) {
  set_has_uint64_value();
  uint64_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.uint64_value)
}

// optional string string_value = 4;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_string_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_string_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_string_value() {
  if (string_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_->clear();
  }
  clear_has_string_value();
}
inline const ::std::string& CMsgGCToClientFeaturedHeroesResponse_DataField::string_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
  return *string_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const ::std::string& value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const char* value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline ::std::string* CMsgGCToClientFeaturedHeroesResponse_DataField::mutable_string_value() {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
  return string_value_;
}
inline ::std::string* CMsgGCToClientFeaturedHeroesResponse_DataField::release_string_value() {
  clear_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = string_value_;
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_allocated_string_value(::std::string* string_value) {
  if (string_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_value_;
  }
  if (string_value) {
    set_has_string_value();
    string_value_ = string_value;
  } else {
    clear_has_string_value();
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}

// optional float float_value = 5;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_float_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_float_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_float_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_float_value() {
  float_value_ = 0;
  clear_has_float_value();
}
inline float CMsgGCToClientFeaturedHeroesResponse_DataField::float_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.float_value)
  return float_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_float_value(float value) {
  set_has_float_value();
  float_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.float_value)
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_FeaturedHero

// repeated .CMsgGCToClientFeaturedHeroesResponse.DataField data_fields = 1;
inline int CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields_size() const {
  return data_fields_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::clear_data_fields() {
  data_fields_.Clear();
}
inline const ::CMsgGCToClientFeaturedHeroesResponse_DataField& CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Get(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::mutable_data_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Mutable(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::add_data_fields() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >&
CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >*
CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::mutable_data_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return &data_fields_;
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_Category

// optional int32 category_weight = 1;
inline bool CMsgGCToClientFeaturedHeroesResponse_Category::has_category_weight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_has_category_weight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_has_category_weight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_category_weight() {
  category_weight_ = 0;
  clear_has_category_weight();
}
inline ::google::protobuf::int32 CMsgGCToClientFeaturedHeroesResponse_Category::category_weight() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.Category.category_weight)
  return category_weight_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_category_weight(::google::protobuf::int32 value) {
  set_has_category_weight();
  category_weight_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.Category.category_weight)
}

// repeated .EFeaturedHeroTextField text_fields = 2;
inline int CMsgGCToClientFeaturedHeroesResponse_Category::text_fields_size() const {
  return text_fields_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_text_fields() {
  text_fields_.Clear();
}
inline ::EFeaturedHeroTextField CMsgGCToClientFeaturedHeroesResponse_Category::text_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return static_cast< ::EFeaturedHeroTextField >(text_fields_.Get(index));
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_text_fields(int index, ::EFeaturedHeroTextField value) {
  assert(::EFeaturedHeroTextField_IsValid(value));
  text_fields_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::add_text_fields(::EFeaturedHeroTextField value) {
  assert(::EFeaturedHeroTextField_IsValid(value));
  text_fields_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgGCToClientFeaturedHeroesResponse_Category::text_fields() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return text_fields_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgGCToClientFeaturedHeroesResponse_Category::mutable_text_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return &text_fields_;
}

// repeated .CMsgGCToClientFeaturedHeroesResponse.FeaturedHero featured_heroes = 3;
inline int CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes_size() const {
  return featured_heroes_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_featured_heroes() {
  featured_heroes_.Clear();
}
inline const ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Get(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* CMsgGCToClientFeaturedHeroesResponse_Category::mutable_featured_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Mutable(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* CMsgGCToClientFeaturedHeroesResponse_Category::add_featured_heroes() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >&
CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >*
CMsgGCToClientFeaturedHeroesResponse_Category::mutable_featured_heroes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return &featured_heroes_;
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse

// repeated .CMsgGCToClientFeaturedHeroesResponse.Category categories = 1;
inline int CMsgGCToClientFeaturedHeroesResponse::categories_size() const {
  return categories_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse::clear_categories() {
  categories_.Clear();
}
inline const ::CMsgGCToClientFeaturedHeroesResponse_Category& CMsgGCToClientFeaturedHeroesResponse::categories(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Get(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_Category* CMsgGCToClientFeaturedHeroesResponse::mutable_categories(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Mutable(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_Category* CMsgGCToClientFeaturedHeroesResponse::add_categories() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >&
CMsgGCToClientFeaturedHeroesResponse::categories() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >*
CMsgGCToClientFeaturedHeroesResponse::mutable_categories() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.categories)
  return &categories_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchPostCommentRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchPostCommentRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchPostCommentRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchPostCommentRequest.match_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgClientToGCSocialMatchPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return *comment_;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return comment_;
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialMatchPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchDetailsRequest.match_id)
}

// optional uint32 pagination_timestamp = 2;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_pagination_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_has_pagination_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_has_pagination_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_pagination_timestamp() {
  pagination_timestamp_ = 0u;
  clear_has_pagination_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialMatchDetailsRequest::pagination_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
  return pagination_timestamp_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_pagination_timestamp(::google::protobuf::uint32 value) {
  set_has_pagination_timestamp();
  pagination_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse_Comment

// optional uint32 account_id = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
  return account_id_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
}

// optional string persona_name = 2;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return *persona_name_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
  return timestamp_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
}

// optional string comment = 4;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_comment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_comment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_comment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::comment() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return *comment_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return comment_;
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialMatchDetailsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.success)
}

// repeated .CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
inline int CMsgGCToClientSocialMatchDetailsResponse::comments_size() const {
  return comments_.size();
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_comments() {
  comments_.Clear();
}
inline const ::CMsgGCToClientSocialMatchDetailsResponse_Comment& CMsgGCToClientSocialMatchDetailsResponse::comments(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Get(index);
}
inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Mutable(index);
}
inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::add_comments() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
CMsgGCToClientSocialMatchDetailsResponse::comments() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
CMsgGCToClientSocialMatchDetailsResponse::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return &comments_;
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence_Member

// optional fixed64 steam_id = 1;
inline bool CMsgDOTAPartyRichPresence_Member::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence_Member::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.Member.steam_id)
  return steam_id_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.Member.steam_id)
}

// optional bool coach = 2;
inline bool CMsgDOTAPartyRichPresence_Member::has_coach() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::set_has_coach() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_has_coach() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_coach() {
  coach_ = false;
  clear_has_coach();
}
inline bool CMsgDOTAPartyRichPresence_Member::coach() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.Member.coach)
  return coach_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_coach(bool value) {
  set_has_coach();
  coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.Member.coach)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence_WeekendTourney

// optional uint32 division = 1;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_division() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_division() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_division() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_division() {
  division_ = 0u;
  clear_has_division();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::division() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.WeekendTourney.division)
  return division_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_division(::google::protobuf::uint32 value) {
  set_has_division();
  division_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.WeekendTourney.division)
}

// optional uint32 skill_level = 2;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::skill_level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.WeekendTourney.skill_level)
  return skill_level_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.WeekendTourney.skill_level)
}

// optional uint32 round = 3;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_round() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_round() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_round() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_round() {
  round_ = 0u;
  clear_has_round();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::round() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.WeekendTourney.round)
  return round_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_round(::google::protobuf::uint32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.WeekendTourney.round)
}

// optional uint32 tournament_id = 4;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_tournament_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_tournament_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_tournament_id() {
  tournament_id_ = 0u;
  clear_has_tournament_id();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::tournament_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.WeekendTourney.tournament_id)
  return tournament_id_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_tournament_id(::google::protobuf::uint32 value) {
  set_has_tournament_id();
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.WeekendTourney.tournament_id)
}

// optional uint32 state_seq_num = 5;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_state_seq_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_state_seq_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_state_seq_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_state_seq_num() {
  state_seq_num_ = 0u;
  clear_has_state_seq_num();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::state_seq_num() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.WeekendTourney.state_seq_num)
  return state_seq_num_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_state_seq_num(::google::protobuf::uint32 value) {
  set_has_state_seq_num();
  state_seq_num_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.WeekendTourney.state_seq_num)
}

// optional .EWeekendTourneyRichPresenceEvent event = 6 [default = k_EWeekendTourneyRichPresenceEvent_None];
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_event() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_event() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_event() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::EWeekendTourneyRichPresenceEvent CMsgDOTAPartyRichPresence_WeekendTourney::event() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.WeekendTourney.event)
  return static_cast< ::EWeekendTourneyRichPresenceEvent >(event_);
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_event(::EWeekendTourneyRichPresenceEvent value) {
  assert(::EWeekendTourneyRichPresenceEvent_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.WeekendTourney.event)
}

// optional uint32 event_round = 7;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_event_round() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_event_round() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_event_round() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_event_round() {
  event_round_ = 0u;
  clear_has_event_round();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::event_round() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.WeekendTourney.event_round)
  return event_round_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_event_round(::google::protobuf::uint32 value) {
  set_has_event_round();
  event_round_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.WeekendTourney.event_round)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence

// optional fixed64 party_id = 1;
inline bool CMsgDOTAPartyRichPresence::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.party_id)
  return party_id_;
}
inline void CMsgDOTAPartyRichPresence::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.party_id)
}

// optional .CSODOTAParty.State party_state = 2 [default = UI];
inline bool CMsgDOTAPartyRichPresence::has_party_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_party_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_party_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence::clear_party_state() {
  party_state_ = 0;
  clear_has_party_state();
}
inline ::CSODOTAParty_State CMsgDOTAPartyRichPresence::party_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.party_state)
  return static_cast< ::CSODOTAParty_State >(party_state_);
}
inline void CMsgDOTAPartyRichPresence::set_party_state(::CSODOTAParty_State value) {
  assert(::CSODOTAParty_State_IsValid(value));
  set_has_party_state();
  party_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.party_state)
}

// optional bool open = 3;
inline bool CMsgDOTAPartyRichPresence::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPartyRichPresence::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CMsgDOTAPartyRichPresence::open() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.open)
  return open_;
}
inline void CMsgDOTAPartyRichPresence::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.open)
}

// optional bool low_priority = 5;
inline bool CMsgDOTAPartyRichPresence::has_low_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_low_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPartyRichPresence::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CMsgDOTAPartyRichPresence::low_priority() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.low_priority)
  return low_priority_;
}
inline void CMsgDOTAPartyRichPresence::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.low_priority)
}

// optional uint32 team_id = 7;
inline bool CMsgDOTAPartyRichPresence::has_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_team_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAPartyRichPresence::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.team_id)
  return team_id_;
}
inline void CMsgDOTAPartyRichPresence::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.team_id)
}

// optional string team_name = 8;
inline bool CMsgDOTAPartyRichPresence::has_team_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_team_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAPartyRichPresence::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAPartyRichPresence::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.team_name)
  return *team_name_;
}
inline void CMsgDOTAPartyRichPresence::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.team_name)
}
inline void CMsgDOTAPartyRichPresence::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPartyRichPresence.team_name)
}
inline void CMsgDOTAPartyRichPresence::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPartyRichPresence.team_name)
}
inline ::std::string* CMsgDOTAPartyRichPresence::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPartyRichPresence.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTAPartyRichPresence::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPartyRichPresence::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPartyRichPresence.team_name)
}

// optional uint64 ugc_team_ui_logo = 9;
inline bool CMsgDOTAPartyRichPresence::has_ugc_team_ui_logo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_ugc_team_ui_logo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_ugc_team_ui_logo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAPartyRichPresence::clear_ugc_team_ui_logo() {
  ugc_team_ui_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_team_ui_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence::ugc_team_ui_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.ugc_team_ui_logo)
  return ugc_team_ui_logo_;
}
inline void CMsgDOTAPartyRichPresence::set_ugc_team_ui_logo(::google::protobuf::uint64 value) {
  set_has_ugc_team_ui_logo();
  ugc_team_ui_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.ugc_team_ui_logo)
}

// repeated .CMsgDOTAPartyRichPresence.Member members = 4;
inline int CMsgDOTAPartyRichPresence::members_size() const {
  return members_.size();
}
inline void CMsgDOTAPartyRichPresence::clear_members() {
  members_.Clear();
}
inline const ::CMsgDOTAPartyRichPresence_Member& CMsgDOTAPartyRichPresence::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.members)
  return members_.Get(index);
}
inline ::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPartyRichPresence.members)
  return members_.Mutable(index);
}
inline ::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::add_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTAPartyRichPresence.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >&
CMsgDOTAPartyRichPresence::members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPartyRichPresence.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >*
CMsgDOTAPartyRichPresence::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPartyRichPresence.members)
  return &members_;
}

// optional .CMsgDOTAPartyRichPresence.WeekendTourney weekend_tourney = 6;
inline bool CMsgDOTAPartyRichPresence::has_weekend_tourney() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_weekend_tourney() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_weekend_tourney() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAPartyRichPresence::clear_weekend_tourney() {
  if (weekend_tourney_ != NULL) weekend_tourney_->::CMsgDOTAPartyRichPresence_WeekendTourney::Clear();
  clear_has_weekend_tourney();
}
inline const ::CMsgDOTAPartyRichPresence_WeekendTourney& CMsgDOTAPartyRichPresence::weekend_tourney() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.weekend_tourney)
  return weekend_tourney_ != NULL ? *weekend_tourney_ : *default_instance_->weekend_tourney_;
}
inline ::CMsgDOTAPartyRichPresence_WeekendTourney* CMsgDOTAPartyRichPresence::mutable_weekend_tourney() {
  set_has_weekend_tourney();
  if (weekend_tourney_ == NULL) weekend_tourney_ = new ::CMsgDOTAPartyRichPresence_WeekendTourney;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPartyRichPresence.weekend_tourney)
  return weekend_tourney_;
}
inline ::CMsgDOTAPartyRichPresence_WeekendTourney* CMsgDOTAPartyRichPresence::release_weekend_tourney() {
  clear_has_weekend_tourney();
  ::CMsgDOTAPartyRichPresence_WeekendTourney* temp = weekend_tourney_;
  weekend_tourney_ = NULL;
  return temp;
}
inline void CMsgDOTAPartyRichPresence::set_allocated_weekend_tourney(::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney) {
  delete weekend_tourney_;
  weekend_tourney_ = weekend_tourney;
  if (weekend_tourney) {
    set_has_weekend_tourney();
  } else {
    clear_has_weekend_tourney();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPartyRichPresence.weekend_tourney)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyRichPresence

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTALobbyRichPresence::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTALobbyRichPresence::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.lobby_id)
}

// optional .CSODOTALobby.State lobby_state = 2 [default = UI];
inline bool CMsgDOTALobbyRichPresence::has_lobby_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_state() {
  lobby_state_ = 0;
  clear_has_lobby_state();
}
inline ::CSODOTALobby_State CMsgDOTALobbyRichPresence::lobby_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.lobby_state)
  return static_cast< ::CSODOTALobby_State >(lobby_state_);
}
inline void CMsgDOTALobbyRichPresence::set_lobby_state(::CSODOTALobby_State value) {
  assert(::CSODOTALobby_State_IsValid(value));
  set_has_lobby_state();
  lobby_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.lobby_state)
}

// optional bool password = 3;
inline bool CMsgDOTALobbyRichPresence::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALobbyRichPresence::clear_password() {
  password_ = false;
  clear_has_password();
}
inline bool CMsgDOTALobbyRichPresence::password() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.password)
  return password_;
}
inline void CMsgDOTALobbyRichPresence::set_password(bool value) {
  set_has_password();
  password_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.password)
}

// optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgDOTALobbyRichPresence::has_game_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_game_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTALobbyRichPresence::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CMsgDOTALobbyRichPresence::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CMsgDOTALobbyRichPresence::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.game_mode)
}

// optional uint32 member_count = 5;
inline bool CMsgDOTALobbyRichPresence::has_member_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_member_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTALobbyRichPresence::clear_member_count() {
  member_count_ = 0u;
  clear_has_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::member_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.member_count)
  return member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_member_count(::google::protobuf::uint32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.member_count)
}

// optional uint32 max_member_count = 6;
inline bool CMsgDOTALobbyRichPresence::has_max_member_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_max_member_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_max_member_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTALobbyRichPresence::clear_max_member_count() {
  max_member_count_ = 0u;
  clear_has_max_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::max_member_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.max_member_count)
  return max_member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_max_member_count(::google::protobuf::uint32 value) {
  set_has_max_member_count();
  max_member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.max_member_count)
}

// optional fixed64 custom_game_id = 7;
inline bool CMsgDOTALobbyRichPresence::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTALobbyRichPresence::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTALobbyRichPresence::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.custom_game_id)
}

// optional string name = 8;
inline bool CMsgDOTALobbyRichPresence::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTALobbyRichPresence::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTALobbyRichPresence::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.name)
  return *name_;
}
inline void CMsgDOTALobbyRichPresence::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.name)
}
inline void CMsgDOTALobbyRichPresence::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTALobbyRichPresence.name)
}
inline void CMsgDOTALobbyRichPresence::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTALobbyRichPresence.name)
}
inline ::std::string* CMsgDOTALobbyRichPresence::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTALobbyRichPresence.name)
  return name_;
}
inline ::std::string* CMsgDOTALobbyRichPresence::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTALobbyRichPresence::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALobbyRichPresence.name)
}

// optional uint32 lobby_type = 9;
inline bool CMsgDOTALobbyRichPresence::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::lobby_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTALobbyRichPresence::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.lobby_type)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameListenServerStartedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
}

// optional uint64 custom_game_id = 2;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
}

// repeated uint32 lobby_members = 3;
inline int CMsgDOTACustomGameListenServerStartedLoading::lobby_members_size() const {
  return lobby_members_.size();
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_members() {
  lobby_members_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::lobby_members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_.Get(index);
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_members(int index, ::google::protobuf::uint32 value) {
  lobby_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline void CMsgDOTACustomGameListenServerStartedLoading::add_lobby_members(::google::protobuf::uint32 value) {
  lobby_members_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTACustomGameListenServerStartedLoading::lobby_members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTACustomGameListenServerStartedLoading::mutable_lobby_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return &lobby_members_;
}

// optional uint32 start_time = 4;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.start_time)
  return start_time_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.start_time)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameClientFinishedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameClientFinishedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.lobby_id)
}

// optional uint32 loading_duration = 2;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_loading_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_loading_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_loading_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_loading_duration() {
  loading_duration_ = 0u;
  clear_has_loading_duration();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::loading_duration() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.loading_duration)
  return loading_duration_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_loading_duration(::google::protobuf::uint32 value) {
  set_has_loading_duration();
  loading_duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.loading_duration)
}

// optional sint32 result_code = 3;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_result_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::google::protobuf::int32 CMsgDOTACustomGameClientFinishedLoading::result_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.result_code)
  return result_code_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_code(::google::protobuf::int32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.result_code)
}

// optional string result_string = 4;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_result_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_result_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_string() {
  if (result_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_->clear();
  }
  clear_has_result_string();
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::result_string() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.result_string)
  return *result_string_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const ::std::string& value) {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  result_string_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value) {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  result_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value, size_t size) {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  result_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_result_string() {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACustomGameClientFinishedLoading.result_string)
  return result_string_;
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_result_string() {
  clear_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = result_string_;
    result_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_result_string(::std::string* result_string) {
  if (result_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete result_string_;
  }
  if (result_string) {
    set_has_result_string();
    result_string_ = result_string;
  } else {
    clear_has_result_string();
    result_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACustomGameClientFinishedLoading.result_string)
}

// optional uint32 signon_states = 5;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_signon_states() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_signon_states() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_signon_states() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_signon_states() {
  signon_states_ = 0u;
  clear_has_signon_states();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::signon_states() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.signon_states)
  return signon_states_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_signon_states(::google::protobuf::uint32 value) {
  set_has_signon_states();
  signon_states_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.signon_states)
}

// optional string comment = 6;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_comment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_comment() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_comment() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::comment() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.comment)
  return *comment_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACustomGameClientFinishedLoading.comment)
  return comment_;
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACustomGameClientFinishedLoading.comment)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeries

// optional uint32 league_id = 1;
inline bool CMsgClientToGCGetLeagueSeries::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeries::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeries::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeries::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeries::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeries.league_id)
  return league_id_;
}
inline void CMsgClientToGCGetLeagueSeries::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeries.league_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse_Series_Team

// optional uint32 team_id = 1;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_id)
  return team_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_id)
}

// optional string team_name = 2;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
  return *team_name_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
  return team_name_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}

// optional string team_tag = 3;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_tag() {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_->clear();
  }
  clear_has_team_tag();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_tag() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
  return *team_tag_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const ::std::string& value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const char* value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const char* value, size_t size) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::mutable_team_tag() {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
  return team_tag_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::release_team_tag() {
  clear_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_tag_;
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_allocated_team_tag(::std::string* team_tag) {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_tag_;
  }
  if (team_tag) {
    set_has_team_tag();
    team_tag_ = team_tag;
  } else {
    clear_has_team_tag();
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}

// optional uint32 team_score = 4;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_score() {
  team_score_ = 0u;
  clear_has_team_score();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_score() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_score)
  return team_score_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_score(::google::protobuf::uint32 value) {
  set_has_team_score();
  team_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_score)
}

// optional uint32 team_wins = 5;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_wins() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_wins() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_wins() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_wins() {
  team_wins_ = 0u;
  clear_has_team_wins();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_wins() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_wins)
  return team_wins_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_wins(::google::protobuf::uint32 value) {
  set_has_team_wins();
  team_wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_wins)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse_Series

// optional uint32 series_id = 1;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_series_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_series_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::series_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.series_id)
  return series_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.series_id)
}

// optional uint32 num_games = 2;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_num_games() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_num_games() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::num_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.num_games)
  return num_games_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.num_games)
}

// repeated .CMsgClientToGCGetLeagueSeriesResponse.Series.Team teams = 3;
inline int CMsgClientToGCGetLeagueSeriesResponse_Series::teams_size() const {
  return teams_.size();
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_teams() {
  teams_.Clear();
}
inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team& CMsgClientToGCGetLeagueSeriesResponse_Series::teams(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Get(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Mutable(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* CMsgClientToGCGetLeagueSeriesResponse_Series::add_teams() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >&
CMsgClientToGCGetLeagueSeriesResponse_Series::teams() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >*
CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return &teams_;
}

// optional string series_name = 4;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_series_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_series_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_series_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_series_name() {
  if (series_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_->clear();
  }
  clear_has_series_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series::series_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
  return *series_name_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const ::std::string& value) {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  series_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const char* value) {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  series_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const char* value, size_t size) {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  series_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_series_name() {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
  return series_name_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::release_series_name() {
  clear_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = series_name_;
    series_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_allocated_series_name(::std::string* series_name) {
  if (series_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete series_name_;
  }
  if (series_name) {
    set_has_series_name();
    series_name_ = series_name;
  } else {
    clear_has_series_name();
    series_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}

// optional string phase_name = 5;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_phase_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_phase_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_phase_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_phase_name() {
  if (phase_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_->clear();
  }
  clear_has_phase_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series::phase_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
  return *phase_name_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const ::std::string& value) {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  phase_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const char* value) {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  phase_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const char* value, size_t size) {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  phase_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_phase_name() {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
  return phase_name_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::release_phase_name() {
  clear_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phase_name_;
    phase_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_allocated_phase_name(::std::string* phase_name) {
  if (phase_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phase_name_;
  }
  if (phase_name) {
    set_has_phase_name();
    phase_name_ = phase_name;
  } else {
    clear_has_phase_name();
    phase_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}

// optional uint32 start_time = 6;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_start_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_start_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.start_time)
  return start_time_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.start_time)
}

// optional uint32 after_series_id = 7;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_after_series_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_after_series_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_after_series_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_after_series_id() {
  after_series_id_ = 0u;
  clear_has_after_series_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::after_series_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.after_series_id)
  return after_series_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_after_series_id(::google::protobuf::uint32 value) {
  set_has_after_series_id();
  after_series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.after_series_id)
}

// optional uint32 num_completed_games = 8;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_num_completed_games() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_num_completed_games() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_num_completed_games() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_num_completed_games() {
  num_completed_games_ = 0u;
  clear_has_num_completed_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::num_completed_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.num_completed_games)
  return num_completed_games_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_num_completed_games(::google::protobuf::uint32 value) {
  set_has_num_completed_games();
  num_completed_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.num_completed_games)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse

// repeated .CMsgClientToGCGetLeagueSeriesResponse.Series series = 1;
inline int CMsgClientToGCGetLeagueSeriesResponse::series_size() const {
  return series_.size();
}
inline void CMsgClientToGCGetLeagueSeriesResponse::clear_series() {
  series_.Clear();
}
inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series& CMsgClientToGCGetLeagueSeriesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Get(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* CMsgClientToGCGetLeagueSeriesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Mutable(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* CMsgClientToGCGetLeagueSeriesResponse::add_series() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >&
CMsgClientToGCGetLeagueSeriesResponse::series() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >*
CMsgClientToGCGetLeagueSeriesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetLeagueSeriesResponse.series)
  return &series_;
}

// -------------------------------------------------------------------

// CMsgClientToGCApplyGemCombiner

// optional uint64 item_id_1 = 1;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::set_has_item_id_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_has_item_id_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_1() {
  item_id_1_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id_1();
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_1() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCApplyGemCombiner.item_id_1)
  return item_id_1_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_1(::google::protobuf::uint64 value) {
  set_has_item_id_1();
  item_id_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCApplyGemCombiner.item_id_1)
}

// optional uint64 item_id_2 = 2;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::set_has_item_id_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_has_item_id_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_2() {
  item_id_2_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id_2();
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_2() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCApplyGemCombiner.item_id_2)
  return item_id_2_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_2(::google::protobuf::uint64 value) {
  set_has_item_id_2();
  item_id_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCApplyGemCombiner.item_id_2)
}

// -------------------------------------------------------------------

// CMsgClientToGCH264Unsupported

// -------------------------------------------------------------------

// CMsgClientToGCRequestH264Support

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgress

// repeated uint32 quest_ids = 1;
inline int CMsgClientToGCGetQuestProgress::quest_ids_size() const {
  return quest_ids_.size();
}
inline void CMsgClientToGCGetQuestProgress::clear_quest_ids() {
  quest_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgress::quest_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgress.quest_ids)
  return quest_ids_.Get(index);
}
inline void CMsgClientToGCGetQuestProgress::set_quest_ids(int index, ::google::protobuf::uint32 value) {
  quest_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgress.quest_ids)
}
inline void CMsgClientToGCGetQuestProgress::add_quest_ids(::google::protobuf::uint32 value) {
  quest_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetQuestProgress.quest_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCGetQuestProgress::quest_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetQuestProgress.quest_ids)
  return quest_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCGetQuestProgress::mutable_quest_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetQuestProgress.quest_ids)
  return &quest_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse_Challenge

// optional uint32 challenge_id = 1;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_challenge_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_challenge_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_challenge_id() {
  challenge_id_ = 0u;
  clear_has_challenge_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::challenge_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_id)
  return challenge_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_challenge_id(::google::protobuf::uint32 value) {
  set_has_challenge_id();
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_id)
}

// optional uint32 time_completed = 2;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_time_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_time_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_time_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_time_completed() {
  time_completed_ = 0u;
  clear_has_time_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::time_completed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Challenge.time_completed)
  return time_completed_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_time_completed(::google::protobuf::uint32 value) {
  set_has_time_completed();
  time_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.Challenge.time_completed)
}

// optional uint32 attempts = 3;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_attempts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_attempts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_attempts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_attempts() {
  attempts_ = 0u;
  clear_has_attempts();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::attempts() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Challenge.attempts)
  return attempts_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_attempts(::google::protobuf::uint32 value) {
  set_has_attempts();
  attempts_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.Challenge.attempts)
}

// optional uint32 hero_id = 4;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Challenge.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.Challenge.hero_id)
}

// optional uint32 challenge_type = 5;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_challenge_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_challenge_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_challenge_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_challenge_type() {
  challenge_type_ = 0u;
  clear_has_challenge_type();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::challenge_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_type)
  return challenge_type_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_challenge_type(::google::protobuf::uint32 value) {
  set_has_challenge_type();
  challenge_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_type)
}

// optional uint32 quest_rank = 6;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_quest_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_quest_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_quest_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_quest_rank() {
  quest_rank_ = 0u;
  clear_has_quest_rank();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::quest_rank() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Challenge.quest_rank)
  return quest_rank_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_quest_rank(::google::protobuf::uint32 value) {
  set_has_quest_rank();
  quest_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.Challenge.quest_rank)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse_Quest

// optional uint32 quest_id = 1;
inline bool CMsgClientToGCGetQuestProgressResponse_Quest::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Quest::quest_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Quest.quest_id)
  return quest_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.Quest.quest_id)
}

// repeated .CMsgClientToGCGetQuestProgressResponse.Challenge completed_challenges = 2;
inline int CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges_size() const {
  return completed_challenges_.size();
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_completed_challenges() {
  completed_challenges_.Clear();
}
inline const ::CMsgClientToGCGetQuestProgressResponse_Challenge& CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Get(index);
}
inline ::CMsgClientToGCGetQuestProgressResponse_Challenge* CMsgClientToGCGetQuestProgressResponse_Quest::mutable_completed_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Mutable(index);
}
inline ::CMsgClientToGCGetQuestProgressResponse_Challenge* CMsgClientToGCGetQuestProgressResponse_Quest::add_completed_challenges() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Challenge >&
CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Challenge >*
CMsgClientToGCGetQuestProgressResponse_Quest::mutable_completed_challenges() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return &completed_challenges_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse

// optional bool success = 1;
inline bool CMsgClientToGCGetQuestProgressResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgClientToGCGetQuestProgressResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.success)
  return success_;
}
inline void CMsgClientToGCGetQuestProgressResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetQuestProgressResponse.success)
}

// repeated .CMsgClientToGCGetQuestProgressResponse.Quest quests = 2;
inline int CMsgClientToGCGetQuestProgressResponse::quests_size() const {
  return quests_.size();
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_quests() {
  quests_.Clear();
}
inline const ::CMsgClientToGCGetQuestProgressResponse_Quest& CMsgClientToGCGetQuestProgressResponse::quests(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Get(index);
}
inline ::CMsgClientToGCGetQuestProgressResponse_Quest* CMsgClientToGCGetQuestProgressResponse::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Mutable(index);
}
inline ::CMsgClientToGCGetQuestProgressResponse_Quest* CMsgClientToGCGetQuestProgressResponse::add_quests() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Quest >&
CMsgClientToGCGetQuestProgressResponse::quests() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetQuestProgressResponse_Quest >*
CMsgClientToGCGetQuestProgressResponse::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetQuestProgressResponse.quests)
  return &quests_;
}

// -------------------------------------------------------------------

// CMsgGCToClientMatchSignedOut

// optional uint64 match_id = 1;
inline bool CMsgGCToClientMatchSignedOut::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientMatchSignedOut::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientMatchSignedOut::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientMatchSignedOut::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientMatchSignedOut::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientMatchSignedOut.match_id)
  return match_id_;
}
inline void CMsgGCToClientMatchSignedOut::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientMatchSignedOut.match_id)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStatsHistory

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStatsHistory::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStatsHistory::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetHeroStatsHistory::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetHeroStatsHistory::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStatsHistory::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStatsHistory.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStatsHistory::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStatsHistory.hero_id)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStatsHistoryResponse

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStatsHistoryResponse::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStatsHistoryResponse::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetHeroStatsHistoryResponse::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetHeroStatsHistoryResponse::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStatsHistoryResponse::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStatsHistoryResponse.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStatsHistoryResponse::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStatsHistoryResponse.hero_id)
}

// repeated .CMsgDOTASDOHeroStatsHistory records = 2;
inline int CMsgGCGetHeroStatsHistoryResponse::records_size() const {
  return records_.size();
}
inline void CMsgGCGetHeroStatsHistoryResponse::clear_records() {
  records_.Clear();
}
inline const ::CMsgDOTASDOHeroStatsHistory& CMsgGCGetHeroStatsHistoryResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Get(index);
}
inline ::CMsgDOTASDOHeroStatsHistory* CMsgGCGetHeroStatsHistoryResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Mutable(index);
}
inline ::CMsgDOTASDOHeroStatsHistory* CMsgGCGetHeroStatsHistoryResponse::add_records() {
  // @@protoc_insertion_point(field_add:CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTASDOHeroStatsHistory >&
CMsgGCGetHeroStatsHistoryResponse::records() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetHeroStatsHistoryResponse.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTASDOHeroStatsHistory >*
CMsgGCGetHeroStatsHistoryResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetHeroStatsHistoryResponse.records)
  return &records_;
}

// -------------------------------------------------------------------

// CMsgPlayerConductScorecardRequest

// -------------------------------------------------------------------

// CMsgPlayerConductScorecard

// optional uint32 account_id = 1;
inline bool CMsgPlayerConductScorecard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPlayerConductScorecard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPlayerConductScorecard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.account_id)
  return account_id_;
}
inline void CMsgPlayerConductScorecard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgPlayerConductScorecard::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPlayerConductScorecard::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPlayerConductScorecard::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgPlayerConductScorecard::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.match_id)
  return match_id_;
}
inline void CMsgPlayerConductScorecard::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.match_id)
}

// optional uint32 seq_num = 3;
inline bool CMsgPlayerConductScorecard::has_seq_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_seq_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPlayerConductScorecard::clear_has_seq_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPlayerConductScorecard::clear_seq_num() {
  seq_num_ = 0u;
  clear_has_seq_num();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::seq_num() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.seq_num)
  return seq_num_;
}
inline void CMsgPlayerConductScorecard::set_seq_num(::google::protobuf::uint32 value) {
  set_has_seq_num();
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.seq_num)
}

// optional uint32 reasons = 4;
inline bool CMsgPlayerConductScorecard::has_reasons() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_reasons() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPlayerConductScorecard::clear_has_reasons() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPlayerConductScorecard::clear_reasons() {
  reasons_ = 0u;
  clear_has_reasons();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reasons() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.reasons)
  return reasons_;
}
inline void CMsgPlayerConductScorecard::set_reasons(::google::protobuf::uint32 value) {
  set_has_reasons();
  reasons_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.reasons)
}

// optional uint32 matches_in_report = 5;
inline bool CMsgPlayerConductScorecard::has_matches_in_report() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_in_report() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_in_report() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPlayerConductScorecard::clear_matches_in_report() {
  matches_in_report_ = 0u;
  clear_has_matches_in_report();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_in_report() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.matches_in_report)
  return matches_in_report_;
}
inline void CMsgPlayerConductScorecard::set_matches_in_report(::google::protobuf::uint32 value) {
  set_has_matches_in_report();
  matches_in_report_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.matches_in_report)
}

// optional uint32 matches_clean = 6;
inline bool CMsgPlayerConductScorecard::has_matches_clean() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_clean() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_clean() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPlayerConductScorecard::clear_matches_clean() {
  matches_clean_ = 0u;
  clear_has_matches_clean();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_clean() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.matches_clean)
  return matches_clean_;
}
inline void CMsgPlayerConductScorecard::set_matches_clean(::google::protobuf::uint32 value) {
  set_has_matches_clean();
  matches_clean_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.matches_clean)
}

// optional uint32 matches_reported = 7;
inline bool CMsgPlayerConductScorecard::has_matches_reported() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_reported() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_reported() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPlayerConductScorecard::clear_matches_reported() {
  matches_reported_ = 0u;
  clear_has_matches_reported();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_reported() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.matches_reported)
  return matches_reported_;
}
inline void CMsgPlayerConductScorecard::set_matches_reported(::google::protobuf::uint32 value) {
  set_has_matches_reported();
  matches_reported_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.matches_reported)
}

// optional uint32 matches_abandoned = 8;
inline bool CMsgPlayerConductScorecard::has_matches_abandoned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_abandoned() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_abandoned() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPlayerConductScorecard::clear_matches_abandoned() {
  matches_abandoned_ = 0u;
  clear_has_matches_abandoned();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_abandoned() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.matches_abandoned)
  return matches_abandoned_;
}
inline void CMsgPlayerConductScorecard::set_matches_abandoned(::google::protobuf::uint32 value) {
  set_has_matches_abandoned();
  matches_abandoned_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.matches_abandoned)
}

// optional uint32 reports_count = 9;
inline bool CMsgPlayerConductScorecard::has_reports_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_reports_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgPlayerConductScorecard::clear_has_reports_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgPlayerConductScorecard::clear_reports_count() {
  reports_count_ = 0u;
  clear_has_reports_count();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reports_count() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.reports_count)
  return reports_count_;
}
inline void CMsgPlayerConductScorecard::set_reports_count(::google::protobuf::uint32 value) {
  set_has_reports_count();
  reports_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.reports_count)
}

// optional uint32 reports_parties = 10;
inline bool CMsgPlayerConductScorecard::has_reports_parties() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_reports_parties() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgPlayerConductScorecard::clear_has_reports_parties() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgPlayerConductScorecard::clear_reports_parties() {
  reports_parties_ = 0u;
  clear_has_reports_parties();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reports_parties() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.reports_parties)
  return reports_parties_;
}
inline void CMsgPlayerConductScorecard::set_reports_parties(::google::protobuf::uint32 value) {
  set_has_reports_parties();
  reports_parties_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.reports_parties)
}

// optional uint32 commend_count = 11;
inline bool CMsgPlayerConductScorecard::has_commend_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_commend_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgPlayerConductScorecard::clear_has_commend_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgPlayerConductScorecard::clear_commend_count() {
  commend_count_ = 0u;
  clear_has_commend_count();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::commend_count() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.commend_count)
  return commend_count_;
}
inline void CMsgPlayerConductScorecard::set_commend_count(::google::protobuf::uint32 value) {
  set_has_commend_count();
  commend_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.commend_count)
}

// optional uint32 end_score = 13;
inline bool CMsgPlayerConductScorecard::has_end_score() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_end_score() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgPlayerConductScorecard::clear_has_end_score() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgPlayerConductScorecard::clear_end_score() {
  end_score_ = 0u;
  clear_has_end_score();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::end_score() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.end_score)
  return end_score_;
}
inline void CMsgPlayerConductScorecard::set_end_score(::google::protobuf::uint32 value) {
  set_has_end_score();
  end_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.end_score)
}

// optional uint32 date = 14;
inline bool CMsgPlayerConductScorecard::has_date() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_date() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgPlayerConductScorecard::clear_has_date() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgPlayerConductScorecard::clear_date() {
  date_ = 0u;
  clear_has_date();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::date() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerConductScorecard.date)
  return date_;
}
inline void CMsgPlayerConductScorecard::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerConductScorecard.date)
}

// -------------------------------------------------------------------

// CMsgClientToGCWageringRequest

// optional uint32 event_id = 1;
inline bool CMsgClientToGCWageringRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCWageringRequest::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCWageringRequest::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCWageringRequest::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCWageringRequest::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWageringRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCWageringRequest::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCWageringRequest.event_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientWageringResponse

// optional uint32 coins_remaining = 1;
inline bool CMsgGCToClientWageringResponse::has_coins_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_coins_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientWageringResponse::clear_has_coins_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientWageringResponse::clear_coins_remaining() {
  coins_remaining_ = 0u;
  clear_has_coins_remaining();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::coins_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringResponse.coins_remaining)
  return coins_remaining_;
}
inline void CMsgGCToClientWageringResponse::set_coins_remaining(::google::protobuf::uint32 value) {
  set_has_coins_remaining();
  coins_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringResponse.coins_remaining)
}

// optional uint32 total_points_won = 2;
inline bool CMsgGCToClientWageringResponse::has_total_points_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_points_won() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_points_won() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_won() {
  total_points_won_ = 0u;
  clear_has_total_points_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_won() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringResponse.total_points_won)
  return total_points_won_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_won(::google::protobuf::uint32 value) {
  set_has_total_points_won();
  total_points_won_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringResponse.total_points_won)
}

// optional uint32 total_points_wagered = 3;
inline bool CMsgGCToClientWageringResponse::has_total_points_wagered() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_points_wagered() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_points_wagered() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_wagered() {
  total_points_wagered_ = 0u;
  clear_has_total_points_wagered();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_wagered() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringResponse.total_points_wagered)
  return total_points_wagered_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_wagered(::google::protobuf::uint32 value) {
  set_has_total_points_wagered();
  total_points_wagered_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringResponse.total_points_wagered)
}

// optional uint32 total_points_tipped = 4;
inline bool CMsgGCToClientWageringResponse::has_total_points_tipped() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_points_tipped() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_points_tipped() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_tipped() {
  total_points_tipped_ = 0u;
  clear_has_total_points_tipped();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_tipped() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringResponse.total_points_tipped)
  return total_points_tipped_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_tipped(::google::protobuf::uint32 value) {
  set_has_total_points_tipped();
  total_points_tipped_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringResponse.total_points_tipped)
}

// optional uint32 success_rate = 5;
inline bool CMsgGCToClientWageringResponse::has_success_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_success_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientWageringResponse::clear_has_success_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientWageringResponse::clear_success_rate() {
  success_rate_ = 0u;
  clear_has_success_rate();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::success_rate() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringResponse.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientWageringResponse::set_success_rate(::google::protobuf::uint32 value) {
  set_has_success_rate();
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringResponse.success_rate)
}

// optional uint32 total_games_wagered = 6;
inline bool CMsgGCToClientWageringResponse::has_total_games_wagered() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_games_wagered() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_games_wagered() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientWageringResponse::clear_total_games_wagered() {
  total_games_wagered_ = 0u;
  clear_has_total_games_wagered();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_games_wagered() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringResponse.total_games_wagered)
  return total_games_wagered_;
}
inline void CMsgGCToClientWageringResponse::set_total_games_wagered(::google::protobuf::uint32 value) {
  set_has_total_games_wagered();
  total_games_wagered_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringResponse.total_games_wagered)
}

// optional uint32 coins_max = 7;
inline bool CMsgGCToClientWageringResponse::has_coins_max() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_coins_max() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientWageringResponse::clear_has_coins_max() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientWageringResponse::clear_coins_max() {
  coins_max_ = 0u;
  clear_has_coins_max();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::coins_max() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringResponse.coins_max)
  return coins_max_;
}
inline void CMsgGCToClientWageringResponse::set_coins_max(::google::protobuf::uint32 value) {
  set_has_coins_max();
  coins_max_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringResponse.coins_max)
}

// -------------------------------------------------------------------

// CMsgGCToClientWageringUpdate

// optional uint32 event_id = 1;
inline bool CMsgGCToClientWageringUpdate::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientWageringUpdate::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientWageringUpdate::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientWageringUpdate::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringUpdate::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringUpdate.event_id)
  return event_id_;
}
inline void CMsgGCToClientWageringUpdate::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientWageringUpdate.event_id)
}

// optional .CMsgGCToClientWageringResponse wagering_info = 2;
inline bool CMsgGCToClientWageringUpdate::has_wagering_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientWageringUpdate::set_has_wagering_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientWageringUpdate::clear_has_wagering_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientWageringUpdate::clear_wagering_info() {
  if (wagering_info_ != NULL) wagering_info_->::CMsgGCToClientWageringResponse::Clear();
  clear_has_wagering_info();
}
inline const ::CMsgGCToClientWageringResponse& CMsgGCToClientWageringUpdate::wagering_info() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientWageringUpdate.wagering_info)
  return wagering_info_ != NULL ? *wagering_info_ : *default_instance_->wagering_info_;
}
inline ::CMsgGCToClientWageringResponse* CMsgGCToClientWageringUpdate::mutable_wagering_info() {
  set_has_wagering_info();
  if (wagering_info_ == NULL) wagering_info_ = new ::CMsgGCToClientWageringResponse;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientWageringUpdate.wagering_info)
  return wagering_info_;
}
inline ::CMsgGCToClientWageringResponse* CMsgGCToClientWageringUpdate::release_wagering_info() {
  clear_has_wagering_info();
  ::CMsgGCToClientWageringResponse* temp = wagering_info_;
  wagering_info_ = NULL;
  return temp;
}
inline void CMsgGCToClientWageringUpdate::set_allocated_wagering_info(::CMsgGCToClientWageringResponse* wagering_info) {
  delete wagering_info_;
  wagering_info_ = wagering_info;
  if (wagering_info) {
    set_has_wagering_info();
  } else {
    clear_has_wagering_info();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientWageringUpdate.wagering_info)
}

// -------------------------------------------------------------------

// CMsgGCToClientArcanaVotesUpdate

// optional uint32 event_id = 1;
inline bool CMsgGCToClientArcanaVotesUpdate::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientArcanaVotesUpdate::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientArcanaVotesUpdate.event_id)
  return event_id_;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientArcanaVotesUpdate.event_id)
}

// optional .CMsgClientToGCRequestArcanaVotesRemainingResponse arcana_votes = 2;
inline bool CMsgGCToClientArcanaVotesUpdate::has_arcana_votes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_has_arcana_votes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_has_arcana_votes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_arcana_votes() {
  if (arcana_votes_ != NULL) arcana_votes_->::CMsgClientToGCRequestArcanaVotesRemainingResponse::Clear();
  clear_has_arcana_votes();
}
inline const ::CMsgClientToGCRequestArcanaVotesRemainingResponse& CMsgGCToClientArcanaVotesUpdate::arcana_votes() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  return arcana_votes_ != NULL ? *arcana_votes_ : *default_instance_->arcana_votes_;
}
inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse* CMsgGCToClientArcanaVotesUpdate::mutable_arcana_votes() {
  set_has_arcana_votes();
  if (arcana_votes_ == NULL) arcana_votes_ = new ::CMsgClientToGCRequestArcanaVotesRemainingResponse;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  return arcana_votes_;
}
inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse* CMsgGCToClientArcanaVotesUpdate::release_arcana_votes() {
  clear_has_arcana_votes();
  ::CMsgClientToGCRequestArcanaVotesRemainingResponse* temp = arcana_votes_;
  arcana_votes_ = NULL;
  return temp;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_allocated_arcana_votes(::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes) {
  delete arcana_votes_;
  arcana_votes_ = arcana_votes;
  if (arcana_votes) {
    set_has_arcana_votes();
  } else {
    clear_has_arcana_votes();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientArcanaVotesUpdate.arcana_votes)
}

// -------------------------------------------------------------------

// CMsgClientToGCMysteryItem

// optional uint32 event_id = 1;
inline bool CMsgClientToGCMysteryItem::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCMysteryItem::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCMysteryItem::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCMysteryItem::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCMysteryItem::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCMysteryItem.event_id)
  return event_id_;
}
inline void CMsgClientToGCMysteryItem::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCMysteryItem.event_id)
}

// optional uint32 action_id = 2;
inline bool CMsgClientToGCMysteryItem::has_action_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCMysteryItem::set_has_action_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCMysteryItem::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCMysteryItem::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCMysteryItem::action_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCMysteryItem.action_id)
  return action_id_;
}
inline void CMsgClientToGCMysteryItem::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCMysteryItem.action_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientMysteryItemResponse

// optional .CMsgGCToClientMysteryItemResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgGCToClientMysteryItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientMysteryItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientMysteryItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientMysteryItemResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgGCToClientMysteryItemResponse_Result CMsgGCToClientMysteryItemResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientMysteryItemResponse.result)
  return static_cast< ::CMsgGCToClientMysteryItemResponse_Result >(result_);
}
inline void CMsgGCToClientMysteryItemResponse::set_result(::CMsgGCToClientMysteryItemResponse_Result value) {
  assert(::CMsgGCToClientMysteryItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientMysteryItemResponse.result)
}

// optional uint32 reward_type = 2;
inline bool CMsgGCToClientMysteryItemResponse::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientMysteryItemResponse::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientMysteryItemResponse::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientMysteryItemResponse::clear_reward_type() {
  reward_type_ = 0u;
  clear_has_reward_type();
}
inline ::google::protobuf::uint32 CMsgGCToClientMysteryItemResponse::reward_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientMysteryItemResponse.reward_type)
  return reward_type_;
}
inline void CMsgGCToClientMysteryItemResponse::set_reward_type(::google::protobuf::uint32 value) {
  set_has_reward_type();
  reward_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientMysteryItemResponse.reward_type)
}

// optional uint32 itemdef = 3;
inline bool CMsgGCToClientMysteryItemResponse::has_itemdef() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientMysteryItemResponse::set_has_itemdef() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientMysteryItemResponse::clear_has_itemdef() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientMysteryItemResponse::clear_itemdef() {
  itemdef_ = 0u;
  clear_has_itemdef();
}
inline ::google::protobuf::uint32 CMsgGCToClientMysteryItemResponse::itemdef() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientMysteryItemResponse.itemdef)
  return itemdef_;
}
inline void CMsgGCToClientMysteryItemResponse::set_itemdef(::google::protobuf::uint32 value) {
  set_has_itemdef();
  itemdef_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientMysteryItemResponse.itemdef)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetEventGoals

// repeated .EEvent event_ids = 1;
inline int CMsgClientToGCGetEventGoals::event_ids_size() const {
  return event_ids_.size();
}
inline void CMsgClientToGCGetEventGoals::clear_event_ids() {
  event_ids_.Clear();
}
inline ::EEvent CMsgClientToGCGetEventGoals::event_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetEventGoals.event_ids)
  return static_cast< ::EEvent >(event_ids_.Get(index));
}
inline void CMsgClientToGCGetEventGoals::set_event_ids(int index, ::EEvent value) {
  assert(::EEvent_IsValid(value));
  event_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetEventGoals.event_ids)
}
inline void CMsgClientToGCGetEventGoals::add_event_ids(::EEvent value) {
  assert(::EEvent_IsValid(value));
  event_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetEventGoals.event_ids)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgClientToGCGetEventGoals::event_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetEventGoals.event_ids)
  return event_ids_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgClientToGCGetEventGoals::mutable_event_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetEventGoals.event_ids)
  return &event_ids_;
}

// -------------------------------------------------------------------

// CMsgEventGoals_EventGoal

// optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgEventGoals_EventGoal::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEventGoals_EventGoal::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgEventGoals_EventGoal::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgEventGoals_EventGoal::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::EEvent CMsgEventGoals_EventGoal::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgEventGoals.EventGoal.event_id)
  return static_cast< ::EEvent >(event_id_);
}
inline void CMsgEventGoals_EventGoal::set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgEventGoals.EventGoal.event_id)
}

// optional uint32 goal_id = 2;
inline bool CMsgEventGoals_EventGoal::has_goal_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgEventGoals_EventGoal::set_has_goal_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgEventGoals_EventGoal::clear_has_goal_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgEventGoals_EventGoal::clear_goal_id() {
  goal_id_ = 0u;
  clear_has_goal_id();
}
inline ::google::protobuf::uint32 CMsgEventGoals_EventGoal::goal_id() const {
  // @@protoc_insertion_point(field_get:CMsgEventGoals.EventGoal.goal_id)
  return goal_id_;
}
inline void CMsgEventGoals_EventGoal::set_goal_id(::google::protobuf::uint32 value) {
  set_has_goal_id();
  goal_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgEventGoals.EventGoal.goal_id)
}

// optional uint64 value = 3;
inline bool CMsgEventGoals_EventGoal::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgEventGoals_EventGoal::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgEventGoals_EventGoal::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgEventGoals_EventGoal::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 CMsgEventGoals_EventGoal::value() const {
  // @@protoc_insertion_point(field_get:CMsgEventGoals.EventGoal.value)
  return value_;
}
inline void CMsgEventGoals_EventGoal::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:CMsgEventGoals.EventGoal.value)
}

// -------------------------------------------------------------------

// CMsgEventGoals

// repeated .CMsgEventGoals.EventGoal event_goals = 1;
inline int CMsgEventGoals::event_goals_size() const {
  return event_goals_.size();
}
inline void CMsgEventGoals::clear_event_goals() {
  event_goals_.Clear();
}
inline const ::CMsgEventGoals_EventGoal& CMsgEventGoals::event_goals(int index) const {
  // @@protoc_insertion_point(field_get:CMsgEventGoals.event_goals)
  return event_goals_.Get(index);
}
inline ::CMsgEventGoals_EventGoal* CMsgEventGoals::mutable_event_goals(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgEventGoals.event_goals)
  return event_goals_.Mutable(index);
}
inline ::CMsgEventGoals_EventGoal* CMsgEventGoals::add_event_goals() {
  // @@protoc_insertion_point(field_add:CMsgEventGoals.event_goals)
  return event_goals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgEventGoals_EventGoal >&
CMsgEventGoals::event_goals() const {
  // @@protoc_insertion_point(field_list:CMsgEventGoals.event_goals)
  return event_goals_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgEventGoals_EventGoal >*
CMsgEventGoals::mutable_event_goals() {
  // @@protoc_insertion_point(field_mutable_list:CMsgEventGoals.event_goals)
  return &event_goals_;
}

// -------------------------------------------------------------------

// CMsgGCToGCLeaguePredictions

// optional uint32 league_id = 1;
inline bool CMsgGCToGCLeaguePredictions::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCLeaguePredictions::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCLeaguePredictions::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCLeaguePredictions::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCToGCLeaguePredictions::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCLeaguePredictions.league_id)
  return league_id_;
}
inline void CMsgGCToGCLeaguePredictions::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCLeaguePredictions.league_id)
}

// -------------------------------------------------------------------

// CMsgPredictionRankings_PredictionLine

// optional uint32 answer_id = 1;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_id() {
  answer_id_ = 0u;
  clear_has_answer_id();
}
inline ::google::protobuf::uint32 CMsgPredictionRankings_PredictionLine::answer_id() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionRankings.PredictionLine.answer_id)
  return answer_id_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_id(::google::protobuf::uint32 value) {
  set_has_answer_id();
  answer_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPredictionRankings.PredictionLine.answer_id)
}

// optional string answer_name = 2;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_name() {
  if (answer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_name_->clear();
  }
  clear_has_answer_name();
}
inline const ::std::string& CMsgPredictionRankings_PredictionLine::answer_name() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionRankings.PredictionLine.answer_name)
  return *answer_name_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const ::std::string& value) {
  set_has_answer_name();
  if (answer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_name_ = new ::std::string;
  }
  answer_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPredictionRankings.PredictionLine.answer_name)
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const char* value) {
  set_has_answer_name();
  if (answer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_name_ = new ::std::string;
  }
  answer_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPredictionRankings.PredictionLine.answer_name)
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const char* value, size_t size) {
  set_has_answer_name();
  if (answer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_name_ = new ::std::string;
  }
  answer_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPredictionRankings.PredictionLine.answer_name)
}
inline ::std::string* CMsgPredictionRankings_PredictionLine::mutable_answer_name() {
  set_has_answer_name();
  if (answer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPredictionRankings.PredictionLine.answer_name)
  return answer_name_;
}
inline ::std::string* CMsgPredictionRankings_PredictionLine::release_answer_name() {
  clear_has_answer_name();
  if (answer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_name_;
    answer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPredictionRankings_PredictionLine::set_allocated_answer_name(::std::string* answer_name) {
  if (answer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_name_;
  }
  if (answer_name) {
    set_has_answer_name();
    answer_name_ = answer_name;
  } else {
    clear_has_answer_name();
    answer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPredictionRankings.PredictionLine.answer_name)
}

// optional uint64 answer_logo = 3;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_logo() {
  answer_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_answer_logo();
}
inline ::google::protobuf::uint64 CMsgPredictionRankings_PredictionLine::answer_logo() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionRankings.PredictionLine.answer_logo)
  return answer_logo_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_logo(::google::protobuf::uint64 value) {
  set_has_answer_logo();
  answer_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgPredictionRankings.PredictionLine.answer_logo)
}

// optional float answer_value = 4;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_value() {
  answer_value_ = 0;
  clear_has_answer_value();
}
inline float CMsgPredictionRankings_PredictionLine::answer_value() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionRankings.PredictionLine.answer_value)
  return answer_value_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_value(float value) {
  set_has_answer_value();
  answer_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgPredictionRankings.PredictionLine.answer_value)
}

// -------------------------------------------------------------------

// CMsgPredictionRankings_Prediction

// optional uint32 selection_id = 1;
inline bool CMsgPredictionRankings_Prediction::has_selection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionRankings_Prediction::set_has_selection_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionRankings_Prediction::clear_has_selection_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionRankings_Prediction::clear_selection_id() {
  selection_id_ = 0u;
  clear_has_selection_id();
}
inline ::google::protobuf::uint32 CMsgPredictionRankings_Prediction::selection_id() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionRankings.Prediction.selection_id)
  return selection_id_;
}
inline void CMsgPredictionRankings_Prediction::set_selection_id(::google::protobuf::uint32 value) {
  set_has_selection_id();
  selection_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPredictionRankings.Prediction.selection_id)
}

// repeated .CMsgPredictionRankings.PredictionLine prediction_lines = 2;
inline int CMsgPredictionRankings_Prediction::prediction_lines_size() const {
  return prediction_lines_.size();
}
inline void CMsgPredictionRankings_Prediction::clear_prediction_lines() {
  prediction_lines_.Clear();
}
inline const ::CMsgPredictionRankings_PredictionLine& CMsgPredictionRankings_Prediction::prediction_lines(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Get(index);
}
inline ::CMsgPredictionRankings_PredictionLine* CMsgPredictionRankings_Prediction::mutable_prediction_lines(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Mutable(index);
}
inline ::CMsgPredictionRankings_PredictionLine* CMsgPredictionRankings_Prediction::add_prediction_lines() {
  // @@protoc_insertion_point(field_add:CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_PredictionLine >&
CMsgPredictionRankings_Prediction::prediction_lines() const {
  // @@protoc_insertion_point(field_list:CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_PredictionLine >*
CMsgPredictionRankings_Prediction::mutable_prediction_lines() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPredictionRankings.Prediction.prediction_lines)
  return &prediction_lines_;
}

// -------------------------------------------------------------------

// CMsgPredictionRankings

// repeated .CMsgPredictionRankings.Prediction predictions = 1;
inline int CMsgPredictionRankings::predictions_size() const {
  return predictions_.size();
}
inline void CMsgPredictionRankings::clear_predictions() {
  predictions_.Clear();
}
inline const ::CMsgPredictionRankings_Prediction& CMsgPredictionRankings::predictions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPredictionRankings.predictions)
  return predictions_.Get(index);
}
inline ::CMsgPredictionRankings_Prediction* CMsgPredictionRankings::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPredictionRankings.predictions)
  return predictions_.Mutable(index);
}
inline ::CMsgPredictionRankings_Prediction* CMsgPredictionRankings::add_predictions() {
  // @@protoc_insertion_point(field_add:CMsgPredictionRankings.predictions)
  return predictions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_Prediction >&
CMsgPredictionRankings::predictions() const {
  // @@protoc_insertion_point(field_list:CMsgPredictionRankings.predictions)
  return predictions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionRankings_Prediction >*
CMsgPredictionRankings::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPredictionRankings.predictions)
  return &predictions_;
}

// -------------------------------------------------------------------

// CMsgPredictionResults_ResultBreakdown

// optional uint32 answer_selection = 2;
inline bool CMsgPredictionResults_ResultBreakdown::has_answer_selection() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionResults_ResultBreakdown::set_has_answer_selection() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_has_answer_selection() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_answer_selection() {
  answer_selection_ = 0u;
  clear_has_answer_selection();
}
inline ::google::protobuf::uint32 CMsgPredictionResults_ResultBreakdown::answer_selection() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionResults.ResultBreakdown.answer_selection)
  return answer_selection_;
}
inline void CMsgPredictionResults_ResultBreakdown::set_answer_selection(::google::protobuf::uint32 value) {
  set_has_answer_selection();
  answer_selection_ = value;
  // @@protoc_insertion_point(field_set:CMsgPredictionResults.ResultBreakdown.answer_selection)
}

// optional float answer_value = 3;
inline bool CMsgPredictionResults_ResultBreakdown::has_answer_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPredictionResults_ResultBreakdown::set_has_answer_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_has_answer_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_answer_value() {
  answer_value_ = 0;
  clear_has_answer_value();
}
inline float CMsgPredictionResults_ResultBreakdown::answer_value() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionResults.ResultBreakdown.answer_value)
  return answer_value_;
}
inline void CMsgPredictionResults_ResultBreakdown::set_answer_value(float value) {
  set_has_answer_value();
  answer_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgPredictionResults.ResultBreakdown.answer_value)
}

// -------------------------------------------------------------------

// CMsgPredictionResults_Result

// optional uint32 selection_id = 1;
inline bool CMsgPredictionResults_Result::has_selection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionResults_Result::set_has_selection_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionResults_Result::clear_has_selection_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionResults_Result::clear_selection_id() {
  selection_id_ = 0u;
  clear_has_selection_id();
}
inline ::google::protobuf::uint32 CMsgPredictionResults_Result::selection_id() const {
  // @@protoc_insertion_point(field_get:CMsgPredictionResults.Result.selection_id)
  return selection_id_;
}
inline void CMsgPredictionResults_Result::set_selection_id(::google::protobuf::uint32 value) {
  set_has_selection_id();
  selection_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPredictionResults.Result.selection_id)
}

// repeated .CMsgPredictionResults.ResultBreakdown result_breakdown = 2;
inline int CMsgPredictionResults_Result::result_breakdown_size() const {
  return result_breakdown_.size();
}
inline void CMsgPredictionResults_Result::clear_result_breakdown() {
  result_breakdown_.Clear();
}
inline const ::CMsgPredictionResults_ResultBreakdown& CMsgPredictionResults_Result::result_breakdown(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Get(index);
}
inline ::CMsgPredictionResults_ResultBreakdown* CMsgPredictionResults_Result::mutable_result_breakdown(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Mutable(index);
}
inline ::CMsgPredictionResults_ResultBreakdown* CMsgPredictionResults_Result::add_result_breakdown() {
  // @@protoc_insertion_point(field_add:CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_ResultBreakdown >&
CMsgPredictionResults_Result::result_breakdown() const {
  // @@protoc_insertion_point(field_list:CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_ResultBreakdown >*
CMsgPredictionResults_Result::mutable_result_breakdown() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPredictionResults.Result.result_breakdown)
  return &result_breakdown_;
}

// -------------------------------------------------------------------

// CMsgPredictionResults

// repeated .CMsgPredictionResults.Result results = 1;
inline int CMsgPredictionResults::results_size() const {
  return results_.size();
}
inline void CMsgPredictionResults::clear_results() {
  results_.Clear();
}
inline const ::CMsgPredictionResults_Result& CMsgPredictionResults::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPredictionResults.results)
  return results_.Get(index);
}
inline ::CMsgPredictionResults_Result* CMsgPredictionResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPredictionResults.results)
  return results_.Mutable(index);
}
inline ::CMsgPredictionResults_Result* CMsgPredictionResults::add_results() {
  // @@protoc_insertion_point(field_add:CMsgPredictionResults.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_Result >&
CMsgPredictionResults::results() const {
  // @@protoc_insertion_point(field_list:CMsgPredictionResults.results)
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPredictionResults_Result >*
CMsgPredictionResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPredictionResults.results)
  return &results_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSuspiciousActivity

// optional uint64 app_data = 1;
inline bool CMsgClientToGCSuspiciousActivity::has_app_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSuspiciousActivity::set_has_app_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSuspiciousActivity::clear_has_app_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSuspiciousActivity::clear_app_data() {
  app_data_ = GOOGLE_ULONGLONG(0);
  clear_has_app_data();
}
inline ::google::protobuf::uint64 CMsgClientToGCSuspiciousActivity::app_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSuspiciousActivity.app_data)
  return app_data_;
}
inline void CMsgClientToGCSuspiciousActivity::set_app_data(::google::protobuf::uint64 value) {
  set_has_app_data();
  app_data_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSuspiciousActivity.app_data)
}

// -------------------------------------------------------------------

// CMsgClientToGCHasPlayerVotedForMVP

// optional uint64 match_id = 1;
inline bool CMsgClientToGCHasPlayerVotedForMVP::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCHasPlayerVotedForMVP::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCHasPlayerVotedForMVP.match_id)
  return match_id_;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCHasPlayerVotedForMVP.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCHasPlayerVotedForMVPResponse

// optional bool result = 1;
inline bool CMsgClientToGCHasPlayerVotedForMVPResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCHasPlayerVotedForMVPResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCHasPlayerVotedForMVPResponse.result)
  return result_;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCHasPlayerVotedForMVPResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForMVP

// optional uint64 match_id = 1;
inline bool CMsgClientToGCVoteForMVP::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForMVP::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForMVP::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForMVP::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCVoteForMVP::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForMVP.match_id)
  return match_id_;
}
inline void CMsgClientToGCVoteForMVP::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCVoteForMVP.match_id)
}

// optional uint32 account_id = 3;
inline bool CMsgClientToGCVoteForMVP::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCVoteForMVP::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCVoteForMVP::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCVoteForMVP::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForMVP::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForMVP.account_id)
  return account_id_;
}
inline void CMsgClientToGCVoteForMVP::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCVoteForMVP.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForMVPResponse

// optional bool result = 1;
inline bool CMsgClientToGCVoteForMVPResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForMVPResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForMVPResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForMVPResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCVoteForMVPResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForMVPResponse.result)
  return result_;
}
inline void CMsgClientToGCVoteForMVPResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCVoteForMVPResponse.result)
}

// -------------------------------------------------------------------

// CMsgMVPVotesForMatch_Player

// optional uint32 account_id = 1;
inline bool CMsgMVPVotesForMatch_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMVPVotesForMatch_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMVPVotesForMatch_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMVPVotesForMatch_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgMVPVotesForMatch_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgMVPVotesForMatch.Player.account_id)
  return account_id_;
}
inline void CMsgMVPVotesForMatch_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMVPVotesForMatch.Player.account_id)
}

// optional uint32 vote_count = 2;
inline bool CMsgMVPVotesForMatch_Player::has_vote_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMVPVotesForMatch_Player::set_has_vote_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMVPVotesForMatch_Player::clear_has_vote_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMVPVotesForMatch_Player::clear_vote_count() {
  vote_count_ = 0u;
  clear_has_vote_count();
}
inline ::google::protobuf::uint32 CMsgMVPVotesForMatch_Player::vote_count() const {
  // @@protoc_insertion_point(field_get:CMsgMVPVotesForMatch.Player.vote_count)
  return vote_count_;
}
inline void CMsgMVPVotesForMatch_Player::set_vote_count(::google::protobuf::uint32 value) {
  set_has_vote_count();
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgMVPVotesForMatch.Player.vote_count)
}

// -------------------------------------------------------------------

// CMsgMVPVotesForMatch

// repeated .CMsgMVPVotesForMatch.Player players = 1;
inline int CMsgMVPVotesForMatch::players_size() const {
  return players_.size();
}
inline void CMsgMVPVotesForMatch::clear_players() {
  players_.Clear();
}
inline const ::CMsgMVPVotesForMatch_Player& CMsgMVPVotesForMatch::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMVPVotesForMatch.players)
  return players_.Get(index);
}
inline ::CMsgMVPVotesForMatch_Player* CMsgMVPVotesForMatch::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMVPVotesForMatch.players)
  return players_.Mutable(index);
}
inline ::CMsgMVPVotesForMatch_Player* CMsgMVPVotesForMatch::add_players() {
  // @@protoc_insertion_point(field_add:CMsgMVPVotesForMatch.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMVPVotesForMatch_Player >&
CMsgMVPVotesForMatch::players() const {
  // @@protoc_insertion_point(field_list:CMsgMVPVotesForMatch.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMVPVotesForMatch_Player >*
CMsgMVPVotesForMatch::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMVPVotesForMatch.players)
  return &players_;
}

// -------------------------------------------------------------------

// CMsgLeaguePrizePool

// optional uint32 prize_pool = 1;
inline bool CMsgLeaguePrizePool::has_prize_pool() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaguePrizePool::set_has_prize_pool() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaguePrizePool::clear_has_prize_pool() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaguePrizePool::clear_prize_pool() {
  prize_pool_ = 0u;
  clear_has_prize_pool();
}
inline ::google::protobuf::uint32 CMsgLeaguePrizePool::prize_pool() const {
  // @@protoc_insertion_point(field_get:CMsgLeaguePrizePool.prize_pool)
  return prize_pool_;
}
inline void CMsgLeaguePrizePool::set_prize_pool(::google::protobuf::uint32 value) {
  set_has_prize_pool();
  prize_pool_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaguePrizePool.prize_pool)
}

// optional float increment_per_second = 2;
inline bool CMsgLeaguePrizePool::has_increment_per_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeaguePrizePool::set_has_increment_per_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeaguePrizePool::clear_has_increment_per_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeaguePrizePool::clear_increment_per_second() {
  increment_per_second_ = 0;
  clear_has_increment_per_second();
}
inline float CMsgLeaguePrizePool::increment_per_second() const {
  // @@protoc_insertion_point(field_get:CMsgLeaguePrizePool.increment_per_second)
  return increment_per_second_;
}
inline void CMsgLeaguePrizePool::set_increment_per_second(float value) {
  set_has_increment_per_second();
  increment_per_second_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaguePrizePool.increment_per_second)
}

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsRequest

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsResponse_TeammateStat

// optional uint32 account_id = 1;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.TeammateStat.account_id)
  return account_id_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTeammateStatsResponse.TeammateStat.account_id)
}

// optional uint32 games = 2;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_games() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_games() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_games() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_games() {
  games_ = 0u;
  clear_has_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.TeammateStat.games)
  return games_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_games(::google::protobuf::uint32 value) {
  set_has_games();
  games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTeammateStatsResponse.TeammateStat.games)
}

// optional uint32 wins = 3;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_wins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_wins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_wins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::wins() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.TeammateStat.wins)
  return wins_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTeammateStatsResponse.TeammateStat.wins)
}

// optional uint32 most_recent_game_timestamp = 4;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_most_recent_game_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_most_recent_game_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_most_recent_game_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_most_recent_game_timestamp() {
  most_recent_game_timestamp_ = 0u;
  clear_has_most_recent_game_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::most_recent_game_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_timestamp)
  return most_recent_game_timestamp_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_most_recent_game_timestamp(::google::protobuf::uint32 value) {
  set_has_most_recent_game_timestamp();
  most_recent_game_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_timestamp)
}

// optional uint64 most_recent_game_match_id = 5;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_most_recent_game_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_most_recent_game_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_most_recent_game_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_most_recent_game_match_id() {
  most_recent_game_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_most_recent_game_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCTeammateStatsResponse_TeammateStat::most_recent_game_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_match_id)
  return most_recent_game_match_id_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_most_recent_game_match_id(::google::protobuf::uint64 value) {
  set_has_most_recent_game_match_id();
  most_recent_game_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_match_id)
}

// optional float performance = 100;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_performance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_performance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_performance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_performance() {
  performance_ = 0;
  clear_has_performance();
}
inline float CMsgClientToGCTeammateStatsResponse_TeammateStat::performance() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.TeammateStat.performance)
  return performance_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_performance(float value) {
  set_has_performance();
  performance_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTeammateStatsResponse.TeammateStat.performance)
}

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsResponse

// optional bool success = 1;
inline bool CMsgClientToGCTeammateStatsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgClientToGCTeammateStatsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.success)
  return success_;
}
inline void CMsgClientToGCTeammateStatsResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTeammateStatsResponse.success)
}

// repeated .CMsgClientToGCTeammateStatsResponse.TeammateStat teammate_stats = 2;
inline int CMsgClientToGCTeammateStatsResponse::teammate_stats_size() const {
  return teammate_stats_.size();
}
inline void CMsgClientToGCTeammateStatsResponse::clear_teammate_stats() {
  teammate_stats_.Clear();
}
inline const ::CMsgClientToGCTeammateStatsResponse_TeammateStat& CMsgClientToGCTeammateStatsResponse::teammate_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Get(index);
}
inline ::CMsgClientToGCTeammateStatsResponse_TeammateStat* CMsgClientToGCTeammateStatsResponse::mutable_teammate_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Mutable(index);
}
inline ::CMsgClientToGCTeammateStatsResponse_TeammateStat* CMsgClientToGCTeammateStatsResponse::add_teammate_stats() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCTeammateStatsResponse_TeammateStat >&
CMsgClientToGCTeammateStatsResponse::teammate_stats() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCTeammateStatsResponse_TeammateStat >*
CMsgClientToGCTeammateStatsResponse::mutable_teammate_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return &teammate_stats_;
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcana_MatchVote

// optional uint64 match_id = 1;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCVoteForArcana_MatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForArcana.MatchVote.match_id)
  return match_id_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCVoteForArcana.MatchVote.match_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForArcana_MatchVote::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForArcana.MatchVote.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCVoteForArcana.MatchVote.hero_id)
}

// optional uint32 vote_count = 3;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_vote_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_has_vote_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_has_vote_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_vote_count() {
  vote_count_ = 0u;
  clear_has_vote_count();
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForArcana_MatchVote::vote_count() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForArcana.MatchVote.vote_count)
  return vote_count_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_vote_count(::google::protobuf::uint32 value) {
  set_has_vote_count();
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCVoteForArcana.MatchVote.vote_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcana

// repeated .CMsgClientToGCVoteForArcana.MatchVote matches = 1;
inline int CMsgClientToGCVoteForArcana::matches_size() const {
  return matches_.size();
}
inline void CMsgClientToGCVoteForArcana::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgClientToGCVoteForArcana_MatchVote& CMsgClientToGCVoteForArcana::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForArcana.matches)
  return matches_.Get(index);
}
inline ::CMsgClientToGCVoteForArcana_MatchVote* CMsgClientToGCVoteForArcana::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCVoteForArcana.matches)
  return matches_.Mutable(index);
}
inline ::CMsgClientToGCVoteForArcana_MatchVote* CMsgClientToGCVoteForArcana::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCVoteForArcana.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCVoteForArcana_MatchVote >&
CMsgClientToGCVoteForArcana::matches() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCVoteForArcana.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCVoteForArcana_MatchVote >*
CMsgClientToGCVoteForArcana::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCVoteForArcana.matches)
  return &matches_;
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcanaResponse

// optional .CMsgClientToGCVoteForArcanaResponse.Result result = 1 [default = SUCCEEDED];
inline bool CMsgClientToGCVoteForArcanaResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForArcanaResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForArcanaResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForArcanaResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCVoteForArcanaResponse.result)
  return static_cast< ::CMsgClientToGCVoteForArcanaResponse_Result >(result_);
}
inline void CMsgClientToGCVoteForArcanaResponse::set_result(::CMsgClientToGCVoteForArcanaResponse_Result value) {
  assert(::CMsgClientToGCVoteForArcanaResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCVoteForArcanaResponse.result)
}

// -------------------------------------------------------------------

// CMsgArcanaVotes_Match

// optional uint32 match_id = 1;
inline bool CMsgArcanaVotes_Match::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgArcanaVotes_Match::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgArcanaVotes_Match::clear_match_id() {
  match_id_ = 0u;
  clear_has_match_id();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.match_id)
  return match_id_;
}
inline void CMsgArcanaVotes_Match::set_match_id(::google::protobuf::uint32 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.match_id)
}

// optional uint32 hero_id_0 = 2;
inline bool CMsgArcanaVotes_Match::has_hero_id_0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_id_0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_id_0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgArcanaVotes_Match::clear_hero_id_0() {
  hero_id_0_ = 0u;
  clear_has_hero_id_0();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_id_0() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.hero_id_0)
  return hero_id_0_;
}
inline void CMsgArcanaVotes_Match::set_hero_id_0(::google::protobuf::uint32 value) {
  set_has_hero_id_0();
  hero_id_0_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.hero_id_0)
}

// optional uint32 hero_id_1 = 3;
inline bool CMsgArcanaVotes_Match::has_hero_id_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_id_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_id_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgArcanaVotes_Match::clear_hero_id_1() {
  hero_id_1_ = 0u;
  clear_has_hero_id_1();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_id_1() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.hero_id_1)
  return hero_id_1_;
}
inline void CMsgArcanaVotes_Match::set_hero_id_1(::google::protobuf::uint32 value) {
  set_has_hero_id_1();
  hero_id_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.hero_id_1)
}

// optional uint32 hero_seeding_0 = 4;
inline bool CMsgArcanaVotes_Match::has_hero_seeding_0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_seeding_0() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_seeding_0() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgArcanaVotes_Match::clear_hero_seeding_0() {
  hero_seeding_0_ = 0u;
  clear_has_hero_seeding_0();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_seeding_0() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.hero_seeding_0)
  return hero_seeding_0_;
}
inline void CMsgArcanaVotes_Match::set_hero_seeding_0(::google::protobuf::uint32 value) {
  set_has_hero_seeding_0();
  hero_seeding_0_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.hero_seeding_0)
}

// optional uint32 hero_seeding_1 = 5;
inline bool CMsgArcanaVotes_Match::has_hero_seeding_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_seeding_1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_seeding_1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgArcanaVotes_Match::clear_hero_seeding_1() {
  hero_seeding_1_ = 0u;
  clear_has_hero_seeding_1();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_seeding_1() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.hero_seeding_1)
  return hero_seeding_1_;
}
inline void CMsgArcanaVotes_Match::set_hero_seeding_1(::google::protobuf::uint32 value) {
  set_has_hero_seeding_1();
  hero_seeding_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.hero_seeding_1)
}

// optional uint32 vote_count_0 = 6;
inline bool CMsgArcanaVotes_Match::has_vote_count_0() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_vote_count_0() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgArcanaVotes_Match::clear_has_vote_count_0() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgArcanaVotes_Match::clear_vote_count_0() {
  vote_count_0_ = 0u;
  clear_has_vote_count_0();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::vote_count_0() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.vote_count_0)
  return vote_count_0_;
}
inline void CMsgArcanaVotes_Match::set_vote_count_0(::google::protobuf::uint32 value) {
  set_has_vote_count_0();
  vote_count_0_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.vote_count_0)
}

// optional uint32 vote_count_1 = 7;
inline bool CMsgArcanaVotes_Match::has_vote_count_1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_vote_count_1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgArcanaVotes_Match::clear_has_vote_count_1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgArcanaVotes_Match::clear_vote_count_1() {
  vote_count_1_ = 0u;
  clear_has_vote_count_1();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::vote_count_1() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.vote_count_1)
  return vote_count_1_;
}
inline void CMsgArcanaVotes_Match::set_vote_count_1(::google::protobuf::uint32 value) {
  set_has_vote_count_1();
  vote_count_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.vote_count_1)
}

// optional uint32 voting_state = 8;
inline bool CMsgArcanaVotes_Match::has_voting_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_voting_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgArcanaVotes_Match::clear_has_voting_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgArcanaVotes_Match::clear_voting_state() {
  voting_state_ = 0u;
  clear_has_voting_state();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::voting_state() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.voting_state)
  return voting_state_;
}
inline void CMsgArcanaVotes_Match::set_voting_state(::google::protobuf::uint32 value) {
  set_has_voting_state();
  voting_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.voting_state)
}

// optional uint32 round_number = 9;
inline bool CMsgArcanaVotes_Match::has_round_number() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_round_number() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgArcanaVotes_Match::clear_has_round_number() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgArcanaVotes_Match::clear_round_number() {
  round_number_ = 0u;
  clear_has_round_number();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::round_number() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.round_number)
  return round_number_;
}
inline void CMsgArcanaVotes_Match::set_round_number(::google::protobuf::uint32 value) {
  set_has_round_number();
  round_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.round_number)
}

// optional bool is_votes_hidden = 10;
inline bool CMsgArcanaVotes_Match::has_is_votes_hidden() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_is_votes_hidden() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgArcanaVotes_Match::clear_has_is_votes_hidden() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgArcanaVotes_Match::clear_is_votes_hidden() {
  is_votes_hidden_ = false;
  clear_has_is_votes_hidden();
}
inline bool CMsgArcanaVotes_Match::is_votes_hidden() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.is_votes_hidden)
  return is_votes_hidden_;
}
inline void CMsgArcanaVotes_Match::set_is_votes_hidden(bool value) {
  set_has_is_votes_hidden();
  is_votes_hidden_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.is_votes_hidden)
}

// optional uint32 calibration_time_remaining = 11;
inline bool CMsgArcanaVotes_Match::has_calibration_time_remaining() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_calibration_time_remaining() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgArcanaVotes_Match::clear_has_calibration_time_remaining() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgArcanaVotes_Match::clear_calibration_time_remaining() {
  calibration_time_remaining_ = 0u;
  clear_has_calibration_time_remaining();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::calibration_time_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.Match.calibration_time_remaining)
  return calibration_time_remaining_;
}
inline void CMsgArcanaVotes_Match::set_calibration_time_remaining(::google::protobuf::uint32 value) {
  set_has_calibration_time_remaining();
  calibration_time_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.Match.calibration_time_remaining)
}

// -------------------------------------------------------------------

// CMsgArcanaVotes

// repeated .CMsgArcanaVotes.Match matches = 1;
inline int CMsgArcanaVotes::matches_size() const {
  return matches_.size();
}
inline void CMsgArcanaVotes::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgArcanaVotes_Match& CMsgArcanaVotes::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.matches)
  return matches_.Get(index);
}
inline ::CMsgArcanaVotes_Match* CMsgArcanaVotes::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgArcanaVotes.matches)
  return matches_.Mutable(index);
}
inline ::CMsgArcanaVotes_Match* CMsgArcanaVotes::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgArcanaVotes.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgArcanaVotes_Match >&
CMsgArcanaVotes::matches() const {
  // @@protoc_insertion_point(field_list:CMsgArcanaVotes.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgArcanaVotes_Match >*
CMsgArcanaVotes::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgArcanaVotes.matches)
  return &matches_;
}

// optional uint32 round_time_remaining = 2;
inline bool CMsgArcanaVotes::has_round_time_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgArcanaVotes::set_has_round_time_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgArcanaVotes::clear_has_round_time_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgArcanaVotes::clear_round_time_remaining() {
  round_time_remaining_ = 0u;
  clear_has_round_time_remaining();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::round_time_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.round_time_remaining)
  return round_time_remaining_;
}
inline void CMsgArcanaVotes::set_round_time_remaining(::google::protobuf::uint32 value) {
  set_has_round_time_remaining();
  round_time_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.round_time_remaining)
}

// optional uint32 round_number = 3;
inline bool CMsgArcanaVotes::has_round_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgArcanaVotes::set_has_round_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgArcanaVotes::clear_has_round_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgArcanaVotes::clear_round_number() {
  round_number_ = 0u;
  clear_has_round_number();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::round_number() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.round_number)
  return round_number_;
}
inline void CMsgArcanaVotes::set_round_number(::google::protobuf::uint32 value) {
  set_has_round_number();
  round_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.round_number)
}

// optional uint32 voting_state = 4;
inline bool CMsgArcanaVotes::has_voting_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgArcanaVotes::set_has_voting_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgArcanaVotes::clear_has_voting_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgArcanaVotes::clear_voting_state() {
  voting_state_ = 0u;
  clear_has_voting_state();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::voting_state() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.voting_state)
  return voting_state_;
}
inline void CMsgArcanaVotes::set_voting_state(::google::protobuf::uint32 value) {
  set_has_voting_state();
  voting_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.voting_state)
}

// optional bool is_current_round_calibrating = 5;
inline bool CMsgArcanaVotes::has_is_current_round_calibrating() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgArcanaVotes::set_has_is_current_round_calibrating() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgArcanaVotes::clear_has_is_current_round_calibrating() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgArcanaVotes::clear_is_current_round_calibrating() {
  is_current_round_calibrating_ = false;
  clear_has_is_current_round_calibrating();
}
inline bool CMsgArcanaVotes::is_current_round_calibrating() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.is_current_round_calibrating)
  return is_current_round_calibrating_;
}
inline void CMsgArcanaVotes::set_is_current_round_calibrating(bool value) {
  set_has_is_current_round_calibrating();
  is_current_round_calibrating_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.is_current_round_calibrating)
}

// optional uint32 closest_active_match_id = 6;
inline bool CMsgArcanaVotes::has_closest_active_match_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgArcanaVotes::set_has_closest_active_match_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgArcanaVotes::clear_has_closest_active_match_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgArcanaVotes::clear_closest_active_match_id() {
  closest_active_match_id_ = 0u;
  clear_has_closest_active_match_id();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::closest_active_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgArcanaVotes.closest_active_match_id)
  return closest_active_match_id_;
}
inline void CMsgArcanaVotes::set_closest_active_match_id(::google::protobuf::uint32 value) {
  set_has_closest_active_match_id();
  closest_active_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgArcanaVotes.closest_active_match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemaining

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.match_id)
  return match_id_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.match_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.hero_id)
}

// optional uint32 vote_count = 3;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_vote_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_has_vote_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_has_vote_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_vote_count() {
  vote_count_ = 0u;
  clear_has_vote_count();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::vote_count() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.vote_count)
  return vote_count_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_vote_count(::google::protobuf::uint32 value) {
  set_has_vote_count();
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.vote_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemainingResponse

// optional bool result = 1;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestArcanaVotesRemainingResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestArcanaVotesRemainingResponse.result)
}

// optional uint32 votes_remaining = 2;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_votes_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_has_votes_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_has_votes_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_votes_remaining() {
  votes_remaining_ = 0u;
  clear_has_votes_remaining();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse::votes_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_remaining)
  return votes_remaining_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_votes_remaining(::google::protobuf::uint32 value) {
  set_has_votes_remaining();
  votes_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_remaining)
}

// optional uint32 votes_total = 3;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_votes_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_has_votes_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_has_votes_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_votes_total() {
  votes_total_ = 0u;
  clear_has_votes_total();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse::votes_total() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_total)
  return votes_total_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_votes_total(::google::protobuf::uint32 value) {
  set_has_votes_total();
  votes_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_total)
}

// repeated .CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote matches_previously_voted_for = 4;
inline int CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for_size() const {
  return matches_previously_voted_for_.size();
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_matches_previously_voted_for() {
  matches_previously_voted_for_.Clear();
}
inline const ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Get(index);
}
inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* CMsgClientToGCRequestArcanaVotesRemainingResponse::mutable_matches_previously_voted_for(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Mutable(index);
}
inline ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* CMsgClientToGCRequestArcanaVotesRemainingResponse::add_matches_previously_voted_for() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >&
CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >*
CMsgClientToGCRequestArcanaVotesRemainingResponse::mutable_matches_previously_voted_for() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return &matches_previously_voted_for_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLog

// optional uint32 event_id = 1;
inline bool CMsgClientToGCRequestEventPointLog::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLog::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLog::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLog::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLog::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLog.event_id)
  return event_id_;
}
inline void CMsgClientToGCRequestEventPointLog::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLog.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent

// optional uint32 quest_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::quest_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.quest_id)
  return quest_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.quest_id)
}

// optional uint32 challenge_id = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_has_challenge_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_has_challenge_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_challenge_id() {
  challenge_id_ = 0u;
  clear_has_challenge_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::challenge_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.challenge_id)
  return challenge_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_challenge_id(::google::protobuf::uint32 value) {
  set_has_challenge_id();
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.challenge_id)
}

// optional uint32 rank = 3;
inline bool CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::rank() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.rank)
  return rank_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.rank)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent.match_id)
  return match_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent

// optional uint32 recipient_account_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_account_id)
}

// optional string recipient_name = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::has_recipient_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_has_recipient_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_has_recipient_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_recipient_name() {
  if (recipient_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recipient_name_->clear();
  }
  clear_has_recipient_name();
}
inline const ::std::string& CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::recipient_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
  return *recipient_name_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_name(const ::std::string& value) {
  set_has_recipient_name();
  if (recipient_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recipient_name_ = new ::std::string;
  }
  recipient_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_name(const char* value) {
  set_has_recipient_name();
  if (recipient_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recipient_name_ = new ::std::string;
  }
  recipient_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_name(const char* value, size_t size) {
  set_has_recipient_name();
  if (recipient_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recipient_name_ = new ::std::string;
  }
  recipient_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::mutable_recipient_name() {
  set_has_recipient_name();
  if (recipient_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recipient_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
  return recipient_name_;
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::release_recipient_name() {
  clear_has_recipient_name();
  if (recipient_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recipient_name_;
    recipient_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_allocated_recipient_name(::std::string* recipient_name) {
  if (recipient_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recipient_name_;
  }
  if (recipient_name) {
    set_has_recipient_name();
    recipient_name_ = recipient_name;
  } else {
    clear_has_recipient_name();
    recipient_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent

// optional uint32 giver_account_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::has_giver_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_has_giver_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_has_giver_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_giver_account_id() {
  giver_account_id_ = 0u;
  clear_has_giver_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::giver_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_account_id)
  return giver_account_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_account_id(::google::protobuf::uint32 value) {
  set_has_giver_account_id();
  giver_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_account_id)
}

// optional string giver_name = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::has_giver_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_has_giver_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_has_giver_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_giver_name() {
  if (giver_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giver_name_->clear();
  }
  clear_has_giver_name();
}
inline const ::std::string& CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::giver_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
  return *giver_name_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_name(const ::std::string& value) {
  set_has_giver_name();
  if (giver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giver_name_ = new ::std::string;
  }
  giver_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_name(const char* value) {
  set_has_giver_name();
  if (giver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giver_name_ = new ::std::string;
  }
  giver_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_name(const char* value, size_t size) {
  set_has_giver_name();
  if (giver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giver_name_ = new ::std::string;
  }
  giver_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::mutable_giver_name() {
  set_has_giver_name();
  if (giver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giver_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
  return giver_name_;
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::release_giver_name() {
  clear_has_giver_name();
  if (giver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = giver_name_;
    giver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_allocated_giver_name(::std::string* giver_name) {
  if (giver_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete giver_name_;
  }
  if (giver_name) {
    set_has_giver_name();
    giver_name_ = giver_name;
  } else {
    clear_has_giver_name();
    giver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent

// optional uint32 recipe_item_def_index = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::has_recipe_item_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::set_has_recipe_item_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::clear_has_recipe_item_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::clear_recipe_item_def_index() {
  recipe_item_def_index_ = 0u;
  clear_has_recipe_item_def_index();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::recipe_item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent.recipe_item_def_index)
  return recipe_item_def_index_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::set_recipe_item_def_index(::google::protobuf::uint32 value) {
  set_has_recipe_item_def_index();
  recipe_item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent.recipe_item_def_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_AchievementEvent

// optional uint32 action_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_AchievementEvent::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_AchievementEvent::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_AchievementEvent::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_AchievementEvent::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_AchievementEvent::action_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.AchievementEvent.action_id)
  return action_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_AchievementEvent::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.AchievementEvent.action_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent

// optional bool community_goal_item = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::has_community_goal_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::set_has_community_goal_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::clear_has_community_goal_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::clear_community_goal_item() {
  community_goal_item_ = false;
  clear_has_community_goal_item();
}
inline bool CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::community_goal_item() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent.community_goal_item)
  return community_goal_item_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::set_community_goal_item(bool value) {
  set_has_community_goal_item();
  community_goal_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent.community_goal_item)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent

// optional uint32 prediction_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::set_has_prediction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::clear_has_prediction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::clear_prediction_id() {
  prediction_id_ = 0u;
  clear_has_prediction_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::prediction_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent.prediction_id)
  return prediction_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::set_prediction_id(::google::protobuf::uint32 value) {
  set_has_prediction_id();
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent.prediction_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent.match_id)
  return match_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent

// optional uint64 team_gid = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::has_team_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::set_has_team_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::clear_has_team_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::clear_team_gid() {
  team_gid_ = GOOGLE_ULONGLONG(0);
  clear_has_team_gid();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::team_gid() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent.team_gid)
  return team_gid_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::set_team_gid(::google::protobuf::uint64 value) {
  set_has_team_gid();
  team_gid_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent.team_gid)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent

// optional uint32 percentile = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::has_percentile() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::set_has_percentile() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::clear_has_percentile() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::clear_percentile() {
  percentile_ = 0u;
  clear_has_percentile();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::percentile() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent.percentile)
  return percentile_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::set_percentile(::google::protobuf::uint32 value) {
  set_has_percentile();
  percentile_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent.percentile)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent

// optional uint32 correct_answers = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::has_correct_answers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::set_has_correct_answers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::clear_has_correct_answers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::clear_correct_answers() {
  correct_answers_ = 0u;
  clear_has_correct_answers();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::correct_answers() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent.correct_answers)
  return correct_answers_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::set_correct_answers(::google::protobuf::uint32 value) {
  set_has_correct_answers();
  correct_answers_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent.correct_answers)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction

// optional uint32 time = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::time() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.time)
  return time_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.time)
}

// optional int32 event_points = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_event_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_event_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_event_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_event_points() {
  event_points_ = 0;
  clear_has_event_points();
}
inline ::google::protobuf::int32 CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::event_points() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.event_points)
  return event_points_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_event_points(::google::protobuf::int32 value) {
  set_has_event_points();
  event_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.event_points)
}

// optional bool compendium_activated_event = 3;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_compendium_activated_event() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_compendium_activated_event() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_compendium_activated_event() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_compendium_activated_event() {
  compendium_activated_event_ = false;
  clear_has_compendium_activated_event();
}
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::compendium_activated_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.compendium_activated_event)
  return compendium_activated_event_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_compendium_activated_event(bool value) {
  set_has_compendium_activated_event();
  compendium_activated_event_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.compendium_activated_event)
}

// optional bool point_item_used_event = 4;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_point_item_used_event() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_point_item_used_event() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_point_item_used_event() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_point_item_used_event() {
  point_item_used_event_ = false;
  clear_has_point_item_used_event();
}
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::point_item_used_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.point_item_used_event)
  return point_item_used_event_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_point_item_used_event(bool value) {
  set_has_point_item_used_event();
  point_item_used_event_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.point_item_used_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent wager_won_event = 5;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_wager_won_event() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_wager_won_event() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_wager_won_event() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_wager_won_event() {
  if (wager_won_event_ != NULL) wager_won_event_->::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::Clear();
  clear_has_wager_won_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::wager_won_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.wager_won_event)
  return wager_won_event_ != NULL ? *wager_won_event_ : *default_instance_->wager_won_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_wager_won_event() {
  set_has_wager_won_event();
  if (wager_won_event_ == NULL) wager_won_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.wager_won_event)
  return wager_won_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_wager_won_event() {
  clear_has_wager_won_event();
  ::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* temp = wager_won_event_;
  wager_won_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_wager_won_event(::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* wager_won_event) {
  delete wager_won_event_;
  wager_won_event_ = wager_won_event;
  if (wager_won_event) {
    set_has_wager_won_event();
  } else {
    clear_has_wager_won_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.wager_won_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent mystery_item_received_event = 6;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_mystery_item_received_event() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_mystery_item_received_event() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_mystery_item_received_event() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_mystery_item_received_event() {
  if (mystery_item_received_event_ != NULL) mystery_item_received_event_->::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::Clear();
  clear_has_mystery_item_received_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mystery_item_received_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.mystery_item_received_event)
  return mystery_item_received_event_ != NULL ? *mystery_item_received_event_ : *default_instance_->mystery_item_received_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_mystery_item_received_event() {
  set_has_mystery_item_received_event();
  if (mystery_item_received_event_ == NULL) mystery_item_received_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.mystery_item_received_event)
  return mystery_item_received_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_mystery_item_received_event() {
  clear_has_mystery_item_received_event();
  ::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* temp = mystery_item_received_event_;
  mystery_item_received_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_mystery_item_received_event(::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mystery_item_received_event) {
  delete mystery_item_received_event_;
  mystery_item_received_event_ = mystery_item_received_event;
  if (mystery_item_received_event) {
    set_has_mystery_item_received_event();
  } else {
    clear_has_mystery_item_received_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.mystery_item_received_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent quest_challenge_event = 7;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_quest_challenge_event() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_quest_challenge_event() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_quest_challenge_event() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_quest_challenge_event() {
  if (quest_challenge_event_ != NULL) quest_challenge_event_->::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::Clear();
  clear_has_quest_challenge_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::quest_challenge_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.quest_challenge_event)
  return quest_challenge_event_ != NULL ? *quest_challenge_event_ : *default_instance_->quest_challenge_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_quest_challenge_event() {
  set_has_quest_challenge_event();
  if (quest_challenge_event_ == NULL) quest_challenge_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.quest_challenge_event)
  return quest_challenge_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_quest_challenge_event() {
  clear_has_quest_challenge_event();
  ::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* temp = quest_challenge_event_;
  quest_challenge_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_quest_challenge_event(::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* quest_challenge_event) {
  delete quest_challenge_event_;
  quest_challenge_event_ = quest_challenge_event;
  if (quest_challenge_event) {
    set_has_quest_challenge_event();
  } else {
    clear_has_quest_challenge_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.quest_challenge_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent tip_given_event = 8;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_tip_given_event() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_tip_given_event() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_tip_given_event() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_tip_given_event() {
  if (tip_given_event_ != NULL) tip_given_event_->::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::Clear();
  clear_has_tip_given_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::tip_given_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_given_event)
  return tip_given_event_ != NULL ? *tip_given_event_ : *default_instance_->tip_given_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_tip_given_event() {
  set_has_tip_given_event();
  if (tip_given_event_ == NULL) tip_given_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_given_event)
  return tip_given_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_tip_given_event() {
  clear_has_tip_given_event();
  ::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* temp = tip_given_event_;
  tip_given_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_tip_given_event(::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* tip_given_event) {
  delete tip_given_event_;
  tip_given_event_ = tip_given_event;
  if (tip_given_event) {
    set_has_tip_given_event();
  } else {
    clear_has_tip_given_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_given_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent tip_received_event = 9;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_tip_received_event() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_tip_received_event() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_tip_received_event() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_tip_received_event() {
  if (tip_received_event_ != NULL) tip_received_event_->::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::Clear();
  clear_has_tip_received_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::tip_received_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_received_event)
  return tip_received_event_ != NULL ? *tip_received_event_ : *default_instance_->tip_received_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_tip_received_event() {
  set_has_tip_received_event();
  if (tip_received_event_ == NULL) tip_received_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_received_event)
  return tip_received_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_tip_received_event() {
  clear_has_tip_received_event();
  ::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* temp = tip_received_event_;
  tip_received_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_tip_received_event(::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* tip_received_event) {
  delete tip_received_event_;
  tip_received_event_ = tip_received_event;
  if (tip_received_event) {
    set_has_tip_received_event();
  } else {
    clear_has_tip_received_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_received_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent recycled_item_event = 10;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_recycled_item_event() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_recycled_item_event() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_recycled_item_event() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_recycled_item_event() {
  if (recycled_item_event_ != NULL) recycled_item_event_->::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::Clear();
  clear_has_recycled_item_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::recycled_item_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.recycled_item_event)
  return recycled_item_event_ != NULL ? *recycled_item_event_ : *default_instance_->recycled_item_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_recycled_item_event() {
  set_has_recycled_item_event();
  if (recycled_item_event_ == NULL) recycled_item_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.recycled_item_event)
  return recycled_item_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_recycled_item_event() {
  clear_has_recycled_item_event();
  ::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* temp = recycled_item_event_;
  recycled_item_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_recycled_item_event(::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* recycled_item_event) {
  delete recycled_item_event_;
  recycled_item_event_ = recycled_item_event;
  if (recycled_item_event) {
    set_has_recycled_item_event();
  } else {
    clear_has_recycled_item_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.recycled_item_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.AchievementEvent achievement_event = 11;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_achievement_event() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_achievement_event() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_achievement_event() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_achievement_event() {
  if (achievement_event_ != NULL) achievement_event_->::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent::Clear();
  clear_has_achievement_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::achievement_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.achievement_event)
  return achievement_event_ != NULL ? *achievement_event_ : *default_instance_->achievement_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_achievement_event() {
  set_has_achievement_event();
  if (achievement_event_ == NULL) achievement_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.achievement_event)
  return achievement_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_achievement_event() {
  clear_has_achievement_event();
  ::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* temp = achievement_event_;
  achievement_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_achievement_event(::CMsgClientToGCRequestEventPointLogResponse_AchievementEvent* achievement_event) {
  delete achievement_event_;
  achievement_event_ = achievement_event;
  if (achievement_event) {
    set_has_achievement_event();
  } else {
    clear_has_achievement_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.achievement_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent in_game_prediction_event = 12;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_in_game_prediction_event() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_in_game_prediction_event() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_in_game_prediction_event() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_in_game_prediction_event() {
  if (in_game_prediction_event_ != NULL) in_game_prediction_event_->::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::Clear();
  clear_has_in_game_prediction_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::in_game_prediction_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.in_game_prediction_event)
  return in_game_prediction_event_ != NULL ? *in_game_prediction_event_ : *default_instance_->in_game_prediction_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_in_game_prediction_event() {
  set_has_in_game_prediction_event();
  if (in_game_prediction_event_ == NULL) in_game_prediction_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.in_game_prediction_event)
  return in_game_prediction_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_in_game_prediction_event() {
  clear_has_in_game_prediction_event();
  ::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* temp = in_game_prediction_event_;
  in_game_prediction_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_in_game_prediction_event(::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* in_game_prediction_event) {
  delete in_game_prediction_event_;
  in_game_prediction_event_ = in_game_prediction_event;
  if (in_game_prediction_event) {
    set_has_in_game_prediction_event();
  } else {
    clear_has_in_game_prediction_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.in_game_prediction_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent prediction_event = 13;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_prediction_event() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_prediction_event() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_prediction_event() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_prediction_event() {
  if (prediction_event_ != NULL) prediction_event_->::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::Clear();
  clear_has_prediction_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::prediction_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.prediction_event)
  return prediction_event_ != NULL ? *prediction_event_ : *default_instance_->prediction_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_prediction_event() {
  set_has_prediction_event();
  if (prediction_event_ == NULL) prediction_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.prediction_event)
  return prediction_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_prediction_event() {
  clear_has_prediction_event();
  ::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* temp = prediction_event_;
  prediction_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_prediction_event(::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* prediction_event) {
  delete prediction_event_;
  prediction_event_ = prediction_event;
  if (prediction_event) {
    set_has_prediction_event();
  } else {
    clear_has_prediction_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.prediction_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent weekend_tourney_payout_event = 14;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_weekend_tourney_payout_event() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_weekend_tourney_payout_event() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_weekend_tourney_payout_event() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_weekend_tourney_payout_event() {
  if (weekend_tourney_payout_event_ != NULL) weekend_tourney_payout_event_->::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::Clear();
  clear_has_weekend_tourney_payout_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::weekend_tourney_payout_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.weekend_tourney_payout_event)
  return weekend_tourney_payout_event_ != NULL ? *weekend_tourney_payout_event_ : *default_instance_->weekend_tourney_payout_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_weekend_tourney_payout_event() {
  set_has_weekend_tourney_payout_event();
  if (weekend_tourney_payout_event_ == NULL) weekend_tourney_payout_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.weekend_tourney_payout_event)
  return weekend_tourney_payout_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_weekend_tourney_payout_event() {
  clear_has_weekend_tourney_payout_event();
  ::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* temp = weekend_tourney_payout_event_;
  weekend_tourney_payout_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_weekend_tourney_payout_event(::CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* weekend_tourney_payout_event) {
  delete weekend_tourney_payout_event_;
  weekend_tourney_payout_event_ = weekend_tourney_payout_event;
  if (weekend_tourney_payout_event) {
    set_has_weekend_tourney_payout_event();
  } else {
    clear_has_weekend_tourney_payout_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.weekend_tourney_payout_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent fantasy_reward_event = 15;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_fantasy_reward_event() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_fantasy_reward_event() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_fantasy_reward_event() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_fantasy_reward_event() {
  if (fantasy_reward_event_ != NULL) fantasy_reward_event_->::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::Clear();
  clear_has_fantasy_reward_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::fantasy_reward_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.fantasy_reward_event)
  return fantasy_reward_event_ != NULL ? *fantasy_reward_event_ : *default_instance_->fantasy_reward_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_fantasy_reward_event() {
  set_has_fantasy_reward_event();
  if (fantasy_reward_event_ == NULL) fantasy_reward_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.fantasy_reward_event)
  return fantasy_reward_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_fantasy_reward_event() {
  clear_has_fantasy_reward_event();
  ::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* temp = fantasy_reward_event_;
  fantasy_reward_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_fantasy_reward_event(::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* fantasy_reward_event) {
  delete fantasy_reward_event_;
  fantasy_reward_event_ = fantasy_reward_event;
  if (fantasy_reward_event) {
    set_has_fantasy_reward_event();
  } else {
    clear_has_fantasy_reward_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.fantasy_reward_event)
}

// optional .CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent bracket_reward_event = 16;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_bracket_reward_event() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_bracket_reward_event() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_bracket_reward_event() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_bracket_reward_event() {
  if (bracket_reward_event_ != NULL) bracket_reward_event_->::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::Clear();
  clear_has_bracket_reward_event();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::bracket_reward_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.bracket_reward_event)
  return bracket_reward_event_ != NULL ? *bracket_reward_event_ : *default_instance_->bracket_reward_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_bracket_reward_event() {
  set_has_bracket_reward_event();
  if (bracket_reward_event_ == NULL) bracket_reward_event_ = new ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent;
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.bracket_reward_event)
  return bracket_reward_event_;
}
inline ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_bracket_reward_event() {
  clear_has_bracket_reward_event();
  ::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* temp = bracket_reward_event_;
  bracket_reward_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_bracket_reward_event(::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* bracket_reward_event) {
  delete bracket_reward_event_;
  bracket_reward_event_ = bracket_reward_event;
  if (bracket_reward_event) {
    set_has_bracket_reward_event();
  } else {
    clear_has_bracket_reward_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.bracket_reward_event)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse

// optional bool result = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCRequestEventPointLogResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.result)
}

// repeated .CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction transactions = 2;
inline int CMsgClientToGCRequestEventPointLogResponse::transactions_size() const {
  return transactions_.size();
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_transactions() {
  transactions_.Clear();
}
inline const ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& CMsgClientToGCRequestEventPointLogResponse::transactions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_.Get(index);
}
inline ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* CMsgClientToGCRequestEventPointLogResponse::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_.Mutable(index);
}
inline ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* CMsgClientToGCRequestEventPointLogResponse::add_transactions() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >&
CMsgClientToGCRequestEventPointLogResponse::transactions() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >*
CMsgClientToGCRequestEventPointLogResponse::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestEventPointLogResponse.transactions)
  return &transactions_;
}

// optional uint32 event_id = 3;
inline bool CMsgClientToGCRequestEventPointLogResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestEventPointLogResponse.event_id)
  return event_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestEventPointLogResponse.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPublishUserStat

// optional uint32 user_stats_event = 1;
inline bool CMsgClientToGCPublishUserStat::has_user_stats_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPublishUserStat::set_has_user_stats_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCPublishUserStat::clear_has_user_stats_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCPublishUserStat::clear_user_stats_event() {
  user_stats_event_ = 0u;
  clear_has_user_stats_event();
}
inline ::google::protobuf::uint32 CMsgClientToGCPublishUserStat::user_stats_event() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPublishUserStat.user_stats_event)
  return user_stats_event_;
}
inline void CMsgClientToGCPublishUserStat::set_user_stats_event(::google::protobuf::uint32 value) {
  set_has_user_stats_event();
  user_stats_event_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCPublishUserStat.user_stats_event)
}

// optional uint64 reference_data = 2;
inline bool CMsgClientToGCPublishUserStat::has_reference_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCPublishUserStat::set_has_reference_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCPublishUserStat::clear_has_reference_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCPublishUserStat::clear_reference_data() {
  reference_data_ = GOOGLE_ULONGLONG(0);
  clear_has_reference_data();
}
inline ::google::protobuf::uint64 CMsgClientToGCPublishUserStat::reference_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPublishUserStat.reference_data)
  return reference_data_;
}
inline void CMsgClientToGCPublishUserStat::set_reference_data(::google::protobuf::uint64 value) {
  set_has_reference_data();
  reference_data_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCPublishUserStat.reference_data)
}

// -------------------------------------------------------------------

// CMsgClientToGCAddTI6TreeProgress

// optional uint32 trees = 1;
inline bool CMsgClientToGCAddTI6TreeProgress::has_trees() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCAddTI6TreeProgress::set_has_trees() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCAddTI6TreeProgress::clear_has_trees() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCAddTI6TreeProgress::clear_trees() {
  trees_ = 0u;
  clear_has_trees();
}
inline ::google::protobuf::uint32 CMsgClientToGCAddTI6TreeProgress::trees() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddTI6TreeProgress.trees)
  return trees_;
}
inline void CMsgClientToGCAddTI6TreeProgress::set_trees(::google::protobuf::uint32 value) {
  set_has_trees();
  trees_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddTI6TreeProgress.trees)
}

// -------------------------------------------------------------------

// CMsgClientToGCRedeemReward

// optional uint32 event_id = 1;
inline bool CMsgClientToGCRedeemReward::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRedeemReward::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRedeemReward::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRedeemReward::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRedeemReward::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRedeemReward.event_id)
  return event_id_;
}
inline void CMsgClientToGCRedeemReward::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRedeemReward.event_id)
}

// optional uint32 action_id = 2;
inline bool CMsgClientToGCRedeemReward::has_action_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRedeemReward::set_has_action_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRedeemReward::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRedeemReward::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRedeemReward::action_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRedeemReward.action_id)
  return action_id_;
}
inline void CMsgClientToGCRedeemReward::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRedeemReward.action_id)
}

// optional uint32 base_action_id = 3;
inline bool CMsgClientToGCRedeemReward::has_base_action_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRedeemReward::set_has_base_action_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRedeemReward::clear_has_base_action_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRedeemReward::clear_base_action_id() {
  base_action_id_ = 0u;
  clear_has_base_action_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRedeemReward::base_action_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRedeemReward.base_action_id)
  return base_action_id_;
}
inline void CMsgClientToGCRedeemReward::set_base_action_id(::google::protobuf::uint32 value) {
  set_has_base_action_id();
  base_action_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRedeemReward.base_action_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientRedeemRewardResponse

// optional .CMsgGCToClientRedeemRewardResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgGCToClientRedeemRewardResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientRedeemRewardResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientRedeemRewardResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientRedeemRewardResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgGCToClientRedeemRewardResponse_Result CMsgGCToClientRedeemRewardResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientRedeemRewardResponse.result)
  return static_cast< ::CMsgGCToClientRedeemRewardResponse_Result >(result_);
}
inline void CMsgGCToClientRedeemRewardResponse::set_result(::CMsgGCToClientRedeemRewardResponse_Result value) {
  assert(::CMsgGCToClientRedeemRewardResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientRedeemRewardResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaPlaysRemaining

// optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestLinaPlaysRemaining::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::EEvent CMsgClientToGCRequestLinaPlaysRemaining::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestLinaPlaysRemaining.event_id)
  return static_cast< ::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestLinaPlaysRemaining.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaPlaysRemainingResponse

// optional uint32 plays_remaining = 1;
inline bool CMsgClientToGCRequestLinaPlaysRemainingResponse::has_plays_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_has_plays_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_has_plays_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_plays_remaining() {
  plays_remaining_ = 0u;
  clear_has_plays_remaining();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaPlaysRemainingResponse::plays_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_remaining)
  return plays_remaining_;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_plays_remaining(::google::protobuf::uint32 value) {
  set_has_plays_remaining();
  plays_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_remaining)
}

// optional uint32 plays_total = 2;
inline bool CMsgClientToGCRequestLinaPlaysRemainingResponse::has_plays_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_has_plays_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_has_plays_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_plays_total() {
  plays_total_ = 0u;
  clear_has_plays_total();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaPlaysRemainingResponse::plays_total() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_total)
  return plays_total_;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_plays_total(::google::protobuf::uint32 value) {
  set_has_plays_total();
  plays_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_total)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaGameResult

// optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestLinaGameResult::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResult::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::EEvent CMsgClientToGCRequestLinaGameResult::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestLinaGameResult.event_id)
  return static_cast< ::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestLinaGameResult::set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestLinaGameResult.event_id)
}

// optional uint32 slot_chosen = 2;
inline bool CMsgClientToGCRequestLinaGameResult::has_slot_chosen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResult::set_has_slot_chosen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_has_slot_chosen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_slot_chosen() {
  slot_chosen_ = 0u;
  clear_has_slot_chosen();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaGameResult::slot_chosen() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestLinaGameResult.slot_chosen)
  return slot_chosen_;
}
inline void CMsgClientToGCRequestLinaGameResult::set_slot_chosen(::google::protobuf::uint32 value) {
  set_has_slot_chosen();
  slot_chosen_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestLinaGameResult.slot_chosen)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaGameResultResponse

// optional uint32 result = 1;
inline bool CMsgClientToGCRequestLinaGameResultResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaGameResultResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestLinaGameResultResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestLinaGameResultResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientQuestProgressUpdated_Challenge

// optional uint32 challenge_id = 1;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_challenge_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_challenge_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_challenge_id() {
  challenge_id_ = 0u;
  clear_has_challenge_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::challenge_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.Challenge.challenge_id)
  return challenge_id_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_challenge_id(::google::protobuf::uint32 value) {
  set_has_challenge_id();
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientQuestProgressUpdated.Challenge.challenge_id)
}

// optional uint32 time_completed = 2;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_time_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_time_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_time_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_time_completed() {
  time_completed_ = 0u;
  clear_has_time_completed();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::time_completed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.Challenge.time_completed)
  return time_completed_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_time_completed(::google::protobuf::uint32 value) {
  set_has_time_completed();
  time_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientQuestProgressUpdated.Challenge.time_completed)
}

// optional uint32 attempts = 3;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_attempts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_attempts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_attempts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_attempts() {
  attempts_ = 0u;
  clear_has_attempts();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::attempts() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.Challenge.attempts)
  return attempts_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_attempts(::google::protobuf::uint32 value) {
  set_has_attempts();
  attempts_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientQuestProgressUpdated.Challenge.attempts)
}

// optional uint32 hero_id = 4;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.Challenge.hero_id)
  return hero_id_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientQuestProgressUpdated.Challenge.hero_id)
}

// optional uint32 challenge_type = 5;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_challenge_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_challenge_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_challenge_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_challenge_type() {
  challenge_type_ = 0u;
  clear_has_challenge_type();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::challenge_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.Challenge.challenge_type)
  return challenge_type_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_challenge_type(::google::protobuf::uint32 value) {
  set_has_challenge_type();
  challenge_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientQuestProgressUpdated.Challenge.challenge_type)
}

// optional uint32 quest_rank = 6;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_quest_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_quest_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_quest_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_quest_rank() {
  quest_rank_ = 0u;
  clear_has_quest_rank();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::quest_rank() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.Challenge.quest_rank)
  return quest_rank_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_quest_rank(::google::protobuf::uint32 value) {
  set_has_quest_rank();
  quest_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientQuestProgressUpdated.Challenge.quest_rank)
}

// -------------------------------------------------------------------

// CMsgGCToClientQuestProgressUpdated

// optional uint32 quest_id = 1;
inline bool CMsgGCToClientQuestProgressUpdated::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated::quest_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.quest_id)
  return quest_id_;
}
inline void CMsgGCToClientQuestProgressUpdated::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientQuestProgressUpdated.quest_id)
}

// repeated .CMsgGCToClientQuestProgressUpdated.Challenge completed_challenges = 2;
inline int CMsgGCToClientQuestProgressUpdated::completed_challenges_size() const {
  return completed_challenges_.size();
}
inline void CMsgGCToClientQuestProgressUpdated::clear_completed_challenges() {
  completed_challenges_.Clear();
}
inline const ::CMsgGCToClientQuestProgressUpdated_Challenge& CMsgGCToClientQuestProgressUpdated::completed_challenges(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Get(index);
}
inline ::CMsgGCToClientQuestProgressUpdated_Challenge* CMsgGCToClientQuestProgressUpdated::mutable_completed_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Mutable(index);
}
inline ::CMsgGCToClientQuestProgressUpdated_Challenge* CMsgGCToClientQuestProgressUpdated::add_completed_challenges() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientQuestProgressUpdated_Challenge >&
CMsgGCToClientQuestProgressUpdated::completed_challenges() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientQuestProgressUpdated_Challenge >*
CMsgGCToClientQuestProgressUpdated::mutable_completed_challenges() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return &completed_challenges_;
}

// -------------------------------------------------------------------

// CMsgDOTARedeemItem

// optional uint64 currency_id = 1;
inline bool CMsgDOTARedeemItem::has_currency_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemItem::set_has_currency_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemItem::clear_has_currency_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemItem::clear_currency_id() {
  currency_id_ = GOOGLE_ULONGLONG(0);
  clear_has_currency_id();
}
inline ::google::protobuf::uint64 CMsgDOTARedeemItem::currency_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemItem.currency_id)
  return currency_id_;
}
inline void CMsgDOTARedeemItem::set_currency_id(::google::protobuf::uint64 value) {
  set_has_currency_id();
  currency_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemItem.currency_id)
}

// optional uint32 purchase_def = 2;
inline bool CMsgDOTARedeemItem::has_purchase_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARedeemItem::set_has_purchase_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARedeemItem::clear_has_purchase_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARedeemItem::clear_purchase_def() {
  purchase_def_ = 0u;
  clear_has_purchase_def();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemItem::purchase_def() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemItem.purchase_def)
  return purchase_def_;
}
inline void CMsgDOTARedeemItem::set_purchase_def(::google::protobuf::uint32 value) {
  set_has_purchase_def();
  purchase_def_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemItem.purchase_def)
}

// -------------------------------------------------------------------

// CMsgDOTARedeemItemResponse

// optional .CMsgDOTARedeemItemResponse.EResultCode response = 1 [default = k_Succeeded];
inline bool CMsgDOTARedeemItemResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemItemResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemItemResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemItemResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
inline ::CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemItemResponse.response)
  return static_cast< ::CMsgDOTARedeemItemResponse_EResultCode >(response_);
}
inline void CMsgDOTARedeemItemResponse::set_response(::CMsgDOTARedeemItemResponse_EResultCode value) {
  assert(::CMsgDOTARedeemItemResponse_EResultCode_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemItemResponse.response)
}

// -------------------------------------------------------------------

// CMsgPerfectWorldUserLookupRequest

// optional string user_name = 1;
inline bool CMsgPerfectWorldUserLookupRequest::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPerfectWorldUserLookupRequest::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPerfectWorldUserLookupRequest::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPerfectWorldUserLookupRequest::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgPerfectWorldUserLookupRequest::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgPerfectWorldUserLookupRequest.user_name)
  return *user_name_;
}
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPerfectWorldUserLookupRequest.user_name)
}
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPerfectWorldUserLookupRequest.user_name)
}
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPerfectWorldUserLookupRequest.user_name)
}
inline ::std::string* CMsgPerfectWorldUserLookupRequest::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPerfectWorldUserLookupRequest.user_name)
  return user_name_;
}
inline ::std::string* CMsgPerfectWorldUserLookupRequest::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPerfectWorldUserLookupRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPerfectWorldUserLookupRequest.user_name)
}

// -------------------------------------------------------------------

// CMsgPerfectWorldUserLookupResponse

// optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
inline bool CMsgPerfectWorldUserLookupResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPerfectWorldUserLookupResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse::result_code() const {
  // @@protoc_insertion_point(field_get:CMsgPerfectWorldUserLookupResponse.result_code)
  return static_cast< ::CMsgPerfectWorldUserLookupResponse_EResultCode >(result_code_);
}
inline void CMsgPerfectWorldUserLookupResponse::set_result_code(::CMsgPerfectWorldUserLookupResponse_EResultCode value) {
  assert(::CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(value));
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgPerfectWorldUserLookupResponse.result_code)
}

// optional uint32 account_id = 2;
inline bool CMsgPerfectWorldUserLookupResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPerfectWorldUserLookupResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPerfectWorldUserLookupResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPerfectWorldUserLookupResponse.account_id)
  return account_id_;
}
inline void CMsgPerfectWorldUserLookupResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPerfectWorldUserLookupResponse.account_id)
}

// -------------------------------------------------------------------

// CMsgNexonPartnerUpdate

// optional uint32 messagetype = 1;
inline bool CMsgNexonPartnerUpdate::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNexonPartnerUpdate::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNexonPartnerUpdate::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNexonPartnerUpdate::clear_messagetype() {
  messagetype_ = 0u;
  clear_has_messagetype();
}
inline ::google::protobuf::uint32 CMsgNexonPartnerUpdate::messagetype() const {
  // @@protoc_insertion_point(field_get:CMsgNexonPartnerUpdate.messagetype)
  return messagetype_;
}
inline void CMsgNexonPartnerUpdate::set_messagetype(::google::protobuf::uint32 value) {
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:CMsgNexonPartnerUpdate.messagetype)
}

// optional uint32 timeremaining = 2;
inline bool CMsgNexonPartnerUpdate::has_timeremaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNexonPartnerUpdate::set_has_timeremaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNexonPartnerUpdate::clear_has_timeremaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNexonPartnerUpdate::clear_timeremaining() {
  timeremaining_ = 0u;
  clear_has_timeremaining();
}
inline ::google::protobuf::uint32 CMsgNexonPartnerUpdate::timeremaining() const {
  // @@protoc_insertion_point(field_get:CMsgNexonPartnerUpdate.timeremaining)
  return timeremaining_;
}
inline void CMsgNexonPartnerUpdate::set_timeremaining(::google::protobuf::uint32 value) {
  set_has_timeremaining();
  timeremaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgNexonPartnerUpdate.timeremaining)
}

// optional bool terminate = 3;
inline bool CMsgNexonPartnerUpdate::has_terminate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNexonPartnerUpdate::set_has_terminate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgNexonPartnerUpdate::clear_has_terminate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgNexonPartnerUpdate::clear_terminate() {
  terminate_ = false;
  clear_has_terminate();
}
inline bool CMsgNexonPartnerUpdate::terminate() const {
  // @@protoc_insertion_point(field_get:CMsgNexonPartnerUpdate.terminate)
  return terminate_;
}
inline void CMsgNexonPartnerUpdate::set_terminate(bool value) {
  set_has_terminate();
  terminate_ = value;
  // @@protoc_insertion_point(field_set:CMsgNexonPartnerUpdate.terminate)
}

// -------------------------------------------------------------------

// CMsgMakeOffering

// optional uint64 item_id = 1;
inline bool CMsgMakeOffering::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMakeOffering::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMakeOffering::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMakeOffering::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgMakeOffering::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgMakeOffering.item_id)
  return item_id_;
}
inline void CMsgMakeOffering::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMakeOffering.item_id)
}

// -------------------------------------------------------------------

// CMsgRequestOfferings

// -------------------------------------------------------------------

// CMsgRequestOfferingsResponse_NewYearsOffering

// optional uint32 def_index = 1;
inline bool CMsgRequestOfferingsResponse_NewYearsOffering::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgRequestOfferingsResponse_NewYearsOffering::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgRequestOfferingsResponse.NewYearsOffering.def_index)
  return def_index_;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestOfferingsResponse.NewYearsOffering.def_index)
}

// optional uint64 item_id = 2;
inline bool CMsgRequestOfferingsResponse_NewYearsOffering::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgRequestOfferingsResponse_NewYearsOffering::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgRequestOfferingsResponse.NewYearsOffering.item_id)
  return item_id_;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestOfferingsResponse.NewYearsOffering.item_id)
}

// -------------------------------------------------------------------

// CMsgRequestOfferingsResponse

// repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
inline int CMsgRequestOfferingsResponse::offerings_size() const {
  return offerings_.size();
}
inline void CMsgRequestOfferingsResponse::clear_offerings() {
  offerings_.Clear();
}
inline const ::CMsgRequestOfferingsResponse_NewYearsOffering& CMsgRequestOfferingsResponse::offerings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRequestOfferingsResponse.offerings)
  return offerings_.Get(index);
}
inline ::CMsgRequestOfferingsResponse_NewYearsOffering* CMsgRequestOfferingsResponse::mutable_offerings(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgRequestOfferingsResponse.offerings)
  return offerings_.Mutable(index);
}
inline ::CMsgRequestOfferingsResponse_NewYearsOffering* CMsgRequestOfferingsResponse::add_offerings() {
  // @@protoc_insertion_point(field_add:CMsgRequestOfferingsResponse.offerings)
  return offerings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgRequestOfferingsResponse_NewYearsOffering >&
CMsgRequestOfferingsResponse::offerings() const {
  // @@protoc_insertion_point(field_list:CMsgRequestOfferingsResponse.offerings)
  return offerings_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgRequestOfferingsResponse_NewYearsOffering >*
CMsgRequestOfferingsResponse::mutable_offerings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRequestOfferingsResponse.offerings)
  return &offerings_;
}

// optional bool completed = 2;
inline bool CMsgRequestOfferingsResponse::has_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestOfferingsResponse::set_has_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestOfferingsResponse::clear_has_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestOfferingsResponse::clear_completed() {
  completed_ = false;
  clear_has_completed();
}
inline bool CMsgRequestOfferingsResponse::completed() const {
  // @@protoc_insertion_point(field_get:CMsgRequestOfferingsResponse.completed)
  return completed_;
}
inline void CMsgRequestOfferingsResponse::set_completed(bool value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestOfferingsResponse.completed)
}

// -------------------------------------------------------------------

// CMsgDOTAPCBangTimedReward

// optional string persona = 1;
inline bool CMsgDOTAPCBangTimedReward::has_persona() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::set_has_persona() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPCBangTimedReward::clear_has_persona() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPCBangTimedReward::clear_persona() {
  if (persona_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_->clear();
  }
  clear_has_persona();
}
inline const ::std::string& CMsgDOTAPCBangTimedReward::persona() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPCBangTimedReward.persona)
  return *persona_;
}
inline void CMsgDOTAPCBangTimedReward::set_persona(const ::std::string& value) {
  set_has_persona();
  if (persona_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_ = new ::std::string;
  }
  persona_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPCBangTimedReward.persona)
}
inline void CMsgDOTAPCBangTimedReward::set_persona(const char* value) {
  set_has_persona();
  if (persona_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_ = new ::std::string;
  }
  persona_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPCBangTimedReward.persona)
}
inline void CMsgDOTAPCBangTimedReward::set_persona(const char* value, size_t size) {
  set_has_persona();
  if (persona_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_ = new ::std::string;
  }
  persona_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPCBangTimedReward.persona)
}
inline ::std::string* CMsgDOTAPCBangTimedReward::mutable_persona() {
  set_has_persona();
  if (persona_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPCBangTimedReward.persona)
  return persona_;
}
inline ::std::string* CMsgDOTAPCBangTimedReward::release_persona() {
  clear_has_persona();
  if (persona_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_;
    persona_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPCBangTimedReward::set_allocated_persona(::std::string* persona) {
  if (persona_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_;
  }
  if (persona) {
    set_has_persona();
    persona_ = persona;
  } else {
    clear_has_persona();
    persona_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPCBangTimedReward.persona)
}

// optional uint32 itemdef = 2;
inline bool CMsgDOTAPCBangTimedReward::has_itemdef() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::set_has_itemdef() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPCBangTimedReward::clear_has_itemdef() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPCBangTimedReward::clear_itemdef() {
  itemdef_ = 0u;
  clear_has_itemdef();
}
inline ::google::protobuf::uint32 CMsgDOTAPCBangTimedReward::itemdef() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPCBangTimedReward.itemdef)
  return itemdef_;
}
inline void CMsgDOTAPCBangTimedReward::set_itemdef(::google::protobuf::uint32 value) {
  set_has_itemdef();
  itemdef_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPCBangTimedReward.itemdef)
}

// optional string pcbangname = 3;
inline bool CMsgDOTAPCBangTimedReward::has_pcbangname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::set_has_pcbangname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPCBangTimedReward::clear_has_pcbangname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPCBangTimedReward::clear_pcbangname() {
  if (pcbangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pcbangname_->clear();
  }
  clear_has_pcbangname();
}
inline const ::std::string& CMsgDOTAPCBangTimedReward::pcbangname() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPCBangTimedReward.pcbangname)
  return *pcbangname_;
}
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const ::std::string& value) {
  set_has_pcbangname();
  if (pcbangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pcbangname_ = new ::std::string;
  }
  pcbangname_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPCBangTimedReward.pcbangname)
}
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const char* value) {
  set_has_pcbangname();
  if (pcbangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pcbangname_ = new ::std::string;
  }
  pcbangname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPCBangTimedReward.pcbangname)
}
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const char* value, size_t size) {
  set_has_pcbangname();
  if (pcbangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pcbangname_ = new ::std::string;
  }
  pcbangname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPCBangTimedReward.pcbangname)
}
inline ::std::string* CMsgDOTAPCBangTimedReward::mutable_pcbangname() {
  set_has_pcbangname();
  if (pcbangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pcbangname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPCBangTimedReward.pcbangname)
  return pcbangname_;
}
inline ::std::string* CMsgDOTAPCBangTimedReward::release_pcbangname() {
  clear_has_pcbangname();
  if (pcbangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pcbangname_;
    pcbangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPCBangTimedReward::set_allocated_pcbangname(::std::string* pcbangname) {
  if (pcbangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pcbangname_;
  }
  if (pcbangname) {
    set_has_pcbangname();
    pcbangname_ = pcbangname;
  } else {
    clear_has_pcbangname();
    pcbangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPCBangTimedReward.pcbangname)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumInGamePredictionResults_PredictionResult

// optional uint32 prediction_id = 1;
inline bool CMsgDOTACompendiumInGamePredictionResults_PredictionResult::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_has_prediction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_has_prediction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_prediction_id() {
  prediction_id_ = 0u;
  clear_has_prediction_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults_PredictionResult::prediction_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_id)
  return prediction_id_;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_prediction_id(::google::protobuf::uint32 value) {
  set_has_prediction_id();
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_id)
}

// optional uint32 prediction_value = 2;
inline bool CMsgDOTACompendiumInGamePredictionResults_PredictionResult::has_prediction_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_has_prediction_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_has_prediction_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_prediction_value() {
  prediction_value_ = 0u;
  clear_has_prediction_value();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults_PredictionResult::prediction_value() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_value)
  return prediction_value_;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_prediction_value(::google::protobuf::uint32 value) {
  set_has_prediction_value();
  prediction_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_value)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumInGamePredictionResults

// repeated .CMsgDOTACompendiumInGamePredictionResults.PredictionResult results = 1;
inline int CMsgDOTACompendiumInGamePredictionResults::results_size() const {
  return results_.size();
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_results() {
  results_.Clear();
}
inline const ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult& CMsgDOTACompendiumInGamePredictionResults::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Get(index);
}
inline ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* CMsgDOTACompendiumInGamePredictionResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Mutable(index);
}
inline ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* CMsgDOTACompendiumInGamePredictionResults::add_results() {
  // @@protoc_insertion_point(field_add:CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >&
CMsgDOTACompendiumInGamePredictionResults::results() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACompendiumInGamePredictionResults.results)
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >*
CMsgDOTACompendiumInGamePredictionResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACompendiumInGamePredictionResults.results)
  return &results_;
}

// optional uint32 league_id = 2;
inline bool CMsgDOTACompendiumInGamePredictionResults::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumInGamePredictionResults.league_id)
  return league_id_;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumInGamePredictionResults.league_id)
}

// optional bool predictions_closed = 3;
inline bool CMsgDOTACompendiumInGamePredictionResults::has_predictions_closed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_has_predictions_closed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_has_predictions_closed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_predictions_closed() {
  predictions_closed_ = false;
  clear_has_predictions_closed();
}
inline bool CMsgDOTACompendiumInGamePredictionResults::predictions_closed() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumInGamePredictionResults.predictions_closed)
  return predictions_closed_;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_predictions_closed(bool value) {
  set_has_predictions_closed();
  predictions_closed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumInGamePredictionResults.predictions_closed)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePrediction_Prediction

// optional uint32 prediction_id = 1;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_has_prediction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_has_prediction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_prediction_id() {
  prediction_id_ = 0u;
  clear_has_prediction_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::prediction_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_id)
  return prediction_id_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_prediction_id(::google::protobuf::uint32 value) {
  set_has_prediction_id();
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_id)
}

// optional uint32 prediction_value = 2;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::has_prediction_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_has_prediction_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_has_prediction_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_prediction_value() {
  prediction_value_ = 0u;
  clear_has_prediction_value();
}
inline ::google::protobuf::uint32 CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::prediction_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_value)
  return prediction_value_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_prediction_value(::google::protobuf::uint32 value) {
  set_has_prediction_value();
  prediction_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePrediction

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSelectCompendiumInGamePrediction::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectCompendiumInGamePrediction.match_id)
  return match_id_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectCompendiumInGamePrediction.match_id)
}

// repeated .CMsgClientToGCSelectCompendiumInGamePrediction.Prediction predictions = 2;
inline int CMsgClientToGCSelectCompendiumInGamePrediction::predictions_size() const {
  return predictions_.size();
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_predictions() {
  predictions_.Clear();
}
inline const ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& CMsgClientToGCSelectCompendiumInGamePrediction::predictions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Get(index);
}
inline ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* CMsgClientToGCSelectCompendiumInGamePrediction::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Mutable(index);
}
inline ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* CMsgClientToGCSelectCompendiumInGamePrediction::add_predictions() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >&
CMsgClientToGCSelectCompendiumInGamePrediction::predictions() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >*
CMsgClientToGCSelectCompendiumInGamePrediction::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return &predictions_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePredictionResponse

// optional .CMsgClientToGCSelectCompendiumInGamePredictionResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgClientToGCSelectCompendiumInGamePredictionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectCompendiumInGamePredictionResponse.result)
  return static_cast< ::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult >(result_);
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::set_result(::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value) {
  assert(::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectCompendiumInGamePredictionResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCOpenPlayerCardPack

// optional uint64 player_card_pack_item_id = 1;
inline bool CMsgClientToGCOpenPlayerCardPack::has_player_card_pack_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCOpenPlayerCardPack::set_has_player_card_pack_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPack::clear_has_player_card_pack_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPack::clear_player_card_pack_item_id() {
  player_card_pack_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_card_pack_item_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCOpenPlayerCardPack::player_card_pack_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCOpenPlayerCardPack.player_card_pack_item_id)
  return player_card_pack_item_id_;
}
inline void CMsgClientToGCOpenPlayerCardPack::set_player_card_pack_item_id(::google::protobuf::uint64 value) {
  set_has_player_card_pack_item_id();
  player_card_pack_item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCOpenPlayerCardPack.player_card_pack_item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCOpenPlayerCardPackResponse

// optional .CMsgClientToGCOpenPlayerCardPackResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCOpenPlayerCardPackResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCOpenPlayerCardPackResponse.result)
  return static_cast< ::CMsgClientToGCOpenPlayerCardPackResponse_Result >(result_);
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_result(::CMsgClientToGCOpenPlayerCardPackResponse_Result value) {
  assert(::CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCOpenPlayerCardPackResponse.result)
}

// repeated uint64 player_card_item_ids = 2;
inline int CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids_size() const {
  return player_card_item_ids_.size();
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_player_card_item_ids() {
  player_card_item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return player_card_item_ids_.Get(index);
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_player_card_item_ids(int index, ::google::protobuf::uint64 value) {
  player_card_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::add_player_card_item_ids(::google::protobuf::uint64 value) {
  player_card_item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return player_card_item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCOpenPlayerCardPackResponse::mutable_player_card_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return &player_card_item_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRecyclePlayerCard

// optional uint64 player_card_item_id = 1;
inline bool CMsgClientToGCRecyclePlayerCard::has_player_card_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCard::set_has_player_card_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCard::clear_has_player_card_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCard::clear_player_card_item_id() {
  player_card_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_card_item_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRecyclePlayerCard::player_card_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecyclePlayerCard.player_card_item_id)
  return player_card_item_id_;
}
inline void CMsgClientToGCRecyclePlayerCard::set_player_card_item_id(::google::protobuf::uint64 value) {
  set_has_player_card_item_id();
  player_card_item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecyclePlayerCard.player_card_item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecyclePlayerCardResponse

// optional .CMsgClientToGCRecyclePlayerCardResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCRecyclePlayerCardResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecyclePlayerCardResponse.result)
  return static_cast< ::CMsgClientToGCRecyclePlayerCardResponse_Result >(result_);
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_result(::CMsgClientToGCRecyclePlayerCardResponse_Result value) {
  assert(::CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecyclePlayerCardResponse.result)
}

// optional uint32 dust_amount = 2;
inline bool CMsgClientToGCRecyclePlayerCardResponse::has_dust_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_has_dust_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_has_dust_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_dust_amount() {
  dust_amount_ = 0u;
  clear_has_dust_amount();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecyclePlayerCardResponse::dust_amount() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecyclePlayerCardResponse.dust_amount)
  return dust_amount_;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_dust_amount(::google::protobuf::uint32 value) {
  set_has_dust_amount();
  dust_amount_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecyclePlayerCardResponse.dust_amount)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreatePlayerCardPack

// optional uint64 card_dust_item_id = 1;
inline bool CMsgClientToGCCreatePlayerCardPack::has_card_dust_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_has_card_dust_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_has_card_dust_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_card_dust_item_id() {
  card_dust_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_card_dust_item_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreatePlayerCardPack::card_dust_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreatePlayerCardPack.card_dust_item_id)
  return card_dust_item_id_;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_card_dust_item_id(::google::protobuf::uint64 value) {
  set_has_card_dust_item_id();
  card_dust_item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreatePlayerCardPack.card_dust_item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreatePlayerCardPackResponse

// optional .CMsgClientToGCCreatePlayerCardPackResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCreatePlayerCardPackResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreatePlayerCardPackResponse.result)
  return static_cast< ::CMsgClientToGCCreatePlayerCardPackResponse_Result >(result_);
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::set_result(::CMsgClientToGCCreatePlayerCardPackResponse_Result value) {
  assert(::CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreatePlayerCardPackResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Questlines

// optional string name = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCToClientBattlePassRollup_International2016_Questlines::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  return *name_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
inline ::std::string* CMsgGCToClientBattlePassRollup_International2016_Questlines::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  return name_;
}
inline ::std::string* CMsgGCToClientBattlePassRollup_International2016_Questlines::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}

// optional uint32 onestar = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_onestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_onestar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_onestar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_onestar() {
  onestar_ = 0u;
  clear_has_onestar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::onestar() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Questlines.onestar)
  return onestar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_onestar(::google::protobuf::uint32 value) {
  set_has_onestar();
  onestar_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Questlines.onestar)
}

// optional uint32 twostar = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_twostar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_twostar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_twostar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_twostar() {
  twostar_ = 0u;
  clear_has_twostar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::twostar() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Questlines.twostar)
  return twostar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_twostar(::google::protobuf::uint32 value) {
  set_has_twostar();
  twostar_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Questlines.twostar)
}

// optional uint32 threestar = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_threestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_threestar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_threestar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_threestar() {
  threestar_ = 0u;
  clear_has_threestar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::threestar() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Questlines.threestar)
  return threestar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_threestar(::google::protobuf::uint32 value) {
  set_has_threestar();
  threestar_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Questlines.threestar)
}

// optional uint32 total = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::total() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Questlines.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Questlines.total)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_total_wagered() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_total_wagered() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  clear_has_total_wagered();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  set_has_total_wagered();
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_total_won() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_total_won() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_won() {
  total_won_ = 0u;
  clear_has_total_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_won(::google::protobuf::uint32 value) {
  set_has_total_won();
  total_won_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_average_won() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_average_won() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_average_won() {
  average_won_ = 0u;
  clear_has_average_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_average_won(::google::protobuf::uint32 value) {
  set_has_average_won();
  average_won_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_success_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_success_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  clear_has_success_rate();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  set_has_success_rate();
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_total_tips() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_total_tips() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  clear_has_total_tips();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  set_has_total_tips();
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_has_completed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_has_completed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_completed() {
  completed_ = 0u;
  clear_has_completed();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_completed(::google::protobuf::uint32 value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::total() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::points() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_BattleCup

// optional uint32 wins = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_BattleCup::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_has_wins() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_has_wins() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_BattleCup::wins() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.BattleCup.wins)
  return wins_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.BattleCup.wins)
}

// optional uint32 score = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_BattleCup::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_BattleCup::score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.BattleCup.score)
  return score_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.BattleCup.score)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_has_correct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_has_correct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_correct() {
  correct_ = 0u;
  clear_has_correct();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_correct(::google::protobuf::uint32 value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::total() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::points() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_has_correct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_has_correct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_correct() {
  correct_ = 0u;
  clear_has_correct();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_correct(::google::protobuf::uint32 value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_has_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_has_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Bracket::points() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_has_total_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline float CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_total_score(float value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_has_percentile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_has_percentile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  clear_has_percentile();
}
inline float CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_percentile(float value) {
  set_has_percentile();
  percentile_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_battle_pass_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_battle_pass_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  clear_has_battle_pass_level();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_battle_pass_level(::google::protobuf::uint32 value) {
  set_has_battle_pass_level();
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollup_International2016.battle_pass_level)
}

// repeated .CMsgGCToClientBattlePassRollup_International2016.Questlines questlines = 2;
inline int CMsgGCToClientBattlePassRollup_International2016::questlines_size() const {
  return questlines_.size();
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_questlines() {
  questlines_.Clear();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_Questlines& CMsgGCToClientBattlePassRollup_International2016::questlines(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Get(index);
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Questlines* CMsgGCToClientBattlePassRollup_International2016::mutable_questlines(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Mutable(index);
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Questlines* CMsgGCToClientBattlePassRollup_International2016::add_questlines() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_Questlines >&
CMsgGCToClientBattlePassRollup_International2016::questlines() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_Questlines >*
CMsgGCToClientBattlePassRollup_International2016::mutable_questlines() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientBattlePassRollup_International2016.questlines)
  return &questlines_;
}

// optional .CMsgGCToClientBattlePassRollup_International2016.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_wagering() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_wagering() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_wagering() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_wagering() {
  if (wagering_ != NULL) wagering_->::CMsgGCToClientBattlePassRollup_International2016_Wagering::Clear();
  clear_has_wagering();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_Wagering& CMsgGCToClientBattlePassRollup_International2016::wagering() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.wagering)
  return wagering_ != NULL ? *wagering_ : *default_instance_->wagering_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Wagering* CMsgGCToClientBattlePassRollup_International2016::mutable_wagering() {
  set_has_wagering();
  if (wagering_ == NULL) wagering_ = new ::CMsgGCToClientBattlePassRollup_International2016_Wagering;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.wagering)
  return wagering_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Wagering* CMsgGCToClientBattlePassRollup_International2016::release_wagering() {
  clear_has_wagering();
  ::CMsgGCToClientBattlePassRollup_International2016_Wagering* temp = wagering_;
  wagering_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_wagering(::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering) {
  delete wagering_;
  wagering_ = wagering;
  if (wagering) {
    set_has_wagering();
  } else {
    clear_has_wagering();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollup_International2016.wagering)
}

// optional .CMsgGCToClientBattlePassRollup_International2016.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_achievements() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_achievements() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_achievements() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_achievements() {
  if (achievements_ != NULL) achievements_->::CMsgGCToClientBattlePassRollup_International2016_Achievements::Clear();
  clear_has_achievements();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_Achievements& CMsgGCToClientBattlePassRollup_International2016::achievements() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.achievements)
  return achievements_ != NULL ? *achievements_ : *default_instance_->achievements_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Achievements* CMsgGCToClientBattlePassRollup_International2016::mutable_achievements() {
  set_has_achievements();
  if (achievements_ == NULL) achievements_ = new ::CMsgGCToClientBattlePassRollup_International2016_Achievements;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.achievements)
  return achievements_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Achievements* CMsgGCToClientBattlePassRollup_International2016::release_achievements() {
  clear_has_achievements();
  ::CMsgGCToClientBattlePassRollup_International2016_Achievements* temp = achievements_;
  achievements_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_achievements(::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements) {
  delete achievements_;
  achievements_ = achievements;
  if (achievements) {
    set_has_achievements();
  } else {
    clear_has_achievements();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollup_International2016.achievements)
}

// optional .CMsgGCToClientBattlePassRollup_International2016.BattleCup battle_cup = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_battle_cup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_battle_cup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_battle_cup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_battle_cup() {
  if (battle_cup_ != NULL) battle_cup_->::CMsgGCToClientBattlePassRollup_International2016_BattleCup::Clear();
  clear_has_battle_cup();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_BattleCup& CMsgGCToClientBattlePassRollup_International2016::battle_cup() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  return battle_cup_ != NULL ? *battle_cup_ : *default_instance_->battle_cup_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_BattleCup* CMsgGCToClientBattlePassRollup_International2016::mutable_battle_cup() {
  set_has_battle_cup();
  if (battle_cup_ == NULL) battle_cup_ = new ::CMsgGCToClientBattlePassRollup_International2016_BattleCup;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  return battle_cup_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_BattleCup* CMsgGCToClientBattlePassRollup_International2016::release_battle_cup() {
  clear_has_battle_cup();
  ::CMsgGCToClientBattlePassRollup_International2016_BattleCup* temp = battle_cup_;
  battle_cup_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_battle_cup(::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup) {
  delete battle_cup_;
  battle_cup_ = battle_cup;
  if (battle_cup) {
    set_has_battle_cup();
  } else {
    clear_has_battle_cup();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollup_International2016.battle_cup)
}

// optional .CMsgGCToClientBattlePassRollup_International2016.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_predictions() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_predictions() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_predictions() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_predictions() {
  if (predictions_ != NULL) predictions_->::CMsgGCToClientBattlePassRollup_International2016_Predictions::Clear();
  clear_has_predictions();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_Predictions& CMsgGCToClientBattlePassRollup_International2016::predictions() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.predictions)
  return predictions_ != NULL ? *predictions_ : *default_instance_->predictions_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Predictions* CMsgGCToClientBattlePassRollup_International2016::mutable_predictions() {
  set_has_predictions();
  if (predictions_ == NULL) predictions_ = new ::CMsgGCToClientBattlePassRollup_International2016_Predictions;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.predictions)
  return predictions_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Predictions* CMsgGCToClientBattlePassRollup_International2016::release_predictions() {
  clear_has_predictions();
  ::CMsgGCToClientBattlePassRollup_International2016_Predictions* temp = predictions_;
  predictions_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_predictions(::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions) {
  delete predictions_;
  predictions_ = predictions;
  if (predictions) {
    set_has_predictions();
  } else {
    clear_has_predictions();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollup_International2016.predictions)
}

// optional .CMsgGCToClientBattlePassRollup_International2016.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_bracket() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_bracket() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_bracket() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_bracket() {
  if (bracket_ != NULL) bracket_->::CMsgGCToClientBattlePassRollup_International2016_Bracket::Clear();
  clear_has_bracket();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_Bracket& CMsgGCToClientBattlePassRollup_International2016::bracket() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.bracket)
  return bracket_ != NULL ? *bracket_ : *default_instance_->bracket_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Bracket* CMsgGCToClientBattlePassRollup_International2016::mutable_bracket() {
  set_has_bracket();
  if (bracket_ == NULL) bracket_ = new ::CMsgGCToClientBattlePassRollup_International2016_Bracket;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.bracket)
  return bracket_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_Bracket* CMsgGCToClientBattlePassRollup_International2016::release_bracket() {
  clear_has_bracket();
  ::CMsgGCToClientBattlePassRollup_International2016_Bracket* temp = bracket_;
  bracket_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_bracket(::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket) {
  delete bracket_;
  bracket_ = bracket;
  if (bracket) {
    set_has_bracket();
  } else {
    clear_has_bracket();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollup_International2016.bracket)
}

// repeated .CMsgGCToClientBattlePassRollup_International2016.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_International2016::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_player_cards() {
  player_cards_.Clear();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard& CMsgGCToClientBattlePassRollup_International2016::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Get(index);
}
inline ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* CMsgGCToClientBattlePassRollup_International2016::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Mutable(index);
}
inline ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* CMsgGCToClientBattlePassRollup_International2016::add_player_cards() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >&
CMsgGCToClientBattlePassRollup_International2016::player_cards() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >*
CMsgGCToClientBattlePassRollup_International2016::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return &player_cards_;
}

// optional .CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_fantasy_challenge() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_fantasy_challenge() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_fantasy_challenge() {
  if (fantasy_challenge_ != NULL) fantasy_challenge_->::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::Clear();
  clear_has_fantasy_challenge();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& CMsgGCToClientBattlePassRollup_International2016::fantasy_challenge() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  return fantasy_challenge_ != NULL ? *fantasy_challenge_ : *default_instance_->fantasy_challenge_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_International2016::mutable_fantasy_challenge() {
  set_has_fantasy_challenge();
  if (fantasy_challenge_ == NULL) fantasy_challenge_ = new ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  return fantasy_challenge_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_International2016::release_fantasy_challenge() {
  clear_has_fantasy_challenge();
  ::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_fantasy_challenge(::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge) {
  delete fantasy_challenge_;
  fantasy_challenge_ = fantasy_challenge;
  if (fantasy_challenge) {
    set_has_fantasy_challenge();
  } else {
    clear_has_fantasy_challenge();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupRequest

// optional uint32 event_id = 1;
inline bool CMsgGCToClientBattlePassRollupRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupRequest::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollupRequest.event_id)
  return event_id_;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollupRequest.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgGCToClientBattlePassRollupRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollupRequest.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollupRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupResponse

// optional .CMsgGCToClientBattlePassRollup_International2016 event_ti6 = 1;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_ti6() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_has_event_ti6() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_has_event_ti6() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_ti6() {
  if (event_ti6_ != NULL) event_ti6_->::CMsgGCToClientBattlePassRollup_International2016::Clear();
  clear_has_event_ti6();
}
inline const ::CMsgGCToClientBattlePassRollup_International2016& CMsgGCToClientBattlePassRollupResponse::event_ti6() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollupResponse.event_ti6)
  return event_ti6_ != NULL ? *event_ti6_ : *default_instance_->event_ti6_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016* CMsgGCToClientBattlePassRollupResponse::mutable_event_ti6() {
  set_has_event_ti6();
  if (event_ti6_ == NULL) event_ti6_ = new ::CMsgGCToClientBattlePassRollup_International2016;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBattlePassRollupResponse.event_ti6)
  return event_ti6_;
}
inline ::CMsgGCToClientBattlePassRollup_International2016* CMsgGCToClientBattlePassRollupResponse::release_event_ti6() {
  clear_has_event_ti6();
  ::CMsgGCToClientBattlePassRollup_International2016* temp = event_ti6_;
  event_ti6_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_ti6(::CMsgGCToClientBattlePassRollup_International2016* event_ti6) {
  delete event_ti6_;
  event_ti6_ = event_ti6;
  if (event_ti6) {
    set_has_event_ti6();
  } else {
    clear_has_event_ti6();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBattlePassRollupResponse.event_ti6)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupListRequest

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollupListRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupListRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupListRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupListRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupListRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollupListRequest.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollupListRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollupListRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupListResponse

// repeated uint32 event_id = 1;
inline int CMsgGCToClientBattlePassRollupListResponse::event_id_size() const {
  return event_id_.size();
}
inline void CMsgGCToClientBattlePassRollupListResponse::clear_event_id() {
  event_id_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupListResponse::event_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBattlePassRollupListResponse.event_id)
  return event_id_.Get(index);
}
inline void CMsgGCToClientBattlePassRollupListResponse::set_event_id(int index, ::google::protobuf::uint32 value) {
  event_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientBattlePassRollupListResponse.event_id)
}
inline void CMsgGCToClientBattlePassRollupListResponse::add_event_id(::google::protobuf::uint32 value) {
  event_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientBattlePassRollupListResponse.event_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientBattlePassRollupListResponse::event_id() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientBattlePassRollupListResponse.event_id)
  return event_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientBattlePassRollupListResponse::mutable_event_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientBattlePassRollupListResponse.event_id)
  return &event_id_;
}

// -------------------------------------------------------------------

// CMsgClientToGCTransferSeasonalMMRRequest

// optional bool is_party = 1;
inline bool CMsgClientToGCTransferSeasonalMMRRequest::has_is_party() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::set_has_is_party() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::clear_has_is_party() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::clear_is_party() {
  is_party_ = false;
  clear_has_is_party();
}
inline bool CMsgClientToGCTransferSeasonalMMRRequest::is_party() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTransferSeasonalMMRRequest.is_party)
  return is_party_;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::set_is_party(bool value) {
  set_has_is_party();
  is_party_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTransferSeasonalMMRRequest.is_party)
}

// -------------------------------------------------------------------

// CMsgClientToGCTransferSeasonalMMRResponse

// optional bool success = 1;
inline bool CMsgClientToGCTransferSeasonalMMRResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgClientToGCTransferSeasonalMMRResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTransferSeasonalMMRResponse.success)
  return success_;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTransferSeasonalMMRResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCToClientPlaytestStatus

// optional bool active = 1;
inline bool CMsgGCToClientPlaytestStatus::has_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientPlaytestStatus::set_has_active() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientPlaytestStatus::clear_has_active() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientPlaytestStatus::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool CMsgGCToClientPlaytestStatus::active() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlaytestStatus.active)
  return active_;
}
inline void CMsgGCToClientPlaytestStatus::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlaytestStatus.active)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinPlaytest

// optional uint32 client_version = 1;
inline bool CMsgClientToGCJoinPlaytest::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCJoinPlaytest::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCJoinPlaytest::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCJoinPlaytest::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgClientToGCJoinPlaytest::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCJoinPlaytest.client_version)
  return client_version_;
}
inline void CMsgClientToGCJoinPlaytest::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCJoinPlaytest.client_version)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinPlaytestResponse

// optional string error = 1;
inline bool CMsgClientToGCJoinPlaytestResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCJoinPlaytestResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCJoinPlaytestResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCJoinPlaytestResponse::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& CMsgClientToGCJoinPlaytestResponse::error() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCJoinPlaytestResponse.error)
  return *error_;
}
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCJoinPlaytestResponse.error)
}
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCJoinPlaytestResponse.error)
}
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCJoinPlaytestResponse.error)
}
inline ::std::string* CMsgClientToGCJoinPlaytestResponse::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCJoinPlaytestResponse.error)
  return error_;
}
inline ::std::string* CMsgClientToGCJoinPlaytestResponse::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCJoinPlaytestResponse::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCJoinPlaytestResponse.error)
}

// -------------------------------------------------------------------

// CMsgDOTAEventInvite_Team

// optional uint32 team_id = 1;
inline bool CMsgDOTAEventInvite_Team::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEventInvite_Team::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEventInvite_Team::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEventInvite.Team.team_id)
  return team_id_;
}
inline void CMsgDOTAEventInvite_Team::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEventInvite.Team.team_id)
}

// optional uint32 announcement_date = 2;
inline bool CMsgDOTAEventInvite_Team::has_announcement_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_announcement_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_announcement_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEventInvite_Team::clear_announcement_date() {
  announcement_date_ = 0u;
  clear_has_announcement_date();
}
inline ::google::protobuf::uint32 CMsgDOTAEventInvite_Team::announcement_date() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEventInvite.Team.announcement_date)
  return announcement_date_;
}
inline void CMsgDOTAEventInvite_Team::set_announcement_date(::google::protobuf::uint32 value) {
  set_has_announcement_date();
  announcement_date_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEventInvite.Team.announcement_date)
}

// optional string team_name = 3;
inline bool CMsgDOTAEventInvite_Team::has_team_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_team_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAEventInvite_Team::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAEventInvite_Team::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEventInvite.Team.team_name)
  return *team_name_;
}
inline void CMsgDOTAEventInvite_Team::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEventInvite.Team.team_name)
}
inline void CMsgDOTAEventInvite_Team::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEventInvite.Team.team_name)
}
inline void CMsgDOTAEventInvite_Team::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEventInvite.Team.team_name)
}
inline ::std::string* CMsgDOTAEventInvite_Team::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEventInvite.Team.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTAEventInvite_Team::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEventInvite_Team::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEventInvite.Team.team_name)
}

// optional uint32 invite_type = 4;
inline bool CMsgDOTAEventInvite_Team::has_invite_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_invite_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_invite_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAEventInvite_Team::clear_invite_type() {
  invite_type_ = 0u;
  clear_has_invite_type();
}
inline ::google::protobuf::uint32 CMsgDOTAEventInvite_Team::invite_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEventInvite.Team.invite_type)
  return invite_type_;
}
inline void CMsgDOTAEventInvite_Team::set_invite_type(::google::protobuf::uint32 value) {
  set_has_invite_type();
  invite_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEventInvite.Team.invite_type)
}

// -------------------------------------------------------------------

// CMsgDOTAEventInvite

// repeated .CMsgDOTAEventInvite.Team teams = 1;
inline int CMsgDOTAEventInvite::teams_size() const {
  return teams_.size();
}
inline void CMsgDOTAEventInvite::clear_teams() {
  teams_.Clear();
}
inline const ::CMsgDOTAEventInvite_Team& CMsgDOTAEventInvite::teams(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEventInvite.teams)
  return teams_.Get(index);
}
inline ::CMsgDOTAEventInvite_Team* CMsgDOTAEventInvite::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEventInvite.teams)
  return teams_.Mutable(index);
}
inline ::CMsgDOTAEventInvite_Team* CMsgDOTAEventInvite::add_teams() {
  // @@protoc_insertion_point(field_add:CMsgDOTAEventInvite.teams)
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAEventInvite_Team >&
CMsgDOTAEventInvite::teams() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAEventInvite.teams)
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAEventInvite_Team >*
CMsgDOTAEventInvite::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAEventInvite.teams)
  return &teams_;
}

// -------------------------------------------------------------------

// CMsgDOTASetFavoriteTeam

// optional uint32 team_id = 1;
inline bool CMsgDOTASetFavoriteTeam::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetFavoriteTeam::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetFavoriteTeam::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetFavoriteTeam::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTASetFavoriteTeam::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetFavoriteTeam.team_id)
  return team_id_;
}
inline void CMsgDOTASetFavoriteTeam::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetFavoriteTeam.team_id)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgDOTARequestMatches_SkillLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTARequestMatches_SkillLevel>() {
  return ::CMsgDOTARequestMatches_SkillLevel_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAPopup_PopupID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAPopup_PopupID>() {
  return ::CMsgDOTAPopup_PopupID_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAFriendRecruitsResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAFriendRecruitsResponse_EResult>() {
  return ::CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTARedeemEventPrizeResponse_ResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTARedeemEventPrizeResponse_ResultCode>() {
  return ::CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCNotificationsResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCNotificationsResponse_EResult>() {
  return ::CMsgGCNotificationsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCPlayerInfoSubmitResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCPlayerInfoSubmitResponse_EResult>() {
  return ::CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCToClientMysteryItemResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCToClientMysteryItemResponse_Result>() {
  return ::CMsgGCToClientMysteryItemResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCVoteForArcanaResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCVoteForArcanaResponse_Result>() {
  return ::CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgArcanaVotes_VotingState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgArcanaVotes_VotingState>() {
  return ::CMsgArcanaVotes_VotingState_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCToClientRedeemRewardResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCToClientRedeemRewardResponse_Result>() {
  return ::CMsgGCToClientRedeemRewardResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTARedeemItemResponse_EResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTARedeemItemResponse_EResultCode>() {
  return ::CMsgDOTARedeemItemResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::CMsgPerfectWorldUserLookupResponse_EResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgPerfectWorldUserLookupResponse_EResultCode>() {
  return ::CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult>() {
  return ::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCOpenPlayerCardPackResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCOpenPlayerCardPackResponse_Result>() {
  return ::CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRecyclePlayerCardResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRecyclePlayerCardResponse_Result>() {
  return ::CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCCreatePlayerCardPackResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCCreatePlayerCardPackResponse_Result>() {
  return ::CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::DOTA_WatchReplayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_WatchReplayType>() {
  return ::DOTA_WatchReplayType_descriptor();
}
template <> struct is_proto_enum< ::EItemEditorReservationResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EItemEditorReservationResult>() {
  return ::EItemEditorReservationResult_descriptor();
}
template <> struct is_proto_enum< ::EFeaturedHeroTextField> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EFeaturedHeroTextField>() {
  return ::EFeaturedHeroTextField_descriptor();
}
template <> struct is_proto_enum< ::EFeaturedHeroDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EFeaturedHeroDataType>() {
  return ::EFeaturedHeroDataType_descriptor();
}
template <> struct is_proto_enum< ::EWeekendTourneyRichPresenceEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EWeekendTourneyRichPresenceEvent>() {
  return ::EWeekendTourneyRichPresenceEvent_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED
