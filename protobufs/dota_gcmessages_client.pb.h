// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client.proto

#ifndef PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED
#define PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "dota_gcmessages_common.pb.h"
#include "gcsdk_gcmessages.pb.h"
#include "dota_gcmessages_client_fantasy.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

class CMsgStartFindingMatch;
class CMsgStopFindingMatch;
class CMsgReadyUp;
class CMsgReadyUpStatus;
class CSourceTVGame;
class CSourceTVGame_Player;
class CSourceTVGameSmall;
class CMsgSourceTVGamesResponse;
class CMsgFindSourceTVGames;
class CMsgClientToGCFindTopSourceTVGames;
class CMsgGCToClientFindTopSourceTVGamesResponse;
class CMsgClientToGCTopMatchesRequest;
class CMsgClientToGCTopLeagueMatchesRequest;
class CMsgClientToGCTopFriendMatchesRequest;
class CMsgClientToGCMatchesMinimalRequest;
class CMsgClientToGCMatchesMinimalResponse;
class CMsgGCToClientTopLeagueMatchesResponse;
class CMsgGCToClientTopFriendMatchesResponse;
class CMsgClientToGCFindTopMatches;
class CMsgGCToClientFindTopLeagueMatchesResponse;
class CMsgSpectateFriendGame;
class CMsgSpectateFriendGameResponse;
class CMsgAbandonCurrentGame;
class CMsgClientSuspended;
class CMsgPracticeLobbySetDetails;
class CMsgPracticeLobbyCreate;
class CMsgPracticeLobbyCreate_SaveGame;
class CMsgPracticeLobbySetTeamSlot;
class CMsgPracticeLobbySetCoach;
class CMsgPracticeLobbyJoinBroadcastChannel;
class CMsgPracticeLobbyCloseBroadcastChannel;
class CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus;
class CMsgPracticeLobbyKick;
class CMsgPracticeLobbyKickFromTeam;
class CMsgPracticeLobbyLeave;
class CMsgPracticeLobbyLaunch;
class CMsgApplyTeamToPracticeLobby;
class CMsgClearPracticeLobbyTeam;
class CMsgPracticeLobbyList;
class CMsgPracticeLobbyListResponseEntry;
class CMsgPracticeLobbyListResponseEntry_CLobbyMember;
class CMsgPracticeLobbyListResponse;
class CMsgLobbyList;
class CMsgLobbyListResponse;
class CMsgPracticeLobbyJoin;
class CMsgPracticeLobbyJoinResponse;
class CMsgFriendPracticeLobbyListRequest;
class CMsgFriendPracticeLobbyListResponse;
class CMsgGuildmatePracticeLobbyListRequest;
class CMsgGuildmatePracticeLobbyListResponse;
class CMsgJoinableCustomGameModesRequest;
class CMsgJoinableCustomGameModesResponseEntry;
class CMsgJoinableCustomGameModesResponse;
class CMsgJoinableCustomLobbiesRequest;
class CMsgJoinableCustomLobbiesResponseEntry;
class CMsgJoinableCustomLobbiesResponse;
class CMsgQuickJoinCustomLobby;
class CMsgQuickJoinCustomLobby_RegionPing;
class CMsgQuickJoinCustomLobbyResponse;
class CMsgBotGameCreate;
class CMsgCustomGameCreate;
class CMsgEventGameCreate;
class CMsgRequestInternationalTicket;
class CMsgBalancedShuffleLobby;
class CMsgInitialQuestionnaireResponse;
class CMsgDOTAMatch;
class CMsgDOTAMatch_Player;
class CMsgDOTAMatch_Player_CustomGameData;
class CMsgDOTAMatch_BroadcasterInfo;
class CMsgDOTAMatch_BroadcasterChannel;
class CMsgDOTAMatch_CustomGameData;
class CMsgDOTAPlayerMatchHistory;
class CMsgDOTAMatchMinimal;
class CMsgDOTAMatchMinimal_Player;
class CMsgDOTAMatchMinimal_League;
class CMsgDOTAMatchHistoryFilter;
class CMsgDOTARequestMatches;
class CMsgDOTARequestMatchesResponse;
class CMsgDOTARequestMatchesResponse_Series;
class CMsgDOTAPopup;
class CMsgDOTATeamMemberSDO;
class CMsgDOTATeamAdminSDO;
class CMsgDOTATeamMember;
class CMsgDOTATeam;
class CMsgDOTACreateTeam;
class CMsgDOTACreateTeamResponse;
class CMsgDOTAEditTeam;
class CMsgDOTAEditTeamLogo;
class CMsgDOTAEditTeamLogoResponse;
class CMsgDOTAEditTeamDetails;
class CMsgDOTAEditTeamDetailsResponse;
class CMsgDOTADisbandTeam;
class CMsgDOTADisbandTeamResponse;
class CMsgDOTARequestTeamData;
class CMsgDOTARequestTeamDataResponse;
class CMsgDOTATeamData;
class CMsgDOTATeamProfileRequest;
class CMsgDOTATeamMemberProfileRequest;
class CMsgDOTATeamIDByNameRequest;
class CMsgDOTATeamIDByNameResponse;
class CMsgDOTATeamProfileResponse;
class CMsgDOTAProTeamListRequest;
class CMsgDOTAProTeamListResponse;
class CMsgDOTAProTeamListResponse_TeamEntry;
class CMsgDOTATeamInvite_InviterToGC;
class CMsgDOTATeamInvite_GCImmediateResponseToInviter;
class CMsgDOTATeamInvite_GCRequestToInvitee;
class CMsgDOTATeamInvite_InviteeResponseToGC;
class CMsgDOTATeamInvite_GCResponseToInviter;
class CMsgDOTATeamInvite_GCResponseToInvitee;
class CMsgDOTATeamOnProfile;
class CMsgDOTAKickTeamMember;
class CMsgDOTAKickTeamMemberResponse;
class CMsgDOTATransferTeamAdmin;
class CMsgDOTATransferTeamAdminResponse;
class CMsgDOTALeaveTeam;
class CMsgDOTALeaveTeamResponse;
class CMsgDOTABetaParticipation;
class CMsgDOTAJoinChatChannel;
class CMsgDOTALeaveChatChannel;
class CMsgDOTAClientIgnoredUser;
class CMsgDOTAChatMessage;
class CMsgDOTAChatMember;
class CMsgDOTAJoinChatChannelResponse;
class CMsgDOTAChatChannelFullUpdate;
class CMsgDOTAOtherJoinedChatChannel;
class CMsgDOTAOtherLeftChatChannel;
class CMsgDOTAChatChannelMemberUpdate;
class CMsgDOTAChatChannelMemberUpdate_JoinedMember;
class CMsgDOTARequestChatChannelList;
class CMsgDOTARequestChatChannelListResponse;
class CMsgDOTARequestChatChannelListResponse_ChatChannel;
class CMsgDOTAChatGetUserList;
class CMsgDOTAChatGetUserListResponse;
class CMsgDOTAChatGetUserListResponse_Member;
class CMsgDOTAChatGetMemberCount;
class CMsgDOTAChatGetMemberCountResponse;
class CMsgDOTAChatRegionsEnabled;
class CMsgDOTAChatRegionsEnabled_Region;
class CMsgDOTAGuildSDO;
class CMsgDOTAGuildSDO_Member;
class CMsgDOTAGuildSDO_Invitation;
class CMsgDOTAGuildAuditSDO;
class CMsgDOTAGuildAuditSDO_Entry;
class CMsgDOTAAccountGuildMembershipsSDO;
class CMsgDOTAAccountGuildMembershipsSDO_Membership;
class CMsgDOTAAccountGuildMembershipsSDO_Invitation;
class CMsgDOTAGuildCreateRequest;
class CMsgDOTAGuildCreateResponse;
class CMsgDOTAGuildSetAccountRoleRequest;
class CMsgDOTAGuildSetAccountRoleResponse;
class CMsgDOTAGuildInviteAccountRequest;
class CMsgDOTAGuildInviteAccountResponse;
class CMsgDOTAGuildCancelInviteRequest;
class CMsgDOTAGuildCancelInviteResponse;
class CMsgDOTAGuildUpdateDetailsRequest;
class CMsgDOTAGuildUpdateDetailsResponse;
class CMsgDOTAGCToGCUpdateOpenGuildPartyRequest;
class CMsgDOTAGCToGCUpdateOpenGuildPartyResponse;
class CMsgDOTAGCToGCDestroyOpenGuildPartyRequest;
class CMsgDOTAGCToGCDestroyOpenGuildPartyResponse;
class CMsgDOTAPartySetOpenGuildRequest;
class CMsgDOTAPartySetOpenGuildResponse;
class CMsgDOTAJoinOpenGuildPartyRequest;
class CMsgDOTAJoinOpenGuildPartyResponse;
class CMsgDOTAGuildOpenPartyRefresh;
class CMsgDOTAGuildOpenPartyRefresh_OpenParty;
class CMsgDOTARequestGuildData;
class CMsgDOTAGuildInviteData;
class CMsgDOTAGuildUpdateMessage;
class CMsgDOTAGuildEditLogoRequest;
class CMsgDOTAGuildEditLogoResponse;
class CMsgDOTAReportsRemainingRequest;
class CMsgDOTAReportsRemainingResponse;
class CMsgDOTASubmitPlayerReport;
class CMsgDOTASubmitPlayerReportResponse;
class CMsgDOTAReportCountsRequest;
class CMsgDOTAReportCountsResponse;
class CMsgDOTAKickedFromMatchmakingQueue;
class CMsgDOTARequestSaveGames;
class CMsgDOTARequestSaveGamesResponse;
class CMsgWatchGame;
class CMsgCancelWatchGame;
class CMsgWatchGameResponse;
class CMsgPartyLeaderWatchGamePrompt;
class CMsgGCMatchDetailsRequest;
class CMsgGCMatchDetailsResponse;
class CMsgDOTAProfileRequest;
class CMsgDOTAProfileResponse;
class CMsgDOTAProfileResponse_PlayedHero;
class CMsgDOTAProfileResponse_ShowcaseHero;
class CMsgDOTAProfileResponse_LeaguePass;
class CMsgDOTAProfileResponse_EventTicket;
class CMsgDOTAProfileResponse_FeaturedItem;
class CMsgGCSteamProfileRequest;
class CMsgGCSteamProfileRequestResponse;
class CMsgDOTAClearNotifySuccessfulReport;
class CMsgDOTAWelcome;
class CMsgDOTAWelcome_LocalizationDigest;
class CMsgDOTAWelcome_CExtraMsg;
class CSODOTAGameHeroFavorites;
class CMsgDOTAHeroFavoritesAdd;
class CMsgDOTAHeroFavoritesRemove;
class CMsgSetShowcaseHero;
class CMsgSetFeaturedItems;
class CMsgDOTAFeaturedItems;
class CMsgRequestLeagueInfo;
class CDynamicLeagueData;
class CStaticLeagueData;
class CLeagueData;
class CMsgResponseLeagueInfo;
class CMsgDOTAMatchVotes;
class CMsgDOTAMatchVotes_PlayerVote;
class CMsgCastMatchVote;
class CMsgRetrieveMatchVote;
class CMsgMatchVoteResponse;
class CMsgDOTAHallOfFame;
class CMsgDOTAHallOfFame_FeaturedPlayer;
class CMsgDOTAHallOfFame_FeaturedFarmer;
class CMsgDOTAHallOfFameRequest;
class CMsgDOTAHallOfFameResponse;
class CMsgDOTAHalloweenHighScoreRequest;
class CMsgDOTAHalloweenHighScoreResponse;
class CMsgDOTAStorePromoPagesRequest;
class CMsgDOTAStorePromoPagesResponse;
class CMsgDOTAStorePromoPagesResponse_PromoPage;
class CMsgLeagueScheduleBlockTeamInfo;
class CMsgLeagueScheduleBlock;
class CMsgDOTALeague;
class CMsgDOTALeagueScheduleRequest;
class CMsgDOTALeagueScheduleResponse;
class CMsgDOTALeagueScheduleEdit;
class CMsgDOTALeagueScheduleEditResponse;
class CMsgDOTALeaguesInMonthRequest;
class CMsgDOTALeaguesInMonthResponse;
class CMsgSockAddrList;
class CMsgMatchmakingGroupServerSample;
class CMsgClientGameserverPings;
class CMsgClientGameserverPings_PingDetail;
class CMsgDOTAMatchmakingStatsRequest;
class CMsgDOTAMatchmakingStatsResponse;
class CMsgDOTASetMatchHistoryAccess;
class CMsgDOTASetMatchHistoryAccessResponse;
class CMsgDOTANotifyAccountFlagsChange;
class CMsgDOTASetProfilePrivacy;
class CMsgDOTASetProfilePrivacyResponse;
class CMsgUpgradeLeagueItem;
class CMsgUpgradeLeagueItemResponse;
class CMsgGCWatchDownloadedReplay;
class CMsgSetMapLocationState;
class CMsgSetMapLocationStateResponse;
class CMsgResetMapLocations;
class CMsgResetMapLocationsResponse;
class CMsgRefreshPartnerAccountLink;
class CMsgClientsRejoinChatChannels;
class CMsgDOTASendFriendRecruits;
class CMsgDOTAFriendRecruitsRequest;
class CMsgDOTAFriendRecruitsResponse;
class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus;
class CMsgDOTAFriendRecruitInviteAcceptDecline;
class CMsgRequestLeaguePrizePool;
class CMsgRequestLeaguePrizePoolResponse;
class CMsgGCGetHeroStandings;
class CMsgGCGetHeroStandingsResponse;
class CMsgGCGetHeroStandingsResponse_Hero;
class CMsgGCItemEditorReservationsRequest;
class CMsgGCItemEditorReservation;
class CMsgGCItemEditorReservationsResponse;
class CMsgGCItemEditorReserveItemDef;
class CMsgGCItemEditorReserveItemDefResponse;
class CMsgGCItemEditorReleaseReservation;
class CMsgGCItemEditorReleaseReservationResponse;
class CMsgGCItemEditorRequestLeagueInfo;
class CMsgGCItemEditorLeagueInfoResponse;
class CMsgDOTARewardTutorialPrizes;
class CMsgDOTALastHitChallengeHighScorePost;
class CMsgDOTALastHitChallengeHighScoreRequest;
class CMsgDOTALastHitChallengeHighScoreResponse;
class CMsgFlipLobbyTeams;
class CMsgPresentedClientTerminateDlg;
class CMsgGCLobbyUpdateBroadcastChannelInfo;
class CMsgDOTARedeemEventPrize;
class CMsgDOTARedeemEventPrizeResponse;
class CMsgDOTAGetEventPoints;
class CMsgDOTAGetEventPointsResponse;
class CMsgDOTAGetEventPointsResponse_Action;
class CMsgDOTALiveLeagueGameUpdate;
class CMsgDOTACompendiumSelection;
class CMsgDOTACompendiumSelectionResponse;
class CMsgDOTACompendiumData;
class CMsgDOTACompendiumDataRequest;
class CMsgDOTACompendiumDataResponse;
class CMsgDOTAGetPlayerMatchHistory;
class CMsgDOTAGetPlayerMatchHistoryResponse;
class CMsgDOTAGetPlayerMatchHistoryResponse_Match;
class CMsgDOTAStartDailyHeroChallenge;
class CMsgGCNotificationsRequest;
class CMsgGCNotificationsResponse;
class CMsgGCNotificationsResponse_Notification;
class CMsgGCNotificationsMarkReadRequest;
class CMsgClientToGCMarkNotificationListRead;
class CMsgGCLeagueAdminState;
class CMsgGCLeagueAdminState_PrivateLeagueKeys;
class CMsgGCPlayerInfoRequest;
class CMsgGCPlayerInfoSubmit;
class CMsgGCPlayerInfoSubmitResponse;
class CMsgSerializedSOCache;
class CMsgSerializedSOCache_TypeCache;
class CMsgSerializedSOCache_Cache;
class CMsgSerializedSOCache_Cache_Version;
class CMsgRequestWeekendTourneySchedule;
class CMsgWeekendTourneySchedule;
class CMsgWeekendTourneySchedule_Division;
class CMsgClientProvideSurveyResult;
class CMsgClientProvideSurveyResult_Response;
class CMsgDOTAEmoticonAccessSDO;
class CMsgClientToGCEmoticonDataRequest;
class CMsgGCToClientEmoticonData;
class CMsgClientToGCTrackDialogResult;
class CMsgGCToClientTournamentItemDrop;
class CMsgClientToGCSetAdditionalEquips;
class CMsgClientToGCSetAdditionalEquipsResponse;
class CMsgClientToGCGetAdditionalEquips;
class CMsgClientToGCGetAdditionalEquipsResponse;
class CMsgClientToGCGetAllHeroOrder;
class CMsgClientToGCGetAllHeroOrderResponse;
class CMsgClientToGCGetAllHeroProgress;
class CMsgClientToGCGetAllHeroProgressResponse;
class CMsgClientToGCGetTrophyList;
class CMsgClientToGCGetTrophyListResponse;
class CMsgClientToGCGetTrophyListResponse_Trophy;
class CMsgGCToClientTrophyAwarded;
class CMsgClientToGCGetProfileCard;
class CMsgClientToGCSetProfileCardSlots;
class CMsgClientToGCSetProfileCardSlots_CardSlot;
class CMsgClientToGCGetProfileCardStats;
class CMsgClientToGCCreateHeroStatue;
class CMsgClientToGCCreateTeamShowcase;
class CMsgGCToClientHeroStatueCreateResult;
class CMsgGCToClientTeamShowcaseCreateResult;
class CMsgClientToGCRecordCompendiumStats;
class CMsgGCToClientEventStatusChanged;
class CMsgClientToGCExchangeItemsForOffering;
class CMsgClientToGCExchangeItemsForOfferingResponse;
class CMsgClientToGCPlayerStatsRequest;
class CMsgGCToClientPlayerStatsResponse;
class CMsgClientToGCCustomGamePlayerCountRequest;
class CMsgGCToClientCustomGamePlayerCountResponse;
class CMsgClientToGCCustomGamesFriendsPlayedRequest;
class CMsgGCToClientCustomGamesFriendsPlayedResponse;
class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame;
class CMsgClientToGCSocialFeedPostCommentRequest;
class CMsgGCToClientSocialFeedPostCommentResponse;
class CMsgClientToGCSocialFeedPostMessageRequest;
class CMsgGCToClientSocialFeedPostMessageResponse;
class CMsgClientToGCFriendsPlayedCustomGameRequest;
class CMsgGCToClientFriendsPlayedCustomGameResponse;
class CMsgClientToGCFeaturedHeroesRequest;
class CMsgGCToClientFeaturedHeroesResponse;
class CMsgGCToClientFeaturedHeroesResponse_DataField;
class CMsgGCToClientFeaturedHeroesResponse_FeaturedHero;
class CMsgGCToClientFeaturedHeroesResponse_Category;
class CMsgClientToGCSocialMatchPostCommentRequest;
class CMsgGCToClientSocialMatchPostCommentResponse;
class CMsgClientToGCSocialMatchDetailsRequest;
class CMsgGCToClientSocialMatchDetailsResponse;
class CMsgGCToClientSocialMatchDetailsResponse_Comment;
class CMsgDOTAPartyMemberSetCoach;
class CMsgDOTASetGroupLeader;
class CMsgDOTACancelGroupInvites;
class CMsgDOTASetGroupOpenStatus;
class CMsgDOTAGroupMergeInvite;
class CMsgDOTAGroupMergeResponse;
class CMsgDOTAGroupMergeReply;
class CMsgDOTAPartyRichPresence;
class CMsgDOTAPartyRichPresence_Member;
class CMsgDOTALobbyRichPresence;
class CMsgDOTACustomGameListenServerStartedLoading;
class CMsgDOTACustomGameClientFinishedLoading;
class CMsgClientToGCGetLeagueSeries;
class CMsgClientToGCGetLeagueSeriesResponse;
class CMsgClientToGCGetLeagueSeriesResponse_Series;
class CMsgClientToGCGetLeagueSeriesResponse_Series_Team;
class CMsgClientToGCApplyGemCombiner;
class CDummyUnbreakMessage;
class CMsgClientToGCCreateStaticRecipe;
class CMsgClientToGCCreateStaticRecipe_Item;
class CMsgClientToGCCreateStaticRecipeResponse;

enum CMsgDOTAMatch_ReplayState {
  CMsgDOTAMatch_ReplayState_REPLAY_AVAILABLE = 0,
  CMsgDOTAMatch_ReplayState_REPLAY_NOT_RECORDED = 1,
  CMsgDOTAMatch_ReplayState_REPLAY_EXPIRED = 2
};
bool CMsgDOTAMatch_ReplayState_IsValid(int value);
const CMsgDOTAMatch_ReplayState CMsgDOTAMatch_ReplayState_ReplayState_MIN = CMsgDOTAMatch_ReplayState_REPLAY_AVAILABLE;
const CMsgDOTAMatch_ReplayState CMsgDOTAMatch_ReplayState_ReplayState_MAX = CMsgDOTAMatch_ReplayState_REPLAY_EXPIRED;
const int CMsgDOTAMatch_ReplayState_ReplayState_ARRAYSIZE = CMsgDOTAMatch_ReplayState_ReplayState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAMatch_ReplayState_descriptor();
inline const ::std::string& CMsgDOTAMatch_ReplayState_Name(CMsgDOTAMatch_ReplayState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAMatch_ReplayState_descriptor(), value);
}
inline bool CMsgDOTAMatch_ReplayState_Parse(
    const ::std::string& name, CMsgDOTAMatch_ReplayState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAMatch_ReplayState>(
    CMsgDOTAMatch_ReplayState_descriptor(), name, value);
}
enum CMsgDOTARequestMatches_SkillLevel {
  CMsgDOTARequestMatches_SkillLevel_Any = 0,
  CMsgDOTARequestMatches_SkillLevel_Normal = 1,
  CMsgDOTARequestMatches_SkillLevel_High = 2,
  CMsgDOTARequestMatches_SkillLevel_VeryHigh = 3
};
bool CMsgDOTARequestMatches_SkillLevel_IsValid(int value);
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN = CMsgDOTARequestMatches_SkillLevel_Any;
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX = CMsgDOTARequestMatches_SkillLevel_VeryHigh;
const int CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE = CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARequestMatches_SkillLevel_descriptor();
inline const ::std::string& CMsgDOTARequestMatches_SkillLevel_Name(CMsgDOTARequestMatches_SkillLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), value);
}
inline bool CMsgDOTARequestMatches_SkillLevel_Parse(
    const ::std::string& name, CMsgDOTARequestMatches_SkillLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARequestMatches_SkillLevel>(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), name, value);
}
enum CMsgDOTAPopup_PopupID {
  CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY = 0,
  CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY = 1,
  CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM = 2,
  CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED = 3,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH = 4,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING = 5,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL = 6,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD = 7,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT = 8,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = 9,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME = 10,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY = 11,
  CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED = 12,
  CMsgDOTAPopup_PopupID_INVITE_DENIED = 13,
  CMsgDOTAPopup_PopupID_PARTY_FULL = 14,
  CMsgDOTAPopup_PopupID_MADE_ADMIN = 15,
  CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE = 16,
  CMsgDOTAPopup_PopupID_SIGNON_MESSAGE = 17,
  CMsgDOTAPopup_PopupID_GUILD_KICKED = 18,
  CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE = 19,
  CMsgDOTAPopup_PopupID_TOO_MANY_MATCHGROUPS = 20,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND = 21,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID = 22,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID = 23,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = 24,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = 25,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED = 26,
  CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN = 27,
  CMsgDOTAPopup_PopupID_PARTY_NOT_VALID_TO_MM = 28,
  CMsgDOTAPopup_PopupID_PARTY_NOT_VALID_TO_MM_COACHCOUNT = 29,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME = 30,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY = 31,
  CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE = 32,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NO_COACHES = 33,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NO_LOW_PRIORITY = 34,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_UNLOCKED = 35,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_GAME_MODE_NOT_ALLOWED = 36,
  CMsgDOTAPopup_PopupID_GAME_MODE_NOT_UNLOCKED = 37,
  CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT = 38,
  CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS = 39,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NO_4STACKS = 40,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_PARTY_MMR_SPREAD_TOO_LARGE = 41,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL = 42,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_IN_PARTY = 43,
  CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY = 44,
  CMsgDOTAPopup_PopupID_MM_1V1_NO_PARTIES = 45,
  CMsgDOTAPopup_PopupID_MM_1V1_NO_LOW_PRIORITY = 46,
  CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_REGISTRATION_NOT_OPEN = 47,
  CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED = 48,
  CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY = 49,
  CMsgDOTAPopup_PopupID_TROPHY_AWARDED = 50,
  CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP = 51,
  CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS = 52,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL = 53,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY = 54,
  CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH = 55,
  CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED = 56,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING = 57,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING = 58,
  CMsgDOTAPopup_PopupID_EVENT_NO_LOW_PRIORITY = 59,
  CMsgDOTAPopup_PopupID_MM_LOW_PRI_ONLY_CASUAL_AR = 60,
  CMsgDOTAPopup_PopupID_CNY2015_ONCE_PER_ROUND = 61,
  CMsgDOTAPopup_PopupID_LOBBY_FULL = 62,
  CMsgDOTAPopup_PopupID_TI2015_POINTS_EARNED = 63,
  CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION = 64,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_MMR_TOO_HIGH_S2 = 65,
  CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT = 66
};
bool CMsgDOTAPopup_PopupID_IsValid(int value);
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MIN = CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY;
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MAX = CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT;
const int CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE = CMsgDOTAPopup_PopupID_PopupID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAPopup_PopupID_descriptor();
inline const ::std::string& CMsgDOTAPopup_PopupID_Name(CMsgDOTAPopup_PopupID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAPopup_PopupID_descriptor(), value);
}
inline bool CMsgDOTAPopup_PopupID_Parse(
    const ::std::string& name, CMsgDOTAPopup_PopupID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAPopup_PopupID>(
    CMsgDOTAPopup_PopupID_descriptor(), name, value);
}
enum CMsgDOTACreateTeamResponse_Result {
  CMsgDOTACreateTeamResponse_Result_INVALID = -1,
  CMsgDOTACreateTeamResponse_Result_SUCCESS = 0,
  CMsgDOTACreateTeamResponse_Result_NAME_EMPTY = 1,
  CMsgDOTACreateTeamResponse_Result_NAME_BAD_CHARACTERS = 2,
  CMsgDOTACreateTeamResponse_Result_NAME_TAKEN = 3,
  CMsgDOTACreateTeamResponse_Result_NAME_TOO_LONG = 4,
  CMsgDOTACreateTeamResponse_Result_TAG_EMPTY = 5,
  CMsgDOTACreateTeamResponse_Result_TAG_BAD_CHARACTERS = 6,
  CMsgDOTACreateTeamResponse_Result_TAG_TAKEN = 7,
  CMsgDOTACreateTeamResponse_Result_TAG_TOO_LONG = 8,
  CMsgDOTACreateTeamResponse_Result_CREATOR_BUSY = 9,
  CMsgDOTACreateTeamResponse_Result_UNSPECIFIED_ERROR = 10,
  CMsgDOTACreateTeamResponse_Result_CREATOR_TEAM_LIMIT_REACHED = 11,
  CMsgDOTACreateTeamResponse_Result_NO_LOGO = 12,
  CMsgDOTACreateTeamResponse_Result_CREATOR_TEAM_CREATION_COOLDOWN = 13,
  CMsgDOTACreateTeamResponse_Result_LOGO_UPLOAD_FAILED = 14,
  CMsgDOTACreateTeamResponse_Result_NAME_CHANGED_TOO_RECENTLY = 15,
  CMsgDOTACreateTeamResponse_Result_CREATOR_INSUFFICIENT_LEVEL = 16
};
bool CMsgDOTACreateTeamResponse_Result_IsValid(int value);
const CMsgDOTACreateTeamResponse_Result CMsgDOTACreateTeamResponse_Result_Result_MIN = CMsgDOTACreateTeamResponse_Result_INVALID;
const CMsgDOTACreateTeamResponse_Result CMsgDOTACreateTeamResponse_Result_Result_MAX = CMsgDOTACreateTeamResponse_Result_CREATOR_INSUFFICIENT_LEVEL;
const int CMsgDOTACreateTeamResponse_Result_Result_ARRAYSIZE = CMsgDOTACreateTeamResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTACreateTeamResponse_Result_descriptor();
inline const ::std::string& CMsgDOTACreateTeamResponse_Result_Name(CMsgDOTACreateTeamResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTACreateTeamResponse_Result_descriptor(), value);
}
inline bool CMsgDOTACreateTeamResponse_Result_Parse(
    const ::std::string& name, CMsgDOTACreateTeamResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTACreateTeamResponse_Result>(
    CMsgDOTACreateTeamResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAEditTeamLogoResponse_Result {
  CMsgDOTAEditTeamLogoResponse_Result_INVALID = -1,
  CMsgDOTAEditTeamLogoResponse_Result_SUCCESS = 0,
  CMsgDOTAEditTeamLogoResponse_Result_CREATOR_BUSY = 9,
  CMsgDOTAEditTeamLogoResponse_Result_UNSPECIFIED_ERROR = 10,
  CMsgDOTAEditTeamLogoResponse_Result_NO_LOGO = 12
};
bool CMsgDOTAEditTeamLogoResponse_Result_IsValid(int value);
const CMsgDOTAEditTeamLogoResponse_Result CMsgDOTAEditTeamLogoResponse_Result_Result_MIN = CMsgDOTAEditTeamLogoResponse_Result_INVALID;
const CMsgDOTAEditTeamLogoResponse_Result CMsgDOTAEditTeamLogoResponse_Result_Result_MAX = CMsgDOTAEditTeamLogoResponse_Result_NO_LOGO;
const int CMsgDOTAEditTeamLogoResponse_Result_Result_ARRAYSIZE = CMsgDOTAEditTeamLogoResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAEditTeamLogoResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAEditTeamLogoResponse_Result_Name(CMsgDOTAEditTeamLogoResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAEditTeamLogoResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAEditTeamLogoResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAEditTeamLogoResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAEditTeamLogoResponse_Result>(
    CMsgDOTAEditTeamLogoResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAEditTeamDetailsResponse_Result {
  CMsgDOTAEditTeamDetailsResponse_Result_INVALID = -1,
  CMsgDOTAEditTeamDetailsResponse_Result_SUCCESS = 0,
  CMsgDOTAEditTeamDetailsResponse_Result_CREATOR_BUSY = 9,
  CMsgDOTAEditTeamDetailsResponse_Result_UNSPECIFIED_ERROR = 10
};
bool CMsgDOTAEditTeamDetailsResponse_Result_IsValid(int value);
const CMsgDOTAEditTeamDetailsResponse_Result CMsgDOTAEditTeamDetailsResponse_Result_Result_MIN = CMsgDOTAEditTeamDetailsResponse_Result_INVALID;
const CMsgDOTAEditTeamDetailsResponse_Result CMsgDOTAEditTeamDetailsResponse_Result_Result_MAX = CMsgDOTAEditTeamDetailsResponse_Result_UNSPECIFIED_ERROR;
const int CMsgDOTAEditTeamDetailsResponse_Result_Result_ARRAYSIZE = CMsgDOTAEditTeamDetailsResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAEditTeamDetailsResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAEditTeamDetailsResponse_Result_Name(CMsgDOTAEditTeamDetailsResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAEditTeamDetailsResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAEditTeamDetailsResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAEditTeamDetailsResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAEditTeamDetailsResponse_Result>(
    CMsgDOTAEditTeamDetailsResponse_Result_descriptor(), name, value);
}
enum CMsgDOTADisbandTeamResponse_Result {
  CMsgDOTADisbandTeamResponse_Result_SUCCESS = 0,
  CMsgDOTADisbandTeamResponse_Result_FAILURE = 1,
  CMsgDOTADisbandTeamResponse_Result_FAILURE_NOT_EMPTY = 2
};
bool CMsgDOTADisbandTeamResponse_Result_IsValid(int value);
const CMsgDOTADisbandTeamResponse_Result CMsgDOTADisbandTeamResponse_Result_Result_MIN = CMsgDOTADisbandTeamResponse_Result_SUCCESS;
const CMsgDOTADisbandTeamResponse_Result CMsgDOTADisbandTeamResponse_Result_Result_MAX = CMsgDOTADisbandTeamResponse_Result_FAILURE_NOT_EMPTY;
const int CMsgDOTADisbandTeamResponse_Result_Result_ARRAYSIZE = CMsgDOTADisbandTeamResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTADisbandTeamResponse_Result_descriptor();
inline const ::std::string& CMsgDOTADisbandTeamResponse_Result_Name(CMsgDOTADisbandTeamResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTADisbandTeamResponse_Result_descriptor(), value);
}
inline bool CMsgDOTADisbandTeamResponse_Result_Parse(
    const ::std::string& name, CMsgDOTADisbandTeamResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTADisbandTeamResponse_Result>(
    CMsgDOTADisbandTeamResponse_Result_descriptor(), name, value);
}
enum CMsgDOTARequestTeamDataResponse_Result {
  CMsgDOTARequestTeamDataResponse_Result_SUCCESS = 0,
  CMsgDOTARequestTeamDataResponse_Result_FAILURE = 1
};
bool CMsgDOTARequestTeamDataResponse_Result_IsValid(int value);
const CMsgDOTARequestTeamDataResponse_Result CMsgDOTARequestTeamDataResponse_Result_Result_MIN = CMsgDOTARequestTeamDataResponse_Result_SUCCESS;
const CMsgDOTARequestTeamDataResponse_Result CMsgDOTARequestTeamDataResponse_Result_Result_MAX = CMsgDOTARequestTeamDataResponse_Result_FAILURE;
const int CMsgDOTARequestTeamDataResponse_Result_Result_ARRAYSIZE = CMsgDOTARequestTeamDataResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARequestTeamDataResponse_Result_descriptor();
inline const ::std::string& CMsgDOTARequestTeamDataResponse_Result_Name(CMsgDOTARequestTeamDataResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARequestTeamDataResponse_Result_descriptor(), value);
}
inline bool CMsgDOTARequestTeamDataResponse_Result_Parse(
    const ::std::string& name, CMsgDOTARequestTeamDataResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARequestTeamDataResponse_Result>(
    CMsgDOTARequestTeamDataResponse_Result_descriptor(), name, value);
}
enum CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result {
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_SUCCESS = 0,
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_MEMBER_LIMIT = 1,
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_NOT_AVAILABLE = 2,
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_BUSY = 3,
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_ALREADY_ON_THE_TEAM = 4,
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_ALREADY_ON_TOO_MANY_TEAMS = 5,
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_UNSPECIFIED_ERROR = 6,
  CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_INSUFFICIENT_LEVEL = 7
};
bool CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_IsValid(int value);
const CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Result_MIN = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_SUCCESS;
const CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Result_MAX = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_INSUFFICIENT_LEVEL;
const int CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Result_ARRAYSIZE = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_descriptor();
inline const ::std::string& CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Name(CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_descriptor(), value);
}
inline bool CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Parse(
    const ::std::string& name, CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result>(
    CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_descriptor(), name, value);
}
enum CMsgDOTATeamInvite_InviteeResponseToGC_Result {
  CMsgDOTATeamInvite_InviteeResponseToGC_Result_JOIN = 0,
  CMsgDOTATeamInvite_InviteeResponseToGC_Result_REJECT = 1,
  CMsgDOTATeamInvite_InviteeResponseToGC_Result_TIMEOUT = 2
};
bool CMsgDOTATeamInvite_InviteeResponseToGC_Result_IsValid(int value);
const CMsgDOTATeamInvite_InviteeResponseToGC_Result CMsgDOTATeamInvite_InviteeResponseToGC_Result_Result_MIN = CMsgDOTATeamInvite_InviteeResponseToGC_Result_JOIN;
const CMsgDOTATeamInvite_InviteeResponseToGC_Result CMsgDOTATeamInvite_InviteeResponseToGC_Result_Result_MAX = CMsgDOTATeamInvite_InviteeResponseToGC_Result_TIMEOUT;
const int CMsgDOTATeamInvite_InviteeResponseToGC_Result_Result_ARRAYSIZE = CMsgDOTATeamInvite_InviteeResponseToGC_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTATeamInvite_InviteeResponseToGC_Result_descriptor();
inline const ::std::string& CMsgDOTATeamInvite_InviteeResponseToGC_Result_Name(CMsgDOTATeamInvite_InviteeResponseToGC_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTATeamInvite_InviteeResponseToGC_Result_descriptor(), value);
}
inline bool CMsgDOTATeamInvite_InviteeResponseToGC_Result_Parse(
    const ::std::string& name, CMsgDOTATeamInvite_InviteeResponseToGC_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTATeamInvite_InviteeResponseToGC_Result>(
    CMsgDOTATeamInvite_InviteeResponseToGC_Result_descriptor(), name, value);
}
enum CMsgDOTATeamInvite_GCResponseToInviter_Result {
  CMsgDOTATeamInvite_GCResponseToInviter_Result_JOINED = 0,
  CMsgDOTATeamInvite_GCResponseToInviter_Result_REJECTION = 1,
  CMsgDOTATeamInvite_GCResponseToInviter_Result_TIMEOUT = 2,
  CMsgDOTATeamInvite_GCResponseToInviter_Result_UNSPECIFIED_ERROR = 3
};
bool CMsgDOTATeamInvite_GCResponseToInviter_Result_IsValid(int value);
const CMsgDOTATeamInvite_GCResponseToInviter_Result CMsgDOTATeamInvite_GCResponseToInviter_Result_Result_MIN = CMsgDOTATeamInvite_GCResponseToInviter_Result_JOINED;
const CMsgDOTATeamInvite_GCResponseToInviter_Result CMsgDOTATeamInvite_GCResponseToInviter_Result_Result_MAX = CMsgDOTATeamInvite_GCResponseToInviter_Result_UNSPECIFIED_ERROR;
const int CMsgDOTATeamInvite_GCResponseToInviter_Result_Result_ARRAYSIZE = CMsgDOTATeamInvite_GCResponseToInviter_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTATeamInvite_GCResponseToInviter_Result_descriptor();
inline const ::std::string& CMsgDOTATeamInvite_GCResponseToInviter_Result_Name(CMsgDOTATeamInvite_GCResponseToInviter_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTATeamInvite_GCResponseToInviter_Result_descriptor(), value);
}
inline bool CMsgDOTATeamInvite_GCResponseToInviter_Result_Parse(
    const ::std::string& name, CMsgDOTATeamInvite_GCResponseToInviter_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTATeamInvite_GCResponseToInviter_Result>(
    CMsgDOTATeamInvite_GCResponseToInviter_Result_descriptor(), name, value);
}
enum CMsgDOTATeamInvite_GCResponseToInvitee_Result {
  CMsgDOTATeamInvite_GCResponseToInvitee_Result_SUCCESS = 0,
  CMsgDOTATeamInvite_GCResponseToInvitee_Result_FAILURE = 1
};
bool CMsgDOTATeamInvite_GCResponseToInvitee_Result_IsValid(int value);
const CMsgDOTATeamInvite_GCResponseToInvitee_Result CMsgDOTATeamInvite_GCResponseToInvitee_Result_Result_MIN = CMsgDOTATeamInvite_GCResponseToInvitee_Result_SUCCESS;
const CMsgDOTATeamInvite_GCResponseToInvitee_Result CMsgDOTATeamInvite_GCResponseToInvitee_Result_Result_MAX = CMsgDOTATeamInvite_GCResponseToInvitee_Result_FAILURE;
const int CMsgDOTATeamInvite_GCResponseToInvitee_Result_Result_ARRAYSIZE = CMsgDOTATeamInvite_GCResponseToInvitee_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTATeamInvite_GCResponseToInvitee_Result_descriptor();
inline const ::std::string& CMsgDOTATeamInvite_GCResponseToInvitee_Result_Name(CMsgDOTATeamInvite_GCResponseToInvitee_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTATeamInvite_GCResponseToInvitee_Result_descriptor(), value);
}
inline bool CMsgDOTATeamInvite_GCResponseToInvitee_Result_Parse(
    const ::std::string& name, CMsgDOTATeamInvite_GCResponseToInvitee_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTATeamInvite_GCResponseToInvitee_Result>(
    CMsgDOTATeamInvite_GCResponseToInvitee_Result_descriptor(), name, value);
}
enum CMsgDOTAKickTeamMemberResponse_Result {
  CMsgDOTAKickTeamMemberResponse_Result_SUCCESS = 0,
  CMsgDOTAKickTeamMemberResponse_Result_FAILURE = 1
};
bool CMsgDOTAKickTeamMemberResponse_Result_IsValid(int value);
const CMsgDOTAKickTeamMemberResponse_Result CMsgDOTAKickTeamMemberResponse_Result_Result_MIN = CMsgDOTAKickTeamMemberResponse_Result_SUCCESS;
const CMsgDOTAKickTeamMemberResponse_Result CMsgDOTAKickTeamMemberResponse_Result_Result_MAX = CMsgDOTAKickTeamMemberResponse_Result_FAILURE;
const int CMsgDOTAKickTeamMemberResponse_Result_Result_ARRAYSIZE = CMsgDOTAKickTeamMemberResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAKickTeamMemberResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAKickTeamMemberResponse_Result_Name(CMsgDOTAKickTeamMemberResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAKickTeamMemberResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAKickTeamMemberResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAKickTeamMemberResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAKickTeamMemberResponse_Result>(
    CMsgDOTAKickTeamMemberResponse_Result_descriptor(), name, value);
}
enum CMsgDOTATransferTeamAdminResponse_Result {
  CMsgDOTATransferTeamAdminResponse_Result_SUCCESS = 0,
  CMsgDOTATransferTeamAdminResponse_Result_NOT_ADMIN = 1,
  CMsgDOTATransferTeamAdminResponse_Result_ON_OTHER_TEAM = 2,
  CMsgDOTATransferTeamAdminResponse_Result_ADMIN_OF_OTHER_TEAM = 3,
  CMsgDOTATransferTeamAdminResponse_Result_UNSPECIFIED_ERROR = 4
};
bool CMsgDOTATransferTeamAdminResponse_Result_IsValid(int value);
const CMsgDOTATransferTeamAdminResponse_Result CMsgDOTATransferTeamAdminResponse_Result_Result_MIN = CMsgDOTATransferTeamAdminResponse_Result_SUCCESS;
const CMsgDOTATransferTeamAdminResponse_Result CMsgDOTATransferTeamAdminResponse_Result_Result_MAX = CMsgDOTATransferTeamAdminResponse_Result_UNSPECIFIED_ERROR;
const int CMsgDOTATransferTeamAdminResponse_Result_Result_ARRAYSIZE = CMsgDOTATransferTeamAdminResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTATransferTeamAdminResponse_Result_descriptor();
inline const ::std::string& CMsgDOTATransferTeamAdminResponse_Result_Name(CMsgDOTATransferTeamAdminResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTATransferTeamAdminResponse_Result_descriptor(), value);
}
inline bool CMsgDOTATransferTeamAdminResponse_Result_Parse(
    const ::std::string& name, CMsgDOTATransferTeamAdminResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTATransferTeamAdminResponse_Result>(
    CMsgDOTATransferTeamAdminResponse_Result_descriptor(), name, value);
}
enum CMsgDOTALeaveTeamResponse_Result {
  CMsgDOTALeaveTeamResponse_Result_SUCCESS = 0,
  CMsgDOTALeaveTeamResponse_Result_FAILURE = 1
};
bool CMsgDOTALeaveTeamResponse_Result_IsValid(int value);
const CMsgDOTALeaveTeamResponse_Result CMsgDOTALeaveTeamResponse_Result_Result_MIN = CMsgDOTALeaveTeamResponse_Result_SUCCESS;
const CMsgDOTALeaveTeamResponse_Result CMsgDOTALeaveTeamResponse_Result_Result_MAX = CMsgDOTALeaveTeamResponse_Result_FAILURE;
const int CMsgDOTALeaveTeamResponse_Result_Result_ARRAYSIZE = CMsgDOTALeaveTeamResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTALeaveTeamResponse_Result_descriptor();
inline const ::std::string& CMsgDOTALeaveTeamResponse_Result_Name(CMsgDOTALeaveTeamResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTALeaveTeamResponse_Result_descriptor(), value);
}
inline bool CMsgDOTALeaveTeamResponse_Result_Parse(
    const ::std::string& name, CMsgDOTALeaveTeamResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTALeaveTeamResponse_Result>(
    CMsgDOTALeaveTeamResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAJoinChatChannelResponse_Result {
  CMsgDOTAJoinChatChannelResponse_Result_JOIN_SUCCESS = 0,
  CMsgDOTAJoinChatChannelResponse_Result_INVALID_CHANNEL_TYPE = 1,
  CMsgDOTAJoinChatChannelResponse_Result_ACCOUNT_NOT_FOUND = 2,
  CMsgDOTAJoinChatChannelResponse_Result_ACH_FAILED = 3,
  CMsgDOTAJoinChatChannelResponse_Result_USER_IN_TOO_MANY_CHANNELS = 4,
  CMsgDOTAJoinChatChannelResponse_Result_RATE_LIMIT_EXCEEDED = 5,
  CMsgDOTAJoinChatChannelResponse_Result_CHANNEL_FULL = 6,
  CMsgDOTAJoinChatChannelResponse_Result_CHANNEL_FULL_OVERFLOWED = 7,
  CMsgDOTAJoinChatChannelResponse_Result_FAILED_TO_ADD_USER = 8,
  CMsgDOTAJoinChatChannelResponse_Result_CHANNEL_TYPE_DISABLED = 9
};
bool CMsgDOTAJoinChatChannelResponse_Result_IsValid(int value);
const CMsgDOTAJoinChatChannelResponse_Result CMsgDOTAJoinChatChannelResponse_Result_Result_MIN = CMsgDOTAJoinChatChannelResponse_Result_JOIN_SUCCESS;
const CMsgDOTAJoinChatChannelResponse_Result CMsgDOTAJoinChatChannelResponse_Result_Result_MAX = CMsgDOTAJoinChatChannelResponse_Result_CHANNEL_TYPE_DISABLED;
const int CMsgDOTAJoinChatChannelResponse_Result_Result_ARRAYSIZE = CMsgDOTAJoinChatChannelResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAJoinChatChannelResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAJoinChatChannelResponse_Result_Name(CMsgDOTAJoinChatChannelResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAJoinChatChannelResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAJoinChatChannelResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAJoinChatChannelResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAJoinChatChannelResponse_Result>(
    CMsgDOTAJoinChatChannelResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAGuildCreateResponse_EError {
  CMsgDOTAGuildCreateResponse_EError_UNSPECIFIED = 0,
  CMsgDOTAGuildCreateResponse_EError_NAME_EMPTY = 1,
  CMsgDOTAGuildCreateResponse_EError_NAME_BAD_CHARACTERS = 2,
  CMsgDOTAGuildCreateResponse_EError_NAME_TOO_LONG = 3,
  CMsgDOTAGuildCreateResponse_EError_NAME_TAKEN = 4,
  CMsgDOTAGuildCreateResponse_EError_TAG_EMPTY = 5,
  CMsgDOTAGuildCreateResponse_EError_TAG_BAD_CHARACTERS = 6,
  CMsgDOTAGuildCreateResponse_EError_TAG_TOO_LONG = 7,
  CMsgDOTAGuildCreateResponse_EError_ACCOUNT_TOO_MANY_GUILDS = 8,
  CMsgDOTAGuildCreateResponse_EError_LOGO_UPLOAD_FAILED = 9
};
bool CMsgDOTAGuildCreateResponse_EError_IsValid(int value);
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse_EError_EError_MIN = CMsgDOTAGuildCreateResponse_EError_UNSPECIFIED;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse_EError_EError_MAX = CMsgDOTAGuildCreateResponse_EError_LOGO_UPLOAD_FAILED;
const int CMsgDOTAGuildCreateResponse_EError_EError_ARRAYSIZE = CMsgDOTAGuildCreateResponse_EError_EError_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildCreateResponse_EError_descriptor();
inline const ::std::string& CMsgDOTAGuildCreateResponse_EError_Name(CMsgDOTAGuildCreateResponse_EError value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGuildCreateResponse_EError_descriptor(), value);
}
inline bool CMsgDOTAGuildCreateResponse_EError_Parse(
    const ::std::string& name, CMsgDOTAGuildCreateResponse_EError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGuildCreateResponse_EError>(
    CMsgDOTAGuildCreateResponse_EError_descriptor(), name, value);
}
enum CMsgDOTAGuildSetAccountRoleResponse_EResult {
  CMsgDOTAGuildSetAccountRoleResponse_EResult_SUCCESS = 0,
  CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_NO_PERMISSION = 2,
  CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_NO_OTHER_LEADER = 3,
  CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_ACCOUNT_TOO_MANY_GUILDS = 4,
  CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_GUILD_TOO_MANY_MEMBERS = 5
};
bool CMsgDOTAGuildSetAccountRoleResponse_EResult_IsValid(int value);
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse_EResult_EResult_MIN = CMsgDOTAGuildSetAccountRoleResponse_EResult_SUCCESS;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse_EResult_EResult_MAX = CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_GUILD_TOO_MANY_MEMBERS;
const int CMsgDOTAGuildSetAccountRoleResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAGuildSetAccountRoleResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildSetAccountRoleResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAGuildSetAccountRoleResponse_EResult_Name(CMsgDOTAGuildSetAccountRoleResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGuildSetAccountRoleResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAGuildSetAccountRoleResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAGuildSetAccountRoleResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGuildSetAccountRoleResponse_EResult>(
    CMsgDOTAGuildSetAccountRoleResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAGuildInviteAccountResponse_EResult {
  CMsgDOTAGuildInviteAccountResponse_EResult_SUCCESS = 0,
  CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_NO_PERMISSION = 2,
  CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_ALREADY_INVITED = 3,
  CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_ALREADY_IN_GUILD = 4,
  CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_TOO_MANY_INVITES = 5,
  CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_GUILD_TOO_MANY_INVITES = 6,
  CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_TOO_MANY_GUILDS = 7
};
bool CMsgDOTAGuildInviteAccountResponse_EResult_IsValid(int value);
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse_EResult_EResult_MIN = CMsgDOTAGuildInviteAccountResponse_EResult_SUCCESS;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse_EResult_EResult_MAX = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_TOO_MANY_GUILDS;
const int CMsgDOTAGuildInviteAccountResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAGuildInviteAccountResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildInviteAccountResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAGuildInviteAccountResponse_EResult_Name(CMsgDOTAGuildInviteAccountResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGuildInviteAccountResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAGuildInviteAccountResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAGuildInviteAccountResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGuildInviteAccountResponse_EResult>(
    CMsgDOTAGuildInviteAccountResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAGuildCancelInviteResponse_EResult {
  CMsgDOTAGuildCancelInviteResponse_EResult_SUCCESS = 0,
  CMsgDOTAGuildCancelInviteResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgDOTAGuildCancelInviteResponse_EResult_ERROR_NO_PERMISSION = 2
};
bool CMsgDOTAGuildCancelInviteResponse_EResult_IsValid(int value);
const CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse_EResult_EResult_MIN = CMsgDOTAGuildCancelInviteResponse_EResult_SUCCESS;
const CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse_EResult_EResult_MAX = CMsgDOTAGuildCancelInviteResponse_EResult_ERROR_NO_PERMISSION;
const int CMsgDOTAGuildCancelInviteResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAGuildCancelInviteResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildCancelInviteResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAGuildCancelInviteResponse_EResult_Name(CMsgDOTAGuildCancelInviteResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGuildCancelInviteResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAGuildCancelInviteResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAGuildCancelInviteResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGuildCancelInviteResponse_EResult>(
    CMsgDOTAGuildCancelInviteResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAGuildUpdateDetailsResponse_EResult {
  CMsgDOTAGuildUpdateDetailsResponse_EResult_SUCCESS = 0,
  CMsgDOTAGuildUpdateDetailsResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgDOTAGuildUpdateDetailsResponse_EResult_ERROR_NO_PERMISSION = 2
};
bool CMsgDOTAGuildUpdateDetailsResponse_EResult_IsValid(int value);
const CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse_EResult_EResult_MIN = CMsgDOTAGuildUpdateDetailsResponse_EResult_SUCCESS;
const CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse_EResult_EResult_MAX = CMsgDOTAGuildUpdateDetailsResponse_EResult_ERROR_NO_PERMISSION;
const int CMsgDOTAGuildUpdateDetailsResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAGuildUpdateDetailsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildUpdateDetailsResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAGuildUpdateDetailsResponse_EResult_Name(CMsgDOTAGuildUpdateDetailsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGuildUpdateDetailsResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAGuildUpdateDetailsResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAGuildUpdateDetailsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGuildUpdateDetailsResponse_EResult>(
    CMsgDOTAGuildUpdateDetailsResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAPartySetOpenGuildResponse_EResult {
  CMsgDOTAPartySetOpenGuildResponse_EResult_SUCCESS = 0,
  CMsgDOTAPartySetOpenGuildResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgDOTAPartySetOpenGuildResponse_EResult_IsValid(int value);
const CMsgDOTAPartySetOpenGuildResponse_EResult CMsgDOTAPartySetOpenGuildResponse_EResult_EResult_MIN = CMsgDOTAPartySetOpenGuildResponse_EResult_SUCCESS;
const CMsgDOTAPartySetOpenGuildResponse_EResult CMsgDOTAPartySetOpenGuildResponse_EResult_EResult_MAX = CMsgDOTAPartySetOpenGuildResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgDOTAPartySetOpenGuildResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAPartySetOpenGuildResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAPartySetOpenGuildResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAPartySetOpenGuildResponse_EResult_Name(CMsgDOTAPartySetOpenGuildResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAPartySetOpenGuildResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAPartySetOpenGuildResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAPartySetOpenGuildResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAPartySetOpenGuildResponse_EResult>(
    CMsgDOTAPartySetOpenGuildResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAJoinOpenGuildPartyResponse_EResult {
  CMsgDOTAJoinOpenGuildPartyResponse_EResult_SUCCESS = 0,
  CMsgDOTAJoinOpenGuildPartyResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgDOTAJoinOpenGuildPartyResponse_EResult_IsValid(int value);
const CMsgDOTAJoinOpenGuildPartyResponse_EResult CMsgDOTAJoinOpenGuildPartyResponse_EResult_EResult_MIN = CMsgDOTAJoinOpenGuildPartyResponse_EResult_SUCCESS;
const CMsgDOTAJoinOpenGuildPartyResponse_EResult CMsgDOTAJoinOpenGuildPartyResponse_EResult_EResult_MAX = CMsgDOTAJoinOpenGuildPartyResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgDOTAJoinOpenGuildPartyResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAJoinOpenGuildPartyResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAJoinOpenGuildPartyResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAJoinOpenGuildPartyResponse_EResult_Name(CMsgDOTAJoinOpenGuildPartyResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAJoinOpenGuildPartyResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAJoinOpenGuildPartyResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAJoinOpenGuildPartyResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAJoinOpenGuildPartyResponse_EResult>(
    CMsgDOTAJoinOpenGuildPartyResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAGuildEditLogoResponse_EResult {
  CMsgDOTAGuildEditLogoResponse_EResult_SUCCESS = 0,
  CMsgDOTAGuildEditLogoResponse_EResult_NO_PERMISSION = 1,
  CMsgDOTAGuildEditLogoResponse_EResult_LOGO_UPLOAD_FAILED = 2,
  CMsgDOTAGuildEditLogoResponse_EResult_UNSPECIFIED_ERROR = 3
};
bool CMsgDOTAGuildEditLogoResponse_EResult_IsValid(int value);
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse_EResult_EResult_MIN = CMsgDOTAGuildEditLogoResponse_EResult_SUCCESS;
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse_EResult_EResult_MAX = CMsgDOTAGuildEditLogoResponse_EResult_UNSPECIFIED_ERROR;
const int CMsgDOTAGuildEditLogoResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAGuildEditLogoResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildEditLogoResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAGuildEditLogoResponse_EResult_Name(CMsgDOTAGuildEditLogoResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGuildEditLogoResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAGuildEditLogoResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAGuildEditLogoResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGuildEditLogoResponse_EResult>(
    CMsgDOTAGuildEditLogoResponse_EResult_descriptor(), name, value);
}
enum CMsgWatchGameResponse_WatchGameResult {
  CMsgWatchGameResponse_WatchGameResult_PENDING = 0,
  CMsgWatchGameResponse_WatchGameResult_READY = 1,
  CMsgWatchGameResponse_WatchGameResult_GAMESERVERNOTFOUND = 2,
  CMsgWatchGameResponse_WatchGameResult_UNAVAILABLE = 3,
  CMsgWatchGameResponse_WatchGameResult_CANCELLED = 4,
  CMsgWatchGameResponse_WatchGameResult_INCOMPATIBLEVERSION = 5,
  CMsgWatchGameResponse_WatchGameResult_MISSINGLEAGUESUBSCRIPTION = 6,
  CMsgWatchGameResponse_WatchGameResult_LOBBYNOTFOUND = 7
};
bool CMsgWatchGameResponse_WatchGameResult_IsValid(int value);
const CMsgWatchGameResponse_WatchGameResult CMsgWatchGameResponse_WatchGameResult_WatchGameResult_MIN = CMsgWatchGameResponse_WatchGameResult_PENDING;
const CMsgWatchGameResponse_WatchGameResult CMsgWatchGameResponse_WatchGameResult_WatchGameResult_MAX = CMsgWatchGameResponse_WatchGameResult_LOBBYNOTFOUND;
const int CMsgWatchGameResponse_WatchGameResult_WatchGameResult_ARRAYSIZE = CMsgWatchGameResponse_WatchGameResult_WatchGameResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgWatchGameResponse_WatchGameResult_descriptor();
inline const ::std::string& CMsgWatchGameResponse_WatchGameResult_Name(CMsgWatchGameResponse_WatchGameResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgWatchGameResponse_WatchGameResult_descriptor(), value);
}
inline bool CMsgWatchGameResponse_WatchGameResult_Parse(
    const ::std::string& name, CMsgWatchGameResponse_WatchGameResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgWatchGameResponse_WatchGameResult>(
    CMsgWatchGameResponse_WatchGameResult_descriptor(), name, value);
}
enum CMsgDOTAFriendRecruitsResponse_EResult {
  CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS = 0,
  CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgDOTAFriendRecruitsResponse_EResult_IsValid(int value);
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN = CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX = CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAFriendRecruitsResponse_EResult_Name(CMsgDOTAFriendRecruitsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAFriendRecruitsResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAFriendRecruitsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAFriendRecruitsResponse_EResult>(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTARedeemEventPrizeResponse_ResultCode {
  CMsgDOTARedeemEventPrizeResponse_ResultCode_Success = 0,
  CMsgDOTARedeemEventPrizeResponse_ResultCode_ServerError = 1,
  CMsgDOTARedeemEventPrizeResponse_ResultCode_InsufficientPoints = 2,
  CMsgDOTARedeemEventPrizeResponse_ResultCode_PointsHeld = 3
};
bool CMsgDOTARedeemEventPrizeResponse_ResultCode_IsValid(int value);
const CMsgDOTARedeemEventPrizeResponse_ResultCode CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MIN = CMsgDOTARedeemEventPrizeResponse_ResultCode_Success;
const CMsgDOTARedeemEventPrizeResponse_ResultCode CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MAX = CMsgDOTARedeemEventPrizeResponse_ResultCode_PointsHeld;
const int CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_ARRAYSIZE = CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor();
inline const ::std::string& CMsgDOTARedeemEventPrizeResponse_ResultCode_Name(CMsgDOTARedeemEventPrizeResponse_ResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor(), value);
}
inline bool CMsgDOTARedeemEventPrizeResponse_ResultCode_Parse(
    const ::std::string& name, CMsgDOTARedeemEventPrizeResponse_ResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARedeemEventPrizeResponse_ResultCode>(
    CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor(), name, value);
}
enum CMsgGCNotificationsResponse_EResult {
  CMsgGCNotificationsResponse_EResult_SUCCESS = 0,
  CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgGCNotificationsResponse_EResult_IsValid(int value);
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MIN = CMsgGCNotificationsResponse_EResult_SUCCESS;
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MAX = CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE = CMsgGCNotificationsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCNotificationsResponse_EResult_descriptor();
inline const ::std::string& CMsgGCNotificationsResponse_EResult_Name(CMsgGCNotificationsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCNotificationsResponse_EResult_descriptor(), value);
}
inline bool CMsgGCNotificationsResponse_EResult_Parse(
    const ::std::string& name, CMsgGCNotificationsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCNotificationsResponse_EResult>(
    CMsgGCNotificationsResponse_EResult_descriptor(), name, value);
}
enum CMsgGCPlayerInfoSubmitResponse_EResult {
  CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS = 0,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED = 2
};
bool CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(int value);
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN = CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
const int CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE = CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
inline const ::std::string& CMsgGCPlayerInfoSubmitResponse_EResult_Name(CMsgGCPlayerInfoSubmitResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), value);
}
inline bool CMsgGCPlayerInfoSubmitResponse_EResult_Parse(
    const ::std::string& name, CMsgGCPlayerInfoSubmitResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCPlayerInfoSubmitResponse_EResult>(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCExchangeItemsForOfferingResponse_EResponse {
  CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_Success = 0,
  CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_OfferingDisabled = 1,
  CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_InvalidItems = 2,
  CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_InternalError = 3
};
bool CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_IsValid(int value);
const CMsgClientToGCExchangeItemsForOfferingResponse_EResponse CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_EResponse_MIN = CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_Success;
const CMsgClientToGCExchangeItemsForOfferingResponse_EResponse CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_EResponse_MAX = CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_InternalError;
const int CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_EResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_descriptor();
inline const ::std::string& CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_Name(CMsgClientToGCExchangeItemsForOfferingResponse_EResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_descriptor(), value);
}
inline bool CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_Parse(
    const ::std::string& name, CMsgClientToGCExchangeItemsForOfferingResponse_EResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCExchangeItemsForOfferingResponse_EResponse>(
    CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCCreateStaticRecipeResponse_EResponse {
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_Success = 0,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_OfferingDisabled = 1,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InvalidItems = 2,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InternalError = 3,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingLeague = 4
};
bool CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(int value);
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MIN = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_Success;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MAX = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingLeague;
const int CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor();
inline const ::std::string& CMsgClientToGCCreateStaticRecipeResponse_EResponse_Name(CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor(), value);
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_EResponse_Parse(
    const ::std::string& name, CMsgClientToGCCreateStaticRecipeResponse_EResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCreateStaticRecipeResponse_EResponse>(
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor(), name, value);
}
enum DOTA_WatchReplayType {
  DOTA_WATCH_REPLAY_NORMAL = 0,
  DOTA_WATCH_REPLAY_HIGHLIGHTS = 1
};
bool DOTA_WatchReplayType_IsValid(int value);
const DOTA_WatchReplayType DOTA_WatchReplayType_MIN = DOTA_WATCH_REPLAY_NORMAL;
const DOTA_WatchReplayType DOTA_WatchReplayType_MAX = DOTA_WATCH_REPLAY_HIGHLIGHTS;
const int DOTA_WatchReplayType_ARRAYSIZE = DOTA_WatchReplayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_WatchReplayType_descriptor();
inline const ::std::string& DOTA_WatchReplayType_Name(DOTA_WatchReplayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_WatchReplayType_descriptor(), value);
}
inline bool DOTA_WatchReplayType_Parse(
    const ::std::string& name, DOTA_WatchReplayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_WatchReplayType>(
    DOTA_WatchReplayType_descriptor(), name, value);
}
enum EItemEditorReservationResult {
  k_EItemEditorReservationResult_OK = 1,
  k_EItemEditorReservationResult_AlreadyExists = 2,
  k_EItemEditorReservationResult_Reserved = 3,
  k_EItemEditorReservationResult_TimedOut = 4
};
bool EItemEditorReservationResult_IsValid(int value);
const EItemEditorReservationResult EItemEditorReservationResult_MIN = k_EItemEditorReservationResult_OK;
const EItemEditorReservationResult EItemEditorReservationResult_MAX = k_EItemEditorReservationResult_TimedOut;
const int EItemEditorReservationResult_ARRAYSIZE = EItemEditorReservationResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EItemEditorReservationResult_descriptor();
inline const ::std::string& EItemEditorReservationResult_Name(EItemEditorReservationResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EItemEditorReservationResult_descriptor(), value);
}
inline bool EItemEditorReservationResult_Parse(
    const ::std::string& name, EItemEditorReservationResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EItemEditorReservationResult>(
    EItemEditorReservationResult_descriptor(), name, value);
}
enum EProfileCardSlotType {
  k_EProfileCardSlotType_Empty = 0,
  k_EProfileCardSlotType_Stat = 1,
  k_EProfileCardSlotType_Trophy = 2,
  k_EProfileCardSlotType_Item = 3,
  k_EProfileCardSlotType_Hero = 4,
  k_EProfileCardSlotType_Emoticon = 5
};
bool EProfileCardSlotType_IsValid(int value);
const EProfileCardSlotType EProfileCardSlotType_MIN = k_EProfileCardSlotType_Empty;
const EProfileCardSlotType EProfileCardSlotType_MAX = k_EProfileCardSlotType_Emoticon;
const int EProfileCardSlotType_ARRAYSIZE = EProfileCardSlotType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EProfileCardSlotType_descriptor();
inline const ::std::string& EProfileCardSlotType_Name(EProfileCardSlotType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EProfileCardSlotType_descriptor(), value);
}
inline bool EProfileCardSlotType_Parse(
    const ::std::string& name, EProfileCardSlotType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EProfileCardSlotType>(
    EProfileCardSlotType_descriptor(), name, value);
}
enum EFeaturedHeroTextField {
  k_EFeaturedHeroTextField_NewHero = 0,
  k_EFeaturedHeroTextField_NewItem = 1,
  k_EFeaturedHeroTextField_ItemSetDescription = 2,
  k_EFeaturedHeroTextField_ItemDescription = 3,
  k_EFeaturedHeroTextField_Hype = 4,
  k_EFeaturedHeroTextField_HeroWinLoss = 5,
  k_EFeaturedHeroTextField_FrequentlyPlayedHero = 6,
  k_EFeaturedHeroTextField_FeaturedItem = 7,
  k_EFeaturedHeroTextField_PopularItem = 8,
  k_EFeaturedHeroTextField_SaleItem = 9,
  k_EFeaturedHeroTextField_SaleDiscount = 10,
  k_EFeaturedHeroTextField_Container = 11
};
bool EFeaturedHeroTextField_IsValid(int value);
const EFeaturedHeroTextField EFeaturedHeroTextField_MIN = k_EFeaturedHeroTextField_NewHero;
const EFeaturedHeroTextField EFeaturedHeroTextField_MAX = k_EFeaturedHeroTextField_Container;
const int EFeaturedHeroTextField_ARRAYSIZE = EFeaturedHeroTextField_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroTextField_descriptor();
inline const ::std::string& EFeaturedHeroTextField_Name(EFeaturedHeroTextField value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroTextField_descriptor(), value);
}
inline bool EFeaturedHeroTextField_Parse(
    const ::std::string& name, EFeaturedHeroTextField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroTextField>(
    EFeaturedHeroTextField_descriptor(), name, value);
}
enum EFeaturedHeroDataType {
  k_EFeaturedHeroDataType_HeroID = 0,
  k_EFeaturedHeroDataType_ItemDef = 1,
  k_EFeaturedHeroDataType_HypeString = 2,
  k_EFeaturedHeroDataType_StartTimestamp = 3,
  k_EFeaturedHeroDataType_ExpireTimestamp = 4,
  k_EFeaturedHeroDataType_HeroWins = 5,
  k_EFeaturedHeroDataType_HeroLosses = 6,
  k_EFeaturedHeroDataType_SaleDiscount = 7,
  k_EFeaturedHeroDataType_ContainerItemDef = 8
};
bool EFeaturedHeroDataType_IsValid(int value);
const EFeaturedHeroDataType EFeaturedHeroDataType_MIN = k_EFeaturedHeroDataType_HeroID;
const EFeaturedHeroDataType EFeaturedHeroDataType_MAX = k_EFeaturedHeroDataType_ContainerItemDef;
const int EFeaturedHeroDataType_ARRAYSIZE = EFeaturedHeroDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroDataType_descriptor();
inline const ::std::string& EFeaturedHeroDataType_Name(EFeaturedHeroDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroDataType_descriptor(), value);
}
inline bool EFeaturedHeroDataType_Parse(
    const ::std::string& name, EFeaturedHeroDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroDataType>(
    EFeaturedHeroDataType_descriptor(), name, value);
}
enum EDOTAGroupMergeResult {
  k_EDOTAGroupMergeResult_OK = 0,
  k_EDOTAGroupMergeResult_FAILED_GENERIC = 1,
  k_EDOTAGroupMergeResult_NOT_LEADER = 2,
  k_EDOTAGroupMergeResult_TOO_MANY_PLAYERS = 3,
  k_EDOTAGroupMergeResult_TOO_MANY_COACHES = 4,
  k_EDOTAGroupMergeResult_ENGINE_MISMATCH = 5,
  k_EDOTAGroupMergeResult_NO_SUCH_GROUP = 6,
  k_EDOTAGroupMergeResult_OTHER_GROUP_NOT_OPEN = 7,
  k_EDOTAGroupMergeResult_ALREADY_INVITED = 8,
  k_EDOTAGroupMergeResult_NOT_INVITED = 9
};
bool EDOTAGroupMergeResult_IsValid(int value);
const EDOTAGroupMergeResult EDOTAGroupMergeResult_MIN = k_EDOTAGroupMergeResult_OK;
const EDOTAGroupMergeResult EDOTAGroupMergeResult_MAX = k_EDOTAGroupMergeResult_NOT_INVITED;
const int EDOTAGroupMergeResult_ARRAYSIZE = EDOTAGroupMergeResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDOTAGroupMergeResult_descriptor();
inline const ::std::string& EDOTAGroupMergeResult_Name(EDOTAGroupMergeResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDOTAGroupMergeResult_descriptor(), value);
}
inline bool EDOTAGroupMergeResult_Parse(
    const ::std::string& name, EDOTAGroupMergeResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDOTAGroupMergeResult>(
    EDOTAGroupMergeResult_descriptor(), name, value);
}
// ===================================================================

class CMsgStartFindingMatch : public ::google::protobuf::Message {
 public:
  CMsgStartFindingMatch();
  virtual ~CMsgStartFindingMatch();

  CMsgStartFindingMatch(const CMsgStartFindingMatch& from);

  inline CMsgStartFindingMatch& operator=(const CMsgStartFindingMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStartFindingMatch& default_instance();

  void Swap(CMsgStartFindingMatch* other);

  // implements Message ----------------------------------------------

  CMsgStartFindingMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgStartFindingMatch& from);
  void MergeFrom(const CMsgStartFindingMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional uint32 matchgroups = 2 [default = 4294967295];
  inline bool has_matchgroups() const;
  inline void clear_matchgroups();
  static const int kMatchgroupsFieldNumber = 2;
  inline ::google::protobuf::uint32 matchgroups() const;
  inline void set_matchgroups(::google::protobuf::uint32 value);

  // optional uint32 client_version = 3;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional uint32 game_modes = 4 [default = 4294967295];
  inline bool has_game_modes() const;
  inline void clear_game_modes();
  static const int kGameModesFieldNumber = 4;
  inline ::google::protobuf::uint32 game_modes() const;
  inline void set_game_modes(::google::protobuf::uint32 value);

  // optional .DOTABotDifficulty bot_difficulty = 5 [default = BOT_DIFFICULTY_HARD];
  inline bool has_bot_difficulty() const;
  inline void clear_bot_difficulty();
  static const int kBotDifficultyFieldNumber = 5;
  inline ::DOTABotDifficulty bot_difficulty() const;
  inline void set_bot_difficulty(::DOTABotDifficulty value);

  // optional .MatchType match_type = 6 [default = MATCH_TYPE_CASUAL];
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 6;
  inline ::MatchType match_type() const;
  inline void set_match_type(::MatchType value);

  // optional uint32 matchlanguages = 7 [default = 4294967295];
  inline bool has_matchlanguages() const;
  inline void clear_matchlanguages();
  static const int kMatchlanguagesFieldNumber = 7;
  inline ::google::protobuf::uint32 matchlanguages() const;
  inline void set_matchlanguages(::google::protobuf::uint32 value);

  // optional uint32 map_preference = 9;
  inline bool has_map_preference() const;
  inline void clear_map_preference();
  static const int kMapPreferenceFieldNumber = 9;
  inline ::google::protobuf::uint32 map_preference() const;
  inline void set_map_preference(::google::protobuf::uint32 value);

  // optional uint32 team_id = 8;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 8;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional .MatchLanguages game_language_enum = 10 [default = MATCH_LANGUAGE_INVALID];
  inline bool has_game_language_enum() const;
  inline void clear_game_language_enum();
  static const int kGameLanguageEnumFieldNumber = 10;
  inline ::MatchLanguages game_language_enum() const;
  inline void set_game_language_enum(::MatchLanguages value);

  // optional string game_language_name = 11;
  inline bool has_game_language_name() const;
  inline void clear_game_language_name();
  static const int kGameLanguageNameFieldNumber = 11;
  inline const ::std::string& game_language_name() const;
  inline void set_game_language_name(const ::std::string& value);
  inline void set_game_language_name(const char* value);
  inline void set_game_language_name(const char* value, size_t size);
  inline ::std::string* mutable_game_language_name();
  inline ::std::string* release_game_language_name();
  inline void set_allocated_game_language_name(::std::string* game_language_name);

  // @@protoc_insertion_point(class_scope:CMsgStartFindingMatch)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_matchgroups();
  inline void clear_has_matchgroups();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_game_modes();
  inline void clear_has_game_modes();
  inline void set_has_bot_difficulty();
  inline void clear_has_bot_difficulty();
  inline void set_has_match_type();
  inline void clear_has_match_type();
  inline void set_has_matchlanguages();
  inline void clear_has_matchlanguages();
  inline void set_has_map_preference();
  inline void clear_has_map_preference();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_game_language_enum();
  inline void clear_has_game_language_enum();
  inline void set_has_game_language_name();
  inline void clear_has_game_language_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::google::protobuf::uint32 matchgroups_;
  ::google::protobuf::uint32 client_version_;
  ::google::protobuf::uint32 game_modes_;
  int bot_difficulty_;
  int match_type_;
  ::google::protobuf::uint32 matchlanguages_;
  ::google::protobuf::uint32 map_preference_;
  ::google::protobuf::uint32 team_id_;
  ::std::string* game_language_name_;
  int game_language_enum_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgStartFindingMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgStopFindingMatch : public ::google::protobuf::Message {
 public:
  CMsgStopFindingMatch();
  virtual ~CMsgStopFindingMatch();

  CMsgStopFindingMatch(const CMsgStopFindingMatch& from);

  inline CMsgStopFindingMatch& operator=(const CMsgStopFindingMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStopFindingMatch& default_instance();

  void Swap(CMsgStopFindingMatch* other);

  // implements Message ----------------------------------------------

  CMsgStopFindingMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgStopFindingMatch& from);
  void MergeFrom(const CMsgStopFindingMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgStopFindingMatch)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgStopFindingMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReadyUp : public ::google::protobuf::Message {
 public:
  CMsgReadyUp();
  virtual ~CMsgReadyUp();

  CMsgReadyUp(const CMsgReadyUp& from);

  inline CMsgReadyUp& operator=(const CMsgReadyUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReadyUp& default_instance();

  void Swap(CMsgReadyUp* other);

  // implements Message ----------------------------------------------

  CMsgReadyUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReadyUp& from);
  void MergeFrom(const CMsgReadyUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DOTALobbyReadyState state = 1 [default = DOTALobbyReadyState_UNDECLARED];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::DOTALobbyReadyState state() const;
  inline void set_state(::DOTALobbyReadyState value);

  // optional fixed64 ready_up_key = 2;
  inline bool has_ready_up_key() const;
  inline void clear_ready_up_key();
  static const int kReadyUpKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 ready_up_key() const;
  inline void set_ready_up_key(::google::protobuf::uint64 value);

  // optional .CDOTAClientHardwareSpecs hardware_specs = 3;
  inline bool has_hardware_specs() const;
  inline void clear_hardware_specs();
  static const int kHardwareSpecsFieldNumber = 3;
  inline const ::CDOTAClientHardwareSpecs& hardware_specs() const;
  inline ::CDOTAClientHardwareSpecs* mutable_hardware_specs();
  inline ::CDOTAClientHardwareSpecs* release_hardware_specs();
  inline void set_allocated_hardware_specs(::CDOTAClientHardwareSpecs* hardware_specs);

  // @@protoc_insertion_point(class_scope:CMsgReadyUp)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_ready_up_key();
  inline void clear_has_ready_up_key();
  inline void set_has_hardware_specs();
  inline void clear_has_hardware_specs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ready_up_key_;
  ::CDOTAClientHardwareSpecs* hardware_specs_;
  int state_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgReadyUp* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReadyUpStatus : public ::google::protobuf::Message {
 public:
  CMsgReadyUpStatus();
  virtual ~CMsgReadyUpStatus();

  CMsgReadyUpStatus(const CMsgReadyUpStatus& from);

  inline CMsgReadyUpStatus& operator=(const CMsgReadyUpStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReadyUpStatus& default_instance();

  void Swap(CMsgReadyUpStatus* other);

  // implements Message ----------------------------------------------

  CMsgReadyUpStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReadyUpStatus& from);
  void MergeFrom(const CMsgReadyUpStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // repeated uint32 accepted_ids = 2;
  inline int accepted_ids_size() const;
  inline void clear_accepted_ids();
  static const int kAcceptedIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 accepted_ids(int index) const;
  inline void set_accepted_ids(int index, ::google::protobuf::uint32 value);
  inline void add_accepted_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      accepted_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_accepted_ids();

  // repeated uint32 declined_ids = 3;
  inline int declined_ids_size() const;
  inline void clear_declined_ids();
  static const int kDeclinedIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 declined_ids(int index) const;
  inline void set_declined_ids(int index, ::google::protobuf::uint32 value);
  inline void add_declined_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      declined_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_declined_ids();

  // @@protoc_insertion_point(class_scope:CMsgReadyUpStatus)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > accepted_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > declined_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgReadyUpStatus* default_instance_;
};
// -------------------------------------------------------------------

class CSourceTVGame_Player : public ::google::protobuf::Message {
 public:
  CSourceTVGame_Player();
  virtual ~CSourceTVGame_Player();

  CSourceTVGame_Player(const CSourceTVGame_Player& from);

  inline CSourceTVGame_Player& operator=(const CSourceTVGame_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSourceTVGame_Player& default_instance();

  void Swap(CSourceTVGame_Player* other);

  // implements Message ----------------------------------------------

  CSourceTVGame_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSourceTVGame_Player& from);
  void MergeFrom(const CSourceTVGame_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSourceTVGame.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CSourceTVGame_Player* default_instance_;
};
// -------------------------------------------------------------------

class CSourceTVGame : public ::google::protobuf::Message {
 public:
  CSourceTVGame();
  virtual ~CSourceTVGame();

  CSourceTVGame(const CSourceTVGame& from);

  inline CSourceTVGame& operator=(const CSourceTVGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSourceTVGame& default_instance();

  void Swap(CSourceTVGame* other);

  // implements Message ----------------------------------------------

  CSourceTVGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSourceTVGame& from);
  void MergeFrom(const CSourceTVGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSourceTVGame_Player Player;

  // accessors -------------------------------------------------------

  // optional uint32 source_tv_public_addr = 1;
  inline bool has_source_tv_public_addr() const;
  inline void clear_source_tv_public_addr();
  static const int kSourceTvPublicAddrFieldNumber = 1;
  inline ::google::protobuf::uint32 source_tv_public_addr() const;
  inline void set_source_tv_public_addr(::google::protobuf::uint32 value);

  // optional uint32 source_tv_private_addr = 2;
  inline bool has_source_tv_private_addr() const;
  inline void clear_source_tv_private_addr();
  static const int kSourceTvPrivateAddrFieldNumber = 2;
  inline ::google::protobuf::uint32 source_tv_private_addr() const;
  inline void set_source_tv_private_addr(::google::protobuf::uint32 value);

  // optional uint32 source_tv_port = 3;
  inline bool has_source_tv_port() const;
  inline void clear_source_tv_port();
  static const int kSourceTvPortFieldNumber = 3;
  inline ::google::protobuf::uint32 source_tv_port() const;
  inline void set_source_tv_port(::google::protobuf::uint32 value);

  // repeated .CSourceTVGame.Player good_players = 14;
  inline int good_players_size() const;
  inline void clear_good_players();
  static const int kGoodPlayersFieldNumber = 14;
  inline const ::CSourceTVGame_Player& good_players(int index) const;
  inline ::CSourceTVGame_Player* mutable_good_players(int index);
  inline ::CSourceTVGame_Player* add_good_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >&
      good_players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >*
      mutable_good_players();

  // repeated .CSourceTVGame.Player bad_players = 15;
  inline int bad_players_size() const;
  inline void clear_bad_players();
  static const int kBadPlayersFieldNumber = 15;
  inline const ::CSourceTVGame_Player& bad_players(int index) const;
  inline ::CSourceTVGame_Player* mutable_bad_players(int index);
  inline ::CSourceTVGame_Player* add_bad_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >&
      bad_players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >*
      mutable_bad_players();

  // repeated .CSourceTVGame.Player other_players = 16;
  inline int other_players_size() const;
  inline void clear_other_players();
  static const int kOtherPlayersFieldNumber = 16;
  inline const ::CSourceTVGame_Player& other_players(int index) const;
  inline ::CSourceTVGame_Player* mutable_other_players(int index);
  inline ::CSourceTVGame_Player* add_other_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >&
      other_players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >*
      mutable_other_players();

  // optional string game_name = 7;
  inline bool has_game_name() const;
  inline void clear_game_name();
  static const int kGameNameFieldNumber = 7;
  inline const ::std::string& game_name() const;
  inline void set_game_name(const ::std::string& value);
  inline void set_game_name(const char* value);
  inline void set_game_name(const char* value, size_t size);
  inline ::std::string* mutable_game_name();
  inline ::std::string* release_game_name();
  inline void set_allocated_game_name(::std::string* game_name);

  // repeated .CLobbyTeamDetails team_details = 9;
  inline int team_details_size() const;
  inline void clear_team_details();
  static const int kTeamDetailsFieldNumber = 9;
  inline const ::CLobbyTeamDetails& team_details(int index) const;
  inline ::CLobbyTeamDetails* mutable_team_details(int index);
  inline ::CLobbyTeamDetails* add_team_details();
  inline const ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >&
      team_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >*
      mutable_team_details();

  // optional uint32 num_spectators = 10;
  inline bool has_num_spectators() const;
  inline void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 10;
  inline ::google::protobuf::uint32 num_spectators() const;
  inline void set_num_spectators(::google::protobuf::uint32 value);

  // optional uint32 tournament_id = 11;
  inline bool has_tournament_id() const;
  inline void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 11;
  inline ::google::protobuf::uint32 tournament_id() const;
  inline void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 tournament_game_id = 12;
  inline bool has_tournament_game_id() const;
  inline void clear_tournament_game_id();
  static const int kTournamentGameIdFieldNumber = 12;
  inline ::google::protobuf::uint32 tournament_game_id() const;
  inline void set_tournament_game_id(::google::protobuf::uint32 value);

  // optional uint32 tower_state = 13;
  inline bool has_tower_state() const;
  inline void clear_tower_state();
  static const int kTowerStateFieldNumber = 13;
  inline ::google::protobuf::uint32 tower_state() const;
  inline void set_tower_state(::google::protobuf::uint32 value);

  // optional float tv_broadcast_time = 17;
  inline bool has_tv_broadcast_time() const;
  inline void clear_tv_broadcast_time();
  static const int kTvBroadcastTimeFieldNumber = 17;
  inline float tv_broadcast_time() const;
  inline void set_tv_broadcast_time(float value);

  // optional float game_time = 18;
  inline bool has_game_time() const;
  inline void clear_game_time();
  static const int kGameTimeFieldNumber = 18;
  inline float game_time() const;
  inline void set_game_time(float value);

  // optional fixed64 server_steamid = 19;
  inline bool has_server_steamid() const;
  inline void clear_server_steamid();
  static const int kServerSteamidFieldNumber = 19;
  inline ::google::protobuf::uint64 server_steamid() const;
  inline void set_server_steamid(::google::protobuf::uint64 value);

  // optional uint32 leagueid = 20;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 20;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional .DOTA_GameMode game_mode = 21 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 21;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // optional uint32 lobby_type = 22;
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 22;
  inline ::google::protobuf::uint32 lobby_type() const;
  inline void set_lobby_type(::google::protobuf::uint32 value);

  // optional uint64 custom_game_id = 24;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 24;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 average_rank = 25;
  inline bool has_average_rank() const;
  inline void clear_average_rank();
  static const int kAverageRankFieldNumber = 25;
  inline ::google::protobuf::uint32 average_rank() const;
  inline void set_average_rank(::google::protobuf::uint32 value);

  // optional uint32 radiant_kills = 26;
  inline bool has_radiant_kills() const;
  inline void clear_radiant_kills();
  static const int kRadiantKillsFieldNumber = 26;
  inline ::google::protobuf::uint32 radiant_kills() const;
  inline void set_radiant_kills(::google::protobuf::uint32 value);

  // optional uint32 dire_kills = 27;
  inline bool has_dire_kills() const;
  inline void clear_dire_kills();
  static const int kDireKillsFieldNumber = 27;
  inline ::google::protobuf::uint32 dire_kills() const;
  inline void set_dire_kills(::google::protobuf::uint32 value);

  // optional uint32 barracks_state = 28;
  inline bool has_barracks_state() const;
  inline void clear_barracks_state();
  static const int kBarracksStateFieldNumber = 28;
  inline ::google::protobuf::uint32 barracks_state() const;
  inline void set_barracks_state(::google::protobuf::uint32 value);

  // optional uint64 group_id = 29;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 29;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 engine = 31;
  inline bool has_engine() const;
  inline void clear_engine();
  static const int kEngineFieldNumber = 31;
  inline ::google::protobuf::uint32 engine() const;
  inline void set_engine(::google::protobuf::uint32 value);

  // optional uint32 broadcast_delay = 32;
  inline bool has_broadcast_delay() const;
  inline void clear_broadcast_delay();
  static const int kBroadcastDelayFieldNumber = 32;
  inline ::google::protobuf::uint32 broadcast_delay() const;
  inline void set_broadcast_delay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSourceTVGame)
 private:
  inline void set_has_source_tv_public_addr();
  inline void clear_has_source_tv_public_addr();
  inline void set_has_source_tv_private_addr();
  inline void clear_has_source_tv_private_addr();
  inline void set_has_source_tv_port();
  inline void clear_has_source_tv_port();
  inline void set_has_game_name();
  inline void clear_has_game_name();
  inline void set_has_num_spectators();
  inline void clear_has_num_spectators();
  inline void set_has_tournament_id();
  inline void clear_has_tournament_id();
  inline void set_has_tournament_game_id();
  inline void clear_has_tournament_game_id();
  inline void set_has_tower_state();
  inline void clear_has_tower_state();
  inline void set_has_tv_broadcast_time();
  inline void clear_has_tv_broadcast_time();
  inline void set_has_game_time();
  inline void clear_has_game_time();
  inline void set_has_server_steamid();
  inline void clear_has_server_steamid();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_lobby_type();
  inline void clear_has_lobby_type();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_average_rank();
  inline void clear_has_average_rank();
  inline void set_has_radiant_kills();
  inline void clear_has_radiant_kills();
  inline void set_has_dire_kills();
  inline void clear_has_dire_kills();
  inline void set_has_barracks_state();
  inline void clear_has_barracks_state();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_engine();
  inline void clear_has_engine();
  inline void set_has_broadcast_delay();
  inline void clear_has_broadcast_delay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 source_tv_public_addr_;
  ::google::protobuf::uint32 source_tv_private_addr_;
  ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player > good_players_;
  ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player > bad_players_;
  ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player > other_players_;
  ::google::protobuf::uint32 source_tv_port_;
  ::google::protobuf::uint32 num_spectators_;
  ::std::string* game_name_;
  ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails > team_details_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 tournament_game_id_;
  ::google::protobuf::uint32 tower_state_;
  float tv_broadcast_time_;
  ::google::protobuf::uint64 server_steamid_;
  float game_time_;
  ::google::protobuf::uint32 leagueid_;
  int game_mode_;
  ::google::protobuf::uint32 lobby_type_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 average_rank_;
  ::google::protobuf::uint32 radiant_kills_;
  ::google::protobuf::uint32 dire_kills_;
  ::google::protobuf::uint32 barracks_state_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 engine_;
  ::google::protobuf::uint32 broadcast_delay_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CSourceTVGame* default_instance_;
};
// -------------------------------------------------------------------

class CSourceTVGameSmall : public ::google::protobuf::Message {
 public:
  CSourceTVGameSmall();
  virtual ~CSourceTVGameSmall();

  CSourceTVGameSmall(const CSourceTVGameSmall& from);

  inline CSourceTVGameSmall& operator=(const CSourceTVGameSmall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSourceTVGameSmall& default_instance();

  void Swap(CSourceTVGameSmall* other);

  // implements Message ----------------------------------------------

  CSourceTVGameSmall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSourceTVGameSmall& from);
  void MergeFrom(const CSourceTVGameSmall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 activate_time = 1;
  inline bool has_activate_time() const;
  inline void clear_activate_time();
  static const int kActivateTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 activate_time() const;
  inline void set_activate_time(::google::protobuf::uint32 value);

  // optional uint32 deactivate_time = 2;
  inline bool has_deactivate_time() const;
  inline void clear_deactivate_time();
  static const int kDeactivateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 deactivate_time() const;
  inline void set_deactivate_time(::google::protobuf::uint32 value);

  // optional uint64 server_steam_id = 3;
  inline bool has_server_steam_id() const;
  inline void clear_server_steam_id();
  static const int kServerSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 server_steam_id() const;
  inline void set_server_steam_id(::google::protobuf::uint64 value);

  // optional uint64 lobby_id = 4;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 5;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 5;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 6;
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 lobby_type() const;
  inline void set_lobby_type(::google::protobuf::uint32 value);

  // optional int32 game_time = 7;
  inline bool has_game_time() const;
  inline void clear_game_time();
  static const int kGameTimeFieldNumber = 7;
  inline ::google::protobuf::int32 game_time() const;
  inline void set_game_time(::google::protobuf::int32 value);

  // optional uint32 delay = 8;
  inline bool has_delay() const;
  inline void clear_delay();
  static const int kDelayFieldNumber = 8;
  inline ::google::protobuf::uint32 delay() const;
  inline void set_delay(::google::protobuf::uint32 value);

  // optional uint32 spectators = 9;
  inline bool has_spectators() const;
  inline void clear_spectators();
  static const int kSpectatorsFieldNumber = 9;
  inline ::google::protobuf::uint32 spectators() const;
  inline void set_spectators(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 10;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 10;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // optional uint32 average_mmr = 11;
  inline bool has_average_mmr() const;
  inline void clear_average_mmr();
  static const int kAverageMmrFieldNumber = 11;
  inline ::google::protobuf::uint32 average_mmr() const;
  inline void set_average_mmr(::google::protobuf::uint32 value);

  // optional uint32 engine = 12;
  inline bool has_engine() const;
  inline void clear_engine();
  static const int kEngineFieldNumber = 12;
  inline ::google::protobuf::uint32 engine() const;
  inline void set_engine(::google::protobuf::uint32 value);

  // repeated uint32 hero_ids = 13;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 13;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // repeated fixed64 steam_ids = 14;
  inline int steam_ids_size() const;
  inline void clear_steam_ids();
  static const int kSteamIdsFieldNumber = 14;
  inline ::google::protobuf::uint64 steam_ids(int index) const;
  inline void set_steam_ids(int index, ::google::protobuf::uint64 value);
  inline void add_steam_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steam_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steam_ids();

  // optional string team_name_radiant = 15;
  inline bool has_team_name_radiant() const;
  inline void clear_team_name_radiant();
  static const int kTeamNameRadiantFieldNumber = 15;
  inline const ::std::string& team_name_radiant() const;
  inline void set_team_name_radiant(const ::std::string& value);
  inline void set_team_name_radiant(const char* value);
  inline void set_team_name_radiant(const char* value, size_t size);
  inline ::std::string* mutable_team_name_radiant();
  inline ::std::string* release_team_name_radiant();
  inline void set_allocated_team_name_radiant(::std::string* team_name_radiant);

  // optional string team_name_dire = 16;
  inline bool has_team_name_dire() const;
  inline void clear_team_name_dire();
  static const int kTeamNameDireFieldNumber = 16;
  inline const ::std::string& team_name_dire() const;
  inline void set_team_name_dire(const ::std::string& value);
  inline void set_team_name_dire(const char* value);
  inline void set_team_name_dire(const char* value, size_t size);
  inline ::std::string* mutable_team_name_dire();
  inline ::std::string* release_team_name_dire();
  inline void set_allocated_team_name_dire(::std::string* team_name_dire);

  // optional uint32 sort_score = 17;
  inline bool has_sort_score() const;
  inline void clear_sort_score();
  static const int kSortScoreFieldNumber = 17;
  inline ::google::protobuf::uint32 sort_score() const;
  inline void set_sort_score(::google::protobuf::uint32 value);

  // optional float last_update_time = 18;
  inline bool has_last_update_time() const;
  inline void clear_last_update_time();
  static const int kLastUpdateTimeFieldNumber = 18;
  inline float last_update_time() const;
  inline void set_last_update_time(float value);

  // @@protoc_insertion_point(class_scope:CSourceTVGameSmall)
 private:
  inline void set_has_activate_time();
  inline void clear_has_activate_time();
  inline void set_has_deactivate_time();
  inline void clear_has_deactivate_time();
  inline void set_has_server_steam_id();
  inline void clear_has_server_steam_id();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_lobby_type();
  inline void clear_has_lobby_type();
  inline void set_has_game_time();
  inline void clear_has_game_time();
  inline void set_has_delay();
  inline void clear_has_delay();
  inline void set_has_spectators();
  inline void clear_has_spectators();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_average_mmr();
  inline void clear_has_average_mmr();
  inline void set_has_engine();
  inline void clear_has_engine();
  inline void set_has_team_name_radiant();
  inline void clear_has_team_name_radiant();
  inline void set_has_team_name_dire();
  inline void clear_has_team_name_dire();
  inline void set_has_sort_score();
  inline void clear_has_sort_score();
  inline void set_has_last_update_time();
  inline void clear_has_last_update_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 activate_time_;
  ::google::protobuf::uint32 deactivate_time_;
  ::google::protobuf::uint64 server_steam_id_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 lobby_type_;
  ::google::protobuf::int32 game_time_;
  ::google::protobuf::uint32 delay_;
  ::google::protobuf::uint32 spectators_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::uint32 average_mmr_;
  ::google::protobuf::uint32 engine_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steam_ids_;
  ::std::string* team_name_radiant_;
  ::std::string* team_name_dire_;
  ::google::protobuf::uint32 sort_score_;
  float last_update_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CSourceTVGameSmall* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSourceTVGamesResponse : public ::google::protobuf::Message {
 public:
  CMsgSourceTVGamesResponse();
  virtual ~CMsgSourceTVGamesResponse();

  CMsgSourceTVGamesResponse(const CMsgSourceTVGamesResponse& from);

  inline CMsgSourceTVGamesResponse& operator=(const CMsgSourceTVGamesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSourceTVGamesResponse& default_instance();

  void Swap(CMsgSourceTVGamesResponse* other);

  // implements Message ----------------------------------------------

  CMsgSourceTVGamesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSourceTVGamesResponse& from);
  void MergeFrom(const CMsgSourceTVGamesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSourceTVGame games = 1;
  inline int games_size() const;
  inline void clear_games();
  static const int kGamesFieldNumber = 1;
  inline const ::CSourceTVGame& games(int index) const;
  inline ::CSourceTVGame* mutable_games(int index);
  inline ::CSourceTVGame* add_games();
  inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame >&
      games() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame >*
      mutable_games();

  // optional uint32 num_total_games = 2;
  inline bool has_num_total_games() const;
  inline void clear_num_total_games();
  static const int kNumTotalGamesFieldNumber = 2;
  inline ::google::protobuf::uint32 num_total_games() const;
  inline void set_num_total_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSourceTVGamesResponse)
 private:
  inline void set_has_num_total_games();
  inline void clear_has_num_total_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSourceTVGame > games_;
  ::google::protobuf::uint32 num_total_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSourceTVGamesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFindSourceTVGames : public ::google::protobuf::Message {
 public:
  CMsgFindSourceTVGames();
  virtual ~CMsgFindSourceTVGames();

  CMsgFindSourceTVGames(const CMsgFindSourceTVGames& from);

  inline CMsgFindSourceTVGames& operator=(const CMsgFindSourceTVGames& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFindSourceTVGames& default_instance();

  void Swap(CMsgFindSourceTVGames* other);

  // implements Message ----------------------------------------------

  CMsgFindSourceTVGames* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFindSourceTVGames& from);
  void MergeFrom(const CMsgFindSourceTVGames& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_key = 1;
  inline bool has_search_key() const;
  inline void clear_search_key();
  static const int kSearchKeyFieldNumber = 1;
  inline const ::std::string& search_key() const;
  inline void set_search_key(const ::std::string& value);
  inline void set_search_key(const char* value);
  inline void set_search_key(const char* value, size_t size);
  inline ::std::string* mutable_search_key();
  inline ::std::string* release_search_key();
  inline void set_allocated_search_key(::std::string* search_key);

  // optional uint32 start = 2;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 2;
  inline ::google::protobuf::uint32 start() const;
  inline void set_start(::google::protobuf::uint32 value);

  // optional uint32 num_games = 3;
  inline bool has_num_games() const;
  inline void clear_num_games();
  static const int kNumGamesFieldNumber = 3;
  inline ::google::protobuf::uint32 num_games() const;
  inline void set_num_games(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 4;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 4;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 heroid = 5;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 5;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional bool team_game = 6;
  inline bool has_team_game() const;
  inline void clear_team_game();
  static const int kTeamGameFieldNumber = 6;
  inline bool team_game() const;
  inline void set_team_game(bool value);

  // optional uint64 custom_game_id = 10;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 10;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgFindSourceTVGames)
 private:
  inline void set_has_search_key();
  inline void clear_has_search_key();
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_num_games();
  inline void clear_has_num_games();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_team_game();
  inline void clear_has_team_game();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* search_key_;
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 num_games_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint64 custom_game_id_;
  bool team_game_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgFindSourceTVGames* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCFindTopSourceTVGames : public ::google::protobuf::Message {
 public:
  CMsgClientToGCFindTopSourceTVGames();
  virtual ~CMsgClientToGCFindTopSourceTVGames();

  CMsgClientToGCFindTopSourceTVGames(const CMsgClientToGCFindTopSourceTVGames& from);

  inline CMsgClientToGCFindTopSourceTVGames& operator=(const CMsgClientToGCFindTopSourceTVGames& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFindTopSourceTVGames& default_instance();

  void Swap(CMsgClientToGCFindTopSourceTVGames* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCFindTopSourceTVGames* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCFindTopSourceTVGames& from);
  void MergeFrom(const CMsgClientToGCFindTopSourceTVGames& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_key = 1;
  inline bool has_search_key() const;
  inline void clear_search_key();
  static const int kSearchKeyFieldNumber = 1;
  inline const ::std::string& search_key() const;
  inline void set_search_key(const ::std::string& value);
  inline void set_search_key(const char* value);
  inline void set_search_key(const char* value, size_t size);
  inline ::std::string* mutable_search_key();
  inline ::std::string* release_search_key();
  inline void set_allocated_search_key(::std::string* search_key);

  // optional uint32 league_id = 2;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 start_game = 4;
  inline bool has_start_game() const;
  inline void clear_start_game();
  static const int kStartGameFieldNumber = 4;
  inline ::google::protobuf::uint32 start_game() const;
  inline void set_start_game(::google::protobuf::uint32 value);

  // optional uint32 game_list_index = 5;
  inline bool has_game_list_index() const;
  inline void clear_game_list_index();
  static const int kGameListIndexFieldNumber = 5;
  inline ::google::protobuf::uint32 game_list_index() const;
  inline void set_game_list_index(::google::protobuf::uint32 value);

  // repeated uint64 lobby_ids = 6;
  inline int lobby_ids_size() const;
  inline void clear_lobby_ids();
  static const int kLobbyIdsFieldNumber = 6;
  inline ::google::protobuf::uint64 lobby_ids(int index) const;
  inline void set_lobby_ids(int index, ::google::protobuf::uint64 value);
  inline void add_lobby_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      lobby_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_lobby_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFindTopSourceTVGames)
 private:
  inline void set_has_search_key();
  inline void clear_has_search_key();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_start_game();
  inline void clear_has_start_game();
  inline void set_has_game_list_index();
  inline void clear_has_game_list_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* search_key_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 start_game_;
  ::google::protobuf::uint32 game_list_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > lobby_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCFindTopSourceTVGames* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFindTopSourceTVGamesResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFindTopSourceTVGamesResponse();
  virtual ~CMsgGCToClientFindTopSourceTVGamesResponse();

  CMsgGCToClientFindTopSourceTVGamesResponse(const CMsgGCToClientFindTopSourceTVGamesResponse& from);

  inline CMsgGCToClientFindTopSourceTVGamesResponse& operator=(const CMsgGCToClientFindTopSourceTVGamesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFindTopSourceTVGamesResponse& default_instance();

  void Swap(CMsgGCToClientFindTopSourceTVGamesResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFindTopSourceTVGamesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFindTopSourceTVGamesResponse& from);
  void MergeFrom(const CMsgGCToClientFindTopSourceTVGamesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_key = 1;
  inline bool has_search_key() const;
  inline void clear_search_key();
  static const int kSearchKeyFieldNumber = 1;
  inline const ::std::string& search_key() const;
  inline void set_search_key(const ::std::string& value);
  inline void set_search_key(const char* value);
  inline void set_search_key(const char* value, size_t size);
  inline ::std::string* mutable_search_key();
  inline ::std::string* release_search_key();
  inline void set_allocated_search_key(::std::string* search_key);

  // optional uint32 league_id = 2;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 start_game = 4;
  inline bool has_start_game() const;
  inline void clear_start_game();
  static const int kStartGameFieldNumber = 4;
  inline ::google::protobuf::uint32 start_game() const;
  inline void set_start_game(::google::protobuf::uint32 value);

  // optional uint32 num_games = 5;
  inline bool has_num_games() const;
  inline void clear_num_games();
  static const int kNumGamesFieldNumber = 5;
  inline ::google::protobuf::uint32 num_games() const;
  inline void set_num_games(::google::protobuf::uint32 value);

  // optional uint32 game_list_index = 6;
  inline bool has_game_list_index() const;
  inline void clear_game_list_index();
  static const int kGameListIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 game_list_index() const;
  inline void set_game_list_index(::google::protobuf::uint32 value);

  // repeated .CSourceTVGameSmall game_list = 7;
  inline int game_list_size() const;
  inline void clear_game_list();
  static const int kGameListFieldNumber = 7;
  inline const ::CSourceTVGameSmall& game_list(int index) const;
  inline ::CSourceTVGameSmall* mutable_game_list(int index);
  inline ::CSourceTVGameSmall* add_game_list();
  inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGameSmall >&
      game_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGameSmall >*
      mutable_game_list();

  // optional bool specific_games = 8;
  inline bool has_specific_games() const;
  inline void clear_specific_games();
  static const int kSpecificGamesFieldNumber = 8;
  inline bool specific_games() const;
  inline void set_specific_games(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFindTopSourceTVGamesResponse)
 private:
  inline void set_has_search_key();
  inline void clear_has_search_key();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_start_game();
  inline void clear_has_start_game();
  inline void set_has_num_games();
  inline void clear_has_num_games();
  inline void set_has_game_list_index();
  inline void clear_has_game_list_index();
  inline void set_has_specific_games();
  inline void clear_has_specific_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* search_key_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 start_game_;
  ::google::protobuf::uint32 num_games_;
  ::google::protobuf::RepeatedPtrField< ::CSourceTVGameSmall > game_list_;
  ::google::protobuf::uint32 game_list_index_;
  bool specific_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFindTopSourceTVGamesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTopMatchesRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTopMatchesRequest();
  virtual ~CMsgClientToGCTopMatchesRequest();

  CMsgClientToGCTopMatchesRequest(const CMsgClientToGCTopMatchesRequest& from);

  inline CMsgClientToGCTopMatchesRequest& operator=(const CMsgClientToGCTopMatchesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTopMatchesRequest& default_instance();

  void Swap(CMsgClientToGCTopMatchesRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTopMatchesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTopMatchesRequest& from);
  void MergeFrom(const CMsgClientToGCTopMatchesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 player_account_id = 2;
  inline bool has_player_account_id() const;
  inline void clear_player_account_id();
  static const int kPlayerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 player_account_id() const;
  inline void set_player_account_id(::google::protobuf::uint32 value);

  // optional uint32 team_id = 3;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 3;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTopMatchesRequest)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_player_account_id();
  inline void clear_has_player_account_id();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 player_account_id_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTopMatchesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTopLeagueMatchesRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTopLeagueMatchesRequest();
  virtual ~CMsgClientToGCTopLeagueMatchesRequest();

  CMsgClientToGCTopLeagueMatchesRequest(const CMsgClientToGCTopLeagueMatchesRequest& from);

  inline CMsgClientToGCTopLeagueMatchesRequest& operator=(const CMsgClientToGCTopLeagueMatchesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTopLeagueMatchesRequest& default_instance();

  void Swap(CMsgClientToGCTopLeagueMatchesRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTopLeagueMatchesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTopLeagueMatchesRequest& from);
  void MergeFrom(const CMsgClientToGCTopLeagueMatchesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTopLeagueMatchesRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTopLeagueMatchesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTopFriendMatchesRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTopFriendMatchesRequest();
  virtual ~CMsgClientToGCTopFriendMatchesRequest();

  CMsgClientToGCTopFriendMatchesRequest(const CMsgClientToGCTopFriendMatchesRequest& from);

  inline CMsgClientToGCTopFriendMatchesRequest& operator=(const CMsgClientToGCTopFriendMatchesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTopFriendMatchesRequest& default_instance();

  void Swap(CMsgClientToGCTopFriendMatchesRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTopFriendMatchesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTopFriendMatchesRequest& from);
  void MergeFrom(const CMsgClientToGCTopFriendMatchesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTopFriendMatchesRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTopFriendMatchesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCMatchesMinimalRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCMatchesMinimalRequest();
  virtual ~CMsgClientToGCMatchesMinimalRequest();

  CMsgClientToGCMatchesMinimalRequest(const CMsgClientToGCMatchesMinimalRequest& from);

  inline CMsgClientToGCMatchesMinimalRequest& operator=(const CMsgClientToGCMatchesMinimalRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCMatchesMinimalRequest& default_instance();

  void Swap(CMsgClientToGCMatchesMinimalRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCMatchesMinimalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCMatchesMinimalRequest& from);
  void MergeFrom(const CMsgClientToGCMatchesMinimalRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  inline int match_ids_size() const;
  inline void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 match_ids(int index) const;
  inline void set_match_ids(int index, ::google::protobuf::uint64 value);
  inline void add_match_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCMatchesMinimalRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCMatchesMinimalRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCMatchesMinimalResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCMatchesMinimalResponse();
  virtual ~CMsgClientToGCMatchesMinimalResponse();

  CMsgClientToGCMatchesMinimalResponse(const CMsgClientToGCMatchesMinimalResponse& from);

  inline CMsgClientToGCMatchesMinimalResponse& operator=(const CMsgClientToGCMatchesMinimalResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCMatchesMinimalResponse& default_instance();

  void Swap(CMsgClientToGCMatchesMinimalResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCMatchesMinimalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCMatchesMinimalResponse& from);
  void MergeFrom(const CMsgClientToGCMatchesMinimalResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatchMinimal matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAMatchMinimal& matches(int index) const;
  inline ::CMsgDOTAMatchMinimal* mutable_matches(int index);
  inline ::CMsgDOTAMatchMinimal* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >*
      mutable_matches();

  // optional bool last_match = 2;
  inline bool has_last_match() const;
  inline void clear_last_match();
  static const int kLastMatchFieldNumber = 2;
  inline bool last_match() const;
  inline void set_last_match(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCMatchesMinimalResponse)
 private:
  inline void set_has_last_match();
  inline void clear_has_last_match();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal > matches_;
  bool last_match_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCMatchesMinimalResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientTopLeagueMatchesResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientTopLeagueMatchesResponse();
  virtual ~CMsgGCToClientTopLeagueMatchesResponse();

  CMsgGCToClientTopLeagueMatchesResponse(const CMsgGCToClientTopLeagueMatchesResponse& from);

  inline CMsgGCToClientTopLeagueMatchesResponse& operator=(const CMsgGCToClientTopLeagueMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTopLeagueMatchesResponse& default_instance();

  void Swap(CMsgGCToClientTopLeagueMatchesResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientTopLeagueMatchesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientTopLeagueMatchesResponse& from);
  void MergeFrom(const CMsgGCToClientTopLeagueMatchesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatchMinimal matches = 2;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 2;
  inline const ::CMsgDOTAMatchMinimal& matches(int index) const;
  inline ::CMsgDOTAMatchMinimal* mutable_matches(int index);
  inline ::CMsgDOTAMatchMinimal* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >*
      mutable_matches();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientTopLeagueMatchesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal > matches_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientTopLeagueMatchesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientTopFriendMatchesResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientTopFriendMatchesResponse();
  virtual ~CMsgGCToClientTopFriendMatchesResponse();

  CMsgGCToClientTopFriendMatchesResponse(const CMsgGCToClientTopFriendMatchesResponse& from);

  inline CMsgGCToClientTopFriendMatchesResponse& operator=(const CMsgGCToClientTopFriendMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTopFriendMatchesResponse& default_instance();

  void Swap(CMsgGCToClientTopFriendMatchesResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientTopFriendMatchesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientTopFriendMatchesResponse& from);
  void MergeFrom(const CMsgGCToClientTopFriendMatchesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatchMinimal matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAMatchMinimal& matches(int index) const;
  inline ::CMsgDOTAMatchMinimal* mutable_matches(int index);
  inline ::CMsgDOTAMatchMinimal* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >*
      mutable_matches();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientTopFriendMatchesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal > matches_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientTopFriendMatchesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCFindTopMatches : public ::google::protobuf::Message {
 public:
  CMsgClientToGCFindTopMatches();
  virtual ~CMsgClientToGCFindTopMatches();

  CMsgClientToGCFindTopMatches(const CMsgClientToGCFindTopMatches& from);

  inline CMsgClientToGCFindTopMatches& operator=(const CMsgClientToGCFindTopMatches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFindTopMatches& default_instance();

  void Swap(CMsgClientToGCFindTopMatches* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCFindTopMatches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCFindTopMatches& from);
  void MergeFrom(const CMsgClientToGCFindTopMatches& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 start_game = 1;
  inline bool has_start_game() const;
  inline void clear_start_game();
  static const int kStartGameFieldNumber = 1;
  inline ::google::protobuf::uint32 start_game() const;
  inline void set_start_game(::google::protobuf::uint32 value);

  // optional uint32 league_id = 2;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 friend_id = 4;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 4;
  inline ::google::protobuf::uint32 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint32 value);

  // optional bool friend_list = 5;
  inline bool has_friend_list() const;
  inline void clear_friend_list();
  static const int kFriendListFieldNumber = 5;
  inline bool friend_list() const;
  inline void set_friend_list(bool value);

  // optional bool league_list = 6;
  inline bool has_league_list() const;
  inline void clear_league_list();
  static const int kLeagueListFieldNumber = 6;
  inline bool league_list() const;
  inline void set_league_list(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFindTopMatches)
 private:
  inline void set_has_start_game();
  inline void clear_has_start_game();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_friend_list();
  inline void clear_has_friend_list();
  inline void set_has_league_list();
  inline void clear_has_league_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 start_game_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 friend_id_;
  bool friend_list_;
  bool league_list_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCFindTopMatches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFindTopLeagueMatchesResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFindTopLeagueMatchesResponse();
  virtual ~CMsgGCToClientFindTopLeagueMatchesResponse();

  CMsgGCToClientFindTopLeagueMatchesResponse(const CMsgGCToClientFindTopLeagueMatchesResponse& from);

  inline CMsgGCToClientFindTopLeagueMatchesResponse& operator=(const CMsgGCToClientFindTopLeagueMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFindTopLeagueMatchesResponse& default_instance();

  void Swap(CMsgGCToClientFindTopLeagueMatchesResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFindTopLeagueMatchesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFindTopLeagueMatchesResponse& from);
  void MergeFrom(const CMsgGCToClientFindTopLeagueMatchesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 start_game = 1;
  inline bool has_start_game() const;
  inline void clear_start_game();
  static const int kStartGameFieldNumber = 1;
  inline ::google::protobuf::uint32 start_game() const;
  inline void set_start_game(::google::protobuf::uint32 value);

  // optional uint32 league_id = 2;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // repeated uint32 match_ids = 4;
  inline int match_ids_size() const;
  inline void clear_match_ids();
  static const int kMatchIdsFieldNumber = 4;
  inline ::google::protobuf::uint32 match_ids(int index) const;
  inline void set_match_ids(int index, ::google::protobuf::uint32 value);
  inline void add_match_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      match_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_match_ids();

  // repeated .CMsgDOTAMatch matches = 5;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 5;
  inline const ::CMsgDOTAMatch& matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_matches(int index);
  inline ::CMsgDOTAMatch* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_matches();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFindTopLeagueMatchesResponse)
 private:
  inline void set_has_start_game();
  inline void clear_has_start_game();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 start_game_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > match_ids_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > matches_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFindTopLeagueMatchesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSpectateFriendGame : public ::google::protobuf::Message {
 public:
  CMsgSpectateFriendGame();
  virtual ~CMsgSpectateFriendGame();

  CMsgSpectateFriendGame(const CMsgSpectateFriendGame& from);

  inline CMsgSpectateFriendGame& operator=(const CMsgSpectateFriendGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSpectateFriendGame& default_instance();

  void Swap(CMsgSpectateFriendGame* other);

  // implements Message ----------------------------------------------

  CMsgSpectateFriendGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSpectateFriendGame& from);
  void MergeFrom(const CMsgSpectateFriendGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSpectateFriendGame)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSpectateFriendGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSpectateFriendGameResponse : public ::google::protobuf::Message {
 public:
  CMsgSpectateFriendGameResponse();
  virtual ~CMsgSpectateFriendGameResponse();

  CMsgSpectateFriendGameResponse(const CMsgSpectateFriendGameResponse& from);

  inline CMsgSpectateFriendGameResponse& operator=(const CMsgSpectateFriendGameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSpectateFriendGameResponse& default_instance();

  void Swap(CMsgSpectateFriendGameResponse* other);

  // implements Message ----------------------------------------------

  CMsgSpectateFriendGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSpectateFriendGameResponse& from);
  void MergeFrom(const CMsgSpectateFriendGameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 server_steamid = 4;
  inline bool has_server_steamid() const;
  inline void clear_server_steamid();
  static const int kServerSteamidFieldNumber = 4;
  inline ::google::protobuf::uint64 server_steamid() const;
  inline void set_server_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSpectateFriendGameResponse)
 private:
  inline void set_has_server_steamid();
  inline void clear_has_server_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 server_steamid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSpectateFriendGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAbandonCurrentGame : public ::google::protobuf::Message {
 public:
  CMsgAbandonCurrentGame();
  virtual ~CMsgAbandonCurrentGame();

  CMsgAbandonCurrentGame(const CMsgAbandonCurrentGame& from);

  inline CMsgAbandonCurrentGame& operator=(const CMsgAbandonCurrentGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAbandonCurrentGame& default_instance();

  void Swap(CMsgAbandonCurrentGame* other);

  // implements Message ----------------------------------------------

  CMsgAbandonCurrentGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAbandonCurrentGame& from);
  void MergeFrom(const CMsgAbandonCurrentGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgAbandonCurrentGame)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgAbandonCurrentGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientSuspended : public ::google::protobuf::Message {
 public:
  CMsgClientSuspended();
  virtual ~CMsgClientSuspended();

  CMsgClientSuspended(const CMsgClientSuspended& from);

  inline CMsgClientSuspended& operator=(const CMsgClientSuspended& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSuspended& default_instance();

  void Swap(CMsgClientSuspended* other);

  // implements Message ----------------------------------------------

  CMsgClientSuspended* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientSuspended& from);
  void MergeFrom(const CMsgClientSuspended& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_end = 1;
  inline bool has_time_end() const;
  inline void clear_time_end();
  static const int kTimeEndFieldNumber = 1;
  inline ::google::protobuf::uint32 time_end() const;
  inline void set_time_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientSuspended)
 private:
  inline void set_has_time_end();
  inline void clear_has_time_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_end_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientSuspended* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbySetDetails : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbySetDetails();
  virtual ~CMsgPracticeLobbySetDetails();

  CMsgPracticeLobbySetDetails(const CMsgPracticeLobbySetDetails& from);

  inline CMsgPracticeLobbySetDetails& operator=(const CMsgPracticeLobbySetDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbySetDetails& default_instance();

  void Swap(CMsgPracticeLobbySetDetails* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbySetDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbySetDetails& from);
  void MergeFrom(const CMsgPracticeLobbySetDetails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional string game_name = 2;
  inline bool has_game_name() const;
  inline void clear_game_name();
  static const int kGameNameFieldNumber = 2;
  inline const ::std::string& game_name() const;
  inline void set_game_name(const ::std::string& value);
  inline void set_game_name(const char* value);
  inline void set_game_name(const char* value, size_t size);
  inline ::std::string* mutable_game_name();
  inline ::std::string* release_game_name();
  inline void set_allocated_game_name(::std::string* game_name);

  // repeated .CLobbyTeamDetails team_details = 3;
  inline int team_details_size() const;
  inline void clear_team_details();
  static const int kTeamDetailsFieldNumber = 3;
  inline const ::CLobbyTeamDetails& team_details(int index) const;
  inline ::CLobbyTeamDetails* mutable_team_details(int index);
  inline ::CLobbyTeamDetails* add_team_details();
  inline const ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >&
      team_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >*
      mutable_team_details();

  // optional uint32 server_region = 4;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 4;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 5;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 5;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // optional .DOTA_CM_PICK cm_pick = 6 [default = DOTA_CM_RANDOM];
  inline bool has_cm_pick() const;
  inline void clear_cm_pick();
  static const int kCmPickFieldNumber = 6;
  inline ::DOTA_CM_PICK cm_pick() const;
  inline void set_cm_pick(::DOTA_CM_PICK value);

  // optional .DOTABotDifficulty bot_difficulty = 9 [default = BOT_DIFFICULTY_MEDIUM];
  inline bool has_bot_difficulty() const;
  inline void clear_bot_difficulty();
  static const int kBotDifficultyFieldNumber = 9;
  inline ::DOTABotDifficulty bot_difficulty() const;
  inline void set_bot_difficulty(::DOTABotDifficulty value);

  // optional bool allow_cheats = 10;
  inline bool has_allow_cheats() const;
  inline void clear_allow_cheats();
  static const int kAllowCheatsFieldNumber = 10;
  inline bool allow_cheats() const;
  inline void set_allow_cheats(bool value);

  // optional bool fill_with_bots = 11;
  inline bool has_fill_with_bots() const;
  inline void clear_fill_with_bots();
  static const int kFillWithBotsFieldNumber = 11;
  inline bool fill_with_bots() const;
  inline void set_fill_with_bots(bool value);

  // optional bool intro_mode = 12;
  inline bool has_intro_mode() const;
  inline void clear_intro_mode();
  static const int kIntroModeFieldNumber = 12;
  inline bool intro_mode() const;
  inline void set_intro_mode(bool value);

  // optional bool allow_spectating = 13;
  inline bool has_allow_spectating() const;
  inline void clear_allow_spectating();
  static const int kAllowSpectatingFieldNumber = 13;
  inline bool allow_spectating() const;
  inline void set_allow_spectating(bool value);

  // optional .DOTAGameVersion game_version = 14 [default = GAME_VERSION_CURRENT];
  inline bool has_game_version() const;
  inline void clear_game_version();
  static const int kGameVersionFieldNumber = 14;
  inline ::DOTAGameVersion game_version() const;
  inline void set_game_version(::DOTAGameVersion value);

  // optional string pass_key = 15;
  inline bool has_pass_key() const;
  inline void clear_pass_key();
  static const int kPassKeyFieldNumber = 15;
  inline const ::std::string& pass_key() const;
  inline void set_pass_key(const ::std::string& value);
  inline void set_pass_key(const char* value);
  inline void set_pass_key(const char* value, size_t size);
  inline ::std::string* mutable_pass_key();
  inline ::std::string* release_pass_key();
  inline void set_allocated_pass_key(::std::string* pass_key);

  // optional uint32 leagueid = 16;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 16;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 penalty_level_radiant = 17;
  inline bool has_penalty_level_radiant() const;
  inline void clear_penalty_level_radiant();
  static const int kPenaltyLevelRadiantFieldNumber = 17;
  inline ::google::protobuf::uint32 penalty_level_radiant() const;
  inline void set_penalty_level_radiant(::google::protobuf::uint32 value);

  // optional uint32 penalty_level_dire = 18;
  inline bool has_penalty_level_dire() const;
  inline void clear_penalty_level_dire();
  static const int kPenaltyLevelDireFieldNumber = 18;
  inline ::google::protobuf::uint32 penalty_level_dire() const;
  inline void set_penalty_level_dire(::google::protobuf::uint32 value);

  // optional uint32 load_game_id = 19;
  inline bool has_load_game_id() const;
  inline void clear_load_game_id();
  static const int kLoadGameIdFieldNumber = 19;
  inline ::google::protobuf::uint32 load_game_id() const;
  inline void set_load_game_id(::google::protobuf::uint32 value);

  // optional uint32 series_type = 20;
  inline bool has_series_type() const;
  inline void clear_series_type();
  static const int kSeriesTypeFieldNumber = 20;
  inline ::google::protobuf::uint32 series_type() const;
  inline void set_series_type(::google::protobuf::uint32 value);

  // optional uint32 radiant_series_wins = 21;
  inline bool has_radiant_series_wins() const;
  inline void clear_radiant_series_wins();
  static const int kRadiantSeriesWinsFieldNumber = 21;
  inline ::google::protobuf::uint32 radiant_series_wins() const;
  inline void set_radiant_series_wins(::google::protobuf::uint32 value);

  // optional uint32 dire_series_wins = 22;
  inline bool has_dire_series_wins() const;
  inline void clear_dire_series_wins();
  static const int kDireSeriesWinsFieldNumber = 22;
  inline ::google::protobuf::uint32 dire_series_wins() const;
  inline void set_dire_series_wins(::google::protobuf::uint32 value);

  // optional bool allchat = 23 [default = false];
  inline bool has_allchat() const;
  inline void clear_allchat();
  static const int kAllchatFieldNumber = 23;
  inline bool allchat() const;
  inline void set_allchat(bool value);

  // optional .LobbyDotaTVDelay dota_tv_delay = 24 [default = LobbyDotaTV_120];
  inline bool has_dota_tv_delay() const;
  inline void clear_dota_tv_delay();
  static const int kDotaTvDelayFieldNumber = 24;
  inline ::LobbyDotaTVDelay dota_tv_delay() const;
  inline void set_dota_tv_delay(::LobbyDotaTVDelay value);

  // optional bool lan = 25;
  inline bool has_lan() const;
  inline void clear_lan();
  static const int kLanFieldNumber = 25;
  inline bool lan() const;
  inline void set_lan(bool value);

  // optional string custom_game_mode = 26;
  inline bool has_custom_game_mode() const;
  inline void clear_custom_game_mode();
  static const int kCustomGameModeFieldNumber = 26;
  inline const ::std::string& custom_game_mode() const;
  inline void set_custom_game_mode(const ::std::string& value);
  inline void set_custom_game_mode(const char* value);
  inline void set_custom_game_mode(const char* value, size_t size);
  inline ::std::string* mutable_custom_game_mode();
  inline ::std::string* release_custom_game_mode();
  inline void set_allocated_custom_game_mode(::std::string* custom_game_mode);

  // optional string custom_map_name = 27;
  inline bool has_custom_map_name() const;
  inline void clear_custom_map_name();
  static const int kCustomMapNameFieldNumber = 27;
  inline const ::std::string& custom_map_name() const;
  inline void set_custom_map_name(const ::std::string& value);
  inline void set_custom_map_name(const char* value);
  inline void set_custom_map_name(const char* value, size_t size);
  inline ::std::string* mutable_custom_map_name();
  inline ::std::string* release_custom_map_name();
  inline void set_allocated_custom_map_name(::std::string* custom_map_name);

  // optional uint32 custom_difficulty = 28;
  inline bool has_custom_difficulty() const;
  inline void clear_custom_difficulty();
  static const int kCustomDifficultyFieldNumber = 28;
  inline ::google::protobuf::uint32 custom_difficulty() const;
  inline void set_custom_difficulty(::google::protobuf::uint32 value);

  // optional uint64 custom_game_id = 29;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 29;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 custom_min_players = 30;
  inline bool has_custom_min_players() const;
  inline void clear_custom_min_players();
  static const int kCustomMinPlayersFieldNumber = 30;
  inline ::google::protobuf::uint32 custom_min_players() const;
  inline void set_custom_min_players(::google::protobuf::uint32 value);

  // optional uint32 custom_max_players = 31;
  inline bool has_custom_max_players() const;
  inline void clear_custom_max_players();
  static const int kCustomMaxPlayersFieldNumber = 31;
  inline ::google::protobuf::uint32 custom_max_players() const;
  inline void set_custom_max_players(::google::protobuf::uint32 value);

  // optional uint32 lan_host_ping_to_server_region = 32;
  inline bool has_lan_host_ping_to_server_region() const;
  inline void clear_lan_host_ping_to_server_region();
  static const int kLanHostPingToServerRegionFieldNumber = 32;
  inline ::google::protobuf::uint32 lan_host_ping_to_server_region() const;
  inline void set_lan_host_ping_to_server_region(::google::protobuf::uint32 value);

  // optional .DOTALobbyVisibility visibility = 33 [default = DOTALobbyVisibility_Public];
  inline bool has_visibility() const;
  inline void clear_visibility();
  static const int kVisibilityFieldNumber = 33;
  inline ::DOTALobbyVisibility visibility() const;
  inline void set_visibility(::DOTALobbyVisibility value);

  // optional fixed64 custom_game_crc = 34;
  inline bool has_custom_game_crc() const;
  inline void clear_custom_game_crc();
  static const int kCustomGameCrcFieldNumber = 34;
  inline ::google::protobuf::uint64 custom_game_crc() const;
  inline void set_custom_game_crc(::google::protobuf::uint64 value);

  // optional uint32 league_series_id = 35;
  inline bool has_league_series_id() const;
  inline void clear_league_series_id();
  static const int kLeagueSeriesIdFieldNumber = 35;
  inline ::google::protobuf::uint32 league_series_id() const;
  inline void set_league_series_id(::google::protobuf::uint32 value);

  // optional uint32 league_game_id = 36;
  inline bool has_league_game_id() const;
  inline void clear_league_game_id();
  static const int kLeagueGameIdFieldNumber = 36;
  inline ::google::protobuf::uint32 league_game_id() const;
  inline void set_league_game_id(::google::protobuf::uint32 value);

  // optional fixed32 custom_game_timestamp = 37;
  inline bool has_custom_game_timestamp() const;
  inline void clear_custom_game_timestamp();
  static const int kCustomGameTimestampFieldNumber = 37;
  inline ::google::protobuf::uint32 custom_game_timestamp() const;
  inline void set_custom_game_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbySetDetails)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_game_name();
  inline void clear_has_game_name();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_cm_pick();
  inline void clear_has_cm_pick();
  inline void set_has_bot_difficulty();
  inline void clear_has_bot_difficulty();
  inline void set_has_allow_cheats();
  inline void clear_has_allow_cheats();
  inline void set_has_fill_with_bots();
  inline void clear_has_fill_with_bots();
  inline void set_has_intro_mode();
  inline void clear_has_intro_mode();
  inline void set_has_allow_spectating();
  inline void clear_has_allow_spectating();
  inline void set_has_game_version();
  inline void clear_has_game_version();
  inline void set_has_pass_key();
  inline void clear_has_pass_key();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_penalty_level_radiant();
  inline void clear_has_penalty_level_radiant();
  inline void set_has_penalty_level_dire();
  inline void clear_has_penalty_level_dire();
  inline void set_has_load_game_id();
  inline void clear_has_load_game_id();
  inline void set_has_series_type();
  inline void clear_has_series_type();
  inline void set_has_radiant_series_wins();
  inline void clear_has_radiant_series_wins();
  inline void set_has_dire_series_wins();
  inline void clear_has_dire_series_wins();
  inline void set_has_allchat();
  inline void clear_has_allchat();
  inline void set_has_dota_tv_delay();
  inline void clear_has_dota_tv_delay();
  inline void set_has_lan();
  inline void clear_has_lan();
  inline void set_has_custom_game_mode();
  inline void clear_has_custom_game_mode();
  inline void set_has_custom_map_name();
  inline void clear_has_custom_map_name();
  inline void set_has_custom_difficulty();
  inline void clear_has_custom_difficulty();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_custom_min_players();
  inline void clear_has_custom_min_players();
  inline void set_has_custom_max_players();
  inline void clear_has_custom_max_players();
  inline void set_has_lan_host_ping_to_server_region();
  inline void clear_has_lan_host_ping_to_server_region();
  inline void set_has_visibility();
  inline void clear_has_visibility();
  inline void set_has_custom_game_crc();
  inline void clear_has_custom_game_crc();
  inline void set_has_league_series_id();
  inline void clear_has_league_series_id();
  inline void set_has_league_game_id();
  inline void clear_has_league_game_id();
  inline void set_has_custom_game_timestamp();
  inline void clear_has_custom_game_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 lobby_id_;
  ::std::string* game_name_;
  ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails > team_details_;
  ::google::protobuf::uint32 server_region_;
  ::google::protobuf::uint32 game_mode_;
  int cm_pick_;
  int bot_difficulty_;
  bool allow_cheats_;
  bool fill_with_bots_;
  bool intro_mode_;
  bool allow_spectating_;
  int game_version_;
  ::std::string* pass_key_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 penalty_level_radiant_;
  ::google::protobuf::uint32 penalty_level_dire_;
  ::google::protobuf::uint32 load_game_id_;
  ::google::protobuf::uint32 series_type_;
  ::google::protobuf::uint32 radiant_series_wins_;
  ::google::protobuf::uint32 dire_series_wins_;
  int dota_tv_delay_;
  bool allchat_;
  bool lan_;
  ::google::protobuf::uint32 custom_difficulty_;
  ::std::string* custom_game_mode_;
  ::std::string* custom_map_name_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 custom_min_players_;
  ::google::protobuf::uint32 custom_max_players_;
  ::google::protobuf::uint32 lan_host_ping_to_server_region_;
  int visibility_;
  ::google::protobuf::uint64 custom_game_crc_;
  ::google::protobuf::uint32 league_series_id_;
  ::google::protobuf::uint32 league_game_id_;
  ::google::protobuf::uint32 custom_game_timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbySetDetails* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyCreate_SaveGame : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyCreate_SaveGame();
  virtual ~CMsgPracticeLobbyCreate_SaveGame();

  CMsgPracticeLobbyCreate_SaveGame(const CMsgPracticeLobbyCreate_SaveGame& from);

  inline CMsgPracticeLobbyCreate_SaveGame& operator=(const CMsgPracticeLobbyCreate_SaveGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyCreate_SaveGame& default_instance();

  void Swap(CMsgPracticeLobbyCreate_SaveGame* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyCreate_SaveGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyCreate_SaveGame& from);
  void MergeFrom(const CMsgPracticeLobbyCreate_SaveGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional int32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // optional fixed64 steam_id = 3;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 signature = 4;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 4;
  inline ::google::protobuf::uint64 signature() const;
  inline void set_signature(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyCreate.SaveGame)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_signature();
  inline void clear_has_signature();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 signature_;
  ::google::protobuf::int32 version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyCreate_SaveGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyCreate : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyCreate();
  virtual ~CMsgPracticeLobbyCreate();

  CMsgPracticeLobbyCreate(const CMsgPracticeLobbyCreate& from);

  inline CMsgPracticeLobbyCreate& operator=(const CMsgPracticeLobbyCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyCreate& default_instance();

  void Swap(CMsgPracticeLobbyCreate* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyCreate& from);
  void MergeFrom(const CMsgPracticeLobbyCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPracticeLobbyCreate_SaveGame SaveGame;

  // accessors -------------------------------------------------------

  // optional string search_key = 1;
  inline bool has_search_key() const;
  inline void clear_search_key();
  static const int kSearchKeyFieldNumber = 1;
  inline const ::std::string& search_key() const;
  inline void set_search_key(const ::std::string& value);
  inline void set_search_key(const char* value);
  inline void set_search_key(const char* value, size_t size);
  inline ::std::string* mutable_search_key();
  inline ::std::string* release_search_key();
  inline void set_allocated_search_key(::std::string* search_key);

  // optional bool tournament_game = 2;
  inline bool has_tournament_game() const;
  inline void clear_tournament_game();
  static const int kTournamentGameFieldNumber = 2;
  inline bool tournament_game() const;
  inline void set_tournament_game(bool value);

  // optional uint32 tournament_game_id = 3;
  inline bool has_tournament_game_id() const;
  inline void clear_tournament_game_id();
  static const int kTournamentGameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 tournament_game_id() const;
  inline void set_tournament_game_id(::google::protobuf::uint32 value);

  // optional uint32 tournament_id = 4;
  inline bool has_tournament_id() const;
  inline void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 4;
  inline ::google::protobuf::uint32 tournament_id() const;
  inline void set_tournament_id(::google::protobuf::uint32 value);

  // optional string pass_key = 5;
  inline bool has_pass_key() const;
  inline void clear_pass_key();
  static const int kPassKeyFieldNumber = 5;
  inline const ::std::string& pass_key() const;
  inline void set_pass_key(const ::std::string& value);
  inline void set_pass_key(const char* value);
  inline void set_pass_key(const char* value, size_t size);
  inline ::std::string* mutable_pass_key();
  inline ::std::string* release_pass_key();
  inline void set_allocated_pass_key(::std::string* pass_key);

  // optional uint32 client_version = 6;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional .CMsgPracticeLobbySetDetails lobby_details = 7;
  inline bool has_lobby_details() const;
  inline void clear_lobby_details();
  static const int kLobbyDetailsFieldNumber = 7;
  inline const ::CMsgPracticeLobbySetDetails& lobby_details() const;
  inline ::CMsgPracticeLobbySetDetails* mutable_lobby_details();
  inline ::CMsgPracticeLobbySetDetails* release_lobby_details();
  inline void set_allocated_lobby_details(::CMsgPracticeLobbySetDetails* lobby_details);

  // optional .CMsgPracticeLobbyCreate.SaveGame save_game = 8;
  inline bool has_save_game() const;
  inline void clear_save_game();
  static const int kSaveGameFieldNumber = 8;
  inline const ::CMsgPracticeLobbyCreate_SaveGame& save_game() const;
  inline ::CMsgPracticeLobbyCreate_SaveGame* mutable_save_game();
  inline ::CMsgPracticeLobbyCreate_SaveGame* release_save_game();
  inline void set_allocated_save_game(::CMsgPracticeLobbyCreate_SaveGame* save_game);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyCreate)
 private:
  inline void set_has_search_key();
  inline void clear_has_search_key();
  inline void set_has_tournament_game();
  inline void clear_has_tournament_game();
  inline void set_has_tournament_game_id();
  inline void clear_has_tournament_game_id();
  inline void set_has_tournament_id();
  inline void clear_has_tournament_id();
  inline void set_has_pass_key();
  inline void clear_has_pass_key();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_lobby_details();
  inline void clear_has_lobby_details();
  inline void set_has_save_game();
  inline void clear_has_save_game();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* search_key_;
  bool tournament_game_;
  ::google::protobuf::uint32 tournament_game_id_;
  ::std::string* pass_key_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 client_version_;
  ::CMsgPracticeLobbySetDetails* lobby_details_;
  ::CMsgPracticeLobbyCreate_SaveGame* save_game_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyCreate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbySetTeamSlot : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbySetTeamSlot();
  virtual ~CMsgPracticeLobbySetTeamSlot();

  CMsgPracticeLobbySetTeamSlot(const CMsgPracticeLobbySetTeamSlot& from);

  inline CMsgPracticeLobbySetTeamSlot& operator=(const CMsgPracticeLobbySetTeamSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbySetTeamSlot& default_instance();

  void Swap(CMsgPracticeLobbySetTeamSlot* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbySetTeamSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbySetTeamSlot& from);
  void MergeFrom(const CMsgPracticeLobbySetTeamSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::DOTA_GC_TEAM team() const;
  inline void set_team(::DOTA_GC_TEAM value);

  // optional uint32 slot = 2;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 2;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // optional .DOTABotDifficulty bot_difficulty = 3 [default = BOT_DIFFICULTY_PASSIVE];
  inline bool has_bot_difficulty() const;
  inline void clear_bot_difficulty();
  static const int kBotDifficultyFieldNumber = 3;
  inline ::DOTABotDifficulty bot_difficulty() const;
  inline void set_bot_difficulty(::DOTABotDifficulty value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbySetTeamSlot)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_bot_difficulty();
  inline void clear_has_bot_difficulty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int team_;
  ::google::protobuf::uint32 slot_;
  int bot_difficulty_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbySetTeamSlot* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbySetCoach : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbySetCoach();
  virtual ~CMsgPracticeLobbySetCoach();

  CMsgPracticeLobbySetCoach(const CMsgPracticeLobbySetCoach& from);

  inline CMsgPracticeLobbySetCoach& operator=(const CMsgPracticeLobbySetCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbySetCoach& default_instance();

  void Swap(CMsgPracticeLobbySetCoach* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbySetCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbySetCoach& from);
  void MergeFrom(const CMsgPracticeLobbySetCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::DOTA_GC_TEAM team() const;
  inline void set_team(::DOTA_GC_TEAM value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbySetCoach)
 private:
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int team_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbySetCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyJoinBroadcastChannel : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyJoinBroadcastChannel();
  virtual ~CMsgPracticeLobbyJoinBroadcastChannel();

  CMsgPracticeLobbyJoinBroadcastChannel(const CMsgPracticeLobbyJoinBroadcastChannel& from);

  inline CMsgPracticeLobbyJoinBroadcastChannel& operator=(const CMsgPracticeLobbyJoinBroadcastChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyJoinBroadcastChannel& default_instance();

  void Swap(CMsgPracticeLobbyJoinBroadcastChannel* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyJoinBroadcastChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyJoinBroadcastChannel& from);
  void MergeFrom(const CMsgPracticeLobbyJoinBroadcastChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::uint32 channel() const;
  inline void set_channel(::google::protobuf::uint32 value);

  // optional string preferred_description = 2;
  inline bool has_preferred_description() const;
  inline void clear_preferred_description();
  static const int kPreferredDescriptionFieldNumber = 2;
  inline const ::std::string& preferred_description() const;
  inline void set_preferred_description(const ::std::string& value);
  inline void set_preferred_description(const char* value);
  inline void set_preferred_description(const char* value, size_t size);
  inline ::std::string* mutable_preferred_description();
  inline ::std::string* release_preferred_description();
  inline void set_allocated_preferred_description(::std::string* preferred_description);

  // optional string preferred_country_code = 3;
  inline bool has_preferred_country_code() const;
  inline void clear_preferred_country_code();
  static const int kPreferredCountryCodeFieldNumber = 3;
  inline const ::std::string& preferred_country_code() const;
  inline void set_preferred_country_code(const ::std::string& value);
  inline void set_preferred_country_code(const char* value);
  inline void set_preferred_country_code(const char* value, size_t size);
  inline ::std::string* mutable_preferred_country_code();
  inline ::std::string* release_preferred_country_code();
  inline void set_allocated_preferred_country_code(::std::string* preferred_country_code);

  // optional string preferred_language_code = 4;
  inline bool has_preferred_language_code() const;
  inline void clear_preferred_language_code();
  static const int kPreferredLanguageCodeFieldNumber = 4;
  inline const ::std::string& preferred_language_code() const;
  inline void set_preferred_language_code(const ::std::string& value);
  inline void set_preferred_language_code(const char* value);
  inline void set_preferred_language_code(const char* value, size_t size);
  inline ::std::string* mutable_preferred_language_code();
  inline ::std::string* release_preferred_language_code();
  inline void set_allocated_preferred_language_code(::std::string* preferred_language_code);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyJoinBroadcastChannel)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_preferred_description();
  inline void clear_has_preferred_description();
  inline void set_has_preferred_country_code();
  inline void clear_has_preferred_country_code();
  inline void set_has_preferred_language_code();
  inline void clear_has_preferred_language_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* preferred_description_;
  ::std::string* preferred_country_code_;
  ::std::string* preferred_language_code_;
  ::google::protobuf::uint32 channel_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyJoinBroadcastChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyCloseBroadcastChannel : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyCloseBroadcastChannel();
  virtual ~CMsgPracticeLobbyCloseBroadcastChannel();

  CMsgPracticeLobbyCloseBroadcastChannel(const CMsgPracticeLobbyCloseBroadcastChannel& from);

  inline CMsgPracticeLobbyCloseBroadcastChannel& operator=(const CMsgPracticeLobbyCloseBroadcastChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyCloseBroadcastChannel& default_instance();

  void Swap(CMsgPracticeLobbyCloseBroadcastChannel* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyCloseBroadcastChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyCloseBroadcastChannel& from);
  void MergeFrom(const CMsgPracticeLobbyCloseBroadcastChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::uint32 channel() const;
  inline void set_channel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyCloseBroadcastChannel)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 channel_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyCloseBroadcastChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus();
  virtual ~CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus();

  CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus(const CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus& from);

  inline CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus& operator=(const CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus& default_instance();

  void Swap(CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus& from);
  void MergeFrom(const CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyKick : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyKick();
  virtual ~CMsgPracticeLobbyKick();

  CMsgPracticeLobbyKick(const CMsgPracticeLobbyKick& from);

  inline CMsgPracticeLobbyKick& operator=(const CMsgPracticeLobbyKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyKick& default_instance();

  void Swap(CMsgPracticeLobbyKick* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyKick& from);
  void MergeFrom(const CMsgPracticeLobbyKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 3;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyKick)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyKick* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyKickFromTeam : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyKickFromTeam();
  virtual ~CMsgPracticeLobbyKickFromTeam();

  CMsgPracticeLobbyKickFromTeam(const CMsgPracticeLobbyKickFromTeam& from);

  inline CMsgPracticeLobbyKickFromTeam& operator=(const CMsgPracticeLobbyKickFromTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyKickFromTeam& default_instance();

  void Swap(CMsgPracticeLobbyKickFromTeam* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyKickFromTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyKickFromTeam& from);
  void MergeFrom(const CMsgPracticeLobbyKickFromTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyKickFromTeam)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyKickFromTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyLeave : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyLeave();
  virtual ~CMsgPracticeLobbyLeave();

  CMsgPracticeLobbyLeave(const CMsgPracticeLobbyLeave& from);

  inline CMsgPracticeLobbyLeave& operator=(const CMsgPracticeLobbyLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyLeave& default_instance();

  void Swap(CMsgPracticeLobbyLeave* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyLeave& from);
  void MergeFrom(const CMsgPracticeLobbyLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyLeave)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyLeave* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyLaunch : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyLaunch();
  virtual ~CMsgPracticeLobbyLaunch();

  CMsgPracticeLobbyLaunch(const CMsgPracticeLobbyLaunch& from);

  inline CMsgPracticeLobbyLaunch& operator=(const CMsgPracticeLobbyLaunch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyLaunch& default_instance();

  void Swap(CMsgPracticeLobbyLaunch* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyLaunch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyLaunch& from);
  void MergeFrom(const CMsgPracticeLobbyLaunch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 client_version = 5;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 5;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyLaunch)
 private:
  inline void set_has_client_version();
  inline void clear_has_client_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyLaunch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgApplyTeamToPracticeLobby : public ::google::protobuf::Message {
 public:
  CMsgApplyTeamToPracticeLobby();
  virtual ~CMsgApplyTeamToPracticeLobby();

  CMsgApplyTeamToPracticeLobby(const CMsgApplyTeamToPracticeLobby& from);

  inline CMsgApplyTeamToPracticeLobby& operator=(const CMsgApplyTeamToPracticeLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgApplyTeamToPracticeLobby& default_instance();

  void Swap(CMsgApplyTeamToPracticeLobby* other);

  // implements Message ----------------------------------------------

  CMsgApplyTeamToPracticeLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgApplyTeamToPracticeLobby& from);
  void MergeFrom(const CMsgApplyTeamToPracticeLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgApplyTeamToPracticeLobby)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgApplyTeamToPracticeLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClearPracticeLobbyTeam : public ::google::protobuf::Message {
 public:
  CMsgClearPracticeLobbyTeam();
  virtual ~CMsgClearPracticeLobbyTeam();

  CMsgClearPracticeLobbyTeam(const CMsgClearPracticeLobbyTeam& from);

  inline CMsgClearPracticeLobbyTeam& operator=(const CMsgClearPracticeLobbyTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClearPracticeLobbyTeam& default_instance();

  void Swap(CMsgClearPracticeLobbyTeam* other);

  // implements Message ----------------------------------------------

  CMsgClearPracticeLobbyTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClearPracticeLobbyTeam& from);
  void MergeFrom(const CMsgClearPracticeLobbyTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClearPracticeLobbyTeam)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClearPracticeLobbyTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyList : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyList();
  virtual ~CMsgPracticeLobbyList();

  CMsgPracticeLobbyList(const CMsgPracticeLobbyList& from);

  inline CMsgPracticeLobbyList& operator=(const CMsgPracticeLobbyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyList& default_instance();

  void Swap(CMsgPracticeLobbyList* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyList& from);
  void MergeFrom(const CMsgPracticeLobbyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool tournament_games = 1;
  inline bool has_tournament_games() const;
  inline void clear_tournament_games();
  static const int kTournamentGamesFieldNumber = 1;
  inline bool tournament_games() const;
  inline void set_tournament_games(bool value);

  // optional string pass_key = 2;
  inline bool has_pass_key() const;
  inline void clear_pass_key();
  static const int kPassKeyFieldNumber = 2;
  inline const ::std::string& pass_key() const;
  inline void set_pass_key(const ::std::string& value);
  inline void set_pass_key(const char* value);
  inline void set_pass_key(const char* value, size_t size);
  inline ::std::string* mutable_pass_key();
  inline ::std::string* release_pass_key();
  inline void set_allocated_pass_key(::std::string* pass_key);

  // optional uint32 region = 3;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 3;
  inline ::google::protobuf::uint32 region() const;
  inline void set_region(::google::protobuf::uint32 value);

  // optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyList)
 private:
  inline void set_has_tournament_games();
  inline void clear_has_tournament_games();
  inline void set_has_pass_key();
  inline void clear_has_pass_key();
  inline void set_has_region();
  inline void clear_has_region();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* pass_key_;
  bool tournament_games_;
  ::google::protobuf::uint32 region_;
  int game_mode_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyListResponseEntry_CLobbyMember : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyListResponseEntry_CLobbyMember();
  virtual ~CMsgPracticeLobbyListResponseEntry_CLobbyMember();

  CMsgPracticeLobbyListResponseEntry_CLobbyMember(const CMsgPracticeLobbyListResponseEntry_CLobbyMember& from);

  inline CMsgPracticeLobbyListResponseEntry_CLobbyMember& operator=(const CMsgPracticeLobbyListResponseEntry_CLobbyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyListResponseEntry_CLobbyMember& default_instance();

  void Swap(CMsgPracticeLobbyListResponseEntry_CLobbyMember* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyListResponseEntry_CLobbyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyListResponseEntry_CLobbyMember& from);
  void MergeFrom(const CMsgPracticeLobbyListResponseEntry_CLobbyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional string player_name = 2;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyListResponseEntry.CLobbyMember)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_player_name();
  inline void clear_has_player_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* player_name_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyListResponseEntry_CLobbyMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyListResponseEntry : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyListResponseEntry();
  virtual ~CMsgPracticeLobbyListResponseEntry();

  CMsgPracticeLobbyListResponseEntry(const CMsgPracticeLobbyListResponseEntry& from);

  inline CMsgPracticeLobbyListResponseEntry& operator=(const CMsgPracticeLobbyListResponseEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyListResponseEntry& default_instance();

  void Swap(CMsgPracticeLobbyListResponseEntry* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyListResponseEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyListResponseEntry& from);
  void MergeFrom(const CMsgPracticeLobbyListResponseEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPracticeLobbyListResponseEntry_CLobbyMember CLobbyMember;

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 tournament_id = 3;
  inline bool has_tournament_id() const;
  inline void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 3;
  inline ::google::protobuf::uint32 tournament_id() const;
  inline void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 tournament_game_id = 4;
  inline bool has_tournament_game_id() const;
  inline void clear_tournament_game_id();
  static const int kTournamentGameIdFieldNumber = 4;
  inline ::google::protobuf::uint32 tournament_game_id() const;
  inline void set_tournament_game_id(::google::protobuf::uint32 value);

  // repeated .CMsgPracticeLobbyListResponseEntry.CLobbyMember members = 5;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 5;
  inline const ::CMsgPracticeLobbyListResponseEntry_CLobbyMember& members(int index) const;
  inline ::CMsgPracticeLobbyListResponseEntry_CLobbyMember* mutable_members(int index);
  inline ::CMsgPracticeLobbyListResponseEntry_CLobbyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry_CLobbyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry_CLobbyMember >*
      mutable_members();

  // optional bool requires_pass_key = 6;
  inline bool has_requires_pass_key() const;
  inline void clear_requires_pass_key();
  static const int kRequiresPassKeyFieldNumber = 6;
  inline bool requires_pass_key() const;
  inline void set_requires_pass_key(bool value);

  // optional uint32 leader_account_id = 7;
  inline bool has_leader_account_id() const;
  inline void clear_leader_account_id();
  static const int kLeaderAccountIdFieldNumber = 7;
  inline ::google::protobuf::uint32 leader_account_id() const;
  inline void set_leader_account_id(::google::protobuf::uint32 value);

  // optional uint32 guild_id = 8;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 8;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint64 guild_logo = 9;
  inline bool has_guild_logo() const;
  inline void clear_guild_logo();
  static const int kGuildLogoFieldNumber = 9;
  inline ::google::protobuf::uint64 guild_logo() const;
  inline void set_guild_logo(::google::protobuf::uint64 value);

  // optional string name = 10;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 10;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string custom_game_mode = 11;
  inline bool has_custom_game_mode() const;
  inline void clear_custom_game_mode();
  static const int kCustomGameModeFieldNumber = 11;
  inline const ::std::string& custom_game_mode() const;
  inline void set_custom_game_mode(const ::std::string& value);
  inline void set_custom_game_mode(const char* value);
  inline void set_custom_game_mode(const char* value, size_t size);
  inline ::std::string* mutable_custom_game_mode();
  inline ::std::string* release_custom_game_mode();
  inline void set_allocated_custom_game_mode(::std::string* custom_game_mode);

  // optional .DOTA_GameMode game_mode = 12 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 12;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // optional bool friend_present = 13;
  inline bool has_friend_present() const;
  inline void clear_friend_present();
  static const int kFriendPresentFieldNumber = 13;
  inline bool friend_present() const;
  inline void set_friend_present(bool value);

  // optional uint32 players = 14;
  inline bool has_players() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 14;
  inline ::google::protobuf::uint32 players() const;
  inline void set_players(::google::protobuf::uint32 value);

  // optional string custom_map_name = 15;
  inline bool has_custom_map_name() const;
  inline void clear_custom_map_name();
  static const int kCustomMapNameFieldNumber = 15;
  inline const ::std::string& custom_map_name() const;
  inline void set_custom_map_name(const ::std::string& value);
  inline void set_custom_map_name(const char* value);
  inline void set_custom_map_name(const char* value, size_t size);
  inline ::std::string* mutable_custom_map_name();
  inline ::std::string* release_custom_map_name();
  inline void set_allocated_custom_map_name(::std::string* custom_map_name);

  // optional uint32 max_player_count = 16;
  inline bool has_max_player_count() const;
  inline void clear_max_player_count();
  static const int kMaxPlayerCountFieldNumber = 16;
  inline ::google::protobuf::uint32 max_player_count() const;
  inline void set_max_player_count(::google::protobuf::uint32 value);

  // optional uint32 server_region = 17;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 17;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional uint32 lan_host_ping_to_server_region = 18;
  inline bool has_lan_host_ping_to_server_region() const;
  inline void clear_lan_host_ping_to_server_region();
  static const int kLanHostPingToServerRegionFieldNumber = 18;
  inline ::google::protobuf::uint32 lan_host_ping_to_server_region() const;
  inline void set_lan_host_ping_to_server_region(::google::protobuf::uint32 value);

  // optional uint32 league_id = 19;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 19;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyListResponseEntry)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tournament_id();
  inline void clear_has_tournament_id();
  inline void set_has_tournament_game_id();
  inline void clear_has_tournament_game_id();
  inline void set_has_requires_pass_key();
  inline void clear_has_requires_pass_key();
  inline void set_has_leader_account_id();
  inline void clear_has_leader_account_id();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_logo();
  inline void clear_has_guild_logo();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_custom_game_mode();
  inline void clear_has_custom_game_mode();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_friend_present();
  inline void clear_has_friend_present();
  inline void set_has_players();
  inline void clear_has_players();
  inline void set_has_custom_map_name();
  inline void clear_has_custom_map_name();
  inline void set_has_max_player_count();
  inline void clear_has_max_player_count();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_lan_host_ping_to_server_region();
  inline void clear_has_lan_host_ping_to_server_region();
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 tournament_game_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry_CLobbyMember > members_;
  ::google::protobuf::uint32 leader_account_id_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint64 guild_logo_;
  ::std::string* name_;
  bool requires_pass_key_;
  bool friend_present_;
  int game_mode_;
  ::std::string* custom_game_mode_;
  ::std::string* custom_map_name_;
  ::google::protobuf::uint32 players_;
  ::google::protobuf::uint32 max_player_count_;
  ::google::protobuf::uint32 server_region_;
  ::google::protobuf::uint32 lan_host_ping_to_server_region_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyListResponseEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyListResponse : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyListResponse();
  virtual ~CMsgPracticeLobbyListResponse();

  CMsgPracticeLobbyListResponse(const CMsgPracticeLobbyListResponse& from);

  inline CMsgPracticeLobbyListResponse& operator=(const CMsgPracticeLobbyListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyListResponse& default_instance();

  void Swap(CMsgPracticeLobbyListResponse* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyListResponse& from);
  void MergeFrom(const CMsgPracticeLobbyListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool tournament_games = 1;
  inline bool has_tournament_games() const;
  inline void clear_tournament_games();
  static const int kTournamentGamesFieldNumber = 1;
  inline bool tournament_games() const;
  inline void set_tournament_games(bool value);

  // repeated .CMsgPracticeLobbyListResponseEntry lobbies = 2;
  inline int lobbies_size() const;
  inline void clear_lobbies();
  static const int kLobbiesFieldNumber = 2;
  inline const ::CMsgPracticeLobbyListResponseEntry& lobbies(int index) const;
  inline ::CMsgPracticeLobbyListResponseEntry* mutable_lobbies(int index);
  inline ::CMsgPracticeLobbyListResponseEntry* add_lobbies();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
      lobbies() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
      mutable_lobbies();

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyListResponse)
 private:
  inline void set_has_tournament_games();
  inline void clear_has_tournament_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry > lobbies_;
  bool tournament_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLobbyList : public ::google::protobuf::Message {
 public:
  CMsgLobbyList();
  virtual ~CMsgLobbyList();

  CMsgLobbyList(const CMsgLobbyList& from);

  inline CMsgLobbyList& operator=(const CMsgLobbyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLobbyList& default_instance();

  void Swap(CMsgLobbyList* other);

  // implements Message ----------------------------------------------

  CMsgLobbyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLobbyList& from);
  void MergeFrom(const CMsgLobbyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1 [default = 0];
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional .DOTA_GameMode game_mode = 2 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 2;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // @@protoc_insertion_point(class_scope:CMsgLobbyList)
 private:
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_region_;
  int game_mode_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgLobbyList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLobbyListResponse : public ::google::protobuf::Message {
 public:
  CMsgLobbyListResponse();
  virtual ~CMsgLobbyListResponse();

  CMsgLobbyListResponse(const CMsgLobbyListResponse& from);

  inline CMsgLobbyListResponse& operator=(const CMsgLobbyListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLobbyListResponse& default_instance();

  void Swap(CMsgLobbyListResponse* other);

  // implements Message ----------------------------------------------

  CMsgLobbyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLobbyListResponse& from);
  void MergeFrom(const CMsgLobbyListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgPracticeLobbyListResponseEntry lobbies = 1;
  inline int lobbies_size() const;
  inline void clear_lobbies();
  static const int kLobbiesFieldNumber = 1;
  inline const ::CMsgPracticeLobbyListResponseEntry& lobbies(int index) const;
  inline ::CMsgPracticeLobbyListResponseEntry* mutable_lobbies(int index);
  inline ::CMsgPracticeLobbyListResponseEntry* add_lobbies();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
      lobbies() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
      mutable_lobbies();

  // @@protoc_insertion_point(class_scope:CMsgLobbyListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry > lobbies_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgLobbyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyJoin : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyJoin();
  virtual ~CMsgPracticeLobbyJoin();

  CMsgPracticeLobbyJoin(const CMsgPracticeLobbyJoin& from);

  inline CMsgPracticeLobbyJoin& operator=(const CMsgPracticeLobbyJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyJoin& default_instance();

  void Swap(CMsgPracticeLobbyJoin* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyJoin& from);
  void MergeFrom(const CMsgPracticeLobbyJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 client_version = 2;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional string pass_key = 3;
  inline bool has_pass_key() const;
  inline void clear_pass_key();
  static const int kPassKeyFieldNumber = 3;
  inline const ::std::string& pass_key() const;
  inline void set_pass_key(const ::std::string& value);
  inline void set_pass_key(const char* value);
  inline void set_pass_key(const char* value, size_t size);
  inline ::std::string* mutable_pass_key();
  inline ::std::string* release_pass_key();
  inline void set_allocated_pass_key(::std::string* pass_key);

  // optional fixed64 custom_game_crc = 4;
  inline bool has_custom_game_crc() const;
  inline void clear_custom_game_crc();
  static const int kCustomGameCrcFieldNumber = 4;
  inline ::google::protobuf::uint64 custom_game_crc() const;
  inline void set_custom_game_crc(::google::protobuf::uint64 value);

  // optional fixed32 custom_game_timestamp = 5;
  inline bool has_custom_game_timestamp() const;
  inline void clear_custom_game_timestamp();
  static const int kCustomGameTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 custom_game_timestamp() const;
  inline void set_custom_game_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyJoin)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_pass_key();
  inline void clear_has_pass_key();
  inline void set_has_custom_game_crc();
  inline void clear_has_custom_game_crc();
  inline void set_has_custom_game_timestamp();
  inline void clear_has_custom_game_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::std::string* pass_key_;
  ::google::protobuf::uint32 client_version_;
  ::google::protobuf::uint32 custom_game_timestamp_;
  ::google::protobuf::uint64 custom_game_crc_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyJoin* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPracticeLobbyJoinResponse : public ::google::protobuf::Message {
 public:
  CMsgPracticeLobbyJoinResponse();
  virtual ~CMsgPracticeLobbyJoinResponse();

  CMsgPracticeLobbyJoinResponse(const CMsgPracticeLobbyJoinResponse& from);

  inline CMsgPracticeLobbyJoinResponse& operator=(const CMsgPracticeLobbyJoinResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPracticeLobbyJoinResponse& default_instance();

  void Swap(CMsgPracticeLobbyJoinResponse* other);

  // implements Message ----------------------------------------------

  CMsgPracticeLobbyJoinResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPracticeLobbyJoinResponse& from);
  void MergeFrom(const CMsgPracticeLobbyJoinResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DOTAJoinLobbyResult result = 1 [default = DOTA_JOIN_RESULT_SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::DOTAJoinLobbyResult result() const;
  inline void set_result(::DOTAJoinLobbyResult value);

  // @@protoc_insertion_point(class_scope:CMsgPracticeLobbyJoinResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPracticeLobbyJoinResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFriendPracticeLobbyListRequest : public ::google::protobuf::Message {
 public:
  CMsgFriendPracticeLobbyListRequest();
  virtual ~CMsgFriendPracticeLobbyListRequest();

  CMsgFriendPracticeLobbyListRequest(const CMsgFriendPracticeLobbyListRequest& from);

  inline CMsgFriendPracticeLobbyListRequest& operator=(const CMsgFriendPracticeLobbyListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFriendPracticeLobbyListRequest& default_instance();

  void Swap(CMsgFriendPracticeLobbyListRequest* other);

  // implements Message ----------------------------------------------

  CMsgFriendPracticeLobbyListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFriendPracticeLobbyListRequest& from);
  void MergeFrom(const CMsgFriendPracticeLobbyListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline ::google::protobuf::uint32 friends(int index) const;
  inline void set_friends(int index, ::google::protobuf::uint32 value);
  inline void add_friends(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      friends() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_friends();

  // @@protoc_insertion_point(class_scope:CMsgFriendPracticeLobbyListRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > friends_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgFriendPracticeLobbyListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFriendPracticeLobbyListResponse : public ::google::protobuf::Message {
 public:
  CMsgFriendPracticeLobbyListResponse();
  virtual ~CMsgFriendPracticeLobbyListResponse();

  CMsgFriendPracticeLobbyListResponse(const CMsgFriendPracticeLobbyListResponse& from);

  inline CMsgFriendPracticeLobbyListResponse& operator=(const CMsgFriendPracticeLobbyListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFriendPracticeLobbyListResponse& default_instance();

  void Swap(CMsgFriendPracticeLobbyListResponse* other);

  // implements Message ----------------------------------------------

  CMsgFriendPracticeLobbyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFriendPracticeLobbyListResponse& from);
  void MergeFrom(const CMsgFriendPracticeLobbyListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgPracticeLobbyListResponseEntry lobbies = 1;
  inline int lobbies_size() const;
  inline void clear_lobbies();
  static const int kLobbiesFieldNumber = 1;
  inline const ::CMsgPracticeLobbyListResponseEntry& lobbies(int index) const;
  inline ::CMsgPracticeLobbyListResponseEntry* mutable_lobbies(int index);
  inline ::CMsgPracticeLobbyListResponseEntry* add_lobbies();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
      lobbies() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
      mutable_lobbies();

  // @@protoc_insertion_point(class_scope:CMsgFriendPracticeLobbyListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry > lobbies_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgFriendPracticeLobbyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGuildmatePracticeLobbyListRequest : public ::google::protobuf::Message {
 public:
  CMsgGuildmatePracticeLobbyListRequest();
  virtual ~CMsgGuildmatePracticeLobbyListRequest();

  CMsgGuildmatePracticeLobbyListRequest(const CMsgGuildmatePracticeLobbyListRequest& from);

  inline CMsgGuildmatePracticeLobbyListRequest& operator=(const CMsgGuildmatePracticeLobbyListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGuildmatePracticeLobbyListRequest& default_instance();

  void Swap(CMsgGuildmatePracticeLobbyListRequest* other);

  // implements Message ----------------------------------------------

  CMsgGuildmatePracticeLobbyListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGuildmatePracticeLobbyListRequest& from);
  void MergeFrom(const CMsgGuildmatePracticeLobbyListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 guilds = 1;
  inline int guilds_size() const;
  inline void clear_guilds();
  static const int kGuildsFieldNumber = 1;
  inline ::google::protobuf::uint32 guilds(int index) const;
  inline void set_guilds(int index, ::google::protobuf::uint32 value);
  inline void add_guilds(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guilds() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guilds();

  // @@protoc_insertion_point(class_scope:CMsgGuildmatePracticeLobbyListRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guilds_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGuildmatePracticeLobbyListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGuildmatePracticeLobbyListResponse : public ::google::protobuf::Message {
 public:
  CMsgGuildmatePracticeLobbyListResponse();
  virtual ~CMsgGuildmatePracticeLobbyListResponse();

  CMsgGuildmatePracticeLobbyListResponse(const CMsgGuildmatePracticeLobbyListResponse& from);

  inline CMsgGuildmatePracticeLobbyListResponse& operator=(const CMsgGuildmatePracticeLobbyListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGuildmatePracticeLobbyListResponse& default_instance();

  void Swap(CMsgGuildmatePracticeLobbyListResponse* other);

  // implements Message ----------------------------------------------

  CMsgGuildmatePracticeLobbyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGuildmatePracticeLobbyListResponse& from);
  void MergeFrom(const CMsgGuildmatePracticeLobbyListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgPracticeLobbyListResponseEntry lobbies = 1;
  inline int lobbies_size() const;
  inline void clear_lobbies();
  static const int kLobbiesFieldNumber = 1;
  inline const ::CMsgPracticeLobbyListResponseEntry& lobbies(int index) const;
  inline ::CMsgPracticeLobbyListResponseEntry* mutable_lobbies(int index);
  inline ::CMsgPracticeLobbyListResponseEntry* add_lobbies();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
      lobbies() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
      mutable_lobbies();

  // @@protoc_insertion_point(class_scope:CMsgGuildmatePracticeLobbyListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry > lobbies_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGuildmatePracticeLobbyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinableCustomGameModesRequest : public ::google::protobuf::Message {
 public:
  CMsgJoinableCustomGameModesRequest();
  virtual ~CMsgJoinableCustomGameModesRequest();

  CMsgJoinableCustomGameModesRequest(const CMsgJoinableCustomGameModesRequest& from);

  inline CMsgJoinableCustomGameModesRequest& operator=(const CMsgJoinableCustomGameModesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinableCustomGameModesRequest& default_instance();

  void Swap(CMsgJoinableCustomGameModesRequest* other);

  // implements Message ----------------------------------------------

  CMsgJoinableCustomGameModesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinableCustomGameModesRequest& from);
  void MergeFrom(const CMsgJoinableCustomGameModesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgJoinableCustomGameModesRequest)
 private:
  inline void set_has_server_region();
  inline void clear_has_server_region();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_region_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinableCustomGameModesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinableCustomGameModesResponseEntry : public ::google::protobuf::Message {
 public:
  CMsgJoinableCustomGameModesResponseEntry();
  virtual ~CMsgJoinableCustomGameModesResponseEntry();

  CMsgJoinableCustomGameModesResponseEntry(const CMsgJoinableCustomGameModesResponseEntry& from);

  inline CMsgJoinableCustomGameModesResponseEntry& operator=(const CMsgJoinableCustomGameModesResponseEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinableCustomGameModesResponseEntry& default_instance();

  void Swap(CMsgJoinableCustomGameModesResponseEntry* other);

  // implements Message ----------------------------------------------

  CMsgJoinableCustomGameModesResponseEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinableCustomGameModesResponseEntry& from);
  void MergeFrom(const CMsgJoinableCustomGameModesResponseEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 lobby_count = 2;
  inline bool has_lobby_count() const;
  inline void clear_lobby_count();
  static const int kLobbyCountFieldNumber = 2;
  inline ::google::protobuf::uint32 lobby_count() const;
  inline void set_lobby_count(::google::protobuf::uint32 value);

  // optional uint32 player_count = 3;
  inline bool has_player_count() const;
  inline void clear_player_count();
  static const int kPlayerCountFieldNumber = 3;
  inline ::google::protobuf::uint32 player_count() const;
  inline void set_player_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgJoinableCustomGameModesResponseEntry)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_lobby_count();
  inline void clear_has_lobby_count();
  inline void set_has_player_count();
  inline void clear_has_player_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 lobby_count_;
  ::google::protobuf::uint32 player_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinableCustomGameModesResponseEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinableCustomGameModesResponse : public ::google::protobuf::Message {
 public:
  CMsgJoinableCustomGameModesResponse();
  virtual ~CMsgJoinableCustomGameModesResponse();

  CMsgJoinableCustomGameModesResponse(const CMsgJoinableCustomGameModesResponse& from);

  inline CMsgJoinableCustomGameModesResponse& operator=(const CMsgJoinableCustomGameModesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinableCustomGameModesResponse& default_instance();

  void Swap(CMsgJoinableCustomGameModesResponse* other);

  // implements Message ----------------------------------------------

  CMsgJoinableCustomGameModesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinableCustomGameModesResponse& from);
  void MergeFrom(const CMsgJoinableCustomGameModesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgJoinableCustomGameModesResponseEntry game_modes = 1;
  inline int game_modes_size() const;
  inline void clear_game_modes();
  static const int kGameModesFieldNumber = 1;
  inline const ::CMsgJoinableCustomGameModesResponseEntry& game_modes(int index) const;
  inline ::CMsgJoinableCustomGameModesResponseEntry* mutable_game_modes(int index);
  inline ::CMsgJoinableCustomGameModesResponseEntry* add_game_modes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomGameModesResponseEntry >&
      game_modes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomGameModesResponseEntry >*
      mutable_game_modes();

  // @@protoc_insertion_point(class_scope:CMsgJoinableCustomGameModesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomGameModesResponseEntry > game_modes_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinableCustomGameModesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinableCustomLobbiesRequest : public ::google::protobuf::Message {
 public:
  CMsgJoinableCustomLobbiesRequest();
  virtual ~CMsgJoinableCustomLobbiesRequest();

  CMsgJoinableCustomLobbiesRequest(const CMsgJoinableCustomLobbiesRequest& from);

  inline CMsgJoinableCustomLobbiesRequest& operator=(const CMsgJoinableCustomLobbiesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinableCustomLobbiesRequest& default_instance();

  void Swap(CMsgJoinableCustomLobbiesRequest* other);

  // implements Message ----------------------------------------------

  CMsgJoinableCustomLobbiesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinableCustomLobbiesRequest& from);
  void MergeFrom(const CMsgJoinableCustomLobbiesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional uint64 custom_game_id = 2;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 2;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgJoinableCustomLobbiesRequest)
 private:
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 server_region_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinableCustomLobbiesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinableCustomLobbiesResponseEntry : public ::google::protobuf::Message {
 public:
  CMsgJoinableCustomLobbiesResponseEntry();
  virtual ~CMsgJoinableCustomLobbiesResponseEntry();

  CMsgJoinableCustomLobbiesResponseEntry(const CMsgJoinableCustomLobbiesResponseEntry& from);

  inline CMsgJoinableCustomLobbiesResponseEntry& operator=(const CMsgJoinableCustomLobbiesResponseEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinableCustomLobbiesResponseEntry& default_instance();

  void Swap(CMsgJoinableCustomLobbiesResponseEntry* other);

  // implements Message ----------------------------------------------

  CMsgJoinableCustomLobbiesResponseEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinableCustomLobbiesResponseEntry& from);
  void MergeFrom(const CMsgJoinableCustomLobbiesResponseEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 custom_game_id = 2;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 2;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional string lobby_name = 3;
  inline bool has_lobby_name() const;
  inline void clear_lobby_name();
  static const int kLobbyNameFieldNumber = 3;
  inline const ::std::string& lobby_name() const;
  inline void set_lobby_name(const ::std::string& value);
  inline void set_lobby_name(const char* value);
  inline void set_lobby_name(const char* value, size_t size);
  inline ::std::string* mutable_lobby_name();
  inline ::std::string* release_lobby_name();
  inline void set_allocated_lobby_name(::std::string* lobby_name);

  // optional uint32 member_count = 4;
  inline bool has_member_count() const;
  inline void clear_member_count();
  static const int kMemberCountFieldNumber = 4;
  inline ::google::protobuf::uint32 member_count() const;
  inline void set_member_count(::google::protobuf::uint32 value);

  // optional uint32 leader_account_id = 5;
  inline bool has_leader_account_id() const;
  inline void clear_leader_account_id();
  static const int kLeaderAccountIdFieldNumber = 5;
  inline ::google::protobuf::uint32 leader_account_id() const;
  inline void set_leader_account_id(::google::protobuf::uint32 value);

  // optional string leader_name = 6;
  inline bool has_leader_name() const;
  inline void clear_leader_name();
  static const int kLeaderNameFieldNumber = 6;
  inline const ::std::string& leader_name() const;
  inline void set_leader_name(const ::std::string& value);
  inline void set_leader_name(const char* value);
  inline void set_leader_name(const char* value, size_t size);
  inline ::std::string* mutable_leader_name();
  inline ::std::string* release_leader_name();
  inline void set_allocated_leader_name(::std::string* leader_name);

  // optional string custom_map_name = 7;
  inline bool has_custom_map_name() const;
  inline void clear_custom_map_name();
  static const int kCustomMapNameFieldNumber = 7;
  inline const ::std::string& custom_map_name() const;
  inline void set_custom_map_name(const ::std::string& value);
  inline void set_custom_map_name(const char* value);
  inline void set_custom_map_name(const char* value, size_t size);
  inline ::std::string* mutable_custom_map_name();
  inline ::std::string* release_custom_map_name();
  inline void set_allocated_custom_map_name(::std::string* custom_map_name);

  // optional uint32 max_player_count = 8;
  inline bool has_max_player_count() const;
  inline void clear_max_player_count();
  static const int kMaxPlayerCountFieldNumber = 8;
  inline ::google::protobuf::uint32 max_player_count() const;
  inline void set_max_player_count(::google::protobuf::uint32 value);

  // optional uint32 server_region = 9;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 9;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional uint32 lan_host_ping_to_server_region = 10;
  inline bool has_lan_host_ping_to_server_region() const;
  inline void clear_lan_host_ping_to_server_region();
  static const int kLanHostPingToServerRegionFieldNumber = 10;
  inline ::google::protobuf::uint32 lan_host_ping_to_server_region() const;
  inline void set_lan_host_ping_to_server_region(::google::protobuf::uint32 value);

  // optional bool has_pass_key = 11;
  inline bool has_has_pass_key() const;
  inline void clear_has_pass_key();
  static const int kHasPassKeyFieldNumber = 11;
  inline bool has_pass_key() const;
  inline void set_has_pass_key(bool value);

  // @@protoc_insertion_point(class_scope:CMsgJoinableCustomLobbiesResponseEntry)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_lobby_name();
  inline void clear_has_lobby_name();
  inline void set_has_member_count();
  inline void clear_has_member_count();
  inline void set_has_leader_account_id();
  inline void clear_has_leader_account_id();
  inline void set_has_leader_name();
  inline void clear_has_leader_name();
  inline void set_has_custom_map_name();
  inline void clear_has_custom_map_name();
  inline void set_has_max_player_count();
  inline void clear_has_max_player_count();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_lan_host_ping_to_server_region();
  inline void clear_has_lan_host_ping_to_server_region();
  inline void set_has_has_pass_key();
  inline void clear_has_has_pass_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 custom_game_id_;
  ::std::string* lobby_name_;
  ::google::protobuf::uint32 member_count_;
  ::google::protobuf::uint32 leader_account_id_;
  ::std::string* leader_name_;
  ::std::string* custom_map_name_;
  ::google::protobuf::uint32 max_player_count_;
  ::google::protobuf::uint32 server_region_;
  ::google::protobuf::uint32 lan_host_ping_to_server_region_;
  bool has_pass_key_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinableCustomLobbiesResponseEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinableCustomLobbiesResponse : public ::google::protobuf::Message {
 public:
  CMsgJoinableCustomLobbiesResponse();
  virtual ~CMsgJoinableCustomLobbiesResponse();

  CMsgJoinableCustomLobbiesResponse(const CMsgJoinableCustomLobbiesResponse& from);

  inline CMsgJoinableCustomLobbiesResponse& operator=(const CMsgJoinableCustomLobbiesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinableCustomLobbiesResponse& default_instance();

  void Swap(CMsgJoinableCustomLobbiesResponse* other);

  // implements Message ----------------------------------------------

  CMsgJoinableCustomLobbiesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinableCustomLobbiesResponse& from);
  void MergeFrom(const CMsgJoinableCustomLobbiesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgJoinableCustomLobbiesResponseEntry lobbies = 1;
  inline int lobbies_size() const;
  inline void clear_lobbies();
  static const int kLobbiesFieldNumber = 1;
  inline const ::CMsgJoinableCustomLobbiesResponseEntry& lobbies(int index) const;
  inline ::CMsgJoinableCustomLobbiesResponseEntry* mutable_lobbies(int index);
  inline ::CMsgJoinableCustomLobbiesResponseEntry* add_lobbies();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomLobbiesResponseEntry >&
      lobbies() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomLobbiesResponseEntry >*
      mutable_lobbies();

  // @@protoc_insertion_point(class_scope:CMsgJoinableCustomLobbiesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomLobbiesResponseEntry > lobbies_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinableCustomLobbiesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgQuickJoinCustomLobby_RegionPing : public ::google::protobuf::Message {
 public:
  CMsgQuickJoinCustomLobby_RegionPing();
  virtual ~CMsgQuickJoinCustomLobby_RegionPing();

  CMsgQuickJoinCustomLobby_RegionPing(const CMsgQuickJoinCustomLobby_RegionPing& from);

  inline CMsgQuickJoinCustomLobby_RegionPing& operator=(const CMsgQuickJoinCustomLobby_RegionPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgQuickJoinCustomLobby_RegionPing& default_instance();

  void Swap(CMsgQuickJoinCustomLobby_RegionPing* other);

  // implements Message ----------------------------------------------

  CMsgQuickJoinCustomLobby_RegionPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgQuickJoinCustomLobby_RegionPing& from);
  void MergeFrom(const CMsgQuickJoinCustomLobby_RegionPing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional uint32 ping = 2;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 2;
  inline ::google::protobuf::uint32 ping() const;
  inline void set_ping(::google::protobuf::uint32 value);

  // optional fixed32 region_code = 3;
  inline bool has_region_code() const;
  inline void clear_region_code();
  static const int kRegionCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 region_code() const;
  inline void set_region_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgQuickJoinCustomLobby.RegionPing)
 private:
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_ping();
  inline void clear_has_ping();
  inline void set_has_region_code();
  inline void clear_has_region_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_region_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 region_code_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgQuickJoinCustomLobby_RegionPing* default_instance_;
};
// -------------------------------------------------------------------

class CMsgQuickJoinCustomLobby : public ::google::protobuf::Message {
 public:
  CMsgQuickJoinCustomLobby();
  virtual ~CMsgQuickJoinCustomLobby();

  CMsgQuickJoinCustomLobby(const CMsgQuickJoinCustomLobby& from);

  inline CMsgQuickJoinCustomLobby& operator=(const CMsgQuickJoinCustomLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgQuickJoinCustomLobby& default_instance();

  void Swap(CMsgQuickJoinCustomLobby* other);

  // implements Message ----------------------------------------------

  CMsgQuickJoinCustomLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgQuickJoinCustomLobby& from);
  void MergeFrom(const CMsgQuickJoinCustomLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgQuickJoinCustomLobby_RegionPing RegionPing;

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional uint64 custom_game_id = 2;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 2;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 client_version = 3;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional .CMsgPracticeLobbySetDetails create_lobby_details = 4;
  inline bool has_create_lobby_details() const;
  inline void clear_create_lobby_details();
  static const int kCreateLobbyDetailsFieldNumber = 4;
  inline const ::CMsgPracticeLobbySetDetails& create_lobby_details() const;
  inline ::CMsgPracticeLobbySetDetails* mutable_create_lobby_details();
  inline ::CMsgPracticeLobbySetDetails* release_create_lobby_details();
  inline void set_allocated_create_lobby_details(::CMsgPracticeLobbySetDetails* create_lobby_details);

  // optional bool allow_any_map = 5;
  inline bool has_allow_any_map() const;
  inline void clear_allow_any_map();
  static const int kAllowAnyMapFieldNumber = 5;
  inline bool allow_any_map() const;
  inline void set_allow_any_map(bool value);

  // repeated .CMsgQuickJoinCustomLobby.RegionPing region_pings = 6;
  inline int region_pings_size() const;
  inline void clear_region_pings();
  static const int kRegionPingsFieldNumber = 6;
  inline const ::CMsgQuickJoinCustomLobby_RegionPing& region_pings(int index) const;
  inline ::CMsgQuickJoinCustomLobby_RegionPing* mutable_region_pings(int index);
  inline ::CMsgQuickJoinCustomLobby_RegionPing* add_region_pings();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgQuickJoinCustomLobby_RegionPing >&
      region_pings() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgQuickJoinCustomLobby_RegionPing >*
      mutable_region_pings();

  // @@protoc_insertion_point(class_scope:CMsgQuickJoinCustomLobby)
 private:
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_create_lobby_details();
  inline void clear_has_create_lobby_details();
  inline void set_has_allow_any_map();
  inline void clear_has_allow_any_map();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 server_region_;
  ::google::protobuf::uint32 client_version_;
  ::CMsgPracticeLobbySetDetails* create_lobby_details_;
  ::google::protobuf::RepeatedPtrField< ::CMsgQuickJoinCustomLobby_RegionPing > region_pings_;
  bool allow_any_map_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgQuickJoinCustomLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgQuickJoinCustomLobbyResponse : public ::google::protobuf::Message {
 public:
  CMsgQuickJoinCustomLobbyResponse();
  virtual ~CMsgQuickJoinCustomLobbyResponse();

  CMsgQuickJoinCustomLobbyResponse(const CMsgQuickJoinCustomLobbyResponse& from);

  inline CMsgQuickJoinCustomLobbyResponse& operator=(const CMsgQuickJoinCustomLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgQuickJoinCustomLobbyResponse& default_instance();

  void Swap(CMsgQuickJoinCustomLobbyResponse* other);

  // implements Message ----------------------------------------------

  CMsgQuickJoinCustomLobbyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgQuickJoinCustomLobbyResponse& from);
  void MergeFrom(const CMsgQuickJoinCustomLobbyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DOTAJoinLobbyResult result = 1 [default = DOTA_JOIN_RESULT_SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::DOTAJoinLobbyResult result() const;
  inline void set_result(::DOTAJoinLobbyResult value);

  // @@protoc_insertion_point(class_scope:CMsgQuickJoinCustomLobbyResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgQuickJoinCustomLobbyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBotGameCreate : public ::google::protobuf::Message {
 public:
  CMsgBotGameCreate();
  virtual ~CMsgBotGameCreate();

  CMsgBotGameCreate(const CMsgBotGameCreate& from);

  inline CMsgBotGameCreate& operator=(const CMsgBotGameCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBotGameCreate& default_instance();

  void Swap(CMsgBotGameCreate* other);

  // implements Message ----------------------------------------------

  CMsgBotGameCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBotGameCreate& from);
  void MergeFrom(const CMsgBotGameCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_key = 1;
  inline bool has_search_key() const;
  inline void clear_search_key();
  static const int kSearchKeyFieldNumber = 1;
  inline const ::std::string& search_key() const;
  inline void set_search_key(const ::std::string& value);
  inline void set_search_key(const char* value);
  inline void set_search_key(const char* value, size_t size);
  inline ::std::string* mutable_search_key();
  inline ::std::string* release_search_key();
  inline void set_allocated_search_key(::std::string* search_key);

  // optional uint32 client_version = 2;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional .DOTABotDifficulty difficulty = 3 [default = BOT_DIFFICULTY_PASSIVE];
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 3;
  inline ::DOTABotDifficulty difficulty() const;
  inline void set_difficulty(::DOTABotDifficulty value);

  // optional .DOTA_GC_TEAM team = 4 [default = DOTA_GC_TEAM_GOOD_GUYS];
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 4;
  inline ::DOTA_GC_TEAM team() const;
  inline void set_team(::DOTA_GC_TEAM value);

  // optional uint32 game_mode = 5;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 5;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgBotGameCreate)
 private:
  inline void set_has_search_key();
  inline void clear_has_search_key();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* search_key_;
  ::google::protobuf::uint32 client_version_;
  int difficulty_;
  int team_;
  ::google::protobuf::uint32 game_mode_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgBotGameCreate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCustomGameCreate : public ::google::protobuf::Message {
 public:
  CMsgCustomGameCreate();
  virtual ~CMsgCustomGameCreate();

  CMsgCustomGameCreate(const CMsgCustomGameCreate& from);

  inline CMsgCustomGameCreate& operator=(const CMsgCustomGameCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCustomGameCreate& default_instance();

  void Swap(CMsgCustomGameCreate* other);

  // implements Message ----------------------------------------------

  CMsgCustomGameCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCustomGameCreate& from);
  void MergeFrom(const CMsgCustomGameCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_key = 1;
  inline bool has_search_key() const;
  inline void clear_search_key();
  static const int kSearchKeyFieldNumber = 1;
  inline const ::std::string& search_key() const;
  inline void set_search_key(const ::std::string& value);
  inline void set_search_key(const char* value);
  inline void set_search_key(const char* value, size_t size);
  inline ::std::string* mutable_search_key();
  inline ::std::string* release_search_key();
  inline void set_allocated_search_key(::std::string* search_key);

  // optional uint32 client_version = 2;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional uint32 difficulty = 3;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 3;
  inline ::google::protobuf::uint32 difficulty() const;
  inline void set_difficulty(::google::protobuf::uint32 value);

  // optional string game_mode = 4;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  inline const ::std::string& game_mode() const;
  inline void set_game_mode(const ::std::string& value);
  inline void set_game_mode(const char* value);
  inline void set_game_mode(const char* value, size_t size);
  inline ::std::string* mutable_game_mode();
  inline ::std::string* release_game_mode();
  inline void set_allocated_game_mode(::std::string* game_mode);

  // optional string map = 5;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 5;
  inline const ::std::string& map() const;
  inline void set_map(const ::std::string& value);
  inline void set_map(const char* value);
  inline void set_map(const char* value, size_t size);
  inline ::std::string* mutable_map();
  inline ::std::string* release_map();
  inline void set_allocated_map(::std::string* map);

  // optional uint64 custom_game_id = 7;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 7;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgCustomGameCreate)
 private:
  inline void set_has_search_key();
  inline void clear_has_search_key();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_map();
  inline void clear_has_map();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* search_key_;
  ::google::protobuf::uint32 client_version_;
  ::google::protobuf::uint32 difficulty_;
  ::std::string* game_mode_;
  ::std::string* map_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgCustomGameCreate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgEventGameCreate : public ::google::protobuf::Message {
 public:
  CMsgEventGameCreate();
  virtual ~CMsgEventGameCreate();

  CMsgEventGameCreate(const CMsgEventGameCreate& from);

  inline CMsgEventGameCreate& operator=(const CMsgEventGameCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEventGameCreate& default_instance();

  void Swap(CMsgEventGameCreate* other);

  // implements Message ----------------------------------------------

  CMsgEventGameCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgEventGameCreate& from);
  void MergeFrom(const CMsgEventGameCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_key = 1;
  inline bool has_search_key() const;
  inline void clear_search_key();
  static const int kSearchKeyFieldNumber = 1;
  inline const ::std::string& search_key() const;
  inline void set_search_key(const ::std::string& value);
  inline void set_search_key(const char* value);
  inline void set_search_key(const char* value, size_t size);
  inline ::std::string* mutable_search_key();
  inline ::std::string* release_search_key();
  inline void set_allocated_search_key(::std::string* search_key);

  // optional uint32 client_version = 2;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional uint32 difficulty = 3;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 3;
  inline ::google::protobuf::uint32 difficulty() const;
  inline void set_difficulty(::google::protobuf::uint32 value);

  // optional string game_mode = 4;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  inline const ::std::string& game_mode() const;
  inline void set_game_mode(const ::std::string& value);
  inline void set_game_mode(const char* value);
  inline void set_game_mode(const char* value, size_t size);
  inline ::std::string* mutable_game_mode();
  inline ::std::string* release_game_mode();
  inline void set_allocated_game_mode(::std::string* game_mode);

  // optional string map = 5;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 5;
  inline const ::std::string& map() const;
  inline void set_map(const ::std::string& value);
  inline void set_map(const char* value);
  inline void set_map(const char* value, size_t size);
  inline ::std::string* mutable_map();
  inline ::std::string* release_map();
  inline void set_allocated_map(::std::string* map);

  // optional uint64 custom_game_id = 7;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 7;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgEventGameCreate)
 private:
  inline void set_has_search_key();
  inline void clear_has_search_key();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_map();
  inline void clear_has_map();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* search_key_;
  ::google::protobuf::uint32 client_version_;
  ::google::protobuf::uint32 difficulty_;
  ::std::string* game_mode_;
  ::std::string* map_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgEventGameCreate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestInternationalTicket : public ::google::protobuf::Message {
 public:
  CMsgRequestInternationalTicket();
  virtual ~CMsgRequestInternationalTicket();

  CMsgRequestInternationalTicket(const CMsgRequestInternationalTicket& from);

  inline CMsgRequestInternationalTicket& operator=(const CMsgRequestInternationalTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestInternationalTicket& default_instance();

  void Swap(CMsgRequestInternationalTicket* other);

  // implements Message ----------------------------------------------

  CMsgRequestInternationalTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestInternationalTicket& from);
  void MergeFrom(const CMsgRequestInternationalTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgRequestInternationalTicket)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestInternationalTicket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBalancedShuffleLobby : public ::google::protobuf::Message {
 public:
  CMsgBalancedShuffleLobby();
  virtual ~CMsgBalancedShuffleLobby();

  CMsgBalancedShuffleLobby(const CMsgBalancedShuffleLobby& from);

  inline CMsgBalancedShuffleLobby& operator=(const CMsgBalancedShuffleLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBalancedShuffleLobby& default_instance();

  void Swap(CMsgBalancedShuffleLobby* other);

  // implements Message ----------------------------------------------

  CMsgBalancedShuffleLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBalancedShuffleLobby& from);
  void MergeFrom(const CMsgBalancedShuffleLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgBalancedShuffleLobby)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgBalancedShuffleLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgInitialQuestionnaireResponse : public ::google::protobuf::Message {
 public:
  CMsgInitialQuestionnaireResponse();
  virtual ~CMsgInitialQuestionnaireResponse();

  CMsgInitialQuestionnaireResponse(const CMsgInitialQuestionnaireResponse& from);

  inline CMsgInitialQuestionnaireResponse& operator=(const CMsgInitialQuestionnaireResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgInitialQuestionnaireResponse& default_instance();

  void Swap(CMsgInitialQuestionnaireResponse* other);

  // implements Message ----------------------------------------------

  CMsgInitialQuestionnaireResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgInitialQuestionnaireResponse& from);
  void MergeFrom(const CMsgInitialQuestionnaireResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 initial_skill = 1;
  inline bool has_initial_skill() const;
  inline void clear_initial_skill();
  static const int kInitialSkillFieldNumber = 1;
  inline ::google::protobuf::uint32 initial_skill() const;
  inline void set_initial_skill(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgInitialQuestionnaireResponse)
 private:
  inline void set_has_initial_skill();
  inline void clear_has_initial_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 initial_skill_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgInitialQuestionnaireResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatch_Player_CustomGameData : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatch_Player_CustomGameData();
  virtual ~CMsgDOTAMatch_Player_CustomGameData();

  CMsgDOTAMatch_Player_CustomGameData(const CMsgDOTAMatch_Player_CustomGameData& from);

  inline CMsgDOTAMatch_Player_CustomGameData& operator=(const CMsgDOTAMatch_Player_CustomGameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatch_Player_CustomGameData& default_instance();

  void Swap(CMsgDOTAMatch_Player_CustomGameData* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatch_Player_CustomGameData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatch_Player_CustomGameData& from);
  void MergeFrom(const CMsgDOTAMatch_Player_CustomGameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dota_team = 1;
  inline bool has_dota_team() const;
  inline void clear_dota_team();
  static const int kDotaTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 dota_team() const;
  inline void set_dota_team(::google::protobuf::uint32 value);

  // optional bool winner = 2;
  inline bool has_winner() const;
  inline void clear_winner();
  static const int kWinnerFieldNumber = 2;
  inline bool winner() const;
  inline void set_winner(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.Player.CustomGameData)
 private:
  inline void set_has_dota_team();
  inline void clear_has_dota_team();
  inline void set_has_winner();
  inline void clear_has_winner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dota_team_;
  bool winner_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatch_Player_CustomGameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatch_Player : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatch_Player();
  virtual ~CMsgDOTAMatch_Player();

  CMsgDOTAMatch_Player(const CMsgDOTAMatch_Player& from);

  inline CMsgDOTAMatch_Player& operator=(const CMsgDOTAMatch_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatch_Player& default_instance();

  void Swap(CMsgDOTAMatch_Player* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatch_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatch_Player& from);
  void MergeFrom(const CMsgDOTAMatch_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMatch_Player_CustomGameData CustomGameData;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 player_slot = 2;
  inline bool has_player_slot() const;
  inline void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 2;
  inline ::google::protobuf::uint32 player_slot() const;
  inline void set_player_slot(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 item_0 = 4;
  inline bool has_item_0() const;
  inline void clear_item_0();
  static const int kItem0FieldNumber = 4;
  inline ::google::protobuf::uint32 item_0() const;
  inline void set_item_0(::google::protobuf::uint32 value);

  // optional uint32 item_1 = 5;
  inline bool has_item_1() const;
  inline void clear_item_1();
  static const int kItem1FieldNumber = 5;
  inline ::google::protobuf::uint32 item_1() const;
  inline void set_item_1(::google::protobuf::uint32 value);

  // optional uint32 item_2 = 6;
  inline bool has_item_2() const;
  inline void clear_item_2();
  static const int kItem2FieldNumber = 6;
  inline ::google::protobuf::uint32 item_2() const;
  inline void set_item_2(::google::protobuf::uint32 value);

  // optional uint32 item_3 = 7;
  inline bool has_item_3() const;
  inline void clear_item_3();
  static const int kItem3FieldNumber = 7;
  inline ::google::protobuf::uint32 item_3() const;
  inline void set_item_3(::google::protobuf::uint32 value);

  // optional uint32 item_4 = 8;
  inline bool has_item_4() const;
  inline void clear_item_4();
  static const int kItem4FieldNumber = 8;
  inline ::google::protobuf::uint32 item_4() const;
  inline void set_item_4(::google::protobuf::uint32 value);

  // optional uint32 item_5 = 9;
  inline bool has_item_5() const;
  inline void clear_item_5();
  static const int kItem5FieldNumber = 9;
  inline ::google::protobuf::uint32 item_5() const;
  inline void set_item_5(::google::protobuf::uint32 value);

  // optional float expected_team_contribution = 10;
  inline bool has_expected_team_contribution() const;
  inline void clear_expected_team_contribution();
  static const int kExpectedTeamContributionFieldNumber = 10;
  inline float expected_team_contribution() const;
  inline void set_expected_team_contribution(float value);

  // optional float scaled_metric = 11;
  inline bool has_scaled_metric() const;
  inline void clear_scaled_metric();
  static const int kScaledMetricFieldNumber = 11;
  inline float scaled_metric() const;
  inline void set_scaled_metric(float value);

  // optional uint32 previous_rank = 12;
  inline bool has_previous_rank() const;
  inline void clear_previous_rank();
  static const int kPreviousRankFieldNumber = 12;
  inline ::google::protobuf::uint32 previous_rank() const;
  inline void set_previous_rank(::google::protobuf::uint32 value);

  // optional uint32 rank_change = 13;
  inline bool has_rank_change() const;
  inline void clear_rank_change();
  static const int kRankChangeFieldNumber = 13;
  inline ::google::protobuf::uint32 rank_change() const;
  inline void set_rank_change(::google::protobuf::uint32 value);

  // optional bool solo_rank = 49;
  inline bool has_solo_rank() const;
  inline void clear_solo_rank();
  static const int kSoloRankFieldNumber = 49;
  inline bool solo_rank() const;
  inline void set_solo_rank(bool value);

  // optional uint32 kills = 14;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 14;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 15;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 15;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 16;
  inline bool has_assists() const;
  inline void clear_assists();
  static const int kAssistsFieldNumber = 16;
  inline ::google::protobuf::uint32 assists() const;
  inline void set_assists(::google::protobuf::uint32 value);

  // optional uint32 leaver_status = 17;
  inline bool has_leaver_status() const;
  inline void clear_leaver_status();
  static const int kLeaverStatusFieldNumber = 17;
  inline ::google::protobuf::uint32 leaver_status() const;
  inline void set_leaver_status(::google::protobuf::uint32 value);

  // optional uint32 gold = 18;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 18;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 19;
  inline bool has_last_hits() const;
  inline void clear_last_hits();
  static const int kLastHitsFieldNumber = 19;
  inline ::google::protobuf::uint32 last_hits() const;
  inline void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 20;
  inline bool has_denies() const;
  inline void clear_denies();
  static const int kDeniesFieldNumber = 20;
  inline ::google::protobuf::uint32 denies() const;
  inline void set_denies(::google::protobuf::uint32 value);

  // optional uint32 gold_per_min = 21;
  inline bool has_gold_per_min() const;
  inline void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 21;
  inline ::google::protobuf::uint32 gold_per_min() const;
  inline void set_gold_per_min(::google::protobuf::uint32 value);

  // optional uint32 XP_per_min = 22;
  inline bool has_xp_per_min() const;
  inline void clear_xp_per_min();
  static const int kXPPerMinFieldNumber = 22;
  inline ::google::protobuf::uint32 xp_per_min() const;
  inline void set_xp_per_min(::google::protobuf::uint32 value);

  // optional uint32 gold_spent = 23;
  inline bool has_gold_spent() const;
  inline void clear_gold_spent();
  static const int kGoldSpentFieldNumber = 23;
  inline ::google::protobuf::uint32 gold_spent() const;
  inline void set_gold_spent(::google::protobuf::uint32 value);

  // optional uint32 hero_damage = 24;
  inline bool has_hero_damage() const;
  inline void clear_hero_damage();
  static const int kHeroDamageFieldNumber = 24;
  inline ::google::protobuf::uint32 hero_damage() const;
  inline void set_hero_damage(::google::protobuf::uint32 value);

  // optional uint32 tower_damage = 25;
  inline bool has_tower_damage() const;
  inline void clear_tower_damage();
  static const int kTowerDamageFieldNumber = 25;
  inline ::google::protobuf::uint32 tower_damage() const;
  inline void set_tower_damage(::google::protobuf::uint32 value);

  // optional uint32 hero_healing = 26;
  inline bool has_hero_healing() const;
  inline void clear_hero_healing();
  static const int kHeroHealingFieldNumber = 26;
  inline ::google::protobuf::uint32 hero_healing() const;
  inline void set_hero_healing(::google::protobuf::uint32 value);

  // optional uint32 level = 27;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 27;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 time_last_seen = 28;
  inline bool has_time_last_seen() const;
  inline void clear_time_last_seen();
  static const int kTimeLastSeenFieldNumber = 28;
  inline ::google::protobuf::uint32 time_last_seen() const;
  inline void set_time_last_seen(::google::protobuf::uint32 value);

  // optional string player_name = 29;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 29;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // optional uint32 support_ability_value = 30;
  inline bool has_support_ability_value() const;
  inline void clear_support_ability_value();
  static const int kSupportAbilityValueFieldNumber = 30;
  inline ::google::protobuf::uint32 support_ability_value() const;
  inline void set_support_ability_value(::google::protobuf::uint32 value);

  // optional bool feeding_detected = 32;
  inline bool has_feeding_detected() const;
  inline void clear_feeding_detected();
  static const int kFeedingDetectedFieldNumber = 32;
  inline bool feeding_detected() const;
  inline void set_feeding_detected(bool value);

  // optional uint32 search_rank = 34;
  inline bool has_search_rank() const;
  inline void clear_search_rank();
  static const int kSearchRankFieldNumber = 34;
  inline ::google::protobuf::uint32 search_rank() const;
  inline void set_search_rank(::google::protobuf::uint32 value);

  // optional uint32 search_rank_uncertainty = 35;
  inline bool has_search_rank_uncertainty() const;
  inline void clear_search_rank_uncertainty();
  static const int kSearchRankUncertaintyFieldNumber = 35;
  inline ::google::protobuf::uint32 search_rank_uncertainty() const;
  inline void set_search_rank_uncertainty(::google::protobuf::uint32 value);

  // optional int32 rank_uncertainty_change = 36;
  inline bool has_rank_uncertainty_change() const;
  inline void clear_rank_uncertainty_change();
  static const int kRankUncertaintyChangeFieldNumber = 36;
  inline ::google::protobuf::int32 rank_uncertainty_change() const;
  inline void set_rank_uncertainty_change(::google::protobuf::int32 value);

  // optional uint32 hero_play_count = 37;
  inline bool has_hero_play_count() const;
  inline void clear_hero_play_count();
  static const int kHeroPlayCountFieldNumber = 37;
  inline ::google::protobuf::uint32 hero_play_count() const;
  inline void set_hero_play_count(::google::protobuf::uint32 value);

  // optional fixed64 party_id = 38;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 38;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional float scaled_kills = 39;
  inline bool has_scaled_kills() const;
  inline void clear_scaled_kills();
  static const int kScaledKillsFieldNumber = 39;
  inline float scaled_kills() const;
  inline void set_scaled_kills(float value);

  // optional float scaled_deaths = 40;
  inline bool has_scaled_deaths() const;
  inline void clear_scaled_deaths();
  static const int kScaledDeathsFieldNumber = 40;
  inline float scaled_deaths() const;
  inline void set_scaled_deaths(float value);

  // optional float scaled_assists = 41;
  inline bool has_scaled_assists() const;
  inline void clear_scaled_assists();
  static const int kScaledAssistsFieldNumber = 41;
  inline float scaled_assists() const;
  inline void set_scaled_assists(float value);

  // optional uint32 claimed_farm_gold = 42;
  inline bool has_claimed_farm_gold() const;
  inline void clear_claimed_farm_gold();
  static const int kClaimedFarmGoldFieldNumber = 42;
  inline ::google::protobuf::uint32 claimed_farm_gold() const;
  inline void set_claimed_farm_gold(::google::protobuf::uint32 value);

  // optional uint32 support_gold = 43;
  inline bool has_support_gold() const;
  inline void clear_support_gold();
  static const int kSupportGoldFieldNumber = 43;
  inline ::google::protobuf::uint32 support_gold() const;
  inline void set_support_gold(::google::protobuf::uint32 value);

  // optional uint32 claimed_denies = 44;
  inline bool has_claimed_denies() const;
  inline void clear_claimed_denies();
  static const int kClaimedDeniesFieldNumber = 44;
  inline ::google::protobuf::uint32 claimed_denies() const;
  inline void set_claimed_denies(::google::protobuf::uint32 value);

  // optional uint32 claimed_misses = 45;
  inline bool has_claimed_misses() const;
  inline void clear_claimed_misses();
  static const int kClaimedMissesFieldNumber = 45;
  inline ::google::protobuf::uint32 claimed_misses() const;
  inline void set_claimed_misses(::google::protobuf::uint32 value);

  // optional uint32 misses = 46;
  inline bool has_misses() const;
  inline void clear_misses();
  static const int kMissesFieldNumber = 46;
  inline ::google::protobuf::uint32 misses() const;
  inline void set_misses(::google::protobuf::uint32 value);

  // repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;
  inline int ability_upgrades_size() const;
  inline void clear_ability_upgrades();
  static const int kAbilityUpgradesFieldNumber = 47;
  inline const ::CMatchPlayerAbilityUpgrade& ability_upgrades(int index) const;
  inline ::CMatchPlayerAbilityUpgrade* mutable_ability_upgrades(int index);
  inline ::CMatchPlayerAbilityUpgrade* add_ability_upgrades();
  inline const ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >&
      ability_upgrades() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >*
      mutable_ability_upgrades();

  // repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;
  inline int additional_units_inventory_size() const;
  inline void clear_additional_units_inventory();
  static const int kAdditionalUnitsInventoryFieldNumber = 48;
  inline const ::CMatchAdditionalUnitInventory& additional_units_inventory(int index) const;
  inline ::CMatchAdditionalUnitInventory* mutable_additional_units_inventory(int index);
  inline ::CMatchAdditionalUnitInventory* add_additional_units_inventory();
  inline const ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >&
      additional_units_inventory() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >*
      mutable_additional_units_inventory();

  // optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;
  inline bool has_custom_game_data() const;
  inline void clear_custom_game_data();
  static const int kCustomGameDataFieldNumber = 50;
  inline const ::CMsgDOTAMatch_Player_CustomGameData& custom_game_data() const;
  inline ::CMsgDOTAMatch_Player_CustomGameData* mutable_custom_game_data();
  inline ::CMsgDOTAMatch_Player_CustomGameData* release_custom_game_data();
  inline void set_allocated_custom_game_data(::CMsgDOTAMatch_Player_CustomGameData* custom_game_data);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.Player)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_player_slot();
  inline void clear_has_player_slot();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_item_0();
  inline void clear_has_item_0();
  inline void set_has_item_1();
  inline void clear_has_item_1();
  inline void set_has_item_2();
  inline void clear_has_item_2();
  inline void set_has_item_3();
  inline void clear_has_item_3();
  inline void set_has_item_4();
  inline void clear_has_item_4();
  inline void set_has_item_5();
  inline void clear_has_item_5();
  inline void set_has_expected_team_contribution();
  inline void clear_has_expected_team_contribution();
  inline void set_has_scaled_metric();
  inline void clear_has_scaled_metric();
  inline void set_has_previous_rank();
  inline void clear_has_previous_rank();
  inline void set_has_rank_change();
  inline void clear_has_rank_change();
  inline void set_has_solo_rank();
  inline void clear_has_solo_rank();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_assists();
  inline void clear_has_assists();
  inline void set_has_leaver_status();
  inline void clear_has_leaver_status();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_last_hits();
  inline void clear_has_last_hits();
  inline void set_has_denies();
  inline void clear_has_denies();
  inline void set_has_gold_per_min();
  inline void clear_has_gold_per_min();
  inline void set_has_xp_per_min();
  inline void clear_has_xp_per_min();
  inline void set_has_gold_spent();
  inline void clear_has_gold_spent();
  inline void set_has_hero_damage();
  inline void clear_has_hero_damage();
  inline void set_has_tower_damage();
  inline void clear_has_tower_damage();
  inline void set_has_hero_healing();
  inline void clear_has_hero_healing();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_time_last_seen();
  inline void clear_has_time_last_seen();
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_support_ability_value();
  inline void clear_has_support_ability_value();
  inline void set_has_feeding_detected();
  inline void clear_has_feeding_detected();
  inline void set_has_search_rank();
  inline void clear_has_search_rank();
  inline void set_has_search_rank_uncertainty();
  inline void clear_has_search_rank_uncertainty();
  inline void set_has_rank_uncertainty_change();
  inline void clear_has_rank_uncertainty_change();
  inline void set_has_hero_play_count();
  inline void clear_has_hero_play_count();
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_scaled_kills();
  inline void clear_has_scaled_kills();
  inline void set_has_scaled_deaths();
  inline void clear_has_scaled_deaths();
  inline void set_has_scaled_assists();
  inline void clear_has_scaled_assists();
  inline void set_has_claimed_farm_gold();
  inline void clear_has_claimed_farm_gold();
  inline void set_has_support_gold();
  inline void clear_has_support_gold();
  inline void set_has_claimed_denies();
  inline void clear_has_claimed_denies();
  inline void set_has_claimed_misses();
  inline void clear_has_claimed_misses();
  inline void set_has_misses();
  inline void clear_has_misses();
  inline void set_has_custom_game_data();
  inline void clear_has_custom_game_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 player_slot_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 item_0_;
  ::google::protobuf::uint32 item_1_;
  ::google::protobuf::uint32 item_2_;
  ::google::protobuf::uint32 item_3_;
  ::google::protobuf::uint32 item_4_;
  ::google::protobuf::uint32 item_5_;
  float expected_team_contribution_;
  float scaled_metric_;
  ::google::protobuf::uint32 previous_rank_;
  ::google::protobuf::uint32 rank_change_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 leaver_status_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  ::google::protobuf::uint32 gold_per_min_;
  ::google::protobuf::uint32 xp_per_min_;
  bool solo_rank_;
  bool feeding_detected_;
  ::google::protobuf::uint32 gold_spent_;
  ::google::protobuf::uint32 hero_damage_;
  ::google::protobuf::uint32 tower_damage_;
  ::google::protobuf::uint32 hero_healing_;
  ::google::protobuf::uint32 level_;
  ::std::string* player_name_;
  ::google::protobuf::uint32 time_last_seen_;
  ::google::protobuf::uint32 support_ability_value_;
  ::google::protobuf::uint32 search_rank_;
  ::google::protobuf::uint32 search_rank_uncertainty_;
  ::google::protobuf::int32 rank_uncertainty_change_;
  ::google::protobuf::uint32 hero_play_count_;
  ::google::protobuf::uint64 party_id_;
  float scaled_kills_;
  float scaled_deaths_;
  float scaled_assists_;
  ::google::protobuf::uint32 claimed_farm_gold_;
  ::google::protobuf::uint32 support_gold_;
  ::google::protobuf::uint32 claimed_denies_;
  ::google::protobuf::uint32 claimed_misses_;
  ::google::protobuf::uint32 misses_;
  ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade > ability_upgrades_;
  ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory > additional_units_inventory_;
  ::CMsgDOTAMatch_Player_CustomGameData* custom_game_data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatch_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatch_BroadcasterInfo : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatch_BroadcasterInfo();
  virtual ~CMsgDOTAMatch_BroadcasterInfo();

  CMsgDOTAMatch_BroadcasterInfo(const CMsgDOTAMatch_BroadcasterInfo& from);

  inline CMsgDOTAMatch_BroadcasterInfo& operator=(const CMsgDOTAMatch_BroadcasterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatch_BroadcasterInfo& default_instance();

  void Swap(CMsgDOTAMatch_BroadcasterInfo* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatch_BroadcasterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatch_BroadcasterInfo& from);
  void MergeFrom(const CMsgDOTAMatch_BroadcasterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.BroadcasterInfo)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatch_BroadcasterInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatch_BroadcasterChannel : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatch_BroadcasterChannel();
  virtual ~CMsgDOTAMatch_BroadcasterChannel();

  CMsgDOTAMatch_BroadcasterChannel(const CMsgDOTAMatch_BroadcasterChannel& from);

  inline CMsgDOTAMatch_BroadcasterChannel& operator=(const CMsgDOTAMatch_BroadcasterChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatch_BroadcasterChannel& default_instance();

  void Swap(CMsgDOTAMatch_BroadcasterChannel* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatch_BroadcasterChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatch_BroadcasterChannel& from);
  void MergeFrom(const CMsgDOTAMatch_BroadcasterChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string country_code = 1;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 1;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;
  inline int broadcaster_infos_size() const;
  inline void clear_broadcaster_infos();
  static const int kBroadcasterInfosFieldNumber = 3;
  inline const ::CMsgDOTAMatch_BroadcasterInfo& broadcaster_infos(int index) const;
  inline ::CMsgDOTAMatch_BroadcasterInfo* mutable_broadcaster_infos(int index);
  inline ::CMsgDOTAMatch_BroadcasterInfo* add_broadcaster_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterInfo >&
      broadcaster_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterInfo >*
      mutable_broadcaster_infos();

  // optional string language_code = 4;
  inline bool has_language_code() const;
  inline void clear_language_code();
  static const int kLanguageCodeFieldNumber = 4;
  inline const ::std::string& language_code() const;
  inline void set_language_code(const ::std::string& value);
  inline void set_language_code(const char* value);
  inline void set_language_code(const char* value, size_t size);
  inline ::std::string* mutable_language_code();
  inline ::std::string* release_language_code();
  inline void set_allocated_language_code(::std::string* language_code);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.BroadcasterChannel)
 private:
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_language_code();
  inline void clear_has_language_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* country_code_;
  ::std::string* description_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterInfo > broadcaster_infos_;
  ::std::string* language_code_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatch_BroadcasterChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatch_CustomGameData : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatch_CustomGameData();
  virtual ~CMsgDOTAMatch_CustomGameData();

  CMsgDOTAMatch_CustomGameData(const CMsgDOTAMatch_CustomGameData& from);

  inline CMsgDOTAMatch_CustomGameData& operator=(const CMsgDOTAMatch_CustomGameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatch_CustomGameData& default_instance();

  void Swap(CMsgDOTAMatch_CustomGameData* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatch_CustomGameData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatch_CustomGameData& from);
  void MergeFrom(const CMsgDOTAMatch_CustomGameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional string map_name = 2;
  inline bool has_map_name() const;
  inline void clear_map_name();
  static const int kMapNameFieldNumber = 2;
  inline const ::std::string& map_name() const;
  inline void set_map_name(const ::std::string& value);
  inline void set_map_name(const char* value);
  inline void set_map_name(const char* value, size_t size);
  inline ::std::string* mutable_map_name();
  inline ::std::string* release_map_name();
  inline void set_allocated_map_name(::std::string* map_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.CustomGameData)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_map_name();
  inline void clear_has_map_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::std::string* map_name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatch_CustomGameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatch : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatch();
  virtual ~CMsgDOTAMatch();

  CMsgDOTAMatch(const CMsgDOTAMatch& from);

  inline CMsgDOTAMatch& operator=(const CMsgDOTAMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatch& default_instance();

  void Swap(CMsgDOTAMatch* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatch& from);
  void MergeFrom(const CMsgDOTAMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMatch_Player Player;
  typedef CMsgDOTAMatch_BroadcasterInfo BroadcasterInfo;
  typedef CMsgDOTAMatch_BroadcasterChannel BroadcasterChannel;
  typedef CMsgDOTAMatch_CustomGameData CustomGameData;

  typedef CMsgDOTAMatch_ReplayState ReplayState;
  static const ReplayState REPLAY_AVAILABLE = CMsgDOTAMatch_ReplayState_REPLAY_AVAILABLE;
  static const ReplayState REPLAY_NOT_RECORDED = CMsgDOTAMatch_ReplayState_REPLAY_NOT_RECORDED;
  static const ReplayState REPLAY_EXPIRED = CMsgDOTAMatch_ReplayState_REPLAY_EXPIRED;
  static inline bool ReplayState_IsValid(int value) {
    return CMsgDOTAMatch_ReplayState_IsValid(value);
  }
  static const ReplayState ReplayState_MIN =
    CMsgDOTAMatch_ReplayState_ReplayState_MIN;
  static const ReplayState ReplayState_MAX =
    CMsgDOTAMatch_ReplayState_ReplayState_MAX;
  static const int ReplayState_ARRAYSIZE =
    CMsgDOTAMatch_ReplayState_ReplayState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReplayState_descriptor() {
    return CMsgDOTAMatch_ReplayState_descriptor();
  }
  static inline const ::std::string& ReplayState_Name(ReplayState value) {
    return CMsgDOTAMatch_ReplayState_Name(value);
  }
  static inline bool ReplayState_Parse(const ::std::string& name,
      ReplayState* value) {
    return CMsgDOTAMatch_ReplayState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool good_guys_win = 2;
  inline bool has_good_guys_win() const;
  inline void clear_good_guys_win();
  static const int kGoodGuysWinFieldNumber = 2;
  inline bool good_guys_win() const;
  inline void set_good_guys_win(bool value);

  // optional uint32 duration = 3;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 3;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);

  // optional fixed32 startTime = 4;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAMatch.Player players = 5;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 5;
  inline const ::CMsgDOTAMatch_Player& players(int index) const;
  inline ::CMsgDOTAMatch_Player* mutable_players(int index);
  inline ::CMsgDOTAMatch_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_Player >*
      mutable_players();

  // optional uint64 match_id = 6;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 6;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // repeated uint32 tower_status = 8;
  inline int tower_status_size() const;
  inline void clear_tower_status();
  static const int kTowerStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 tower_status(int index) const;
  inline void set_tower_status(int index, ::google::protobuf::uint32 value);
  inline void add_tower_status(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tower_status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tower_status();

  // repeated uint32 barracks_status = 9;
  inline int barracks_status_size() const;
  inline void clear_barracks_status();
  static const int kBarracksStatusFieldNumber = 9;
  inline ::google::protobuf::uint32 barracks_status(int index) const;
  inline void set_barracks_status(int index, ::google::protobuf::uint32 value);
  inline void add_barracks_status(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      barracks_status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_barracks_status();

  // optional uint32 cluster = 10;
  inline bool has_cluster() const;
  inline void clear_cluster();
  static const int kClusterFieldNumber = 10;
  inline ::google::protobuf::uint32 cluster() const;
  inline void set_cluster(::google::protobuf::uint32 value);

  // optional uint32 first_blood_time = 12;
  inline bool has_first_blood_time() const;
  inline void clear_first_blood_time();
  static const int kFirstBloodTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 first_blood_time() const;
  inline void set_first_blood_time(::google::protobuf::uint32 value);

  // optional fixed32 replay_salt = 13;
  inline bool has_replay_salt() const;
  inline void clear_replay_salt();
  static const int kReplaySaltFieldNumber = 13;
  inline ::google::protobuf::uint32 replay_salt() const;
  inline void set_replay_salt(::google::protobuf::uint32 value);

  // optional fixed32 server_ip = 14;
  inline bool has_server_ip() const;
  inline void clear_server_ip();
  static const int kServerIpFieldNumber = 14;
  inline ::google::protobuf::uint32 server_ip() const;
  inline void set_server_ip(::google::protobuf::uint32 value);

  // optional uint32 server_port = 15;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 15;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 16;
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 16;
  inline ::google::protobuf::uint32 lobby_type() const;
  inline void set_lobby_type(::google::protobuf::uint32 value);

  // optional uint32 human_players = 17;
  inline bool has_human_players() const;
  inline void clear_human_players();
  static const int kHumanPlayersFieldNumber = 17;
  inline ::google::protobuf::uint32 human_players() const;
  inline void set_human_players(::google::protobuf::uint32 value);

  // optional uint32 average_skill = 18;
  inline bool has_average_skill() const;
  inline void clear_average_skill();
  static const int kAverageSkillFieldNumber = 18;
  inline ::google::protobuf::uint32 average_skill() const;
  inline void set_average_skill(::google::protobuf::uint32 value);

  // optional float game_balance = 19;
  inline bool has_game_balance() const;
  inline void clear_game_balance();
  static const int kGameBalanceFieldNumber = 19;
  inline float game_balance() const;
  inline void set_game_balance(float value);

  // optional uint32 radiant_team_id = 20;
  inline bool has_radiant_team_id() const;
  inline void clear_radiant_team_id();
  static const int kRadiantTeamIdFieldNumber = 20;
  inline ::google::protobuf::uint32 radiant_team_id() const;
  inline void set_radiant_team_id(::google::protobuf::uint32 value);

  // optional uint32 dire_team_id = 21;
  inline bool has_dire_team_id() const;
  inline void clear_dire_team_id();
  static const int kDireTeamIdFieldNumber = 21;
  inline ::google::protobuf::uint32 dire_team_id() const;
  inline void set_dire_team_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 22;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 22;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional string radiant_team_name = 23;
  inline bool has_radiant_team_name() const;
  inline void clear_radiant_team_name();
  static const int kRadiantTeamNameFieldNumber = 23;
  inline const ::std::string& radiant_team_name() const;
  inline void set_radiant_team_name(const ::std::string& value);
  inline void set_radiant_team_name(const char* value);
  inline void set_radiant_team_name(const char* value, size_t size);
  inline ::std::string* mutable_radiant_team_name();
  inline ::std::string* release_radiant_team_name();
  inline void set_allocated_radiant_team_name(::std::string* radiant_team_name);

  // optional string dire_team_name = 24;
  inline bool has_dire_team_name() const;
  inline void clear_dire_team_name();
  static const int kDireTeamNameFieldNumber = 24;
  inline const ::std::string& dire_team_name() const;
  inline void set_dire_team_name(const ::std::string& value);
  inline void set_dire_team_name(const char* value);
  inline void set_dire_team_name(const char* value, size_t size);
  inline ::std::string* mutable_dire_team_name();
  inline ::std::string* release_dire_team_name();
  inline void set_allocated_dire_team_name(::std::string* dire_team_name);

  // optional uint64 radiant_team_logo = 25;
  inline bool has_radiant_team_logo() const;
  inline void clear_radiant_team_logo();
  static const int kRadiantTeamLogoFieldNumber = 25;
  inline ::google::protobuf::uint64 radiant_team_logo() const;
  inline void set_radiant_team_logo(::google::protobuf::uint64 value);

  // optional uint64 dire_team_logo = 26;
  inline bool has_dire_team_logo() const;
  inline void clear_dire_team_logo();
  static const int kDireTeamLogoFieldNumber = 26;
  inline ::google::protobuf::uint64 dire_team_logo() const;
  inline void set_dire_team_logo(::google::protobuf::uint64 value);

  // optional uint32 radiant_team_complete = 27;
  inline bool has_radiant_team_complete() const;
  inline void clear_radiant_team_complete();
  static const int kRadiantTeamCompleteFieldNumber = 27;
  inline ::google::protobuf::uint32 radiant_team_complete() const;
  inline void set_radiant_team_complete(::google::protobuf::uint32 value);

  // optional uint32 dire_team_complete = 28;
  inline bool has_dire_team_complete() const;
  inline void clear_dire_team_complete();
  static const int kDireTeamCompleteFieldNumber = 28;
  inline ::google::protobuf::uint32 dire_team_complete() const;
  inline void set_dire_team_complete(::google::protobuf::uint32 value);

  // optional uint32 positive_votes = 29;
  inline bool has_positive_votes() const;
  inline void clear_positive_votes();
  static const int kPositiveVotesFieldNumber = 29;
  inline ::google::protobuf::uint32 positive_votes() const;
  inline void set_positive_votes(::google::protobuf::uint32 value);

  // optional uint32 negative_votes = 30;
  inline bool has_negative_votes() const;
  inline void clear_negative_votes();
  static const int kNegativeVotesFieldNumber = 30;
  inline ::google::protobuf::uint32 negative_votes() const;
  inline void set_negative_votes(::google::protobuf::uint32 value);

  // optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 31;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // repeated .CMatchHeroSelectEvent picks_bans = 32;
  inline int picks_bans_size() const;
  inline void clear_picks_bans();
  static const int kPicksBansFieldNumber = 32;
  inline const ::CMatchHeroSelectEvent& picks_bans(int index) const;
  inline ::CMatchHeroSelectEvent* mutable_picks_bans(int index);
  inline ::CMatchHeroSelectEvent* add_picks_bans();
  inline const ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >&
      picks_bans() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >*
      mutable_picks_bans();

  // optional uint64 match_seq_num = 33;
  inline bool has_match_seq_num() const;
  inline void clear_match_seq_num();
  static const int kMatchSeqNumFieldNumber = 33;
  inline ::google::protobuf::uint64 match_seq_num() const;
  inline void set_match_seq_num(::google::protobuf::uint64 value);

  // optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];
  inline bool has_replay_state() const;
  inline void clear_replay_state();
  static const int kReplayStateFieldNumber = 34;
  inline ::CMsgDOTAMatch_ReplayState replay_state() const;
  inline void set_replay_state(::CMsgDOTAMatch_ReplayState value);

  // optional uint32 radiant_guild_id = 35;
  inline bool has_radiant_guild_id() const;
  inline void clear_radiant_guild_id();
  static const int kRadiantGuildIdFieldNumber = 35;
  inline ::google::protobuf::uint32 radiant_guild_id() const;
  inline void set_radiant_guild_id(::google::protobuf::uint32 value);

  // optional uint32 dire_guild_id = 36;
  inline bool has_dire_guild_id() const;
  inline void clear_dire_guild_id();
  static const int kDireGuildIdFieldNumber = 36;
  inline ::google::protobuf::uint32 dire_guild_id() const;
  inline void set_dire_guild_id(::google::protobuf::uint32 value);

  // optional string radiant_team_tag = 37;
  inline bool has_radiant_team_tag() const;
  inline void clear_radiant_team_tag();
  static const int kRadiantTeamTagFieldNumber = 37;
  inline const ::std::string& radiant_team_tag() const;
  inline void set_radiant_team_tag(const ::std::string& value);
  inline void set_radiant_team_tag(const char* value);
  inline void set_radiant_team_tag(const char* value, size_t size);
  inline ::std::string* mutable_radiant_team_tag();
  inline ::std::string* release_radiant_team_tag();
  inline void set_allocated_radiant_team_tag(::std::string* radiant_team_tag);

  // optional string dire_team_tag = 38;
  inline bool has_dire_team_tag() const;
  inline void clear_dire_team_tag();
  static const int kDireTeamTagFieldNumber = 38;
  inline const ::std::string& dire_team_tag() const;
  inline void set_dire_team_tag(const ::std::string& value);
  inline void set_dire_team_tag(const char* value);
  inline void set_dire_team_tag(const char* value, size_t size);
  inline ::std::string* mutable_dire_team_tag();
  inline ::std::string* release_dire_team_tag();
  inline void set_allocated_dire_team_tag(::std::string* dire_team_tag);

  // optional uint32 series_id = 39;
  inline bool has_series_id() const;
  inline void clear_series_id();
  static const int kSeriesIdFieldNumber = 39;
  inline ::google::protobuf::uint32 series_id() const;
  inline void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 series_type = 40;
  inline bool has_series_type() const;
  inline void clear_series_type();
  static const int kSeriesTypeFieldNumber = 40;
  inline ::google::protobuf::uint32 series_type() const;
  inline void set_series_type(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;
  inline int broadcaster_channels_size() const;
  inline void clear_broadcaster_channels();
  static const int kBroadcasterChannelsFieldNumber = 43;
  inline const ::CMsgDOTAMatch_BroadcasterChannel& broadcaster_channels(int index) const;
  inline ::CMsgDOTAMatch_BroadcasterChannel* mutable_broadcaster_channels(int index);
  inline ::CMsgDOTAMatch_BroadcasterChannel* add_broadcaster_channels();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterChannel >&
      broadcaster_channels() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterChannel >*
      mutable_broadcaster_channels();

  // optional uint32 engine = 44;
  inline bool has_engine() const;
  inline void clear_engine();
  static const int kEngineFieldNumber = 44;
  inline ::google::protobuf::uint32 engine() const;
  inline void set_engine(::google::protobuf::uint32 value);

  // optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;
  inline bool has_custom_game_data() const;
  inline void clear_custom_game_data();
  static const int kCustomGameDataFieldNumber = 45;
  inline const ::CMsgDOTAMatch_CustomGameData& custom_game_data() const;
  inline ::CMsgDOTAMatch_CustomGameData* mutable_custom_game_data();
  inline ::CMsgDOTAMatch_CustomGameData* release_custom_game_data();
  inline void set_allocated_custom_game_data(::CMsgDOTAMatch_CustomGameData* custom_game_data);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatch)
 private:
  inline void set_has_good_guys_win();
  inline void clear_has_good_guys_win();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_cluster();
  inline void clear_has_cluster();
  inline void set_has_first_blood_time();
  inline void clear_has_first_blood_time();
  inline void set_has_replay_salt();
  inline void clear_has_replay_salt();
  inline void set_has_server_ip();
  inline void clear_has_server_ip();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_lobby_type();
  inline void clear_has_lobby_type();
  inline void set_has_human_players();
  inline void clear_has_human_players();
  inline void set_has_average_skill();
  inline void clear_has_average_skill();
  inline void set_has_game_balance();
  inline void clear_has_game_balance();
  inline void set_has_radiant_team_id();
  inline void clear_has_radiant_team_id();
  inline void set_has_dire_team_id();
  inline void clear_has_dire_team_id();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_radiant_team_name();
  inline void clear_has_radiant_team_name();
  inline void set_has_dire_team_name();
  inline void clear_has_dire_team_name();
  inline void set_has_radiant_team_logo();
  inline void clear_has_radiant_team_logo();
  inline void set_has_dire_team_logo();
  inline void clear_has_dire_team_logo();
  inline void set_has_radiant_team_complete();
  inline void clear_has_radiant_team_complete();
  inline void set_has_dire_team_complete();
  inline void clear_has_dire_team_complete();
  inline void set_has_positive_votes();
  inline void clear_has_positive_votes();
  inline void set_has_negative_votes();
  inline void clear_has_negative_votes();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_match_seq_num();
  inline void clear_has_match_seq_num();
  inline void set_has_replay_state();
  inline void clear_has_replay_state();
  inline void set_has_radiant_guild_id();
  inline void clear_has_radiant_guild_id();
  inline void set_has_dire_guild_id();
  inline void clear_has_dire_guild_id();
  inline void set_has_radiant_team_tag();
  inline void clear_has_radiant_team_tag();
  inline void set_has_dire_team_tag();
  inline void clear_has_dire_team_tag();
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_series_type();
  inline void clear_has_series_type();
  inline void set_has_engine();
  inline void clear_has_engine();
  inline void set_has_custom_game_data();
  inline void clear_has_custom_game_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  bool good_guys_win_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_Player > players_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 cluster_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tower_status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > barracks_status_;
  ::google::protobuf::uint32 first_blood_time_;
  ::google::protobuf::uint32 replay_salt_;
  ::google::protobuf::uint32 server_ip_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 lobby_type_;
  ::google::protobuf::uint32 human_players_;
  ::google::protobuf::uint32 average_skill_;
  float game_balance_;
  ::google::protobuf::uint32 radiant_team_id_;
  ::google::protobuf::uint32 dire_team_id_;
  ::std::string* radiant_team_name_;
  ::std::string* dire_team_name_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 radiant_team_complete_;
  ::google::protobuf::uint64 radiant_team_logo_;
  ::google::protobuf::uint64 dire_team_logo_;
  ::google::protobuf::uint32 dire_team_complete_;
  ::google::protobuf::uint32 positive_votes_;
  ::google::protobuf::uint32 negative_votes_;
  int game_mode_;
  ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent > picks_bans_;
  ::google::protobuf::uint64 match_seq_num_;
  int replay_state_;
  ::google::protobuf::uint32 radiant_guild_id_;
  ::std::string* radiant_team_tag_;
  ::google::protobuf::uint32 dire_guild_id_;
  ::google::protobuf::uint32 series_id_;
  ::std::string* dire_team_tag_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterChannel > broadcaster_channels_;
  ::google::protobuf::uint32 series_type_;
  ::google::protobuf::uint32 engine_;
  ::CMsgDOTAMatch_CustomGameData* custom_game_data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPlayerMatchHistory : public ::google::protobuf::Message {
 public:
  CMsgDOTAPlayerMatchHistory();
  virtual ~CMsgDOTAPlayerMatchHistory();

  CMsgDOTAPlayerMatchHistory(const CMsgDOTAPlayerMatchHistory& from);

  inline CMsgDOTAPlayerMatchHistory& operator=(const CMsgDOTAPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPlayerMatchHistory& default_instance();

  void Swap(CMsgDOTAPlayerMatchHistory* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPlayerMatchHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAPlayerMatchHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  inline int match_ids_size() const;
  inline void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 match_ids(int index) const;
  inline void set_match_ids(int index, ::google::protobuf::uint64 value);
  inline void add_match_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:CMsgDOTAPlayerMatchHistory)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPlayerMatchHistory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchMinimal_Player : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchMinimal_Player();
  virtual ~CMsgDOTAMatchMinimal_Player();

  CMsgDOTAMatchMinimal_Player(const CMsgDOTAMatchMinimal_Player& from);

  inline CMsgDOTAMatchMinimal_Player& operator=(const CMsgDOTAMatchMinimal_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchMinimal_Player& default_instance();

  void Swap(CMsgDOTAMatchMinimal_Player* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchMinimal_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchMinimal_Player& from);
  void MergeFrom(const CMsgDOTAMatchMinimal_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 kills = 3;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 3;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 4;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 4;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 5;
  inline bool has_assists() const;
  inline void clear_assists();
  static const int kAssistsFieldNumber = 5;
  inline ::google::protobuf::uint32 assists() const;
  inline void set_assists(::google::protobuf::uint32 value);

  // repeated uint32 items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline ::google::protobuf::uint32 items(int index) const;
  inline void set_items(int index, ::google::protobuf::uint32 value);
  inline void add_items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchMinimal.Player)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_assists();
  inline void clear_has_assists();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > items_;
  ::google::protobuf::uint32 assists_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchMinimal_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchMinimal_League : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchMinimal_League();
  virtual ~CMsgDOTAMatchMinimal_League();

  CMsgDOTAMatchMinimal_League(const CMsgDOTAMatchMinimal_League& from);

  inline CMsgDOTAMatchMinimal_League& operator=(const CMsgDOTAMatchMinimal_League& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchMinimal_League& default_instance();

  void Swap(CMsgDOTAMatchMinimal_League* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchMinimal_League* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchMinimal_League& from);
  void MergeFrom(const CMsgDOTAMatchMinimal_League& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 radiant_team_id = 2;
  inline bool has_radiant_team_id() const;
  inline void clear_radiant_team_id();
  static const int kRadiantTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 radiant_team_id() const;
  inline void set_radiant_team_id(::google::protobuf::uint32 value);

  // optional string radiant_team_name = 3;
  inline bool has_radiant_team_name() const;
  inline void clear_radiant_team_name();
  static const int kRadiantTeamNameFieldNumber = 3;
  inline const ::std::string& radiant_team_name() const;
  inline void set_radiant_team_name(const ::std::string& value);
  inline void set_radiant_team_name(const char* value);
  inline void set_radiant_team_name(const char* value, size_t size);
  inline ::std::string* mutable_radiant_team_name();
  inline ::std::string* release_radiant_team_name();
  inline void set_allocated_radiant_team_name(::std::string* radiant_team_name);

  // optional fixed64 radiant_team_logo = 4;
  inline bool has_radiant_team_logo() const;
  inline void clear_radiant_team_logo();
  static const int kRadiantTeamLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 radiant_team_logo() const;
  inline void set_radiant_team_logo(::google::protobuf::uint64 value);

  // optional uint32 dire_team_id = 5;
  inline bool has_dire_team_id() const;
  inline void clear_dire_team_id();
  static const int kDireTeamIdFieldNumber = 5;
  inline ::google::protobuf::uint32 dire_team_id() const;
  inline void set_dire_team_id(::google::protobuf::uint32 value);

  // optional string dire_team_name = 6;
  inline bool has_dire_team_name() const;
  inline void clear_dire_team_name();
  static const int kDireTeamNameFieldNumber = 6;
  inline const ::std::string& dire_team_name() const;
  inline void set_dire_team_name(const ::std::string& value);
  inline void set_dire_team_name(const char* value);
  inline void set_dire_team_name(const char* value, size_t size);
  inline ::std::string* mutable_dire_team_name();
  inline ::std::string* release_dire_team_name();
  inline void set_allocated_dire_team_name(::std::string* dire_team_name);

  // optional fixed64 dire_team_logo = 7;
  inline bool has_dire_team_logo() const;
  inline void clear_dire_team_logo();
  static const int kDireTeamLogoFieldNumber = 7;
  inline ::google::protobuf::uint64 dire_team_logo() const;
  inline void set_dire_team_logo(::google::protobuf::uint64 value);

  // optional uint32 series_type = 8;
  inline bool has_series_type() const;
  inline void clear_series_type();
  static const int kSeriesTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 series_type() const;
  inline void set_series_type(::google::protobuf::uint32 value);

  // optional uint32 series_game = 9;
  inline bool has_series_game() const;
  inline void clear_series_game();
  static const int kSeriesGameFieldNumber = 9;
  inline ::google::protobuf::uint32 series_game() const;
  inline void set_series_game(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchMinimal.League)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_radiant_team_id();
  inline void clear_has_radiant_team_id();
  inline void set_has_radiant_team_name();
  inline void clear_has_radiant_team_name();
  inline void set_has_radiant_team_logo();
  inline void clear_has_radiant_team_logo();
  inline void set_has_dire_team_id();
  inline void clear_has_dire_team_id();
  inline void set_has_dire_team_name();
  inline void clear_has_dire_team_name();
  inline void set_has_dire_team_logo();
  inline void clear_has_dire_team_logo();
  inline void set_has_series_type();
  inline void clear_has_series_type();
  inline void set_has_series_game();
  inline void clear_has_series_game();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 radiant_team_id_;
  ::std::string* radiant_team_name_;
  ::google::protobuf::uint64 radiant_team_logo_;
  ::std::string* dire_team_name_;
  ::google::protobuf::uint32 dire_team_id_;
  ::google::protobuf::uint32 series_type_;
  ::google::protobuf::uint64 dire_team_logo_;
  ::google::protobuf::uint32 series_game_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchMinimal_League* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchMinimal : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchMinimal();
  virtual ~CMsgDOTAMatchMinimal();

  CMsgDOTAMatchMinimal(const CMsgDOTAMatchMinimal& from);

  inline CMsgDOTAMatchMinimal& operator=(const CMsgDOTAMatchMinimal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchMinimal& default_instance();

  void Swap(CMsgDOTAMatchMinimal* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchMinimal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchMinimal& from);
  void MergeFrom(const CMsgDOTAMatchMinimal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMatchMinimal_Player Player;
  typedef CMsgDOTAMatchMinimal_League League;

  // accessors -------------------------------------------------------

  // optional uint32 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint32 match_id() const;
  inline void set_match_id(::google::protobuf::uint32 value);

  // optional fixed32 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 duration = 3;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 3;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);

  // optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // optional uint32 winning_team = 5;
  inline bool has_winning_team() const;
  inline void clear_winning_team();
  static const int kWinningTeamFieldNumber = 5;
  inline ::google::protobuf::uint32 winning_team() const;
  inline void set_winning_team(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAMatchMinimal.Player players = 6;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 6;
  inline const ::CMsgDOTAMatchMinimal_Player& players(int index) const;
  inline ::CMsgDOTAMatchMinimal_Player* mutable_players(int index);
  inline ::CMsgDOTAMatchMinimal_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal_Player >*
      mutable_players();

  // optional .CMsgDOTAMatchMinimal.League league = 7;
  inline bool has_league() const;
  inline void clear_league();
  static const int kLeagueFieldNumber = 7;
  inline const ::CMsgDOTAMatchMinimal_League& league() const;
  inline ::CMsgDOTAMatchMinimal_League* mutable_league();
  inline ::CMsgDOTAMatchMinimal_League* release_league();
  inline void set_allocated_league(::CMsgDOTAMatchMinimal_League* league);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchMinimal)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_winning_team();
  inline void clear_has_winning_team();
  inline void set_has_league();
  inline void clear_has_league();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 duration_;
  int game_mode_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal_Player > players_;
  ::CMsgDOTAMatchMinimal_League* league_;
  ::google::protobuf::uint32 winning_team_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchMinimal* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchHistoryFilter : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchHistoryFilter();
  virtual ~CMsgDOTAMatchHistoryFilter();

  CMsgDOTAMatchHistoryFilter(const CMsgDOTAMatchHistoryFilter& from);

  inline CMsgDOTAMatchHistoryFilter& operator=(const CMsgDOTAMatchHistoryFilter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchHistoryFilter& default_instance();

  void Swap(CMsgDOTAMatchHistoryFilter* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchHistoryFilter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchHistoryFilter& from);
  void MergeFrom(const CMsgDOTAMatchHistoryFilter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  inline int match_ids_size() const;
  inline void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 match_ids(int index) const;
  inline void set_match_ids(int index, ::google::protobuf::uint64 value);
  inline void add_match_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // optional uint64 newest_match_id_at_last_query = 2;
  inline bool has_newest_match_id_at_last_query() const;
  inline void clear_newest_match_id_at_last_query();
  static const int kNewestMatchIdAtLastQueryFieldNumber = 2;
  inline ::google::protobuf::uint64 newest_match_id_at_last_query() const;
  inline void set_newest_match_id_at_last_query(::google::protobuf::uint64 value);

  // optional uint32 time_last_query = 3;
  inline bool has_time_last_query() const;
  inline void clear_time_last_query();
  static const int kTimeLastQueryFieldNumber = 3;
  inline ::google::protobuf::uint32 time_last_query() const;
  inline void set_time_last_query(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchHistoryFilter)
 private:
  inline void set_has_newest_match_id_at_last_query();
  inline void clear_has_newest_match_id_at_last_query();
  inline void set_has_time_last_query();
  inline void clear_has_time_last_query();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  ::google::protobuf::uint64 newest_match_id_at_last_query_;
  ::google::protobuf::uint32 time_last_query_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchHistoryFilter* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatches : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestMatches();
  virtual ~CMsgDOTARequestMatches();

  CMsgDOTARequestMatches(const CMsgDOTARequestMatches& from);

  inline CMsgDOTARequestMatches& operator=(const CMsgDOTARequestMatches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatches& default_instance();

  void Swap(CMsgDOTARequestMatches* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestMatches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestMatches& from);
  void MergeFrom(const CMsgDOTARequestMatches& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatches_SkillLevel SkillLevel;
  static const SkillLevel Any = CMsgDOTARequestMatches_SkillLevel_Any;
  static const SkillLevel Normal = CMsgDOTARequestMatches_SkillLevel_Normal;
  static const SkillLevel High = CMsgDOTARequestMatches_SkillLevel_High;
  static const SkillLevel VeryHigh = CMsgDOTARequestMatches_SkillLevel_VeryHigh;
  static inline bool SkillLevel_IsValid(int value) {
    return CMsgDOTARequestMatches_SkillLevel_IsValid(value);
  }
  static const SkillLevel SkillLevel_MIN =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN;
  static const SkillLevel SkillLevel_MAX =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX;
  static const int SkillLevel_ARRAYSIZE =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SkillLevel_descriptor() {
    return CMsgDOTARequestMatches_SkillLevel_descriptor();
  }
  static inline const ::std::string& SkillLevel_Name(SkillLevel value) {
    return CMsgDOTARequestMatches_SkillLevel_Name(value);
  }
  static inline bool SkillLevel_Parse(const ::std::string& name,
      SkillLevel* value) {
    return CMsgDOTARequestMatches_SkillLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 3;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 3;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // optional fixed32 date_min = 6;
  inline bool has_date_min() const;
  inline void clear_date_min();
  static const int kDateMinFieldNumber = 6;
  inline ::google::protobuf::uint32 date_min() const;
  inline void set_date_min(::google::protobuf::uint32 value);

  // optional fixed32 date_max = 7;
  inline bool has_date_max() const;
  inline void clear_date_max();
  static const int kDateMaxFieldNumber = 7;
  inline ::google::protobuf::uint32 date_max() const;
  inline void set_date_max(::google::protobuf::uint32 value);

  // optional uint32 matches_requested = 10;
  inline bool has_matches_requested() const;
  inline void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 10;
  inline ::google::protobuf::uint32 matches_requested() const;
  inline void set_matches_requested(::google::protobuf::uint32 value);

  // optional uint64 start_at_match_id = 11;
  inline bool has_start_at_match_id() const;
  inline void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 11;
  inline ::google::protobuf::uint64 start_at_match_id() const;
  inline void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional fixed32 min_players = 12;
  inline bool has_min_players() const;
  inline void clear_min_players();
  static const int kMinPlayersFieldNumber = 12;
  inline ::google::protobuf::uint32 min_players() const;
  inline void set_min_players(::google::protobuf::uint32 value);

  // optional uint32 request_id = 13;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 13;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // optional bool tournament_games_only = 14;
  inline bool has_tournament_games_only() const;
  inline void clear_tournament_games_only();
  static const int kTournamentGamesOnlyFieldNumber = 14;
  inline bool tournament_games_only() const;
  inline void set_tournament_games_only(bool value);

  // optional uint32 account_id = 15;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 15;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 16;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 16;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional .CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 17;
  inline ::CMsgDOTARequestMatches_SkillLevel skill() const;
  inline void set_skill(::CMsgDOTARequestMatches_SkillLevel value);

  // optional uint32 team_id = 18;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 18;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional uint64 custom_game_id = 20;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 20;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestMatches)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_date_min();
  inline void clear_has_date_min();
  inline void set_has_date_max();
  inline void clear_has_date_max();
  inline void set_has_matches_requested();
  inline void clear_has_matches_requested();
  inline void set_has_start_at_match_id();
  inline void clear_has_start_at_match_id();
  inline void set_has_min_players();
  inline void clear_has_min_players();
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_tournament_games_only();
  inline void clear_has_tournament_games_only();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::uint32 date_min_;
  ::google::protobuf::uint32 date_max_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 min_players_;
  ::google::protobuf::uint32 request_id_;
  bool tournament_games_only_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 league_id_;
  int skill_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestMatches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse_Series : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestMatchesResponse_Series();
  virtual ~CMsgDOTARequestMatchesResponse_Series();

  CMsgDOTARequestMatchesResponse_Series(const CMsgDOTARequestMatchesResponse_Series& from);

  inline CMsgDOTARequestMatchesResponse_Series& operator=(const CMsgDOTARequestMatchesResponse_Series& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatchesResponse_Series& default_instance();

  void Swap(CMsgDOTARequestMatchesResponse_Series* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestMatchesResponse_Series* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatch matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAMatch& matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_matches(int index);
  inline ::CMsgDOTAMatch* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_matches();

  // optional uint32 series_id = 2;
  inline bool has_series_id() const;
  inline void clear_series_id();
  static const int kSeriesIdFieldNumber = 2;
  inline ::google::protobuf::uint32 series_id() const;
  inline void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 series_type = 3;
  inline bool has_series_type() const;
  inline void clear_series_type();
  static const int kSeriesTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 series_type() const;
  inline void set_series_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestMatchesResponse.Series)
 private:
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_series_type();
  inline void clear_has_series_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > matches_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 series_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestMatchesResponse_Series* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestMatchesResponse();
  virtual ~CMsgDOTARequestMatchesResponse();

  CMsgDOTARequestMatchesResponse(const CMsgDOTARequestMatchesResponse& from);

  inline CMsgDOTARequestMatchesResponse& operator=(const CMsgDOTARequestMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatchesResponse& default_instance();

  void Swap(CMsgDOTARequestMatchesResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestMatchesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestMatchesResponse& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatchesResponse_Series Series;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAMatch matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAMatch& matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_matches(int index);
  inline ::CMsgDOTAMatch* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_matches();

  // repeated .CMsgDOTARequestMatchesResponse.Series series = 2;
  inline int series_size() const;
  inline void clear_series();
  static const int kSeriesFieldNumber = 2;
  inline const ::CMsgDOTARequestMatchesResponse_Series& series(int index) const;
  inline ::CMsgDOTARequestMatchesResponse_Series* mutable_series(int index);
  inline ::CMsgDOTARequestMatchesResponse_Series* add_series();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >&
      series() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >*
      mutable_series();

  // optional uint32 request_id = 3;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // optional uint32 total_results = 4;
  inline bool has_total_results() const;
  inline void clear_total_results();
  static const int kTotalResultsFieldNumber = 4;
  inline ::google::protobuf::uint32 total_results() const;
  inline void set_total_results(::google::protobuf::uint32 value);

  // optional uint32 results_remaining = 5;
  inline bool has_results_remaining() const;
  inline void clear_results_remaining();
  static const int kResultsRemainingFieldNumber = 5;
  inline ::google::protobuf::uint32 results_remaining() const;
  inline void set_results_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestMatchesResponse)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_total_results();
  inline void clear_has_total_results();
  inline void set_has_results_remaining();
  inline void clear_has_results_remaining();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > matches_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series > series_;
  ::google::protobuf::uint32 request_id_;
  ::google::protobuf::uint32 total_results_;
  ::google::protobuf::uint32 results_remaining_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestMatchesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPopup : public ::google::protobuf::Message {
 public:
  CMsgDOTAPopup();
  virtual ~CMsgDOTAPopup();

  CMsgDOTAPopup(const CMsgDOTAPopup& from);

  inline CMsgDOTAPopup& operator=(const CMsgDOTAPopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPopup& default_instance();

  void Swap(CMsgDOTAPopup* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPopup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPopup& from);
  void MergeFrom(const CMsgDOTAPopup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPopup_PopupID PopupID;
  static const PopupID KICKED_FROM_LOBBY = CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY;
  static const PopupID KICKED_FROM_PARTY = CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY;
  static const PopupID KICKED_FROM_TEAM = CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM;
  static const PopupID TEAM_WAS_DISBANDED = CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED;
  static const PopupID TEAM_MATCHMAKE_ALREADY_MATCH = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH;
  static const PopupID TEAM_MATCHMAKE_ALREADY_FINDING = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING;
  static const PopupID TEAM_MATCHMAKE_FULL = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD_CURRENT = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT;
  static const PopupID TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER;
  static const PopupID TEAM_MATCHMAKE_ALREADY_GAME = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME;
  static const PopupID TEAM_MATCHMAKE_FAIL_GET_PARTY = CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY;
  static const PopupID MATCHMAKING_DISABLED = CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED;
  static const PopupID INVITE_DENIED = CMsgDOTAPopup_PopupID_INVITE_DENIED;
  static const PopupID PARTY_FULL = CMsgDOTAPopup_PopupID_PARTY_FULL;
  static const PopupID MADE_ADMIN = CMsgDOTAPopup_PopupID_MADE_ADMIN;
  static const PopupID NEED_TO_PURCHASE = CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE;
  static const PopupID SIGNON_MESSAGE = CMsgDOTAPopup_PopupID_SIGNON_MESSAGE;
  static const PopupID GUILD_KICKED = CMsgDOTAPopup_PopupID_GUILD_KICKED;
  static const PopupID MATCHMAKING_REGION_OFFLINE = CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE;
  static const PopupID TOO_MANY_MATCHGROUPS = CMsgDOTAPopup_PopupID_TOO_MANY_MATCHGROUPS;
  static const PopupID TOURNAMENT_GAME_NOT_FOUND = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND;
  static const PopupID TOURNAMENT_GAME_HAS_LOBBY_ID = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID;
  static const PopupID TOURNAMENT_GAME_HAS_MATCH_ID = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID;
  static const PopupID TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM;
  static const PopupID TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM;
  static const PopupID TOURNAMENT_GAME_SQL_UPDATE_FAILED = CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED;
  static const PopupID NOT_LEAGUE_ADMIN = CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN;
  static const PopupID PARTY_NOT_VALID_TO_MM = CMsgDOTAPopup_PopupID_PARTY_NOT_VALID_TO_MM;
  static const PopupID PARTY_NOT_VALID_TO_MM_COACHCOUNT = CMsgDOTAPopup_PopupID_PARTY_NOT_VALID_TO_MM_COACHCOUNT;
  static const PopupID PARTY_MEMBER_IN_ANOTHER_GAME = CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME;
  static const PopupID PARTY_MEMBER_IN_LOW_PRIORITY = CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY;
  static const PopupID CLIENT_OUT_OF_DATE = CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE;
  static const PopupID COMPETITIVE_MM_NO_COACHES = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NO_COACHES;
  static const PopupID COMPETITIVE_MM_NO_LOW_PRIORITY = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NO_LOW_PRIORITY;
  static const PopupID COMPETITIVE_MM_NOT_UNLOCKED = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_UNLOCKED;
  static const PopupID COMPETITIVE_MM_GAME_MODE_NOT_ALLOWED = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_GAME_MODE_NOT_ALLOWED;
  static const PopupID GAME_MODE_NOT_UNLOCKED = CMsgDOTAPopup_PopupID_GAME_MODE_NOT_UNLOCKED;
  static const PopupID SAVE_GAME_CORRUPT = CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT;
  static const PopupID INSUFFICIENT_INGOTS = CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS;
  static const PopupID COMPETITIVE_MM_NO_4STACKS = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NO_4STACKS;
  static const PopupID COMPETITIVE_MM_PARTY_MMR_SPREAD_TOO_LARGE = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_PARTY_MMR_SPREAD_TOO_LARGE;
  static const PopupID COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL;
  static const PopupID COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_IN_PARTY = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_IN_PARTY;
  static const PopupID PARTY_LEADER_JOINED_LOBBY = CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY;
  static const PopupID MM_1V1_NO_PARTIES = CMsgDOTAPopup_PopupID_MM_1V1_NO_PARTIES;
  static const PopupID MM_1V1_NO_LOW_PRIORITY = CMsgDOTAPopup_PopupID_MM_1V1_NO_LOW_PRIORITY;
  static const PopupID WEEKEND_TOURNEY_REGISTRATION_NOT_OPEN = CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_REGISTRATION_NOT_OPEN;
  static const PopupID WEEKEND_TOURNEY_UNMATCHED = CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED;
  static const PopupID POST_MATCH_SURVEY = CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY;
  static const PopupID TROPHY_AWARDED = CMsgDOTAPopup_PopupID_TROPHY_AWARDED;
  static const PopupID TROPHY_LEVEL_UP = CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP;
  static const PopupID ALL_HERO_CHALLENGE_PROGRESS = CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS;
  static const PopupID NEED_INITIAL_SKILL = CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL;
  static const PopupID NEED_INITIAL_SKILL_IN_PARTY = CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY;
  static const PopupID TARGET_ENGINE_MISMATCH = CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH;
  static const PopupID VAC_NOT_VERIFIED = CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED;
  static const PopupID KICKED_FROM_QUEUE_EVENT_STARTING = CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING;
  static const PopupID KICKED_FROM_QUEUE_EVENT_ENDING = CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING;
  static const PopupID EVENT_NO_LOW_PRIORITY = CMsgDOTAPopup_PopupID_EVENT_NO_LOW_PRIORITY;
  static const PopupID MM_LOW_PRI_ONLY_CASUAL_AR = CMsgDOTAPopup_PopupID_MM_LOW_PRI_ONLY_CASUAL_AR;
  static const PopupID CNY2015_ONCE_PER_ROUND = CMsgDOTAPopup_PopupID_CNY2015_ONCE_PER_ROUND;
  static const PopupID LOBBY_FULL = CMsgDOTAPopup_PopupID_LOBBY_FULL;
  static const PopupID TI2015_POINTS_EARNED = CMsgDOTAPopup_PopupID_TI2015_POINTS_EARNED;
  static const PopupID CUSTOM_GAME_INCORRECT_VERSION = CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION;
  static const PopupID COMPETITIVE_MM_MMR_TOO_HIGH_S2 = CMsgDOTAPopup_PopupID_COMPETITIVE_MM_MMR_TOO_HIGH_S2;
  static const PopupID LIMITED_USER_CHAT = CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT;
  static inline bool PopupID_IsValid(int value) {
    return CMsgDOTAPopup_PopupID_IsValid(value);
  }
  static const PopupID PopupID_MIN =
    CMsgDOTAPopup_PopupID_PopupID_MIN;
  static const PopupID PopupID_MAX =
    CMsgDOTAPopup_PopupID_PopupID_MAX;
  static const int PopupID_ARRAYSIZE =
    CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PopupID_descriptor() {
    return CMsgDOTAPopup_PopupID_descriptor();
  }
  static inline const ::std::string& PopupID_Name(PopupID value) {
    return CMsgDOTAPopup_PopupID_Name(value);
  }
  static inline bool PopupID_Parse(const ::std::string& name,
      PopupID* value) {
    return CMsgDOTAPopup_PopupID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAPopup.PopupID id = 1 [default = KICKED_FROM_LOBBY];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::CMsgDOTAPopup_PopupID id() const;
  inline void set_id(::CMsgDOTAPopup_PopupID value);

  // optional string custom_text = 2;
  inline bool has_custom_text() const;
  inline void clear_custom_text();
  static const int kCustomTextFieldNumber = 2;
  inline const ::std::string& custom_text() const;
  inline void set_custom_text(const ::std::string& value);
  inline void set_custom_text(const char* value);
  inline void set_custom_text(const char* value, size_t size);
  inline ::std::string* mutable_custom_text();
  inline ::std::string* release_custom_text();
  inline void set_allocated_custom_text(::std::string* custom_text);

  // optional sint32 int_data = 3;
  inline bool has_int_data() const;
  inline void clear_int_data();
  static const int kIntDataFieldNumber = 3;
  inline ::google::protobuf::int32 int_data() const;
  inline void set_int_data(::google::protobuf::int32 value);

  // optional bytes popup_data = 4;
  inline bool has_popup_data() const;
  inline void clear_popup_data();
  static const int kPopupDataFieldNumber = 4;
  inline const ::std::string& popup_data() const;
  inline void set_popup_data(const ::std::string& value);
  inline void set_popup_data(const char* value);
  inline void set_popup_data(const void* value, size_t size);
  inline ::std::string* mutable_popup_data();
  inline ::std::string* release_popup_data();
  inline void set_allocated_popup_data(::std::string* popup_data);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPopup)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_custom_text();
  inline void clear_has_custom_text();
  inline void set_has_int_data();
  inline void clear_has_int_data();
  inline void set_has_popup_data();
  inline void clear_has_popup_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* custom_text_;
  int id_;
  ::google::protobuf::int32 int_data_;
  ::std::string* popup_data_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPopup* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamMemberSDO : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamMemberSDO();
  virtual ~CMsgDOTATeamMemberSDO();

  CMsgDOTATeamMemberSDO(const CMsgDOTATeamMemberSDO& from);

  inline CMsgDOTATeamMemberSDO& operator=(const CMsgDOTATeamMemberSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamMemberSDO& default_instance();

  void Swap(CMsgDOTATeamMemberSDO* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamMemberSDO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamMemberSDO& from);
  void MergeFrom(const CMsgDOTATeamMemberSDO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated uint32 team_ids = 2;
  inline int team_ids_size() const;
  inline void clear_team_ids();
  static const int kTeamIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 team_ids(int index) const;
  inline void set_team_ids(int index, ::google::protobuf::uint32 value);
  inline void add_team_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      team_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_team_ids();

  // optional uint32 profile_team_id = 3;
  inline bool has_profile_team_id() const;
  inline void clear_profile_team_id();
  static const int kProfileTeamIdFieldNumber = 3;
  inline ::google::protobuf::uint32 profile_team_id() const;
  inline void set_profile_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamMemberSDO)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_profile_team_id();
  inline void clear_has_profile_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > team_ids_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 profile_team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamMemberSDO* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamAdminSDO : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamAdminSDO();
  virtual ~CMsgDOTATeamAdminSDO();

  CMsgDOTATeamAdminSDO(const CMsgDOTATeamAdminSDO& from);

  inline CMsgDOTATeamAdminSDO& operator=(const CMsgDOTATeamAdminSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamAdminSDO& default_instance();

  void Swap(CMsgDOTATeamAdminSDO* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamAdminSDO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamAdminSDO& from);
  void MergeFrom(const CMsgDOTATeamAdminSDO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated uint32 team_ids = 2;
  inline int team_ids_size() const;
  inline void clear_team_ids();
  static const int kTeamIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 team_ids(int index) const;
  inline void set_team_ids(int index, ::google::protobuf::uint32 value);
  inline void add_team_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      team_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_team_ids();

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamAdminSDO)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > team_ids_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamAdminSDO* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamMember : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamMember();
  virtual ~CMsgDOTATeamMember();

  CMsgDOTATeamMember(const CMsgDOTATeamMember& from);

  inline CMsgDOTATeamMember& operator=(const CMsgDOTATeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamMember& default_instance();

  void Swap(CMsgDOTATeamMember* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamMember& from);
  void MergeFrom(const CMsgDOTATeamMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 time_joined = 4;
  inline bool has_time_joined() const;
  inline void clear_time_joined();
  static const int kTimeJoinedFieldNumber = 4;
  inline ::google::protobuf::uint32 time_joined() const;
  inline void set_time_joined(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamMember)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_time_joined();
  inline void clear_has_time_joined();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 time_joined_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeam : public ::google::protobuf::Message {
 public:
  CMsgDOTATeam();
  virtual ~CMsgDOTATeam();

  CMsgDOTATeam(const CMsgDOTATeam& from);

  inline CMsgDOTATeam& operator=(const CMsgDOTATeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeam& default_instance();

  void Swap(CMsgDOTATeam* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeam& from);
  void MergeFrom(const CMsgDOTATeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTATeamMember members = 1;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 1;
  inline const ::CMsgDOTATeamMember& members(int index) const;
  inline ::CMsgDOTATeamMember* mutable_members(int index);
  inline ::CMsgDOTATeamMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamMember >*
      mutable_members();

  // optional uint32 team_id = 2;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string tag = 4;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 4;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // optional uint32 admin_id = 5;
  inline bool has_admin_id() const;
  inline void clear_admin_id();
  static const int kAdminIdFieldNumber = 5;
  inline ::google::protobuf::uint32 admin_id() const;
  inline void set_admin_id(::google::protobuf::uint32 value);

  // optional uint32 time_created = 6;
  inline bool has_time_created() const;
  inline void clear_time_created();
  static const int kTimeCreatedFieldNumber = 6;
  inline ::google::protobuf::uint32 time_created() const;
  inline void set_time_created(::google::protobuf::uint32 value);

  // optional bool disbanded = 7;
  inline bool has_disbanded() const;
  inline void clear_disbanded();
  static const int kDisbandedFieldNumber = 7;
  inline bool disbanded() const;
  inline void set_disbanded(bool value);

  // optional uint32 wins = 8;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 8;
  inline ::google::protobuf::uint32 wins() const;
  inline void set_wins(::google::protobuf::uint32 value);

  // optional uint32 losses = 9;
  inline bool has_losses() const;
  inline void clear_losses();
  static const int kLossesFieldNumber = 9;
  inline ::google::protobuf::uint32 losses() const;
  inline void set_losses(::google::protobuf::uint32 value);

  // optional uint32 rank = 10;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 10;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 calibration_games_remaining = 24;
  inline bool has_calibration_games_remaining() const;
  inline void clear_calibration_games_remaining();
  static const int kCalibrationGamesRemainingFieldNumber = 24;
  inline ::google::protobuf::uint32 calibration_games_remaining() const;
  inline void set_calibration_games_remaining(::google::protobuf::uint32 value);

  // optional uint64 logo = 11;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 11;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint64 base_logo = 12;
  inline bool has_base_logo() const;
  inline void clear_base_logo();
  static const int kBaseLogoFieldNumber = 12;
  inline ::google::protobuf::uint64 base_logo() const;
  inline void set_base_logo(::google::protobuf::uint64 value);

  // optional uint64 banner_logo = 13;
  inline bool has_banner_logo() const;
  inline void clear_banner_logo();
  static const int kBannerLogoFieldNumber = 13;
  inline ::google::protobuf::uint64 banner_logo() const;
  inline void set_banner_logo(::google::protobuf::uint64 value);

  // optional uint64 sponsor_logo = 14;
  inline bool has_sponsor_logo() const;
  inline void clear_sponsor_logo();
  static const int kSponsorLogoFieldNumber = 14;
  inline ::google::protobuf::uint64 sponsor_logo() const;
  inline void set_sponsor_logo(::google::protobuf::uint64 value);

  // optional string country_code = 15;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 15;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string url = 16;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 16;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional uint32 fullgamesplayed = 17;
  inline bool has_fullgamesplayed() const;
  inline void clear_fullgamesplayed();
  static const int kFullgamesplayedFieldNumber = 17;
  inline ::google::protobuf::uint32 fullgamesplayed() const;
  inline void set_fullgamesplayed(::google::protobuf::uint32 value);

  // repeated uint32 leagues = 18;
  inline int leagues_size() const;
  inline void clear_leagues();
  static const int kLeaguesFieldNumber = 18;
  inline ::google::protobuf::uint32 leagues(int index) const;
  inline void set_leagues(int index, ::google::protobuf::uint32 value);
  inline void add_leagues(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      leagues() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_leagues();

  // optional uint32 gamesplayed = 19;
  inline bool has_gamesplayed() const;
  inline void clear_gamesplayed();
  static const int kGamesplayedFieldNumber = 19;
  inline ::google::protobuf::uint32 gamesplayed() const;
  inline void set_gamesplayed(::google::protobuf::uint32 value);

  // optional uint32 gamesplayedwithcurrentroster = 20;
  inline bool has_gamesplayedwithcurrentroster() const;
  inline void clear_gamesplayedwithcurrentroster();
  static const int kGamesplayedwithcurrentrosterFieldNumber = 20;
  inline ::google::protobuf::uint32 gamesplayedwithcurrentroster() const;
  inline void set_gamesplayedwithcurrentroster(::google::protobuf::uint32 value);

  // optional uint32 teammatchmakinggamesplayed = 21;
  inline bool has_teammatchmakinggamesplayed() const;
  inline void clear_teammatchmakinggamesplayed();
  static const int kTeammatchmakinggamesplayedFieldNumber = 21;
  inline ::google::protobuf::uint32 teammatchmakinggamesplayed() const;
  inline void set_teammatchmakinggamesplayed(::google::protobuf::uint32 value);

  // optional uint32 lastplayedgametime = 22;
  inline bool has_lastplayedgametime() const;
  inline void clear_lastplayedgametime();
  static const int kLastplayedgametimeFieldNumber = 22;
  inline ::google::protobuf::uint32 lastplayedgametime() const;
  inline void set_lastplayedgametime(::google::protobuf::uint32 value);

  // optional uint32 lastrenametime = 23;
  inline bool has_lastrenametime() const;
  inline void clear_lastrenametime();
  static const int kLastrenametimeFieldNumber = 23;
  inline ::google::protobuf::uint32 lastrenametime() const;
  inline void set_lastrenametime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeam)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_admin_id();
  inline void clear_has_admin_id();
  inline void set_has_time_created();
  inline void clear_has_time_created();
  inline void set_has_disbanded();
  inline void clear_has_disbanded();
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_losses();
  inline void clear_has_losses();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_calibration_games_remaining();
  inline void clear_has_calibration_games_remaining();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_base_logo();
  inline void clear_has_base_logo();
  inline void set_has_banner_logo();
  inline void clear_has_banner_logo();
  inline void set_has_sponsor_logo();
  inline void clear_has_sponsor_logo();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_fullgamesplayed();
  inline void clear_has_fullgamesplayed();
  inline void set_has_gamesplayed();
  inline void clear_has_gamesplayed();
  inline void set_has_gamesplayedwithcurrentroster();
  inline void clear_has_gamesplayedwithcurrentroster();
  inline void set_has_teammatchmakinggamesplayed();
  inline void clear_has_teammatchmakinggamesplayed();
  inline void set_has_lastplayedgametime();
  inline void clear_has_lastplayedgametime();
  inline void set_has_lastrenametime();
  inline void clear_has_lastrenametime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamMember > members_;
  ::std::string* name_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 admin_id_;
  ::std::string* tag_;
  ::google::protobuf::uint32 time_created_;
  bool disbanded_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 losses_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 calibration_games_remaining_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint64 base_logo_;
  ::google::protobuf::uint64 banner_logo_;
  ::google::protobuf::uint64 sponsor_logo_;
  ::std::string* country_code_;
  ::std::string* url_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > leagues_;
  ::google::protobuf::uint32 fullgamesplayed_;
  ::google::protobuf::uint32 gamesplayed_;
  ::google::protobuf::uint32 gamesplayedwithcurrentroster_;
  ::google::protobuf::uint32 teammatchmakinggamesplayed_;
  ::google::protobuf::uint32 lastplayedgametime_;
  ::google::protobuf::uint32 lastrenametime_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACreateTeam : public ::google::protobuf::Message {
 public:
  CMsgDOTACreateTeam();
  virtual ~CMsgDOTACreateTeam();

  CMsgDOTACreateTeam(const CMsgDOTACreateTeam& from);

  inline CMsgDOTACreateTeam& operator=(const CMsgDOTACreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACreateTeam& default_instance();

  void Swap(CMsgDOTACreateTeam* other);

  // implements Message ----------------------------------------------

  CMsgDOTACreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACreateTeam& from);
  void MergeFrom(const CMsgDOTACreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string tag = 2;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // optional uint64 logo = 3;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 3;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint64 base_logo = 4;
  inline bool has_base_logo() const;
  inline void clear_base_logo();
  static const int kBaseLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 base_logo() const;
  inline void set_base_logo(::google::protobuf::uint64 value);

  // optional uint64 banner_logo = 5;
  inline bool has_banner_logo() const;
  inline void clear_banner_logo();
  static const int kBannerLogoFieldNumber = 5;
  inline ::google::protobuf::uint64 banner_logo() const;
  inline void set_banner_logo(::google::protobuf::uint64 value);

  // optional uint64 sponsor_logo = 6;
  inline bool has_sponsor_logo() const;
  inline void clear_sponsor_logo();
  static const int kSponsorLogoFieldNumber = 6;
  inline ::google::protobuf::uint64 sponsor_logo() const;
  inline void set_sponsor_logo(::google::protobuf::uint64 value);

  // optional string country_code = 7;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 7;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string url = 8;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 8;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:CMsgDOTACreateTeam)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_base_logo();
  inline void clear_has_base_logo();
  inline void set_has_banner_logo();
  inline void clear_has_banner_logo();
  inline void set_has_sponsor_logo();
  inline void clear_has_sponsor_logo();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* tag_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint64 base_logo_;
  ::google::protobuf::uint64 banner_logo_;
  ::google::protobuf::uint64 sponsor_logo_;
  ::std::string* country_code_;
  ::std::string* url_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACreateTeamResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTACreateTeamResponse();
  virtual ~CMsgDOTACreateTeamResponse();

  CMsgDOTACreateTeamResponse(const CMsgDOTACreateTeamResponse& from);

  inline CMsgDOTACreateTeamResponse& operator=(const CMsgDOTACreateTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACreateTeamResponse& default_instance();

  void Swap(CMsgDOTACreateTeamResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTACreateTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACreateTeamResponse& from);
  void MergeFrom(const CMsgDOTACreateTeamResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTACreateTeamResponse_Result Result;
  static const Result INVALID = CMsgDOTACreateTeamResponse_Result_INVALID;
  static const Result SUCCESS = CMsgDOTACreateTeamResponse_Result_SUCCESS;
  static const Result NAME_EMPTY = CMsgDOTACreateTeamResponse_Result_NAME_EMPTY;
  static const Result NAME_BAD_CHARACTERS = CMsgDOTACreateTeamResponse_Result_NAME_BAD_CHARACTERS;
  static const Result NAME_TAKEN = CMsgDOTACreateTeamResponse_Result_NAME_TAKEN;
  static const Result NAME_TOO_LONG = CMsgDOTACreateTeamResponse_Result_NAME_TOO_LONG;
  static const Result TAG_EMPTY = CMsgDOTACreateTeamResponse_Result_TAG_EMPTY;
  static const Result TAG_BAD_CHARACTERS = CMsgDOTACreateTeamResponse_Result_TAG_BAD_CHARACTERS;
  static const Result TAG_TAKEN = CMsgDOTACreateTeamResponse_Result_TAG_TAKEN;
  static const Result TAG_TOO_LONG = CMsgDOTACreateTeamResponse_Result_TAG_TOO_LONG;
  static const Result CREATOR_BUSY = CMsgDOTACreateTeamResponse_Result_CREATOR_BUSY;
  static const Result UNSPECIFIED_ERROR = CMsgDOTACreateTeamResponse_Result_UNSPECIFIED_ERROR;
  static const Result CREATOR_TEAM_LIMIT_REACHED = CMsgDOTACreateTeamResponse_Result_CREATOR_TEAM_LIMIT_REACHED;
  static const Result NO_LOGO = CMsgDOTACreateTeamResponse_Result_NO_LOGO;
  static const Result CREATOR_TEAM_CREATION_COOLDOWN = CMsgDOTACreateTeamResponse_Result_CREATOR_TEAM_CREATION_COOLDOWN;
  static const Result LOGO_UPLOAD_FAILED = CMsgDOTACreateTeamResponse_Result_LOGO_UPLOAD_FAILED;
  static const Result NAME_CHANGED_TOO_RECENTLY = CMsgDOTACreateTeamResponse_Result_NAME_CHANGED_TOO_RECENTLY;
  static const Result CREATOR_INSUFFICIENT_LEVEL = CMsgDOTACreateTeamResponse_Result_CREATOR_INSUFFICIENT_LEVEL;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTACreateTeamResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTACreateTeamResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTACreateTeamResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTACreateTeamResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTACreateTeamResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTACreateTeamResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTACreateTeamResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTACreateTeamResponse.Result results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline ::CMsgDOTACreateTeamResponse_Result results(int index) const;
  inline void set_results(int index, ::CMsgDOTACreateTeamResponse_Result value);
  inline void add_results(::CMsgDOTACreateTeamResponse_Result value);
  inline const ::google::protobuf::RepeatedField<int>& results() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_results();

  // optional uint32 team_id = 2;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 seconds_remaining = 3;
  inline bool has_seconds_remaining() const;
  inline void clear_seconds_remaining();
  static const int kSecondsRemainingFieldNumber = 3;
  inline ::google::protobuf::uint32 seconds_remaining() const;
  inline void set_seconds_remaining(::google::protobuf::uint32 value);

  // optional uint32 required_level = 4;
  inline bool has_required_level() const;
  inline void clear_required_level();
  static const int kRequiredLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 required_level() const;
  inline void set_required_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACreateTeamResponse)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_seconds_remaining();
  inline void clear_has_seconds_remaining();
  inline void set_has_required_level();
  inline void clear_has_required_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> results_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 seconds_remaining_;
  ::google::protobuf::uint32 required_level_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACreateTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEditTeam : public ::google::protobuf::Message {
 public:
  CMsgDOTAEditTeam();
  virtual ~CMsgDOTAEditTeam();

  CMsgDOTAEditTeam(const CMsgDOTAEditTeam& from);

  inline CMsgDOTAEditTeam& operator=(const CMsgDOTAEditTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEditTeam& default_instance();

  void Swap(CMsgDOTAEditTeam* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEditTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEditTeam& from);
  void MergeFrom(const CMsgDOTAEditTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string tag = 2;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // optional uint64 logo = 3;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 3;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint64 base_logo = 4;
  inline bool has_base_logo() const;
  inline void clear_base_logo();
  static const int kBaseLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 base_logo() const;
  inline void set_base_logo(::google::protobuf::uint64 value);

  // optional uint64 banner_logo = 5;
  inline bool has_banner_logo() const;
  inline void clear_banner_logo();
  static const int kBannerLogoFieldNumber = 5;
  inline ::google::protobuf::uint64 banner_logo() const;
  inline void set_banner_logo(::google::protobuf::uint64 value);

  // optional uint64 sponsor_logo = 6;
  inline bool has_sponsor_logo() const;
  inline void clear_sponsor_logo();
  static const int kSponsorLogoFieldNumber = 6;
  inline ::google::protobuf::uint64 sponsor_logo() const;
  inline void set_sponsor_logo(::google::protobuf::uint64 value);

  // optional string country_code = 7;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 7;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string url = 8;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 8;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional uint32 team_id = 9;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 9;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAEditTeam)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_base_logo();
  inline void clear_has_base_logo();
  inline void set_has_banner_logo();
  inline void clear_has_banner_logo();
  inline void set_has_sponsor_logo();
  inline void clear_has_sponsor_logo();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* tag_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint64 base_logo_;
  ::google::protobuf::uint64 banner_logo_;
  ::google::protobuf::uint64 sponsor_logo_;
  ::std::string* country_code_;
  ::std::string* url_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEditTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEditTeamLogo : public ::google::protobuf::Message {
 public:
  CMsgDOTAEditTeamLogo();
  virtual ~CMsgDOTAEditTeamLogo();

  CMsgDOTAEditTeamLogo(const CMsgDOTAEditTeamLogo& from);

  inline CMsgDOTAEditTeamLogo& operator=(const CMsgDOTAEditTeamLogo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEditTeamLogo& default_instance();

  void Swap(CMsgDOTAEditTeamLogo* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEditTeamLogo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEditTeamLogo& from);
  void MergeFrom(const CMsgDOTAEditTeamLogo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 logo = 1;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 1;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint64 base_logo = 2;
  inline bool has_base_logo() const;
  inline void clear_base_logo();
  static const int kBaseLogoFieldNumber = 2;
  inline ::google::protobuf::uint64 base_logo() const;
  inline void set_base_logo(::google::protobuf::uint64 value);

  // optional uint64 banner_logo = 3;
  inline bool has_banner_logo() const;
  inline void clear_banner_logo();
  static const int kBannerLogoFieldNumber = 3;
  inline ::google::protobuf::uint64 banner_logo() const;
  inline void set_banner_logo(::google::protobuf::uint64 value);

  // optional uint64 sponsor_logo = 4;
  inline bool has_sponsor_logo() const;
  inline void clear_sponsor_logo();
  static const int kSponsorLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 sponsor_logo() const;
  inline void set_sponsor_logo(::google::protobuf::uint64 value);

  // optional uint32 team_id = 5;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 5;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAEditTeamLogo)
 private:
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_base_logo();
  inline void clear_has_base_logo();
  inline void set_has_banner_logo();
  inline void clear_has_banner_logo();
  inline void set_has_sponsor_logo();
  inline void clear_has_sponsor_logo();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint64 base_logo_;
  ::google::protobuf::uint64 banner_logo_;
  ::google::protobuf::uint64 sponsor_logo_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEditTeamLogo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEditTeamLogoResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAEditTeamLogoResponse();
  virtual ~CMsgDOTAEditTeamLogoResponse();

  CMsgDOTAEditTeamLogoResponse(const CMsgDOTAEditTeamLogoResponse& from);

  inline CMsgDOTAEditTeamLogoResponse& operator=(const CMsgDOTAEditTeamLogoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEditTeamLogoResponse& default_instance();

  void Swap(CMsgDOTAEditTeamLogoResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEditTeamLogoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEditTeamLogoResponse& from);
  void MergeFrom(const CMsgDOTAEditTeamLogoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAEditTeamLogoResponse_Result Result;
  static const Result INVALID = CMsgDOTAEditTeamLogoResponse_Result_INVALID;
  static const Result SUCCESS = CMsgDOTAEditTeamLogoResponse_Result_SUCCESS;
  static const Result CREATOR_BUSY = CMsgDOTAEditTeamLogoResponse_Result_CREATOR_BUSY;
  static const Result UNSPECIFIED_ERROR = CMsgDOTAEditTeamLogoResponse_Result_UNSPECIFIED_ERROR;
  static const Result NO_LOGO = CMsgDOTAEditTeamLogoResponse_Result_NO_LOGO;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAEditTeamLogoResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAEditTeamLogoResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAEditTeamLogoResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAEditTeamLogoResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAEditTeamLogoResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAEditTeamLogoResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAEditTeamLogoResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAEditTeamLogoResponse.Result results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline ::CMsgDOTAEditTeamLogoResponse_Result results(int index) const;
  inline void set_results(int index, ::CMsgDOTAEditTeamLogoResponse_Result value);
  inline void add_results(::CMsgDOTAEditTeamLogoResponse_Result value);
  inline const ::google::protobuf::RepeatedField<int>& results() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_results();

  // @@protoc_insertion_point(class_scope:CMsgDOTAEditTeamLogoResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> results_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEditTeamLogoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEditTeamDetails : public ::google::protobuf::Message {
 public:
  CMsgDOTAEditTeamDetails();
  virtual ~CMsgDOTAEditTeamDetails();

  CMsgDOTAEditTeamDetails(const CMsgDOTAEditTeamDetails& from);

  inline CMsgDOTAEditTeamDetails& operator=(const CMsgDOTAEditTeamDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEditTeamDetails& default_instance();

  void Swap(CMsgDOTAEditTeamDetails* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEditTeamDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEditTeamDetails& from);
  void MergeFrom(const CMsgDOTAEditTeamDetails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string country_code = 1;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 1;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional uint32 team_id = 3;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 3;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAEditTeamDetails)
 private:
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* country_code_;
  ::std::string* url_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEditTeamDetails* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEditTeamDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAEditTeamDetailsResponse();
  virtual ~CMsgDOTAEditTeamDetailsResponse();

  CMsgDOTAEditTeamDetailsResponse(const CMsgDOTAEditTeamDetailsResponse& from);

  inline CMsgDOTAEditTeamDetailsResponse& operator=(const CMsgDOTAEditTeamDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEditTeamDetailsResponse& default_instance();

  void Swap(CMsgDOTAEditTeamDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEditTeamDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEditTeamDetailsResponse& from);
  void MergeFrom(const CMsgDOTAEditTeamDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAEditTeamDetailsResponse_Result Result;
  static const Result INVALID = CMsgDOTAEditTeamDetailsResponse_Result_INVALID;
  static const Result SUCCESS = CMsgDOTAEditTeamDetailsResponse_Result_SUCCESS;
  static const Result CREATOR_BUSY = CMsgDOTAEditTeamDetailsResponse_Result_CREATOR_BUSY;
  static const Result UNSPECIFIED_ERROR = CMsgDOTAEditTeamDetailsResponse_Result_UNSPECIFIED_ERROR;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAEditTeamDetailsResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAEditTeamDetailsResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAEditTeamDetailsResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAEditTeamDetailsResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAEditTeamDetailsResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAEditTeamDetailsResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAEditTeamDetailsResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAEditTeamDetailsResponse.Result results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline ::CMsgDOTAEditTeamDetailsResponse_Result results(int index) const;
  inline void set_results(int index, ::CMsgDOTAEditTeamDetailsResponse_Result value);
  inline void add_results(::CMsgDOTAEditTeamDetailsResponse_Result value);
  inline const ::google::protobuf::RepeatedField<int>& results() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_results();

  // @@protoc_insertion_point(class_scope:CMsgDOTAEditTeamDetailsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> results_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEditTeamDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTADisbandTeam : public ::google::protobuf::Message {
 public:
  CMsgDOTADisbandTeam();
  virtual ~CMsgDOTADisbandTeam();

  CMsgDOTADisbandTeam(const CMsgDOTADisbandTeam& from);

  inline CMsgDOTADisbandTeam& operator=(const CMsgDOTADisbandTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTADisbandTeam& default_instance();

  void Swap(CMsgDOTADisbandTeam* other);

  // implements Message ----------------------------------------------

  CMsgDOTADisbandTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTADisbandTeam& from);
  void MergeFrom(const CMsgDOTADisbandTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTADisbandTeam)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTADisbandTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTADisbandTeamResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTADisbandTeamResponse();
  virtual ~CMsgDOTADisbandTeamResponse();

  CMsgDOTADisbandTeamResponse(const CMsgDOTADisbandTeamResponse& from);

  inline CMsgDOTADisbandTeamResponse& operator=(const CMsgDOTADisbandTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTADisbandTeamResponse& default_instance();

  void Swap(CMsgDOTADisbandTeamResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTADisbandTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTADisbandTeamResponse& from);
  void MergeFrom(const CMsgDOTADisbandTeamResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTADisbandTeamResponse_Result Result;
  static const Result SUCCESS = CMsgDOTADisbandTeamResponse_Result_SUCCESS;
  static const Result FAILURE = CMsgDOTADisbandTeamResponse_Result_FAILURE;
  static const Result FAILURE_NOT_EMPTY = CMsgDOTADisbandTeamResponse_Result_FAILURE_NOT_EMPTY;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTADisbandTeamResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTADisbandTeamResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTADisbandTeamResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTADisbandTeamResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTADisbandTeamResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTADisbandTeamResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTADisbandTeamResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTADisbandTeamResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTADisbandTeamResponse_Result result() const;
  inline void set_result(::CMsgDOTADisbandTeamResponse_Result value);

  // optional string team_name = 2;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTADisbandTeamResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team_name();
  inline void clear_has_team_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* team_name_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTADisbandTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestTeamData : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestTeamData();
  virtual ~CMsgDOTARequestTeamData();

  CMsgDOTARequestTeamData(const CMsgDOTARequestTeamData& from);

  inline CMsgDOTARequestTeamData& operator=(const CMsgDOTARequestTeamData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestTeamData& default_instance();

  void Swap(CMsgDOTARequestTeamData* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestTeamData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestTeamData& from);
  void MergeFrom(const CMsgDOTARequestTeamData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestTeamData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestTeamData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestTeamDataResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestTeamDataResponse();
  virtual ~CMsgDOTARequestTeamDataResponse();

  CMsgDOTARequestTeamDataResponse(const CMsgDOTARequestTeamDataResponse& from);

  inline CMsgDOTARequestTeamDataResponse& operator=(const CMsgDOTARequestTeamDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestTeamDataResponse& default_instance();

  void Swap(CMsgDOTARequestTeamDataResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestTeamDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestTeamDataResponse& from);
  void MergeFrom(const CMsgDOTARequestTeamDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestTeamDataResponse_Result Result;
  static const Result SUCCESS = CMsgDOTARequestTeamDataResponse_Result_SUCCESS;
  static const Result FAILURE = CMsgDOTARequestTeamDataResponse_Result_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTARequestTeamDataResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTARequestTeamDataResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTARequestTeamDataResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTARequestTeamDataResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTARequestTeamDataResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTARequestTeamDataResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTARequestTeamDataResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTARequestTeamDataResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTARequestTeamDataResponse_Result result() const;
  inline void set_result(::CMsgDOTARequestTeamDataResponse_Result value);

  // repeated .CMsgDOTATeamData data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::CMsgDOTATeamData& data(int index) const;
  inline ::CMsgDOTATeamData* mutable_data(int index);
  inline ::CMsgDOTATeamData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestTeamDataResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamData > data_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestTeamDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamData : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamData();
  virtual ~CMsgDOTATeamData();

  CMsgDOTATeamData(const CMsgDOTATeamData& from);

  inline CMsgDOTATeamData& operator=(const CMsgDOTATeamData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamData& default_instance();

  void Swap(CMsgDOTATeamData* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamData& from);
  void MergeFrom(const CMsgDOTATeamData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool on_team = 1;
  inline bool has_on_team() const;
  inline void clear_on_team();
  static const int kOnTeamFieldNumber = 1;
  inline bool on_team() const;
  inline void set_on_team(bool value);

  // optional bool profile_team = 2;
  inline bool has_profile_team() const;
  inline void clear_profile_team();
  static const int kProfileTeamFieldNumber = 2;
  inline bool profile_team() const;
  inline void set_profile_team(bool value);

  // optional .CMsgDOTATeam team = 3;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline const ::CMsgDOTATeam& team() const;
  inline ::CMsgDOTATeam* mutable_team();
  inline ::CMsgDOTATeam* release_team();
  inline void set_allocated_team(::CMsgDOTATeam* team);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamData)
 private:
  inline void set_has_on_team();
  inline void clear_has_on_team();
  inline void set_has_profile_team();
  inline void clear_has_profile_team();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTATeam* team_;
  bool on_team_;
  bool profile_team_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamProfileRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamProfileRequest();
  virtual ~CMsgDOTATeamProfileRequest();

  CMsgDOTATeamProfileRequest(const CMsgDOTATeamProfileRequest& from);

  inline CMsgDOTATeamProfileRequest& operator=(const CMsgDOTATeamProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamProfileRequest& default_instance();

  void Swap(CMsgDOTATeamProfileRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamProfileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamProfileRequest& from);
  void MergeFrom(const CMsgDOTATeamProfileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamProfileRequest)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamProfileRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamMemberProfileRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamMemberProfileRequest();
  virtual ~CMsgDOTATeamMemberProfileRequest();

  CMsgDOTATeamMemberProfileRequest(const CMsgDOTATeamMemberProfileRequest& from);

  inline CMsgDOTATeamMemberProfileRequest& operator=(const CMsgDOTATeamMemberProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamMemberProfileRequest& default_instance();

  void Swap(CMsgDOTATeamMemberProfileRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamMemberProfileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamMemberProfileRequest& from);
  void MergeFrom(const CMsgDOTATeamMemberProfileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamMemberProfileRequest)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamMemberProfileRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamIDByNameRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamIDByNameRequest();
  virtual ~CMsgDOTATeamIDByNameRequest();

  CMsgDOTATeamIDByNameRequest(const CMsgDOTATeamIDByNameRequest& from);

  inline CMsgDOTATeamIDByNameRequest& operator=(const CMsgDOTATeamIDByNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamIDByNameRequest& default_instance();

  void Swap(CMsgDOTATeamIDByNameRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamIDByNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamIDByNameRequest& from);
  void MergeFrom(const CMsgDOTATeamIDByNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamIDByNameRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamIDByNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamIDByNameResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamIDByNameResponse();
  virtual ~CMsgDOTATeamIDByNameResponse();

  CMsgDOTATeamIDByNameResponse(const CMsgDOTATeamIDByNameResponse& from);

  inline CMsgDOTATeamIDByNameResponse& operator=(const CMsgDOTATeamIDByNameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamIDByNameResponse& default_instance();

  void Swap(CMsgDOTATeamIDByNameResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamIDByNameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamIDByNameResponse& from);
  void MergeFrom(const CMsgDOTATeamIDByNameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 team_id = 2;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamIDByNameResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamIDByNameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamProfileResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamProfileResponse();
  virtual ~CMsgDOTATeamProfileResponse();

  CMsgDOTATeamProfileResponse(const CMsgDOTATeamProfileResponse& from);

  inline CMsgDOTATeamProfileResponse& operator=(const CMsgDOTATeamProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamProfileResponse& default_instance();

  void Swap(CMsgDOTATeamProfileResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamProfileResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamProfileResponse& from);
  void MergeFrom(const CMsgDOTATeamProfileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional .CMsgDOTATeam team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline const ::CMsgDOTATeam& team() const;
  inline ::CMsgDOTATeam* mutable_team();
  inline ::CMsgDOTATeam* release_team();
  inline void set_allocated_team(::CMsgDOTATeam* team);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamProfileResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTATeam* team_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamProfileResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProTeamListRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAProTeamListRequest();
  virtual ~CMsgDOTAProTeamListRequest();

  CMsgDOTAProTeamListRequest(const CMsgDOTAProTeamListRequest& from);

  inline CMsgDOTAProTeamListRequest& operator=(const CMsgDOTAProTeamListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProTeamListRequest& default_instance();

  void Swap(CMsgDOTAProTeamListRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProTeamListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProTeamListRequest& from);
  void MergeFrom(const CMsgDOTAProTeamListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAProTeamListRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProTeamListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProTeamListResponse_TeamEntry : public ::google::protobuf::Message {
 public:
  CMsgDOTAProTeamListResponse_TeamEntry();
  virtual ~CMsgDOTAProTeamListResponse_TeamEntry();

  CMsgDOTAProTeamListResponse_TeamEntry(const CMsgDOTAProTeamListResponse_TeamEntry& from);

  inline CMsgDOTAProTeamListResponse_TeamEntry& operator=(const CMsgDOTAProTeamListResponse_TeamEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProTeamListResponse_TeamEntry& default_instance();

  void Swap(CMsgDOTAProTeamListResponse_TeamEntry* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProTeamListResponse_TeamEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProTeamListResponse_TeamEntry& from);
  void MergeFrom(const CMsgDOTAProTeamListResponse_TeamEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string tag = 2;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // optional uint32 time_created = 3;
  inline bool has_time_created() const;
  inline void clear_time_created();
  static const int kTimeCreatedFieldNumber = 3;
  inline ::google::protobuf::uint32 time_created() const;
  inline void set_time_created(::google::protobuf::uint32 value);

  // optional uint64 logo = 4;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional string country_code = 5;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 5;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional uint32 member_count = 6;
  inline bool has_member_count() const;
  inline void clear_member_count();
  static const int kMemberCountFieldNumber = 6;
  inline ::google::protobuf::uint32 member_count() const;
  inline void set_member_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProTeamListResponse.TeamEntry)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_time_created();
  inline void clear_has_time_created();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_member_count();
  inline void clear_has_member_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tag_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 time_created_;
  ::google::protobuf::uint64 logo_;
  ::std::string* country_code_;
  ::google::protobuf::uint32 member_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProTeamListResponse_TeamEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProTeamListResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAProTeamListResponse();
  virtual ~CMsgDOTAProTeamListResponse();

  CMsgDOTAProTeamListResponse(const CMsgDOTAProTeamListResponse& from);

  inline CMsgDOTAProTeamListResponse& operator=(const CMsgDOTAProTeamListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProTeamListResponse& default_instance();

  void Swap(CMsgDOTAProTeamListResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProTeamListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProTeamListResponse& from);
  void MergeFrom(const CMsgDOTAProTeamListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAProTeamListResponse_TeamEntry TeamEntry;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAProTeamListResponse.TeamEntry teams = 1;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 1;
  inline const ::CMsgDOTAProTeamListResponse_TeamEntry& teams(int index) const;
  inline ::CMsgDOTAProTeamListResponse_TeamEntry* mutable_teams(int index);
  inline ::CMsgDOTAProTeamListResponse_TeamEntry* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProTeamListResponse_TeamEntry >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProTeamListResponse_TeamEntry >*
      mutable_teams();

  // optional uint32 eresult = 2;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProTeamListResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProTeamListResponse_TeamEntry > teams_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProTeamListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamInvite_InviterToGC : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamInvite_InviterToGC();
  virtual ~CMsgDOTATeamInvite_InviterToGC();

  CMsgDOTATeamInvite_InviterToGC(const CMsgDOTATeamInvite_InviterToGC& from);

  inline CMsgDOTATeamInvite_InviterToGC& operator=(const CMsgDOTATeamInvite_InviterToGC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamInvite_InviterToGC& default_instance();

  void Swap(CMsgDOTATeamInvite_InviterToGC* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamInvite_InviterToGC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamInvite_InviterToGC& from);
  void MergeFrom(const CMsgDOTATeamInvite_InviterToGC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 team_id = 2;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamInvite_InviterToGC)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamInvite_InviterToGC* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamInvite_GCImmediateResponseToInviter : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamInvite_GCImmediateResponseToInviter();
  virtual ~CMsgDOTATeamInvite_GCImmediateResponseToInviter();

  CMsgDOTATeamInvite_GCImmediateResponseToInviter(const CMsgDOTATeamInvite_GCImmediateResponseToInviter& from);

  inline CMsgDOTATeamInvite_GCImmediateResponseToInviter& operator=(const CMsgDOTATeamInvite_GCImmediateResponseToInviter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamInvite_GCImmediateResponseToInviter& default_instance();

  void Swap(CMsgDOTATeamInvite_GCImmediateResponseToInviter* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamInvite_GCImmediateResponseToInviter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamInvite_GCImmediateResponseToInviter& from);
  void MergeFrom(const CMsgDOTATeamInvite_GCImmediateResponseToInviter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result Result;
  static const Result SUCCESS = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_SUCCESS;
  static const Result MEMBER_LIMIT = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_MEMBER_LIMIT;
  static const Result INVITEE_NOT_AVAILABLE = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_NOT_AVAILABLE;
  static const Result INVITEE_BUSY = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_BUSY;
  static const Result INVITEE_ALREADY_ON_THE_TEAM = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_ALREADY_ON_THE_TEAM;
  static const Result INVITEE_ALREADY_ON_TOO_MANY_TEAMS = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_ALREADY_ON_TOO_MANY_TEAMS;
  static const Result UNSPECIFIED_ERROR = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_UNSPECIFIED_ERROR;
  static const Result INVITEE_INSUFFICIENT_LEVEL = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_INVITEE_INSUFFICIENT_LEVEL;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTATeamInvite_GCImmediateResponseToInviter.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result result() const;
  inline void set_result(::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result value);

  // optional string invitee_name = 2;
  inline bool has_invitee_name() const;
  inline void clear_invitee_name();
  static const int kInviteeNameFieldNumber = 2;
  inline const ::std::string& invitee_name() const;
  inline void set_invitee_name(const ::std::string& value);
  inline void set_invitee_name(const char* value);
  inline void set_invitee_name(const char* value, size_t size);
  inline ::std::string* mutable_invitee_name();
  inline ::std::string* release_invitee_name();
  inline void set_allocated_invitee_name(::std::string* invitee_name);

  // optional uint32 required_level = 3;
  inline bool has_required_level() const;
  inline void clear_required_level();
  static const int kRequiredLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 required_level() const;
  inline void set_required_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamInvite_GCImmediateResponseToInviter)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_invitee_name();
  inline void clear_has_invitee_name();
  inline void set_has_required_level();
  inline void clear_has_required_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* invitee_name_;
  int result_;
  ::google::protobuf::uint32 required_level_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamInvite_GCImmediateResponseToInviter* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamInvite_GCRequestToInvitee : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamInvite_GCRequestToInvitee();
  virtual ~CMsgDOTATeamInvite_GCRequestToInvitee();

  CMsgDOTATeamInvite_GCRequestToInvitee(const CMsgDOTATeamInvite_GCRequestToInvitee& from);

  inline CMsgDOTATeamInvite_GCRequestToInvitee& operator=(const CMsgDOTATeamInvite_GCRequestToInvitee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamInvite_GCRequestToInvitee& default_instance();

  void Swap(CMsgDOTATeamInvite_GCRequestToInvitee* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamInvite_GCRequestToInvitee* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamInvite_GCRequestToInvitee& from);
  void MergeFrom(const CMsgDOTATeamInvite_GCRequestToInvitee& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 inviter_account_id = 1;
  inline bool has_inviter_account_id() const;
  inline void clear_inviter_account_id();
  static const int kInviterAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 inviter_account_id() const;
  inline void set_inviter_account_id(::google::protobuf::uint32 value);

  // optional string team_name = 2;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional string team_tag = 3;
  inline bool has_team_tag() const;
  inline void clear_team_tag();
  static const int kTeamTagFieldNumber = 3;
  inline const ::std::string& team_tag() const;
  inline void set_team_tag(const ::std::string& value);
  inline void set_team_tag(const char* value);
  inline void set_team_tag(const char* value, size_t size);
  inline ::std::string* mutable_team_tag();
  inline ::std::string* release_team_tag();
  inline void set_allocated_team_tag(::std::string* team_tag);

  // optional uint64 logo = 4;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamInvite_GCRequestToInvitee)
 private:
  inline void set_has_inviter_account_id();
  inline void clear_has_inviter_account_id();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_team_tag();
  inline void clear_has_team_tag();
  inline void set_has_logo();
  inline void clear_has_logo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* team_name_;
  ::std::string* team_tag_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint32 inviter_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamInvite_GCRequestToInvitee* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamInvite_InviteeResponseToGC : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamInvite_InviteeResponseToGC();
  virtual ~CMsgDOTATeamInvite_InviteeResponseToGC();

  CMsgDOTATeamInvite_InviteeResponseToGC(const CMsgDOTATeamInvite_InviteeResponseToGC& from);

  inline CMsgDOTATeamInvite_InviteeResponseToGC& operator=(const CMsgDOTATeamInvite_InviteeResponseToGC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamInvite_InviteeResponseToGC& default_instance();

  void Swap(CMsgDOTATeamInvite_InviteeResponseToGC* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamInvite_InviteeResponseToGC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamInvite_InviteeResponseToGC& from);
  void MergeFrom(const CMsgDOTATeamInvite_InviteeResponseToGC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTATeamInvite_InviteeResponseToGC_Result Result;
  static const Result JOIN = CMsgDOTATeamInvite_InviteeResponseToGC_Result_JOIN;
  static const Result REJECT = CMsgDOTATeamInvite_InviteeResponseToGC_Result_REJECT;
  static const Result TIMEOUT = CMsgDOTATeamInvite_InviteeResponseToGC_Result_TIMEOUT;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTATeamInvite_InviteeResponseToGC_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTATeamInvite_InviteeResponseToGC_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTATeamInvite_InviteeResponseToGC_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTATeamInvite_InviteeResponseToGC_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTATeamInvite_InviteeResponseToGC_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTATeamInvite_InviteeResponseToGC_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTATeamInvite_InviteeResponseToGC_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTATeamInvite_InviteeResponseToGC.Result result = 1 [default = JOIN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTATeamInvite_InviteeResponseToGC_Result result() const;
  inline void set_result(::CMsgDOTATeamInvite_InviteeResponseToGC_Result value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamInvite_InviteeResponseToGC)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamInvite_InviteeResponseToGC* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamInvite_GCResponseToInviter : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamInvite_GCResponseToInviter();
  virtual ~CMsgDOTATeamInvite_GCResponseToInviter();

  CMsgDOTATeamInvite_GCResponseToInviter(const CMsgDOTATeamInvite_GCResponseToInviter& from);

  inline CMsgDOTATeamInvite_GCResponseToInviter& operator=(const CMsgDOTATeamInvite_GCResponseToInviter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamInvite_GCResponseToInviter& default_instance();

  void Swap(CMsgDOTATeamInvite_GCResponseToInviter* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamInvite_GCResponseToInviter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamInvite_GCResponseToInviter& from);
  void MergeFrom(const CMsgDOTATeamInvite_GCResponseToInviter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTATeamInvite_GCResponseToInviter_Result Result;
  static const Result JOINED = CMsgDOTATeamInvite_GCResponseToInviter_Result_JOINED;
  static const Result REJECTION = CMsgDOTATeamInvite_GCResponseToInviter_Result_REJECTION;
  static const Result TIMEOUT = CMsgDOTATeamInvite_GCResponseToInviter_Result_TIMEOUT;
  static const Result UNSPECIFIED_ERROR = CMsgDOTATeamInvite_GCResponseToInviter_Result_UNSPECIFIED_ERROR;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTATeamInvite_GCResponseToInviter_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTATeamInvite_GCResponseToInviter_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTATeamInvite_GCResponseToInviter_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTATeamInvite_GCResponseToInviter_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTATeamInvite_GCResponseToInviter_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTATeamInvite_GCResponseToInviter_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTATeamInvite_GCResponseToInviter_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTATeamInvite_GCResponseToInviter.Result result = 1 [default = JOINED];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTATeamInvite_GCResponseToInviter_Result result() const;
  inline void set_result(::CMsgDOTATeamInvite_GCResponseToInviter_Result value);

  // optional string invitee_name = 2;
  inline bool has_invitee_name() const;
  inline void clear_invitee_name();
  static const int kInviteeNameFieldNumber = 2;
  inline const ::std::string& invitee_name() const;
  inline void set_invitee_name(const ::std::string& value);
  inline void set_invitee_name(const char* value);
  inline void set_invitee_name(const char* value, size_t size);
  inline ::std::string* mutable_invitee_name();
  inline ::std::string* release_invitee_name();
  inline void set_allocated_invitee_name(::std::string* invitee_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamInvite_GCResponseToInviter)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_invitee_name();
  inline void clear_has_invitee_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* invitee_name_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamInvite_GCResponseToInviter* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamInvite_GCResponseToInvitee : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamInvite_GCResponseToInvitee();
  virtual ~CMsgDOTATeamInvite_GCResponseToInvitee();

  CMsgDOTATeamInvite_GCResponseToInvitee(const CMsgDOTATeamInvite_GCResponseToInvitee& from);

  inline CMsgDOTATeamInvite_GCResponseToInvitee& operator=(const CMsgDOTATeamInvite_GCResponseToInvitee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamInvite_GCResponseToInvitee& default_instance();

  void Swap(CMsgDOTATeamInvite_GCResponseToInvitee* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamInvite_GCResponseToInvitee* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamInvite_GCResponseToInvitee& from);
  void MergeFrom(const CMsgDOTATeamInvite_GCResponseToInvitee& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTATeamInvite_GCResponseToInvitee_Result Result;
  static const Result SUCCESS = CMsgDOTATeamInvite_GCResponseToInvitee_Result_SUCCESS;
  static const Result FAILURE = CMsgDOTATeamInvite_GCResponseToInvitee_Result_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTATeamInvite_GCResponseToInvitee_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTATeamInvite_GCResponseToInvitee_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTATeamInvite_GCResponseToInvitee_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTATeamInvite_GCResponseToInvitee_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTATeamInvite_GCResponseToInvitee_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTATeamInvite_GCResponseToInvitee_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTATeamInvite_GCResponseToInvitee_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTATeamInvite_GCResponseToInvitee.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTATeamInvite_GCResponseToInvitee_Result result() const;
  inline void set_result(::CMsgDOTATeamInvite_GCResponseToInvitee_Result value);

  // optional string team_name = 2;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamInvite_GCResponseToInvitee)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team_name();
  inline void clear_has_team_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* team_name_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamInvite_GCResponseToInvitee* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATeamOnProfile : public ::google::protobuf::Message {
 public:
  CMsgDOTATeamOnProfile();
  virtual ~CMsgDOTATeamOnProfile();

  CMsgDOTATeamOnProfile(const CMsgDOTATeamOnProfile& from);

  inline CMsgDOTATeamOnProfile& operator=(const CMsgDOTATeamOnProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATeamOnProfile& default_instance();

  void Swap(CMsgDOTATeamOnProfile* other);

  // implements Message ----------------------------------------------

  CMsgDOTATeamOnProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATeamOnProfile& from);
  void MergeFrom(const CMsgDOTATeamOnProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional bool enabled = 2;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATeamOnProfile)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_enabled();
  inline void clear_has_enabled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  bool enabled_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATeamOnProfile* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAKickTeamMember : public ::google::protobuf::Message {
 public:
  CMsgDOTAKickTeamMember();
  virtual ~CMsgDOTAKickTeamMember();

  CMsgDOTAKickTeamMember(const CMsgDOTAKickTeamMember& from);

  inline CMsgDOTAKickTeamMember& operator=(const CMsgDOTAKickTeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAKickTeamMember& default_instance();

  void Swap(CMsgDOTAKickTeamMember* other);

  // implements Message ----------------------------------------------

  CMsgDOTAKickTeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAKickTeamMember& from);
  void MergeFrom(const CMsgDOTAKickTeamMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 team_id = 2;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAKickTeamMember)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAKickTeamMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAKickTeamMemberResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAKickTeamMemberResponse();
  virtual ~CMsgDOTAKickTeamMemberResponse();

  CMsgDOTAKickTeamMemberResponse(const CMsgDOTAKickTeamMemberResponse& from);

  inline CMsgDOTAKickTeamMemberResponse& operator=(const CMsgDOTAKickTeamMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAKickTeamMemberResponse& default_instance();

  void Swap(CMsgDOTAKickTeamMemberResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAKickTeamMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAKickTeamMemberResponse& from);
  void MergeFrom(const CMsgDOTAKickTeamMemberResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAKickTeamMemberResponse_Result Result;
  static const Result SUCCESS = CMsgDOTAKickTeamMemberResponse_Result_SUCCESS;
  static const Result FAILURE = CMsgDOTAKickTeamMemberResponse_Result_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAKickTeamMemberResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAKickTeamMemberResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAKickTeamMemberResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAKickTeamMemberResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAKickTeamMemberResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAKickTeamMemberResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAKickTeamMemberResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAKickTeamMemberResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAKickTeamMemberResponse_Result result() const;
  inline void set_result(::CMsgDOTAKickTeamMemberResponse_Result value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAKickTeamMemberResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAKickTeamMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATransferTeamAdmin : public ::google::protobuf::Message {
 public:
  CMsgDOTATransferTeamAdmin();
  virtual ~CMsgDOTATransferTeamAdmin();

  CMsgDOTATransferTeamAdmin(const CMsgDOTATransferTeamAdmin& from);

  inline CMsgDOTATransferTeamAdmin& operator=(const CMsgDOTATransferTeamAdmin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATransferTeamAdmin& default_instance();

  void Swap(CMsgDOTATransferTeamAdmin* other);

  // implements Message ----------------------------------------------

  CMsgDOTATransferTeamAdmin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATransferTeamAdmin& from);
  void MergeFrom(const CMsgDOTATransferTeamAdmin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 new_admin_account_id = 1;
  inline bool has_new_admin_account_id() const;
  inline void clear_new_admin_account_id();
  static const int kNewAdminAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 new_admin_account_id() const;
  inline void set_new_admin_account_id(::google::protobuf::uint32 value);

  // optional uint32 team_id = 2;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTATransferTeamAdmin)
 private:
  inline void set_has_new_admin_account_id();
  inline void clear_has_new_admin_account_id();
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 new_admin_account_id_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATransferTeamAdmin* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTATransferTeamAdminResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTATransferTeamAdminResponse();
  virtual ~CMsgDOTATransferTeamAdminResponse();

  CMsgDOTATransferTeamAdminResponse(const CMsgDOTATransferTeamAdminResponse& from);

  inline CMsgDOTATransferTeamAdminResponse& operator=(const CMsgDOTATransferTeamAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATransferTeamAdminResponse& default_instance();

  void Swap(CMsgDOTATransferTeamAdminResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTATransferTeamAdminResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTATransferTeamAdminResponse& from);
  void MergeFrom(const CMsgDOTATransferTeamAdminResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTATransferTeamAdminResponse_Result Result;
  static const Result SUCCESS = CMsgDOTATransferTeamAdminResponse_Result_SUCCESS;
  static const Result NOT_ADMIN = CMsgDOTATransferTeamAdminResponse_Result_NOT_ADMIN;
  static const Result ON_OTHER_TEAM = CMsgDOTATransferTeamAdminResponse_Result_ON_OTHER_TEAM;
  static const Result ADMIN_OF_OTHER_TEAM = CMsgDOTATransferTeamAdminResponse_Result_ADMIN_OF_OTHER_TEAM;
  static const Result UNSPECIFIED_ERROR = CMsgDOTATransferTeamAdminResponse_Result_UNSPECIFIED_ERROR;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTATransferTeamAdminResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTATransferTeamAdminResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTATransferTeamAdminResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTATransferTeamAdminResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTATransferTeamAdminResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTATransferTeamAdminResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTATransferTeamAdminResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTATransferTeamAdminResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTATransferTeamAdminResponse_Result result() const;
  inline void set_result(::CMsgDOTATransferTeamAdminResponse_Result value);

  // optional string invitee_name = 2;
  inline bool has_invitee_name() const;
  inline void clear_invitee_name();
  static const int kInviteeNameFieldNumber = 2;
  inline const ::std::string& invitee_name() const;
  inline void set_invitee_name(const ::std::string& value);
  inline void set_invitee_name(const char* value);
  inline void set_invitee_name(const char* value, size_t size);
  inline ::std::string* mutable_invitee_name();
  inline ::std::string* release_invitee_name();
  inline void set_allocated_invitee_name(::std::string* invitee_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTATransferTeamAdminResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_invitee_name();
  inline void clear_has_invitee_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* invitee_name_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTATransferTeamAdminResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeaveTeam : public ::google::protobuf::Message {
 public:
  CMsgDOTALeaveTeam();
  virtual ~CMsgDOTALeaveTeam();

  CMsgDOTALeaveTeam(const CMsgDOTALeaveTeam& from);

  inline CMsgDOTALeaveTeam& operator=(const CMsgDOTALeaveTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaveTeam& default_instance();

  void Swap(CMsgDOTALeaveTeam* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeaveTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeaveTeam& from);
  void MergeFrom(const CMsgDOTALeaveTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeaveTeam)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeaveTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeaveTeamResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALeaveTeamResponse();
  virtual ~CMsgDOTALeaveTeamResponse();

  CMsgDOTALeaveTeamResponse(const CMsgDOTALeaveTeamResponse& from);

  inline CMsgDOTALeaveTeamResponse& operator=(const CMsgDOTALeaveTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaveTeamResponse& default_instance();

  void Swap(CMsgDOTALeaveTeamResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeaveTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeaveTeamResponse& from);
  void MergeFrom(const CMsgDOTALeaveTeamResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTALeaveTeamResponse_Result Result;
  static const Result SUCCESS = CMsgDOTALeaveTeamResponse_Result_SUCCESS;
  static const Result FAILURE = CMsgDOTALeaveTeamResponse_Result_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTALeaveTeamResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTALeaveTeamResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTALeaveTeamResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTALeaveTeamResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTALeaveTeamResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTALeaveTeamResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTALeaveTeamResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTALeaveTeamResponse.Result result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTALeaveTeamResponse_Result result() const;
  inline void set_result(::CMsgDOTALeaveTeamResponse_Result value);

  // optional string team_name = 2;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeaveTeamResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team_name();
  inline void clear_has_team_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* team_name_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeaveTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTABetaParticipation : public ::google::protobuf::Message {
 public:
  CMsgDOTABetaParticipation();
  virtual ~CMsgDOTABetaParticipation();

  CMsgDOTABetaParticipation(const CMsgDOTABetaParticipation& from);

  inline CMsgDOTABetaParticipation& operator=(const CMsgDOTABetaParticipation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTABetaParticipation& default_instance();

  void Swap(CMsgDOTABetaParticipation* other);

  // implements Message ----------------------------------------------

  CMsgDOTABetaParticipation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTABetaParticipation& from);
  void MergeFrom(const CMsgDOTABetaParticipation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 access_rights = 1;
  inline bool has_access_rights() const;
  inline void clear_access_rights();
  static const int kAccessRightsFieldNumber = 1;
  inline ::google::protobuf::uint32 access_rights() const;
  inline void set_access_rights(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTABetaParticipation)
 private:
  inline void set_has_access_rights();
  inline void clear_has_access_rights();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 access_rights_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTABetaParticipation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAJoinChatChannel : public ::google::protobuf::Message {
 public:
  CMsgDOTAJoinChatChannel();
  virtual ~CMsgDOTAJoinChatChannel();

  CMsgDOTAJoinChatChannel(const CMsgDOTAJoinChatChannel& from);

  inline CMsgDOTAJoinChatChannel& operator=(const CMsgDOTAJoinChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAJoinChatChannel& default_instance();

  void Swap(CMsgDOTAJoinChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgDOTAJoinChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAJoinChatChannel& from);
  void MergeFrom(const CMsgDOTAJoinChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 2;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 4;
  inline ::DOTAChatChannelType_t channel_type() const;
  inline void set_channel_type(::DOTAChatChannelType_t value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAJoinChatChannel)
 private:
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_channel_type();
  inline void clear_has_channel_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  int channel_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAJoinChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeaveChatChannel : public ::google::protobuf::Message {
 public:
  CMsgDOTALeaveChatChannel();
  virtual ~CMsgDOTALeaveChatChannel();

  CMsgDOTALeaveChatChannel(const CMsgDOTALeaveChatChannel& from);

  inline CMsgDOTALeaveChatChannel& operator=(const CMsgDOTALeaveChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaveChatChannel& default_instance();

  void Swap(CMsgDOTALeaveChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeaveChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeaveChatChannel& from);
  void MergeFrom(const CMsgDOTALeaveChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeaveChatChannel)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeaveChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAClientIgnoredUser : public ::google::protobuf::Message {
 public:
  CMsgDOTAClientIgnoredUser();
  virtual ~CMsgDOTAClientIgnoredUser();

  CMsgDOTAClientIgnoredUser(const CMsgDOTAClientIgnoredUser& from);

  inline CMsgDOTAClientIgnoredUser& operator=(const CMsgDOTAClientIgnoredUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClientIgnoredUser& default_instance();

  void Swap(CMsgDOTAClientIgnoredUser* other);

  // implements Message ----------------------------------------------

  CMsgDOTAClientIgnoredUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAClientIgnoredUser& from);
  void MergeFrom(const CMsgDOTAClientIgnoredUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ignored_account_id = 1;
  inline bool has_ignored_account_id() const;
  inline void clear_ignored_account_id();
  static const int kIgnoredAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ignored_account_id() const;
  inline void set_ignored_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAClientIgnoredUser)
 private:
  inline void set_has_ignored_account_id();
  inline void clear_has_ignored_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ignored_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAClientIgnoredUser* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatMessage : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatMessage();
  virtual ~CMsgDOTAChatMessage();

  CMsgDOTAChatMessage(const CMsgDOTAChatMessage& from);

  inline CMsgDOTAChatMessage& operator=(const CMsgDOTAChatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatMessage& default_instance();

  void Swap(CMsgDOTAChatMessage* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatMessage& from);
  void MergeFrom(const CMsgDOTAChatMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 channel_id = 2;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional string persona_name = 3;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 3;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // optional string text = 4;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 4;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // optional uint32 timestamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 suggest_invite_account_id = 6;
  inline bool has_suggest_invite_account_id() const;
  inline void clear_suggest_invite_account_id();
  static const int kSuggestInviteAccountIdFieldNumber = 6;
  inline ::google::protobuf::uint32 suggest_invite_account_id() const;
  inline void set_suggest_invite_account_id(::google::protobuf::uint32 value);

  // optional string suggest_invite_name = 7;
  inline bool has_suggest_invite_name() const;
  inline void clear_suggest_invite_name();
  static const int kSuggestInviteNameFieldNumber = 7;
  inline const ::std::string& suggest_invite_name() const;
  inline void set_suggest_invite_name(const ::std::string& value);
  inline void set_suggest_invite_name(const char* value);
  inline void set_suggest_invite_name(const char* value, size_t size);
  inline ::std::string* mutable_suggest_invite_name();
  inline ::std::string* release_suggest_invite_name();
  inline void set_allocated_suggest_invite_name(::std::string* suggest_invite_name);

  // optional uint32 fantasy_draft_owner_account_id = 8;
  inline bool has_fantasy_draft_owner_account_id() const;
  inline void clear_fantasy_draft_owner_account_id();
  static const int kFantasyDraftOwnerAccountIdFieldNumber = 8;
  inline ::google::protobuf::uint32 fantasy_draft_owner_account_id() const;
  inline void set_fantasy_draft_owner_account_id(::google::protobuf::uint32 value);

  // optional uint32 fantasy_draft_player_account_id = 9;
  inline bool has_fantasy_draft_player_account_id() const;
  inline void clear_fantasy_draft_player_account_id();
  static const int kFantasyDraftPlayerAccountIdFieldNumber = 9;
  inline ::google::protobuf::uint32 fantasy_draft_player_account_id() const;
  inline void set_fantasy_draft_player_account_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 10;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 10;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional bool suggest_invite_to_lobby = 11;
  inline bool has_suggest_invite_to_lobby() const;
  inline void clear_suggest_invite_to_lobby();
  static const int kSuggestInviteToLobbyFieldNumber = 11;
  inline bool suggest_invite_to_lobby() const;
  inline void set_suggest_invite_to_lobby(bool value);

  // optional uint32 event_points = 12;
  inline bool has_event_points() const;
  inline void clear_event_points();
  static const int kEventPointsFieldNumber = 12;
  inline ::google::protobuf::uint32 event_points() const;
  inline void set_event_points(::google::protobuf::uint32 value);

  // optional bool coin_flip = 13;
  inline bool has_coin_flip() const;
  inline void clear_coin_flip();
  static const int kCoinFlipFieldNumber = 13;
  inline bool coin_flip() const;
  inline void set_coin_flip(bool value);

  // optional int32 player_id = 14 [default = -1];
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 14;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional uint32 share_profile_account_id = 15;
  inline bool has_share_profile_account_id() const;
  inline void clear_share_profile_account_id();
  static const int kShareProfileAccountIdFieldNumber = 15;
  inline ::google::protobuf::uint32 share_profile_account_id() const;
  inline void set_share_profile_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatMessage)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_suggest_invite_account_id();
  inline void clear_has_suggest_invite_account_id();
  inline void set_has_suggest_invite_name();
  inline void clear_has_suggest_invite_name();
  inline void set_has_fantasy_draft_owner_account_id();
  inline void clear_has_fantasy_draft_owner_account_id();
  inline void set_has_fantasy_draft_player_account_id();
  inline void clear_has_fantasy_draft_player_account_id();
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_suggest_invite_to_lobby();
  inline void clear_has_suggest_invite_to_lobby();
  inline void set_has_event_points();
  inline void clear_has_event_points();
  inline void set_has_coin_flip();
  inline void clear_has_coin_flip();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_share_profile_account_id();
  inline void clear_has_share_profile_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::std::string* persona_name_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  ::std::string* text_;
  ::std::string* suggest_invite_name_;
  ::google::protobuf::uint32 suggest_invite_account_id_;
  ::google::protobuf::uint32 fantasy_draft_owner_account_id_;
  ::google::protobuf::uint32 fantasy_draft_player_account_id_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 event_points_;
  bool suggest_invite_to_lobby_;
  bool coin_flip_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::uint32 share_profile_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatMember : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatMember();
  virtual ~CMsgDOTAChatMember();

  CMsgDOTAChatMember(const CMsgDOTAChatMember& from);

  inline CMsgDOTAChatMember& operator=(const CMsgDOTAChatMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatMember& default_instance();

  void Swap(CMsgDOTAChatMember* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatMember& from);
  void MergeFrom(const CMsgDOTAChatMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatMember)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::std::string* persona_name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAJoinChatChannelResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAJoinChatChannelResponse();
  virtual ~CMsgDOTAJoinChatChannelResponse();

  CMsgDOTAJoinChatChannelResponse(const CMsgDOTAJoinChatChannelResponse& from);

  inline CMsgDOTAJoinChatChannelResponse& operator=(const CMsgDOTAJoinChatChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAJoinChatChannelResponse& default_instance();

  void Swap(CMsgDOTAJoinChatChannelResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAJoinChatChannelResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAJoinChatChannelResponse& from);
  void MergeFrom(const CMsgDOTAJoinChatChannelResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAJoinChatChannelResponse_Result Result;
  static const Result JOIN_SUCCESS = CMsgDOTAJoinChatChannelResponse_Result_JOIN_SUCCESS;
  static const Result INVALID_CHANNEL_TYPE = CMsgDOTAJoinChatChannelResponse_Result_INVALID_CHANNEL_TYPE;
  static const Result ACCOUNT_NOT_FOUND = CMsgDOTAJoinChatChannelResponse_Result_ACCOUNT_NOT_FOUND;
  static const Result ACH_FAILED = CMsgDOTAJoinChatChannelResponse_Result_ACH_FAILED;
  static const Result USER_IN_TOO_MANY_CHANNELS = CMsgDOTAJoinChatChannelResponse_Result_USER_IN_TOO_MANY_CHANNELS;
  static const Result RATE_LIMIT_EXCEEDED = CMsgDOTAJoinChatChannelResponse_Result_RATE_LIMIT_EXCEEDED;
  static const Result CHANNEL_FULL = CMsgDOTAJoinChatChannelResponse_Result_CHANNEL_FULL;
  static const Result CHANNEL_FULL_OVERFLOWED = CMsgDOTAJoinChatChannelResponse_Result_CHANNEL_FULL_OVERFLOWED;
  static const Result FAILED_TO_ADD_USER = CMsgDOTAJoinChatChannelResponse_Result_FAILED_TO_ADD_USER;
  static const Result CHANNEL_TYPE_DISABLED = CMsgDOTAJoinChatChannelResponse_Result_CHANNEL_TYPE_DISABLED;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAJoinChatChannelResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAJoinChatChannelResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAJoinChatChannelResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAJoinChatChannelResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAJoinChatChannelResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAJoinChatChannelResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAJoinChatChannelResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline ::google::protobuf::uint32 response() const;
  inline void set_response(::google::protobuf::uint32 value);

  // optional string channel_name = 2;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional fixed64 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional uint32 max_members = 4;
  inline bool has_max_members() const;
  inline void clear_max_members();
  static const int kMaxMembersFieldNumber = 4;
  inline ::google::protobuf::uint32 max_members() const;
  inline void set_max_members(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAChatMember members = 5;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 5;
  inline const ::CMsgDOTAChatMember& members(int index) const;
  inline ::CMsgDOTAChatMember* mutable_members(int index);
  inline ::CMsgDOTAChatMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >*
      mutable_members();

  // optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 6;
  inline ::DOTAChatChannelType_t channel_type() const;
  inline void set_channel_type(::DOTAChatChannelType_t value);

  // optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 7;
  inline ::CMsgDOTAJoinChatChannelResponse_Result result() const;
  inline void set_result(::CMsgDOTAJoinChatChannelResponse_Result value);

  // optional bool gc_initiated_join = 8;
  inline bool has_gc_initiated_join() const;
  inline void clear_gc_initiated_join();
  static const int kGcInitiatedJoinFieldNumber = 8;
  inline bool gc_initiated_join() const;
  inline void set_gc_initiated_join(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAJoinChatChannelResponse)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_max_members();
  inline void clear_has_max_members();
  inline void set_has_channel_type();
  inline void clear_has_channel_type();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gc_initiated_join();
  inline void clear_has_gc_initiated_join();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  ::google::protobuf::uint32 response_;
  ::google::protobuf::uint32 max_members_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember > members_;
  int channel_type_;
  int result_;
  bool gc_initiated_join_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAJoinChatChannelResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatChannelFullUpdate : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatChannelFullUpdate();
  virtual ~CMsgDOTAChatChannelFullUpdate();

  CMsgDOTAChatChannelFullUpdate(const CMsgDOTAChatChannelFullUpdate& from);

  inline CMsgDOTAChatChannelFullUpdate& operator=(const CMsgDOTAChatChannelFullUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatChannelFullUpdate& default_instance();

  void Swap(CMsgDOTAChatChannelFullUpdate* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatChannelFullUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatChannelFullUpdate& from);
  void MergeFrom(const CMsgDOTAChatChannelFullUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // repeated .CMsgDOTAChatMember members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::CMsgDOTAChatMember& members(int index) const;
  inline ::CMsgDOTAChatMember* mutable_members(int index);
  inline ::CMsgDOTAChatMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatChannelFullUpdate)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember > members_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatChannelFullUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAOtherJoinedChatChannel : public ::google::protobuf::Message {
 public:
  CMsgDOTAOtherJoinedChatChannel();
  virtual ~CMsgDOTAOtherJoinedChatChannel();

  CMsgDOTAOtherJoinedChatChannel(const CMsgDOTAOtherJoinedChatChannel& from);

  inline CMsgDOTAOtherJoinedChatChannel& operator=(const CMsgDOTAOtherJoinedChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAOtherJoinedChatChannel& default_instance();

  void Swap(CMsgDOTAOtherJoinedChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgDOTAOtherJoinedChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAOtherJoinedChatChannel& from);
  void MergeFrom(const CMsgDOTAOtherJoinedChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // optional fixed64 steam_id = 3;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAOtherJoinedChatChannel)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::std::string* persona_name_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAOtherJoinedChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAOtherLeftChatChannel : public ::google::protobuf::Message {
 public:
  CMsgDOTAOtherLeftChatChannel();
  virtual ~CMsgDOTAOtherLeftChatChannel();

  CMsgDOTAOtherLeftChatChannel(const CMsgDOTAOtherLeftChatChannel& from);

  inline CMsgDOTAOtherLeftChatChannel& operator=(const CMsgDOTAOtherLeftChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAOtherLeftChatChannel& default_instance();

  void Swap(CMsgDOTAOtherLeftChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgDOTAOtherLeftChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAOtherLeftChatChannel& from);
  void MergeFrom(const CMsgDOTAOtherLeftChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional fixed64 steam_id = 2;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAOtherLeftChatChannel)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAOtherLeftChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatChannelMemberUpdate_JoinedMember : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatChannelMemberUpdate_JoinedMember();
  virtual ~CMsgDOTAChatChannelMemberUpdate_JoinedMember();

  CMsgDOTAChatChannelMemberUpdate_JoinedMember(const CMsgDOTAChatChannelMemberUpdate_JoinedMember& from);

  inline CMsgDOTAChatChannelMemberUpdate_JoinedMember& operator=(const CMsgDOTAChatChannelMemberUpdate_JoinedMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatChannelMemberUpdate_JoinedMember& default_instance();

  void Swap(CMsgDOTAChatChannelMemberUpdate_JoinedMember* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatChannelMemberUpdate_JoinedMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatChannelMemberUpdate_JoinedMember& from);
  void MergeFrom(const CMsgDOTAChatChannelMemberUpdate_JoinedMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatChannelMemberUpdate.JoinedMember)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::std::string* persona_name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatChannelMemberUpdate_JoinedMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatChannelMemberUpdate : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatChannelMemberUpdate();
  virtual ~CMsgDOTAChatChannelMemberUpdate();

  CMsgDOTAChatChannelMemberUpdate(const CMsgDOTAChatChannelMemberUpdate& from);

  inline CMsgDOTAChatChannelMemberUpdate& operator=(const CMsgDOTAChatChannelMemberUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatChannelMemberUpdate& default_instance();

  void Swap(CMsgDOTAChatChannelMemberUpdate* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatChannelMemberUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatChannelMemberUpdate& from);
  void MergeFrom(const CMsgDOTAChatChannelMemberUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAChatChannelMemberUpdate_JoinedMember JoinedMember;

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // repeated fixed64 left_steam_ids = 2;
  inline int left_steam_ids_size() const;
  inline void clear_left_steam_ids();
  static const int kLeftSteamIdsFieldNumber = 2;
  inline ::google::protobuf::uint64 left_steam_ids(int index) const;
  inline void set_left_steam_ids(int index, ::google::protobuf::uint64 value);
  inline void add_left_steam_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      left_steam_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_left_steam_ids();

  // repeated .CMsgDOTAChatChannelMemberUpdate.JoinedMember joined_members = 3;
  inline int joined_members_size() const;
  inline void clear_joined_members();
  static const int kJoinedMembersFieldNumber = 3;
  inline const ::CMsgDOTAChatChannelMemberUpdate_JoinedMember& joined_members(int index) const;
  inline ::CMsgDOTAChatChannelMemberUpdate_JoinedMember* mutable_joined_members(int index);
  inline ::CMsgDOTAChatChannelMemberUpdate_JoinedMember* add_joined_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatChannelMemberUpdate_JoinedMember >&
      joined_members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatChannelMemberUpdate_JoinedMember >*
      mutable_joined_members();

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatChannelMemberUpdate)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > left_steam_ids_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatChannelMemberUpdate_JoinedMember > joined_members_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatChannelMemberUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestChatChannelList : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestChatChannelList();
  virtual ~CMsgDOTARequestChatChannelList();

  CMsgDOTARequestChatChannelList(const CMsgDOTARequestChatChannelList& from);

  inline CMsgDOTARequestChatChannelList& operator=(const CMsgDOTARequestChatChannelList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestChatChannelList& default_instance();

  void Swap(CMsgDOTARequestChatChannelList* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestChatChannelList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestChatChannelList& from);
  void MergeFrom(const CMsgDOTARequestChatChannelList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestChatChannelList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestChatChannelList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestChatChannelListResponse_ChatChannel : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestChatChannelListResponse_ChatChannel();
  virtual ~CMsgDOTARequestChatChannelListResponse_ChatChannel();

  CMsgDOTARequestChatChannelListResponse_ChatChannel(const CMsgDOTARequestChatChannelListResponse_ChatChannel& from);

  inline CMsgDOTARequestChatChannelListResponse_ChatChannel& operator=(const CMsgDOTARequestChatChannelListResponse_ChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestChatChannelListResponse_ChatChannel& default_instance();

  void Swap(CMsgDOTARequestChatChannelListResponse_ChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestChatChannelListResponse_ChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestChatChannelListResponse_ChatChannel& from);
  void MergeFrom(const CMsgDOTARequestChatChannelListResponse_ChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional uint32 num_members = 2;
  inline bool has_num_members() const;
  inline void clear_num_members();
  static const int kNumMembersFieldNumber = 2;
  inline ::google::protobuf::uint32 num_members() const;
  inline void set_num_members(::google::protobuf::uint32 value);

  // optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 3;
  inline ::DOTAChatChannelType_t channel_type() const;
  inline void set_channel_type(::DOTAChatChannelType_t value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestChatChannelListResponse.ChatChannel)
 private:
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_num_members();
  inline void clear_has_num_members();
  inline void set_has_channel_type();
  inline void clear_has_channel_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  ::google::protobuf::uint32 num_members_;
  int channel_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestChatChannelListResponse_ChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestChatChannelListResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestChatChannelListResponse();
  virtual ~CMsgDOTARequestChatChannelListResponse();

  CMsgDOTARequestChatChannelListResponse(const CMsgDOTARequestChatChannelListResponse& from);

  inline CMsgDOTARequestChatChannelListResponse& operator=(const CMsgDOTARequestChatChannelListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestChatChannelListResponse& default_instance();

  void Swap(CMsgDOTARequestChatChannelListResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestChatChannelListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestChatChannelListResponse& from);
  void MergeFrom(const CMsgDOTARequestChatChannelListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestChatChannelListResponse_ChatChannel ChatChannel;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;
  inline int channels_size() const;
  inline void clear_channels();
  static const int kChannelsFieldNumber = 1;
  inline const ::CMsgDOTARequestChatChannelListResponse_ChatChannel& channels(int index) const;
  inline ::CMsgDOTARequestChatChannelListResponse_ChatChannel* mutable_channels(int index);
  inline ::CMsgDOTARequestChatChannelListResponse_ChatChannel* add_channels();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestChatChannelListResponse_ChatChannel >&
      channels() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestChatChannelListResponse_ChatChannel >*
      mutable_channels();

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestChatChannelListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestChatChannelListResponse_ChatChannel > channels_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestChatChannelListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatGetUserList : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatGetUserList();
  virtual ~CMsgDOTAChatGetUserList();

  CMsgDOTAChatGetUserList(const CMsgDOTAChatGetUserList& from);

  inline CMsgDOTAChatGetUserList& operator=(const CMsgDOTAChatGetUserList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatGetUserList& default_instance();

  void Swap(CMsgDOTAChatGetUserList* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatGetUserList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatGetUserList& from);
  void MergeFrom(const CMsgDOTAChatGetUserList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetUserList)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatGetUserList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatGetUserListResponse_Member : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatGetUserListResponse_Member();
  virtual ~CMsgDOTAChatGetUserListResponse_Member();

  CMsgDOTAChatGetUserListResponse_Member(const CMsgDOTAChatGetUserListResponse_Member& from);

  inline CMsgDOTAChatGetUserListResponse_Member& operator=(const CMsgDOTAChatGetUserListResponse_Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatGetUserListResponse_Member& default_instance();

  void Swap(CMsgDOTAChatGetUserListResponse_Member* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatGetUserListResponse_Member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatGetUserListResponse_Member& from);
  void MergeFrom(const CMsgDOTAChatGetUserListResponse_Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetUserListResponse.Member)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::std::string* persona_name_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatGetUserListResponse_Member* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatGetUserListResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatGetUserListResponse();
  virtual ~CMsgDOTAChatGetUserListResponse();

  CMsgDOTAChatGetUserListResponse(const CMsgDOTAChatGetUserListResponse& from);

  inline CMsgDOTAChatGetUserListResponse& operator=(const CMsgDOTAChatGetUserListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatGetUserListResponse& default_instance();

  void Swap(CMsgDOTAChatGetUserListResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatGetUserListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatGetUserListResponse& from);
  void MergeFrom(const CMsgDOTAChatGetUserListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAChatGetUserListResponse_Member Member;

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::CMsgDOTAChatGetUserListResponse_Member& members(int index) const;
  inline ::CMsgDOTAChatGetUserListResponse_Member* mutable_members(int index);
  inline ::CMsgDOTAChatGetUserListResponse_Member* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatGetUserListResponse_Member >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatGetUserListResponse_Member >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetUserListResponse)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatGetUserListResponse_Member > members_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatGetUserListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatGetMemberCount : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatGetMemberCount();
  virtual ~CMsgDOTAChatGetMemberCount();

  CMsgDOTAChatGetMemberCount(const CMsgDOTAChatGetMemberCount& from);

  inline CMsgDOTAChatGetMemberCount& operator=(const CMsgDOTAChatGetMemberCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatGetMemberCount& default_instance();

  void Swap(CMsgDOTAChatGetMemberCount* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatGetMemberCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatGetMemberCount& from);
  void MergeFrom(const CMsgDOTAChatGetMemberCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 2;
  inline ::DOTAChatChannelType_t channel_type() const;
  inline void set_channel_type(::DOTAChatChannelType_t value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetMemberCount)
 private:
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_channel_type();
  inline void clear_has_channel_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  int channel_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatGetMemberCount* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatGetMemberCountResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatGetMemberCountResponse();
  virtual ~CMsgDOTAChatGetMemberCountResponse();

  CMsgDOTAChatGetMemberCountResponse(const CMsgDOTAChatGetMemberCountResponse& from);

  inline CMsgDOTAChatGetMemberCountResponse& operator=(const CMsgDOTAChatGetMemberCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatGetMemberCountResponse& default_instance();

  void Swap(CMsgDOTAChatGetMemberCountResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatGetMemberCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatGetMemberCountResponse& from);
  void MergeFrom(const CMsgDOTAChatGetMemberCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 2;
  inline ::DOTAChatChannelType_t channel_type() const;
  inline void set_channel_type(::DOTAChatChannelType_t value);

  // optional uint32 member_count = 3;
  inline bool has_member_count() const;
  inline void clear_member_count();
  static const int kMemberCountFieldNumber = 3;
  inline ::google::protobuf::uint32 member_count() const;
  inline void set_member_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetMemberCountResponse)
 private:
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_channel_type();
  inline void clear_has_channel_type();
  inline void set_has_member_count();
  inline void clear_has_member_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  int channel_type_;
  ::google::protobuf::uint32 member_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatGetMemberCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatRegionsEnabled_Region : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatRegionsEnabled_Region();
  virtual ~CMsgDOTAChatRegionsEnabled_Region();

  CMsgDOTAChatRegionsEnabled_Region(const CMsgDOTAChatRegionsEnabled_Region& from);

  inline CMsgDOTAChatRegionsEnabled_Region& operator=(const CMsgDOTAChatRegionsEnabled_Region& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatRegionsEnabled_Region& default_instance();

  void Swap(CMsgDOTAChatRegionsEnabled_Region* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatRegionsEnabled_Region* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatRegionsEnabled_Region& from);
  void MergeFrom(const CMsgDOTAChatRegionsEnabled_Region& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float min_latitude = 1;
  inline bool has_min_latitude() const;
  inline void clear_min_latitude();
  static const int kMinLatitudeFieldNumber = 1;
  inline float min_latitude() const;
  inline void set_min_latitude(float value);

  // optional float max_latitude = 2;
  inline bool has_max_latitude() const;
  inline void clear_max_latitude();
  static const int kMaxLatitudeFieldNumber = 2;
  inline float max_latitude() const;
  inline void set_max_latitude(float value);

  // optional float min_longitude = 3;
  inline bool has_min_longitude() const;
  inline void clear_min_longitude();
  static const int kMinLongitudeFieldNumber = 3;
  inline float min_longitude() const;
  inline void set_min_longitude(float value);

  // optional float max_longitude = 4;
  inline bool has_max_longitude() const;
  inline void clear_max_longitude();
  static const int kMaxLongitudeFieldNumber = 4;
  inline float max_longitude() const;
  inline void set_max_longitude(float value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatRegionsEnabled.Region)
 private:
  inline void set_has_min_latitude();
  inline void clear_has_min_latitude();
  inline void set_has_max_latitude();
  inline void clear_has_max_latitude();
  inline void set_has_min_longitude();
  inline void clear_has_min_longitude();
  inline void set_has_max_longitude();
  inline void clear_has_max_longitude();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float min_latitude_;
  float max_latitude_;
  float min_longitude_;
  float max_longitude_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatRegionsEnabled_Region* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAChatRegionsEnabled : public ::google::protobuf::Message {
 public:
  CMsgDOTAChatRegionsEnabled();
  virtual ~CMsgDOTAChatRegionsEnabled();

  CMsgDOTAChatRegionsEnabled(const CMsgDOTAChatRegionsEnabled& from);

  inline CMsgDOTAChatRegionsEnabled& operator=(const CMsgDOTAChatRegionsEnabled& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAChatRegionsEnabled& default_instance();

  void Swap(CMsgDOTAChatRegionsEnabled* other);

  // implements Message ----------------------------------------------

  CMsgDOTAChatRegionsEnabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAChatRegionsEnabled& from);
  void MergeFrom(const CMsgDOTAChatRegionsEnabled& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAChatRegionsEnabled_Region Region;

  // accessors -------------------------------------------------------

  // optional bool enable_all_regions = 1;
  inline bool has_enable_all_regions() const;
  inline void clear_enable_all_regions();
  static const int kEnableAllRegionsFieldNumber = 1;
  inline bool enable_all_regions() const;
  inline void set_enable_all_regions(bool value);

  // repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;
  inline int enabled_regions_size() const;
  inline void clear_enabled_regions();
  static const int kEnabledRegionsFieldNumber = 2;
  inline const ::CMsgDOTAChatRegionsEnabled_Region& enabled_regions(int index) const;
  inline ::CMsgDOTAChatRegionsEnabled_Region* mutable_enabled_regions(int index);
  inline ::CMsgDOTAChatRegionsEnabled_Region* add_enabled_regions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatRegionsEnabled_Region >&
      enabled_regions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatRegionsEnabled_Region >*
      mutable_enabled_regions();

  // @@protoc_insertion_point(class_scope:CMsgDOTAChatRegionsEnabled)
 private:
  inline void set_has_enable_all_regions();
  inline void clear_has_enable_all_regions();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatRegionsEnabled_Region > enabled_regions_;
  bool enable_all_regions_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAChatRegionsEnabled* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildSDO_Member : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildSDO_Member();
  virtual ~CMsgDOTAGuildSDO_Member();

  CMsgDOTAGuildSDO_Member(const CMsgDOTAGuildSDO_Member& from);

  inline CMsgDOTAGuildSDO_Member& operator=(const CMsgDOTAGuildSDO_Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildSDO_Member& default_instance();

  void Swap(CMsgDOTAGuildSDO_Member* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildSDO_Member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildSDO_Member& from);
  void MergeFrom(const CMsgDOTAGuildSDO_Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 time_joined = 2;
  inline bool has_time_joined() const;
  inline void clear_time_joined();
  static const int kTimeJoinedFieldNumber = 2;
  inline ::google::protobuf::uint32 time_joined() const;
  inline void set_time_joined(::google::protobuf::uint32 value);

  // optional uint32 role = 3;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 3;
  inline ::google::protobuf::uint32 role() const;
  inline void set_role(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildSDO.Member)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_time_joined();
  inline void clear_has_time_joined();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 time_joined_;
  ::google::protobuf::uint32 role_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildSDO_Member* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildSDO_Invitation : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildSDO_Invitation();
  virtual ~CMsgDOTAGuildSDO_Invitation();

  CMsgDOTAGuildSDO_Invitation(const CMsgDOTAGuildSDO_Invitation& from);

  inline CMsgDOTAGuildSDO_Invitation& operator=(const CMsgDOTAGuildSDO_Invitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildSDO_Invitation& default_instance();

  void Swap(CMsgDOTAGuildSDO_Invitation* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildSDO_Invitation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildSDO_Invitation& from);
  void MergeFrom(const CMsgDOTAGuildSDO_Invitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 time_sent = 2;
  inline bool has_time_sent() const;
  inline void clear_time_sent();
  static const int kTimeSentFieldNumber = 2;
  inline ::google::protobuf::uint32 time_sent() const;
  inline void set_time_sent(::google::protobuf::uint32 value);

  // optional uint32 account_id_sender = 3;
  inline bool has_account_id_sender() const;
  inline void clear_account_id_sender();
  static const int kAccountIdSenderFieldNumber = 3;
  inline ::google::protobuf::uint32 account_id_sender() const;
  inline void set_account_id_sender(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildSDO.Invitation)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_time_sent();
  inline void clear_has_time_sent();
  inline void set_has_account_id_sender();
  inline void clear_has_account_id_sender();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 time_sent_;
  ::google::protobuf::uint32 account_id_sender_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildSDO_Invitation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildSDO : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildSDO();
  virtual ~CMsgDOTAGuildSDO();

  CMsgDOTAGuildSDO(const CMsgDOTAGuildSDO& from);

  inline CMsgDOTAGuildSDO& operator=(const CMsgDOTAGuildSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildSDO& default_instance();

  void Swap(CMsgDOTAGuildSDO* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildSDO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildSDO& from);
  void MergeFrom(const CMsgDOTAGuildSDO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildSDO_Member Member;
  typedef CMsgDOTAGuildSDO_Invitation Invitation;

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string tag = 3;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 3;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // optional uint32 time_created = 4;
  inline bool has_time_created() const;
  inline void clear_time_created();
  static const int kTimeCreatedFieldNumber = 4;
  inline ::google::protobuf::uint32 time_created() const;
  inline void set_time_created(::google::protobuf::uint32 value);

  // optional uint32 time_disbanded = 5;
  inline bool has_time_disbanded() const;
  inline void clear_time_disbanded();
  static const int kTimeDisbandedFieldNumber = 5;
  inline ::google::protobuf::uint32 time_disbanded() const;
  inline void set_time_disbanded(::google::protobuf::uint32 value);

  // optional uint64 logo = 6;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 6;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint64 base_logo = 7;
  inline bool has_base_logo() const;
  inline void clear_base_logo();
  static const int kBaseLogoFieldNumber = 7;
  inline ::google::protobuf::uint64 base_logo() const;
  inline void set_base_logo(::google::protobuf::uint64 value);

  // optional uint64 banner_logo = 8;
  inline bool has_banner_logo() const;
  inline void clear_banner_logo();
  static const int kBannerLogoFieldNumber = 8;
  inline ::google::protobuf::uint64 banner_logo() const;
  inline void set_banner_logo(::google::protobuf::uint64 value);

  // repeated .CMsgDOTAGuildSDO.Member members = 9;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 9;
  inline const ::CMsgDOTAGuildSDO_Member& members(int index) const;
  inline ::CMsgDOTAGuildSDO_Member* mutable_members(int index);
  inline ::CMsgDOTAGuildSDO_Member* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Member >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Member >*
      mutable_members();

  // repeated .CMsgDOTAGuildSDO.Invitation invitations = 10;
  inline int invitations_size() const;
  inline void clear_invitations();
  static const int kInvitationsFieldNumber = 10;
  inline const ::CMsgDOTAGuildSDO_Invitation& invitations(int index) const;
  inline ::CMsgDOTAGuildSDO_Invitation* mutable_invitations(int index);
  inline ::CMsgDOTAGuildSDO_Invitation* add_invitations();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Invitation >&
      invitations() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Invitation >*
      mutable_invitations();

  // optional string message = 11;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 11;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool incremental = 12;
  inline bool has_incremental() const;
  inline void clear_incremental();
  static const int kIncrementalFieldNumber = 12;
  inline bool incremental() const;
  inline void set_incremental(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildSDO)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_time_created();
  inline void clear_has_time_created();
  inline void set_has_time_disbanded();
  inline void clear_has_time_disbanded();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_base_logo();
  inline void clear_has_base_logo();
  inline void set_has_banner_logo();
  inline void clear_has_banner_logo();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_incremental();
  inline void clear_has_incremental();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 time_created_;
  ::std::string* tag_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint64 base_logo_;
  ::google::protobuf::uint64 banner_logo_;
  ::google::protobuf::uint32 time_disbanded_;
  bool incremental_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Member > members_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Invitation > invitations_;
  ::std::string* message_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildSDO* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildAuditSDO_Entry : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildAuditSDO_Entry();
  virtual ~CMsgDOTAGuildAuditSDO_Entry();

  CMsgDOTAGuildAuditSDO_Entry(const CMsgDOTAGuildAuditSDO_Entry& from);

  inline CMsgDOTAGuildAuditSDO_Entry& operator=(const CMsgDOTAGuildAuditSDO_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildAuditSDO_Entry& default_instance();

  void Swap(CMsgDOTAGuildAuditSDO_Entry* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildAuditSDO_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildAuditSDO_Entry& from);
  void MergeFrom(const CMsgDOTAGuildAuditSDO_Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_index = 1;
  inline bool has_event_index() const;
  inline void clear_event_index();
  static const int kEventIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 event_index() const;
  inline void set_event_index(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);

  // optional uint32 account_id_requestor = 4;
  inline bool has_account_id_requestor() const;
  inline void clear_account_id_requestor();
  static const int kAccountIdRequestorFieldNumber = 4;
  inline ::google::protobuf::uint32 account_id_requestor() const;
  inline void set_account_id_requestor(::google::protobuf::uint32 value);

  // optional uint32 account_id_target = 5;
  inline bool has_account_id_target() const;
  inline void clear_account_id_target();
  static const int kAccountIdTargetFieldNumber = 5;
  inline ::google::protobuf::uint32 account_id_target() const;
  inline void set_account_id_target(::google::protobuf::uint32 value);

  // optional uint32 reference_data_a = 6;
  inline bool has_reference_data_a() const;
  inline void clear_reference_data_a();
  static const int kReferenceDataAFieldNumber = 6;
  inline ::google::protobuf::uint32 reference_data_a() const;
  inline void set_reference_data_a(::google::protobuf::uint32 value);

  // optional uint32 reference_data_b = 7;
  inline bool has_reference_data_b() const;
  inline void clear_reference_data_b();
  static const int kReferenceDataBFieldNumber = 7;
  inline ::google::protobuf::uint32 reference_data_b() const;
  inline void set_reference_data_b(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildAuditSDO.Entry)
 private:
  inline void set_has_event_index();
  inline void clear_has_event_index();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_account_id_requestor();
  inline void clear_has_account_id_requestor();
  inline void set_has_account_id_target();
  inline void clear_has_account_id_target();
  inline void set_has_reference_data_a();
  inline void clear_has_reference_data_a();
  inline void set_has_reference_data_b();
  inline void clear_has_reference_data_b();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_index_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 account_id_requestor_;
  ::google::protobuf::uint32 account_id_target_;
  ::google::protobuf::uint32 reference_data_a_;
  ::google::protobuf::uint32 reference_data_b_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildAuditSDO_Entry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildAuditSDO : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildAuditSDO();
  virtual ~CMsgDOTAGuildAuditSDO();

  CMsgDOTAGuildAuditSDO(const CMsgDOTAGuildAuditSDO& from);

  inline CMsgDOTAGuildAuditSDO& operator=(const CMsgDOTAGuildAuditSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildAuditSDO& default_instance();

  void Swap(CMsgDOTAGuildAuditSDO* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildAuditSDO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildAuditSDO& from);
  void MergeFrom(const CMsgDOTAGuildAuditSDO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildAuditSDO_Entry Entry;

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAGuildAuditSDO.Entry entries = 2;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 2;
  inline const ::CMsgDOTAGuildAuditSDO_Entry& entries(int index) const;
  inline ::CMsgDOTAGuildAuditSDO_Entry* mutable_entries(int index);
  inline ::CMsgDOTAGuildAuditSDO_Entry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildAuditSDO_Entry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildAuditSDO_Entry >*
      mutable_entries();

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildAuditSDO)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildAuditSDO_Entry > entries_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildAuditSDO* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAAccountGuildMembershipsSDO_Membership : public ::google::protobuf::Message {
 public:
  CMsgDOTAAccountGuildMembershipsSDO_Membership();
  virtual ~CMsgDOTAAccountGuildMembershipsSDO_Membership();

  CMsgDOTAAccountGuildMembershipsSDO_Membership(const CMsgDOTAAccountGuildMembershipsSDO_Membership& from);

  inline CMsgDOTAAccountGuildMembershipsSDO_Membership& operator=(const CMsgDOTAAccountGuildMembershipsSDO_Membership& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAAccountGuildMembershipsSDO_Membership& default_instance();

  void Swap(CMsgDOTAAccountGuildMembershipsSDO_Membership* other);

  // implements Message ----------------------------------------------

  CMsgDOTAAccountGuildMembershipsSDO_Membership* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAAccountGuildMembershipsSDO_Membership& from);
  void MergeFrom(const CMsgDOTAAccountGuildMembershipsSDO_Membership& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint32 role = 2;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 2;
  inline ::google::protobuf::uint32 role() const;
  inline void set_role(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAAccountGuildMembershipsSDO.Membership)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 role_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAAccountGuildMembershipsSDO_Membership* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAAccountGuildMembershipsSDO_Invitation : public ::google::protobuf::Message {
 public:
  CMsgDOTAAccountGuildMembershipsSDO_Invitation();
  virtual ~CMsgDOTAAccountGuildMembershipsSDO_Invitation();

  CMsgDOTAAccountGuildMembershipsSDO_Invitation(const CMsgDOTAAccountGuildMembershipsSDO_Invitation& from);

  inline CMsgDOTAAccountGuildMembershipsSDO_Invitation& operator=(const CMsgDOTAAccountGuildMembershipsSDO_Invitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAAccountGuildMembershipsSDO_Invitation& default_instance();

  void Swap(CMsgDOTAAccountGuildMembershipsSDO_Invitation* other);

  // implements Message ----------------------------------------------

  CMsgDOTAAccountGuildMembershipsSDO_Invitation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAAccountGuildMembershipsSDO_Invitation& from);
  void MergeFrom(const CMsgDOTAAccountGuildMembershipsSDO_Invitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint32 time_sent = 2;
  inline bool has_time_sent() const;
  inline void clear_time_sent();
  static const int kTimeSentFieldNumber = 2;
  inline ::google::protobuf::uint32 time_sent() const;
  inline void set_time_sent(::google::protobuf::uint32 value);

  // optional uint32 account_id_sender = 3;
  inline bool has_account_id_sender() const;
  inline void clear_account_id_sender();
  static const int kAccountIdSenderFieldNumber = 3;
  inline ::google::protobuf::uint32 account_id_sender() const;
  inline void set_account_id_sender(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAAccountGuildMembershipsSDO.Invitation)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_time_sent();
  inline void clear_has_time_sent();
  inline void set_has_account_id_sender();
  inline void clear_has_account_id_sender();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 time_sent_;
  ::google::protobuf::uint32 account_id_sender_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAAccountGuildMembershipsSDO_Invitation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAAccountGuildMembershipsSDO : public ::google::protobuf::Message {
 public:
  CMsgDOTAAccountGuildMembershipsSDO();
  virtual ~CMsgDOTAAccountGuildMembershipsSDO();

  CMsgDOTAAccountGuildMembershipsSDO(const CMsgDOTAAccountGuildMembershipsSDO& from);

  inline CMsgDOTAAccountGuildMembershipsSDO& operator=(const CMsgDOTAAccountGuildMembershipsSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAAccountGuildMembershipsSDO& default_instance();

  void Swap(CMsgDOTAAccountGuildMembershipsSDO* other);

  // implements Message ----------------------------------------------

  CMsgDOTAAccountGuildMembershipsSDO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAAccountGuildMembershipsSDO& from);
  void MergeFrom(const CMsgDOTAAccountGuildMembershipsSDO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAAccountGuildMembershipsSDO_Membership Membership;
  typedef CMsgDOTAAccountGuildMembershipsSDO_Invitation Invitation;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAAccountGuildMembershipsSDO.Membership memberships = 2;
  inline int memberships_size() const;
  inline void clear_memberships();
  static const int kMembershipsFieldNumber = 2;
  inline const ::CMsgDOTAAccountGuildMembershipsSDO_Membership& memberships(int index) const;
  inline ::CMsgDOTAAccountGuildMembershipsSDO_Membership* mutable_memberships(int index);
  inline ::CMsgDOTAAccountGuildMembershipsSDO_Membership* add_memberships();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Membership >&
      memberships() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Membership >*
      mutable_memberships();

  // repeated .CMsgDOTAAccountGuildMembershipsSDO.Invitation invitations = 3;
  inline int invitations_size() const;
  inline void clear_invitations();
  static const int kInvitationsFieldNumber = 3;
  inline const ::CMsgDOTAAccountGuildMembershipsSDO_Invitation& invitations(int index) const;
  inline ::CMsgDOTAAccountGuildMembershipsSDO_Invitation* mutable_invitations(int index);
  inline ::CMsgDOTAAccountGuildMembershipsSDO_Invitation* add_invitations();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Invitation >&
      invitations() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Invitation >*
      mutable_invitations();

  // @@protoc_insertion_point(class_scope:CMsgDOTAAccountGuildMembershipsSDO)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Membership > memberships_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Invitation > invitations_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAAccountGuildMembershipsSDO* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildCreateRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildCreateRequest();
  virtual ~CMsgDOTAGuildCreateRequest();

  CMsgDOTAGuildCreateRequest(const CMsgDOTAGuildCreateRequest& from);

  inline CMsgDOTAGuildCreateRequest& operator=(const CMsgDOTAGuildCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildCreateRequest& default_instance();

  void Swap(CMsgDOTAGuildCreateRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildCreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildCreateRequest& from);
  void MergeFrom(const CMsgDOTAGuildCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string tag = 2;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // optional uint64 logo = 3;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 3;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint64 base_logo = 4;
  inline bool has_base_logo() const;
  inline void clear_base_logo();
  static const int kBaseLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 base_logo() const;
  inline void set_base_logo(::google::protobuf::uint64 value);

  // optional uint64 banner_logo = 5;
  inline bool has_banner_logo() const;
  inline void clear_banner_logo();
  static const int kBannerLogoFieldNumber = 5;
  inline ::google::protobuf::uint64 banner_logo() const;
  inline void set_banner_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildCreateRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_base_logo();
  inline void clear_has_base_logo();
  inline void set_has_banner_logo();
  inline void clear_has_banner_logo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* tag_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint64 base_logo_;
  ::google::protobuf::uint64 banner_logo_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildCreateResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildCreateResponse();
  virtual ~CMsgDOTAGuildCreateResponse();

  CMsgDOTAGuildCreateResponse(const CMsgDOTAGuildCreateResponse& from);

  inline CMsgDOTAGuildCreateResponse& operator=(const CMsgDOTAGuildCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildCreateResponse& default_instance();

  void Swap(CMsgDOTAGuildCreateResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildCreateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildCreateResponse& from);
  void MergeFrom(const CMsgDOTAGuildCreateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildCreateResponse_EError EError;
  static const EError UNSPECIFIED = CMsgDOTAGuildCreateResponse_EError_UNSPECIFIED;
  static const EError NAME_EMPTY = CMsgDOTAGuildCreateResponse_EError_NAME_EMPTY;
  static const EError NAME_BAD_CHARACTERS = CMsgDOTAGuildCreateResponse_EError_NAME_BAD_CHARACTERS;
  static const EError NAME_TOO_LONG = CMsgDOTAGuildCreateResponse_EError_NAME_TOO_LONG;
  static const EError NAME_TAKEN = CMsgDOTAGuildCreateResponse_EError_NAME_TAKEN;
  static const EError TAG_EMPTY = CMsgDOTAGuildCreateResponse_EError_TAG_EMPTY;
  static const EError TAG_BAD_CHARACTERS = CMsgDOTAGuildCreateResponse_EError_TAG_BAD_CHARACTERS;
  static const EError TAG_TOO_LONG = CMsgDOTAGuildCreateResponse_EError_TAG_TOO_LONG;
  static const EError ACCOUNT_TOO_MANY_GUILDS = CMsgDOTAGuildCreateResponse_EError_ACCOUNT_TOO_MANY_GUILDS;
  static const EError LOGO_UPLOAD_FAILED = CMsgDOTAGuildCreateResponse_EError_LOGO_UPLOAD_FAILED;
  static inline bool EError_IsValid(int value) {
    return CMsgDOTAGuildCreateResponse_EError_IsValid(value);
  }
  static const EError EError_MIN =
    CMsgDOTAGuildCreateResponse_EError_EError_MIN;
  static const EError EError_MAX =
    CMsgDOTAGuildCreateResponse_EError_EError_MAX;
  static const int EError_ARRAYSIZE =
    CMsgDOTAGuildCreateResponse_EError_EError_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EError_descriptor() {
    return CMsgDOTAGuildCreateResponse_EError_descriptor();
  }
  static inline const ::std::string& EError_Name(EError value) {
    return CMsgDOTAGuildCreateResponse_EError_Name(value);
  }
  static inline bool EError_Parse(const ::std::string& name,
      EError* value) {
    return CMsgDOTAGuildCreateResponse_EError_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAGuildCreateResponse.EError errors = 2;
  inline int errors_size() const;
  inline void clear_errors();
  static const int kErrorsFieldNumber = 2;
  inline ::CMsgDOTAGuildCreateResponse_EError errors(int index) const;
  inline void set_errors(int index, ::CMsgDOTAGuildCreateResponse_EError value);
  inline void add_errors(::CMsgDOTAGuildCreateResponse_EError value);
  inline const ::google::protobuf::RepeatedField<int>& errors() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildCreateResponse)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildCreateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildSetAccountRoleRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildSetAccountRoleRequest();
  virtual ~CMsgDOTAGuildSetAccountRoleRequest();

  CMsgDOTAGuildSetAccountRoleRequest(const CMsgDOTAGuildSetAccountRoleRequest& from);

  inline CMsgDOTAGuildSetAccountRoleRequest& operator=(const CMsgDOTAGuildSetAccountRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildSetAccountRoleRequest& default_instance();

  void Swap(CMsgDOTAGuildSetAccountRoleRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildSetAccountRoleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildSetAccountRoleRequest& from);
  void MergeFrom(const CMsgDOTAGuildSetAccountRoleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint32 target_account_id = 2;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 target_role = 3;
  inline bool has_target_role() const;
  inline void clear_target_role();
  static const int kTargetRoleFieldNumber = 3;
  inline ::google::protobuf::uint32 target_role() const;
  inline void set_target_role(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildSetAccountRoleRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_target_role();
  inline void clear_has_target_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 target_role_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildSetAccountRoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildSetAccountRoleResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildSetAccountRoleResponse();
  virtual ~CMsgDOTAGuildSetAccountRoleResponse();

  CMsgDOTAGuildSetAccountRoleResponse(const CMsgDOTAGuildSetAccountRoleResponse& from);

  inline CMsgDOTAGuildSetAccountRoleResponse& operator=(const CMsgDOTAGuildSetAccountRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildSetAccountRoleResponse& default_instance();

  void Swap(CMsgDOTAGuildSetAccountRoleResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildSetAccountRoleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildSetAccountRoleResponse& from);
  void MergeFrom(const CMsgDOTAGuildSetAccountRoleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildSetAccountRoleResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAGuildSetAccountRoleResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_NO_PERMISSION = CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_NO_PERMISSION;
  static const EResult ERROR_NO_OTHER_LEADER = CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_NO_OTHER_LEADER;
  static const EResult ERROR_ACCOUNT_TOO_MANY_GUILDS = CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_ACCOUNT_TOO_MANY_GUILDS;
  static const EResult ERROR_GUILD_TOO_MANY_MEMBERS = CMsgDOTAGuildSetAccountRoleResponse_EResult_ERROR_GUILD_TOO_MANY_MEMBERS;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAGuildSetAccountRoleResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAGuildSetAccountRoleResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAGuildSetAccountRoleResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAGuildSetAccountRoleResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAGuildSetAccountRoleResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAGuildSetAccountRoleResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAGuildSetAccountRoleResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAGuildSetAccountRoleResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAGuildSetAccountRoleResponse_EResult result() const;
  inline void set_result(::CMsgDOTAGuildSetAccountRoleResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildSetAccountRoleResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildSetAccountRoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildInviteAccountRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildInviteAccountRequest();
  virtual ~CMsgDOTAGuildInviteAccountRequest();

  CMsgDOTAGuildInviteAccountRequest(const CMsgDOTAGuildInviteAccountRequest& from);

  inline CMsgDOTAGuildInviteAccountRequest& operator=(const CMsgDOTAGuildInviteAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildInviteAccountRequest& default_instance();

  void Swap(CMsgDOTAGuildInviteAccountRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildInviteAccountRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildInviteAccountRequest& from);
  void MergeFrom(const CMsgDOTAGuildInviteAccountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint32 target_account_id = 2;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildInviteAccountRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 target_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildInviteAccountRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildInviteAccountResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildInviteAccountResponse();
  virtual ~CMsgDOTAGuildInviteAccountResponse();

  CMsgDOTAGuildInviteAccountResponse(const CMsgDOTAGuildInviteAccountResponse& from);

  inline CMsgDOTAGuildInviteAccountResponse& operator=(const CMsgDOTAGuildInviteAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildInviteAccountResponse& default_instance();

  void Swap(CMsgDOTAGuildInviteAccountResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildInviteAccountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildInviteAccountResponse& from);
  void MergeFrom(const CMsgDOTAGuildInviteAccountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildInviteAccountResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAGuildInviteAccountResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_NO_PERMISSION = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_NO_PERMISSION;
  static const EResult ERROR_ACCOUNT_ALREADY_INVITED = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_ALREADY_INVITED;
  static const EResult ERROR_ACCOUNT_ALREADY_IN_GUILD = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_ALREADY_IN_GUILD;
  static const EResult ERROR_ACCOUNT_TOO_MANY_INVITES = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_TOO_MANY_INVITES;
  static const EResult ERROR_GUILD_TOO_MANY_INVITES = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_GUILD_TOO_MANY_INVITES;
  static const EResult ERROR_ACCOUNT_TOO_MANY_GUILDS = CMsgDOTAGuildInviteAccountResponse_EResult_ERROR_ACCOUNT_TOO_MANY_GUILDS;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAGuildInviteAccountResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAGuildInviteAccountResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAGuildInviteAccountResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAGuildInviteAccountResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAGuildInviteAccountResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAGuildInviteAccountResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAGuildInviteAccountResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAGuildInviteAccountResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAGuildInviteAccountResponse_EResult result() const;
  inline void set_result(::CMsgDOTAGuildInviteAccountResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildInviteAccountResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildInviteAccountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildCancelInviteRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildCancelInviteRequest();
  virtual ~CMsgDOTAGuildCancelInviteRequest();

  CMsgDOTAGuildCancelInviteRequest(const CMsgDOTAGuildCancelInviteRequest& from);

  inline CMsgDOTAGuildCancelInviteRequest& operator=(const CMsgDOTAGuildCancelInviteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildCancelInviteRequest& default_instance();

  void Swap(CMsgDOTAGuildCancelInviteRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildCancelInviteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildCancelInviteRequest& from);
  void MergeFrom(const CMsgDOTAGuildCancelInviteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint32 target_account_id = 2;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildCancelInviteRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 target_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildCancelInviteRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildCancelInviteResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildCancelInviteResponse();
  virtual ~CMsgDOTAGuildCancelInviteResponse();

  CMsgDOTAGuildCancelInviteResponse(const CMsgDOTAGuildCancelInviteResponse& from);

  inline CMsgDOTAGuildCancelInviteResponse& operator=(const CMsgDOTAGuildCancelInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildCancelInviteResponse& default_instance();

  void Swap(CMsgDOTAGuildCancelInviteResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildCancelInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildCancelInviteResponse& from);
  void MergeFrom(const CMsgDOTAGuildCancelInviteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildCancelInviteResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAGuildCancelInviteResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAGuildCancelInviteResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_NO_PERMISSION = CMsgDOTAGuildCancelInviteResponse_EResult_ERROR_NO_PERMISSION;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAGuildCancelInviteResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAGuildCancelInviteResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAGuildCancelInviteResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAGuildCancelInviteResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAGuildCancelInviteResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAGuildCancelInviteResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAGuildCancelInviteResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAGuildCancelInviteResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAGuildCancelInviteResponse_EResult result() const;
  inline void set_result(::CMsgDOTAGuildCancelInviteResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildCancelInviteResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildCancelInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildUpdateDetailsRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildUpdateDetailsRequest();
  virtual ~CMsgDOTAGuildUpdateDetailsRequest();

  CMsgDOTAGuildUpdateDetailsRequest(const CMsgDOTAGuildUpdateDetailsRequest& from);

  inline CMsgDOTAGuildUpdateDetailsRequest& operator=(const CMsgDOTAGuildUpdateDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildUpdateDetailsRequest& default_instance();

  void Swap(CMsgDOTAGuildUpdateDetailsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildUpdateDetailsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildUpdateDetailsRequest& from);
  void MergeFrom(const CMsgDOTAGuildUpdateDetailsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint64 logo = 2;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 2;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint64 base_logo = 3;
  inline bool has_base_logo() const;
  inline void clear_base_logo();
  static const int kBaseLogoFieldNumber = 3;
  inline ::google::protobuf::uint64 base_logo() const;
  inline void set_base_logo(::google::protobuf::uint64 value);

  // optional uint64 banner_logo = 4;
  inline bool has_banner_logo() const;
  inline void clear_banner_logo();
  static const int kBannerLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 banner_logo() const;
  inline void set_banner_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildUpdateDetailsRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_base_logo();
  inline void clear_has_base_logo();
  inline void set_has_banner_logo();
  inline void clear_has_banner_logo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint64 base_logo_;
  ::google::protobuf::uint64 banner_logo_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildUpdateDetailsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildUpdateDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildUpdateDetailsResponse();
  virtual ~CMsgDOTAGuildUpdateDetailsResponse();

  CMsgDOTAGuildUpdateDetailsResponse(const CMsgDOTAGuildUpdateDetailsResponse& from);

  inline CMsgDOTAGuildUpdateDetailsResponse& operator=(const CMsgDOTAGuildUpdateDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildUpdateDetailsResponse& default_instance();

  void Swap(CMsgDOTAGuildUpdateDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildUpdateDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildUpdateDetailsResponse& from);
  void MergeFrom(const CMsgDOTAGuildUpdateDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildUpdateDetailsResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAGuildUpdateDetailsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAGuildUpdateDetailsResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_NO_PERMISSION = CMsgDOTAGuildUpdateDetailsResponse_EResult_ERROR_NO_PERMISSION;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAGuildUpdateDetailsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAGuildUpdateDetailsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAGuildUpdateDetailsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAGuildUpdateDetailsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAGuildUpdateDetailsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAGuildUpdateDetailsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAGuildUpdateDetailsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAGuildUpdateDetailsResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAGuildUpdateDetailsResponse_EResult result() const;
  inline void set_result(::CMsgDOTAGuildUpdateDetailsResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildUpdateDetailsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildUpdateDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGCToGCUpdateOpenGuildPartyRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGCToGCUpdateOpenGuildPartyRequest();
  virtual ~CMsgDOTAGCToGCUpdateOpenGuildPartyRequest();

  CMsgDOTAGCToGCUpdateOpenGuildPartyRequest(const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& from);

  inline CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& operator=(const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& default_instance();

  void Swap(CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& from);
  void MergeFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional uint32 guild_id = 2;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // repeated uint32 member_account_ids = 3;
  inline int member_account_ids_size() const;
  inline void clear_member_account_ids();
  static const int kMemberAccountIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 member_account_ids(int index) const;
  inline void set_member_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_member_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      member_account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_member_account_ids();

  // optional string description = 4;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 4;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > member_account_ids_;
  ::std::string* description_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGCToGCUpdateOpenGuildPartyResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGCToGCUpdateOpenGuildPartyResponse();
  virtual ~CMsgDOTAGCToGCUpdateOpenGuildPartyResponse();

  CMsgDOTAGCToGCUpdateOpenGuildPartyResponse(const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& from);

  inline CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& operator=(const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& default_instance();

  void Swap(CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& from);
  void MergeFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool maintain_association = 1;
  inline bool has_maintain_association() const;
  inline void clear_maintain_association();
  static const int kMaintainAssociationFieldNumber = 1;
  inline bool maintain_association() const;
  inline void set_maintain_association(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
 private:
  inline void set_has_maintain_association();
  inline void clear_has_maintain_association();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool maintain_association_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGCToGCDestroyOpenGuildPartyRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGCToGCDestroyOpenGuildPartyRequest();
  virtual ~CMsgDOTAGCToGCDestroyOpenGuildPartyRequest();

  CMsgDOTAGCToGCDestroyOpenGuildPartyRequest(const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& from);

  inline CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& operator=(const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& default_instance();

  void Swap(CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& from);
  void MergeFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional uint32 guild_id = 2;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGCToGCDestroyOpenGuildPartyResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGCToGCDestroyOpenGuildPartyResponse();
  virtual ~CMsgDOTAGCToGCDestroyOpenGuildPartyResponse();

  CMsgDOTAGCToGCDestroyOpenGuildPartyResponse(const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& from);

  inline CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& operator=(const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& default_instance();

  void Swap(CMsgDOTAGCToGCDestroyOpenGuildPartyResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGCToGCDestroyOpenGuildPartyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& from);
  void MergeFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGCToGCDestroyOpenGuildPartyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartySetOpenGuildRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartySetOpenGuildRequest();
  virtual ~CMsgDOTAPartySetOpenGuildRequest();

  CMsgDOTAPartySetOpenGuildRequest(const CMsgDOTAPartySetOpenGuildRequest& from);

  inline CMsgDOTAPartySetOpenGuildRequest& operator=(const CMsgDOTAPartySetOpenGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartySetOpenGuildRequest& default_instance();

  void Swap(CMsgDOTAPartySetOpenGuildRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartySetOpenGuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartySetOpenGuildRequest& from);
  void MergeFrom(const CMsgDOTAPartySetOpenGuildRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartySetOpenGuildRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* description_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartySetOpenGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartySetOpenGuildResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartySetOpenGuildResponse();
  virtual ~CMsgDOTAPartySetOpenGuildResponse();

  CMsgDOTAPartySetOpenGuildResponse(const CMsgDOTAPartySetOpenGuildResponse& from);

  inline CMsgDOTAPartySetOpenGuildResponse& operator=(const CMsgDOTAPartySetOpenGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartySetOpenGuildResponse& default_instance();

  void Swap(CMsgDOTAPartySetOpenGuildResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartySetOpenGuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartySetOpenGuildResponse& from);
  void MergeFrom(const CMsgDOTAPartySetOpenGuildResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPartySetOpenGuildResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAPartySetOpenGuildResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAPartySetOpenGuildResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAPartySetOpenGuildResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAPartySetOpenGuildResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAPartySetOpenGuildResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAPartySetOpenGuildResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAPartySetOpenGuildResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAPartySetOpenGuildResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAPartySetOpenGuildResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAPartySetOpenGuildResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAPartySetOpenGuildResponse_EResult result() const;
  inline void set_result(::CMsgDOTAPartySetOpenGuildResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartySetOpenGuildResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartySetOpenGuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAJoinOpenGuildPartyRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAJoinOpenGuildPartyRequest();
  virtual ~CMsgDOTAJoinOpenGuildPartyRequest();

  CMsgDOTAJoinOpenGuildPartyRequest(const CMsgDOTAJoinOpenGuildPartyRequest& from);

  inline CMsgDOTAJoinOpenGuildPartyRequest& operator=(const CMsgDOTAJoinOpenGuildPartyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAJoinOpenGuildPartyRequest& default_instance();

  void Swap(CMsgDOTAJoinOpenGuildPartyRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAJoinOpenGuildPartyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAJoinOpenGuildPartyRequest& from);
  void MergeFrom(const CMsgDOTAJoinOpenGuildPartyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAJoinOpenGuildPartyRequest)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAJoinOpenGuildPartyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAJoinOpenGuildPartyResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAJoinOpenGuildPartyResponse();
  virtual ~CMsgDOTAJoinOpenGuildPartyResponse();

  CMsgDOTAJoinOpenGuildPartyResponse(const CMsgDOTAJoinOpenGuildPartyResponse& from);

  inline CMsgDOTAJoinOpenGuildPartyResponse& operator=(const CMsgDOTAJoinOpenGuildPartyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAJoinOpenGuildPartyResponse& default_instance();

  void Swap(CMsgDOTAJoinOpenGuildPartyResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAJoinOpenGuildPartyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAJoinOpenGuildPartyResponse& from);
  void MergeFrom(const CMsgDOTAJoinOpenGuildPartyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAJoinOpenGuildPartyResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAJoinOpenGuildPartyResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAJoinOpenGuildPartyResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAJoinOpenGuildPartyResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAJoinOpenGuildPartyResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAJoinOpenGuildPartyResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAJoinOpenGuildPartyResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAJoinOpenGuildPartyResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAJoinOpenGuildPartyResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAJoinOpenGuildPartyResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAJoinOpenGuildPartyResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAJoinOpenGuildPartyResponse_EResult result() const;
  inline void set_result(::CMsgDOTAJoinOpenGuildPartyResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAJoinOpenGuildPartyResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAJoinOpenGuildPartyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildOpenPartyRefresh_OpenParty : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildOpenPartyRefresh_OpenParty();
  virtual ~CMsgDOTAGuildOpenPartyRefresh_OpenParty();

  CMsgDOTAGuildOpenPartyRefresh_OpenParty(const CMsgDOTAGuildOpenPartyRefresh_OpenParty& from);

  inline CMsgDOTAGuildOpenPartyRefresh_OpenParty& operator=(const CMsgDOTAGuildOpenPartyRefresh_OpenParty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildOpenPartyRefresh_OpenParty& default_instance();

  void Swap(CMsgDOTAGuildOpenPartyRefresh_OpenParty* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildOpenPartyRefresh_OpenParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildOpenPartyRefresh_OpenParty& from);
  void MergeFrom(const CMsgDOTAGuildOpenPartyRefresh_OpenParty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // repeated uint32 member_account_ids = 2;
  inline int member_account_ids_size() const;
  inline void clear_member_account_ids();
  static const int kMemberAccountIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 member_account_ids(int index) const;
  inline void set_member_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_member_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      member_account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_member_account_ids();

  // optional uint32 time_created = 3;
  inline bool has_time_created() const;
  inline void clear_time_created();
  static const int kTimeCreatedFieldNumber = 3;
  inline ::google::protobuf::uint32 time_created() const;
  inline void set_time_created(::google::protobuf::uint32 value);

  // optional string description = 4;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 4;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildOpenPartyRefresh.OpenParty)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_time_created();
  inline void clear_has_time_created();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > member_account_ids_;
  ::std::string* description_;
  ::google::protobuf::uint32 time_created_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildOpenPartyRefresh_OpenParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildOpenPartyRefresh : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildOpenPartyRefresh();
  virtual ~CMsgDOTAGuildOpenPartyRefresh();

  CMsgDOTAGuildOpenPartyRefresh(const CMsgDOTAGuildOpenPartyRefresh& from);

  inline CMsgDOTAGuildOpenPartyRefresh& operator=(const CMsgDOTAGuildOpenPartyRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildOpenPartyRefresh& default_instance();

  void Swap(CMsgDOTAGuildOpenPartyRefresh* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildOpenPartyRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildOpenPartyRefresh& from);
  void MergeFrom(const CMsgDOTAGuildOpenPartyRefresh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildOpenPartyRefresh_OpenParty OpenParty;

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAGuildOpenPartyRefresh.OpenParty open_parties = 2;
  inline int open_parties_size() const;
  inline void clear_open_parties();
  static const int kOpenPartiesFieldNumber = 2;
  inline const ::CMsgDOTAGuildOpenPartyRefresh_OpenParty& open_parties(int index) const;
  inline ::CMsgDOTAGuildOpenPartyRefresh_OpenParty* mutable_open_parties(int index);
  inline ::CMsgDOTAGuildOpenPartyRefresh_OpenParty* add_open_parties();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildOpenPartyRefresh_OpenParty >&
      open_parties() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildOpenPartyRefresh_OpenParty >*
      mutable_open_parties();

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildOpenPartyRefresh)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildOpenPartyRefresh_OpenParty > open_parties_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildOpenPartyRefresh* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestGuildData : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestGuildData();
  virtual ~CMsgDOTARequestGuildData();

  CMsgDOTARequestGuildData(const CMsgDOTARequestGuildData& from);

  inline CMsgDOTARequestGuildData& operator=(const CMsgDOTARequestGuildData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestGuildData& default_instance();

  void Swap(CMsgDOTARequestGuildData* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestGuildData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestGuildData& from);
  void MergeFrom(const CMsgDOTARequestGuildData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestGuildData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestGuildData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildInviteData : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildInviteData();
  virtual ~CMsgDOTAGuildInviteData();

  CMsgDOTAGuildInviteData(const CMsgDOTAGuildInviteData& from);

  inline CMsgDOTAGuildInviteData& operator=(const CMsgDOTAGuildInviteData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildInviteData& default_instance();

  void Swap(CMsgDOTAGuildInviteData* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildInviteData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildInviteData& from);
  void MergeFrom(const CMsgDOTAGuildInviteData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool invited_to_guild = 1;
  inline bool has_invited_to_guild() const;
  inline void clear_invited_to_guild();
  static const int kInvitedToGuildFieldNumber = 1;
  inline bool invited_to_guild() const;
  inline void set_invited_to_guild(bool value);

  // optional uint32 guild_id = 2;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional string guild_name = 3;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 3;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional string guild_tag = 4;
  inline bool has_guild_tag() const;
  inline void clear_guild_tag();
  static const int kGuildTagFieldNumber = 4;
  inline const ::std::string& guild_tag() const;
  inline void set_guild_tag(const ::std::string& value);
  inline void set_guild_tag(const char* value);
  inline void set_guild_tag(const char* value, size_t size);
  inline ::std::string* mutable_guild_tag();
  inline ::std::string* release_guild_tag();
  inline void set_allocated_guild_tag(::std::string* guild_tag);

  // optional uint64 logo = 5;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 5;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // optional uint32 inviter = 6;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 6;
  inline ::google::protobuf::uint32 inviter() const;
  inline void set_inviter(::google::protobuf::uint32 value);

  // optional string inviter_name = 7;
  inline bool has_inviter_name() const;
  inline void clear_inviter_name();
  static const int kInviterNameFieldNumber = 7;
  inline const ::std::string& inviter_name() const;
  inline void set_inviter_name(const ::std::string& value);
  inline void set_inviter_name(const char* value);
  inline void set_inviter_name(const char* value, size_t size);
  inline ::std::string* mutable_inviter_name();
  inline ::std::string* release_inviter_name();
  inline void set_allocated_inviter_name(::std::string* inviter_name);

  // optional uint32 member_count = 8;
  inline bool has_member_count() const;
  inline void clear_member_count();
  static const int kMemberCountFieldNumber = 8;
  inline ::google::protobuf::uint32 member_count() const;
  inline void set_member_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildInviteData)
 private:
  inline void set_has_invited_to_guild();
  inline void clear_has_invited_to_guild();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_guild_tag();
  inline void clear_has_guild_tag();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_inviter();
  inline void clear_has_inviter();
  inline void set_has_inviter_name();
  inline void clear_has_inviter_name();
  inline void set_has_member_count();
  inline void clear_has_member_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool invited_to_guild_;
  ::google::protobuf::uint32 guild_id_;
  ::std::string* guild_name_;
  ::std::string* guild_tag_;
  ::google::protobuf::uint64 logo_;
  ::std::string* inviter_name_;
  ::google::protobuf::uint32 inviter_;
  ::google::protobuf::uint32 member_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildInviteData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildUpdateMessage : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildUpdateMessage();
  virtual ~CMsgDOTAGuildUpdateMessage();

  CMsgDOTAGuildUpdateMessage(const CMsgDOTAGuildUpdateMessage& from);

  inline CMsgDOTAGuildUpdateMessage& operator=(const CMsgDOTAGuildUpdateMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildUpdateMessage& default_instance();

  void Swap(CMsgDOTAGuildUpdateMessage* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildUpdateMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildUpdateMessage& from);
  void MergeFrom(const CMsgDOTAGuildUpdateMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional uint32 guild_id = 2;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildUpdateMessage)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildUpdateMessage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildEditLogoRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildEditLogoRequest();
  virtual ~CMsgDOTAGuildEditLogoRequest();

  CMsgDOTAGuildEditLogoRequest(const CMsgDOTAGuildEditLogoRequest& from);

  inline CMsgDOTAGuildEditLogoRequest& operator=(const CMsgDOTAGuildEditLogoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildEditLogoRequest& default_instance();

  void Swap(CMsgDOTAGuildEditLogoRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildEditLogoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildEditLogoRequest& from);
  void MergeFrom(const CMsgDOTAGuildEditLogoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint64 logo = 2;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 2;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildEditLogoRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_logo();
  inline void clear_has_logo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint32 guild_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildEditLogoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGuildEditLogoResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGuildEditLogoResponse();
  virtual ~CMsgDOTAGuildEditLogoResponse();

  CMsgDOTAGuildEditLogoResponse(const CMsgDOTAGuildEditLogoResponse& from);

  inline CMsgDOTAGuildEditLogoResponse& operator=(const CMsgDOTAGuildEditLogoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGuildEditLogoResponse& default_instance();

  void Swap(CMsgDOTAGuildEditLogoResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGuildEditLogoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGuildEditLogoResponse& from);
  void MergeFrom(const CMsgDOTAGuildEditLogoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGuildEditLogoResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAGuildEditLogoResponse_EResult_SUCCESS;
  static const EResult NO_PERMISSION = CMsgDOTAGuildEditLogoResponse_EResult_NO_PERMISSION;
  static const EResult LOGO_UPLOAD_FAILED = CMsgDOTAGuildEditLogoResponse_EResult_LOGO_UPLOAD_FAILED;
  static const EResult UNSPECIFIED_ERROR = CMsgDOTAGuildEditLogoResponse_EResult_UNSPECIFIED_ERROR;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAGuildEditLogoResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAGuildEditLogoResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAGuildEditLogoResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAGuildEditLogoResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAGuildEditLogoResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAGuildEditLogoResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAGuildEditLogoResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional .CMsgDOTAGuildEditLogoResponse.EResult result = 2 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::CMsgDOTAGuildEditLogoResponse_EResult result() const;
  inline void set_result(::CMsgDOTAGuildEditLogoResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGuildEditLogoResponse)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guild_id_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGuildEditLogoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportsRemainingRequest();
  virtual ~CMsgDOTAReportsRemainingRequest();

  CMsgDOTAReportsRemainingRequest(const CMsgDOTAReportsRemainingRequest& from);

  inline CMsgDOTAReportsRemainingRequest& operator=(const CMsgDOTAReportsRemainingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportsRemainingRequest& default_instance();

  void Swap(CMsgDOTAReportsRemainingRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportsRemainingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportsRemainingRequest& from);
  void MergeFrom(const CMsgDOTAReportsRemainingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportsRemainingRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportsRemainingRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportsRemainingResponse();
  virtual ~CMsgDOTAReportsRemainingResponse();

  CMsgDOTAReportsRemainingResponse(const CMsgDOTAReportsRemainingResponse& from);

  inline CMsgDOTAReportsRemainingResponse& operator=(const CMsgDOTAReportsRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportsRemainingResponse& default_instance();

  void Swap(CMsgDOTAReportsRemainingResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportsRemainingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportsRemainingResponse& from);
  void MergeFrom(const CMsgDOTAReportsRemainingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_positive_reports_remaining = 1;
  inline bool has_num_positive_reports_remaining() const;
  inline void clear_num_positive_reports_remaining();
  static const int kNumPositiveReportsRemainingFieldNumber = 1;
  inline ::google::protobuf::uint32 num_positive_reports_remaining() const;
  inline void set_num_positive_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_remaining = 2;
  inline bool has_num_negative_reports_remaining() const;
  inline void clear_num_negative_reports_remaining();
  static const int kNumNegativeReportsRemainingFieldNumber = 2;
  inline ::google::protobuf::uint32 num_negative_reports_remaining() const;
  inline void set_num_negative_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_positive_reports_total = 3;
  inline bool has_num_positive_reports_total() const;
  inline void clear_num_positive_reports_total();
  static const int kNumPositiveReportsTotalFieldNumber = 3;
  inline ::google::protobuf::uint32 num_positive_reports_total() const;
  inline void set_num_positive_reports_total(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_total = 4;
  inline bool has_num_negative_reports_total() const;
  inline void clear_num_negative_reports_total();
  static const int kNumNegativeReportsTotalFieldNumber = 4;
  inline ::google::protobuf::uint32 num_negative_reports_total() const;
  inline void set_num_negative_reports_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportsRemainingResponse)
 private:
  inline void set_has_num_positive_reports_remaining();
  inline void clear_has_num_positive_reports_remaining();
  inline void set_has_num_negative_reports_remaining();
  inline void clear_has_num_negative_reports_remaining();
  inline void set_has_num_positive_reports_total();
  inline void clear_has_num_positive_reports_total();
  inline void set_has_num_negative_reports_total();
  inline void clear_has_num_negative_reports_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_positive_reports_remaining_;
  ::google::protobuf::uint32 num_negative_reports_remaining_;
  ::google::protobuf::uint32 num_positive_reports_total_;
  ::google::protobuf::uint32 num_negative_reports_total_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportsRemainingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReport : public ::google::protobuf::Message {
 public:
  CMsgDOTASubmitPlayerReport();
  virtual ~CMsgDOTASubmitPlayerReport();

  CMsgDOTASubmitPlayerReport(const CMsgDOTASubmitPlayerReport& from);

  inline CMsgDOTASubmitPlayerReport& operator=(const CMsgDOTASubmitPlayerReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitPlayerReport& default_instance();

  void Swap(CMsgDOTASubmitPlayerReport* other);

  // implements Message ----------------------------------------------

  CMsgDOTASubmitPlayerReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASubmitPlayerReport& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  inline bool has_report_flags() const;
  inline void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 report_flags() const;
  inline void set_report_flags(::google::protobuf::uint32 value);

  // optional string comment = 5;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 5;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgDOTASubmitPlayerReport)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_report_flags();
  inline void clear_has_report_flags();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASubmitPlayerReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReportResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTASubmitPlayerReportResponse();
  virtual ~CMsgDOTASubmitPlayerReportResponse();

  CMsgDOTASubmitPlayerReportResponse(const CMsgDOTASubmitPlayerReportResponse& from);

  inline CMsgDOTASubmitPlayerReportResponse& operator=(const CMsgDOTASubmitPlayerReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitPlayerReportResponse& default_instance();

  void Swap(CMsgDOTASubmitPlayerReportResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTASubmitPlayerReportResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  inline bool has_report_flags() const;
  inline void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 report_flags() const;
  inline void set_report_flags(::google::protobuf::uint32 value);

  // optional uint32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASubmitPlayerReportResponse)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_report_flags();
  inline void clear_has_report_flags();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASubmitPlayerReportResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportCountsRequest();
  virtual ~CMsgDOTAReportCountsRequest();

  CMsgDOTAReportCountsRequest(const CMsgDOTAReportCountsRequest& from);

  inline CMsgDOTAReportCountsRequest& operator=(const CMsgDOTAReportCountsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportCountsRequest& default_instance();

  void Swap(CMsgDOTAReportCountsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportCountsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportCountsRequest& from);
  void MergeFrom(const CMsgDOTAReportCountsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportCountsRequest)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportCountsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAReportCountsResponse();
  virtual ~CMsgDOTAReportCountsResponse();

  CMsgDOTAReportCountsResponse(const CMsgDOTAReportCountsResponse& from);

  inline CMsgDOTAReportCountsResponse& operator=(const CMsgDOTAReportCountsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportCountsResponse& default_instance();

  void Swap(CMsgDOTAReportCountsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAReportCountsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAReportCountsResponse& from);
  void MergeFrom(const CMsgDOTAReportCountsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 leadership_count = 2;
  inline bool has_leadership_count() const;
  inline void clear_leadership_count();
  static const int kLeadershipCountFieldNumber = 2;
  inline ::google::protobuf::uint32 leadership_count() const;
  inline void set_leadership_count(::google::protobuf::uint32 value);

  // optional uint32 teaching_count = 3;
  inline bool has_teaching_count() const;
  inline void clear_teaching_count();
  static const int kTeachingCountFieldNumber = 3;
  inline ::google::protobuf::uint32 teaching_count() const;
  inline void set_teaching_count(::google::protobuf::uint32 value);

  // optional uint32 friendly_count = 4;
  inline bool has_friendly_count() const;
  inline void clear_friendly_count();
  static const int kFriendlyCountFieldNumber = 4;
  inline ::google::protobuf::uint32 friendly_count() const;
  inline void set_friendly_count(::google::protobuf::uint32 value);

  // optional uint32 forgiving_count = 5;
  inline bool has_forgiving_count() const;
  inline void clear_forgiving_count();
  static const int kForgivingCountFieldNumber = 5;
  inline ::google::protobuf::uint32 forgiving_count() const;
  inline void set_forgiving_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAReportCountsResponse)
 private:
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_leadership_count();
  inline void clear_has_leadership_count();
  inline void set_has_teaching_count();
  inline void clear_has_teaching_count();
  inline void set_has_friendly_count();
  inline void clear_has_friendly_count();
  inline void set_has_forgiving_count();
  inline void clear_has_forgiving_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 leadership_count_;
  ::google::protobuf::uint32 teaching_count_;
  ::google::protobuf::uint32 friendly_count_;
  ::google::protobuf::uint32 forgiving_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAReportCountsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAKickedFromMatchmakingQueue : public ::google::protobuf::Message {
 public:
  CMsgDOTAKickedFromMatchmakingQueue();
  virtual ~CMsgDOTAKickedFromMatchmakingQueue();

  CMsgDOTAKickedFromMatchmakingQueue(const CMsgDOTAKickedFromMatchmakingQueue& from);

  inline CMsgDOTAKickedFromMatchmakingQueue& operator=(const CMsgDOTAKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAKickedFromMatchmakingQueue& default_instance();

  void Swap(CMsgDOTAKickedFromMatchmakingQueue* other);

  // implements Message ----------------------------------------------

  CMsgDOTAKickedFromMatchmakingQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  inline ::MatchType match_type() const;
  inline void set_match_type(::MatchType value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAKickedFromMatchmakingQueue)
 private:
  inline void set_has_match_type();
  inline void clear_has_match_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int match_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAKickedFromMatchmakingQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGames : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestSaveGames();
  virtual ~CMsgDOTARequestSaveGames();

  CMsgDOTARequestSaveGames(const CMsgDOTARequestSaveGames& from);

  inline CMsgDOTARequestSaveGames& operator=(const CMsgDOTARequestSaveGames& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestSaveGames& default_instance();

  void Swap(CMsgDOTARequestSaveGames* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestSaveGames* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestSaveGames& from);
  void MergeFrom(const CMsgDOTARequestSaveGames& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestSaveGames)
 private:
  inline void set_has_server_region();
  inline void clear_has_server_region();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_region_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestSaveGames* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGamesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestSaveGamesResponse();
  virtual ~CMsgDOTARequestSaveGamesResponse();

  CMsgDOTARequestSaveGamesResponse(const CMsgDOTARequestSaveGamesResponse& from);

  inline CMsgDOTARequestSaveGamesResponse& operator=(const CMsgDOTARequestSaveGamesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestSaveGamesResponse& default_instance();

  void Swap(CMsgDOTARequestSaveGamesResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARequestSaveGamesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestSaveGamesResponse& from);
  void MergeFrom(const CMsgDOTARequestSaveGamesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // repeated .CDOTASaveGame save_games = 2;
  inline int save_games_size() const;
  inline void clear_save_games();
  static const int kSaveGamesFieldNumber = 2;
  inline const ::CDOTASaveGame& save_games(int index) const;
  inline ::CDOTASaveGame* mutable_save_games(int index);
  inline ::CDOTASaveGame* add_save_games();
  inline const ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >&
      save_games() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >*
      mutable_save_games();

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestSaveGamesResponse)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame > save_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestSaveGamesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgWatchGame : public ::google::protobuf::Message {
 public:
  CMsgWatchGame();
  virtual ~CMsgWatchGame();

  CMsgWatchGame(const CMsgWatchGame& from);

  inline CMsgWatchGame& operator=(const CMsgWatchGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgWatchGame& default_instance();

  void Swap(CMsgWatchGame* other);

  // implements Message ----------------------------------------------

  CMsgWatchGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgWatchGame& from);
  void MergeFrom(const CMsgWatchGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 server_steamid = 1;
  inline bool has_server_steamid() const;
  inline void clear_server_steamid();
  static const int kServerSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 server_steamid() const;
  inline void set_server_steamid(::google::protobuf::uint64 value);

  // optional uint32 client_version = 2;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional fixed64 watch_server_steamid = 3;
  inline bool has_watch_server_steamid() const;
  inline void clear_watch_server_steamid();
  static const int kWatchServerSteamidFieldNumber = 3;
  inline ::google::protobuf::uint64 watch_server_steamid() const;
  inline void set_watch_server_steamid(::google::protobuf::uint64 value);

  // optional uint64 lobby_id = 4;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgWatchGame)
 private:
  inline void set_has_server_steamid();
  inline void clear_has_server_steamid();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_watch_server_steamid();
  inline void clear_has_watch_server_steamid();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 server_steamid_;
  ::google::protobuf::uint64 watch_server_steamid_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgWatchGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCancelWatchGame : public ::google::protobuf::Message {
 public:
  CMsgCancelWatchGame();
  virtual ~CMsgCancelWatchGame();

  CMsgCancelWatchGame(const CMsgCancelWatchGame& from);

  inline CMsgCancelWatchGame& operator=(const CMsgCancelWatchGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCancelWatchGame& default_instance();

  void Swap(CMsgCancelWatchGame* other);

  // implements Message ----------------------------------------------

  CMsgCancelWatchGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCancelWatchGame& from);
  void MergeFrom(const CMsgCancelWatchGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgCancelWatchGame)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgCancelWatchGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgWatchGameResponse : public ::google::protobuf::Message {
 public:
  CMsgWatchGameResponse();
  virtual ~CMsgWatchGameResponse();

  CMsgWatchGameResponse(const CMsgWatchGameResponse& from);

  inline CMsgWatchGameResponse& operator=(const CMsgWatchGameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgWatchGameResponse& default_instance();

  void Swap(CMsgWatchGameResponse* other);

  // implements Message ----------------------------------------------

  CMsgWatchGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgWatchGameResponse& from);
  void MergeFrom(const CMsgWatchGameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgWatchGameResponse_WatchGameResult WatchGameResult;
  static const WatchGameResult PENDING = CMsgWatchGameResponse_WatchGameResult_PENDING;
  static const WatchGameResult READY = CMsgWatchGameResponse_WatchGameResult_READY;
  static const WatchGameResult GAMESERVERNOTFOUND = CMsgWatchGameResponse_WatchGameResult_GAMESERVERNOTFOUND;
  static const WatchGameResult UNAVAILABLE = CMsgWatchGameResponse_WatchGameResult_UNAVAILABLE;
  static const WatchGameResult CANCELLED = CMsgWatchGameResponse_WatchGameResult_CANCELLED;
  static const WatchGameResult INCOMPATIBLEVERSION = CMsgWatchGameResponse_WatchGameResult_INCOMPATIBLEVERSION;
  static const WatchGameResult MISSINGLEAGUESUBSCRIPTION = CMsgWatchGameResponse_WatchGameResult_MISSINGLEAGUESUBSCRIPTION;
  static const WatchGameResult LOBBYNOTFOUND = CMsgWatchGameResponse_WatchGameResult_LOBBYNOTFOUND;
  static inline bool WatchGameResult_IsValid(int value) {
    return CMsgWatchGameResponse_WatchGameResult_IsValid(value);
  }
  static const WatchGameResult WatchGameResult_MIN =
    CMsgWatchGameResponse_WatchGameResult_WatchGameResult_MIN;
  static const WatchGameResult WatchGameResult_MAX =
    CMsgWatchGameResponse_WatchGameResult_WatchGameResult_MAX;
  static const int WatchGameResult_ARRAYSIZE =
    CMsgWatchGameResponse_WatchGameResult_WatchGameResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WatchGameResult_descriptor() {
    return CMsgWatchGameResponse_WatchGameResult_descriptor();
  }
  static inline const ::std::string& WatchGameResult_Name(WatchGameResult value) {
    return CMsgWatchGameResponse_WatchGameResult_Name(value);
  }
  static inline bool WatchGameResult_Parse(const ::std::string& name,
      WatchGameResult* value) {
    return CMsgWatchGameResponse_WatchGameResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgWatchGameResponse.WatchGameResult watch_game_result = 1 [default = PENDING];
  inline bool has_watch_game_result() const;
  inline void clear_watch_game_result();
  static const int kWatchGameResultFieldNumber = 1;
  inline ::CMsgWatchGameResponse_WatchGameResult watch_game_result() const;
  inline void set_watch_game_result(::CMsgWatchGameResponse_WatchGameResult value);

  // optional uint32 source_tv_public_addr = 2;
  inline bool has_source_tv_public_addr() const;
  inline void clear_source_tv_public_addr();
  static const int kSourceTvPublicAddrFieldNumber = 2;
  inline ::google::protobuf::uint32 source_tv_public_addr() const;
  inline void set_source_tv_public_addr(::google::protobuf::uint32 value);

  // optional uint32 source_tv_private_addr = 3;
  inline bool has_source_tv_private_addr() const;
  inline void clear_source_tv_private_addr();
  static const int kSourceTvPrivateAddrFieldNumber = 3;
  inline ::google::protobuf::uint32 source_tv_private_addr() const;
  inline void set_source_tv_private_addr(::google::protobuf::uint32 value);

  // optional uint32 source_tv_port = 4;
  inline bool has_source_tv_port() const;
  inline void clear_source_tv_port();
  static const int kSourceTvPortFieldNumber = 4;
  inline ::google::protobuf::uint32 source_tv_port() const;
  inline void set_source_tv_port(::google::protobuf::uint32 value);

  // optional fixed64 game_server_steamid = 5;
  inline bool has_game_server_steamid() const;
  inline void clear_game_server_steamid();
  static const int kGameServerSteamidFieldNumber = 5;
  inline ::google::protobuf::uint64 game_server_steamid() const;
  inline void set_game_server_steamid(::google::protobuf::uint64 value);

  // optional fixed64 watch_server_steamid = 6;
  inline bool has_watch_server_steamid() const;
  inline void clear_watch_server_steamid();
  static const int kWatchServerSteamidFieldNumber = 6;
  inline ::google::protobuf::uint64 watch_server_steamid() const;
  inline void set_watch_server_steamid(::google::protobuf::uint64 value);

  // optional fixed64 watch_tv_unique_secret_code = 7;
  inline bool has_watch_tv_unique_secret_code() const;
  inline void clear_watch_tv_unique_secret_code();
  static const int kWatchTvUniqueSecretCodeFieldNumber = 7;
  inline ::google::protobuf::uint64 watch_tv_unique_secret_code() const;
  inline void set_watch_tv_unique_secret_code(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgWatchGameResponse)
 private:
  inline void set_has_watch_game_result();
  inline void clear_has_watch_game_result();
  inline void set_has_source_tv_public_addr();
  inline void clear_has_source_tv_public_addr();
  inline void set_has_source_tv_private_addr();
  inline void clear_has_source_tv_private_addr();
  inline void set_has_source_tv_port();
  inline void clear_has_source_tv_port();
  inline void set_has_game_server_steamid();
  inline void clear_has_game_server_steamid();
  inline void set_has_watch_server_steamid();
  inline void clear_has_watch_server_steamid();
  inline void set_has_watch_tv_unique_secret_code();
  inline void clear_has_watch_tv_unique_secret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int watch_game_result_;
  ::google::protobuf::uint32 source_tv_public_addr_;
  ::google::protobuf::uint32 source_tv_private_addr_;
  ::google::protobuf::uint32 source_tv_port_;
  ::google::protobuf::uint64 game_server_steamid_;
  ::google::protobuf::uint64 watch_server_steamid_;
  ::google::protobuf::uint64 watch_tv_unique_secret_code_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgWatchGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyLeaderWatchGamePrompt : public ::google::protobuf::Message {
 public:
  CMsgPartyLeaderWatchGamePrompt();
  virtual ~CMsgPartyLeaderWatchGamePrompt();

  CMsgPartyLeaderWatchGamePrompt(const CMsgPartyLeaderWatchGamePrompt& from);

  inline CMsgPartyLeaderWatchGamePrompt& operator=(const CMsgPartyLeaderWatchGamePrompt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyLeaderWatchGamePrompt& default_instance();

  void Swap(CMsgPartyLeaderWatchGamePrompt* other);

  // implements Message ----------------------------------------------

  CMsgPartyLeaderWatchGamePrompt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyLeaderWatchGamePrompt& from);
  void MergeFrom(const CMsgPartyLeaderWatchGamePrompt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 game_server_steamid = 5;
  inline bool has_game_server_steamid() const;
  inline void clear_game_server_steamid();
  static const int kGameServerSteamidFieldNumber = 5;
  inline ::google::protobuf::uint64 game_server_steamid() const;
  inline void set_game_server_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPartyLeaderWatchGamePrompt)
 private:
  inline void set_has_game_server_steamid();
  inline void clear_has_game_server_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 game_server_steamid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyLeaderWatchGamePrompt* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsRequest : public ::google::protobuf::Message {
 public:
  CMsgGCMatchDetailsRequest();
  virtual ~CMsgGCMatchDetailsRequest();

  CMsgGCMatchDetailsRequest(const CMsgGCMatchDetailsRequest& from);

  inline CMsgGCMatchDetailsRequest& operator=(const CMsgGCMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchDetailsRequest& default_instance();

  void Swap(CMsgGCMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCMatchDetailsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchDetailsRequest& from);
  void MergeFrom(const CMsgGCMatchDetailsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMatchDetailsRequest)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMatchDetailsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCMatchDetailsResponse();
  virtual ~CMsgGCMatchDetailsResponse();

  CMsgGCMatchDetailsResponse(const CMsgGCMatchDetailsResponse& from);

  inline CMsgGCMatchDetailsResponse& operator=(const CMsgGCMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchDetailsResponse& default_instance();

  void Swap(CMsgGCMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCMatchDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCMatchDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .CMsgDOTAMatch match = 2;
  inline bool has_match() const;
  inline void clear_match();
  static const int kMatchFieldNumber = 2;
  inline const ::CMsgDOTAMatch& match() const;
  inline ::CMsgDOTAMatch* mutable_match();
  inline ::CMsgDOTAMatch* release_match();
  inline void set_allocated_match(::CMsgDOTAMatch* match);

  // optional .DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 3;
  inline ::DOTAMatchVote vote() const;
  inline void set_vote(::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:CMsgGCMatchDetailsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_match();
  inline void clear_has_match();
  inline void set_has_vote();
  inline void clear_has_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 result_;
  int vote_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMatchDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileRequest();
  virtual ~CMsgDOTAProfileRequest();

  CMsgDOTAProfileRequest(const CMsgDOTAProfileRequest& from);

  inline CMsgDOTAProfileRequest& operator=(const CMsgDOTAProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileRequest& default_instance();

  void Swap(CMsgDOTAProfileRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileRequest& from);
  void MergeFrom(const CMsgDOTAProfileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bool request_name = 2;
  inline bool has_request_name() const;
  inline void clear_request_name();
  static const int kRequestNameFieldNumber = 2;
  inline bool request_name() const;
  inline void set_request_name(bool value);

  // optional .ESourceEngine engine = 3 [default = k_ESE_Source1];
  inline bool has_engine() const;
  inline void clear_engine();
  static const int kEngineFieldNumber = 3;
  inline ::ESourceEngine engine() const;
  inline void set_engine(::ESourceEngine value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_request_name();
  inline void clear_has_request_name();
  inline void set_has_engine();
  inline void clear_has_engine();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  bool request_name_;
  int engine_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_PlayedHero : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_PlayedHero();
  virtual ~CMsgDOTAProfileResponse_PlayedHero();

  CMsgDOTAProfileResponse_PlayedHero(const CMsgDOTAProfileResponse_PlayedHero& from);

  inline CMsgDOTAProfileResponse_PlayedHero& operator=(const CMsgDOTAProfileResponse_PlayedHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_PlayedHero& default_instance();

  void Swap(CMsgDOTAProfileResponse_PlayedHero* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_PlayedHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_PlayedHero& from);
  void MergeFrom(const CMsgDOTAProfileResponse_PlayedHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 wins = 2;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 wins() const;
  inline void set_wins(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.PlayedHero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_wins();
  inline void clear_has_wins();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 wins_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_PlayedHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_ShowcaseHero : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_ShowcaseHero();
  virtual ~CMsgDOTAProfileResponse_ShowcaseHero();

  CMsgDOTAProfileResponse_ShowcaseHero(const CMsgDOTAProfileResponse_ShowcaseHero& from);

  inline CMsgDOTAProfileResponse_ShowcaseHero& operator=(const CMsgDOTAProfileResponse_ShowcaseHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_ShowcaseHero& default_instance();

  void Swap(CMsgDOTAProfileResponse_ShowcaseHero* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_ShowcaseHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_ShowcaseHero& from);
  void MergeFrom(const CMsgDOTAProfileResponse_ShowcaseHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // repeated bytes object_data = 2;
  inline int object_data_size() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data(int index) const;
  inline ::std::string* mutable_object_data(int index);
  inline void set_object_data(int index, const ::std::string& value);
  inline void set_object_data(int index, const char* value);
  inline void set_object_data(int index, const void* value, size_t size);
  inline ::std::string* add_object_data();
  inline void add_object_data(const ::std::string& value);
  inline void add_object_data(const char* value);
  inline void add_object_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.ShowcaseHero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_ShowcaseHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_LeaguePass : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_LeaguePass();
  virtual ~CMsgDOTAProfileResponse_LeaguePass();

  CMsgDOTAProfileResponse_LeaguePass(const CMsgDOTAProfileResponse_LeaguePass& from);

  inline CMsgDOTAProfileResponse_LeaguePass& operator=(const CMsgDOTAProfileResponse_LeaguePass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_LeaguePass& default_instance();

  void Swap(CMsgDOTAProfileResponse_LeaguePass* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_LeaguePass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_LeaguePass& from);
  void MergeFrom(const CMsgDOTAProfileResponse_LeaguePass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.LeaguePass)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_item_def();
  inline void clear_has_item_def();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_LeaguePass* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_EventTicket : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_EventTicket();
  virtual ~CMsgDOTAProfileResponse_EventTicket();

  CMsgDOTAProfileResponse_EventTicket(const CMsgDOTAProfileResponse_EventTicket& from);

  inline CMsgDOTAProfileResponse_EventTicket& operator=(const CMsgDOTAProfileResponse_EventTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_EventTicket& default_instance();

  void Swap(CMsgDOTAProfileResponse_EventTicket* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_EventTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_EventTicket& from);
  void MergeFrom(const CMsgDOTAProfileResponse_EventTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.EventTicket)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_EventTicket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_FeaturedItem : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse_FeaturedItem();
  virtual ~CMsgDOTAProfileResponse_FeaturedItem();

  CMsgDOTAProfileResponse_FeaturedItem(const CMsgDOTAProfileResponse_FeaturedItem& from);

  inline CMsgDOTAProfileResponse_FeaturedItem& operator=(const CMsgDOTAProfileResponse_FeaturedItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_FeaturedItem& default_instance();

  void Swap(CMsgDOTAProfileResponse_FeaturedItem* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse_FeaturedItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse_FeaturedItem& from);
  void MergeFrom(const CMsgDOTAProfileResponse_FeaturedItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional bytes object_data = 2;
  inline bool has_object_data() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data() const;
  inline void set_object_data(const ::std::string& value);
  inline void set_object_data(const char* value);
  inline void set_object_data(const void* value, size_t size);
  inline ::std::string* mutable_object_data();
  inline ::std::string* release_object_data();
  inline void set_allocated_object_data(::std::string* object_data);

  // optional uint32 slot_index = 3;
  inline bool has_slot_index() const;
  inline void clear_slot_index();
  static const int kSlotIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 slot_index() const;
  inline void set_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse.FeaturedItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_object_data();
  inline void clear_has_object_data();
  inline void set_has_slot_index();
  inline void clear_has_slot_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::std::string* object_data_;
  ::google::protobuf::uint32 slot_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse_FeaturedItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAProfileResponse();
  virtual ~CMsgDOTAProfileResponse();

  CMsgDOTAProfileResponse(const CMsgDOTAProfileResponse& from);

  inline CMsgDOTAProfileResponse& operator=(const CMsgDOTAProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse& default_instance();

  void Swap(CMsgDOTAProfileResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAProfileResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAProfileResponse& from);
  void MergeFrom(const CMsgDOTAProfileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAProfileResponse_PlayedHero PlayedHero;
  typedef CMsgDOTAProfileResponse_ShowcaseHero ShowcaseHero;
  typedef CMsgDOTAProfileResponse_LeaguePass LeaguePass;
  typedef CMsgDOTAProfileResponse_EventTicket EventTicket;
  typedef CMsgDOTAProfileResponse_FeaturedItem FeaturedItem;

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .CSODOTAGameAccountClient game_account_client = 2;
  inline bool has_game_account_client() const;
  inline void clear_game_account_client();
  static const int kGameAccountClientFieldNumber = 2;
  inline const ::CSODOTAGameAccountClient& game_account_client() const;
  inline ::CSODOTAGameAccountClient* mutable_game_account_client();
  inline ::CSODOTAGameAccountClient* release_game_account_client();
  inline void set_allocated_game_account_client(::CSODOTAGameAccountClient* game_account_client);

  // repeated .CMsgDOTAMatch latest_matches = 3;
  inline int latest_matches_size() const;
  inline void clear_latest_matches();
  static const int kLatestMatchesFieldNumber = 3;
  inline const ::CMsgDOTAMatch& latest_matches(int index) const;
  inline ::CMsgDOTAMatch* mutable_latest_matches(int index);
  inline ::CMsgDOTAMatch* add_latest_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
      latest_matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
      mutable_latest_matches();

  // repeated .CMsgDOTAProfileResponse.PlayedHero heroes = 4;
  inline int heroes_size() const;
  inline void clear_heroes();
  static const int kHeroesFieldNumber = 4;
  inline const ::CMsgDOTAProfileResponse_PlayedHero& heroes(int index) const;
  inline ::CMsgDOTAProfileResponse_PlayedHero* mutable_heroes(int index);
  inline ::CMsgDOTAProfileResponse_PlayedHero* add_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >&
      heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >*
      mutable_heroes();

  // optional string player_name = 5;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 5;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // optional string team_name = 6;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 6;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional string team_tag = 7;
  inline bool has_team_tag() const;
  inline void clear_team_tag();
  static const int kTeamTagFieldNumber = 7;
  inline const ::std::string& team_tag() const;
  inline void set_team_tag(const ::std::string& value);
  inline void set_team_tag(const char* value);
  inline void set_team_tag(const char* value, size_t size);
  inline ::std::string* mutable_team_tag();
  inline ::std::string* release_team_tag();
  inline void set_allocated_team_tag(::std::string* team_tag);

  // optional uint64 team_logo = 8;
  inline bool has_team_logo() const;
  inline void clear_team_logo();
  static const int kTeamLogoFieldNumber = 8;
  inline ::google::protobuf::uint64 team_logo() const;
  inline void set_team_logo(::google::protobuf::uint64 value);

  // optional .CMsgDOTAProfileResponse.ShowcaseHero showcase_hero = 9;
  inline bool has_showcase_hero() const;
  inline void clear_showcase_hero();
  static const int kShowcaseHeroFieldNumber = 9;
  inline const ::CMsgDOTAProfileResponse_ShowcaseHero& showcase_hero() const;
  inline ::CMsgDOTAProfileResponse_ShowcaseHero* mutable_showcase_hero();
  inline ::CMsgDOTAProfileResponse_ShowcaseHero* release_showcase_hero();
  inline void set_allocated_showcase_hero(::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero);

  // repeated .CMsgDOTAProfileResponse.LeaguePass league_passes = 10;
  inline int league_passes_size() const;
  inline void clear_league_passes();
  static const int kLeaguePassesFieldNumber = 10;
  inline const ::CMsgDOTAProfileResponse_LeaguePass& league_passes(int index) const;
  inline ::CMsgDOTAProfileResponse_LeaguePass* mutable_league_passes(int index);
  inline ::CMsgDOTAProfileResponse_LeaguePass* add_league_passes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >&
      league_passes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >*
      mutable_league_passes();

  // repeated .CMsgDOTAProfileResponse.EventTicket event_tickets = 11;
  inline int event_tickets_size() const;
  inline void clear_event_tickets();
  static const int kEventTicketsFieldNumber = 11;
  inline const ::CMsgDOTAProfileResponse_EventTicket& event_tickets(int index) const;
  inline ::CMsgDOTAProfileResponse_EventTicket* mutable_event_tickets(int index);
  inline ::CMsgDOTAProfileResponse_EventTicket* add_event_tickets();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >&
      event_tickets() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >*
      mutable_event_tickets();

  // optional uint32 team_id = 12;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 12;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional bool has_passport = 13;
  inline bool has_has_passport() const;
  inline void clear_has_passport();
  static const int kHasPassportFieldNumber = 13;
  inline bool has_passport() const;
  inline void set_has_passport(bool value);

  // repeated .CMsgDOTAProfileResponse.FeaturedItem featured_items = 14;
  inline int featured_items_size() const;
  inline void clear_featured_items();
  static const int kFeaturedItemsFieldNumber = 14;
  inline const ::CMsgDOTAProfileResponse_FeaturedItem& featured_items(int index) const;
  inline ::CMsgDOTAProfileResponse_FeaturedItem* mutable_featured_items(int index);
  inline ::CMsgDOTAProfileResponse_FeaturedItem* add_featured_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >&
      featured_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >*
      mutable_featured_items();

  // optional uint32 abandon_percent = 15;
  inline bool has_abandon_percent() const;
  inline void clear_abandon_percent();
  static const int kAbandonPercentFieldNumber = 15;
  inline ::google::protobuf::uint32 abandon_percent() const;
  inline void set_abandon_percent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAProfileResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_game_account_client();
  inline void clear_has_game_account_client();
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_team_tag();
  inline void clear_has_team_tag();
  inline void set_has_team_logo();
  inline void clear_has_team_logo();
  inline void set_has_showcase_hero();
  inline void clear_has_showcase_hero();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_has_passport();
  inline void clear_has_has_passport();
  inline void set_has_abandon_percent();
  inline void clear_has_abandon_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CSODOTAGameAccountClient* game_account_client_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch > latest_matches_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero > heroes_;
  ::std::string* player_name_;
  ::std::string* team_name_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 team_id_;
  ::std::string* team_tag_;
  ::google::protobuf::uint64 team_logo_;
  ::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass > league_passes_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket > event_tickets_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem > featured_items_;
  bool has_passport_;
  ::google::protobuf::uint32 abandon_percent_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAProfileResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCSteamProfileRequest : public ::google::protobuf::Message {
 public:
  CMsgGCSteamProfileRequest();
  virtual ~CMsgGCSteamProfileRequest();

  CMsgGCSteamProfileRequest(const CMsgGCSteamProfileRequest& from);

  inline CMsgGCSteamProfileRequest& operator=(const CMsgGCSteamProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSteamProfileRequest& default_instance();

  void Swap(CMsgGCSteamProfileRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCSteamProfileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCSteamProfileRequest& from);
  void MergeFrom(const CMsgGCSteamProfileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCSteamProfileRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCSteamProfileRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCSteamProfileRequestResponse : public ::google::protobuf::Message {
 public:
  CMsgGCSteamProfileRequestResponse();
  virtual ~CMsgGCSteamProfileRequestResponse();

  CMsgGCSteamProfileRequestResponse(const CMsgGCSteamProfileRequestResponse& from);

  inline CMsgGCSteamProfileRequestResponse& operator=(const CMsgGCSteamProfileRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSteamProfileRequestResponse& default_instance();

  void Swap(CMsgGCSteamProfileRequestResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCSteamProfileRequestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCSteamProfileRequestResponse& from);
  void MergeFrom(const CMsgGCSteamProfileRequestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCSteamProfileRequestResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCSteamProfileRequestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAClearNotifySuccessfulReport : public ::google::protobuf::Message {
 public:
  CMsgDOTAClearNotifySuccessfulReport();
  virtual ~CMsgDOTAClearNotifySuccessfulReport();

  CMsgDOTAClearNotifySuccessfulReport(const CMsgDOTAClearNotifySuccessfulReport& from);

  inline CMsgDOTAClearNotifySuccessfulReport& operator=(const CMsgDOTAClearNotifySuccessfulReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClearNotifySuccessfulReport& default_instance();

  void Swap(CMsgDOTAClearNotifySuccessfulReport* other);

  // implements Message ----------------------------------------------

  CMsgDOTAClearNotifySuccessfulReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  void MergeFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAClearNotifySuccessfulReport)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAClearNotifySuccessfulReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome_LocalizationDigest : public ::google::protobuf::Message {
 public:
  CMsgDOTAWelcome_LocalizationDigest();
  virtual ~CMsgDOTAWelcome_LocalizationDigest();

  CMsgDOTAWelcome_LocalizationDigest(const CMsgDOTAWelcome_LocalizationDigest& from);

  inline CMsgDOTAWelcome_LocalizationDigest& operator=(const CMsgDOTAWelcome_LocalizationDigest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome_LocalizationDigest& default_instance();

  void Swap(CMsgDOTAWelcome_LocalizationDigest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAWelcome_LocalizationDigest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAWelcome_LocalizationDigest& from);
  void MergeFrom(const CMsgDOTAWelcome_LocalizationDigest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string context = 1;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline const ::std::string& context() const;
  inline void set_context(const ::std::string& value);
  inline void set_context(const char* value);
  inline void set_context(const char* value, size_t size);
  inline ::std::string* mutable_context();
  inline ::std::string* release_context();
  inline void set_allocated_context(::std::string* context);

  // optional .CMsgSHA1Digest english_language_file_sha1 = 2;
  inline bool has_english_language_file_sha1() const;
  inline void clear_english_language_file_sha1();
  static const int kEnglishLanguageFileSha1FieldNumber = 2;
  inline const ::CMsgSHA1Digest& english_language_file_sha1() const;
  inline ::CMsgSHA1Digest* mutable_english_language_file_sha1();
  inline ::CMsgSHA1Digest* release_english_language_file_sha1();
  inline void set_allocated_english_language_file_sha1(::CMsgSHA1Digest* english_language_file_sha1);

  // optional .CMsgSHA1Digest client_language_file_sha1 = 3;
  inline bool has_client_language_file_sha1() const;
  inline void clear_client_language_file_sha1();
  static const int kClientLanguageFileSha1FieldNumber = 3;
  inline const ::CMsgSHA1Digest& client_language_file_sha1() const;
  inline ::CMsgSHA1Digest* mutable_client_language_file_sha1();
  inline ::CMsgSHA1Digest* release_client_language_file_sha1();
  inline void set_allocated_client_language_file_sha1(::CMsgSHA1Digest* client_language_file_sha1);

  // @@protoc_insertion_point(class_scope:CMsgDOTAWelcome.LocalizationDigest)
 private:
  inline void set_has_context();
  inline void clear_has_context();
  inline void set_has_english_language_file_sha1();
  inline void clear_has_english_language_file_sha1();
  inline void set_has_client_language_file_sha1();
  inline void clear_has_client_language_file_sha1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* context_;
  ::CMsgSHA1Digest* english_language_file_sha1_;
  ::CMsgSHA1Digest* client_language_file_sha1_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAWelcome_LocalizationDigest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome_CExtraMsg : public ::google::protobuf::Message {
 public:
  CMsgDOTAWelcome_CExtraMsg();
  virtual ~CMsgDOTAWelcome_CExtraMsg();

  CMsgDOTAWelcome_CExtraMsg(const CMsgDOTAWelcome_CExtraMsg& from);

  inline CMsgDOTAWelcome_CExtraMsg& operator=(const CMsgDOTAWelcome_CExtraMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome_CExtraMsg& default_instance();

  void Swap(CMsgDOTAWelcome_CExtraMsg* other);

  // implements Message ----------------------------------------------

  CMsgDOTAWelcome_CExtraMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  void MergeFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional bytes contents = 2;
  inline bool has_contents() const;
  inline void clear_contents();
  static const int kContentsFieldNumber = 2;
  inline const ::std::string& contents() const;
  inline void set_contents(const ::std::string& value);
  inline void set_contents(const char* value);
  inline void set_contents(const void* value, size_t size);
  inline ::std::string* mutable_contents();
  inline ::std::string* release_contents();
  inline void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:CMsgDOTAWelcome.CExtraMsg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_contents();
  inline void clear_has_contents();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* contents_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAWelcome_CExtraMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome : public ::google::protobuf::Message {
 public:
  CMsgDOTAWelcome();
  virtual ~CMsgDOTAWelcome();

  CMsgDOTAWelcome(const CMsgDOTAWelcome& from);

  inline CMsgDOTAWelcome& operator=(const CMsgDOTAWelcome& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome& default_instance();

  void Swap(CMsgDOTAWelcome* other);

  // implements Message ----------------------------------------------

  CMsgDOTAWelcome* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAWelcome& from);
  void MergeFrom(const CMsgDOTAWelcome& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAWelcome_LocalizationDigest LocalizationDigest;
  typedef CMsgDOTAWelcome_CExtraMsg CExtraMsg;

  // accessors -------------------------------------------------------

  // optional bool tournament_admin = 3;
  inline bool has_tournament_admin() const;
  inline void clear_tournament_admin();
  static const int kTournamentAdminFieldNumber = 3;
  inline bool tournament_admin() const;
  inline void set_tournament_admin(bool value);

  // optional bool tournament_broadcaster = 4;
  inline bool has_tournament_broadcaster() const;
  inline void clear_tournament_broadcaster();
  static const int kTournamentBroadcasterFieldNumber = 4;
  inline bool tournament_broadcaster() const;
  inline void set_tournament_broadcaster(bool value);

  // optional uint32 store_item_hash = 5;
  inline bool has_store_item_hash() const;
  inline void clear_store_item_hash();
  static const int kStoreItemHashFieldNumber = 5;
  inline ::google::protobuf::uint32 store_item_hash() const;
  inline void set_store_item_hash(::google::protobuf::uint32 value);

  // optional uint32 timeplayedconsecutively = 6;
  inline bool has_timeplayedconsecutively() const;
  inline void clear_timeplayedconsecutively();
  static const int kTimeplayedconsecutivelyFieldNumber = 6;
  inline ::google::protobuf::uint32 timeplayedconsecutively() const;
  inline void set_timeplayedconsecutively(::google::protobuf::uint32 value);

  // optional bool allow_3rd_party_match_history = 7;
  inline bool has_allow_3rd_party_match_history() const;
  inline void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 7;
  inline bool allow_3rd_party_match_history() const;
  inline void set_allow_3rd_party_match_history(bool value);

  // optional .PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
  inline bool has_partner_account_type() const;
  inline void clear_partner_account_type();
  static const int kPartnerAccountTypeFieldNumber = 8;
  inline ::PartnerAccountType partner_account_type() const;
  inline void set_partner_account_type(::PartnerAccountType value);

  // optional uint32 banned_word_list_word_id = 9;
  inline bool has_banned_word_list_word_id() const;
  inline void clear_banned_word_list_word_id();
  static const int kBannedWordListWordIdFieldNumber = 9;
  inline ::google::protobuf::uint32 banned_word_list_word_id() const;
  inline void set_banned_word_list_word_id(::google::protobuf::uint32 value);

  // optional uint32 partner_account_state = 11;
  inline bool has_partner_account_state() const;
  inline void clear_partner_account_state();
  static const int kPartnerAccountStateFieldNumber = 11;
  inline ::google::protobuf::uint32 partner_account_state() const;
  inline void set_partner_account_state(::google::protobuf::uint32 value);

  // optional uint32 last_time_played = 12;
  inline bool has_last_time_played() const;
  inline void clear_last_time_played();
  static const int kLastTimePlayedFieldNumber = 12;
  inline ::google::protobuf::uint32 last_time_played() const;
  inline void set_last_time_played(::google::protobuf::uint32 value);

  // optional uint32 last_ip_address = 13;
  inline bool has_last_ip_address() const;
  inline void clear_last_ip_address();
  static const int kLastIpAddressFieldNumber = 13;
  inline ::google::protobuf::uint32 last_ip_address() const;
  inline void set_last_ip_address(::google::protobuf::uint32 value);

  // optional uint32 shutdownlawterminateminutes = 15;
  inline bool has_shutdownlawterminateminutes() const;
  inline void clear_shutdownlawterminateminutes();
  static const int kShutdownlawterminateminutesFieldNumber = 15;
  inline ::google::protobuf::uint32 shutdownlawterminateminutes() const;
  inline void set_shutdownlawterminateminutes(::google::protobuf::uint32 value);

  // optional uint32 banned_word_list_version = 16;
  inline bool has_banned_word_list_version() const;
  inline void clear_banned_word_list_version();
  static const int kBannedWordListVersionFieldNumber = 16;
  inline ::google::protobuf::uint32 banned_word_list_version() const;
  inline void set_banned_word_list_version(::google::protobuf::uint32 value);

  // optional bool profile_private = 17;
  inline bool has_profile_private() const;
  inline void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 17;
  inline bool profile_private() const;
  inline void set_profile_private(bool value);

  // optional uint32 currency = 18;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 18;
  inline ::google::protobuf::uint32 currency() const;
  inline void set_currency(::google::protobuf::uint32 value);

  // optional uint32 bang_no = 19;
  inline bool has_bang_no() const;
  inline void clear_bang_no();
  static const int kBangNoFieldNumber = 19;
  inline ::google::protobuf::uint32 bang_no() const;
  inline void set_bang_no(::google::protobuf::uint32 value);

  // optional bool should_request_player_origin = 20;
  inline bool has_should_request_player_origin() const;
  inline void clear_should_request_player_origin();
  static const int kShouldRequestPlayerOriginFieldNumber = 20;
  inline bool should_request_player_origin() const;
  inline void set_should_request_player_origin(bool value);

  // optional uint64 compendium_unlocks = 21;
  inline bool has_compendium_unlocks() const;
  inline void clear_compendium_unlocks();
  static const int kCompendiumUnlocksFieldNumber = 21;
  inline ::google::protobuf::uint64 compendium_unlocks() const;
  inline void set_compendium_unlocks(::google::protobuf::uint64 value);

  // optional uint32 gc_socache_file_version = 22;
  inline bool has_gc_socache_file_version() const;
  inline void clear_gc_socache_file_version();
  static const int kGcSocacheFileVersionFieldNumber = 22;
  inline ::google::protobuf::uint32 gc_socache_file_version() const;
  inline void set_gc_socache_file_version(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAWelcome.LocalizationDigest localization_digests = 23;
  inline int localization_digests_size() const;
  inline void clear_localization_digests();
  static const int kLocalizationDigestsFieldNumber = 23;
  inline const ::CMsgDOTAWelcome_LocalizationDigest& localization_digests(int index) const;
  inline ::CMsgDOTAWelcome_LocalizationDigest* mutable_localization_digests(int index);
  inline ::CMsgDOTAWelcome_LocalizationDigest* add_localization_digests();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >&
      localization_digests() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >*
      mutable_localization_digests();

  // optional bool is_perfect_world_test_account = 24;
  inline bool has_is_perfect_world_test_account() const;
  inline void clear_is_perfect_world_test_account();
  static const int kIsPerfectWorldTestAccountFieldNumber = 24;
  inline bool is_perfect_world_test_account() const;
  inline void set_is_perfect_world_test_account(bool value);

  // repeated .EEvent active_events = 25;
  inline int active_events_size() const;
  inline void clear_active_events();
  static const int kActiveEventsFieldNumber = 25;
  inline ::EEvent active_events(int index) const;
  inline void set_active_events(int index, ::EEvent value);
  inline void add_active_events(::EEvent value);
  inline const ::google::protobuf::RepeatedField<int>& active_events() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_active_events();

  // repeated .CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
  inline int extra_messages_size() const;
  inline void clear_extra_messages();
  static const int kExtraMessagesFieldNumber = 26;
  inline const ::CMsgDOTAWelcome_CExtraMsg& extra_messages(int index) const;
  inline ::CMsgDOTAWelcome_CExtraMsg* mutable_extra_messages(int index);
  inline ::CMsgDOTAWelcome_CExtraMsg* add_extra_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >&
      extra_messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >*
      mutable_extra_messages();

  // @@protoc_insertion_point(class_scope:CMsgDOTAWelcome)
 private:
  inline void set_has_tournament_admin();
  inline void clear_has_tournament_admin();
  inline void set_has_tournament_broadcaster();
  inline void clear_has_tournament_broadcaster();
  inline void set_has_store_item_hash();
  inline void clear_has_store_item_hash();
  inline void set_has_timeplayedconsecutively();
  inline void clear_has_timeplayedconsecutively();
  inline void set_has_allow_3rd_party_match_history();
  inline void clear_has_allow_3rd_party_match_history();
  inline void set_has_partner_account_type();
  inline void clear_has_partner_account_type();
  inline void set_has_banned_word_list_word_id();
  inline void clear_has_banned_word_list_word_id();
  inline void set_has_partner_account_state();
  inline void clear_has_partner_account_state();
  inline void set_has_last_time_played();
  inline void clear_has_last_time_played();
  inline void set_has_last_ip_address();
  inline void clear_has_last_ip_address();
  inline void set_has_shutdownlawterminateminutes();
  inline void clear_has_shutdownlawterminateminutes();
  inline void set_has_banned_word_list_version();
  inline void clear_has_banned_word_list_version();
  inline void set_has_profile_private();
  inline void clear_has_profile_private();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_bang_no();
  inline void clear_has_bang_no();
  inline void set_has_should_request_player_origin();
  inline void clear_has_should_request_player_origin();
  inline void set_has_compendium_unlocks();
  inline void clear_has_compendium_unlocks();
  inline void set_has_gc_socache_file_version();
  inline void clear_has_gc_socache_file_version();
  inline void set_has_is_perfect_world_test_account();
  inline void clear_has_is_perfect_world_test_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 store_item_hash_;
  ::google::protobuf::uint32 timeplayedconsecutively_;
  bool tournament_admin_;
  bool tournament_broadcaster_;
  bool allow_3rd_party_match_history_;
  bool profile_private_;
  int partner_account_type_;
  ::google::protobuf::uint32 banned_word_list_word_id_;
  ::google::protobuf::uint32 partner_account_state_;
  ::google::protobuf::uint32 last_time_played_;
  ::google::protobuf::uint32 last_ip_address_;
  ::google::protobuf::uint32 shutdownlawterminateminutes_;
  ::google::protobuf::uint32 banned_word_list_version_;
  ::google::protobuf::uint32 currency_;
  ::google::protobuf::uint32 bang_no_;
  ::google::protobuf::uint64 compendium_unlocks_;
  ::google::protobuf::uint32 gc_socache_file_version_;
  bool should_request_player_origin_;
  bool is_perfect_world_test_account_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest > localization_digests_;
  ::google::protobuf::RepeatedField<int> active_events_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg > extra_messages_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAWelcome* default_instance_;
};
// -------------------------------------------------------------------

class CSODOTAGameHeroFavorites : public ::google::protobuf::Message {
 public:
  CSODOTAGameHeroFavorites();
  virtual ~CSODOTAGameHeroFavorites();

  CSODOTAGameHeroFavorites(const CSODOTAGameHeroFavorites& from);

  inline CSODOTAGameHeroFavorites& operator=(const CSODOTAGameHeroFavorites& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSODOTAGameHeroFavorites& default_instance();

  void Swap(CSODOTAGameHeroFavorites* other);

  // implements Message ----------------------------------------------

  CSODOTAGameHeroFavorites* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSODOTAGameHeroFavorites& from);
  void MergeFrom(const CSODOTAGameHeroFavorites& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSODOTAGameHeroFavorites)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CSODOTAGameHeroFavorites* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesAdd : public ::google::protobuf::Message {
 public:
  CMsgDOTAHeroFavoritesAdd();
  virtual ~CMsgDOTAHeroFavoritesAdd();

  CMsgDOTAHeroFavoritesAdd(const CMsgDOTAHeroFavoritesAdd& from);

  inline CMsgDOTAHeroFavoritesAdd& operator=(const CMsgDOTAHeroFavoritesAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHeroFavoritesAdd& default_instance();

  void Swap(CMsgDOTAHeroFavoritesAdd* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHeroFavoritesAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHeroFavoritesAdd& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHeroFavoritesAdd)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHeroFavoritesAdd* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesRemove : public ::google::protobuf::Message {
 public:
  CMsgDOTAHeroFavoritesRemove();
  virtual ~CMsgDOTAHeroFavoritesRemove();

  CMsgDOTAHeroFavoritesRemove(const CMsgDOTAHeroFavoritesRemove& from);

  inline CMsgDOTAHeroFavoritesRemove& operator=(const CMsgDOTAHeroFavoritesRemove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHeroFavoritesRemove& default_instance();

  void Swap(CMsgDOTAHeroFavoritesRemove* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHeroFavoritesRemove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHeroFavoritesRemove& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesRemove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHeroFavoritesRemove)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHeroFavoritesRemove* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetShowcaseHero : public ::google::protobuf::Message {
 public:
  CMsgSetShowcaseHero();
  virtual ~CMsgSetShowcaseHero();

  CMsgSetShowcaseHero(const CMsgSetShowcaseHero& from);

  inline CMsgSetShowcaseHero& operator=(const CMsgSetShowcaseHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetShowcaseHero& default_instance();

  void Swap(CMsgSetShowcaseHero* other);

  // implements Message ----------------------------------------------

  CMsgSetShowcaseHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetShowcaseHero& from);
  void MergeFrom(const CMsgSetShowcaseHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 showcase_hero_id = 1;
  inline bool has_showcase_hero_id() const;
  inline void clear_showcase_hero_id();
  static const int kShowcaseHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 showcase_hero_id() const;
  inline void set_showcase_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSetShowcaseHero)
 private:
  inline void set_has_showcase_hero_id();
  inline void clear_has_showcase_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 showcase_hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetShowcaseHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetFeaturedItems : public ::google::protobuf::Message {
 public:
  CMsgSetFeaturedItems();
  virtual ~CMsgSetFeaturedItems();

  CMsgSetFeaturedItems(const CMsgSetFeaturedItems& from);

  inline CMsgSetFeaturedItems& operator=(const CMsgSetFeaturedItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetFeaturedItems& default_instance();

  void Swap(CMsgSetFeaturedItems* other);

  // implements Message ----------------------------------------------

  CMsgSetFeaturedItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetFeaturedItems& from);
  void MergeFrom(const CMsgSetFeaturedItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 featured_item_id = 1;
  inline int featured_item_id_size() const;
  inline void clear_featured_item_id();
  static const int kFeaturedItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 featured_item_id(int index) const;
  inline void set_featured_item_id(int index, ::google::protobuf::uint64 value);
  inline void add_featured_item_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      featured_item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_featured_item_id();

  // @@protoc_insertion_point(class_scope:CMsgSetFeaturedItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > featured_item_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetFeaturedItems* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFeaturedItems : public ::google::protobuf::Message {
 public:
  CMsgDOTAFeaturedItems();
  virtual ~CMsgDOTAFeaturedItems();

  CMsgDOTAFeaturedItems(const CMsgDOTAFeaturedItems& from);

  inline CMsgDOTAFeaturedItems& operator=(const CMsgDOTAFeaturedItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFeaturedItems& default_instance();

  void Swap(CMsgDOTAFeaturedItems* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFeaturedItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFeaturedItems& from);
  void MergeFrom(const CMsgDOTAFeaturedItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated uint64 featured_item_id = 2;
  inline int featured_item_id_size() const;
  inline void clear_featured_item_id();
  static const int kFeaturedItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 featured_item_id(int index) const;
  inline void set_featured_item_id(int index, ::google::protobuf::uint64 value);
  inline void add_featured_item_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      featured_item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_featured_item_id();

  // repeated bytes object_data = 3;
  inline int object_data_size() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 3;
  inline const ::std::string& object_data(int index) const;
  inline ::std::string* mutable_object_data(int index);
  inline void set_object_data(int index, const ::std::string& value);
  inline void set_object_data(int index, const char* value);
  inline void set_object_data(int index, const void* value, size_t size);
  inline ::std::string* add_object_data();
  inline void add_object_data(const ::std::string& value);
  inline void add_object_data(const char* value);
  inline void add_object_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // @@protoc_insertion_point(class_scope:CMsgDOTAFeaturedItems)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > featured_item_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFeaturedItems* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestLeagueInfo : public ::google::protobuf::Message {
 public:
  CMsgRequestLeagueInfo();
  virtual ~CMsgRequestLeagueInfo();

  CMsgRequestLeagueInfo(const CMsgRequestLeagueInfo& from);

  inline CMsgRequestLeagueInfo& operator=(const CMsgRequestLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeagueInfo& default_instance();

  void Swap(CMsgRequestLeagueInfo* other);

  // implements Message ----------------------------------------------

  CMsgRequestLeagueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestLeagueInfo& from);
  void MergeFrom(const CMsgRequestLeagueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgRequestLeagueInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestLeagueInfo* default_instance_;
};
// -------------------------------------------------------------------

class CDynamicLeagueData : public ::google::protobuf::Message {
 public:
  CDynamicLeagueData();
  virtual ~CDynamicLeagueData();

  CDynamicLeagueData(const CDynamicLeagueData& from);

  inline CDynamicLeagueData& operator=(const CDynamicLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDynamicLeagueData& default_instance();

  void Swap(CDynamicLeagueData* other);

  // implements Message ----------------------------------------------

  CDynamicLeagueData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDynamicLeagueData& from);
  void MergeFrom(const CDynamicLeagueData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional fixed32 last_match_time = 2;
  inline bool has_last_match_time() const;
  inline void clear_last_match_time();
  static const int kLastMatchTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 last_match_time() const;
  inline void set_last_match_time(::google::protobuf::uint32 value);

  // optional uint32 prize_pool_usd = 3;
  inline bool has_prize_pool_usd() const;
  inline void clear_prize_pool_usd();
  static const int kPrizePoolUsdFieldNumber = 3;
  inline ::google::protobuf::uint32 prize_pool_usd() const;
  inline void set_prize_pool_usd(::google::protobuf::uint32 value);

  // optional bool has_live_matches = 4;
  inline bool has_has_live_matches() const;
  inline void clear_has_live_matches();
  static const int kHasLiveMatchesFieldNumber = 4;
  inline bool has_live_matches() const;
  inline void set_has_live_matches(bool value);

  // optional bool is_compendium_public = 5;
  inline bool has_is_compendium_public() const;
  inline void clear_is_compendium_public();
  static const int kIsCompendiumPublicFieldNumber = 5;
  inline bool is_compendium_public() const;
  inline void set_is_compendium_public(bool value);

  // optional uint32 compendium_version = 6;
  inline bool has_compendium_version() const;
  inline void clear_compendium_version();
  static const int kCompendiumVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 compendium_version() const;
  inline void set_compendium_version(::google::protobuf::uint32 value);

  // optional uint32 compendium_content_version = 7;
  inline bool has_compendium_content_version() const;
  inline void clear_compendium_content_version();
  static const int kCompendiumContentVersionFieldNumber = 7;
  inline ::google::protobuf::uint32 compendium_content_version() const;
  inline void set_compendium_content_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDynamicLeagueData)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_last_match_time();
  inline void clear_has_last_match_time();
  inline void set_has_prize_pool_usd();
  inline void clear_has_prize_pool_usd();
  inline void set_has_has_live_matches();
  inline void clear_has_has_live_matches();
  inline void set_has_is_compendium_public();
  inline void clear_has_is_compendium_public();
  inline void set_has_compendium_version();
  inline void clear_has_compendium_version();
  inline void set_has_compendium_content_version();
  inline void clear_has_compendium_content_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 last_match_time_;
  ::google::protobuf::uint32 prize_pool_usd_;
  bool has_live_matches_;
  bool is_compendium_public_;
  ::google::protobuf::uint32 compendium_version_;
  ::google::protobuf::uint32 compendium_content_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CDynamicLeagueData* default_instance_;
};
// -------------------------------------------------------------------

class CStaticLeagueData : public ::google::protobuf::Message {
 public:
  CStaticLeagueData();
  virtual ~CStaticLeagueData();

  CStaticLeagueData(const CStaticLeagueData& from);

  inline CStaticLeagueData& operator=(const CStaticLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CStaticLeagueData& default_instance();

  void Swap(CStaticLeagueData* other);

  // implements Message ----------------------------------------------

  CStaticLeagueData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CStaticLeagueData& from);
  void MergeFrom(const CStaticLeagueData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string banner_name = 4;
  inline bool has_banner_name() const;
  inline void clear_banner_name();
  static const int kBannerNameFieldNumber = 4;
  inline const ::std::string& banner_name() const;
  inline void set_banner_name(const ::std::string& value);
  inline void set_banner_name(const char* value);
  inline void set_banner_name(const char* value, size_t size);
  inline ::std::string* mutable_banner_name();
  inline ::std::string* release_banner_name();
  inline void set_allocated_banner_name(::std::string* banner_name);

  // optional string itemdef_name = 5;
  inline bool has_itemdef_name() const;
  inline void clear_itemdef_name();
  static const int kItemdefNameFieldNumber = 5;
  inline const ::std::string& itemdef_name() const;
  inline void set_itemdef_name(const ::std::string& value);
  inline void set_itemdef_name(const char* value);
  inline void set_itemdef_name(const char* value, size_t size);
  inline ::std::string* mutable_itemdef_name();
  inline ::std::string* release_itemdef_name();
  inline void set_allocated_itemdef_name(::std::string* itemdef_name);

  // optional string url = 6;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 6;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional uint32 item_def_index = 7;
  inline bool has_item_def_index() const;
  inline void clear_item_def_index();
  static const int kItemDefIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 item_def_index() const;
  inline void set_item_def_index(::google::protobuf::uint32 value);

  // optional uint32 hud_skin_item_def_index = 8;
  inline bool has_hud_skin_item_def_index() const;
  inline void clear_hud_skin_item_def_index();
  static const int kHudSkinItemDefIndexFieldNumber = 8;
  inline ::google::protobuf::uint32 hud_skin_item_def_index() const;
  inline void set_hud_skin_item_def_index(::google::protobuf::uint32 value);

  // optional string loading_screen_name = 9;
  inline bool has_loading_screen_name() const;
  inline void clear_loading_screen_name();
  static const int kLoadingScreenNameFieldNumber = 9;
  inline const ::std::string& loading_screen_name() const;
  inline void set_loading_screen_name(const ::std::string& value);
  inline void set_loading_screen_name(const char* value);
  inline void set_loading_screen_name(const char* value, size_t size);
  inline ::std::string* mutable_loading_screen_name();
  inline ::std::string* release_loading_screen_name();
  inline void set_allocated_loading_screen_name(::std::string* loading_screen_name);

  // optional uint32 base_prize_pool = 10;
  inline bool has_base_prize_pool() const;
  inline void clear_base_prize_pool();
  static const int kBasePrizePoolFieldNumber = 10;
  inline ::google::protobuf::uint32 base_prize_pool() const;
  inline void set_base_prize_pool(::google::protobuf::uint32 value);

  // optional bool is_major = 11;
  inline bool has_is_major() const;
  inline void clear_is_major();
  static const int kIsMajorFieldNumber = 11;
  inline bool is_major() const;
  inline void set_is_major(bool value);

  // optional uint32 sort_order = 12;
  inline bool has_sort_order() const;
  inline void clear_sort_order();
  static const int kSortOrderFieldNumber = 12;
  inline ::google::protobuf::uint32 sort_order() const;
  inline void set_sort_order(::google::protobuf::uint32 value);

  // optional uint32 tier = 13;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 13;
  inline ::google::protobuf::uint32 tier() const;
  inline void set_tier(::google::protobuf::uint32 value);

  // optional uint32 amateur_region = 14;
  inline bool has_amateur_region() const;
  inline void clear_amateur_region();
  static const int kAmateurRegionFieldNumber = 14;
  inline ::google::protobuf::uint32 amateur_region() const;
  inline void set_amateur_region(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CStaticLeagueData)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_banner_name();
  inline void clear_has_banner_name();
  inline void set_has_itemdef_name();
  inline void clear_has_itemdef_name();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_item_def_index();
  inline void clear_has_item_def_index();
  inline void set_has_hud_skin_item_def_index();
  inline void clear_has_hud_skin_item_def_index();
  inline void set_has_loading_screen_name();
  inline void clear_has_loading_screen_name();
  inline void set_has_base_prize_pool();
  inline void clear_has_base_prize_pool();
  inline void set_has_is_major();
  inline void clear_has_is_major();
  inline void set_has_sort_order();
  inline void clear_has_sort_order();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_amateur_region();
  inline void clear_has_amateur_region();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* description_;
  ::std::string* banner_name_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_index_;
  ::std::string* itemdef_name_;
  ::std::string* url_;
  ::std::string* loading_screen_name_;
  ::google::protobuf::uint32 hud_skin_item_def_index_;
  ::google::protobuf::uint32 base_prize_pool_;
  bool is_major_;
  ::google::protobuf::uint32 sort_order_;
  ::google::protobuf::uint32 tier_;
  ::google::protobuf::uint32 amateur_region_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CStaticLeagueData* default_instance_;
};
// -------------------------------------------------------------------

class CLeagueData : public ::google::protobuf::Message {
 public:
  CLeagueData();
  virtual ~CLeagueData();

  CLeagueData(const CLeagueData& from);

  inline CLeagueData& operator=(const CLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLeagueData& default_instance();

  void Swap(CLeagueData* other);

  // implements Message ----------------------------------------------

  CLeagueData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLeagueData& from);
  void MergeFrom(const CLeagueData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CDynamicLeagueData dynamic_data = 1;
  inline bool has_dynamic_data() const;
  inline void clear_dynamic_data();
  static const int kDynamicDataFieldNumber = 1;
  inline const ::CDynamicLeagueData& dynamic_data() const;
  inline ::CDynamicLeagueData* mutable_dynamic_data();
  inline ::CDynamicLeagueData* release_dynamic_data();
  inline void set_allocated_dynamic_data(::CDynamicLeagueData* dynamic_data);

  // optional .CStaticLeagueData static_data = 2;
  inline bool has_static_data() const;
  inline void clear_static_data();
  static const int kStaticDataFieldNumber = 2;
  inline const ::CStaticLeagueData& static_data() const;
  inline ::CStaticLeagueData* mutable_static_data();
  inline ::CStaticLeagueData* release_static_data();
  inline void set_allocated_static_data(::CStaticLeagueData* static_data);

  // optional bool is_owned = 3;
  inline bool has_is_owned() const;
  inline void clear_is_owned();
  static const int kIsOwnedFieldNumber = 3;
  inline bool is_owned() const;
  inline void set_is_owned(bool value);

  // @@protoc_insertion_point(class_scope:CLeagueData)
 private:
  inline void set_has_dynamic_data();
  inline void clear_has_dynamic_data();
  inline void set_has_static_data();
  inline void clear_has_static_data();
  inline void set_has_is_owned();
  inline void clear_has_is_owned();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CDynamicLeagueData* dynamic_data_;
  ::CStaticLeagueData* static_data_;
  bool is_owned_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CLeagueData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgResponseLeagueInfo : public ::google::protobuf::Message {
 public:
  CMsgResponseLeagueInfo();
  virtual ~CMsgResponseLeagueInfo();

  CMsgResponseLeagueInfo(const CMsgResponseLeagueInfo& from);

  inline CMsgResponseLeagueInfo& operator=(const CMsgResponseLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResponseLeagueInfo& default_instance();

  void Swap(CMsgResponseLeagueInfo* other);

  // implements Message ----------------------------------------------

  CMsgResponseLeagueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgResponseLeagueInfo& from);
  void MergeFrom(const CMsgResponseLeagueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CDynamicLeagueData leagues = 1;
  inline int leagues_size() const;
  inline void clear_leagues();
  static const int kLeaguesFieldNumber = 1;
  inline const ::CDynamicLeagueData& leagues(int index) const;
  inline ::CDynamicLeagueData* mutable_leagues(int index);
  inline ::CDynamicLeagueData* add_leagues();
  inline const ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >&
      leagues() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >*
      mutable_leagues();

  // @@protoc_insertion_point(class_scope:CMsgResponseLeagueInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData > leagues_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgResponseLeagueInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes_PlayerVote : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchVotes_PlayerVote();
  virtual ~CMsgDOTAMatchVotes_PlayerVote();

  CMsgDOTAMatchVotes_PlayerVote(const CMsgDOTAMatchVotes_PlayerVote& from);

  inline CMsgDOTAMatchVotes_PlayerVote& operator=(const CMsgDOTAMatchVotes_PlayerVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchVotes_PlayerVote& default_instance();

  void Swap(CMsgDOTAMatchVotes_PlayerVote* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchVotes_PlayerVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  void MergeFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 vote = 2;
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 2;
  inline ::google::protobuf::uint32 vote() const;
  inline void set_vote(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchVotes.PlayerVote)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_vote();
  inline void clear_has_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 vote_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchVotes_PlayerVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchVotes();
  virtual ~CMsgDOTAMatchVotes();

  CMsgDOTAMatchVotes(const CMsgDOTAMatchVotes& from);

  inline CMsgDOTAMatchVotes& operator=(const CMsgDOTAMatchVotes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchVotes& default_instance();

  void Swap(CMsgDOTAMatchVotes* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchVotes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchVotes& from);
  void MergeFrom(const CMsgDOTAMatchVotes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMatchVotes_PlayerVote PlayerVote;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // repeated .CMsgDOTAMatchVotes.PlayerVote votes = 2;
  inline int votes_size() const;
  inline void clear_votes();
  static const int kVotesFieldNumber = 2;
  inline const ::CMsgDOTAMatchVotes_PlayerVote& votes(int index) const;
  inline ::CMsgDOTAMatchVotes_PlayerVote* mutable_votes(int index);
  inline ::CMsgDOTAMatchVotes_PlayerVote* add_votes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >&
      votes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >*
      mutable_votes();

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchVotes)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote > votes_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchVotes* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCastMatchVote : public ::google::protobuf::Message {
 public:
  CMsgCastMatchVote();
  virtual ~CMsgCastMatchVote();

  CMsgCastMatchVote(const CMsgCastMatchVote& from);

  inline CMsgCastMatchVote& operator=(const CMsgCastMatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCastMatchVote& default_instance();

  void Swap(CMsgCastMatchVote* other);

  // implements Message ----------------------------------------------

  CMsgCastMatchVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCastMatchVote& from);
  void MergeFrom(const CMsgCastMatchVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 2;
  inline ::DOTAMatchVote vote() const;
  inline void set_vote(::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:CMsgCastMatchVote)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_vote();
  inline void clear_has_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int vote_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgCastMatchVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRetrieveMatchVote : public ::google::protobuf::Message {
 public:
  CMsgRetrieveMatchVote();
  virtual ~CMsgRetrieveMatchVote();

  CMsgRetrieveMatchVote(const CMsgRetrieveMatchVote& from);

  inline CMsgRetrieveMatchVote& operator=(const CMsgRetrieveMatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRetrieveMatchVote& default_instance();

  void Swap(CMsgRetrieveMatchVote* other);

  // implements Message ----------------------------------------------

  CMsgRetrieveMatchVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRetrieveMatchVote& from);
  void MergeFrom(const CMsgRetrieveMatchVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 incremental = 2;
  inline bool has_incremental() const;
  inline void clear_incremental();
  static const int kIncrementalFieldNumber = 2;
  inline ::google::protobuf::uint32 incremental() const;
  inline void set_incremental(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRetrieveMatchVote)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_incremental();
  inline void clear_has_incremental();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 incremental_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRetrieveMatchVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchVoteResponse : public ::google::protobuf::Message {
 public:
  CMsgMatchVoteResponse();
  virtual ~CMsgMatchVoteResponse();

  CMsgMatchVoteResponse(const CMsgMatchVoteResponse& from);

  inline CMsgMatchVoteResponse& operator=(const CMsgMatchVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchVoteResponse& default_instance();

  void Swap(CMsgMatchVoteResponse* other);

  // implements Message ----------------------------------------------

  CMsgMatchVoteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchVoteResponse& from);
  void MergeFrom(const CMsgMatchVoteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 2;
  inline ::DOTAMatchVote vote() const;
  inline void set_vote(::DOTAMatchVote value);

  // optional uint32 positive_votes = 3;
  inline bool has_positive_votes() const;
  inline void clear_positive_votes();
  static const int kPositiveVotesFieldNumber = 3;
  inline ::google::protobuf::uint32 positive_votes() const;
  inline void set_positive_votes(::google::protobuf::uint32 value);

  // optional uint32 negative_votes = 4;
  inline bool has_negative_votes() const;
  inline void clear_negative_votes();
  static const int kNegativeVotesFieldNumber = 4;
  inline ::google::protobuf::uint32 negative_votes() const;
  inline void set_negative_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchVoteResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_vote();
  inline void clear_has_vote();
  inline void set_has_positive_votes();
  inline void clear_has_positive_votes();
  inline void set_has_negative_votes();
  inline void clear_has_negative_votes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  int vote_;
  ::google::protobuf::uint32 positive_votes_;
  ::google::protobuf::uint32 negative_votes_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchVoteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedPlayer : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFame_FeaturedPlayer();
  virtual ~CMsgDOTAHallOfFame_FeaturedPlayer();

  CMsgDOTAHallOfFame_FeaturedPlayer(const CMsgDOTAHallOfFame_FeaturedPlayer& from);

  inline CMsgDOTAHallOfFame_FeaturedPlayer& operator=(const CMsgDOTAHallOfFame_FeaturedPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame_FeaturedPlayer& default_instance();

  void Swap(CMsgDOTAHallOfFame_FeaturedPlayer* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFame_FeaturedPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional float average_scaled_metric = 3;
  inline bool has_average_scaled_metric() const;
  inline void clear_average_scaled_metric();
  static const int kAverageScaledMetricFieldNumber = 3;
  inline float average_scaled_metric() const;
  inline void set_average_scaled_metric(float value);

  // optional uint32 num_games = 4;
  inline bool has_num_games() const;
  inline void clear_num_games();
  static const int kNumGamesFieldNumber = 4;
  inline ::google::protobuf::uint32 num_games() const;
  inline void set_num_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFame.FeaturedPlayer)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_average_scaled_metric();
  inline void clear_has_average_scaled_metric();
  inline void set_has_num_games();
  inline void clear_has_num_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  float average_scaled_metric_;
  ::google::protobuf::uint32 num_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFame_FeaturedPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedFarmer : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFame_FeaturedFarmer();
  virtual ~CMsgDOTAHallOfFame_FeaturedFarmer();

  CMsgDOTAHallOfFame_FeaturedFarmer(const CMsgDOTAHallOfFame_FeaturedFarmer& from);

  inline CMsgDOTAHallOfFame_FeaturedFarmer& operator=(const CMsgDOTAHallOfFame_FeaturedFarmer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame_FeaturedFarmer& default_instance();

  void Swap(CMsgDOTAHallOfFame_FeaturedFarmer* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFame_FeaturedFarmer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 gold_per_min = 3;
  inline bool has_gold_per_min() const;
  inline void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 3;
  inline ::google::protobuf::uint32 gold_per_min() const;
  inline void set_gold_per_min(::google::protobuf::uint32 value);

  // optional uint64 match_id = 4;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFame.FeaturedFarmer)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_gold_per_min();
  inline void clear_has_gold_per_min();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 gold_per_min_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFame_FeaturedFarmer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFame();
  virtual ~CMsgDOTAHallOfFame();

  CMsgDOTAHallOfFame(const CMsgDOTAHallOfFame& from);

  inline CMsgDOTAHallOfFame& operator=(const CMsgDOTAHallOfFame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame& default_instance();

  void Swap(CMsgDOTAHallOfFame* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFame& from);
  void MergeFrom(const CMsgDOTAHallOfFame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAHallOfFame_FeaturedPlayer FeaturedPlayer;
  typedef CMsgDOTAHallOfFame_FeaturedFarmer FeaturedFarmer;

  // accessors -------------------------------------------------------

  // optional uint32 week = 1;
  inline bool has_week() const;
  inline void clear_week();
  static const int kWeekFieldNumber = 1;
  inline ::google::protobuf::uint32 week() const;
  inline void set_week(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
  inline int featured_players_size() const;
  inline void clear_featured_players();
  static const int kFeaturedPlayersFieldNumber = 2;
  inline const ::CMsgDOTAHallOfFame_FeaturedPlayer& featured_players(int index) const;
  inline ::CMsgDOTAHallOfFame_FeaturedPlayer* mutable_featured_players(int index);
  inline ::CMsgDOTAHallOfFame_FeaturedPlayer* add_featured_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >&
      featured_players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >*
      mutable_featured_players();

  // optional .CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
  inline bool has_featured_farmer() const;
  inline void clear_featured_farmer();
  static const int kFeaturedFarmerFieldNumber = 3;
  inline const ::CMsgDOTAHallOfFame_FeaturedFarmer& featured_farmer() const;
  inline ::CMsgDOTAHallOfFame_FeaturedFarmer* mutable_featured_farmer();
  inline ::CMsgDOTAHallOfFame_FeaturedFarmer* release_featured_farmer();
  inline void set_allocated_featured_farmer(::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFame)
 private:
  inline void set_has_week();
  inline void clear_has_week();
  inline void set_has_featured_farmer();
  inline void clear_has_featured_farmer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer > featured_players_;
  ::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer_;
  ::google::protobuf::uint32 week_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFameRequest();
  virtual ~CMsgDOTAHallOfFameRequest();

  CMsgDOTAHallOfFameRequest(const CMsgDOTAHallOfFameRequest& from);

  inline CMsgDOTAHallOfFameRequest& operator=(const CMsgDOTAHallOfFameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFameRequest& default_instance();

  void Swap(CMsgDOTAHallOfFameRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFameRequest& from);
  void MergeFrom(const CMsgDOTAHallOfFameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 week = 1;
  inline bool has_week() const;
  inline void clear_week();
  static const int kWeekFieldNumber = 1;
  inline ::google::protobuf::uint32 week() const;
  inline void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFameRequest)
 private:
  inline void set_has_week();
  inline void clear_has_week();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 week_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAHallOfFameResponse();
  virtual ~CMsgDOTAHallOfFameResponse();

  CMsgDOTAHallOfFameResponse(const CMsgDOTAHallOfFameResponse& from);

  inline CMsgDOTAHallOfFameResponse& operator=(const CMsgDOTAHallOfFameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFameResponse& default_instance();

  void Swap(CMsgDOTAHallOfFameResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHallOfFameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHallOfFameResponse& from);
  void MergeFrom(const CMsgDOTAHallOfFameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAHallOfFame hall_of_fame = 1;
  inline bool has_hall_of_fame() const;
  inline void clear_hall_of_fame();
  static const int kHallOfFameFieldNumber = 1;
  inline const ::CMsgDOTAHallOfFame& hall_of_fame() const;
  inline ::CMsgDOTAHallOfFame* mutable_hall_of_fame();
  inline ::CMsgDOTAHallOfFame* release_hall_of_fame();
  inline void set_allocated_hall_of_fame(::CMsgDOTAHallOfFame* hall_of_fame);

  // optional uint32 eresult = 2 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHallOfFameResponse)
 private:
  inline void set_has_hall_of_fame();
  inline void clear_has_hall_of_fame();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAHallOfFame* hall_of_fame_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHallOfFameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAHalloweenHighScoreRequest();
  virtual ~CMsgDOTAHalloweenHighScoreRequest();

  CMsgDOTAHalloweenHighScoreRequest(const CMsgDOTAHalloweenHighScoreRequest& from);

  inline CMsgDOTAHalloweenHighScoreRequest& operator=(const CMsgDOTAHalloweenHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHalloweenHighScoreRequest& default_instance();

  void Swap(CMsgDOTAHalloweenHighScoreRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHalloweenHighScoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 round = 1 [default = -1];
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHalloweenHighScoreRequest)
 private:
  inline void set_has_round();
  inline void clear_has_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 round_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHalloweenHighScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAHalloweenHighScoreResponse();
  virtual ~CMsgDOTAHalloweenHighScoreResponse();

  CMsgDOTAHalloweenHighScoreResponse(const CMsgDOTAHalloweenHighScoreResponse& from);

  inline CMsgDOTAHalloweenHighScoreResponse& operator=(const CMsgDOTAHalloweenHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHalloweenHighScoreResponse& default_instance();

  void Swap(CMsgDOTAHalloweenHighScoreResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAHalloweenHighScoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional .CMsgDOTAMatch match = 2;
  inline bool has_match() const;
  inline void clear_match();
  static const int kMatchFieldNumber = 2;
  inline const ::CMsgDOTAMatch& match() const;
  inline ::CMsgDOTAMatch* mutable_match();
  inline ::CMsgDOTAMatch* release_match();
  inline void set_allocated_match(::CMsgDOTAMatch* match);

  // optional uint32 eresult = 3;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 3;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional int32 round = 4;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 4;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAHalloweenHighScoreResponse)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_match();
  inline void clear_has_match();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_round();
  inline void clear_has_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::int32 round_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAHalloweenHighScoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAStorePromoPagesRequest();
  virtual ~CMsgDOTAStorePromoPagesRequest();

  CMsgDOTAStorePromoPagesRequest(const CMsgDOTAStorePromoPagesRequest& from);

  inline CMsgDOTAStorePromoPagesRequest& operator=(const CMsgDOTAStorePromoPagesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesRequest& default_instance();

  void Swap(CMsgDOTAStorePromoPagesRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStorePromoPagesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStorePromoPagesRequest& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version_seen = 1;
  inline bool has_version_seen() const;
  inline void clear_version_seen();
  static const int kVersionSeenFieldNumber = 1;
  inline ::google::protobuf::uint32 version_seen() const;
  inline void set_version_seen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAStorePromoPagesRequest)
 private:
  inline void set_has_version_seen();
  inline void clear_has_version_seen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_seen_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStorePromoPagesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse_PromoPage : public ::google::protobuf::Message {
 public:
  CMsgDOTAStorePromoPagesResponse_PromoPage();
  virtual ~CMsgDOTAStorePromoPagesResponse_PromoPage();

  CMsgDOTAStorePromoPagesResponse_PromoPage(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);

  inline CMsgDOTAStorePromoPagesResponse_PromoPage& operator=(const CMsgDOTAStorePromoPagesResponse_PromoPage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesResponse_PromoPage& default_instance();

  void Swap(CMsgDOTAStorePromoPagesResponse_PromoPage* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStorePromoPagesResponse_PromoPage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 promo_id = 1;
  inline bool has_promo_id() const;
  inline void clear_promo_id();
  static const int kPromoIdFieldNumber = 1;
  inline ::google::protobuf::uint32 promo_id() const;
  inline void set_promo_id(::google::protobuf::uint32 value);

  // optional string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string url = 3;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 3;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:CMsgDOTAStorePromoPagesResponse.PromoPage)
 private:
  inline void set_has_promo_id();
  inline void clear_has_promo_id();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* url_;
  ::google::protobuf::uint32 promo_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStorePromoPagesResponse_PromoPage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAStorePromoPagesResponse();
  virtual ~CMsgDOTAStorePromoPagesResponse();

  CMsgDOTAStorePromoPagesResponse(const CMsgDOTAStorePromoPagesResponse& from);

  inline CMsgDOTAStorePromoPagesResponse& operator=(const CMsgDOTAStorePromoPagesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesResponse& default_instance();

  void Swap(CMsgDOTAStorePromoPagesResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStorePromoPagesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAStorePromoPagesResponse_PromoPage PromoPage;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
  inline int pages_size() const;
  inline void clear_pages();
  static const int kPagesFieldNumber = 1;
  inline const ::CMsgDOTAStorePromoPagesResponse_PromoPage& pages(int index) const;
  inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* mutable_pages(int index);
  inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* add_pages();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >&
      pages() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >*
      mutable_pages();

  // @@protoc_insertion_point(class_scope:CMsgDOTAStorePromoPagesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage > pages_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStorePromoPagesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeagueScheduleBlockTeamInfo : public ::google::protobuf::Message {
 public:
  CMsgLeagueScheduleBlockTeamInfo();
  virtual ~CMsgLeagueScheduleBlockTeamInfo();

  CMsgLeagueScheduleBlockTeamInfo(const CMsgLeagueScheduleBlockTeamInfo& from);

  inline CMsgLeagueScheduleBlockTeamInfo& operator=(const CMsgLeagueScheduleBlockTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeagueScheduleBlockTeamInfo& default_instance();

  void Swap(CMsgLeagueScheduleBlockTeamInfo* other);

  // implements Message ----------------------------------------------

  CMsgLeagueScheduleBlockTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeagueScheduleBlockTeamInfo& from);
  void MergeFrom(const CMsgLeagueScheduleBlockTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 logo = 4;
  inline bool has_logo() const;
  inline void clear_logo();
  static const int kLogoFieldNumber = 4;
  inline ::google::protobuf::uint64 logo() const;
  inline void set_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgLeagueScheduleBlockTeamInfo)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_logo();
  inline void clear_has_logo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint32 team_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeagueScheduleBlockTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeagueScheduleBlock : public ::google::protobuf::Message {
 public:
  CMsgLeagueScheduleBlock();
  virtual ~CMsgLeagueScheduleBlock();

  CMsgLeagueScheduleBlock(const CMsgLeagueScheduleBlock& from);

  inline CMsgLeagueScheduleBlock& operator=(const CMsgLeagueScheduleBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeagueScheduleBlock& default_instance();

  void Swap(CMsgLeagueScheduleBlock* other);

  // implements Message ----------------------------------------------

  CMsgLeagueScheduleBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeagueScheduleBlock& from);
  void MergeFrom(const CMsgLeagueScheduleBlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 block_id = 1;
  inline bool has_block_id() const;
  inline void clear_block_id();
  static const int kBlockIdFieldNumber = 1;
  inline ::google::protobuf::uint32 block_id() const;
  inline void set_block_id(::google::protobuf::uint32 value);

  // optional uint32 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional bool finals = 4;
  inline bool has_finals() const;
  inline void clear_finals();
  static const int kFinalsFieldNumber = 4;
  inline bool finals() const;
  inline void set_finals(bool value);

  // optional string comment = 5;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 5;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // repeated .CMsgLeagueScheduleBlockTeamInfo teams = 6;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 6;
  inline const ::CMsgLeagueScheduleBlockTeamInfo& teams(int index) const;
  inline ::CMsgLeagueScheduleBlockTeamInfo* mutable_teams(int index);
  inline ::CMsgLeagueScheduleBlockTeamInfo* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >*
      mutable_teams();

  // @@protoc_insertion_point(class_scope:CMsgLeagueScheduleBlock)
 private:
  inline void set_has_block_id();
  inline void clear_has_block_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_finals();
  inline void clear_has_finals();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 start_time_;
  ::std::string* comment_;
  ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo > teams_;
  bool finals_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeagueScheduleBlock* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeague : public ::google::protobuf::Message {
 public:
  CMsgDOTALeague();
  virtual ~CMsgDOTALeague();

  CMsgDOTALeague(const CMsgDOTALeague& from);

  inline CMsgDOTALeague& operator=(const CMsgDOTALeague& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeague& default_instance();

  void Swap(CMsgDOTALeague* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeague* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeague& from);
  void MergeFrom(const CMsgDOTALeague& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // repeated .CMsgLeagueScheduleBlock schedule = 2;
  inline int schedule_size() const;
  inline void clear_schedule();
  static const int kScheduleFieldNumber = 2;
  inline const ::CMsgLeagueScheduleBlock& schedule(int index) const;
  inline ::CMsgLeagueScheduleBlock* mutable_schedule(int index);
  inline ::CMsgLeagueScheduleBlock* add_schedule();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >&
      schedule() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >*
      mutable_schedule();

  // @@protoc_insertion_point(class_scope:CMsgDOTALeague)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock > schedule_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeague* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleRequest();
  virtual ~CMsgDOTALeagueScheduleRequest();

  CMsgDOTALeagueScheduleRequest(const CMsgDOTALeagueScheduleRequest& from);

  inline CMsgDOTALeagueScheduleRequest& operator=(const CMsgDOTALeagueScheduleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleRequest& default_instance();

  void Swap(CMsgDOTALeagueScheduleRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleRequest& from);
  void MergeFrom(const CMsgDOTALeagueScheduleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleRequest)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleResponse();
  virtual ~CMsgDOTALeagueScheduleResponse();

  CMsgDOTALeagueScheduleResponse(const CMsgDOTALeagueScheduleResponse& from);

  inline CMsgDOTALeagueScheduleResponse& operator=(const CMsgDOTALeagueScheduleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleResponse& default_instance();

  void Swap(CMsgDOTALeagueScheduleResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleResponse& from);
  void MergeFrom(const CMsgDOTALeagueScheduleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTALeague league = 1;
  inline bool has_league() const;
  inline void clear_league();
  static const int kLeagueFieldNumber = 1;
  inline const ::CMsgDOTALeague& league() const;
  inline ::CMsgDOTALeague* mutable_league();
  inline ::CMsgDOTALeague* release_league();
  inline void set_allocated_league(::CMsgDOTALeague* league);

  // optional uint32 eresult = 2 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleResponse)
 private:
  inline void set_has_league();
  inline void clear_has_league();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTALeague* league_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleEdit : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleEdit();
  virtual ~CMsgDOTALeagueScheduleEdit();

  CMsgDOTALeagueScheduleEdit(const CMsgDOTALeagueScheduleEdit& from);

  inline CMsgDOTALeagueScheduleEdit& operator=(const CMsgDOTALeagueScheduleEdit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleEdit& default_instance();

  void Swap(CMsgDOTALeagueScheduleEdit* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleEdit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleEdit& from);
  void MergeFrom(const CMsgDOTALeagueScheduleEdit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional .CMsgLeagueScheduleBlock schedule = 2;
  inline bool has_schedule() const;
  inline void clear_schedule();
  static const int kScheduleFieldNumber = 2;
  inline const ::CMsgLeagueScheduleBlock& schedule() const;
  inline ::CMsgLeagueScheduleBlock* mutable_schedule();
  inline ::CMsgLeagueScheduleBlock* release_schedule();
  inline void set_allocated_schedule(::CMsgLeagueScheduleBlock* schedule);

  // optional bool delete_block = 3;
  inline bool has_delete_block() const;
  inline void clear_delete_block();
  static const int kDeleteBlockFieldNumber = 3;
  inline bool delete_block() const;
  inline void set_delete_block(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleEdit)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_schedule();
  inline void clear_has_schedule();
  inline void set_has_delete_block();
  inline void clear_has_delete_block();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgLeagueScheduleBlock* schedule_;
  ::google::protobuf::uint32 league_id_;
  bool delete_block_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleEdit* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleEditResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALeagueScheduleEditResponse();
  virtual ~CMsgDOTALeagueScheduleEditResponse();

  CMsgDOTALeagueScheduleEditResponse(const CMsgDOTALeagueScheduleEditResponse& from);

  inline CMsgDOTALeagueScheduleEditResponse& operator=(const CMsgDOTALeagueScheduleEditResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleEditResponse& default_instance();

  void Swap(CMsgDOTALeagueScheduleEditResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeagueScheduleEditResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeagueScheduleEditResponse& from);
  void MergeFrom(const CMsgDOTALeagueScheduleEditResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTALeague league = 1;
  inline bool has_league() const;
  inline void clear_league();
  static const int kLeagueFieldNumber = 1;
  inline const ::CMsgDOTALeague& league() const;
  inline ::CMsgDOTALeague* mutable_league();
  inline ::CMsgDOTALeague* release_league();
  inline void set_allocated_league(::CMsgDOTALeague* league);

  // optional uint32 eresult = 2 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeagueScheduleEditResponse)
 private:
  inline void set_has_league();
  inline void clear_has_league();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTALeague* league_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeagueScheduleEditResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeaguesInMonthRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTALeaguesInMonthRequest();
  virtual ~CMsgDOTALeaguesInMonthRequest();

  CMsgDOTALeaguesInMonthRequest(const CMsgDOTALeaguesInMonthRequest& from);

  inline CMsgDOTALeaguesInMonthRequest& operator=(const CMsgDOTALeaguesInMonthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaguesInMonthRequest& default_instance();

  void Swap(CMsgDOTALeaguesInMonthRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeaguesInMonthRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeaguesInMonthRequest& from);
  void MergeFrom(const CMsgDOTALeaguesInMonthRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 month = 1;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 1;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);

  // optional uint32 year = 2;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 2;
  inline ::google::protobuf::uint32 year() const;
  inline void set_year(::google::protobuf::uint32 value);

  // optional uint32 tier = 3;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 3;
  inline ::google::protobuf::uint32 tier() const;
  inline void set_tier(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALeaguesInMonthRequest)
 private:
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_year();
  inline void clear_has_year();
  inline void set_has_tier();
  inline void clear_has_tier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 tier_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeaguesInMonthRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALeaguesInMonthResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALeaguesInMonthResponse();
  virtual ~CMsgDOTALeaguesInMonthResponse();

  CMsgDOTALeaguesInMonthResponse(const CMsgDOTALeaguesInMonthResponse& from);

  inline CMsgDOTALeaguesInMonthResponse& operator=(const CMsgDOTALeaguesInMonthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaguesInMonthResponse& default_instance();

  void Swap(CMsgDOTALeaguesInMonthResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALeaguesInMonthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALeaguesInMonthResponse& from);
  void MergeFrom(const CMsgDOTALeaguesInMonthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 month = 2;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 2;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);

  // optional uint32 year = 3;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 3;
  inline ::google::protobuf::uint32 year() const;
  inline void set_year(::google::protobuf::uint32 value);

  // repeated .CMsgDOTALeague leagues = 4;
  inline int leagues_size() const;
  inline void clear_leagues();
  static const int kLeaguesFieldNumber = 4;
  inline const ::CMsgDOTALeague& leagues(int index) const;
  inline ::CMsgDOTALeague* mutable_leagues(int index);
  inline ::CMsgDOTALeague* add_leagues();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >&
      leagues() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >*
      mutable_leagues();

  // @@protoc_insertion_point(class_scope:CMsgDOTALeaguesInMonthResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_year();
  inline void clear_has_year();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague > leagues_;
  ::google::protobuf::uint32 year_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALeaguesInMonthResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSockAddrList : public ::google::protobuf::Message {
 public:
  CMsgSockAddrList();
  virtual ~CMsgSockAddrList();

  CMsgSockAddrList(const CMsgSockAddrList& from);

  inline CMsgSockAddrList& operator=(const CMsgSockAddrList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSockAddrList& default_instance();

  void Swap(CMsgSockAddrList* other);

  // implements Message ----------------------------------------------

  CMsgSockAddrList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSockAddrList& from);
  void MergeFrom(const CMsgSockAddrList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 ip = 1 [packed = true];
  inline int ip_size() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip(int index) const;
  inline void set_ip(int index, ::google::protobuf::uint32 value);
  inline void add_ip(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ip() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ip();

  // repeated uint32 port = 2 [packed = true];
  inline int port_size() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port(int index) const;
  inline void set_port(int index, ::google::protobuf::uint32 value);
  inline void add_port(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      port() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_port();

  // @@protoc_insertion_point(class_scope:CMsgSockAddrList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ip_;
  mutable int _ip_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > port_;
  mutable int _port_cached_byte_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSockAddrList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingGroupServerSample : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingGroupServerSample();
  virtual ~CMsgMatchmakingGroupServerSample();

  CMsgMatchmakingGroupServerSample(const CMsgMatchmakingGroupServerSample& from);

  inline CMsgMatchmakingGroupServerSample& operator=(const CMsgMatchmakingGroupServerSample& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingGroupServerSample& default_instance();

  void Swap(CMsgMatchmakingGroupServerSample* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingGroupServerSample* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingGroupServerSample& from);
  void MergeFrom(const CMsgMatchmakingGroupServerSample& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgSockAddrList servers_by_group = 5;
  inline int servers_by_group_size() const;
  inline void clear_servers_by_group();
  static const int kServersByGroupFieldNumber = 5;
  inline const ::CMsgSockAddrList& servers_by_group(int index) const;
  inline ::CMsgSockAddrList* mutable_servers_by_group(int index);
  inline ::CMsgSockAddrList* add_servers_by_group();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSockAddrList >&
      servers_by_group() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSockAddrList >*
      mutable_servers_by_group();

  // optional uint32 servers_to_ping = 2;
  inline bool has_servers_to_ping() const;
  inline void clear_servers_to_ping();
  static const int kServersToPingFieldNumber = 2;
  inline ::google::protobuf::uint32 servers_to_ping() const;
  inline void set_servers_to_ping(::google::protobuf::uint32 value);

  // optional uint32 reply_odds = 3;
  inline bool has_reply_odds() const;
  inline void clear_reply_odds();
  static const int kReplyOddsFieldNumber = 3;
  inline ::google::protobuf::uint32 reply_odds() const;
  inline void set_reply_odds(::google::protobuf::uint32 value);

  // optional uint32 reply_detailed_odds = 4;
  inline bool has_reply_detailed_odds() const;
  inline void clear_reply_detailed_odds();
  static const int kReplyDetailedOddsFieldNumber = 4;
  inline ::google::protobuf::uint32 reply_detailed_odds() const;
  inline void set_reply_detailed_odds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingGroupServerSample)
 private:
  inline void set_has_servers_to_ping();
  inline void clear_has_servers_to_ping();
  inline void set_has_reply_odds();
  inline void clear_has_reply_odds();
  inline void set_has_reply_detailed_odds();
  inline void clear_has_reply_detailed_odds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSockAddrList > servers_by_group_;
  ::google::protobuf::uint32 servers_to_ping_;
  ::google::protobuf::uint32 reply_odds_;
  ::google::protobuf::uint32 reply_detailed_odds_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingGroupServerSample* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGameserverPings_PingDetail : public ::google::protobuf::Message {
 public:
  CMsgClientGameserverPings_PingDetail();
  virtual ~CMsgClientGameserverPings_PingDetail();

  CMsgClientGameserverPings_PingDetail(const CMsgClientGameserverPings_PingDetail& from);

  inline CMsgClientGameserverPings_PingDetail& operator=(const CMsgClientGameserverPings_PingDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGameserverPings_PingDetail& default_instance();

  void Swap(CMsgClientGameserverPings_PingDetail* other);

  // implements Message ----------------------------------------------

  CMsgClientGameserverPings_PingDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGameserverPings_PingDetail& from);
  void MergeFrom(const CMsgClientGameserverPings_PingDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // optional uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // optional uint32 ping = 3;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 3;
  inline ::google::protobuf::uint32 ping() const;
  inline void set_ping(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientGameserverPings.PingDetail)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_ping();
  inline void clear_has_ping();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 ping_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGameserverPings_PingDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGameserverPings : public ::google::protobuf::Message {
 public:
  CMsgClientGameserverPings();
  virtual ~CMsgClientGameserverPings();

  CMsgClientGameserverPings(const CMsgClientGameserverPings& from);

  inline CMsgClientGameserverPings& operator=(const CMsgClientGameserverPings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGameserverPings& default_instance();

  void Swap(CMsgClientGameserverPings* other);

  // implements Message ----------------------------------------------

  CMsgClientGameserverPings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGameserverPings& from);
  void MergeFrom(const CMsgClientGameserverPings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientGameserverPings_PingDetail PingDetail;

  // accessors -------------------------------------------------------

  // repeated uint32 average_ping_by_group = 1;
  inline int average_ping_by_group_size() const;
  inline void clear_average_ping_by_group();
  static const int kAveragePingByGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 average_ping_by_group(int index) const;
  inline void set_average_ping_by_group(int index, ::google::protobuf::uint32 value);
  inline void add_average_ping_by_group(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      average_ping_by_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_average_ping_by_group();

  // repeated .CMsgClientGameserverPings.PingDetail ping_details = 2;
  inline int ping_details_size() const;
  inline void clear_ping_details();
  static const int kPingDetailsFieldNumber = 2;
  inline const ::CMsgClientGameserverPings_PingDetail& ping_details(int index) const;
  inline ::CMsgClientGameserverPings_PingDetail* mutable_ping_details(int index);
  inline ::CMsgClientGameserverPings_PingDetail* add_ping_details();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientGameserverPings_PingDetail >&
      ping_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientGameserverPings_PingDetail >*
      mutable_ping_details();

  // @@protoc_insertion_point(class_scope:CMsgClientGameserverPings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > average_ping_by_group_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientGameserverPings_PingDetail > ping_details_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGameserverPings* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchmakingStatsRequest();
  virtual ~CMsgDOTAMatchmakingStatsRequest();

  CMsgDOTAMatchmakingStatsRequest(const CMsgDOTAMatchmakingStatsRequest& from);

  inline CMsgDOTAMatchmakingStatsRequest& operator=(const CMsgDOTAMatchmakingStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchmakingStatsRequest& default_instance();

  void Swap(CMsgDOTAMatchmakingStatsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchmakingStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchmakingStatsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchmakingStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAMatchmakingStatsResponse();
  virtual ~CMsgDOTAMatchmakingStatsResponse();

  CMsgDOTAMatchmakingStatsResponse(const CMsgDOTAMatchmakingStatsResponse& from);

  inline CMsgDOTAMatchmakingStatsResponse& operator=(const CMsgDOTAMatchmakingStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchmakingStatsResponse& default_instance();

  void Swap(CMsgDOTAMatchmakingStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAMatchmakingStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 searching_players_by_group = 2;
  inline int searching_players_by_group_size() const;
  inline void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 2;
  inline ::google::protobuf::uint32 searching_players_by_group(int index) const;
  inline void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  inline void add_searching_players_by_group(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();

  // repeated uint32 searching_players_by_group_source2 = 7;
  inline int searching_players_by_group_source2_size() const;
  inline void clear_searching_players_by_group_source2();
  static const int kSearchingPlayersByGroupSource2FieldNumber = 7;
  inline ::google::protobuf::uint32 searching_players_by_group_source2(int index) const;
  inline void set_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value);
  inline void add_searching_players_by_group_source2(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group_source2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group_source2();

  // optional uint32 disabled_groups = 3;
  inline bool has_disabled_groups() const;
  inline void clear_disabled_groups();
  static const int kDisabledGroupsFieldNumber = 3;
  inline ::google::protobuf::uint32 disabled_groups() const;
  inline void set_disabled_groups(::google::protobuf::uint32 value);

  // optional uint32 disabled_groups_source2 = 8;
  inline bool has_disabled_groups_source2() const;
  inline void clear_disabled_groups_source2();
  static const int kDisabledGroupsSource2FieldNumber = 8;
  inline ::google::protobuf::uint32 disabled_groups_source2() const;
  inline void set_disabled_groups_source2(::google::protobuf::uint32 value);

  // optional .CMsgMatchmakingGroupServerSample gameserver_sample = 4;
  inline bool has_gameserver_sample() const;
  inline void clear_gameserver_sample();
  static const int kGameserverSampleFieldNumber = 4;
  inline const ::CMsgMatchmakingGroupServerSample& gameserver_sample() const;
  inline ::CMsgMatchmakingGroupServerSample* mutable_gameserver_sample();
  inline ::CMsgMatchmakingGroupServerSample* release_gameserver_sample();
  inline void set_allocated_gameserver_sample(::CMsgMatchmakingGroupServerSample* gameserver_sample);

  // optional .CMsgMatchmakingGroupServerSample gameserver_sample_source2 = 6;
  inline bool has_gameserver_sample_source2() const;
  inline void clear_gameserver_sample_source2();
  static const int kGameserverSampleSource2FieldNumber = 6;
  inline const ::CMsgMatchmakingGroupServerSample& gameserver_sample_source2() const;
  inline ::CMsgMatchmakingGroupServerSample* mutable_gameserver_sample_source2();
  inline ::CMsgMatchmakingGroupServerSample* release_gameserver_sample_source2();
  inline void set_allocated_gameserver_sample_source2(::CMsgMatchmakingGroupServerSample* gameserver_sample_source2);

  // optional bool maintenance_alerts = 5;
  inline bool has_maintenance_alerts() const;
  inline void clear_maintenance_alerts();
  static const int kMaintenanceAlertsFieldNumber = 5;
  inline bool maintenance_alerts() const;
  inline void set_maintenance_alerts(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAMatchmakingStatsResponse)
 private:
  inline void set_has_disabled_groups();
  inline void clear_has_disabled_groups();
  inline void set_has_disabled_groups_source2();
  inline void clear_has_disabled_groups_source2();
  inline void set_has_gameserver_sample();
  inline void clear_has_gameserver_sample();
  inline void set_has_gameserver_sample_source2();
  inline void clear_has_gameserver_sample_source2();
  inline void set_has_maintenance_alerts();
  inline void clear_has_maintenance_alerts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_source2_;
  ::google::protobuf::uint32 disabled_groups_;
  ::google::protobuf::uint32 disabled_groups_source2_;
  ::CMsgMatchmakingGroupServerSample* gameserver_sample_;
  ::CMsgMatchmakingGroupServerSample* gameserver_sample_source2_;
  bool maintenance_alerts_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAMatchmakingStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccess : public ::google::protobuf::Message {
 public:
  CMsgDOTASetMatchHistoryAccess();
  virtual ~CMsgDOTASetMatchHistoryAccess();

  CMsgDOTASetMatchHistoryAccess(const CMsgDOTASetMatchHistoryAccess& from);

  inline CMsgDOTASetMatchHistoryAccess& operator=(const CMsgDOTASetMatchHistoryAccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetMatchHistoryAccess& default_instance();

  void Swap(CMsgDOTASetMatchHistoryAccess* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetMatchHistoryAccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetMatchHistoryAccess& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool allow_3rd_party_match_history = 1;
  inline bool has_allow_3rd_party_match_history() const;
  inline void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 1;
  inline bool allow_3rd_party_match_history() const;
  inline void set_allow_3rd_party_match_history(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetMatchHistoryAccess)
 private:
  inline void set_has_allow_3rd_party_match_history();
  inline void clear_has_allow_3rd_party_match_history();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool allow_3rd_party_match_history_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetMatchHistoryAccess* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccessResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTASetMatchHistoryAccessResponse();
  virtual ~CMsgDOTASetMatchHistoryAccessResponse();

  CMsgDOTASetMatchHistoryAccessResponse(const CMsgDOTASetMatchHistoryAccessResponse& from);

  inline CMsgDOTASetMatchHistoryAccessResponse& operator=(const CMsgDOTASetMatchHistoryAccessResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetMatchHistoryAccessResponse& default_instance();

  void Swap(CMsgDOTASetMatchHistoryAccessResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetMatchHistoryAccessResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetMatchHistoryAccessResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetMatchHistoryAccessResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTANotifyAccountFlagsChange : public ::google::protobuf::Message {
 public:
  CMsgDOTANotifyAccountFlagsChange();
  virtual ~CMsgDOTANotifyAccountFlagsChange();

  CMsgDOTANotifyAccountFlagsChange(const CMsgDOTANotifyAccountFlagsChange& from);

  inline CMsgDOTANotifyAccountFlagsChange& operator=(const CMsgDOTANotifyAccountFlagsChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTANotifyAccountFlagsChange& default_instance();

  void Swap(CMsgDOTANotifyAccountFlagsChange* other);

  // implements Message ----------------------------------------------

  CMsgDOTANotifyAccountFlagsChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  void MergeFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 account_flags = 2;
  inline bool has_account_flags() const;
  inline void clear_account_flags();
  static const int kAccountFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 account_flags() const;
  inline void set_account_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTANotifyAccountFlagsChange)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_account_flags();
  inline void clear_has_account_flags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 account_flags_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTANotifyAccountFlagsChange* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacy : public ::google::protobuf::Message {
 public:
  CMsgDOTASetProfilePrivacy();
  virtual ~CMsgDOTASetProfilePrivacy();

  CMsgDOTASetProfilePrivacy(const CMsgDOTASetProfilePrivacy& from);

  inline CMsgDOTASetProfilePrivacy& operator=(const CMsgDOTASetProfilePrivacy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetProfilePrivacy& default_instance();

  void Swap(CMsgDOTASetProfilePrivacy* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetProfilePrivacy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetProfilePrivacy& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool profile_private = 1;
  inline bool has_profile_private() const;
  inline void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 1;
  inline bool profile_private() const;
  inline void set_profile_private(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetProfilePrivacy)
 private:
  inline void set_has_profile_private();
  inline void clear_has_profile_private();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool profile_private_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetProfilePrivacy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacyResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTASetProfilePrivacyResponse();
  virtual ~CMsgDOTASetProfilePrivacyResponse();

  CMsgDOTASetProfilePrivacyResponse(const CMsgDOTASetProfilePrivacyResponse& from);

  inline CMsgDOTASetProfilePrivacyResponse& operator=(const CMsgDOTASetProfilePrivacyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetProfilePrivacyResponse& default_instance();

  void Swap(CMsgDOTASetProfilePrivacyResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetProfilePrivacyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetProfilePrivacyResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetProfilePrivacyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItem : public ::google::protobuf::Message {
 public:
  CMsgUpgradeLeagueItem();
  virtual ~CMsgUpgradeLeagueItem();

  CMsgUpgradeLeagueItem(const CMsgUpgradeLeagueItem& from);

  inline CMsgUpgradeLeagueItem& operator=(const CMsgUpgradeLeagueItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpgradeLeagueItem& default_instance();

  void Swap(CMsgUpgradeLeagueItem* other);

  // implements Message ----------------------------------------------

  CMsgUpgradeLeagueItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpgradeLeagueItem& from);
  void MergeFrom(const CMsgUpgradeLeagueItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 2;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgUpgradeLeagueItem)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpgradeLeagueItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItemResponse : public ::google::protobuf::Message {
 public:
  CMsgUpgradeLeagueItemResponse();
  virtual ~CMsgUpgradeLeagueItemResponse();

  CMsgUpgradeLeagueItemResponse(const CMsgUpgradeLeagueItemResponse& from);

  inline CMsgUpgradeLeagueItemResponse& operator=(const CMsgUpgradeLeagueItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpgradeLeagueItemResponse& default_instance();

  void Swap(CMsgUpgradeLeagueItemResponse* other);

  // implements Message ----------------------------------------------

  CMsgUpgradeLeagueItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpgradeLeagueItemResponse& from);
  void MergeFrom(const CMsgUpgradeLeagueItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgUpgradeLeagueItemResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpgradeLeagueItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCWatchDownloadedReplay : public ::google::protobuf::Message {
 public:
  CMsgGCWatchDownloadedReplay();
  virtual ~CMsgGCWatchDownloadedReplay();

  CMsgGCWatchDownloadedReplay(const CMsgGCWatchDownloadedReplay& from);

  inline CMsgGCWatchDownloadedReplay& operator=(const CMsgGCWatchDownloadedReplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCWatchDownloadedReplay& default_instance();

  void Swap(CMsgGCWatchDownloadedReplay* other);

  // implements Message ----------------------------------------------

  CMsgGCWatchDownloadedReplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCWatchDownloadedReplay& from);
  void MergeFrom(const CMsgGCWatchDownloadedReplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional .DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
  inline bool has_watch_type() const;
  inline void clear_watch_type();
  static const int kWatchTypeFieldNumber = 2;
  inline ::DOTA_WatchReplayType watch_type() const;
  inline void set_watch_type(::DOTA_WatchReplayType value);

  // @@protoc_insertion_point(class_scope:CMsgGCWatchDownloadedReplay)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_watch_type();
  inline void clear_has_watch_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int watch_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCWatchDownloadedReplay* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationState : public ::google::protobuf::Message {
 public:
  CMsgSetMapLocationState();
  virtual ~CMsgSetMapLocationState();

  CMsgSetMapLocationState(const CMsgSetMapLocationState& from);

  inline CMsgSetMapLocationState& operator=(const CMsgSetMapLocationState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetMapLocationState& default_instance();

  void Swap(CMsgSetMapLocationState* other);

  // implements Message ----------------------------------------------

  CMsgSetMapLocationState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetMapLocationState& from);
  void MergeFrom(const CMsgSetMapLocationState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 location_id = 1;
  inline bool has_location_id() const;
  inline void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  inline ::google::protobuf::int32 location_id() const;
  inline void set_location_id(::google::protobuf::int32 value);

  // optional bool completed = 2;
  inline bool has_completed() const;
  inline void clear_completed();
  static const int kCompletedFieldNumber = 2;
  inline bool completed() const;
  inline void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:CMsgSetMapLocationState)
 private:
  inline void set_has_location_id();
  inline void clear_has_location_id();
  inline void set_has_completed();
  inline void clear_has_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 location_id_;
  bool completed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetMapLocationState* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationStateResponse : public ::google::protobuf::Message {
 public:
  CMsgSetMapLocationStateResponse();
  virtual ~CMsgSetMapLocationStateResponse();

  CMsgSetMapLocationStateResponse(const CMsgSetMapLocationStateResponse& from);

  inline CMsgSetMapLocationStateResponse& operator=(const CMsgSetMapLocationStateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetMapLocationStateResponse& default_instance();

  void Swap(CMsgSetMapLocationStateResponse* other);

  // implements Message ----------------------------------------------

  CMsgSetMapLocationStateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetMapLocationStateResponse& from);
  void MergeFrom(const CMsgSetMapLocationStateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSetMapLocationStateResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetMapLocationStateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgResetMapLocations : public ::google::protobuf::Message {
 public:
  CMsgResetMapLocations();
  virtual ~CMsgResetMapLocations();

  CMsgResetMapLocations(const CMsgResetMapLocations& from);

  inline CMsgResetMapLocations& operator=(const CMsgResetMapLocations& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResetMapLocations& default_instance();

  void Swap(CMsgResetMapLocations* other);

  // implements Message ----------------------------------------------

  CMsgResetMapLocations* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgResetMapLocations& from);
  void MergeFrom(const CMsgResetMapLocations& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgResetMapLocations)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgResetMapLocations* default_instance_;
};
// -------------------------------------------------------------------

class CMsgResetMapLocationsResponse : public ::google::protobuf::Message {
 public:
  CMsgResetMapLocationsResponse();
  virtual ~CMsgResetMapLocationsResponse();

  CMsgResetMapLocationsResponse(const CMsgResetMapLocationsResponse& from);

  inline CMsgResetMapLocationsResponse& operator=(const CMsgResetMapLocationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResetMapLocationsResponse& default_instance();

  void Swap(CMsgResetMapLocationsResponse* other);

  // implements Message ----------------------------------------------

  CMsgResetMapLocationsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgResetMapLocationsResponse& from);
  void MergeFrom(const CMsgResetMapLocationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgResetMapLocationsResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgResetMapLocationsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRefreshPartnerAccountLink : public ::google::protobuf::Message {
 public:
  CMsgRefreshPartnerAccountLink();
  virtual ~CMsgRefreshPartnerAccountLink();

  CMsgRefreshPartnerAccountLink(const CMsgRefreshPartnerAccountLink& from);

  inline CMsgRefreshPartnerAccountLink& operator=(const CMsgRefreshPartnerAccountLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRefreshPartnerAccountLink& default_instance();

  void Swap(CMsgRefreshPartnerAccountLink* other);

  // implements Message ----------------------------------------------

  CMsgRefreshPartnerAccountLink* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRefreshPartnerAccountLink& from);
  void MergeFrom(const CMsgRefreshPartnerAccountLink& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 partner_type = 1;
  inline bool has_partner_type() const;
  inline void clear_partner_type();
  static const int kPartnerTypeFieldNumber = 1;
  inline ::google::protobuf::int32 partner_type() const;
  inline void set_partner_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgRefreshPartnerAccountLink)
 private:
  inline void set_has_partner_type();
  inline void clear_has_partner_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 partner_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRefreshPartnerAccountLink* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientsRejoinChatChannels : public ::google::protobuf::Message {
 public:
  CMsgClientsRejoinChatChannels();
  virtual ~CMsgClientsRejoinChatChannels();

  CMsgClientsRejoinChatChannels(const CMsgClientsRejoinChatChannels& from);

  inline CMsgClientsRejoinChatChannels& operator=(const CMsgClientsRejoinChatChannels& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientsRejoinChatChannels& default_instance();

  void Swap(CMsgClientsRejoinChatChannels* other);

  // implements Message ----------------------------------------------

  CMsgClientsRejoinChatChannels* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientsRejoinChatChannels& from);
  void MergeFrom(const CMsgClientsRejoinChatChannels& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientsRejoinChatChannels)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientsRejoinChatChannels* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASendFriendRecruits : public ::google::protobuf::Message {
 public:
  CMsgDOTASendFriendRecruits();
  virtual ~CMsgDOTASendFriendRecruits();

  CMsgDOTASendFriendRecruits(const CMsgDOTASendFriendRecruits& from);

  inline CMsgDOTASendFriendRecruits& operator=(const CMsgDOTASendFriendRecruits& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASendFriendRecruits& default_instance();

  void Swap(CMsgDOTASendFriendRecruits* other);

  // implements Message ----------------------------------------------

  CMsgDOTASendFriendRecruits* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASendFriendRecruits& from);
  void MergeFrom(const CMsgDOTASendFriendRecruits& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recruits = 1;
  inline int recruits_size() const;
  inline void clear_recruits();
  static const int kRecruitsFieldNumber = 1;
  inline ::google::protobuf::uint32 recruits(int index) const;
  inline void set_recruits(int index, ::google::protobuf::uint32 value);
  inline void add_recruits(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recruits() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recruits();

  // @@protoc_insertion_point(class_scope:CMsgDOTASendFriendRecruits)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recruits_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASendFriendRecruits* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitsRequest();
  virtual ~CMsgDOTAFriendRecruitsRequest();

  CMsgDOTAFriendRecruitsRequest(const CMsgDOTAFriendRecruitsRequest& from);

  inline CMsgDOTAFriendRecruitsRequest& operator=(const CMsgDOTAFriendRecruitsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsRequest& default_instance();

  void Swap(CMsgDOTAFriendRecruitsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitsRequest& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();
  virtual ~CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);

  inline CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& operator=(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& default_instance();

  void Swap(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 levels_earned = 3;
  inline bool has_levels_earned() const;
  inline void clear_levels_earned();
  static const int kLevelsEarnedFieldNumber = 3;
  inline ::google::protobuf::uint32 levels_earned() const;
  inline void set_levels_earned(::google::protobuf::uint32 value);

  // optional bool bonus = 4;
  inline bool has_bonus() const;
  inline void clear_bonus();
  static const int kBonusFieldNumber = 4;
  inline bool bonus() const;
  inline void set_bonus(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_levels_earned();
  inline void clear_has_levels_earned();
  inline void set_has_bonus();
  inline void clear_has_bonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 levels_earned_;
  bool bonus_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitsResponse();
  virtual ~CMsgDOTAFriendRecruitsResponse();

  CMsgDOTAFriendRecruitsResponse(const CMsgDOTAFriendRecruitsResponse& from);

  inline CMsgDOTAFriendRecruitsResponse& operator=(const CMsgDOTAFriendRecruitsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsResponse& default_instance();

  void Swap(CMsgDOTAFriendRecruitsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus FriendRecruitStatus;

  typedef CMsgDOTAFriendRecruitsResponse_EResult EResult;
  static const EResult SUCCESS = CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTAFriendRecruitsResponse_EResult result() const;
  inline void set_result(::CMsgDOTAFriendRecruitsResponse_EResult value);

  // repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
  inline int recruits_size() const;
  inline void clear_recruits();
  static const int kRecruitsFieldNumber = 2;
  inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruits(int index) const;
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruits(int index);
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruits();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruits() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruits();

  // repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
  inline int recruiters_size() const;
  inline void clear_recruiters();
  static const int kRecruitersFieldNumber = 3;
  inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruiters(int index) const;
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruiters(int index);
  inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruiters();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruiters() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruiters();

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruits_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruiters_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitInviteAcceptDecline : public ::google::protobuf::Message {
 public:
  CMsgDOTAFriendRecruitInviteAcceptDecline();
  virtual ~CMsgDOTAFriendRecruitInviteAcceptDecline();

  CMsgDOTAFriendRecruitInviteAcceptDecline(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);

  inline CMsgDOTAFriendRecruitInviteAcceptDecline& operator=(const CMsgDOTAFriendRecruitInviteAcceptDecline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitInviteAcceptDecline& default_instance();

  void Swap(CMsgDOTAFriendRecruitInviteAcceptDecline* other);

  // implements Message ----------------------------------------------

  CMsgDOTAFriendRecruitInviteAcceptDecline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  void MergeFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accepted = 1;
  inline bool has_accepted() const;
  inline void clear_accepted();
  static const int kAcceptedFieldNumber = 1;
  inline bool accepted() const;
  inline void set_accepted(bool value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFriendRecruitInviteAcceptDecline)
 private:
  inline void set_has_accepted();
  inline void clear_has_accepted();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool accepted_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFriendRecruitInviteAcceptDecline* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePool : public ::google::protobuf::Message {
 public:
  CMsgRequestLeaguePrizePool();
  virtual ~CMsgRequestLeaguePrizePool();

  CMsgRequestLeaguePrizePool(const CMsgRequestLeaguePrizePool& from);

  inline CMsgRequestLeaguePrizePool& operator=(const CMsgRequestLeaguePrizePool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeaguePrizePool& default_instance();

  void Swap(CMsgRequestLeaguePrizePool* other);

  // implements Message ----------------------------------------------

  CMsgRequestLeaguePrizePool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestLeaguePrizePool& from);
  void MergeFrom(const CMsgRequestLeaguePrizePool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRequestLeaguePrizePool)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestLeaguePrizePool* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePoolResponse : public ::google::protobuf::Message {
 public:
  CMsgRequestLeaguePrizePoolResponse();
  virtual ~CMsgRequestLeaguePrizePoolResponse();

  CMsgRequestLeaguePrizePoolResponse(const CMsgRequestLeaguePrizePoolResponse& from);

  inline CMsgRequestLeaguePrizePoolResponse& operator=(const CMsgRequestLeaguePrizePoolResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeaguePrizePoolResponse& default_instance();

  void Swap(CMsgRequestLeaguePrizePoolResponse* other);

  // implements Message ----------------------------------------------

  CMsgRequestLeaguePrizePoolResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  void MergeFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 prize_pool = 2;
  inline bool has_prize_pool() const;
  inline void clear_prize_pool();
  static const int kPrizePoolFieldNumber = 2;
  inline ::google::protobuf::uint32 prize_pool() const;
  inline void set_prize_pool(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgRequestLeaguePrizePoolResponse)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_prize_pool();
  inline void clear_has_prize_pool();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 prize_pool_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestLeaguePrizePoolResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandings : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStandings();
  virtual ~CMsgGCGetHeroStandings();

  CMsgGCGetHeroStandings(const CMsgGCGetHeroStandings& from);

  inline CMsgGCGetHeroStandings& operator=(const CMsgGCGetHeroStandings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandings& default_instance();

  void Swap(CMsgGCGetHeroStandings* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStandings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStandings& from);
  void MergeFrom(const CMsgGCGetHeroStandings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStandings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStandings* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse_Hero : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStandingsResponse_Hero();
  virtual ~CMsgGCGetHeroStandingsResponse_Hero();

  CMsgGCGetHeroStandingsResponse_Hero(const CMsgGCGetHeroStandingsResponse_Hero& from);

  inline CMsgGCGetHeroStandingsResponse_Hero& operator=(const CMsgGCGetHeroStandingsResponse_Hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandingsResponse_Hero& default_instance();

  void Swap(CMsgGCGetHeroStandingsResponse_Hero* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStandingsResponse_Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 wins = 2;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 wins() const;
  inline void set_wins(::google::protobuf::uint32 value);

  // optional uint32 losses = 3;
  inline bool has_losses() const;
  inline void clear_losses();
  static const int kLossesFieldNumber = 3;
  inline ::google::protobuf::uint32 losses() const;
  inline void set_losses(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStandingsResponse.Hero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_losses();
  inline void clear_has_losses();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 losses_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStandingsResponse_Hero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCGetHeroStandingsResponse();
  virtual ~CMsgGCGetHeroStandingsResponse();

  CMsgGCGetHeroStandingsResponse(const CMsgGCGetHeroStandingsResponse& from);

  inline CMsgGCGetHeroStandingsResponse& operator=(const CMsgGCGetHeroStandingsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandingsResponse& default_instance();

  void Swap(CMsgGCGetHeroStandingsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCGetHeroStandingsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetHeroStandingsResponse& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCGetHeroStandingsResponse_Hero Hero;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCGetHeroStandingsResponse.Hero standings = 1;
  inline int standings_size() const;
  inline void clear_standings();
  static const int kStandingsFieldNumber = 1;
  inline const ::CMsgGCGetHeroStandingsResponse_Hero& standings(int index) const;
  inline ::CMsgGCGetHeroStandingsResponse_Hero* mutable_standings(int index);
  inline ::CMsgGCGetHeroStandingsResponse_Hero* add_standings();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >&
      standings() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >*
      mutable_standings();

  // @@protoc_insertion_point(class_scope:CMsgGCGetHeroStandingsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero > standings_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetHeroStandingsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsRequest : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReservationsRequest();
  virtual ~CMsgGCItemEditorReservationsRequest();

  CMsgGCItemEditorReservationsRequest(const CMsgGCItemEditorReservationsRequest& from);

  inline CMsgGCItemEditorReservationsRequest& operator=(const CMsgGCItemEditorReservationsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservationsRequest& default_instance();

  void Swap(CMsgGCItemEditorReservationsRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReservationsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReservationsRequest& from);
  void MergeFrom(const CMsgGCItemEditorReservationsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReservationsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReservationsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservation : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReservation();
  virtual ~CMsgGCItemEditorReservation();

  CMsgGCItemEditorReservation(const CMsgGCItemEditorReservation& from);

  inline CMsgGCItemEditorReservation& operator=(const CMsgGCItemEditorReservation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservation& default_instance();

  void Swap(CMsgGCItemEditorReservation* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReservation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReservation& from);
  void MergeFrom(const CMsgGCItemEditorReservation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReservation)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReservation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReservationsResponse();
  virtual ~CMsgGCItemEditorReservationsResponse();

  CMsgGCItemEditorReservationsResponse(const CMsgGCItemEditorReservationsResponse& from);

  inline CMsgGCItemEditorReservationsResponse& operator=(const CMsgGCItemEditorReservationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservationsResponse& default_instance();

  void Swap(CMsgGCItemEditorReservationsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReservationsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReservationsResponse& from);
  void MergeFrom(const CMsgGCItemEditorReservationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCItemEditorReservation reservations = 1;
  inline int reservations_size() const;
  inline void clear_reservations();
  static const int kReservationsFieldNumber = 1;
  inline const ::CMsgGCItemEditorReservation& reservations(int index) const;
  inline ::CMsgGCItemEditorReservation* mutable_reservations(int index);
  inline ::CMsgGCItemEditorReservation* add_reservations();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >&
      reservations() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >*
      mutable_reservations();

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReservationsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation > reservations_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReservationsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDef : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReserveItemDef();
  virtual ~CMsgGCItemEditorReserveItemDef();

  CMsgGCItemEditorReserveItemDef(const CMsgGCItemEditorReserveItemDef& from);

  inline CMsgGCItemEditorReserveItemDef& operator=(const CMsgGCItemEditorReserveItemDef& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReserveItemDef& default_instance();

  void Swap(CMsgGCItemEditorReserveItemDef* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReserveItemDef* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReserveItemDef& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDef& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReserveItemDef)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::google::protobuf::uint32 def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReserveItemDef* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDefResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReserveItemDefResponse();
  virtual ~CMsgGCItemEditorReserveItemDefResponse();

  CMsgGCItemEditorReserveItemDefResponse(const CMsgGCItemEditorReserveItemDefResponse& from);

  inline CMsgGCItemEditorReserveItemDefResponse& operator=(const CMsgGCItemEditorReserveItemDefResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReserveItemDefResponse& default_instance();

  void Swap(CMsgGCItemEditorReserveItemDefResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReserveItemDefResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional uint32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReserveItemDefResponse)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReserveItemDefResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservation : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReleaseReservation();
  virtual ~CMsgGCItemEditorReleaseReservation();

  CMsgGCItemEditorReleaseReservation(const CMsgGCItemEditorReleaseReservation& from);

  inline CMsgGCItemEditorReleaseReservation& operator=(const CMsgGCItemEditorReleaseReservation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReleaseReservation& default_instance();

  void Swap(CMsgGCItemEditorReleaseReservation* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReleaseReservation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReleaseReservation& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReleaseReservation)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::google::protobuf::uint32 def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReleaseReservation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservationResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorReleaseReservationResponse();
  virtual ~CMsgGCItemEditorReleaseReservationResponse();

  CMsgGCItemEditorReleaseReservationResponse(const CMsgGCItemEditorReleaseReservationResponse& from);

  inline CMsgGCItemEditorReleaseReservationResponse& operator=(const CMsgGCItemEditorReleaseReservationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReleaseReservationResponse& default_instance();

  void Swap(CMsgGCItemEditorReleaseReservationResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorReleaseReservationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional bool released = 2;
  inline bool has_released() const;
  inline void clear_released();
  static const int kReleasedFieldNumber = 2;
  inline bool released() const;
  inline void set_released(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorReleaseReservationResponse)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_released();
  inline void clear_has_released();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 def_index_;
  bool released_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorReleaseReservationResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorRequestLeagueInfo : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorRequestLeagueInfo();
  virtual ~CMsgGCItemEditorRequestLeagueInfo();

  CMsgGCItemEditorRequestLeagueInfo(const CMsgGCItemEditorRequestLeagueInfo& from);

  inline CMsgGCItemEditorRequestLeagueInfo& operator=(const CMsgGCItemEditorRequestLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorRequestLeagueInfo& default_instance();

  void Swap(CMsgGCItemEditorRequestLeagueInfo* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorRequestLeagueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorRequestLeagueInfo& from);
  void MergeFrom(const CMsgGCItemEditorRequestLeagueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorRequestLeagueInfo)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorRequestLeagueInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorLeagueInfoResponse : public ::google::protobuf::Message {
 public:
  CMsgGCItemEditorLeagueInfoResponse();
  virtual ~CMsgGCItemEditorLeagueInfoResponse();

  CMsgGCItemEditorLeagueInfoResponse(const CMsgGCItemEditorLeagueInfoResponse& from);

  inline CMsgGCItemEditorLeagueInfoResponse& operator=(const CMsgGCItemEditorLeagueInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorLeagueInfoResponse& default_instance();

  void Swap(CMsgGCItemEditorLeagueInfoResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCItemEditorLeagueInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCItemEditorLeagueInfoResponse& from);
  void MergeFrom(const CMsgGCItemEditorLeagueInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional string league_name = 2;
  inline bool has_league_name() const;
  inline void clear_league_name();
  static const int kLeagueNameFieldNumber = 2;
  inline const ::std::string& league_name() const;
  inline void set_league_name(const ::std::string& value);
  inline void set_league_name(const char* value);
  inline void set_league_name(const char* value, size_t size);
  inline ::std::string* mutable_league_name();
  inline ::std::string* release_league_name();
  inline void set_allocated_league_name(::std::string* league_name);

  // optional string league_desc = 3;
  inline bool has_league_desc() const;
  inline void clear_league_desc();
  static const int kLeagueDescFieldNumber = 3;
  inline const ::std::string& league_desc() const;
  inline void set_league_desc(const ::std::string& value);
  inline void set_league_desc(const char* value);
  inline void set_league_desc(const char* value, size_t size);
  inline ::std::string* mutable_league_desc();
  inline ::std::string* release_league_desc();
  inline void set_allocated_league_desc(::std::string* league_desc);

  // optional string league_url = 4;
  inline bool has_league_url() const;
  inline void clear_league_url();
  static const int kLeagueUrlFieldNumber = 4;
  inline const ::std::string& league_url() const;
  inline void set_league_url(const ::std::string& value);
  inline void set_league_url(const char* value);
  inline void set_league_url(const char* value, size_t size);
  inline ::std::string* mutable_league_url();
  inline ::std::string* release_league_url();
  inline void set_allocated_league_url(::std::string* league_url);

  // optional string revenue_url = 5;
  inline bool has_revenue_url() const;
  inline void clear_revenue_url();
  static const int kRevenueUrlFieldNumber = 5;
  inline const ::std::string& revenue_url() const;
  inline void set_revenue_url(const ::std::string& value);
  inline void set_revenue_url(const char* value);
  inline void set_revenue_url(const char* value, size_t size);
  inline ::std::string* mutable_revenue_url();
  inline ::std::string* release_revenue_url();
  inline void set_allocated_revenue_url(::std::string* revenue_url);

  // optional uint32 tier = 6;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 6;
  inline ::google::protobuf::uint32 tier() const;
  inline void set_tier(::google::protobuf::uint32 value);

  // optional uint32 location = 7;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 7;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);

  // optional uint32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCItemEditorLeagueInfoResponse)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_league_name();
  inline void clear_has_league_name();
  inline void set_has_league_desc();
  inline void clear_has_league_desc();
  inline void set_has_league_url();
  inline void clear_has_league_url();
  inline void set_has_revenue_url();
  inline void clear_has_revenue_url();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* league_name_;
  ::std::string* league_desc_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 tier_;
  ::std::string* league_url_;
  ::std::string* revenue_url_;
  ::google::protobuf::uint32 location_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCItemEditorLeagueInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARewardTutorialPrizes : public ::google::protobuf::Message {
 public:
  CMsgDOTARewardTutorialPrizes();
  virtual ~CMsgDOTARewardTutorialPrizes();

  CMsgDOTARewardTutorialPrizes(const CMsgDOTARewardTutorialPrizes& from);

  inline CMsgDOTARewardTutorialPrizes& operator=(const CMsgDOTARewardTutorialPrizes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARewardTutorialPrizes& default_instance();

  void Swap(CMsgDOTARewardTutorialPrizes* other);

  // implements Message ----------------------------------------------

  CMsgDOTARewardTutorialPrizes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARewardTutorialPrizes& from);
  void MergeFrom(const CMsgDOTARewardTutorialPrizes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 location_id = 1;
  inline bool has_location_id() const;
  inline void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  inline ::google::protobuf::uint32 location_id() const;
  inline void set_location_id(::google::protobuf::uint32 value);

  // optional bool tracking_only = 2;
  inline bool has_tracking_only() const;
  inline void clear_tracking_only();
  static const int kTrackingOnlyFieldNumber = 2;
  inline bool tracking_only() const;
  inline void set_tracking_only(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARewardTutorialPrizes)
 private:
  inline void set_has_location_id();
  inline void clear_has_location_id();
  inline void set_has_tracking_only();
  inline void clear_has_tracking_only();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 location_id_;
  bool tracking_only_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARewardTutorialPrizes* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScorePost : public ::google::protobuf::Message {
 public:
  CMsgDOTALastHitChallengeHighScorePost();
  virtual ~CMsgDOTALastHitChallengeHighScorePost();

  CMsgDOTALastHitChallengeHighScorePost(const CMsgDOTALastHitChallengeHighScorePost& from);

  inline CMsgDOTALastHitChallengeHighScorePost& operator=(const CMsgDOTALastHitChallengeHighScorePost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScorePost& default_instance();

  void Swap(CMsgDOTALastHitChallengeHighScorePost* other);

  // implements Message ----------------------------------------------

  CMsgDOTALastHitChallengeHighScorePost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 high_score = 2;
  inline bool has_high_score() const;
  inline void clear_high_score();
  static const int kHighScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 high_score() const;
  inline void set_high_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALastHitChallengeHighScorePost)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_high_score();
  inline void clear_has_high_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 high_score_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALastHitChallengeHighScorePost* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTALastHitChallengeHighScoreRequest();
  virtual ~CMsgDOTALastHitChallengeHighScoreRequest();

  CMsgDOTALastHitChallengeHighScoreRequest(const CMsgDOTALastHitChallengeHighScoreRequest& from);

  inline CMsgDOTALastHitChallengeHighScoreRequest& operator=(const CMsgDOTALastHitChallengeHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScoreRequest& default_instance();

  void Swap(CMsgDOTALastHitChallengeHighScoreRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTALastHitChallengeHighScoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALastHitChallengeHighScoreRequest)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALastHitChallengeHighScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTALastHitChallengeHighScoreResponse();
  virtual ~CMsgDOTALastHitChallengeHighScoreResponse();

  CMsgDOTALastHitChallengeHighScoreResponse(const CMsgDOTALastHitChallengeHighScoreResponse& from);

  inline CMsgDOTALastHitChallengeHighScoreResponse& operator=(const CMsgDOTALastHitChallengeHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScoreResponse& default_instance();

  void Swap(CMsgDOTALastHitChallengeHighScoreResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTALastHitChallengeHighScoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALastHitChallengeHighScoreResponse)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALastHitChallengeHighScoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFlipLobbyTeams : public ::google::protobuf::Message {
 public:
  CMsgFlipLobbyTeams();
  virtual ~CMsgFlipLobbyTeams();

  CMsgFlipLobbyTeams(const CMsgFlipLobbyTeams& from);

  inline CMsgFlipLobbyTeams& operator=(const CMsgFlipLobbyTeams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFlipLobbyTeams& default_instance();

  void Swap(CMsgFlipLobbyTeams* other);

  // implements Message ----------------------------------------------

  CMsgFlipLobbyTeams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFlipLobbyTeams& from);
  void MergeFrom(const CMsgFlipLobbyTeams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgFlipLobbyTeams)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgFlipLobbyTeams* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPresentedClientTerminateDlg : public ::google::protobuf::Message {
 public:
  CMsgPresentedClientTerminateDlg();
  virtual ~CMsgPresentedClientTerminateDlg();

  CMsgPresentedClientTerminateDlg(const CMsgPresentedClientTerminateDlg& from);

  inline CMsgPresentedClientTerminateDlg& operator=(const CMsgPresentedClientTerminateDlg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPresentedClientTerminateDlg& default_instance();

  void Swap(CMsgPresentedClientTerminateDlg* other);

  // implements Message ----------------------------------------------

  CMsgPresentedClientTerminateDlg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPresentedClientTerminateDlg& from);
  void MergeFrom(const CMsgPresentedClientTerminateDlg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPresentedClientTerminateDlg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgPresentedClientTerminateDlg* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCLobbyUpdateBroadcastChannelInfo : public ::google::protobuf::Message {
 public:
  CMsgGCLobbyUpdateBroadcastChannelInfo();
  virtual ~CMsgGCLobbyUpdateBroadcastChannelInfo();

  CMsgGCLobbyUpdateBroadcastChannelInfo(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);

  inline CMsgGCLobbyUpdateBroadcastChannelInfo& operator=(const CMsgGCLobbyUpdateBroadcastChannelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLobbyUpdateBroadcastChannelInfo& default_instance();

  void Swap(CMsgGCLobbyUpdateBroadcastChannelInfo* other);

  // implements Message ----------------------------------------------

  CMsgGCLobbyUpdateBroadcastChannelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  void MergeFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional string country_code = 2;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string language_code = 4;
  inline bool has_language_code() const;
  inline void clear_language_code();
  static const int kLanguageCodeFieldNumber = 4;
  inline const ::std::string& language_code() const;
  inline void set_language_code(const ::std::string& value);
  inline void set_language_code(const char* value);
  inline void set_language_code(const char* value, size_t size);
  inline ::std::string* mutable_language_code();
  inline ::std::string* release_language_code();
  inline void set_allocated_language_code(::std::string* language_code);

  // @@protoc_insertion_point(class_scope:CMsgGCLobbyUpdateBroadcastChannelInfo)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_language_code();
  inline void clear_has_language_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* country_code_;
  ::std::string* description_;
  ::std::string* language_code_;
  ::google::protobuf::uint32 channel_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCLobbyUpdateBroadcastChannelInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemEventPrize : public ::google::protobuf::Message {
 public:
  CMsgDOTARedeemEventPrize();
  virtual ~CMsgDOTARedeemEventPrize();

  CMsgDOTARedeemEventPrize(const CMsgDOTARedeemEventPrize& from);

  inline CMsgDOTARedeemEventPrize& operator=(const CMsgDOTARedeemEventPrize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemEventPrize& default_instance();

  void Swap(CMsgDOTARedeemEventPrize* other);

  // implements Message ----------------------------------------------

  CMsgDOTARedeemEventPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARedeemEventPrize& from);
  void MergeFrom(const CMsgDOTARedeemEventPrize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_id = 1;
  inline bool has_prize_id() const;
  inline void clear_prize_id();
  static const int kPrizeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 prize_id() const;
  inline void set_prize_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 2;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARedeemEventPrize)
 private:
  inline void set_has_prize_id();
  inline void clear_has_prize_id();
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prize_id_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARedeemEventPrize* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemEventPrizeResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARedeemEventPrizeResponse();
  virtual ~CMsgDOTARedeemEventPrizeResponse();

  CMsgDOTARedeemEventPrizeResponse(const CMsgDOTARedeemEventPrizeResponse& from);

  inline CMsgDOTARedeemEventPrizeResponse& operator=(const CMsgDOTARedeemEventPrizeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemEventPrizeResponse& default_instance();

  void Swap(CMsgDOTARedeemEventPrizeResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTARedeemEventPrizeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARedeemEventPrizeResponse& from);
  void MergeFrom(const CMsgDOTARedeemEventPrizeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARedeemEventPrizeResponse_ResultCode ResultCode;
  static const ResultCode Success = CMsgDOTARedeemEventPrizeResponse_ResultCode_Success;
  static const ResultCode ServerError = CMsgDOTARedeemEventPrizeResponse_ResultCode_ServerError;
  static const ResultCode InsufficientPoints = CMsgDOTARedeemEventPrizeResponse_ResultCode_InsufficientPoints;
  static const ResultCode PointsHeld = CMsgDOTARedeemEventPrizeResponse_ResultCode_PointsHeld;
  static inline bool ResultCode_IsValid(int value) {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_IsValid(value);
  }
  static const ResultCode ResultCode_MIN =
    CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MIN;
  static const ResultCode ResultCode_MAX =
    CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_MAX;
  static const int ResultCode_ARRAYSIZE =
    CMsgDOTARedeemEventPrizeResponse_ResultCode_ResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResultCode_descriptor() {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor();
  }
  static inline const ::std::string& ResultCode_Name(ResultCode value) {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_Name(value);
  }
  static inline bool ResultCode_Parse(const ::std::string& name,
      ResultCode* value) {
    return CMsgDOTARedeemEventPrizeResponse_ResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgDOTARedeemEventPrizeResponse.ResultCode result = 1 [default = Success];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgDOTARedeemEventPrizeResponse_ResultCode result() const;
  inline void set_result(::CMsgDOTARedeemEventPrizeResponse_ResultCode value);

  // optional uint32 remaining_points = 2;
  inline bool has_remaining_points() const;
  inline void clear_remaining_points();
  static const int kRemainingPointsFieldNumber = 2;
  inline ::google::protobuf::uint32 remaining_points() const;
  inline void set_remaining_points(::google::protobuf::uint32 value);

  // optional uint32 remaining_premium_points = 3;
  inline bool has_remaining_premium_points() const;
  inline void clear_remaining_premium_points();
  static const int kRemainingPremiumPointsFieldNumber = 3;
  inline ::google::protobuf::uint32 remaining_premium_points() const;
  inline void set_remaining_premium_points(::google::protobuf::uint32 value);

  // optional uint32 event_id = 4;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 4;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARedeemEventPrizeResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_remaining_points();
  inline void clear_has_remaining_points();
  inline void set_has_remaining_premium_points();
  inline void clear_has_remaining_premium_points();
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  ::google::protobuf::uint32 remaining_points_;
  ::google::protobuf::uint32 remaining_premium_points_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARedeemEventPrizeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPoints : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetEventPoints();
  virtual ~CMsgDOTAGetEventPoints();

  CMsgDOTAGetEventPoints(const CMsgDOTAGetEventPoints& from);

  inline CMsgDOTAGetEventPoints& operator=(const CMsgDOTAGetEventPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPoints& default_instance();

  void Swap(CMsgDOTAGetEventPoints* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetEventPoints* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetEventPoints& from);
  void MergeFrom(const CMsgDOTAGetEventPoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetEventPoints)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetEventPoints* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse_Action : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetEventPointsResponse_Action();
  virtual ~CMsgDOTAGetEventPointsResponse_Action();

  CMsgDOTAGetEventPointsResponse_Action(const CMsgDOTAGetEventPointsResponse_Action& from);

  inline CMsgDOTAGetEventPointsResponse_Action& operator=(const CMsgDOTAGetEventPointsResponse_Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPointsResponse_Action& default_instance();

  void Swap(CMsgDOTAGetEventPointsResponse_Action* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetEventPointsResponse_Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action_id = 1;
  inline bool has_action_id() const;
  inline void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 action_id() const;
  inline void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 times_completed = 2 [default = 1];
  inline bool has_times_completed() const;
  inline void clear_times_completed();
  static const int kTimesCompletedFieldNumber = 2;
  inline ::google::protobuf::uint32 times_completed() const;
  inline void set_times_completed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetEventPointsResponse.Action)
 private:
  inline void set_has_action_id();
  inline void clear_has_action_id();
  inline void set_has_times_completed();
  inline void clear_has_times_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 times_completed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetEventPointsResponse_Action* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetEventPointsResponse();
  virtual ~CMsgDOTAGetEventPointsResponse();

  CMsgDOTAGetEventPointsResponse(const CMsgDOTAGetEventPointsResponse& from);

  inline CMsgDOTAGetEventPointsResponse& operator=(const CMsgDOTAGetEventPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPointsResponse& default_instance();

  void Swap(CMsgDOTAGetEventPointsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetEventPointsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetEventPointsResponse& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetEventPointsResponse_Action Action;

  // accessors -------------------------------------------------------

  // optional uint32 total_points = 1;
  inline bool has_total_points() const;
  inline void clear_total_points();
  static const int kTotalPointsFieldNumber = 1;
  inline ::google::protobuf::uint32 total_points() const;
  inline void set_total_points(::google::protobuf::uint32 value);

  // optional uint32 total_premium_points = 2;
  inline bool has_total_premium_points() const;
  inline void clear_total_premium_points();
  static const int kTotalPremiumPointsFieldNumber = 2;
  inline ::google::protobuf::uint32 total_premium_points() const;
  inline void set_total_premium_points(::google::protobuf::uint32 value);

  // optional uint32 event_id = 3;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 points = 4;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 4;
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // optional uint32 premium_points = 5;
  inline bool has_premium_points() const;
  inline void clear_premium_points();
  static const int kPremiumPointsFieldNumber = 5;
  inline ::google::protobuf::uint32 premium_points() const;
  inline void set_premium_points(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
  inline int completed_actions_size() const;
  inline void clear_completed_actions();
  static const int kCompletedActionsFieldNumber = 6;
  inline const ::CMsgDOTAGetEventPointsResponse_Action& completed_actions(int index) const;
  inline ::CMsgDOTAGetEventPointsResponse_Action* mutable_completed_actions(int index);
  inline ::CMsgDOTAGetEventPointsResponse_Action* add_completed_actions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >&
      completed_actions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >*
      mutable_completed_actions();

  // optional uint32 account_id = 7;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 7;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bool owned = 8;
  inline bool has_owned() const;
  inline void clear_owned();
  static const int kOwnedFieldNumber = 8;
  inline bool owned() const;
  inline void set_owned(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetEventPointsResponse)
 private:
  inline void set_has_total_points();
  inline void clear_has_total_points();
  inline void set_has_total_premium_points();
  inline void clear_has_total_premium_points();
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_points();
  inline void clear_has_points();
  inline void set_has_premium_points();
  inline void clear_has_premium_points();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_owned();
  inline void clear_has_owned();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 total_points_;
  ::google::protobuf::uint32 total_premium_points_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 points_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action > completed_actions_;
  ::google::protobuf::uint32 premium_points_;
  ::google::protobuf::uint32 account_id_;
  bool owned_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetEventPointsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALiveLeagueGameUpdate : public ::google::protobuf::Message {
 public:
  CMsgDOTALiveLeagueGameUpdate();
  virtual ~CMsgDOTALiveLeagueGameUpdate();

  CMsgDOTALiveLeagueGameUpdate(const CMsgDOTALiveLeagueGameUpdate& from);

  inline CMsgDOTALiveLeagueGameUpdate& operator=(const CMsgDOTALiveLeagueGameUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALiveLeagueGameUpdate& default_instance();

  void Swap(CMsgDOTALiveLeagueGameUpdate* other);

  // implements Message ----------------------------------------------

  CMsgDOTALiveLeagueGameUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  void MergeFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 live_league_games = 1;
  inline bool has_live_league_games() const;
  inline void clear_live_league_games();
  static const int kLiveLeagueGamesFieldNumber = 1;
  inline ::google::protobuf::uint32 live_league_games() const;
  inline void set_live_league_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALiveLeagueGameUpdate)
 private:
  inline void set_has_live_league_games();
  inline void clear_has_live_league_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 live_league_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALiveLeagueGameUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelection : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumSelection();
  virtual ~CMsgDOTACompendiumSelection();

  CMsgDOTACompendiumSelection(const CMsgDOTACompendiumSelection& from);

  inline CMsgDOTACompendiumSelection& operator=(const CMsgDOTACompendiumSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumSelection& default_instance();

  void Swap(CMsgDOTACompendiumSelection* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumSelection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumSelection& from);
  void MergeFrom(const CMsgDOTACompendiumSelection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 selection_index = 1;
  inline bool has_selection_index() const;
  inline void clear_selection_index();
  static const int kSelectionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 selection_index() const;
  inline void set_selection_index(::google::protobuf::uint32 value);

  // optional uint32 selection = 2;
  inline bool has_selection() const;
  inline void clear_selection();
  static const int kSelectionFieldNumber = 2;
  inline ::google::protobuf::uint32 selection() const;
  inline void set_selection(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 3;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 3;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumSelection)
 private:
  inline void set_has_selection_index();
  inline void clear_has_selection_index();
  inline void set_has_selection();
  inline void clear_has_selection();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 selection_index_;
  ::google::protobuf::uint32 selection_;
  ::google::protobuf::uint32 leagueid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumSelection* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelectionResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumSelectionResponse();
  virtual ~CMsgDOTACompendiumSelectionResponse();

  CMsgDOTACompendiumSelectionResponse(const CMsgDOTACompendiumSelectionResponse& from);

  inline CMsgDOTACompendiumSelectionResponse& operator=(const CMsgDOTACompendiumSelectionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumSelectionResponse& default_instance();

  void Swap(CMsgDOTACompendiumSelectionResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumSelectionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumSelectionResponse& from);
  void MergeFrom(const CMsgDOTACompendiumSelectionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // repeated .CMsgDOTACompendiumSelection extra_selections = 2;
  inline int extra_selections_size() const;
  inline void clear_extra_selections();
  static const int kExtraSelectionsFieldNumber = 2;
  inline const ::CMsgDOTACompendiumSelection& extra_selections(int index) const;
  inline ::CMsgDOTACompendiumSelection* mutable_extra_selections(int index);
  inline ::CMsgDOTACompendiumSelection* add_extra_selections();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
      extra_selections() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
      mutable_extra_selections();

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumSelectionResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection > extra_selections_;
  ::google::protobuf::uint32 eresult_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumSelectionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumData : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumData();
  virtual ~CMsgDOTACompendiumData();

  CMsgDOTACompendiumData(const CMsgDOTACompendiumData& from);

  inline CMsgDOTACompendiumData& operator=(const CMsgDOTACompendiumData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumData& default_instance();

  void Swap(CMsgDOTACompendiumData* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumData& from);
  void MergeFrom(const CMsgDOTACompendiumData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTACompendiumSelection selections = 1;
  inline int selections_size() const;
  inline void clear_selections();
  static const int kSelectionsFieldNumber = 1;
  inline const ::CMsgDOTACompendiumSelection& selections(int index) const;
  inline ::CMsgDOTACompendiumSelection* mutable_selections(int index);
  inline ::CMsgDOTACompendiumSelection* add_selections();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
      selections() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
      mutable_selections();

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection > selections_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataRequest : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumDataRequest();
  virtual ~CMsgDOTACompendiumDataRequest();

  CMsgDOTACompendiumDataRequest(const CMsgDOTACompendiumDataRequest& from);

  inline CMsgDOTACompendiumDataRequest& operator=(const CMsgDOTACompendiumDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumDataRequest& default_instance();

  void Swap(CMsgDOTACompendiumDataRequest* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumDataRequest& from);
  void MergeFrom(const CMsgDOTACompendiumDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumDataRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTACompendiumDataResponse();
  virtual ~CMsgDOTACompendiumDataResponse();

  CMsgDOTACompendiumDataResponse(const CMsgDOTACompendiumDataResponse& from);

  inline CMsgDOTACompendiumDataResponse& operator=(const CMsgDOTACompendiumDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumDataResponse& default_instance();

  void Swap(CMsgDOTACompendiumDataResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTACompendiumDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACompendiumDataResponse& from);
  void MergeFrom(const CMsgDOTACompendiumDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 result = 3 [default = 2];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .CMsgDOTACompendiumData compendium_data = 4;
  inline bool has_compendium_data() const;
  inline void clear_compendium_data();
  static const int kCompendiumDataFieldNumber = 4;
  inline const ::CMsgDOTACompendiumData& compendium_data() const;
  inline ::CMsgDOTACompendiumData* mutable_compendium_data();
  inline ::CMsgDOTACompendiumData* release_compendium_data();
  inline void set_allocated_compendium_data(::CMsgDOTACompendiumData* compendium_data);

  // @@protoc_insertion_point(class_scope:CMsgDOTACompendiumDataResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_compendium_data();
  inline void clear_has_compendium_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  ::CMsgDOTACompendiumData* compendium_data_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACompendiumDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistory : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetPlayerMatchHistory();
  virtual ~CMsgDOTAGetPlayerMatchHistory();

  CMsgDOTAGetPlayerMatchHistory(const CMsgDOTAGetPlayerMatchHistory& from);

  inline CMsgDOTAGetPlayerMatchHistory& operator=(const CMsgDOTAGetPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistory& default_instance();

  void Swap(CMsgDOTAGetPlayerMatchHistory* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetPlayerMatchHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 start_at_match_id = 2;
  inline bool has_start_at_match_id() const;
  inline void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 start_at_match_id() const;
  inline void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional uint32 matches_requested = 3;
  inline bool has_matches_requested() const;
  inline void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 3;
  inline ::google::protobuf::uint32 matches_requested() const;
  inline void set_matches_requested(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 request_id = 5;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 5;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // optional bool include_practice_matches = 7;
  inline bool has_include_practice_matches() const;
  inline void clear_include_practice_matches();
  static const int kIncludePracticeMatchesFieldNumber = 7;
  inline bool include_practice_matches() const;
  inline void set_include_practice_matches(bool value);

  // optional bool include_custom_games = 8;
  inline bool has_include_custom_games() const;
  inline void clear_include_custom_games();
  static const int kIncludeCustomGamesFieldNumber = 8;
  inline bool include_custom_games() const;
  inline void set_include_custom_games(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetPlayerMatchHistory)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_start_at_match_id();
  inline void clear_has_start_at_match_id();
  inline void set_has_matches_requested();
  inline void clear_has_matches_requested();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_include_practice_matches();
  inline void clear_has_include_practice_matches();
  inline void set_has_include_custom_games();
  inline void clear_has_include_custom_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 request_id_;
  bool include_practice_matches_;
  bool include_custom_games_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetPlayerMatchHistory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse_Match : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse_Match();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse_Match();

  CMsgDOTAGetPlayerMatchHistoryResponse_Match(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse_Match& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistoryResponse_Match& default_instance();

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse_Match* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetPlayerMatchHistoryResponse_Match* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional bool winner = 4;
  inline bool has_winner() const;
  inline void clear_winner();
  static const int kWinnerFieldNumber = 4;
  inline bool winner() const;
  inline void set_winner(bool value);

  // optional uint32 game_mode = 5;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 5;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // optional int32 rank_change = 6;
  inline bool has_rank_change() const;
  inline void clear_rank_change();
  static const int kRankChangeFieldNumber = 6;
  inline ::google::protobuf::int32 rank_change() const;
  inline void set_rank_change(::google::protobuf::int32 value);

  // optional uint32 previous_rank = 7;
  inline bool has_previous_rank() const;
  inline void clear_previous_rank();
  static const int kPreviousRankFieldNumber = 7;
  inline ::google::protobuf::uint32 previous_rank() const;
  inline void set_previous_rank(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 8;
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 lobby_type() const;
  inline void set_lobby_type(::google::protobuf::uint32 value);

  // optional bool solo_rank = 9;
  inline bool has_solo_rank() const;
  inline void clear_solo_rank();
  static const int kSoloRankFieldNumber = 9;
  inline bool solo_rank() const;
  inline void set_solo_rank(bool value);

  // optional bool abandon = 10;
  inline bool has_abandon() const;
  inline void clear_abandon();
  static const int kAbandonFieldNumber = 10;
  inline bool abandon() const;
  inline void set_abandon(bool value);

  // optional uint32 duration = 11;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 11;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);

  // optional uint32 engine = 12;
  inline bool has_engine() const;
  inline void clear_engine();
  static const int kEngineFieldNumber = 12;
  inline ::google::protobuf::uint32 engine() const;
  inline void set_engine(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetPlayerMatchHistoryResponse.Match)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_winner();
  inline void clear_has_winner();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_rank_change();
  inline void clear_has_rank_change();
  inline void set_has_previous_rank();
  inline void clear_has_previous_rank();
  inline void set_has_lobby_type();
  inline void clear_has_lobby_type();
  inline void set_has_solo_rank();
  inline void clear_has_solo_rank();
  inline void set_has_abandon();
  inline void clear_has_abandon();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_engine();
  inline void clear_has_engine();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::int32 rank_change_;
  ::google::protobuf::uint32 previous_rank_;
  bool winner_;
  bool solo_rank_;
  bool abandon_;
  ::google::protobuf::uint32 lobby_type_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 engine_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetPlayerMatchHistoryResponse_Match* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse();

  CMsgDOTAGetPlayerMatchHistoryResponse(const CMsgDOTAGetPlayerMatchHistoryResponse& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistoryResponse& default_instance();

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGetPlayerMatchHistoryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetPlayerMatchHistoryResponse_Match Match;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
  inline int matches_size() const;
  inline void clear_matches();
  static const int kMatchesFieldNumber = 1;
  inline const ::CMsgDOTAGetPlayerMatchHistoryResponse_Match& matches(int index) const;
  inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* mutable_matches(int index);
  inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* add_matches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
      matches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
      mutable_matches();

  // optional uint32 request_id = 2;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGetPlayerMatchHistoryResponse)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match > matches_;
  ::google::protobuf::uint32 request_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGetPlayerMatchHistoryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAStartDailyHeroChallenge : public ::google::protobuf::Message {
 public:
  CMsgDOTAStartDailyHeroChallenge();
  virtual ~CMsgDOTAStartDailyHeroChallenge();

  CMsgDOTAStartDailyHeroChallenge(const CMsgDOTAStartDailyHeroChallenge& from);

  inline CMsgDOTAStartDailyHeroChallenge& operator=(const CMsgDOTAStartDailyHeroChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStartDailyHeroChallenge& default_instance();

  void Swap(CMsgDOTAStartDailyHeroChallenge* other);

  // implements Message ----------------------------------------------

  CMsgDOTAStartDailyHeroChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  void MergeFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDOTAStartDailyHeroChallenge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAStartDailyHeroChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsRequest : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsRequest();
  virtual ~CMsgGCNotificationsRequest();

  CMsgGCNotificationsRequest(const CMsgGCNotificationsRequest& from);

  inline CMsgGCNotificationsRequest& operator=(const CMsgGCNotificationsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsRequest& default_instance();

  void Swap(CMsgGCNotificationsRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsRequest& from);
  void MergeFrom(const CMsgGCNotificationsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse_Notification : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsResponse_Notification();
  virtual ~CMsgGCNotificationsResponse_Notification();

  CMsgGCNotificationsResponse_Notification(const CMsgGCNotificationsResponse_Notification& from);

  inline CMsgGCNotificationsResponse_Notification& operator=(const CMsgGCNotificationsResponse_Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsResponse_Notification& default_instance();

  void Swap(CMsgGCNotificationsResponse_Notification* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsResponse_Notification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsResponse_Notification& from);
  void MergeFrom(const CMsgGCNotificationsResponse_Notification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 reference_a = 4;
  inline bool has_reference_a() const;
  inline void clear_reference_a();
  static const int kReferenceAFieldNumber = 4;
  inline ::google::protobuf::uint32 reference_a() const;
  inline void set_reference_a(::google::protobuf::uint32 value);

  // optional uint32 reference_b = 5;
  inline bool has_reference_b() const;
  inline void clear_reference_b();
  static const int kReferenceBFieldNumber = 5;
  inline ::google::protobuf::uint32 reference_b() const;
  inline void set_reference_b(::google::protobuf::uint32 value);

  // optional uint32 reference_c = 6;
  inline bool has_reference_c() const;
  inline void clear_reference_c();
  static const int kReferenceCFieldNumber = 6;
  inline ::google::protobuf::uint32 reference_c() const;
  inline void set_reference_c(::google::protobuf::uint32 value);

  // optional string message = 7;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 7;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool unread = 8;
  inline bool has_unread() const;
  inline void clear_unread();
  static const int kUnreadFieldNumber = 8;
  inline bool unread() const;
  inline void set_unread(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsResponse.Notification)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_reference_a();
  inline void clear_has_reference_a();
  inline void set_has_reference_b();
  inline void clear_has_reference_b();
  inline void set_has_reference_c();
  inline void clear_has_reference_c();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_unread();
  inline void clear_has_unread();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 reference_a_;
  ::google::protobuf::uint32 reference_b_;
  ::std::string* message_;
  ::google::protobuf::uint32 reference_c_;
  bool unread_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsResponse_Notification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsResponse();
  virtual ~CMsgGCNotificationsResponse();

  CMsgGCNotificationsResponse(const CMsgGCNotificationsResponse& from);

  inline CMsgGCNotificationsResponse& operator=(const CMsgGCNotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsResponse& default_instance();

  void Swap(CMsgGCNotificationsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsResponse& from);
  void MergeFrom(const CMsgGCNotificationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCNotificationsResponse_Notification Notification;

  typedef CMsgGCNotificationsResponse_EResult EResult;
  static const EResult SUCCESS = CMsgGCNotificationsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCNotificationsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCNotificationsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCNotificationsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCNotificationsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCNotificationsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCNotificationsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgGCNotificationsResponse_EResult result() const;
  inline void set_result(::CMsgGCNotificationsResponse_EResult value);

  // repeated .CMsgGCNotificationsResponse.Notification notifications = 2;
  inline int notifications_size() const;
  inline void clear_notifications();
  static const int kNotificationsFieldNumber = 2;
  inline const ::CMsgGCNotificationsResponse_Notification& notifications(int index) const;
  inline ::CMsgGCNotificationsResponse_Notification* mutable_notifications(int index);
  inline ::CMsgGCNotificationsResponse_Notification* add_notifications();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >&
      notifications() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >*
      mutable_notifications();

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification > notifications_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsMarkReadRequest : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationsMarkReadRequest();
  virtual ~CMsgGCNotificationsMarkReadRequest();

  CMsgGCNotificationsMarkReadRequest(const CMsgGCNotificationsMarkReadRequest& from);

  inline CMsgGCNotificationsMarkReadRequest& operator=(const CMsgGCNotificationsMarkReadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsMarkReadRequest& default_instance();

  void Swap(CMsgGCNotificationsMarkReadRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationsMarkReadRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationsMarkReadRequest& from);
  void MergeFrom(const CMsgGCNotificationsMarkReadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationsMarkReadRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationsMarkReadRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCMarkNotificationListRead : public ::google::protobuf::Message {
 public:
  CMsgClientToGCMarkNotificationListRead();
  virtual ~CMsgClientToGCMarkNotificationListRead();

  CMsgClientToGCMarkNotificationListRead(const CMsgClientToGCMarkNotificationListRead& from);

  inline CMsgClientToGCMarkNotificationListRead& operator=(const CMsgClientToGCMarkNotificationListRead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCMarkNotificationListRead& default_instance();

  void Swap(CMsgClientToGCMarkNotificationListRead* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCMarkNotificationListRead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCMarkNotificationListRead& from);
  void MergeFrom(const CMsgClientToGCMarkNotificationListRead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 notification_ids = 1;
  inline int notification_ids_size() const;
  inline void clear_notification_ids();
  static const int kNotificationIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 notification_ids(int index) const;
  inline void set_notification_ids(int index, ::google::protobuf::uint64 value);
  inline void add_notification_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      notification_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_notification_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCMarkNotificationListRead)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > notification_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCMarkNotificationListRead* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCLeagueAdminState_PrivateLeagueKeys : public ::google::protobuf::Message {
 public:
  CMsgGCLeagueAdminState_PrivateLeagueKeys();
  virtual ~CMsgGCLeagueAdminState_PrivateLeagueKeys();

  CMsgGCLeagueAdminState_PrivateLeagueKeys(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);

  inline CMsgGCLeagueAdminState_PrivateLeagueKeys& operator=(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLeagueAdminState_PrivateLeagueKeys& default_instance();

  void Swap(CMsgGCLeagueAdminState_PrivateLeagueKeys* other);

  // implements Message ----------------------------------------------

  CMsgGCLeagueAdminState_PrivateLeagueKeys* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);
  void MergeFrom(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 leagueid = 1;
  inline bool has_leagueid() const;
  inline void clear_leagueid();
  static const int kLeagueidFieldNumber = 1;
  inline ::google::protobuf::uint32 leagueid() const;
  inline void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 privatekey = 2;
  inline bool has_privatekey() const;
  inline void clear_privatekey();
  static const int kPrivatekeyFieldNumber = 2;
  inline ::google::protobuf::uint32 privatekey() const;
  inline void set_privatekey(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCLeagueAdminState.PrivateLeagueKeys)
 private:
  inline void set_has_leagueid();
  inline void clear_has_leagueid();
  inline void set_has_privatekey();
  inline void clear_has_privatekey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 privatekey_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCLeagueAdminState_PrivateLeagueKeys* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCLeagueAdminState : public ::google::protobuf::Message {
 public:
  CMsgGCLeagueAdminState();
  virtual ~CMsgGCLeagueAdminState();

  CMsgGCLeagueAdminState(const CMsgGCLeagueAdminState& from);

  inline CMsgGCLeagueAdminState& operator=(const CMsgGCLeagueAdminState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLeagueAdminState& default_instance();

  void Swap(CMsgGCLeagueAdminState* other);

  // implements Message ----------------------------------------------

  CMsgGCLeagueAdminState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCLeagueAdminState& from);
  void MergeFrom(const CMsgGCLeagueAdminState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCLeagueAdminState_PrivateLeagueKeys PrivateLeagueKeys;

  // accessors -------------------------------------------------------

  // repeated uint32 leagues = 1;
  inline int leagues_size() const;
  inline void clear_leagues();
  static const int kLeaguesFieldNumber = 1;
  inline ::google::protobuf::uint32 leagues(int index) const;
  inline void set_leagues(int index, ::google::protobuf::uint32 value);
  inline void add_leagues(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      leagues() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_leagues();

  // repeated .CMsgGCLeagueAdminState.PrivateLeagueKeys keys = 2;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 2;
  inline const ::CMsgGCLeagueAdminState_PrivateLeagueKeys& keys(int index) const;
  inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* mutable_keys(int index);
  inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* add_keys();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >&
      keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >*
      mutable_keys();

  // @@protoc_insertion_point(class_scope:CMsgGCLeagueAdminState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > leagues_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys > keys_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCLeagueAdminState* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoRequest : public ::google::protobuf::Message {
 public:
  CMsgGCPlayerInfoRequest();
  virtual ~CMsgGCPlayerInfoRequest();

  CMsgGCPlayerInfoRequest(const CMsgGCPlayerInfoRequest& from);

  inline CMsgGCPlayerInfoRequest& operator=(const CMsgGCPlayerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoRequest& default_instance();

  void Swap(CMsgGCPlayerInfoRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCPlayerInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCPlayerInfoRequest& from);
  void MergeFrom(const CMsgGCPlayerInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfoRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCPlayerInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmit : public ::google::protobuf::Message {
 public:
  CMsgGCPlayerInfoSubmit();
  virtual ~CMsgGCPlayerInfoSubmit();

  CMsgGCPlayerInfoSubmit(const CMsgGCPlayerInfoSubmit& from);

  inline CMsgGCPlayerInfoSubmit& operator=(const CMsgGCPlayerInfoSubmit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoSubmit& default_instance();

  void Swap(CMsgGCPlayerInfoSubmit* other);

  // implements Message ----------------------------------------------

  CMsgGCPlayerInfoSubmit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCPlayerInfoSubmit& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string country_code = 2;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional uint32 fantasy_role = 3;
  inline bool has_fantasy_role() const;
  inline void clear_fantasy_role();
  static const int kFantasyRoleFieldNumber = 3;
  inline ::google::protobuf::uint32 fantasy_role() const;
  inline void set_fantasy_role(::google::protobuf::uint32 value);

  // optional uint32 team_id = 4;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 4;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string sponsor = 5;
  inline bool has_sponsor() const;
  inline void clear_sponsor();
  static const int kSponsorFieldNumber = 5;
  inline const ::std::string& sponsor() const;
  inline void set_sponsor(const ::std::string& value);
  inline void set_sponsor(const char* value);
  inline void set_sponsor(const char* value, size_t size);
  inline ::std::string* mutable_sponsor();
  inline ::std::string* release_sponsor();
  inline void set_allocated_sponsor(::std::string* sponsor);

  // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfoSubmit)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_fantasy_role();
  inline void clear_has_fantasy_role();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_sponsor();
  inline void clear_has_sponsor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* country_code_;
  ::google::protobuf::uint32 fantasy_role_;
  ::google::protobuf::uint32 team_id_;
  ::std::string* sponsor_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCPlayerInfoSubmit* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmitResponse : public ::google::protobuf::Message {
 public:
  CMsgGCPlayerInfoSubmitResponse();
  virtual ~CMsgGCPlayerInfoSubmitResponse();

  CMsgGCPlayerInfoSubmitResponse(const CMsgGCPlayerInfoSubmitResponse& from);

  inline CMsgGCPlayerInfoSubmitResponse& operator=(const CMsgGCPlayerInfoSubmitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoSubmitResponse& default_instance();

  void Swap(CMsgGCPlayerInfoSubmitResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCPlayerInfoSubmitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCPlayerInfoSubmitResponse_EResult EResult;
  static const EResult SUCCESS = CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_INFO_LOCKED = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::CMsgGCPlayerInfoSubmitResponse_EResult result() const;
  inline void set_result(::CMsgGCPlayerInfoSubmitResponse_EResult value);

  // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfoSubmitResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCPlayerInfoSubmitResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache_TypeCache : public ::google::protobuf::Message {
 public:
  CMsgSerializedSOCache_TypeCache();
  virtual ~CMsgSerializedSOCache_TypeCache();

  CMsgSerializedSOCache_TypeCache(const CMsgSerializedSOCache_TypeCache& from);

  inline CMsgSerializedSOCache_TypeCache& operator=(const CMsgSerializedSOCache_TypeCache& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSerializedSOCache_TypeCache& default_instance();

  void Swap(CMsgSerializedSOCache_TypeCache* other);

  // implements Message ----------------------------------------------

  CMsgSerializedSOCache_TypeCache* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSerializedSOCache_TypeCache& from);
  void MergeFrom(const CMsgSerializedSOCache_TypeCache& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated bytes objects = 2;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 2;
  inline const ::std::string& objects(int index) const;
  inline ::std::string* mutable_objects(int index);
  inline void set_objects(int index, const ::std::string& value);
  inline void set_objects(int index, const char* value);
  inline void set_objects(int index, const void* value, size_t size);
  inline ::std::string* add_objects();
  inline void add_objects(const ::std::string& value);
  inline void add_objects(const char* value);
  inline void add_objects(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_objects();

  // optional uint32 service_id = 3;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache.TypeCache)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_service_id();
  inline void clear_has_service_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> objects_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 service_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSerializedSOCache_TypeCache* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache_Cache_Version : public ::google::protobuf::Message {
 public:
  CMsgSerializedSOCache_Cache_Version();
  virtual ~CMsgSerializedSOCache_Cache_Version();

  CMsgSerializedSOCache_Cache_Version(const CMsgSerializedSOCache_Cache_Version& from);

  inline CMsgSerializedSOCache_Cache_Version& operator=(const CMsgSerializedSOCache_Cache_Version& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSerializedSOCache_Cache_Version& default_instance();

  void Swap(CMsgSerializedSOCache_Cache_Version* other);

  // implements Message ----------------------------------------------

  CMsgSerializedSOCache_Cache_Version* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSerializedSOCache_Cache_Version& from);
  void MergeFrom(const CMsgSerializedSOCache_Cache_Version& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 service = 1;
  inline bool has_service() const;
  inline void clear_service();
  static const int kServiceFieldNumber = 1;
  inline ::google::protobuf::uint32 service() const;
  inline void set_service(::google::protobuf::uint32 value);

  // optional uint64 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache.Cache.Version)
 private:
  inline void set_has_service();
  inline void clear_has_service();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint32 service_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSerializedSOCache_Cache_Version* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache_Cache : public ::google::protobuf::Message {
 public:
  CMsgSerializedSOCache_Cache();
  virtual ~CMsgSerializedSOCache_Cache();

  CMsgSerializedSOCache_Cache(const CMsgSerializedSOCache_Cache& from);

  inline CMsgSerializedSOCache_Cache& operator=(const CMsgSerializedSOCache_Cache& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSerializedSOCache_Cache& default_instance();

  void Swap(CMsgSerializedSOCache_Cache* other);

  // implements Message ----------------------------------------------

  CMsgSerializedSOCache_Cache* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSerializedSOCache_Cache& from);
  void MergeFrom(const CMsgSerializedSOCache_Cache& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSerializedSOCache_Cache_Version Version;

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .CMsgSerializedSOCache.Cache.Version versions = 3;
  inline int versions_size() const;
  inline void clear_versions();
  static const int kVersionsFieldNumber = 3;
  inline const ::CMsgSerializedSOCache_Cache_Version& versions(int index) const;
  inline ::CMsgSerializedSOCache_Cache_Version* mutable_versions(int index);
  inline ::CMsgSerializedSOCache_Cache_Version* add_versions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >&
      versions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >*
      mutable_versions();

  // repeated .CMsgSerializedSOCache.TypeCache type_caches = 4;
  inline int type_caches_size() const;
  inline void clear_type_caches();
  static const int kTypeCachesFieldNumber = 4;
  inline const ::CMsgSerializedSOCache_TypeCache& type_caches(int index) const;
  inline ::CMsgSerializedSOCache_TypeCache* mutable_type_caches(int index);
  inline ::CMsgSerializedSOCache_TypeCache* add_type_caches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >&
      type_caches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >*
      mutable_type_caches();

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache.Cache)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version > versions_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache > type_caches_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSerializedSOCache_Cache* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache : public ::google::protobuf::Message {
 public:
  CMsgSerializedSOCache();
  virtual ~CMsgSerializedSOCache();

  CMsgSerializedSOCache(const CMsgSerializedSOCache& from);

  inline CMsgSerializedSOCache& operator=(const CMsgSerializedSOCache& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSerializedSOCache& default_instance();

  void Swap(CMsgSerializedSOCache* other);

  // implements Message ----------------------------------------------

  CMsgSerializedSOCache* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSerializedSOCache& from);
  void MergeFrom(const CMsgSerializedSOCache& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSerializedSOCache_TypeCache TypeCache;
  typedef CMsgSerializedSOCache_Cache Cache;

  // accessors -------------------------------------------------------

  // optional uint32 file_version = 1;
  inline bool has_file_version() const;
  inline void clear_file_version();
  static const int kFileVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 file_version() const;
  inline void set_file_version(::google::protobuf::uint32 value);

  // repeated .CMsgSerializedSOCache.Cache caches = 2;
  inline int caches_size() const;
  inline void clear_caches();
  static const int kCachesFieldNumber = 2;
  inline const ::CMsgSerializedSOCache_Cache& caches(int index) const;
  inline ::CMsgSerializedSOCache_Cache* mutable_caches(int index);
  inline ::CMsgSerializedSOCache_Cache* add_caches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >&
      caches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >*
      mutable_caches();

  // optional uint32 gc_socache_file_version = 3;
  inline bool has_gc_socache_file_version() const;
  inline void clear_gc_socache_file_version();
  static const int kGcSocacheFileVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 gc_socache_file_version() const;
  inline void set_gc_socache_file_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache)
 private:
  inline void set_has_file_version();
  inline void clear_has_file_version();
  inline void set_has_gc_socache_file_version();
  inline void clear_has_gc_socache_file_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache > caches_;
  ::google::protobuf::uint32 file_version_;
  ::google::protobuf::uint32 gc_socache_file_version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgSerializedSOCache* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestWeekendTourneySchedule : public ::google::protobuf::Message {
 public:
  CMsgRequestWeekendTourneySchedule();
  virtual ~CMsgRequestWeekendTourneySchedule();

  CMsgRequestWeekendTourneySchedule(const CMsgRequestWeekendTourneySchedule& from);

  inline CMsgRequestWeekendTourneySchedule& operator=(const CMsgRequestWeekendTourneySchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestWeekendTourneySchedule& default_instance();

  void Swap(CMsgRequestWeekendTourneySchedule* other);

  // implements Message ----------------------------------------------

  CMsgRequestWeekendTourneySchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestWeekendTourneySchedule& from);
  void MergeFrom(const CMsgRequestWeekendTourneySchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgRequestWeekendTourneySchedule)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgRequestWeekendTourneySchedule* default_instance_;
};
// -------------------------------------------------------------------

class CMsgWeekendTourneySchedule_Division : public ::google::protobuf::Message {
 public:
  CMsgWeekendTourneySchedule_Division();
  virtual ~CMsgWeekendTourneySchedule_Division();

  CMsgWeekendTourneySchedule_Division(const CMsgWeekendTourneySchedule_Division& from);

  inline CMsgWeekendTourneySchedule_Division& operator=(const CMsgWeekendTourneySchedule_Division& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgWeekendTourneySchedule_Division& default_instance();

  void Swap(CMsgWeekendTourneySchedule_Division* other);

  // implements Message ----------------------------------------------

  CMsgWeekendTourneySchedule_Division* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgWeekendTourneySchedule_Division& from);
  void MergeFrom(const CMsgWeekendTourneySchedule_Division& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 division_code = 1;
  inline bool has_division_code() const;
  inline void clear_division_code();
  static const int kDivisionCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 division_code() const;
  inline void set_division_code(::google::protobuf::uint32 value);

  // optional uint32 time_window_open = 2;
  inline bool has_time_window_open() const;
  inline void clear_time_window_open();
  static const int kTimeWindowOpenFieldNumber = 2;
  inline ::google::protobuf::uint32 time_window_open() const;
  inline void set_time_window_open(::google::protobuf::uint32 value);

  // optional uint32 time_window_close = 3;
  inline bool has_time_window_close() const;
  inline void clear_time_window_close();
  static const int kTimeWindowCloseFieldNumber = 3;
  inline ::google::protobuf::uint32 time_window_close() const;
  inline void set_time_window_close(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgWeekendTourneySchedule.Division)
 private:
  inline void set_has_division_code();
  inline void clear_has_division_code();
  inline void set_has_time_window_open();
  inline void clear_has_time_window_open();
  inline void set_has_time_window_close();
  inline void clear_has_time_window_close();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 division_code_;
  ::google::protobuf::uint32 time_window_open_;
  ::google::protobuf::uint32 time_window_close_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgWeekendTourneySchedule_Division* default_instance_;
};
// -------------------------------------------------------------------

class CMsgWeekendTourneySchedule : public ::google::protobuf::Message {
 public:
  CMsgWeekendTourneySchedule();
  virtual ~CMsgWeekendTourneySchedule();

  CMsgWeekendTourneySchedule(const CMsgWeekendTourneySchedule& from);

  inline CMsgWeekendTourneySchedule& operator=(const CMsgWeekendTourneySchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgWeekendTourneySchedule& default_instance();

  void Swap(CMsgWeekendTourneySchedule* other);

  // implements Message ----------------------------------------------

  CMsgWeekendTourneySchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgWeekendTourneySchedule& from);
  void MergeFrom(const CMsgWeekendTourneySchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgWeekendTourneySchedule_Division Division;

  // accessors -------------------------------------------------------

  // repeated .CMsgWeekendTourneySchedule.Division divisions = 1;
  inline int divisions_size() const;
  inline void clear_divisions();
  static const int kDivisionsFieldNumber = 1;
  inline const ::CMsgWeekendTourneySchedule_Division& divisions(int index) const;
  inline ::CMsgWeekendTourneySchedule_Division* mutable_divisions(int index);
  inline ::CMsgWeekendTourneySchedule_Division* add_divisions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgWeekendTourneySchedule_Division >&
      divisions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgWeekendTourneySchedule_Division >*
      mutable_divisions();

  // @@protoc_insertion_point(class_scope:CMsgWeekendTourneySchedule)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgWeekendTourneySchedule_Division > divisions_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgWeekendTourneySchedule* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult_Response : public ::google::protobuf::Message {
 public:
  CMsgClientProvideSurveyResult_Response();
  virtual ~CMsgClientProvideSurveyResult_Response();

  CMsgClientProvideSurveyResult_Response(const CMsgClientProvideSurveyResult_Response& from);

  inline CMsgClientProvideSurveyResult_Response& operator=(const CMsgClientProvideSurveyResult_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientProvideSurveyResult_Response& default_instance();

  void Swap(CMsgClientProvideSurveyResult_Response* other);

  // implements Message ----------------------------------------------

  CMsgClientProvideSurveyResult_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientProvideSurveyResult_Response& from);
  void MergeFrom(const CMsgClientProvideSurveyResult_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 question_id = 1;
  inline bool has_question_id() const;
  inline void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 question_id() const;
  inline void set_question_id(::google::protobuf::uint32 value);

  // optional uint32 survey_value = 2;
  inline bool has_survey_value() const;
  inline void clear_survey_value();
  static const int kSurveyValueFieldNumber = 2;
  inline ::google::protobuf::uint32 survey_value() const;
  inline void set_survey_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientProvideSurveyResult.Response)
 private:
  inline void set_has_question_id();
  inline void clear_has_question_id();
  inline void set_has_survey_value();
  inline void clear_has_survey_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint32 survey_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientProvideSurveyResult_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult : public ::google::protobuf::Message {
 public:
  CMsgClientProvideSurveyResult();
  virtual ~CMsgClientProvideSurveyResult();

  CMsgClientProvideSurveyResult(const CMsgClientProvideSurveyResult& from);

  inline CMsgClientProvideSurveyResult& operator=(const CMsgClientProvideSurveyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientProvideSurveyResult& default_instance();

  void Swap(CMsgClientProvideSurveyResult* other);

  // implements Message ----------------------------------------------

  CMsgClientProvideSurveyResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientProvideSurveyResult& from);
  void MergeFrom(const CMsgClientProvideSurveyResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientProvideSurveyResult_Response Response;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientProvideSurveyResult.Response responses = 1;
  inline int responses_size() const;
  inline void clear_responses();
  static const int kResponsesFieldNumber = 1;
  inline const ::CMsgClientProvideSurveyResult_Response& responses(int index) const;
  inline ::CMsgClientProvideSurveyResult_Response* mutable_responses(int index);
  inline ::CMsgClientProvideSurveyResult_Response* add_responses();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >&
      responses() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >*
      mutable_responses();

  // optional uint64 survey_key = 2;
  inline bool has_survey_key() const;
  inline void clear_survey_key();
  static const int kSurveyKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 survey_key() const;
  inline void set_survey_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientProvideSurveyResult)
 private:
  inline void set_has_survey_key();
  inline void clear_has_survey_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response > responses_;
  ::google::protobuf::uint64 survey_key_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientProvideSurveyResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAEmoticonAccessSDO : public ::google::protobuf::Message {
 public:
  CMsgDOTAEmoticonAccessSDO();
  virtual ~CMsgDOTAEmoticonAccessSDO();

  CMsgDOTAEmoticonAccessSDO(const CMsgDOTAEmoticonAccessSDO& from);

  inline CMsgDOTAEmoticonAccessSDO& operator=(const CMsgDOTAEmoticonAccessSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEmoticonAccessSDO& default_instance();

  void Swap(CMsgDOTAEmoticonAccessSDO* other);

  // implements Message ----------------------------------------------

  CMsgDOTAEmoticonAccessSDO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAEmoticonAccessSDO& from);
  void MergeFrom(const CMsgDOTAEmoticonAccessSDO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bytes unlocked_emoticons = 2;
  inline bool has_unlocked_emoticons() const;
  inline void clear_unlocked_emoticons();
  static const int kUnlockedEmoticonsFieldNumber = 2;
  inline const ::std::string& unlocked_emoticons() const;
  inline void set_unlocked_emoticons(const ::std::string& value);
  inline void set_unlocked_emoticons(const char* value);
  inline void set_unlocked_emoticons(const void* value, size_t size);
  inline ::std::string* mutable_unlocked_emoticons();
  inline ::std::string* release_unlocked_emoticons();
  inline void set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons);

  // @@protoc_insertion_point(class_scope:CMsgDOTAEmoticonAccessSDO)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_unlocked_emoticons();
  inline void clear_has_unlocked_emoticons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* unlocked_emoticons_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAEmoticonAccessSDO* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCEmoticonDataRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCEmoticonDataRequest();
  virtual ~CMsgClientToGCEmoticonDataRequest();

  CMsgClientToGCEmoticonDataRequest(const CMsgClientToGCEmoticonDataRequest& from);

  inline CMsgClientToGCEmoticonDataRequest& operator=(const CMsgClientToGCEmoticonDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCEmoticonDataRequest& default_instance();

  void Swap(CMsgClientToGCEmoticonDataRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCEmoticonDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCEmoticonDataRequest& from);
  void MergeFrom(const CMsgClientToGCEmoticonDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCEmoticonDataRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCEmoticonDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientEmoticonData : public ::google::protobuf::Message {
 public:
  CMsgGCToClientEmoticonData();
  virtual ~CMsgGCToClientEmoticonData();

  CMsgGCToClientEmoticonData(const CMsgGCToClientEmoticonData& from);

  inline CMsgGCToClientEmoticonData& operator=(const CMsgGCToClientEmoticonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientEmoticonData& default_instance();

  void Swap(CMsgGCToClientEmoticonData* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientEmoticonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientEmoticonData& from);
  void MergeFrom(const CMsgGCToClientEmoticonData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
  inline bool has_emoticon_access() const;
  inline void clear_emoticon_access();
  static const int kEmoticonAccessFieldNumber = 1;
  inline const ::CMsgDOTAEmoticonAccessSDO& emoticon_access() const;
  inline ::CMsgDOTAEmoticonAccessSDO* mutable_emoticon_access();
  inline ::CMsgDOTAEmoticonAccessSDO* release_emoticon_access();
  inline void set_allocated_emoticon_access(::CMsgDOTAEmoticonAccessSDO* emoticon_access);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientEmoticonData)
 private:
  inline void set_has_emoticon_access();
  inline void clear_has_emoticon_access();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAEmoticonAccessSDO* emoticon_access_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientEmoticonData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCTrackDialogResult : public ::google::protobuf::Message {
 public:
  CMsgClientToGCTrackDialogResult();
  virtual ~CMsgClientToGCTrackDialogResult();

  CMsgClientToGCTrackDialogResult(const CMsgClientToGCTrackDialogResult& from);

  inline CMsgClientToGCTrackDialogResult& operator=(const CMsgClientToGCTrackDialogResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTrackDialogResult& default_instance();

  void Swap(CMsgClientToGCTrackDialogResult* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCTrackDialogResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCTrackDialogResult& from);
  void MergeFrom(const CMsgClientToGCTrackDialogResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dialog_id = 1;
  inline bool has_dialog_id() const;
  inline void clear_dialog_id();
  static const int kDialogIdFieldNumber = 1;
  inline ::google::protobuf::uint32 dialog_id() const;
  inline void set_dialog_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCTrackDialogResult)
 private:
  inline void set_has_dialog_id();
  inline void clear_has_dialog_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dialog_id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCTrackDialogResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientTournamentItemDrop : public ::google::protobuf::Message {
 public:
  CMsgGCToClientTournamentItemDrop();
  virtual ~CMsgGCToClientTournamentItemDrop();

  CMsgGCToClientTournamentItemDrop(const CMsgGCToClientTournamentItemDrop& from);

  inline CMsgGCToClientTournamentItemDrop& operator=(const CMsgGCToClientTournamentItemDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTournamentItemDrop& default_instance();

  void Swap(CMsgGCToClientTournamentItemDrop* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientTournamentItemDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientTournamentItemDrop& from);
  void MergeFrom(const CMsgGCToClientTournamentItemDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 event_type = 2;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 event_type() const;
  inline void set_event_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientTournamentItemDrop)
 private:
  inline void set_has_item_def();
  inline void clear_has_item_def();
  inline void set_has_event_type();
  inline void clear_has_event_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 event_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientTournamentItemDrop* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquips : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetAdditionalEquips();
  virtual ~CMsgClientToGCSetAdditionalEquips();

  CMsgClientToGCSetAdditionalEquips(const CMsgClientToGCSetAdditionalEquips& from);

  inline CMsgClientToGCSetAdditionalEquips& operator=(const CMsgClientToGCSetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetAdditionalEquips& default_instance();

  void Swap(CMsgClientToGCSetAdditionalEquips* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetAdditionalEquips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CAdditionalEquipSlot equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::CAdditionalEquipSlot& equips(int index) const;
  inline ::CAdditionalEquipSlot* mutable_equips(int index);
  inline ::CAdditionalEquipSlot* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
      mutable_equips();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetAdditionalEquips)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot > equips_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetAdditionalEquips* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquipsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCSetAdditionalEquipsResponse();

  CMsgClientToGCSetAdditionalEquipsResponse(const CMsgClientToGCSetAdditionalEquipsResponse& from);

  inline CMsgClientToGCSetAdditionalEquipsResponse& operator=(const CMsgClientToGCSetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetAdditionalEquipsResponse& default_instance();

  void Swap(CMsgClientToGCSetAdditionalEquipsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetAdditionalEquipsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetAdditionalEquipsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetAdditionalEquipsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquips : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAdditionalEquips();
  virtual ~CMsgClientToGCGetAdditionalEquips();

  CMsgClientToGCGetAdditionalEquips(const CMsgClientToGCGetAdditionalEquips& from);

  inline CMsgClientToGCGetAdditionalEquips& operator=(const CMsgClientToGCGetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAdditionalEquips& default_instance();

  void Swap(CMsgClientToGCGetAdditionalEquips* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAdditionalEquips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAdditionalEquips)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAdditionalEquips* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquipsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCGetAdditionalEquipsResponse();

  CMsgClientToGCGetAdditionalEquipsResponse(const CMsgClientToGCGetAdditionalEquipsResponse& from);

  inline CMsgClientToGCGetAdditionalEquipsResponse& operator=(const CMsgClientToGCGetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAdditionalEquipsResponse& default_instance();

  void Swap(CMsgClientToGCGetAdditionalEquipsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAdditionalEquipsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CAdditionalEquipSlot equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::CAdditionalEquipSlot& equips(int index) const;
  inline ::CAdditionalEquipSlot* mutable_equips(int index);
  inline ::CAdditionalEquipSlot* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
      mutable_equips();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAdditionalEquipsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot > equips_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAdditionalEquipsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrder : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroOrder();
  virtual ~CMsgClientToGCGetAllHeroOrder();

  CMsgClientToGCGetAllHeroOrder(const CMsgClientToGCGetAllHeroOrder& from);

  inline CMsgClientToGCGetAllHeroOrder& operator=(const CMsgClientToGCGetAllHeroOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroOrder& default_instance();

  void Swap(CMsgClientToGCGetAllHeroOrder* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroOrder& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroOrder)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroOrder* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrderResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroOrderResponse();
  virtual ~CMsgClientToGCGetAllHeroOrderResponse();

  CMsgClientToGCGetAllHeroOrderResponse(const CMsgClientToGCGetAllHeroOrderResponse& from);

  inline CMsgClientToGCGetAllHeroOrderResponse& operator=(const CMsgClientToGCGetAllHeroOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroOrderResponse& default_instance();

  void Swap(CMsgClientToGCGetAllHeroOrderResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroOrderResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroOrderResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroOrderResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgress : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroProgress();
  virtual ~CMsgClientToGCGetAllHeroProgress();

  CMsgClientToGCGetAllHeroProgress(const CMsgClientToGCGetAllHeroProgress& from);

  inline CMsgClientToGCGetAllHeroProgress& operator=(const CMsgClientToGCGetAllHeroProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroProgress& default_instance();

  void Swap(CMsgClientToGCGetAllHeroProgress* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroProgress& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroProgress)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgressResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetAllHeroProgressResponse();
  virtual ~CMsgClientToGCGetAllHeroProgressResponse();

  CMsgClientToGCGetAllHeroProgressResponse(const CMsgClientToGCGetAllHeroProgressResponse& from);

  inline CMsgClientToGCGetAllHeroProgressResponse& operator=(const CMsgClientToGCGetAllHeroProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroProgressResponse& default_instance();

  void Swap(CMsgClientToGCGetAllHeroProgressResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAllHeroProgressResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_id = 2;
  inline bool has_curr_hero_id() const;
  inline void clear_curr_hero_id();
  static const int kCurrHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 curr_hero_id() const;
  inline void set_curr_hero_id(::google::protobuf::uint32 value);

  // optional uint32 laps_completed = 3;
  inline bool has_laps_completed() const;
  inline void clear_laps_completed();
  static const int kLapsCompletedFieldNumber = 3;
  inline ::google::protobuf::uint32 laps_completed() const;
  inline void set_laps_completed(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_games = 4;
  inline bool has_curr_hero_games() const;
  inline void clear_curr_hero_games();
  static const int kCurrHeroGamesFieldNumber = 4;
  inline ::google::protobuf::uint32 curr_hero_games() const;
  inline void set_curr_hero_games(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_time_started = 5;
  inline bool has_curr_lap_time_started() const;
  inline void clear_curr_lap_time_started();
  static const int kCurrLapTimeStartedFieldNumber = 5;
  inline ::google::protobuf::uint32 curr_lap_time_started() const;
  inline void set_curr_lap_time_started(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_games = 6;
  inline bool has_curr_lap_games() const;
  inline void clear_curr_lap_games();
  static const int kCurrLapGamesFieldNumber = 6;
  inline ::google::protobuf::uint32 curr_lap_games() const;
  inline void set_curr_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_games = 7;
  inline bool has_best_lap_games() const;
  inline void clear_best_lap_games();
  static const int kBestLapGamesFieldNumber = 7;
  inline ::google::protobuf::uint32 best_lap_games() const;
  inline void set_best_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_time = 8;
  inline bool has_best_lap_time() const;
  inline void clear_best_lap_time();
  static const int kBestLapTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 best_lap_time() const;
  inline void set_best_lap_time(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_completed = 9;
  inline bool has_lap_heroes_completed() const;
  inline void clear_lap_heroes_completed();
  static const int kLapHeroesCompletedFieldNumber = 9;
  inline ::google::protobuf::uint32 lap_heroes_completed() const;
  inline void set_lap_heroes_completed(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_remaining = 10;
  inline bool has_lap_heroes_remaining() const;
  inline void clear_lap_heroes_remaining();
  static const int kLapHeroesRemainingFieldNumber = 10;
  inline ::google::protobuf::uint32 lap_heroes_remaining() const;
  inline void set_lap_heroes_remaining(::google::protobuf::uint32 value);

  // optional uint32 next_hero_id = 11;
  inline bool has_next_hero_id() const;
  inline void clear_next_hero_id();
  static const int kNextHeroIdFieldNumber = 11;
  inline ::google::protobuf::uint32 next_hero_id() const;
  inline void set_next_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_id = 12;
  inline bool has_prev_hero_id() const;
  inline void clear_prev_hero_id();
  static const int kPrevHeroIdFieldNumber = 12;
  inline ::google::protobuf::uint32 prev_hero_id() const;
  inline void set_prev_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_games = 13;
  inline bool has_prev_hero_games() const;
  inline void clear_prev_hero_games();
  static const int kPrevHeroGamesFieldNumber = 13;
  inline ::google::protobuf::uint32 prev_hero_games() const;
  inline void set_prev_hero_games(::google::protobuf::uint32 value);

  // optional float prev_avg_tries = 14;
  inline bool has_prev_avg_tries() const;
  inline void clear_prev_avg_tries();
  static const int kPrevAvgTriesFieldNumber = 14;
  inline float prev_avg_tries() const;
  inline void set_prev_avg_tries(float value);

  // optional float curr_avg_tries = 15;
  inline bool has_curr_avg_tries() const;
  inline void clear_curr_avg_tries();
  static const int kCurrAvgTriesFieldNumber = 15;
  inline float curr_avg_tries() const;
  inline void set_curr_avg_tries(float value);

  // optional float next_avg_tries = 16;
  inline bool has_next_avg_tries() const;
  inline void clear_next_avg_tries();
  static const int kNextAvgTriesFieldNumber = 16;
  inline float next_avg_tries() const;
  inline void set_next_avg_tries(float value);

  // optional float full_lap_avg_tries = 17;
  inline bool has_full_lap_avg_tries() const;
  inline void clear_full_lap_avg_tries();
  static const int kFullLapAvgTriesFieldNumber = 17;
  inline float full_lap_avg_tries() const;
  inline void set_full_lap_avg_tries(float value);

  // optional float curr_lap_avg_tries = 18;
  inline bool has_curr_lap_avg_tries() const;
  inline void clear_curr_lap_avg_tries();
  static const int kCurrLapAvgTriesFieldNumber = 18;
  inline float curr_lap_avg_tries() const;
  inline void set_curr_lap_avg_tries(float value);

  // optional string profile_name = 19;
  inline bool has_profile_name() const;
  inline void clear_profile_name();
  static const int kProfileNameFieldNumber = 19;
  inline const ::std::string& profile_name() const;
  inline void set_profile_name(const ::std::string& value);
  inline void set_profile_name(const char* value);
  inline void set_profile_name(const char* value, size_t size);
  inline ::std::string* mutable_profile_name();
  inline ::std::string* release_profile_name();
  inline void set_allocated_profile_name(::std::string* profile_name);

  // optional uint32 start_hero_id = 20;
  inline bool has_start_hero_id() const;
  inline void clear_start_hero_id();
  static const int kStartHeroIdFieldNumber = 20;
  inline ::google::protobuf::uint32 start_hero_id() const;
  inline void set_start_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAllHeroProgressResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_curr_hero_id();
  inline void clear_has_curr_hero_id();
  inline void set_has_laps_completed();
  inline void clear_has_laps_completed();
  inline void set_has_curr_hero_games();
  inline void clear_has_curr_hero_games();
  inline void set_has_curr_lap_time_started();
  inline void clear_has_curr_lap_time_started();
  inline void set_has_curr_lap_games();
  inline void clear_has_curr_lap_games();
  inline void set_has_best_lap_games();
  inline void clear_has_best_lap_games();
  inline void set_has_best_lap_time();
  inline void clear_has_best_lap_time();
  inline void set_has_lap_heroes_completed();
  inline void clear_has_lap_heroes_completed();
  inline void set_has_lap_heroes_remaining();
  inline void clear_has_lap_heroes_remaining();
  inline void set_has_next_hero_id();
  inline void clear_has_next_hero_id();
  inline void set_has_prev_hero_id();
  inline void clear_has_prev_hero_id();
  inline void set_has_prev_hero_games();
  inline void clear_has_prev_hero_games();
  inline void set_has_prev_avg_tries();
  inline void clear_has_prev_avg_tries();
  inline void set_has_curr_avg_tries();
  inline void clear_has_curr_avg_tries();
  inline void set_has_next_avg_tries();
  inline void clear_has_next_avg_tries();
  inline void set_has_full_lap_avg_tries();
  inline void clear_has_full_lap_avg_tries();
  inline void set_has_curr_lap_avg_tries();
  inline void clear_has_curr_lap_avg_tries();
  inline void set_has_profile_name();
  inline void clear_has_profile_name();
  inline void set_has_start_hero_id();
  inline void clear_has_start_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 curr_hero_id_;
  ::google::protobuf::uint32 laps_completed_;
  ::google::protobuf::uint32 curr_hero_games_;
  ::google::protobuf::uint32 curr_lap_time_started_;
  ::google::protobuf::uint32 curr_lap_games_;
  ::google::protobuf::uint32 best_lap_games_;
  ::google::protobuf::uint32 best_lap_time_;
  ::google::protobuf::uint32 lap_heroes_completed_;
  ::google::protobuf::uint32 lap_heroes_remaining_;
  ::google::protobuf::uint32 next_hero_id_;
  ::google::protobuf::uint32 prev_hero_id_;
  ::google::protobuf::uint32 prev_hero_games_;
  float prev_avg_tries_;
  float curr_avg_tries_;
  float next_avg_tries_;
  float full_lap_avg_tries_;
  float curr_lap_avg_tries_;
  ::std::string* profile_name_;
  ::google::protobuf::uint32 start_hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetAllHeroProgressResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyList : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetTrophyList();
  virtual ~CMsgClientToGCGetTrophyList();

  CMsgClientToGCGetTrophyList(const CMsgClientToGCGetTrophyList& from);

  inline CMsgClientToGCGetTrophyList& operator=(const CMsgClientToGCGetTrophyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyList& default_instance();

  void Swap(CMsgClientToGCGetTrophyList* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetTrophyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetTrophyList& from);
  void MergeFrom(const CMsgClientToGCGetTrophyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetTrophyList)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetTrophyList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse_Trophy : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetTrophyListResponse_Trophy();
  virtual ~CMsgClientToGCGetTrophyListResponse_Trophy();

  CMsgClientToGCGetTrophyListResponse_Trophy(const CMsgClientToGCGetTrophyListResponse_Trophy& from);

  inline CMsgClientToGCGetTrophyListResponse_Trophy& operator=(const CMsgClientToGCGetTrophyListResponse_Trophy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyListResponse_Trophy& default_instance();

  void Swap(CMsgClientToGCGetTrophyListResponse_Trophy* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetTrophyListResponse_Trophy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  inline bool has_trophy_id() const;
  inline void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 trophy_id() const;
  inline void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  inline bool has_trophy_score() const;
  inline void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 trophy_score() const;
  inline void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 3;
  inline bool has_last_updated() const;
  inline void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 3;
  inline ::google::protobuf::uint32 last_updated() const;
  inline void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetTrophyListResponse.Trophy)
 private:
  inline void set_has_trophy_id();
  inline void clear_has_trophy_id();
  inline void set_has_trophy_score();
  inline void clear_has_trophy_score();
  inline void set_has_last_updated();
  inline void clear_has_last_updated();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 last_updated_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetTrophyListResponse_Trophy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetTrophyListResponse();
  virtual ~CMsgClientToGCGetTrophyListResponse();

  CMsgClientToGCGetTrophyListResponse(const CMsgClientToGCGetTrophyListResponse& from);

  inline CMsgClientToGCGetTrophyListResponse& operator=(const CMsgClientToGCGetTrophyListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyListResponse& default_instance();

  void Swap(CMsgClientToGCGetTrophyListResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetTrophyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetTrophyListResponse_Trophy Trophy;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated .CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
  inline int trophies_size() const;
  inline void clear_trophies();
  static const int kTrophiesFieldNumber = 2;
  inline const ::CMsgClientToGCGetTrophyListResponse_Trophy& trophies(int index) const;
  inline ::CMsgClientToGCGetTrophyListResponse_Trophy* mutable_trophies(int index);
  inline ::CMsgClientToGCGetTrophyListResponse_Trophy* add_trophies();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >&
      trophies() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >*
      mutable_trophies();

  // optional string profile_name = 3;
  inline bool has_profile_name() const;
  inline void clear_profile_name();
  static const int kProfileNameFieldNumber = 3;
  inline const ::std::string& profile_name() const;
  inline void set_profile_name(const ::std::string& value);
  inline void set_profile_name(const char* value);
  inline void set_profile_name(const char* value, size_t size);
  inline ::std::string* mutable_profile_name();
  inline ::std::string* release_profile_name();
  inline void set_allocated_profile_name(::std::string* profile_name);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetTrophyListResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_profile_name();
  inline void clear_has_profile_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy > trophies_;
  ::std::string* profile_name_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetTrophyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientTrophyAwarded : public ::google::protobuf::Message {
 public:
  CMsgGCToClientTrophyAwarded();
  virtual ~CMsgGCToClientTrophyAwarded();

  CMsgGCToClientTrophyAwarded(const CMsgGCToClientTrophyAwarded& from);

  inline CMsgGCToClientTrophyAwarded& operator=(const CMsgGCToClientTrophyAwarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTrophyAwarded& default_instance();

  void Swap(CMsgGCToClientTrophyAwarded* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientTrophyAwarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientTrophyAwarded& from);
  void MergeFrom(const CMsgGCToClientTrophyAwarded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  inline bool has_trophy_id() const;
  inline void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 trophy_id() const;
  inline void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  inline bool has_trophy_score() const;
  inline void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 trophy_score() const;
  inline void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 trophy_old_score = 3;
  inline bool has_trophy_old_score() const;
  inline void clear_trophy_old_score();
  static const int kTrophyOldScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 trophy_old_score() const;
  inline void set_trophy_old_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 4;
  inline bool has_last_updated() const;
  inline void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 4;
  inline ::google::protobuf::uint32 last_updated() const;
  inline void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientTrophyAwarded)
 private:
  inline void set_has_trophy_id();
  inline void clear_has_trophy_id();
  inline void set_has_trophy_score();
  inline void clear_has_trophy_score();
  inline void set_has_trophy_old_score();
  inline void clear_has_trophy_old_score();
  inline void set_has_last_updated();
  inline void clear_has_last_updated();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 trophy_old_score_;
  ::google::protobuf::uint32 last_updated_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientTrophyAwarded* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCard : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetProfileCard();
  virtual ~CMsgClientToGCGetProfileCard();

  CMsgClientToGCGetProfileCard(const CMsgClientToGCGetProfileCard& from);

  inline CMsgClientToGCGetProfileCard& operator=(const CMsgClientToGCGetProfileCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileCard& default_instance();

  void Swap(CMsgClientToGCGetProfileCard* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetProfileCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetProfileCard& from);
  void MergeFrom(const CMsgClientToGCGetProfileCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetProfileCard)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetProfileCard* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots_CardSlot : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetProfileCardSlots_CardSlot();
  virtual ~CMsgClientToGCSetProfileCardSlots_CardSlot();

  CMsgClientToGCSetProfileCardSlots_CardSlot(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);

  inline CMsgClientToGCSetProfileCardSlots_CardSlot& operator=(const CMsgClientToGCSetProfileCardSlots_CardSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetProfileCardSlots_CardSlot& default_instance();

  void Swap(CMsgClientToGCSetProfileCardSlots_CardSlot* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetProfileCardSlots_CardSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot_id = 1;
  inline bool has_slot_id() const;
  inline void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  inline ::google::protobuf::uint32 slot_id() const;
  inline void set_slot_id(::google::protobuf::uint32 value);

  // optional .EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
  inline bool has_slot_type() const;
  inline void clear_slot_type();
  static const int kSlotTypeFieldNumber = 2;
  inline ::EProfileCardSlotType slot_type() const;
  inline void set_slot_type(::EProfileCardSlotType value);

  // optional uint64 slot_value = 3;
  inline bool has_slot_value() const;
  inline void clear_slot_value();
  static const int kSlotValueFieldNumber = 3;
  inline ::google::protobuf::uint64 slot_value() const;
  inline void set_slot_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetProfileCardSlots.CardSlot)
 private:
  inline void set_has_slot_id();
  inline void clear_has_slot_id();
  inline void set_has_slot_type();
  inline void clear_has_slot_type();
  inline void set_has_slot_value();
  inline void clear_has_slot_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_id_;
  int slot_type_;
  ::google::protobuf::uint64 slot_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetProfileCardSlots_CardSlot* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSetProfileCardSlots();
  virtual ~CMsgClientToGCSetProfileCardSlots();

  CMsgClientToGCSetProfileCardSlots(const CMsgClientToGCSetProfileCardSlots& from);

  inline CMsgClientToGCSetProfileCardSlots& operator=(const CMsgClientToGCSetProfileCardSlots& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetProfileCardSlots& default_instance();

  void Swap(CMsgClientToGCSetProfileCardSlots* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSetProfileCardSlots* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetProfileCardSlots_CardSlot CardSlot;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 1;
  inline const ::CMsgClientToGCSetProfileCardSlots_CardSlot& slots(int index) const;
  inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* mutable_slots(int index);
  inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >*
      mutable_slots();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetProfileCardSlots)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot > slots_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSetProfileCardSlots* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCardStats : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetProfileCardStats();
  virtual ~CMsgClientToGCGetProfileCardStats();

  CMsgClientToGCGetProfileCardStats(const CMsgClientToGCGetProfileCardStats& from);

  inline CMsgClientToGCGetProfileCardStats& operator=(const CMsgClientToGCGetProfileCardStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileCardStats& default_instance();

  void Swap(CMsgClientToGCGetProfileCardStats* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetProfileCardStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetProfileCardStats& from);
  void MergeFrom(const CMsgClientToGCGetProfileCardStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetProfileCardStats)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetProfileCardStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateHeroStatue : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreateHeroStatue();
  virtual ~CMsgClientToGCCreateHeroStatue();

  CMsgClientToGCCreateHeroStatue(const CMsgClientToGCCreateHeroStatue& from);

  inline CMsgClientToGCCreateHeroStatue& operator=(const CMsgClientToGCCreateHeroStatue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreateHeroStatue& default_instance();

  void Swap(CMsgClientToGCCreateHeroStatue* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateHeroStatue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreateHeroStatue& from);
  void MergeFrom(const CMsgClientToGCCreateHeroStatue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 source_item = 1;
  inline bool has_source_item() const;
  inline void clear_source_item();
  static const int kSourceItemFieldNumber = 1;
  inline ::google::protobuf::uint64 source_item() const;
  inline void set_source_item(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional string sequence_name = 4;
  inline bool has_sequence_name() const;
  inline void clear_sequence_name();
  static const int kSequenceNameFieldNumber = 4;
  inline const ::std::string& sequence_name() const;
  inline void set_sequence_name(const ::std::string& value);
  inline void set_sequence_name(const char* value);
  inline void set_sequence_name(const char* value, size_t size);
  inline ::std::string* mutable_sequence_name();
  inline ::std::string* release_sequence_name();
  inline void set_allocated_sequence_name(::std::string* sequence_name);

  // optional float cycle = 5;
  inline bool has_cycle() const;
  inline void clear_cycle();
  static const int kCycleFieldNumber = 5;
  inline float cycle() const;
  inline void set_cycle(float value);

  // repeated uint32 wearables = 6;
  inline int wearables_size() const;
  inline void clear_wearables();
  static const int kWearablesFieldNumber = 6;
  inline ::google::protobuf::uint32 wearables(int index) const;
  inline void set_wearables(int index, ::google::protobuf::uint32 value);
  inline void add_wearables(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wearables() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wearables();

  // optional string inscription = 7;
  inline bool has_inscription() const;
  inline void clear_inscription();
  static const int kInscriptionFieldNumber = 7;
  inline const ::std::string& inscription() const;
  inline void set_inscription(const ::std::string& value);
  inline void set_inscription(const char* value);
  inline void set_inscription(const char* value, size_t size);
  inline ::std::string* mutable_inscription();
  inline ::std::string* release_inscription();
  inline void set_allocated_inscription(::std::string* inscription);

  // repeated uint32 styles = 8;
  inline int styles_size() const;
  inline void clear_styles();
  static const int kStylesFieldNumber = 8;
  inline ::google::protobuf::uint32 styles(int index) const;
  inline void set_styles(int index, ::google::protobuf::uint32 value);
  inline void add_styles(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      styles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_styles();

  // optional uint64 reforger_item = 9;
  inline bool has_reforger_item() const;
  inline void clear_reforger_item();
  static const int kReforgerItemFieldNumber = 9;
  inline ::google::protobuf::uint64 reforger_item() const;
  inline void set_reforger_item(::google::protobuf::uint64 value);

  // optional bool tournament_drop = 10;
  inline bool has_tournament_drop() const;
  inline void clear_tournament_drop();
  static const int kTournamentDropFieldNumber = 10;
  inline bool tournament_drop() const;
  inline void set_tournament_drop(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateHeroStatue)
 private:
  inline void set_has_source_item();
  inline void clear_has_source_item();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_sequence_name();
  inline void clear_has_sequence_name();
  inline void set_has_cycle();
  inline void clear_has_cycle();
  inline void set_has_inscription();
  inline void clear_has_inscription();
  inline void set_has_reforger_item();
  inline void clear_has_reforger_item();
  inline void set_has_tournament_drop();
  inline void clear_has_tournament_drop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 source_item_;
  ::std::string* sequence_name_;
  ::google::protobuf::uint32 hero_id_;
  float cycle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wearables_;
  ::std::string* inscription_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > styles_;
  ::google::protobuf::uint64 reforger_item_;
  bool tournament_drop_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreateHeroStatue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateTeamShowcase : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreateTeamShowcase();
  virtual ~CMsgClientToGCCreateTeamShowcase();

  CMsgClientToGCCreateTeamShowcase(const CMsgClientToGCCreateTeamShowcase& from);

  inline CMsgClientToGCCreateTeamShowcase& operator=(const CMsgClientToGCCreateTeamShowcase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreateTeamShowcase& default_instance();

  void Swap(CMsgClientToGCCreateTeamShowcase* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateTeamShowcase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreateTeamShowcase& from);
  void MergeFrom(const CMsgClientToGCCreateTeamShowcase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 source_item = 1;
  inline bool has_source_item() const;
  inline void clear_source_item();
  static const int kSourceItemFieldNumber = 1;
  inline ::google::protobuf::uint64 source_item() const;
  inline void set_source_item(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional string sequence_name = 4;
  inline bool has_sequence_name() const;
  inline void clear_sequence_name();
  static const int kSequenceNameFieldNumber = 4;
  inline const ::std::string& sequence_name() const;
  inline void set_sequence_name(const ::std::string& value);
  inline void set_sequence_name(const char* value);
  inline void set_sequence_name(const char* value, size_t size);
  inline ::std::string* mutable_sequence_name();
  inline ::std::string* release_sequence_name();
  inline void set_allocated_sequence_name(::std::string* sequence_name);

  // optional float cycle = 5;
  inline bool has_cycle() const;
  inline void clear_cycle();
  static const int kCycleFieldNumber = 5;
  inline float cycle() const;
  inline void set_cycle(float value);

  // repeated uint32 wearables = 6;
  inline int wearables_size() const;
  inline void clear_wearables();
  static const int kWearablesFieldNumber = 6;
  inline ::google::protobuf::uint32 wearables(int index) const;
  inline void set_wearables(int index, ::google::protobuf::uint32 value);
  inline void add_wearables(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wearables() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wearables();

  // optional string inscription = 7;
  inline bool has_inscription() const;
  inline void clear_inscription();
  static const int kInscriptionFieldNumber = 7;
  inline const ::std::string& inscription() const;
  inline void set_inscription(const ::std::string& value);
  inline void set_inscription(const char* value);
  inline void set_inscription(const char* value, size_t size);
  inline ::std::string* mutable_inscription();
  inline ::std::string* release_inscription();
  inline void set_allocated_inscription(::std::string* inscription);

  // repeated uint32 styles = 8;
  inline int styles_size() const;
  inline void clear_styles();
  static const int kStylesFieldNumber = 8;
  inline ::google::protobuf::uint32 styles(int index) const;
  inline void set_styles(int index, ::google::protobuf::uint32 value);
  inline void add_styles(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      styles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_styles();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateTeamShowcase)
 private:
  inline void set_has_source_item();
  inline void clear_has_source_item();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_sequence_name();
  inline void clear_has_sequence_name();
  inline void set_has_cycle();
  inline void clear_has_cycle();
  inline void set_has_inscription();
  inline void clear_has_inscription();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 source_item_;
  ::std::string* sequence_name_;
  ::google::protobuf::uint32 hero_id_;
  float cycle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wearables_;
  ::std::string* inscription_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > styles_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreateTeamShowcase* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientHeroStatueCreateResult : public ::google::protobuf::Message {
 public:
  CMsgGCToClientHeroStatueCreateResult();
  virtual ~CMsgGCToClientHeroStatueCreateResult();

  CMsgGCToClientHeroStatueCreateResult(const CMsgGCToClientHeroStatueCreateResult& from);

  inline CMsgGCToClientHeroStatueCreateResult& operator=(const CMsgGCToClientHeroStatueCreateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientHeroStatueCreateResult& default_instance();

  void Swap(CMsgGCToClientHeroStatueCreateResult* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientHeroStatueCreateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  void MergeFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 resulting_item = 1;
  inline bool has_resulting_item() const;
  inline void clear_resulting_item();
  static const int kResultingItemFieldNumber = 1;
  inline ::google::protobuf::uint64 resulting_item() const;
  inline void set_resulting_item(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientHeroStatueCreateResult)
 private:
  inline void set_has_resulting_item();
  inline void clear_has_resulting_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 resulting_item_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientHeroStatueCreateResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientTeamShowcaseCreateResult : public ::google::protobuf::Message {
 public:
  CMsgGCToClientTeamShowcaseCreateResult();
  virtual ~CMsgGCToClientTeamShowcaseCreateResult();

  CMsgGCToClientTeamShowcaseCreateResult(const CMsgGCToClientTeamShowcaseCreateResult& from);

  inline CMsgGCToClientTeamShowcaseCreateResult& operator=(const CMsgGCToClientTeamShowcaseCreateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTeamShowcaseCreateResult& default_instance();

  void Swap(CMsgGCToClientTeamShowcaseCreateResult* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientTeamShowcaseCreateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientTeamShowcaseCreateResult& from);
  void MergeFrom(const CMsgGCToClientTeamShowcaseCreateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 resulting_item = 1;
  inline bool has_resulting_item() const;
  inline void clear_resulting_item();
  static const int kResultingItemFieldNumber = 1;
  inline ::google::protobuf::uint64 resulting_item() const;
  inline void set_resulting_item(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientTeamShowcaseCreateResult)
 private:
  inline void set_has_resulting_item();
  inline void clear_has_resulting_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 resulting_item_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientTeamShowcaseCreateResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecordCompendiumStats : public ::google::protobuf::Message {
 public:
  CMsgClientToGCRecordCompendiumStats();
  virtual ~CMsgClientToGCRecordCompendiumStats();

  CMsgClientToGCRecordCompendiumStats(const CMsgClientToGCRecordCompendiumStats& from);

  inline CMsgClientToGCRecordCompendiumStats& operator=(const CMsgClientToGCRecordCompendiumStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRecordCompendiumStats& default_instance();

  void Swap(CMsgClientToGCRecordCompendiumStats* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCRecordCompendiumStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCRecordCompendiumStats& from);
  void MergeFrom(const CMsgClientToGCRecordCompendiumStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 view_duration_s = 2;
  inline bool has_view_duration_s() const;
  inline void clear_view_duration_s();
  static const int kViewDurationSFieldNumber = 2;
  inline ::google::protobuf::uint32 view_duration_s() const;
  inline void set_view_duration_s(::google::protobuf::uint32 value);

  // optional uint32 videos_viewed = 3;
  inline bool has_videos_viewed() const;
  inline void clear_videos_viewed();
  static const int kVideosViewedFieldNumber = 3;
  inline ::google::protobuf::uint32 videos_viewed() const;
  inline void set_videos_viewed(::google::protobuf::uint32 value);

  // optional uint32 page_turns = 4;
  inline bool has_page_turns() const;
  inline void clear_page_turns();
  static const int kPageTurnsFieldNumber = 4;
  inline ::google::protobuf::uint32 page_turns() const;
  inline void set_page_turns(::google::protobuf::uint32 value);

  // optional uint32 links_followed = 5;
  inline bool has_links_followed() const;
  inline void clear_links_followed();
  static const int kLinksFollowedFieldNumber = 5;
  inline ::google::protobuf::uint32 links_followed() const;
  inline void set_links_followed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRecordCompendiumStats)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_view_duration_s();
  inline void clear_has_view_duration_s();
  inline void set_has_videos_viewed();
  inline void clear_has_videos_viewed();
  inline void set_has_page_turns();
  inline void clear_has_page_turns();
  inline void set_has_links_followed();
  inline void clear_has_links_followed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 view_duration_s_;
  ::google::protobuf::uint32 videos_viewed_;
  ::google::protobuf::uint32 page_turns_;
  ::google::protobuf::uint32 links_followed_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCRecordCompendiumStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientEventStatusChanged : public ::google::protobuf::Message {
 public:
  CMsgGCToClientEventStatusChanged();
  virtual ~CMsgGCToClientEventStatusChanged();

  CMsgGCToClientEventStatusChanged(const CMsgGCToClientEventStatusChanged& from);

  inline CMsgGCToClientEventStatusChanged& operator=(const CMsgGCToClientEventStatusChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientEventStatusChanged& default_instance();

  void Swap(CMsgGCToClientEventStatusChanged* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientEventStatusChanged* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientEventStatusChanged& from);
  void MergeFrom(const CMsgGCToClientEventStatusChanged& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EEvent active_events = 1;
  inline int active_events_size() const;
  inline void clear_active_events();
  static const int kActiveEventsFieldNumber = 1;
  inline ::EEvent active_events(int index) const;
  inline void set_active_events(int index, ::EEvent value);
  inline void add_active_events(::EEvent value);
  inline const ::google::protobuf::RepeatedField<int>& active_events() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_active_events();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientEventStatusChanged)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> active_events_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientEventStatusChanged* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCExchangeItemsForOffering : public ::google::protobuf::Message {
 public:
  CMsgClientToGCExchangeItemsForOffering();
  virtual ~CMsgClientToGCExchangeItemsForOffering();

  CMsgClientToGCExchangeItemsForOffering(const CMsgClientToGCExchangeItemsForOffering& from);

  inline CMsgClientToGCExchangeItemsForOffering& operator=(const CMsgClientToGCExchangeItemsForOffering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCExchangeItemsForOffering& default_instance();

  void Swap(CMsgClientToGCExchangeItemsForOffering* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCExchangeItemsForOffering* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCExchangeItemsForOffering& from);
  void MergeFrom(const CMsgClientToGCExchangeItemsForOffering& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 item_ids = 1;
  inline int item_ids_size() const;
  inline void clear_item_ids();
  static const int kItemIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 item_ids(int index) const;
  inline void set_item_ids(int index, ::google::protobuf::uint64 value);
  inline void add_item_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_ids();

  // optional uint32 recycle_id = 2;
  inline bool has_recycle_id() const;
  inline void clear_recycle_id();
  static const int kRecycleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 recycle_id() const;
  inline void set_recycle_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCExchangeItemsForOffering)
 private:
  inline void set_has_recycle_id();
  inline void clear_has_recycle_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_ids_;
  ::google::protobuf::uint32 recycle_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCExchangeItemsForOffering* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCExchangeItemsForOfferingResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCExchangeItemsForOfferingResponse();
  virtual ~CMsgClientToGCExchangeItemsForOfferingResponse();

  CMsgClientToGCExchangeItemsForOfferingResponse(const CMsgClientToGCExchangeItemsForOfferingResponse& from);

  inline CMsgClientToGCExchangeItemsForOfferingResponse& operator=(const CMsgClientToGCExchangeItemsForOfferingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCExchangeItemsForOfferingResponse& default_instance();

  void Swap(CMsgClientToGCExchangeItemsForOfferingResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCExchangeItemsForOfferingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCExchangeItemsForOfferingResponse& from);
  void MergeFrom(const CMsgClientToGCExchangeItemsForOfferingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCExchangeItemsForOfferingResponse_EResponse EResponse;
  static const EResponse eResponse_Success = CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_Success;
  static const EResponse eResponse_OfferingDisabled = CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_OfferingDisabled;
  static const EResponse eResponse_InvalidItems = CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_InvalidItems;
  static const EResponse eResponse_InternalError = CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_eResponse_InternalError;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_IsValid(value);
  }
  static const EResponse EResponse_MIN =
    CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_EResponse_MIN;
  static const EResponse EResponse_MAX =
    CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_EResponse_MAX;
  static const int EResponse_ARRAYSIZE =
    CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_descriptor();
  }
  static inline const ::std::string& EResponse_Name(EResponse value) {
    return CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_Name(value);
  }
  static inline bool EResponse_Parse(const ::std::string& name,
      EResponse* value) {
    return CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgClientToGCExchangeItemsForOfferingResponse.EResponse response = 1 [default = eResponse_Success];
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline ::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse response() const;
  inline void set_response(::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCExchangeItemsForOfferingResponse)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int response_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCExchangeItemsForOfferingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCPlayerStatsRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCPlayerStatsRequest();
  virtual ~CMsgClientToGCPlayerStatsRequest();

  CMsgClientToGCPlayerStatsRequest(const CMsgClientToGCPlayerStatsRequest& from);

  inline CMsgClientToGCPlayerStatsRequest& operator=(const CMsgClientToGCPlayerStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCPlayerStatsRequest& default_instance();

  void Swap(CMsgClientToGCPlayerStatsRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCPlayerStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCPlayerStatsRequest& from);
  void MergeFrom(const CMsgClientToGCPlayerStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPlayerStatsRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCPlayerStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientPlayerStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientPlayerStatsResponse();
  virtual ~CMsgGCToClientPlayerStatsResponse();

  CMsgGCToClientPlayerStatsResponse(const CMsgGCToClientPlayerStatsResponse& from);

  inline CMsgGCToClientPlayerStatsResponse& operator=(const CMsgGCToClientPlayerStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientPlayerStatsResponse& default_instance();

  void Swap(CMsgGCToClientPlayerStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientPlayerStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientPlayerStatsResponse& from);
  void MergeFrom(const CMsgGCToClientPlayerStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated float player_stats = 2;
  inline int player_stats_size() const;
  inline void clear_player_stats();
  static const int kPlayerStatsFieldNumber = 2;
  inline float player_stats(int index) const;
  inline void set_player_stats(int index, float value);
  inline void add_player_stats(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      player_stats() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_player_stats();

  // optional uint32 match_count = 3;
  inline bool has_match_count() const;
  inline void clear_match_count();
  static const int kMatchCountFieldNumber = 3;
  inline ::google::protobuf::uint32 match_count() const;
  inline void set_match_count(::google::protobuf::uint32 value);

  // optional float mean_gpm = 4;
  inline bool has_mean_gpm() const;
  inline void clear_mean_gpm();
  static const int kMeanGpmFieldNumber = 4;
  inline float mean_gpm() const;
  inline void set_mean_gpm(float value);

  // optional float mean_xppm = 5;
  inline bool has_mean_xppm() const;
  inline void clear_mean_xppm();
  static const int kMeanXppmFieldNumber = 5;
  inline float mean_xppm() const;
  inline void set_mean_xppm(float value);

  // optional float mean_lasthits = 6;
  inline bool has_mean_lasthits() const;
  inline void clear_mean_lasthits();
  static const int kMeanLasthitsFieldNumber = 6;
  inline float mean_lasthits() const;
  inline void set_mean_lasthits(float value);

  // optional uint32 rampages = 7;
  inline bool has_rampages() const;
  inline void clear_rampages();
  static const int kRampagesFieldNumber = 7;
  inline ::google::protobuf::uint32 rampages() const;
  inline void set_rampages(::google::protobuf::uint32 value);

  // optional uint32 triple_kills = 8;
  inline bool has_triple_kills() const;
  inline void clear_triple_kills();
  static const int kTripleKillsFieldNumber = 8;
  inline ::google::protobuf::uint32 triple_kills() const;
  inline void set_triple_kills(::google::protobuf::uint32 value);

  // optional uint32 first_blood_claimed = 9;
  inline bool has_first_blood_claimed() const;
  inline void clear_first_blood_claimed();
  static const int kFirstBloodClaimedFieldNumber = 9;
  inline ::google::protobuf::uint32 first_blood_claimed() const;
  inline void set_first_blood_claimed(::google::protobuf::uint32 value);

  // optional uint32 first_blood_given = 10;
  inline bool has_first_blood_given() const;
  inline void clear_first_blood_given();
  static const int kFirstBloodGivenFieldNumber = 10;
  inline ::google::protobuf::uint32 first_blood_given() const;
  inline void set_first_blood_given(::google::protobuf::uint32 value);

  // optional uint32 couriers_killed = 11;
  inline bool has_couriers_killed() const;
  inline void clear_couriers_killed();
  static const int kCouriersKilledFieldNumber = 11;
  inline ::google::protobuf::uint32 couriers_killed() const;
  inline void set_couriers_killed(::google::protobuf::uint32 value);

  // optional uint32 aegises_snatched = 12;
  inline bool has_aegises_snatched() const;
  inline void clear_aegises_snatched();
  static const int kAegisesSnatchedFieldNumber = 12;
  inline ::google::protobuf::uint32 aegises_snatched() const;
  inline void set_aegises_snatched(::google::protobuf::uint32 value);

  // optional uint32 cheeses_eaten = 13;
  inline bool has_cheeses_eaten() const;
  inline void clear_cheeses_eaten();
  static const int kCheesesEatenFieldNumber = 13;
  inline ::google::protobuf::uint32 cheeses_eaten() const;
  inline void set_cheeses_eaten(::google::protobuf::uint32 value);

  // optional uint32 creeps_stacked = 14;
  inline bool has_creeps_stacked() const;
  inline void clear_creeps_stacked();
  static const int kCreepsStackedFieldNumber = 14;
  inline ::google::protobuf::uint32 creeps_stacked() const;
  inline void set_creeps_stacked(::google::protobuf::uint32 value);

  // optional float fight_score = 15;
  inline bool has_fight_score() const;
  inline void clear_fight_score();
  static const int kFightScoreFieldNumber = 15;
  inline float fight_score() const;
  inline void set_fight_score(float value);

  // optional float farm_score = 16;
  inline bool has_farm_score() const;
  inline void clear_farm_score();
  static const int kFarmScoreFieldNumber = 16;
  inline float farm_score() const;
  inline void set_farm_score(float value);

  // optional float support_score = 17;
  inline bool has_support_score() const;
  inline void clear_support_score();
  static const int kSupportScoreFieldNumber = 17;
  inline float support_score() const;
  inline void set_support_score(float value);

  // optional float push_score = 18;
  inline bool has_push_score() const;
  inline void clear_push_score();
  static const int kPushScoreFieldNumber = 18;
  inline float push_score() const;
  inline void set_push_score(float value);

  // optional float versatility_score = 19;
  inline bool has_versatility_score() const;
  inline void clear_versatility_score();
  static const int kVersatilityScoreFieldNumber = 19;
  inline float versatility_score() const;
  inline void set_versatility_score(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPlayerStatsResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_count();
  inline void clear_has_match_count();
  inline void set_has_mean_gpm();
  inline void clear_has_mean_gpm();
  inline void set_has_mean_xppm();
  inline void clear_has_mean_xppm();
  inline void set_has_mean_lasthits();
  inline void clear_has_mean_lasthits();
  inline void set_has_rampages();
  inline void clear_has_rampages();
  inline void set_has_triple_kills();
  inline void clear_has_triple_kills();
  inline void set_has_first_blood_claimed();
  inline void clear_has_first_blood_claimed();
  inline void set_has_first_blood_given();
  inline void clear_has_first_blood_given();
  inline void set_has_couriers_killed();
  inline void clear_has_couriers_killed();
  inline void set_has_aegises_snatched();
  inline void clear_has_aegises_snatched();
  inline void set_has_cheeses_eaten();
  inline void clear_has_cheeses_eaten();
  inline void set_has_creeps_stacked();
  inline void clear_has_creeps_stacked();
  inline void set_has_fight_score();
  inline void clear_has_fight_score();
  inline void set_has_farm_score();
  inline void clear_has_farm_score();
  inline void set_has_support_score();
  inline void clear_has_support_score();
  inline void set_has_push_score();
  inline void clear_has_push_score();
  inline void set_has_versatility_score();
  inline void clear_has_versatility_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > player_stats_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 match_count_;
  float mean_gpm_;
  float mean_xppm_;
  float mean_lasthits_;
  ::google::protobuf::uint32 rampages_;
  ::google::protobuf::uint32 triple_kills_;
  ::google::protobuf::uint32 first_blood_claimed_;
  ::google::protobuf::uint32 first_blood_given_;
  ::google::protobuf::uint32 couriers_killed_;
  ::google::protobuf::uint32 aegises_snatched_;
  ::google::protobuf::uint32 cheeses_eaten_;
  ::google::protobuf::uint32 creeps_stacked_;
  float fight_score_;
  float farm_score_;
  float support_score_;
  float push_score_;
  float versatility_score_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientPlayerStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamePlayerCountRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCustomGamePlayerCountRequest();
  virtual ~CMsgClientToGCCustomGamePlayerCountRequest();

  CMsgClientToGCCustomGamePlayerCountRequest(const CMsgClientToGCCustomGamePlayerCountRequest& from);

  inline CMsgClientToGCCustomGamePlayerCountRequest& operator=(const CMsgClientToGCCustomGamePlayerCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCustomGamePlayerCountRequest& default_instance();

  void Swap(CMsgClientToGCCustomGamePlayerCountRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCustomGamePlayerCountRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCustomGamePlayerCountRequest)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCustomGamePlayerCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamePlayerCountResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientCustomGamePlayerCountResponse();
  virtual ~CMsgGCToClientCustomGamePlayerCountResponse();

  CMsgGCToClientCustomGamePlayerCountResponse(const CMsgGCToClientCustomGamePlayerCountResponse& from);

  inline CMsgGCToClientCustomGamePlayerCountResponse& operator=(const CMsgGCToClientCustomGamePlayerCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamePlayerCountResponse& default_instance();

  void Swap(CMsgGCToClientCustomGamePlayerCountResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientCustomGamePlayerCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint64 player_count = 2;
  inline bool has_player_count() const;
  inline void clear_player_count();
  static const int kPlayerCountFieldNumber = 2;
  inline ::google::protobuf::uint64 player_count() const;
  inline void set_player_count(::google::protobuf::uint64 value);

  // optional uint64 spectator_count = 3;
  inline bool has_spectator_count() const;
  inline void clear_spectator_count();
  static const int kSpectatorCountFieldNumber = 3;
  inline ::google::protobuf::uint64 spectator_count() const;
  inline void set_spectator_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCustomGamePlayerCountResponse)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_player_count();
  inline void clear_has_player_count();
  inline void set_has_spectator_count();
  inline void clear_has_spectator_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint64 player_count_;
  ::google::protobuf::uint64 spectator_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientCustomGamePlayerCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamesFriendsPlayedRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCustomGamesFriendsPlayedRequest();
  virtual ~CMsgClientToGCCustomGamesFriendsPlayedRequest();

  CMsgClientToGCCustomGamesFriendsPlayedRequest(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);

  inline CMsgClientToGCCustomGamesFriendsPlayedRequest& operator=(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCustomGamesFriendsPlayedRequest& default_instance();

  void Swap(CMsgClientToGCCustomGamesFriendsPlayedRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCustomGamesFriendsPlayedRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCustomGamesFriendsPlayedRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCustomGamesFriendsPlayedRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame : public ::google::protobuf::Message {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& default_instance();

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // repeated uint32 account_ids = 2;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse();

  CMsgGCToClientCustomGamesFriendsPlayedResponse(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse& default_instance();

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientCustomGamesFriendsPlayedResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame CustomGame;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // repeated .CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
  inline int games_size() const;
  inline void clear_games();
  static const int kGamesFieldNumber = 2;
  inline const ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& games(int index) const;
  inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* mutable_games(int index);
  inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* add_games();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
      games() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
      mutable_games();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCustomGamesFriendsPlayedResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame > games_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientCustomGamesFriendsPlayedResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostCommentRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialFeedPostCommentRequest();
  virtual ~CMsgClientToGCSocialFeedPostCommentRequest();

  CMsgClientToGCSocialFeedPostCommentRequest(const CMsgClientToGCSocialFeedPostCommentRequest& from);

  inline CMsgClientToGCSocialFeedPostCommentRequest& operator=(const CMsgClientToGCSocialFeedPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialFeedPostCommentRequest& default_instance();

  void Swap(CMsgClientToGCSocialFeedPostCommentRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialFeedPostCommentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint64 event_id() const;
  inline void set_event_id(::google::protobuf::uint64 value);

  // optional string comment = 2;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 2;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialFeedPostCommentRequest)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 event_id_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialFeedPostCommentRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostCommentResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialFeedPostCommentResponse();
  virtual ~CMsgGCToClientSocialFeedPostCommentResponse();

  CMsgGCToClientSocialFeedPostCommentResponse(const CMsgGCToClientSocialFeedPostCommentResponse& from);

  inline CMsgGCToClientSocialFeedPostCommentResponse& operator=(const CMsgGCToClientSocialFeedPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialFeedPostCommentResponse& default_instance();

  void Swap(CMsgGCToClientSocialFeedPostCommentResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialFeedPostCommentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialFeedPostCommentResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialFeedPostCommentResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostMessageRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialFeedPostMessageRequest();
  virtual ~CMsgClientToGCSocialFeedPostMessageRequest();

  CMsgClientToGCSocialFeedPostMessageRequest(const CMsgClientToGCSocialFeedPostMessageRequest& from);

  inline CMsgClientToGCSocialFeedPostMessageRequest& operator=(const CMsgClientToGCSocialFeedPostMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialFeedPostMessageRequest& default_instance();

  void Swap(CMsgClientToGCSocialFeedPostMessageRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialFeedPostMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional uint64 match_id = 2;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 match_timestamp = 3;
  inline bool has_match_timestamp() const;
  inline void clear_match_timestamp();
  static const int kMatchTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 match_timestamp() const;
  inline void set_match_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialFeedPostMessageRequest)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_match_timestamp();
  inline void clear_has_match_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 match_timestamp_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialFeedPostMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostMessageResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialFeedPostMessageResponse();
  virtual ~CMsgGCToClientSocialFeedPostMessageResponse();

  CMsgGCToClientSocialFeedPostMessageResponse(const CMsgGCToClientSocialFeedPostMessageResponse& from);

  inline CMsgGCToClientSocialFeedPostMessageResponse& operator=(const CMsgGCToClientSocialFeedPostMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialFeedPostMessageResponse& default_instance();

  void Swap(CMsgGCToClientSocialFeedPostMessageResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialFeedPostMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialFeedPostMessageResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialFeedPostMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCFriendsPlayedCustomGameRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCFriendsPlayedCustomGameRequest();
  virtual ~CMsgClientToGCFriendsPlayedCustomGameRequest();

  CMsgClientToGCFriendsPlayedCustomGameRequest(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);

  inline CMsgClientToGCFriendsPlayedCustomGameRequest& operator=(const CMsgClientToGCFriendsPlayedCustomGameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFriendsPlayedCustomGameRequest& default_instance();

  void Swap(CMsgClientToGCFriendsPlayedCustomGameRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCFriendsPlayedCustomGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  void MergeFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFriendsPlayedCustomGameRequest)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCFriendsPlayedCustomGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFriendsPlayedCustomGameResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFriendsPlayedCustomGameResponse();
  virtual ~CMsgGCToClientFriendsPlayedCustomGameResponse();

  CMsgGCToClientFriendsPlayedCustomGameResponse(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);

  inline CMsgGCToClientFriendsPlayedCustomGameResponse& operator=(const CMsgGCToClientFriendsPlayedCustomGameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFriendsPlayedCustomGameResponse& default_instance();

  void Swap(CMsgGCToClientFriendsPlayedCustomGameResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFriendsPlayedCustomGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  void MergeFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // repeated uint32 account_ids = 2;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFriendsPlayedCustomGameResponse)
 private:
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFriendsPlayedCustomGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCFeaturedHeroesRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCFeaturedHeroesRequest();
  virtual ~CMsgClientToGCFeaturedHeroesRequest();

  CMsgClientToGCFeaturedHeroesRequest(const CMsgClientToGCFeaturedHeroesRequest& from);

  inline CMsgClientToGCFeaturedHeroesRequest& operator=(const CMsgClientToGCFeaturedHeroesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFeaturedHeroesRequest& default_instance();

  void Swap(CMsgClientToGCFeaturedHeroesRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCFeaturedHeroesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCFeaturedHeroesRequest& from);
  void MergeFrom(const CMsgClientToGCFeaturedHeroesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFeaturedHeroesRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCFeaturedHeroesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_DataField : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse_DataField();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_DataField();

  CMsgGCToClientFeaturedHeroesResponse_DataField(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);

  inline CMsgGCToClientFeaturedHeroesResponse_DataField& operator=(const CMsgGCToClientFeaturedHeroesResponse_DataField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_DataField& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse_DataField* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse_DataField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EFeaturedHeroDataType data_type = 1 [default = k_EFeaturedHeroDataType_HeroID];
  inline bool has_data_type() const;
  inline void clear_data_type();
  static const int kDataTypeFieldNumber = 1;
  inline ::EFeaturedHeroDataType data_type() const;
  inline void set_data_type(::EFeaturedHeroDataType value);

  // optional uint32 uint32_value = 2;
  inline bool has_uint32_value() const;
  inline void clear_uint32_value();
  static const int kUint32ValueFieldNumber = 2;
  inline ::google::protobuf::uint32 uint32_value() const;
  inline void set_uint32_value(::google::protobuf::uint32 value);

  // optional uint64 uint64_value = 3;
  inline bool has_uint64_value() const;
  inline void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 3;
  inline ::google::protobuf::uint64 uint64_value() const;
  inline void set_uint64_value(::google::protobuf::uint64 value);

  // optional string string_value = 4;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 4;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const char* value, size_t size);
  inline ::std::string* mutable_string_value();
  inline ::std::string* release_string_value();
  inline void set_allocated_string_value(::std::string* string_value);

  // optional float float_value = 5;
  inline bool has_float_value() const;
  inline void clear_float_value();
  static const int kFloatValueFieldNumber = 5;
  inline float float_value() const;
  inline void set_float_value(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse.DataField)
 private:
  inline void set_has_data_type();
  inline void clear_has_data_type();
  inline void set_has_uint32_value();
  inline void clear_has_uint32_value();
  inline void set_has_uint64_value();
  inline void clear_has_uint64_value();
  inline void set_has_string_value();
  inline void clear_has_string_value();
  inline void set_has_float_value();
  inline void clear_has_float_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int data_type_;
  ::google::protobuf::uint32 uint32_value_;
  ::google::protobuf::uint64 uint64_value_;
  ::std::string* string_value_;
  float float_value_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse_DataField* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_FeaturedHero : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_FeaturedHero();

  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);

  inline CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& operator=(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCToClientFeaturedHeroesResponse.DataField data_fields = 1;
  inline int data_fields_size() const;
  inline void clear_data_fields();
  static const int kDataFieldsFieldNumber = 1;
  inline const ::CMsgGCToClientFeaturedHeroesResponse_DataField& data_fields(int index) const;
  inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* mutable_data_fields(int index);
  inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* add_data_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >&
      data_fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >*
      mutable_data_fields();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField > data_fields_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_Category : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse_Category();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_Category();

  CMsgGCToClientFeaturedHeroesResponse_Category(const CMsgGCToClientFeaturedHeroesResponse_Category& from);

  inline CMsgGCToClientFeaturedHeroesResponse_Category& operator=(const CMsgGCToClientFeaturedHeroesResponse_Category& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_Category& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse_Category* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse_Category* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_Category& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_Category& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 category_weight = 1;
  inline bool has_category_weight() const;
  inline void clear_category_weight();
  static const int kCategoryWeightFieldNumber = 1;
  inline ::google::protobuf::int32 category_weight() const;
  inline void set_category_weight(::google::protobuf::int32 value);

  // repeated .EFeaturedHeroTextField text_fields = 2;
  inline int text_fields_size() const;
  inline void clear_text_fields();
  static const int kTextFieldsFieldNumber = 2;
  inline ::EFeaturedHeroTextField text_fields(int index) const;
  inline void set_text_fields(int index, ::EFeaturedHeroTextField value);
  inline void add_text_fields(::EFeaturedHeroTextField value);
  inline const ::google::protobuf::RepeatedField<int>& text_fields() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_text_fields();

  // repeated .CMsgGCToClientFeaturedHeroesResponse.FeaturedHero featured_heroes = 3;
  inline int featured_heroes_size() const;
  inline void clear_featured_heroes();
  static const int kFeaturedHeroesFieldNumber = 3;
  inline const ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& featured_heroes(int index) const;
  inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* mutable_featured_heroes(int index);
  inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* add_featured_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >&
      featured_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >*
      mutable_featured_heroes();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse.Category)
 private:
  inline void set_has_category_weight();
  inline void clear_has_category_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> text_fields_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero > featured_heroes_;
  ::google::protobuf::int32 category_weight_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse_Category* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientFeaturedHeroesResponse();
  virtual ~CMsgGCToClientFeaturedHeroesResponse();

  CMsgGCToClientFeaturedHeroesResponse(const CMsgGCToClientFeaturedHeroesResponse& from);

  inline CMsgGCToClientFeaturedHeroesResponse& operator=(const CMsgGCToClientFeaturedHeroesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse& default_instance();

  void Swap(CMsgGCToClientFeaturedHeroesResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientFeaturedHeroesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientFeaturedHeroesResponse_DataField DataField;
  typedef CMsgGCToClientFeaturedHeroesResponse_FeaturedHero FeaturedHero;
  typedef CMsgGCToClientFeaturedHeroesResponse_Category Category;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCToClientFeaturedHeroesResponse.Category categories = 1;
  inline int categories_size() const;
  inline void clear_categories();
  static const int kCategoriesFieldNumber = 1;
  inline const ::CMsgGCToClientFeaturedHeroesResponse_Category& categories(int index) const;
  inline ::CMsgGCToClientFeaturedHeroesResponse_Category* mutable_categories(int index);
  inline ::CMsgGCToClientFeaturedHeroesResponse_Category* add_categories();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >&
      categories() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >*
      mutable_categories();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientFeaturedHeroesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category > categories_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientFeaturedHeroesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchPostCommentRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialMatchPostCommentRequest();
  virtual ~CMsgClientToGCSocialMatchPostCommentRequest();

  CMsgClientToGCSocialMatchPostCommentRequest(const CMsgClientToGCSocialMatchPostCommentRequest& from);

  inline CMsgClientToGCSocialMatchPostCommentRequest& operator=(const CMsgClientToGCSocialMatchPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialMatchPostCommentRequest& default_instance();

  void Swap(CMsgClientToGCSocialMatchPostCommentRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialMatchPostCommentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional string comment = 2;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 2;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialMatchPostCommentRequest)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialMatchPostCommentRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchPostCommentResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialMatchPostCommentResponse();
  virtual ~CMsgGCToClientSocialMatchPostCommentResponse();

  CMsgGCToClientSocialMatchPostCommentResponse(const CMsgGCToClientSocialMatchPostCommentResponse& from);

  inline CMsgGCToClientSocialMatchPostCommentResponse& operator=(const CMsgGCToClientSocialMatchPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchPostCommentResponse& default_instance();

  void Swap(CMsgGCToClientSocialMatchPostCommentResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialMatchPostCommentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialMatchPostCommentResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialMatchPostCommentResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchDetailsRequest : public ::google::protobuf::Message {
 public:
  CMsgClientToGCSocialMatchDetailsRequest();
  virtual ~CMsgClientToGCSocialMatchDetailsRequest();

  CMsgClientToGCSocialMatchDetailsRequest(const CMsgClientToGCSocialMatchDetailsRequest& from);

  inline CMsgClientToGCSocialMatchDetailsRequest& operator=(const CMsgClientToGCSocialMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialMatchDetailsRequest& default_instance();

  void Swap(CMsgClientToGCSocialMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCSocialMatchDetailsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 pagination_timestamp = 2;
  inline bool has_pagination_timestamp() const;
  inline void clear_pagination_timestamp();
  static const int kPaginationTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 pagination_timestamp() const;
  inline void set_pagination_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSocialMatchDetailsRequest)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_pagination_timestamp();
  inline void clear_has_pagination_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 pagination_timestamp_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCSocialMatchDetailsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse_Comment : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialMatchDetailsResponse_Comment();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse_Comment();

  CMsgGCToClientSocialMatchDetailsResponse_Comment(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);

  inline CMsgGCToClientSocialMatchDetailsResponse_Comment& operator=(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchDetailsResponse_Comment& default_instance();

  void Swap(CMsgGCToClientSocialMatchDetailsResponse_Comment* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialMatchDetailsResponse_Comment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // optional uint32 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional string comment = 4;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 4;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialMatchDetailsResponse.Comment)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* persona_name_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialMatchDetailsResponse_Comment* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToClientSocialMatchDetailsResponse();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse();

  CMsgGCToClientSocialMatchDetailsResponse(const CMsgGCToClientSocialMatchDetailsResponse& from);

  inline CMsgGCToClientSocialMatchDetailsResponse& operator=(const CMsgGCToClientSocialMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchDetailsResponse& default_instance();

  void Swap(CMsgGCToClientSocialMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCToClientSocialMatchDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientSocialMatchDetailsResponse_Comment Comment;

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // repeated .CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
  inline int comments_size() const;
  inline void clear_comments();
  static const int kCommentsFieldNumber = 2;
  inline const ::CMsgGCToClientSocialMatchDetailsResponse_Comment& comments(int index) const;
  inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* mutable_comments(int index);
  inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* add_comments();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
      comments() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
      mutable_comments();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSocialMatchDetailsResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment > comments_;
  bool success_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToClientSocialMatchDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyMemberSetCoach : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartyMemberSetCoach();
  virtual ~CMsgDOTAPartyMemberSetCoach();

  CMsgDOTAPartyMemberSetCoach(const CMsgDOTAPartyMemberSetCoach& from);

  inline CMsgDOTAPartyMemberSetCoach& operator=(const CMsgDOTAPartyMemberSetCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyMemberSetCoach& default_instance();

  void Swap(CMsgDOTAPartyMemberSetCoach* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartyMemberSetCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartyMemberSetCoach& from);
  void MergeFrom(const CMsgDOTAPartyMemberSetCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool wants_coach = 1;
  inline bool has_wants_coach() const;
  inline void clear_wants_coach();
  static const int kWantsCoachFieldNumber = 1;
  inline bool wants_coach() const;
  inline void set_wants_coach(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartyMemberSetCoach)
 private:
  inline void set_has_wants_coach();
  inline void clear_has_wants_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool wants_coach_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartyMemberSetCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetGroupLeader : public ::google::protobuf::Message {
 public:
  CMsgDOTASetGroupLeader();
  virtual ~CMsgDOTASetGroupLeader();

  CMsgDOTASetGroupLeader(const CMsgDOTASetGroupLeader& from);

  inline CMsgDOTASetGroupLeader& operator=(const CMsgDOTASetGroupLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetGroupLeader& default_instance();

  void Swap(CMsgDOTASetGroupLeader* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetGroupLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetGroupLeader& from);
  void MergeFrom(const CMsgDOTASetGroupLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 new_leader_steamid = 1;
  inline bool has_new_leader_steamid() const;
  inline void clear_new_leader_steamid();
  static const int kNewLeaderSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 new_leader_steamid() const;
  inline void set_new_leader_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetGroupLeader)
 private:
  inline void set_has_new_leader_steamid();
  inline void clear_has_new_leader_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 new_leader_steamid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetGroupLeader* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACancelGroupInvites : public ::google::protobuf::Message {
 public:
  CMsgDOTACancelGroupInvites();
  virtual ~CMsgDOTACancelGroupInvites();

  CMsgDOTACancelGroupInvites(const CMsgDOTACancelGroupInvites& from);

  inline CMsgDOTACancelGroupInvites& operator=(const CMsgDOTACancelGroupInvites& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACancelGroupInvites& default_instance();

  void Swap(CMsgDOTACancelGroupInvites* other);

  // implements Message ----------------------------------------------

  CMsgDOTACancelGroupInvites* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACancelGroupInvites& from);
  void MergeFrom(const CMsgDOTACancelGroupInvites& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 invited_steamids = 1;
  inline int invited_steamids_size() const;
  inline void clear_invited_steamids();
  static const int kInvitedSteamidsFieldNumber = 1;
  inline ::google::protobuf::uint64 invited_steamids(int index) const;
  inline void set_invited_steamids(int index, ::google::protobuf::uint64 value);
  inline void add_invited_steamids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      invited_steamids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_invited_steamids();

  // repeated fixed64 invited_groupids = 2;
  inline int invited_groupids_size() const;
  inline void clear_invited_groupids();
  static const int kInvitedGroupidsFieldNumber = 2;
  inline ::google::protobuf::uint64 invited_groupids(int index) const;
  inline void set_invited_groupids(int index, ::google::protobuf::uint64 value);
  inline void add_invited_groupids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      invited_groupids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_invited_groupids();

  // @@protoc_insertion_point(class_scope:CMsgDOTACancelGroupInvites)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > invited_steamids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > invited_groupids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACancelGroupInvites* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTASetGroupOpenStatus : public ::google::protobuf::Message {
 public:
  CMsgDOTASetGroupOpenStatus();
  virtual ~CMsgDOTASetGroupOpenStatus();

  CMsgDOTASetGroupOpenStatus(const CMsgDOTASetGroupOpenStatus& from);

  inline CMsgDOTASetGroupOpenStatus& operator=(const CMsgDOTASetGroupOpenStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetGroupOpenStatus& default_instance();

  void Swap(CMsgDOTASetGroupOpenStatus* other);

  // implements Message ----------------------------------------------

  CMsgDOTASetGroupOpenStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTASetGroupOpenStatus& from);
  void MergeFrom(const CMsgDOTASetGroupOpenStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool open = 1;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 1;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTASetGroupOpenStatus)
 private:
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool open_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTASetGroupOpenStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGroupMergeInvite : public ::google::protobuf::Message {
 public:
  CMsgDOTAGroupMergeInvite();
  virtual ~CMsgDOTAGroupMergeInvite();

  CMsgDOTAGroupMergeInvite(const CMsgDOTAGroupMergeInvite& from);

  inline CMsgDOTAGroupMergeInvite& operator=(const CMsgDOTAGroupMergeInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGroupMergeInvite& default_instance();

  void Swap(CMsgDOTAGroupMergeInvite* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGroupMergeInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGroupMergeInvite& from);
  void MergeFrom(const CMsgDOTAGroupMergeInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 other_group_id = 1;
  inline bool has_other_group_id() const;
  inline void clear_other_group_id();
  static const int kOtherGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 other_group_id() const;
  inline void set_other_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGroupMergeInvite)
 private:
  inline void set_has_other_group_id();
  inline void clear_has_other_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 other_group_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGroupMergeInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGroupMergeResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGroupMergeResponse();
  virtual ~CMsgDOTAGroupMergeResponse();

  CMsgDOTAGroupMergeResponse(const CMsgDOTAGroupMergeResponse& from);

  inline CMsgDOTAGroupMergeResponse& operator=(const CMsgDOTAGroupMergeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGroupMergeResponse& default_instance();

  void Swap(CMsgDOTAGroupMergeResponse* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGroupMergeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGroupMergeResponse& from);
  void MergeFrom(const CMsgDOTAGroupMergeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 initiator_group_id = 1;
  inline bool has_initiator_group_id() const;
  inline void clear_initiator_group_id();
  static const int kInitiatorGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 initiator_group_id() const;
  inline void set_initiator_group_id(::google::protobuf::uint64 value);

  // optional bool accept = 2;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 2;
  inline bool accept() const;
  inline void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGroupMergeResponse)
 private:
  inline void set_has_initiator_group_id();
  inline void clear_has_initiator_group_id();
  inline void set_has_accept();
  inline void clear_has_accept();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 initiator_group_id_;
  bool accept_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGroupMergeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGroupMergeReply : public ::google::protobuf::Message {
 public:
  CMsgDOTAGroupMergeReply();
  virtual ~CMsgDOTAGroupMergeReply();

  CMsgDOTAGroupMergeReply(const CMsgDOTAGroupMergeReply& from);

  inline CMsgDOTAGroupMergeReply& operator=(const CMsgDOTAGroupMergeReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGroupMergeReply& default_instance();

  void Swap(CMsgDOTAGroupMergeReply* other);

  // implements Message ----------------------------------------------

  CMsgDOTAGroupMergeReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGroupMergeReply& from);
  void MergeFrom(const CMsgDOTAGroupMergeReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EDOTAGroupMergeResult result = 1 [default = k_EDOTAGroupMergeResult_OK];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::EDOTAGroupMergeResult result() const;
  inline void set_result(::EDOTAGroupMergeResult value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGroupMergeReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGroupMergeReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence_Member : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartyRichPresence_Member();
  virtual ~CMsgDOTAPartyRichPresence_Member();

  CMsgDOTAPartyRichPresence_Member(const CMsgDOTAPartyRichPresence_Member& from);

  inline CMsgDOTAPartyRichPresence_Member& operator=(const CMsgDOTAPartyRichPresence_Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence_Member& default_instance();

  void Swap(CMsgDOTAPartyRichPresence_Member* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartyRichPresence_Member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartyRichPresence_Member& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence_Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional bool coach = 2;
  inline bool has_coach() const;
  inline void clear_coach();
  static const int kCoachFieldNumber = 2;
  inline bool coach() const;
  inline void set_coach(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartyRichPresence.Member)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_coach();
  inline void clear_has_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool coach_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartyRichPresence_Member* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence : public ::google::protobuf::Message {
 public:
  CMsgDOTAPartyRichPresence();
  virtual ~CMsgDOTAPartyRichPresence();

  CMsgDOTAPartyRichPresence(const CMsgDOTAPartyRichPresence& from);

  inline CMsgDOTAPartyRichPresence& operator=(const CMsgDOTAPartyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence& default_instance();

  void Swap(CMsgDOTAPartyRichPresence* other);

  // implements Message ----------------------------------------------

  CMsgDOTAPartyRichPresence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPartyRichPresence& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPartyRichPresence_Member Member;

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional .CSODOTAParty.State party_state = 2 [default = UI];
  inline bool has_party_state() const;
  inline void clear_party_state();
  static const int kPartyStateFieldNumber = 2;
  inline ::CSODOTAParty_State party_state() const;
  inline void set_party_state(::CSODOTAParty_State value);

  // optional bool open = 3;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);

  // optional bool low_priority = 5;
  inline bool has_low_priority() const;
  inline void clear_low_priority();
  static const int kLowPriorityFieldNumber = 5;
  inline bool low_priority() const;
  inline void set_low_priority(bool value);

  // repeated .CMsgDOTAPartyRichPresence.Member members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::CMsgDOTAPartyRichPresence_Member& members(int index) const;
  inline ::CMsgDOTAPartyRichPresence_Member* mutable_members(int index);
  inline ::CMsgDOTAPartyRichPresence_Member* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:CMsgDOTAPartyRichPresence)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_party_state();
  inline void clear_has_party_state();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_low_priority();
  inline void clear_has_low_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  int party_state_;
  bool open_;
  bool low_priority_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member > members_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPartyRichPresence* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyRichPresence : public ::google::protobuf::Message {
 public:
  CMsgDOTALobbyRichPresence();
  virtual ~CMsgDOTALobbyRichPresence();

  CMsgDOTALobbyRichPresence(const CMsgDOTALobbyRichPresence& from);

  inline CMsgDOTALobbyRichPresence& operator=(const CMsgDOTALobbyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALobbyRichPresence& default_instance();

  void Swap(CMsgDOTALobbyRichPresence* other);

  // implements Message ----------------------------------------------

  CMsgDOTALobbyRichPresence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALobbyRichPresence& from);
  void MergeFrom(const CMsgDOTALobbyRichPresence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional .CSODOTALobby.State lobby_state = 2 [default = UI];
  inline bool has_lobby_state() const;
  inline void clear_lobby_state();
  static const int kLobbyStateFieldNumber = 2;
  inline ::CSODOTALobby_State lobby_state() const;
  inline void set_lobby_state(::CSODOTALobby_State value);

  // optional bool password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline bool password() const;
  inline void set_password(bool value);

  // optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  inline ::DOTA_GameMode game_mode() const;
  inline void set_game_mode(::DOTA_GameMode value);

  // optional uint32 member_count = 5;
  inline bool has_member_count() const;
  inline void clear_member_count();
  static const int kMemberCountFieldNumber = 5;
  inline ::google::protobuf::uint32 member_count() const;
  inline void set_member_count(::google::protobuf::uint32 value);

  // optional uint32 max_member_count = 6;
  inline bool has_max_member_count() const;
  inline void clear_max_member_count();
  static const int kMaxMemberCountFieldNumber = 6;
  inline ::google::protobuf::uint32 max_member_count() const;
  inline void set_max_member_count(::google::protobuf::uint32 value);

  // optional fixed64 custom_game_id = 7;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 7;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // optional string name = 8;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 8;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CMsgDOTALobbyRichPresence)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_lobby_state();
  inline void clear_has_lobby_state();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_member_count();
  inline void clear_has_member_count();
  inline void set_has_max_member_count();
  inline void clear_has_max_member_count();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  int lobby_state_;
  bool password_;
  int game_mode_;
  ::google::protobuf::uint32 member_count_;
  ::google::protobuf::uint64 custom_game_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 max_member_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALobbyRichPresence* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameListenServerStartedLoading : public ::google::protobuf::Message {
 public:
  CMsgDOTACustomGameListenServerStartedLoading();
  virtual ~CMsgDOTACustomGameListenServerStartedLoading();

  CMsgDOTACustomGameListenServerStartedLoading(const CMsgDOTACustomGameListenServerStartedLoading& from);

  inline CMsgDOTACustomGameListenServerStartedLoading& operator=(const CMsgDOTACustomGameListenServerStartedLoading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACustomGameListenServerStartedLoading& default_instance();

  void Swap(CMsgDOTACustomGameListenServerStartedLoading* other);

  // implements Message ----------------------------------------------

  CMsgDOTACustomGameListenServerStartedLoading* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 custom_game_id = 2;
  inline bool has_custom_game_id() const;
  inline void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 2;
  inline ::google::protobuf::uint64 custom_game_id() const;
  inline void set_custom_game_id(::google::protobuf::uint64 value);

  // repeated uint32 lobby_members = 3;
  inline int lobby_members_size() const;
  inline void clear_lobby_members();
  static const int kLobbyMembersFieldNumber = 3;
  inline ::google::protobuf::uint32 lobby_members(int index) const;
  inline void set_lobby_members(int index, ::google::protobuf::uint32 value);
  inline void add_lobby_members(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lobby_members() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lobby_members();

  // optional uint32 start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTACustomGameListenServerStartedLoading)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lobby_members_;
  ::google::protobuf::uint32 start_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACustomGameListenServerStartedLoading* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameClientFinishedLoading : public ::google::protobuf::Message {
 public:
  CMsgDOTACustomGameClientFinishedLoading();
  virtual ~CMsgDOTACustomGameClientFinishedLoading();

  CMsgDOTACustomGameClientFinishedLoading(const CMsgDOTACustomGameClientFinishedLoading& from);

  inline CMsgDOTACustomGameClientFinishedLoading& operator=(const CMsgDOTACustomGameClientFinishedLoading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACustomGameClientFinishedLoading& default_instance();

  void Swap(CMsgDOTACustomGameClientFinishedLoading* other);

  // implements Message ----------------------------------------------

  CMsgDOTACustomGameClientFinishedLoading* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 loading_duration = 2;
  inline bool has_loading_duration() const;
  inline void clear_loading_duration();
  static const int kLoadingDurationFieldNumber = 2;
  inline ::google::protobuf::uint32 loading_duration() const;
  inline void set_loading_duration(::google::protobuf::uint32 value);

  // optional sint32 result_code = 3;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 3;
  inline ::google::protobuf::int32 result_code() const;
  inline void set_result_code(::google::protobuf::int32 value);

  // optional string result_string = 4;
  inline bool has_result_string() const;
  inline void clear_result_string();
  static const int kResultStringFieldNumber = 4;
  inline const ::std::string& result_string() const;
  inline void set_result_string(const ::std::string& value);
  inline void set_result_string(const char* value);
  inline void set_result_string(const char* value, size_t size);
  inline ::std::string* mutable_result_string();
  inline ::std::string* release_result_string();
  inline void set_allocated_result_string(::std::string* result_string);

  // optional uint32 signon_states = 5;
  inline bool has_signon_states() const;
  inline void clear_signon_states();
  static const int kSignonStatesFieldNumber = 5;
  inline ::google::protobuf::uint32 signon_states() const;
  inline void set_signon_states(::google::protobuf::uint32 value);

  // optional string comment = 6;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 6;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:CMsgDOTACustomGameClientFinishedLoading)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_loading_duration();
  inline void clear_has_loading_duration();
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_result_string();
  inline void clear_has_result_string();
  inline void set_has_signon_states();
  inline void clear_has_signon_states();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 loading_duration_;
  ::google::protobuf::int32 result_code_;
  ::std::string* result_string_;
  ::std::string* comment_;
  ::google::protobuf::uint32 signon_states_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACustomGameClientFinishedLoading* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeries : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeries();
  virtual ~CMsgClientToGCGetLeagueSeries();

  CMsgClientToGCGetLeagueSeries(const CMsgClientToGCGetLeagueSeries& from);

  inline CMsgClientToGCGetLeagueSeries& operator=(const CMsgClientToGCGetLeagueSeries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeries& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeries* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeries* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeries& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeries& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 league_id() const;
  inline void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeries)
 private:
  inline void set_has_league_id();
  inline void clear_has_league_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeries* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse_Series_Team : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeriesResponse_Series_Team();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse_Series_Team();

  CMsgClientToGCGetLeagueSeriesResponse_Series_Team(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);

  inline CMsgClientToGCGetLeagueSeriesResponse_Series_Team& operator=(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeriesResponse_Series_Team* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeriesResponse_Series_Team* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional string team_name = 2;
  inline bool has_team_name() const;
  inline void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  inline const ::std::string& team_name() const;
  inline void set_team_name(const ::std::string& value);
  inline void set_team_name(const char* value);
  inline void set_team_name(const char* value, size_t size);
  inline ::std::string* mutable_team_name();
  inline ::std::string* release_team_name();
  inline void set_allocated_team_name(::std::string* team_name);

  // optional string team_tag = 3;
  inline bool has_team_tag() const;
  inline void clear_team_tag();
  static const int kTeamTagFieldNumber = 3;
  inline const ::std::string& team_tag() const;
  inline void set_team_tag(const ::std::string& value);
  inline void set_team_tag(const char* value);
  inline void set_team_tag(const char* value, size_t size);
  inline ::std::string* mutable_team_tag();
  inline ::std::string* release_team_tag();
  inline void set_allocated_team_tag(::std::string* team_tag);

  // optional uint32 team_score = 4;
  inline bool has_team_score() const;
  inline void clear_team_score();
  static const int kTeamScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 team_score() const;
  inline void set_team_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeriesResponse.Series.Team)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_team_tag();
  inline void clear_has_team_tag();
  inline void set_has_team_score();
  inline void clear_has_team_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* team_name_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 team_score_;
  ::std::string* team_tag_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeriesResponse_Series_Team* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse_Series : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeriesResponse_Series();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse_Series();

  CMsgClientToGCGetLeagueSeriesResponse_Series(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);

  inline CMsgClientToGCGetLeagueSeriesResponse_Series& operator=(const CMsgClientToGCGetLeagueSeriesResponse_Series& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse_Series& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeriesResponse_Series* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeriesResponse_Series* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLeagueSeriesResponse_Series_Team Team;

  // accessors -------------------------------------------------------

  // optional uint32 series_id = 1;
  inline bool has_series_id() const;
  inline void clear_series_id();
  static const int kSeriesIdFieldNumber = 1;
  inline ::google::protobuf::uint32 series_id() const;
  inline void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 num_games = 2;
  inline bool has_num_games() const;
  inline void clear_num_games();
  static const int kNumGamesFieldNumber = 2;
  inline ::google::protobuf::uint32 num_games() const;
  inline void set_num_games(::google::protobuf::uint32 value);

  // repeated .CMsgClientToGCGetLeagueSeriesResponse.Series.Team teams = 3;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 3;
  inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team& teams(int index) const;
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* mutable_teams(int index);
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >*
      mutable_teams();

  // optional string series_name = 4;
  inline bool has_series_name() const;
  inline void clear_series_name();
  static const int kSeriesNameFieldNumber = 4;
  inline const ::std::string& series_name() const;
  inline void set_series_name(const ::std::string& value);
  inline void set_series_name(const char* value);
  inline void set_series_name(const char* value, size_t size);
  inline ::std::string* mutable_series_name();
  inline ::std::string* release_series_name();
  inline void set_allocated_series_name(::std::string* series_name);

  // optional string phase_name = 5;
  inline bool has_phase_name() const;
  inline void clear_phase_name();
  static const int kPhaseNameFieldNumber = 5;
  inline const ::std::string& phase_name() const;
  inline void set_phase_name(const ::std::string& value);
  inline void set_phase_name(const char* value);
  inline void set_phase_name(const char* value, size_t size);
  inline ::std::string* mutable_phase_name();
  inline ::std::string* release_phase_name();
  inline void set_allocated_phase_name(::std::string* phase_name);

  // optional uint32 start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 after_series_id = 7;
  inline bool has_after_series_id() const;
  inline void clear_after_series_id();
  static const int kAfterSeriesIdFieldNumber = 7;
  inline ::google::protobuf::uint32 after_series_id() const;
  inline void set_after_series_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeriesResponse.Series)
 private:
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_num_games();
  inline void clear_has_num_games();
  inline void set_has_series_name();
  inline void clear_has_series_name();
  inline void set_has_phase_name();
  inline void clear_has_phase_name();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_after_series_id();
  inline void clear_has_after_series_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 num_games_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team > teams_;
  ::std::string* series_name_;
  ::std::string* phase_name_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 after_series_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeriesResponse_Series* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCGetLeagueSeriesResponse();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse();

  CMsgClientToGCGetLeagueSeriesResponse(const CMsgClientToGCGetLeagueSeriesResponse& from);

  inline CMsgClientToGCGetLeagueSeriesResponse& operator=(const CMsgClientToGCGetLeagueSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse& default_instance();

  void Swap(CMsgClientToGCGetLeagueSeriesResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeagueSeriesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLeagueSeriesResponse_Series Series;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientToGCGetLeagueSeriesResponse.Series series = 1;
  inline int series_size() const;
  inline void clear_series();
  static const int kSeriesFieldNumber = 1;
  inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series& series(int index) const;
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* mutable_series(int index);
  inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* add_series();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >&
      series() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >*
      mutable_series();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeagueSeriesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series > series_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCGetLeagueSeriesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCApplyGemCombiner : public ::google::protobuf::Message {
 public:
  CMsgClientToGCApplyGemCombiner();
  virtual ~CMsgClientToGCApplyGemCombiner();

  CMsgClientToGCApplyGemCombiner(const CMsgClientToGCApplyGemCombiner& from);

  inline CMsgClientToGCApplyGemCombiner& operator=(const CMsgClientToGCApplyGemCombiner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCApplyGemCombiner& default_instance();

  void Swap(CMsgClientToGCApplyGemCombiner* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCApplyGemCombiner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCApplyGemCombiner& from);
  void MergeFrom(const CMsgClientToGCApplyGemCombiner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id_1 = 1;
  inline bool has_item_id_1() const;
  inline void clear_item_id_1();
  static const int kItemId1FieldNumber = 1;
  inline ::google::protobuf::uint64 item_id_1() const;
  inline void set_item_id_1(::google::protobuf::uint64 value);

  // optional uint64 item_id_2 = 2;
  inline bool has_item_id_2() const;
  inline void clear_item_id_2();
  static const int kItemId2FieldNumber = 2;
  inline ::google::protobuf::uint64 item_id_2() const;
  inline void set_item_id_2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCApplyGemCombiner)
 private:
  inline void set_has_item_id_1();
  inline void clear_has_item_id_1();
  inline void set_has_item_id_2();
  inline void clear_has_item_id_2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_1_;
  ::google::protobuf::uint64 item_id_2_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCApplyGemCombiner* default_instance_;
};
// -------------------------------------------------------------------

class CDummyUnbreakMessage : public ::google::protobuf::Message {
 public:
  CDummyUnbreakMessage();
  virtual ~CDummyUnbreakMessage();

  CDummyUnbreakMessage(const CDummyUnbreakMessage& from);

  inline CDummyUnbreakMessage& operator=(const CDummyUnbreakMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDummyUnbreakMessage& default_instance();

  void Swap(CDummyUnbreakMessage* other);

  // implements Message ----------------------------------------------

  CDummyUnbreakMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDummyUnbreakMessage& from);
  void MergeFrom(const CDummyUnbreakMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTAClearTournamentGame dummy_field = 1;
  inline bool has_dummy_field() const;
  inline void clear_dummy_field();
  static const int kDummyFieldFieldNumber = 1;
  inline const ::CMsgDOTAClearTournamentGame& dummy_field() const;
  inline ::CMsgDOTAClearTournamentGame* mutable_dummy_field();
  inline ::CMsgDOTAClearTournamentGame* release_dummy_field();
  inline void set_allocated_dummy_field(::CMsgDOTAClearTournamentGame* dummy_field);

  // optional .ETournamentState another_dummy_field = 2 [default = k_ETournamentState_Unknown];
  inline bool has_another_dummy_field() const;
  inline void clear_another_dummy_field();
  static const int kAnotherDummyFieldFieldNumber = 2;
  inline ::ETournamentState another_dummy_field() const;
  inline void set_another_dummy_field(::ETournamentState value);

  // @@protoc_insertion_point(class_scope:CDummyUnbreakMessage)
 private:
  inline void set_has_dummy_field();
  inline void clear_has_dummy_field();
  inline void set_has_another_dummy_field();
  inline void clear_has_another_dummy_field();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTAClearTournamentGame* dummy_field_;
  int another_dummy_field_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CDummyUnbreakMessage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipe_Item : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreateStaticRecipe_Item();
  virtual ~CMsgClientToGCCreateStaticRecipe_Item();

  CMsgClientToGCCreateStaticRecipe_Item(const CMsgClientToGCCreateStaticRecipe_Item& from);

  inline CMsgClientToGCCreateStaticRecipe_Item& operator=(const CMsgClientToGCCreateStaticRecipe_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreateStaticRecipe_Item& default_instance();

  void Swap(CMsgClientToGCCreateStaticRecipe_Item* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipe_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreateStaticRecipe_Item& from);
  void MergeFrom(const CMsgClientToGCCreateStaticRecipe_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint32 slot_id = 2;
  inline bool has_slot_id() const;
  inline void clear_slot_id();
  static const int kSlotIdFieldNumber = 2;
  inline ::google::protobuf::uint32 slot_id() const;
  inline void set_slot_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipe.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_slot_id();
  inline void clear_has_slot_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 slot_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreateStaticRecipe_Item* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipe : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreateStaticRecipe();
  virtual ~CMsgClientToGCCreateStaticRecipe();

  CMsgClientToGCCreateStaticRecipe(const CMsgClientToGCCreateStaticRecipe& from);

  inline CMsgClientToGCCreateStaticRecipe& operator=(const CMsgClientToGCCreateStaticRecipe& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreateStaticRecipe& default_instance();

  void Swap(CMsgClientToGCCreateStaticRecipe* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipe* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreateStaticRecipe& from);
  void MergeFrom(const CMsgClientToGCCreateStaticRecipe& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreateStaticRecipe_Item Item;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::CMsgClientToGCCreateStaticRecipe_Item& items(int index) const;
  inline ::CMsgClientToGCCreateStaticRecipe_Item* mutable_items(int index);
  inline ::CMsgClientToGCCreateStaticRecipe_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >*
      mutable_items();

  // optional uint32 recipe_def_index = 2;
  inline bool has_recipe_def_index() const;
  inline void clear_recipe_def_index();
  static const int kRecipeDefIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 recipe_def_index() const;
  inline void set_recipe_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipe)
 private:
  inline void set_has_recipe_def_index();
  inline void clear_has_recipe_def_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item > items_;
  ::google::protobuf::uint32 recipe_def_index_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreateStaticRecipe* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipeResponse : public ::google::protobuf::Message {
 public:
  CMsgClientToGCCreateStaticRecipeResponse();
  virtual ~CMsgClientToGCCreateStaticRecipeResponse();

  CMsgClientToGCCreateStaticRecipeResponse(const CMsgClientToGCCreateStaticRecipeResponse& from);

  inline CMsgClientToGCCreateStaticRecipeResponse& operator=(const CMsgClientToGCCreateStaticRecipeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreateStaticRecipeResponse& default_instance();

  void Swap(CMsgClientToGCCreateStaticRecipeResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse& from);
  void MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreateStaticRecipeResponse_EResponse EResponse;
  static const EResponse eResponse_Success = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_Success;
  static const EResponse eResponse_OfferingDisabled = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_OfferingDisabled;
  static const EResponse eResponse_InvalidItems = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InvalidItems;
  static const EResponse eResponse_InternalError = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InternalError;
  static const EResponse eResponse_MissingLeague = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingLeague;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value);
  }
  static const EResponse EResponse_MIN =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MIN;
  static const EResponse EResponse_MAX =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MAX;
  static const int EResponse_ARRAYSIZE =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor();
  }
  static inline const ::std::string& EResponse_Name(EResponse value) {
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_Name(value);
  }
  static inline bool EResponse_Parse(const ::std::string& name,
      EResponse* value) {
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline ::CMsgClientToGCCreateStaticRecipeResponse_EResponse response() const;
  inline void set_response(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value);

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipeResponse)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int response_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fclient_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientToGCCreateStaticRecipeResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgStartFindingMatch

// optional string key = 1;
inline bool CMsgStartFindingMatch::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStartFindingMatch::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStartFindingMatch::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStartFindingMatch::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& CMsgStartFindingMatch::key() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.key)
  return *key_;
}
inline void CMsgStartFindingMatch::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.key)
}
inline void CMsgStartFindingMatch::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgStartFindingMatch.key)
}
inline void CMsgStartFindingMatch::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgStartFindingMatch.key)
}
inline ::std::string* CMsgStartFindingMatch::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgStartFindingMatch.key)
  return key_;
}
inline ::std::string* CMsgStartFindingMatch::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgStartFindingMatch::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgStartFindingMatch.key)
}

// optional uint32 matchgroups = 2 [default = 4294967295];
inline bool CMsgStartFindingMatch::has_matchgroups() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgStartFindingMatch::set_has_matchgroups() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgStartFindingMatch::clear_has_matchgroups() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgStartFindingMatch::clear_matchgroups() {
  matchgroups_ = 4294967295u;
  clear_has_matchgroups();
}
inline ::google::protobuf::uint32 CMsgStartFindingMatch::matchgroups() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.matchgroups)
  return matchgroups_;
}
inline void CMsgStartFindingMatch::set_matchgroups(::google::protobuf::uint32 value) {
  set_has_matchgroups();
  matchgroups_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.matchgroups)
}

// optional uint32 client_version = 3;
inline bool CMsgStartFindingMatch::has_client_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgStartFindingMatch::set_has_client_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgStartFindingMatch::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgStartFindingMatch::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgStartFindingMatch::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.client_version)
  return client_version_;
}
inline void CMsgStartFindingMatch::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.client_version)
}

// optional uint32 game_modes = 4 [default = 4294967295];
inline bool CMsgStartFindingMatch::has_game_modes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgStartFindingMatch::set_has_game_modes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgStartFindingMatch::clear_has_game_modes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgStartFindingMatch::clear_game_modes() {
  game_modes_ = 4294967295u;
  clear_has_game_modes();
}
inline ::google::protobuf::uint32 CMsgStartFindingMatch::game_modes() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.game_modes)
  return game_modes_;
}
inline void CMsgStartFindingMatch::set_game_modes(::google::protobuf::uint32 value) {
  set_has_game_modes();
  game_modes_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.game_modes)
}

// optional .DOTABotDifficulty bot_difficulty = 5 [default = BOT_DIFFICULTY_HARD];
inline bool CMsgStartFindingMatch::has_bot_difficulty() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgStartFindingMatch::set_has_bot_difficulty() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgStartFindingMatch::clear_has_bot_difficulty() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgStartFindingMatch::clear_bot_difficulty() {
  bot_difficulty_ = 3;
  clear_has_bot_difficulty();
}
inline ::DOTABotDifficulty CMsgStartFindingMatch::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.bot_difficulty)
  return static_cast< ::DOTABotDifficulty >(bot_difficulty_);
}
inline void CMsgStartFindingMatch::set_bot_difficulty(::DOTABotDifficulty value) {
  assert(::DOTABotDifficulty_IsValid(value));
  set_has_bot_difficulty();
  bot_difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.bot_difficulty)
}

// optional .MatchType match_type = 6 [default = MATCH_TYPE_CASUAL];
inline bool CMsgStartFindingMatch::has_match_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgStartFindingMatch::set_has_match_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgStartFindingMatch::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgStartFindingMatch::clear_match_type() {
  match_type_ = 0;
  clear_has_match_type();
}
inline ::MatchType CMsgStartFindingMatch::match_type() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.match_type)
  return static_cast< ::MatchType >(match_type_);
}
inline void CMsgStartFindingMatch::set_match_type(::MatchType value) {
  assert(::MatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.match_type)
}

// optional uint32 matchlanguages = 7 [default = 4294967295];
inline bool CMsgStartFindingMatch::has_matchlanguages() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgStartFindingMatch::set_has_matchlanguages() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgStartFindingMatch::clear_has_matchlanguages() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgStartFindingMatch::clear_matchlanguages() {
  matchlanguages_ = 4294967295u;
  clear_has_matchlanguages();
}
inline ::google::protobuf::uint32 CMsgStartFindingMatch::matchlanguages() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.matchlanguages)
  return matchlanguages_;
}
inline void CMsgStartFindingMatch::set_matchlanguages(::google::protobuf::uint32 value) {
  set_has_matchlanguages();
  matchlanguages_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.matchlanguages)
}

// optional uint32 map_preference = 9;
inline bool CMsgStartFindingMatch::has_map_preference() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgStartFindingMatch::set_has_map_preference() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgStartFindingMatch::clear_has_map_preference() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgStartFindingMatch::clear_map_preference() {
  map_preference_ = 0u;
  clear_has_map_preference();
}
inline ::google::protobuf::uint32 CMsgStartFindingMatch::map_preference() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.map_preference)
  return map_preference_;
}
inline void CMsgStartFindingMatch::set_map_preference(::google::protobuf::uint32 value) {
  set_has_map_preference();
  map_preference_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.map_preference)
}

// optional uint32 team_id = 8;
inline bool CMsgStartFindingMatch::has_team_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgStartFindingMatch::set_has_team_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgStartFindingMatch::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgStartFindingMatch::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgStartFindingMatch::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.team_id)
  return team_id_;
}
inline void CMsgStartFindingMatch::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.team_id)
}

// optional .MatchLanguages game_language_enum = 10 [default = MATCH_LANGUAGE_INVALID];
inline bool CMsgStartFindingMatch::has_game_language_enum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgStartFindingMatch::set_has_game_language_enum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgStartFindingMatch::clear_has_game_language_enum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgStartFindingMatch::clear_game_language_enum() {
  game_language_enum_ = 0;
  clear_has_game_language_enum();
}
inline ::MatchLanguages CMsgStartFindingMatch::game_language_enum() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.game_language_enum)
  return static_cast< ::MatchLanguages >(game_language_enum_);
}
inline void CMsgStartFindingMatch::set_game_language_enum(::MatchLanguages value) {
  assert(::MatchLanguages_IsValid(value));
  set_has_game_language_enum();
  game_language_enum_ = value;
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.game_language_enum)
}

// optional string game_language_name = 11;
inline bool CMsgStartFindingMatch::has_game_language_name() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgStartFindingMatch::set_has_game_language_name() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgStartFindingMatch::clear_has_game_language_name() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgStartFindingMatch::clear_game_language_name() {
  if (game_language_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_language_name_->clear();
  }
  clear_has_game_language_name();
}
inline const ::std::string& CMsgStartFindingMatch::game_language_name() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatch.game_language_name)
  return *game_language_name_;
}
inline void CMsgStartFindingMatch::set_game_language_name(const ::std::string& value) {
  set_has_game_language_name();
  if (game_language_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_language_name_ = new ::std::string;
  }
  game_language_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatch.game_language_name)
}
inline void CMsgStartFindingMatch::set_game_language_name(const char* value) {
  set_has_game_language_name();
  if (game_language_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_language_name_ = new ::std::string;
  }
  game_language_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgStartFindingMatch.game_language_name)
}
inline void CMsgStartFindingMatch::set_game_language_name(const char* value, size_t size) {
  set_has_game_language_name();
  if (game_language_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_language_name_ = new ::std::string;
  }
  game_language_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgStartFindingMatch.game_language_name)
}
inline ::std::string* CMsgStartFindingMatch::mutable_game_language_name() {
  set_has_game_language_name();
  if (game_language_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_language_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgStartFindingMatch.game_language_name)
  return game_language_name_;
}
inline ::std::string* CMsgStartFindingMatch::release_game_language_name() {
  clear_has_game_language_name();
  if (game_language_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_language_name_;
    game_language_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgStartFindingMatch::set_allocated_game_language_name(::std::string* game_language_name) {
  if (game_language_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_language_name_;
  }
  if (game_language_name) {
    set_has_game_language_name();
    game_language_name_ = game_language_name;
  } else {
    clear_has_game_language_name();
    game_language_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgStartFindingMatch.game_language_name)
}

// -------------------------------------------------------------------

// CMsgStopFindingMatch

// -------------------------------------------------------------------

// CMsgReadyUp

// optional .DOTALobbyReadyState state = 1 [default = DOTALobbyReadyState_UNDECLARED];
inline bool CMsgReadyUp::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReadyUp::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReadyUp::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReadyUp::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::DOTALobbyReadyState CMsgReadyUp::state() const {
  // @@protoc_insertion_point(field_get:CMsgReadyUp.state)
  return static_cast< ::DOTALobbyReadyState >(state_);
}
inline void CMsgReadyUp::set_state(::DOTALobbyReadyState value) {
  assert(::DOTALobbyReadyState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CMsgReadyUp.state)
}

// optional fixed64 ready_up_key = 2;
inline bool CMsgReadyUp::has_ready_up_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgReadyUp::set_has_ready_up_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgReadyUp::clear_has_ready_up_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgReadyUp::clear_ready_up_key() {
  ready_up_key_ = GOOGLE_ULONGLONG(0);
  clear_has_ready_up_key();
}
inline ::google::protobuf::uint64 CMsgReadyUp::ready_up_key() const {
  // @@protoc_insertion_point(field_get:CMsgReadyUp.ready_up_key)
  return ready_up_key_;
}
inline void CMsgReadyUp::set_ready_up_key(::google::protobuf::uint64 value) {
  set_has_ready_up_key();
  ready_up_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgReadyUp.ready_up_key)
}

// optional .CDOTAClientHardwareSpecs hardware_specs = 3;
inline bool CMsgReadyUp::has_hardware_specs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgReadyUp::set_has_hardware_specs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgReadyUp::clear_has_hardware_specs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgReadyUp::clear_hardware_specs() {
  if (hardware_specs_ != NULL) hardware_specs_->::CDOTAClientHardwareSpecs::Clear();
  clear_has_hardware_specs();
}
inline const ::CDOTAClientHardwareSpecs& CMsgReadyUp::hardware_specs() const {
  // @@protoc_insertion_point(field_get:CMsgReadyUp.hardware_specs)
  return hardware_specs_ != NULL ? *hardware_specs_ : *default_instance_->hardware_specs_;
}
inline ::CDOTAClientHardwareSpecs* CMsgReadyUp::mutable_hardware_specs() {
  set_has_hardware_specs();
  if (hardware_specs_ == NULL) hardware_specs_ = new ::CDOTAClientHardwareSpecs;
  // @@protoc_insertion_point(field_mutable:CMsgReadyUp.hardware_specs)
  return hardware_specs_;
}
inline ::CDOTAClientHardwareSpecs* CMsgReadyUp::release_hardware_specs() {
  clear_has_hardware_specs();
  ::CDOTAClientHardwareSpecs* temp = hardware_specs_;
  hardware_specs_ = NULL;
  return temp;
}
inline void CMsgReadyUp::set_allocated_hardware_specs(::CDOTAClientHardwareSpecs* hardware_specs) {
  delete hardware_specs_;
  hardware_specs_ = hardware_specs;
  if (hardware_specs) {
    set_has_hardware_specs();
  } else {
    clear_has_hardware_specs();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgReadyUp.hardware_specs)
}

// -------------------------------------------------------------------

// CMsgReadyUpStatus

// optional fixed64 lobby_id = 1;
inline bool CMsgReadyUpStatus::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReadyUpStatus::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReadyUpStatus::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReadyUpStatus::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgReadyUpStatus::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgReadyUpStatus.lobby_id)
  return lobby_id_;
}
inline void CMsgReadyUpStatus::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgReadyUpStatus.lobby_id)
}

// repeated uint32 accepted_ids = 2;
inline int CMsgReadyUpStatus::accepted_ids_size() const {
  return accepted_ids_.size();
}
inline void CMsgReadyUpStatus::clear_accepted_ids() {
  accepted_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgReadyUpStatus::accepted_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgReadyUpStatus.accepted_ids)
  return accepted_ids_.Get(index);
}
inline void CMsgReadyUpStatus::set_accepted_ids(int index, ::google::protobuf::uint32 value) {
  accepted_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgReadyUpStatus.accepted_ids)
}
inline void CMsgReadyUpStatus::add_accepted_ids(::google::protobuf::uint32 value) {
  accepted_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgReadyUpStatus.accepted_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgReadyUpStatus::accepted_ids() const {
  // @@protoc_insertion_point(field_list:CMsgReadyUpStatus.accepted_ids)
  return accepted_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgReadyUpStatus::mutable_accepted_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgReadyUpStatus.accepted_ids)
  return &accepted_ids_;
}

// repeated uint32 declined_ids = 3;
inline int CMsgReadyUpStatus::declined_ids_size() const {
  return declined_ids_.size();
}
inline void CMsgReadyUpStatus::clear_declined_ids() {
  declined_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgReadyUpStatus::declined_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgReadyUpStatus.declined_ids)
  return declined_ids_.Get(index);
}
inline void CMsgReadyUpStatus::set_declined_ids(int index, ::google::protobuf::uint32 value) {
  declined_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgReadyUpStatus.declined_ids)
}
inline void CMsgReadyUpStatus::add_declined_ids(::google::protobuf::uint32 value) {
  declined_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgReadyUpStatus.declined_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgReadyUpStatus::declined_ids() const {
  // @@protoc_insertion_point(field_list:CMsgReadyUpStatus.declined_ids)
  return declined_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgReadyUpStatus::mutable_declined_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgReadyUpStatus.declined_ids)
  return &declined_ids_;
}

// -------------------------------------------------------------------

// CSourceTVGame_Player

// optional fixed64 steam_id = 1;
inline bool CSourceTVGame_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSourceTVGame_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSourceTVGame_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSourceTVGame_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CSourceTVGame_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.Player.steam_id)
  return steam_id_;
}
inline void CSourceTVGame_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.Player.steam_id)
}

// optional string name = 2;
inline bool CSourceTVGame_Player::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSourceTVGame_Player::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSourceTVGame_Player::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSourceTVGame_Player::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSourceTVGame_Player::name() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.Player.name)
  return *name_;
}
inline void CSourceTVGame_Player::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CSourceTVGame.Player.name)
}
inline void CSourceTVGame_Player::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSourceTVGame.Player.name)
}
inline void CSourceTVGame_Player::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSourceTVGame.Player.name)
}
inline ::std::string* CSourceTVGame_Player::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSourceTVGame.Player.name)
  return name_;
}
inline ::std::string* CSourceTVGame_Player::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSourceTVGame_Player::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSourceTVGame.Player.name)
}

// optional uint32 hero_id = 3;
inline bool CSourceTVGame_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSourceTVGame_Player::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSourceTVGame_Player::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSourceTVGame_Player::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CSourceTVGame_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.Player.hero_id)
  return hero_id_;
}
inline void CSourceTVGame_Player::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.Player.hero_id)
}

// -------------------------------------------------------------------

// CSourceTVGame

// optional uint32 source_tv_public_addr = 1;
inline bool CSourceTVGame::has_source_tv_public_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSourceTVGame::set_has_source_tv_public_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSourceTVGame::clear_has_source_tv_public_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSourceTVGame::clear_source_tv_public_addr() {
  source_tv_public_addr_ = 0u;
  clear_has_source_tv_public_addr();
}
inline ::google::protobuf::uint32 CSourceTVGame::source_tv_public_addr() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.source_tv_public_addr)
  return source_tv_public_addr_;
}
inline void CSourceTVGame::set_source_tv_public_addr(::google::protobuf::uint32 value) {
  set_has_source_tv_public_addr();
  source_tv_public_addr_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.source_tv_public_addr)
}

// optional uint32 source_tv_private_addr = 2;
inline bool CSourceTVGame::has_source_tv_private_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSourceTVGame::set_has_source_tv_private_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSourceTVGame::clear_has_source_tv_private_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSourceTVGame::clear_source_tv_private_addr() {
  source_tv_private_addr_ = 0u;
  clear_has_source_tv_private_addr();
}
inline ::google::protobuf::uint32 CSourceTVGame::source_tv_private_addr() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.source_tv_private_addr)
  return source_tv_private_addr_;
}
inline void CSourceTVGame::set_source_tv_private_addr(::google::protobuf::uint32 value) {
  set_has_source_tv_private_addr();
  source_tv_private_addr_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.source_tv_private_addr)
}

// optional uint32 source_tv_port = 3;
inline bool CSourceTVGame::has_source_tv_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSourceTVGame::set_has_source_tv_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSourceTVGame::clear_has_source_tv_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSourceTVGame::clear_source_tv_port() {
  source_tv_port_ = 0u;
  clear_has_source_tv_port();
}
inline ::google::protobuf::uint32 CSourceTVGame::source_tv_port() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.source_tv_port)
  return source_tv_port_;
}
inline void CSourceTVGame::set_source_tv_port(::google::protobuf::uint32 value) {
  set_has_source_tv_port();
  source_tv_port_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.source_tv_port)
}

// repeated .CSourceTVGame.Player good_players = 14;
inline int CSourceTVGame::good_players_size() const {
  return good_players_.size();
}
inline void CSourceTVGame::clear_good_players() {
  good_players_.Clear();
}
inline const ::CSourceTVGame_Player& CSourceTVGame::good_players(int index) const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.good_players)
  return good_players_.Get(index);
}
inline ::CSourceTVGame_Player* CSourceTVGame::mutable_good_players(int index) {
  // @@protoc_insertion_point(field_mutable:CSourceTVGame.good_players)
  return good_players_.Mutable(index);
}
inline ::CSourceTVGame_Player* CSourceTVGame::add_good_players() {
  // @@protoc_insertion_point(field_add:CSourceTVGame.good_players)
  return good_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >&
CSourceTVGame::good_players() const {
  // @@protoc_insertion_point(field_list:CSourceTVGame.good_players)
  return good_players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >*
CSourceTVGame::mutable_good_players() {
  // @@protoc_insertion_point(field_mutable_list:CSourceTVGame.good_players)
  return &good_players_;
}

// repeated .CSourceTVGame.Player bad_players = 15;
inline int CSourceTVGame::bad_players_size() const {
  return bad_players_.size();
}
inline void CSourceTVGame::clear_bad_players() {
  bad_players_.Clear();
}
inline const ::CSourceTVGame_Player& CSourceTVGame::bad_players(int index) const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.bad_players)
  return bad_players_.Get(index);
}
inline ::CSourceTVGame_Player* CSourceTVGame::mutable_bad_players(int index) {
  // @@protoc_insertion_point(field_mutable:CSourceTVGame.bad_players)
  return bad_players_.Mutable(index);
}
inline ::CSourceTVGame_Player* CSourceTVGame::add_bad_players() {
  // @@protoc_insertion_point(field_add:CSourceTVGame.bad_players)
  return bad_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >&
CSourceTVGame::bad_players() const {
  // @@protoc_insertion_point(field_list:CSourceTVGame.bad_players)
  return bad_players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >*
CSourceTVGame::mutable_bad_players() {
  // @@protoc_insertion_point(field_mutable_list:CSourceTVGame.bad_players)
  return &bad_players_;
}

// repeated .CSourceTVGame.Player other_players = 16;
inline int CSourceTVGame::other_players_size() const {
  return other_players_.size();
}
inline void CSourceTVGame::clear_other_players() {
  other_players_.Clear();
}
inline const ::CSourceTVGame_Player& CSourceTVGame::other_players(int index) const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.other_players)
  return other_players_.Get(index);
}
inline ::CSourceTVGame_Player* CSourceTVGame::mutable_other_players(int index) {
  // @@protoc_insertion_point(field_mutable:CSourceTVGame.other_players)
  return other_players_.Mutable(index);
}
inline ::CSourceTVGame_Player* CSourceTVGame::add_other_players() {
  // @@protoc_insertion_point(field_add:CSourceTVGame.other_players)
  return other_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >&
CSourceTVGame::other_players() const {
  // @@protoc_insertion_point(field_list:CSourceTVGame.other_players)
  return other_players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame_Player >*
CSourceTVGame::mutable_other_players() {
  // @@protoc_insertion_point(field_mutable_list:CSourceTVGame.other_players)
  return &other_players_;
}

// optional string game_name = 7;
inline bool CSourceTVGame::has_game_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSourceTVGame::set_has_game_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSourceTVGame::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSourceTVGame::clear_game_name() {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_->clear();
  }
  clear_has_game_name();
}
inline const ::std::string& CSourceTVGame::game_name() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.game_name)
  return *game_name_;
}
inline void CSourceTVGame::set_game_name(const ::std::string& value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSourceTVGame.game_name)
}
inline void CSourceTVGame::set_game_name(const char* value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSourceTVGame.game_name)
}
inline void CSourceTVGame::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSourceTVGame.game_name)
}
inline ::std::string* CSourceTVGame::mutable_game_name() {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSourceTVGame.game_name)
  return game_name_;
}
inline ::std::string* CSourceTVGame::release_game_name() {
  clear_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_name_;
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSourceTVGame::set_allocated_game_name(::std::string* game_name) {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_name_;
  }
  if (game_name) {
    set_has_game_name();
    game_name_ = game_name;
  } else {
    clear_has_game_name();
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSourceTVGame.game_name)
}

// repeated .CLobbyTeamDetails team_details = 9;
inline int CSourceTVGame::team_details_size() const {
  return team_details_.size();
}
inline void CSourceTVGame::clear_team_details() {
  team_details_.Clear();
}
inline const ::CLobbyTeamDetails& CSourceTVGame::team_details(int index) const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.team_details)
  return team_details_.Get(index);
}
inline ::CLobbyTeamDetails* CSourceTVGame::mutable_team_details(int index) {
  // @@protoc_insertion_point(field_mutable:CSourceTVGame.team_details)
  return team_details_.Mutable(index);
}
inline ::CLobbyTeamDetails* CSourceTVGame::add_team_details() {
  // @@protoc_insertion_point(field_add:CSourceTVGame.team_details)
  return team_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >&
CSourceTVGame::team_details() const {
  // @@protoc_insertion_point(field_list:CSourceTVGame.team_details)
  return team_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >*
CSourceTVGame::mutable_team_details() {
  // @@protoc_insertion_point(field_mutable_list:CSourceTVGame.team_details)
  return &team_details_;
}

// optional uint32 num_spectators = 10;
inline bool CSourceTVGame::has_num_spectators() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSourceTVGame::set_has_num_spectators() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSourceTVGame::clear_has_num_spectators() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSourceTVGame::clear_num_spectators() {
  num_spectators_ = 0u;
  clear_has_num_spectators();
}
inline ::google::protobuf::uint32 CSourceTVGame::num_spectators() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.num_spectators)
  return num_spectators_;
}
inline void CSourceTVGame::set_num_spectators(::google::protobuf::uint32 value) {
  set_has_num_spectators();
  num_spectators_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.num_spectators)
}

// optional uint32 tournament_id = 11;
inline bool CSourceTVGame::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSourceTVGame::set_has_tournament_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSourceTVGame::clear_has_tournament_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSourceTVGame::clear_tournament_id() {
  tournament_id_ = 0u;
  clear_has_tournament_id();
}
inline ::google::protobuf::uint32 CSourceTVGame::tournament_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.tournament_id)
  return tournament_id_;
}
inline void CSourceTVGame::set_tournament_id(::google::protobuf::uint32 value) {
  set_has_tournament_id();
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.tournament_id)
}

// optional uint32 tournament_game_id = 12;
inline bool CSourceTVGame::has_tournament_game_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSourceTVGame::set_has_tournament_game_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSourceTVGame::clear_has_tournament_game_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSourceTVGame::clear_tournament_game_id() {
  tournament_game_id_ = 0u;
  clear_has_tournament_game_id();
}
inline ::google::protobuf::uint32 CSourceTVGame::tournament_game_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.tournament_game_id)
  return tournament_game_id_;
}
inline void CSourceTVGame::set_tournament_game_id(::google::protobuf::uint32 value) {
  set_has_tournament_game_id();
  tournament_game_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.tournament_game_id)
}

// optional uint32 tower_state = 13;
inline bool CSourceTVGame::has_tower_state() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSourceTVGame::set_has_tower_state() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSourceTVGame::clear_has_tower_state() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSourceTVGame::clear_tower_state() {
  tower_state_ = 0u;
  clear_has_tower_state();
}
inline ::google::protobuf::uint32 CSourceTVGame::tower_state() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.tower_state)
  return tower_state_;
}
inline void CSourceTVGame::set_tower_state(::google::protobuf::uint32 value) {
  set_has_tower_state();
  tower_state_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.tower_state)
}

// optional float tv_broadcast_time = 17;
inline bool CSourceTVGame::has_tv_broadcast_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSourceTVGame::set_has_tv_broadcast_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSourceTVGame::clear_has_tv_broadcast_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSourceTVGame::clear_tv_broadcast_time() {
  tv_broadcast_time_ = 0;
  clear_has_tv_broadcast_time();
}
inline float CSourceTVGame::tv_broadcast_time() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.tv_broadcast_time)
  return tv_broadcast_time_;
}
inline void CSourceTVGame::set_tv_broadcast_time(float value) {
  set_has_tv_broadcast_time();
  tv_broadcast_time_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.tv_broadcast_time)
}

// optional float game_time = 18;
inline bool CSourceTVGame::has_game_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSourceTVGame::set_has_game_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSourceTVGame::clear_has_game_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSourceTVGame::clear_game_time() {
  game_time_ = 0;
  clear_has_game_time();
}
inline float CSourceTVGame::game_time() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.game_time)
  return game_time_;
}
inline void CSourceTVGame::set_game_time(float value) {
  set_has_game_time();
  game_time_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.game_time)
}

// optional fixed64 server_steamid = 19;
inline bool CSourceTVGame::has_server_steamid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSourceTVGame::set_has_server_steamid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSourceTVGame::clear_has_server_steamid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSourceTVGame::clear_server_steamid() {
  server_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steamid();
}
inline ::google::protobuf::uint64 CSourceTVGame::server_steamid() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.server_steamid)
  return server_steamid_;
}
inline void CSourceTVGame::set_server_steamid(::google::protobuf::uint64 value) {
  set_has_server_steamid();
  server_steamid_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.server_steamid)
}

// optional uint32 leagueid = 20;
inline bool CSourceTVGame::has_leagueid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSourceTVGame::set_has_leagueid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSourceTVGame::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSourceTVGame::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CSourceTVGame::leagueid() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.leagueid)
  return leagueid_;
}
inline void CSourceTVGame::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.leagueid)
}

// optional .DOTA_GameMode game_mode = 21 [default = DOTA_GAMEMODE_NONE];
inline bool CSourceTVGame::has_game_mode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSourceTVGame::set_has_game_mode() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSourceTVGame::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSourceTVGame::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CSourceTVGame::game_mode() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CSourceTVGame::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.game_mode)
}

// optional uint32 lobby_type = 22;
inline bool CSourceTVGame::has_lobby_type() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSourceTVGame::set_has_lobby_type() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSourceTVGame::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSourceTVGame::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CSourceTVGame::lobby_type() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.lobby_type)
  return lobby_type_;
}
inline void CSourceTVGame::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.lobby_type)
}

// optional uint64 custom_game_id = 24;
inline bool CSourceTVGame::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSourceTVGame::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSourceTVGame::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSourceTVGame::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CSourceTVGame::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.custom_game_id)
  return custom_game_id_;
}
inline void CSourceTVGame::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.custom_game_id)
}

// optional uint32 average_rank = 25;
inline bool CSourceTVGame::has_average_rank() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSourceTVGame::set_has_average_rank() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSourceTVGame::clear_has_average_rank() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSourceTVGame::clear_average_rank() {
  average_rank_ = 0u;
  clear_has_average_rank();
}
inline ::google::protobuf::uint32 CSourceTVGame::average_rank() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.average_rank)
  return average_rank_;
}
inline void CSourceTVGame::set_average_rank(::google::protobuf::uint32 value) {
  set_has_average_rank();
  average_rank_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.average_rank)
}

// optional uint32 radiant_kills = 26;
inline bool CSourceTVGame::has_radiant_kills() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSourceTVGame::set_has_radiant_kills() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSourceTVGame::clear_has_radiant_kills() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSourceTVGame::clear_radiant_kills() {
  radiant_kills_ = 0u;
  clear_has_radiant_kills();
}
inline ::google::protobuf::uint32 CSourceTVGame::radiant_kills() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.radiant_kills)
  return radiant_kills_;
}
inline void CSourceTVGame::set_radiant_kills(::google::protobuf::uint32 value) {
  set_has_radiant_kills();
  radiant_kills_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.radiant_kills)
}

// optional uint32 dire_kills = 27;
inline bool CSourceTVGame::has_dire_kills() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CSourceTVGame::set_has_dire_kills() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CSourceTVGame::clear_has_dire_kills() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CSourceTVGame::clear_dire_kills() {
  dire_kills_ = 0u;
  clear_has_dire_kills();
}
inline ::google::protobuf::uint32 CSourceTVGame::dire_kills() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.dire_kills)
  return dire_kills_;
}
inline void CSourceTVGame::set_dire_kills(::google::protobuf::uint32 value) {
  set_has_dire_kills();
  dire_kills_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.dire_kills)
}

// optional uint32 barracks_state = 28;
inline bool CSourceTVGame::has_barracks_state() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CSourceTVGame::set_has_barracks_state() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CSourceTVGame::clear_has_barracks_state() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CSourceTVGame::clear_barracks_state() {
  barracks_state_ = 0u;
  clear_has_barracks_state();
}
inline ::google::protobuf::uint32 CSourceTVGame::barracks_state() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.barracks_state)
  return barracks_state_;
}
inline void CSourceTVGame::set_barracks_state(::google::protobuf::uint32 value) {
  set_has_barracks_state();
  barracks_state_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.barracks_state)
}

// optional uint64 group_id = 29;
inline bool CSourceTVGame::has_group_id() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CSourceTVGame::set_has_group_id() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CSourceTVGame::clear_has_group_id() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CSourceTVGame::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CSourceTVGame::group_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.group_id)
  return group_id_;
}
inline void CSourceTVGame::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.group_id)
}

// optional uint32 engine = 31;
inline bool CSourceTVGame::has_engine() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CSourceTVGame::set_has_engine() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CSourceTVGame::clear_has_engine() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CSourceTVGame::clear_engine() {
  engine_ = 0u;
  clear_has_engine();
}
inline ::google::protobuf::uint32 CSourceTVGame::engine() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.engine)
  return engine_;
}
inline void CSourceTVGame::set_engine(::google::protobuf::uint32 value) {
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.engine)
}

// optional uint32 broadcast_delay = 32;
inline bool CSourceTVGame::has_broadcast_delay() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CSourceTVGame::set_has_broadcast_delay() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CSourceTVGame::clear_has_broadcast_delay() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CSourceTVGame::clear_broadcast_delay() {
  broadcast_delay_ = 0u;
  clear_has_broadcast_delay();
}
inline ::google::protobuf::uint32 CSourceTVGame::broadcast_delay() const {
  // @@protoc_insertion_point(field_get:CSourceTVGame.broadcast_delay)
  return broadcast_delay_;
}
inline void CSourceTVGame::set_broadcast_delay(::google::protobuf::uint32 value) {
  set_has_broadcast_delay();
  broadcast_delay_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGame.broadcast_delay)
}

// -------------------------------------------------------------------

// CSourceTVGameSmall

// optional uint32 activate_time = 1;
inline bool CSourceTVGameSmall::has_activate_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSourceTVGameSmall::set_has_activate_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSourceTVGameSmall::clear_has_activate_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSourceTVGameSmall::clear_activate_time() {
  activate_time_ = 0u;
  clear_has_activate_time();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::activate_time() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.activate_time)
  return activate_time_;
}
inline void CSourceTVGameSmall::set_activate_time(::google::protobuf::uint32 value) {
  set_has_activate_time();
  activate_time_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.activate_time)
}

// optional uint32 deactivate_time = 2;
inline bool CSourceTVGameSmall::has_deactivate_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSourceTVGameSmall::set_has_deactivate_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSourceTVGameSmall::clear_has_deactivate_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSourceTVGameSmall::clear_deactivate_time() {
  deactivate_time_ = 0u;
  clear_has_deactivate_time();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::deactivate_time() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.deactivate_time)
  return deactivate_time_;
}
inline void CSourceTVGameSmall::set_deactivate_time(::google::protobuf::uint32 value) {
  set_has_deactivate_time();
  deactivate_time_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.deactivate_time)
}

// optional uint64 server_steam_id = 3;
inline bool CSourceTVGameSmall::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSourceTVGameSmall::set_has_server_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSourceTVGameSmall::clear_has_server_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSourceTVGameSmall::clear_server_steam_id() {
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steam_id();
}
inline ::google::protobuf::uint64 CSourceTVGameSmall::server_steam_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.server_steam_id)
  return server_steam_id_;
}
inline void CSourceTVGameSmall::set_server_steam_id(::google::protobuf::uint64 value) {
  set_has_server_steam_id();
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.server_steam_id)
}

// optional uint64 lobby_id = 4;
inline bool CSourceTVGameSmall::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSourceTVGameSmall::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSourceTVGameSmall::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSourceTVGameSmall::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CSourceTVGameSmall::lobby_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.lobby_id)
  return lobby_id_;
}
inline void CSourceTVGameSmall::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.lobby_id)
}

// optional uint32 league_id = 5;
inline bool CSourceTVGameSmall::has_league_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSourceTVGameSmall::set_has_league_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSourceTVGameSmall::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSourceTVGameSmall::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::league_id() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.league_id)
  return league_id_;
}
inline void CSourceTVGameSmall::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.league_id)
}

// optional uint32 lobby_type = 6;
inline bool CSourceTVGameSmall::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSourceTVGameSmall::set_has_lobby_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSourceTVGameSmall::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSourceTVGameSmall::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::lobby_type() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.lobby_type)
  return lobby_type_;
}
inline void CSourceTVGameSmall::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.lobby_type)
}

// optional int32 game_time = 7;
inline bool CSourceTVGameSmall::has_game_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSourceTVGameSmall::set_has_game_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSourceTVGameSmall::clear_has_game_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSourceTVGameSmall::clear_game_time() {
  game_time_ = 0;
  clear_has_game_time();
}
inline ::google::protobuf::int32 CSourceTVGameSmall::game_time() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.game_time)
  return game_time_;
}
inline void CSourceTVGameSmall::set_game_time(::google::protobuf::int32 value) {
  set_has_game_time();
  game_time_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.game_time)
}

// optional uint32 delay = 8;
inline bool CSourceTVGameSmall::has_delay() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSourceTVGameSmall::set_has_delay() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSourceTVGameSmall::clear_has_delay() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSourceTVGameSmall::clear_delay() {
  delay_ = 0u;
  clear_has_delay();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::delay() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.delay)
  return delay_;
}
inline void CSourceTVGameSmall::set_delay(::google::protobuf::uint32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.delay)
}

// optional uint32 spectators = 9;
inline bool CSourceTVGameSmall::has_spectators() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSourceTVGameSmall::set_has_spectators() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSourceTVGameSmall::clear_has_spectators() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSourceTVGameSmall::clear_spectators() {
  spectators_ = 0u;
  clear_has_spectators();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::spectators() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.spectators)
  return spectators_;
}
inline void CSourceTVGameSmall::set_spectators(::google::protobuf::uint32 value) {
  set_has_spectators();
  spectators_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.spectators)
}

// optional uint32 game_mode = 10;
inline bool CSourceTVGameSmall::has_game_mode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSourceTVGameSmall::set_has_game_mode() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSourceTVGameSmall::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSourceTVGameSmall::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::game_mode() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.game_mode)
  return game_mode_;
}
inline void CSourceTVGameSmall::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.game_mode)
}

// optional uint32 average_mmr = 11;
inline bool CSourceTVGameSmall::has_average_mmr() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSourceTVGameSmall::set_has_average_mmr() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSourceTVGameSmall::clear_has_average_mmr() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSourceTVGameSmall::clear_average_mmr() {
  average_mmr_ = 0u;
  clear_has_average_mmr();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::average_mmr() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.average_mmr)
  return average_mmr_;
}
inline void CSourceTVGameSmall::set_average_mmr(::google::protobuf::uint32 value) {
  set_has_average_mmr();
  average_mmr_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.average_mmr)
}

// optional uint32 engine = 12;
inline bool CSourceTVGameSmall::has_engine() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSourceTVGameSmall::set_has_engine() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSourceTVGameSmall::clear_has_engine() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSourceTVGameSmall::clear_engine() {
  engine_ = 0u;
  clear_has_engine();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::engine() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.engine)
  return engine_;
}
inline void CSourceTVGameSmall::set_engine(::google::protobuf::uint32 value) {
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.engine)
}

// repeated uint32 hero_ids = 13;
inline int CSourceTVGameSmall::hero_ids_size() const {
  return hero_ids_.size();
}
inline void CSourceTVGameSmall::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.hero_ids)
  return hero_ids_.Get(index);
}
inline void CSourceTVGameSmall::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.hero_ids)
}
inline void CSourceTVGameSmall::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CSourceTVGameSmall.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSourceTVGameSmall::hero_ids() const {
  // @@protoc_insertion_point(field_list:CSourceTVGameSmall.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSourceTVGameSmall::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:CSourceTVGameSmall.hero_ids)
  return &hero_ids_;
}

// repeated fixed64 steam_ids = 14;
inline int CSourceTVGameSmall::steam_ids_size() const {
  return steam_ids_.size();
}
inline void CSourceTVGameSmall::clear_steam_ids() {
  steam_ids_.Clear();
}
inline ::google::protobuf::uint64 CSourceTVGameSmall::steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.steam_ids)
  return steam_ids_.Get(index);
}
inline void CSourceTVGameSmall::set_steam_ids(int index, ::google::protobuf::uint64 value) {
  steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.steam_ids)
}
inline void CSourceTVGameSmall::add_steam_ids(::google::protobuf::uint64 value) {
  steam_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CSourceTVGameSmall.steam_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSourceTVGameSmall::steam_ids() const {
  // @@protoc_insertion_point(field_list:CSourceTVGameSmall.steam_ids)
  return steam_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSourceTVGameSmall::mutable_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:CSourceTVGameSmall.steam_ids)
  return &steam_ids_;
}

// optional string team_name_radiant = 15;
inline bool CSourceTVGameSmall::has_team_name_radiant() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSourceTVGameSmall::set_has_team_name_radiant() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSourceTVGameSmall::clear_has_team_name_radiant() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSourceTVGameSmall::clear_team_name_radiant() {
  if (team_name_radiant_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_radiant_->clear();
  }
  clear_has_team_name_radiant();
}
inline const ::std::string& CSourceTVGameSmall::team_name_radiant() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.team_name_radiant)
  return *team_name_radiant_;
}
inline void CSourceTVGameSmall::set_team_name_radiant(const ::std::string& value) {
  set_has_team_name_radiant();
  if (team_name_radiant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_radiant_ = new ::std::string;
  }
  team_name_radiant_->assign(value);
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.team_name_radiant)
}
inline void CSourceTVGameSmall::set_team_name_radiant(const char* value) {
  set_has_team_name_radiant();
  if (team_name_radiant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_radiant_ = new ::std::string;
  }
  team_name_radiant_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSourceTVGameSmall.team_name_radiant)
}
inline void CSourceTVGameSmall::set_team_name_radiant(const char* value, size_t size) {
  set_has_team_name_radiant();
  if (team_name_radiant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_radiant_ = new ::std::string;
  }
  team_name_radiant_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSourceTVGameSmall.team_name_radiant)
}
inline ::std::string* CSourceTVGameSmall::mutable_team_name_radiant() {
  set_has_team_name_radiant();
  if (team_name_radiant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_radiant_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSourceTVGameSmall.team_name_radiant)
  return team_name_radiant_;
}
inline ::std::string* CSourceTVGameSmall::release_team_name_radiant() {
  clear_has_team_name_radiant();
  if (team_name_radiant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_radiant_;
    team_name_radiant_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSourceTVGameSmall::set_allocated_team_name_radiant(::std::string* team_name_radiant) {
  if (team_name_radiant_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_radiant_;
  }
  if (team_name_radiant) {
    set_has_team_name_radiant();
    team_name_radiant_ = team_name_radiant;
  } else {
    clear_has_team_name_radiant();
    team_name_radiant_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSourceTVGameSmall.team_name_radiant)
}

// optional string team_name_dire = 16;
inline bool CSourceTVGameSmall::has_team_name_dire() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSourceTVGameSmall::set_has_team_name_dire() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSourceTVGameSmall::clear_has_team_name_dire() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSourceTVGameSmall::clear_team_name_dire() {
  if (team_name_dire_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_dire_->clear();
  }
  clear_has_team_name_dire();
}
inline const ::std::string& CSourceTVGameSmall::team_name_dire() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.team_name_dire)
  return *team_name_dire_;
}
inline void CSourceTVGameSmall::set_team_name_dire(const ::std::string& value) {
  set_has_team_name_dire();
  if (team_name_dire_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_dire_ = new ::std::string;
  }
  team_name_dire_->assign(value);
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.team_name_dire)
}
inline void CSourceTVGameSmall::set_team_name_dire(const char* value) {
  set_has_team_name_dire();
  if (team_name_dire_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_dire_ = new ::std::string;
  }
  team_name_dire_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSourceTVGameSmall.team_name_dire)
}
inline void CSourceTVGameSmall::set_team_name_dire(const char* value, size_t size) {
  set_has_team_name_dire();
  if (team_name_dire_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_dire_ = new ::std::string;
  }
  team_name_dire_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSourceTVGameSmall.team_name_dire)
}
inline ::std::string* CSourceTVGameSmall::mutable_team_name_dire() {
  set_has_team_name_dire();
  if (team_name_dire_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_dire_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSourceTVGameSmall.team_name_dire)
  return team_name_dire_;
}
inline ::std::string* CSourceTVGameSmall::release_team_name_dire() {
  clear_has_team_name_dire();
  if (team_name_dire_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_dire_;
    team_name_dire_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSourceTVGameSmall::set_allocated_team_name_dire(::std::string* team_name_dire) {
  if (team_name_dire_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_dire_;
  }
  if (team_name_dire) {
    set_has_team_name_dire();
    team_name_dire_ = team_name_dire;
  } else {
    clear_has_team_name_dire();
    team_name_dire_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSourceTVGameSmall.team_name_dire)
}

// optional uint32 sort_score = 17;
inline bool CSourceTVGameSmall::has_sort_score() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSourceTVGameSmall::set_has_sort_score() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSourceTVGameSmall::clear_has_sort_score() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSourceTVGameSmall::clear_sort_score() {
  sort_score_ = 0u;
  clear_has_sort_score();
}
inline ::google::protobuf::uint32 CSourceTVGameSmall::sort_score() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.sort_score)
  return sort_score_;
}
inline void CSourceTVGameSmall::set_sort_score(::google::protobuf::uint32 value) {
  set_has_sort_score();
  sort_score_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.sort_score)
}

// optional float last_update_time = 18;
inline bool CSourceTVGameSmall::has_last_update_time() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSourceTVGameSmall::set_has_last_update_time() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSourceTVGameSmall::clear_has_last_update_time() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSourceTVGameSmall::clear_last_update_time() {
  last_update_time_ = 0;
  clear_has_last_update_time();
}
inline float CSourceTVGameSmall::last_update_time() const {
  // @@protoc_insertion_point(field_get:CSourceTVGameSmall.last_update_time)
  return last_update_time_;
}
inline void CSourceTVGameSmall::set_last_update_time(float value) {
  set_has_last_update_time();
  last_update_time_ = value;
  // @@protoc_insertion_point(field_set:CSourceTVGameSmall.last_update_time)
}

// -------------------------------------------------------------------

// CMsgSourceTVGamesResponse

// repeated .CSourceTVGame games = 1;
inline int CMsgSourceTVGamesResponse::games_size() const {
  return games_.size();
}
inline void CMsgSourceTVGamesResponse::clear_games() {
  games_.Clear();
}
inline const ::CSourceTVGame& CMsgSourceTVGamesResponse::games(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSourceTVGamesResponse.games)
  return games_.Get(index);
}
inline ::CSourceTVGame* CMsgSourceTVGamesResponse::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSourceTVGamesResponse.games)
  return games_.Mutable(index);
}
inline ::CSourceTVGame* CMsgSourceTVGamesResponse::add_games() {
  // @@protoc_insertion_point(field_add:CMsgSourceTVGamesResponse.games)
  return games_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGame >&
CMsgSourceTVGamesResponse::games() const {
  // @@protoc_insertion_point(field_list:CMsgSourceTVGamesResponse.games)
  return games_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGame >*
CMsgSourceTVGamesResponse::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSourceTVGamesResponse.games)
  return &games_;
}

// optional uint32 num_total_games = 2;
inline bool CMsgSourceTVGamesResponse::has_num_total_games() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSourceTVGamesResponse::set_has_num_total_games() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSourceTVGamesResponse::clear_has_num_total_games() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSourceTVGamesResponse::clear_num_total_games() {
  num_total_games_ = 0u;
  clear_has_num_total_games();
}
inline ::google::protobuf::uint32 CMsgSourceTVGamesResponse::num_total_games() const {
  // @@protoc_insertion_point(field_get:CMsgSourceTVGamesResponse.num_total_games)
  return num_total_games_;
}
inline void CMsgSourceTVGamesResponse::set_num_total_games(::google::protobuf::uint32 value) {
  set_has_num_total_games();
  num_total_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgSourceTVGamesResponse.num_total_games)
}

// -------------------------------------------------------------------

// CMsgFindSourceTVGames

// optional string search_key = 1;
inline bool CMsgFindSourceTVGames::has_search_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFindSourceTVGames::set_has_search_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFindSourceTVGames::clear_has_search_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFindSourceTVGames::clear_search_key() {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_->clear();
  }
  clear_has_search_key();
}
inline const ::std::string& CMsgFindSourceTVGames::search_key() const {
  // @@protoc_insertion_point(field_get:CMsgFindSourceTVGames.search_key)
  return *search_key_;
}
inline void CMsgFindSourceTVGames::set_search_key(const ::std::string& value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgFindSourceTVGames.search_key)
}
inline void CMsgFindSourceTVGames::set_search_key(const char* value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgFindSourceTVGames.search_key)
}
inline void CMsgFindSourceTVGames::set_search_key(const char* value, size_t size) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgFindSourceTVGames.search_key)
}
inline ::std::string* CMsgFindSourceTVGames::mutable_search_key() {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgFindSourceTVGames.search_key)
  return search_key_;
}
inline ::std::string* CMsgFindSourceTVGames::release_search_key() {
  clear_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_key_;
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgFindSourceTVGames::set_allocated_search_key(::std::string* search_key) {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_key_;
  }
  if (search_key) {
    set_has_search_key();
    search_key_ = search_key;
  } else {
    clear_has_search_key();
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgFindSourceTVGames.search_key)
}

// optional uint32 start = 2;
inline bool CMsgFindSourceTVGames::has_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFindSourceTVGames::set_has_start() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFindSourceTVGames::clear_has_start() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFindSourceTVGames::clear_start() {
  start_ = 0u;
  clear_has_start();
}
inline ::google::protobuf::uint32 CMsgFindSourceTVGames::start() const {
  // @@protoc_insertion_point(field_get:CMsgFindSourceTVGames.start)
  return start_;
}
inline void CMsgFindSourceTVGames::set_start(::google::protobuf::uint32 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:CMsgFindSourceTVGames.start)
}

// optional uint32 num_games = 3;
inline bool CMsgFindSourceTVGames::has_num_games() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgFindSourceTVGames::set_has_num_games() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgFindSourceTVGames::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgFindSourceTVGames::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgFindSourceTVGames::num_games() const {
  // @@protoc_insertion_point(field_get:CMsgFindSourceTVGames.num_games)
  return num_games_;
}
inline void CMsgFindSourceTVGames::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgFindSourceTVGames.num_games)
}

// optional uint32 leagueid = 4;
inline bool CMsgFindSourceTVGames::has_leagueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgFindSourceTVGames::set_has_leagueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgFindSourceTVGames::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgFindSourceTVGames::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgFindSourceTVGames::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgFindSourceTVGames.leagueid)
  return leagueid_;
}
inline void CMsgFindSourceTVGames::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgFindSourceTVGames.leagueid)
}

// optional uint32 heroid = 5;
inline bool CMsgFindSourceTVGames::has_heroid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgFindSourceTVGames::set_has_heroid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgFindSourceTVGames::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgFindSourceTVGames::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 CMsgFindSourceTVGames::heroid() const {
  // @@protoc_insertion_point(field_get:CMsgFindSourceTVGames.heroid)
  return heroid_;
}
inline void CMsgFindSourceTVGames::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:CMsgFindSourceTVGames.heroid)
}

// optional bool team_game = 6;
inline bool CMsgFindSourceTVGames::has_team_game() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgFindSourceTVGames::set_has_team_game() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgFindSourceTVGames::clear_has_team_game() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgFindSourceTVGames::clear_team_game() {
  team_game_ = false;
  clear_has_team_game();
}
inline bool CMsgFindSourceTVGames::team_game() const {
  // @@protoc_insertion_point(field_get:CMsgFindSourceTVGames.team_game)
  return team_game_;
}
inline void CMsgFindSourceTVGames::set_team_game(bool value) {
  set_has_team_game();
  team_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgFindSourceTVGames.team_game)
}

// optional uint64 custom_game_id = 10;
inline bool CMsgFindSourceTVGames::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgFindSourceTVGames::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgFindSourceTVGames::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgFindSourceTVGames::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgFindSourceTVGames::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgFindSourceTVGames.custom_game_id)
  return custom_game_id_;
}
inline void CMsgFindSourceTVGames::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgFindSourceTVGames.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCFindTopSourceTVGames

// optional string search_key = 1;
inline bool CMsgClientToGCFindTopSourceTVGames::has_search_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_has_search_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_has_search_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_search_key() {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_->clear();
  }
  clear_has_search_key();
}
inline const ::std::string& CMsgClientToGCFindTopSourceTVGames::search_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopSourceTVGames.search_key)
  return *search_key_;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_search_key(const ::std::string& value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopSourceTVGames.search_key)
}
inline void CMsgClientToGCFindTopSourceTVGames::set_search_key(const char* value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCFindTopSourceTVGames.search_key)
}
inline void CMsgClientToGCFindTopSourceTVGames::set_search_key(const char* value, size_t size) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCFindTopSourceTVGames.search_key)
}
inline ::std::string* CMsgClientToGCFindTopSourceTVGames::mutable_search_key() {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCFindTopSourceTVGames.search_key)
  return search_key_;
}
inline ::std::string* CMsgClientToGCFindTopSourceTVGames::release_search_key() {
  clear_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_key_;
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCFindTopSourceTVGames::set_allocated_search_key(::std::string* search_key) {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_key_;
  }
  if (search_key) {
    set_has_search_key();
    search_key_ = search_key;
  } else {
    clear_has_search_key();
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCFindTopSourceTVGames.search_key)
}

// optional uint32 league_id = 2;
inline bool CMsgClientToGCFindTopSourceTVGames::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopSourceTVGames::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopSourceTVGames.league_id)
  return league_id_;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopSourceTVGames.league_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCFindTopSourceTVGames::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopSourceTVGames::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopSourceTVGames.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopSourceTVGames.hero_id)
}

// optional uint32 start_game = 4;
inline bool CMsgClientToGCFindTopSourceTVGames::has_start_game() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_has_start_game() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_has_start_game() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_start_game() {
  start_game_ = 0u;
  clear_has_start_game();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopSourceTVGames::start_game() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopSourceTVGames.start_game)
  return start_game_;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_start_game(::google::protobuf::uint32 value) {
  set_has_start_game();
  start_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopSourceTVGames.start_game)
}

// optional uint32 game_list_index = 5;
inline bool CMsgClientToGCFindTopSourceTVGames::has_game_list_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_has_game_list_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_has_game_list_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_game_list_index() {
  game_list_index_ = 0u;
  clear_has_game_list_index();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopSourceTVGames::game_list_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopSourceTVGames.game_list_index)
  return game_list_index_;
}
inline void CMsgClientToGCFindTopSourceTVGames::set_game_list_index(::google::protobuf::uint32 value) {
  set_has_game_list_index();
  game_list_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopSourceTVGames.game_list_index)
}

// repeated uint64 lobby_ids = 6;
inline int CMsgClientToGCFindTopSourceTVGames::lobby_ids_size() const {
  return lobby_ids_.size();
}
inline void CMsgClientToGCFindTopSourceTVGames::clear_lobby_ids() {
  lobby_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCFindTopSourceTVGames::lobby_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopSourceTVGames.lobby_ids)
  return lobby_ids_.Get(index);
}
inline void CMsgClientToGCFindTopSourceTVGames::set_lobby_ids(int index, ::google::protobuf::uint64 value) {
  lobby_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopSourceTVGames.lobby_ids)
}
inline void CMsgClientToGCFindTopSourceTVGames::add_lobby_ids(::google::protobuf::uint64 value) {
  lobby_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCFindTopSourceTVGames.lobby_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCFindTopSourceTVGames::lobby_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCFindTopSourceTVGames.lobby_ids)
  return lobby_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCFindTopSourceTVGames::mutable_lobby_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCFindTopSourceTVGames.lobby_ids)
  return &lobby_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToClientFindTopSourceTVGamesResponse

// optional string search_key = 1;
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::has_search_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_has_search_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_has_search_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_search_key() {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_->clear();
  }
  clear_has_search_key();
}
inline const ::std::string& CMsgGCToClientFindTopSourceTVGamesResponse::search_key() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.search_key)
  return *search_key_;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_search_key(const ::std::string& value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopSourceTVGamesResponse.search_key)
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_search_key(const char* value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientFindTopSourceTVGamesResponse.search_key)
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_search_key(const char* value, size_t size) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientFindTopSourceTVGamesResponse.search_key)
}
inline ::std::string* CMsgGCToClientFindTopSourceTVGamesResponse::mutable_search_key() {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFindTopSourceTVGamesResponse.search_key)
  return search_key_;
}
inline ::std::string* CMsgGCToClientFindTopSourceTVGamesResponse::release_search_key() {
  clear_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_key_;
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_allocated_search_key(::std::string* search_key) {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_key_;
  }
  if (search_key) {
    set_has_search_key();
    search_key_ = search_key;
  } else {
    clear_has_search_key();
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientFindTopSourceTVGamesResponse.search_key)
}

// optional uint32 league_id = 2;
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopSourceTVGamesResponse::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.league_id)
  return league_id_;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopSourceTVGamesResponse.league_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopSourceTVGamesResponse::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.hero_id)
  return hero_id_;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopSourceTVGamesResponse.hero_id)
}

// optional uint32 start_game = 4;
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::has_start_game() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_has_start_game() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_has_start_game() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_start_game() {
  start_game_ = 0u;
  clear_has_start_game();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopSourceTVGamesResponse::start_game() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.start_game)
  return start_game_;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_start_game(::google::protobuf::uint32 value) {
  set_has_start_game();
  start_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopSourceTVGamesResponse.start_game)
}

// optional uint32 num_games = 5;
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::has_num_games() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_has_num_games() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopSourceTVGamesResponse::num_games() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.num_games)
  return num_games_;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopSourceTVGamesResponse.num_games)
}

// optional uint32 game_list_index = 6;
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::has_game_list_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_has_game_list_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_has_game_list_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_game_list_index() {
  game_list_index_ = 0u;
  clear_has_game_list_index();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopSourceTVGamesResponse::game_list_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.game_list_index)
  return game_list_index_;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_game_list_index(::google::protobuf::uint32 value) {
  set_has_game_list_index();
  game_list_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopSourceTVGamesResponse.game_list_index)
}

// repeated .CSourceTVGameSmall game_list = 7;
inline int CMsgGCToClientFindTopSourceTVGamesResponse::game_list_size() const {
  return game_list_.size();
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_game_list() {
  game_list_.Clear();
}
inline const ::CSourceTVGameSmall& CMsgGCToClientFindTopSourceTVGamesResponse::game_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.game_list)
  return game_list_.Get(index);
}
inline ::CSourceTVGameSmall* CMsgGCToClientFindTopSourceTVGamesResponse::mutable_game_list(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFindTopSourceTVGamesResponse.game_list)
  return game_list_.Mutable(index);
}
inline ::CSourceTVGameSmall* CMsgGCToClientFindTopSourceTVGamesResponse::add_game_list() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFindTopSourceTVGamesResponse.game_list)
  return game_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSourceTVGameSmall >&
CMsgGCToClientFindTopSourceTVGamesResponse::game_list() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFindTopSourceTVGamesResponse.game_list)
  return game_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSourceTVGameSmall >*
CMsgGCToClientFindTopSourceTVGamesResponse::mutable_game_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFindTopSourceTVGamesResponse.game_list)
  return &game_list_;
}

// optional bool specific_games = 8;
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::has_specific_games() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_has_specific_games() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_has_specific_games() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::clear_specific_games() {
  specific_games_ = false;
  clear_has_specific_games();
}
inline bool CMsgGCToClientFindTopSourceTVGamesResponse::specific_games() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopSourceTVGamesResponse.specific_games)
  return specific_games_;
}
inline void CMsgGCToClientFindTopSourceTVGamesResponse::set_specific_games(bool value) {
  set_has_specific_games();
  specific_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopSourceTVGamesResponse.specific_games)
}

// -------------------------------------------------------------------

// CMsgClientToGCTopMatchesRequest

// optional uint32 hero_id = 1;
inline bool CMsgClientToGCTopMatchesRequest::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTopMatchesRequest::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTopMatchesRequest::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTopMatchesRequest::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTopMatchesRequest::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTopMatchesRequest.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCTopMatchesRequest::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTopMatchesRequest.hero_id)
}

// optional uint32 player_account_id = 2;
inline bool CMsgClientToGCTopMatchesRequest::has_player_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTopMatchesRequest::set_has_player_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCTopMatchesRequest::clear_has_player_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCTopMatchesRequest::clear_player_account_id() {
  player_account_id_ = 0u;
  clear_has_player_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTopMatchesRequest::player_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTopMatchesRequest.player_account_id)
  return player_account_id_;
}
inline void CMsgClientToGCTopMatchesRequest::set_player_account_id(::google::protobuf::uint32 value) {
  set_has_player_account_id();
  player_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTopMatchesRequest.player_account_id)
}

// optional uint32 team_id = 3;
inline bool CMsgClientToGCTopMatchesRequest::has_team_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCTopMatchesRequest::set_has_team_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCTopMatchesRequest::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCTopMatchesRequest::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTopMatchesRequest::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTopMatchesRequest.team_id)
  return team_id_;
}
inline void CMsgClientToGCTopMatchesRequest::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTopMatchesRequest.team_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCTopLeagueMatchesRequest

// -------------------------------------------------------------------

// CMsgClientToGCTopFriendMatchesRequest

// -------------------------------------------------------------------

// CMsgClientToGCMatchesMinimalRequest

// repeated uint64 match_ids = 1;
inline int CMsgClientToGCMatchesMinimalRequest::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgClientToGCMatchesMinimalRequest::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCMatchesMinimalRequest::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCMatchesMinimalRequest.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgClientToGCMatchesMinimalRequest::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCMatchesMinimalRequest.match_ids)
}
inline void CMsgClientToGCMatchesMinimalRequest::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCMatchesMinimalRequest.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCMatchesMinimalRequest::match_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCMatchesMinimalRequest.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCMatchesMinimalRequest::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCMatchesMinimalRequest.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCMatchesMinimalResponse

// repeated .CMsgDOTAMatchMinimal matches = 1;
inline int CMsgClientToGCMatchesMinimalResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgClientToGCMatchesMinimalResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatchMinimal& CMsgClientToGCMatchesMinimalResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCMatchesMinimalResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatchMinimal* CMsgClientToGCMatchesMinimalResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCMatchesMinimalResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatchMinimal* CMsgClientToGCMatchesMinimalResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCMatchesMinimalResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >&
CMsgClientToGCMatchesMinimalResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCMatchesMinimalResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >*
CMsgClientToGCMatchesMinimalResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCMatchesMinimalResponse.matches)
  return &matches_;
}

// optional bool last_match = 2;
inline bool CMsgClientToGCMatchesMinimalResponse::has_last_match() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCMatchesMinimalResponse::set_has_last_match() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCMatchesMinimalResponse::clear_has_last_match() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCMatchesMinimalResponse::clear_last_match() {
  last_match_ = false;
  clear_has_last_match();
}
inline bool CMsgClientToGCMatchesMinimalResponse::last_match() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCMatchesMinimalResponse.last_match)
  return last_match_;
}
inline void CMsgClientToGCMatchesMinimalResponse::set_last_match(bool value) {
  set_has_last_match();
  last_match_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCMatchesMinimalResponse.last_match)
}

// -------------------------------------------------------------------

// CMsgGCToClientTopLeagueMatchesResponse

// repeated .CMsgDOTAMatchMinimal matches = 2;
inline int CMsgGCToClientTopLeagueMatchesResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgGCToClientTopLeagueMatchesResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatchMinimal& CMsgGCToClientTopLeagueMatchesResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTopLeagueMatchesResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatchMinimal* CMsgGCToClientTopLeagueMatchesResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientTopLeagueMatchesResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatchMinimal* CMsgGCToClientTopLeagueMatchesResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientTopLeagueMatchesResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >&
CMsgGCToClientTopLeagueMatchesResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientTopLeagueMatchesResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >*
CMsgGCToClientTopLeagueMatchesResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientTopLeagueMatchesResponse.matches)
  return &matches_;
}

// -------------------------------------------------------------------

// CMsgGCToClientTopFriendMatchesResponse

// repeated .CMsgDOTAMatchMinimal matches = 1;
inline int CMsgGCToClientTopFriendMatchesResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgGCToClientTopFriendMatchesResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatchMinimal& CMsgGCToClientTopFriendMatchesResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTopFriendMatchesResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatchMinimal* CMsgGCToClientTopFriendMatchesResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientTopFriendMatchesResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatchMinimal* CMsgGCToClientTopFriendMatchesResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientTopFriendMatchesResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >&
CMsgGCToClientTopFriendMatchesResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientTopFriendMatchesResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal >*
CMsgGCToClientTopFriendMatchesResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientTopFriendMatchesResponse.matches)
  return &matches_;
}

// -------------------------------------------------------------------

// CMsgClientToGCFindTopMatches

// optional uint32 start_game = 1;
inline bool CMsgClientToGCFindTopMatches::has_start_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCFindTopMatches::set_has_start_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCFindTopMatches::clear_has_start_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCFindTopMatches::clear_start_game() {
  start_game_ = 0u;
  clear_has_start_game();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopMatches::start_game() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopMatches.start_game)
  return start_game_;
}
inline void CMsgClientToGCFindTopMatches::set_start_game(::google::protobuf::uint32 value) {
  set_has_start_game();
  start_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopMatches.start_game)
}

// optional uint32 league_id = 2;
inline bool CMsgClientToGCFindTopMatches::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCFindTopMatches::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCFindTopMatches::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCFindTopMatches::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopMatches::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopMatches.league_id)
  return league_id_;
}
inline void CMsgClientToGCFindTopMatches::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopMatches.league_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCFindTopMatches::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCFindTopMatches::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCFindTopMatches::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCFindTopMatches::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopMatches::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopMatches.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCFindTopMatches::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopMatches.hero_id)
}

// optional uint32 friend_id = 4;
inline bool CMsgClientToGCFindTopMatches::has_friend_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCFindTopMatches::set_has_friend_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCFindTopMatches::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCFindTopMatches::clear_friend_id() {
  friend_id_ = 0u;
  clear_has_friend_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCFindTopMatches::friend_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopMatches.friend_id)
  return friend_id_;
}
inline void CMsgClientToGCFindTopMatches::set_friend_id(::google::protobuf::uint32 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopMatches.friend_id)
}

// optional bool friend_list = 5;
inline bool CMsgClientToGCFindTopMatches::has_friend_list() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCFindTopMatches::set_has_friend_list() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCFindTopMatches::clear_has_friend_list() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCFindTopMatches::clear_friend_list() {
  friend_list_ = false;
  clear_has_friend_list();
}
inline bool CMsgClientToGCFindTopMatches::friend_list() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopMatches.friend_list)
  return friend_list_;
}
inline void CMsgClientToGCFindTopMatches::set_friend_list(bool value) {
  set_has_friend_list();
  friend_list_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopMatches.friend_list)
}

// optional bool league_list = 6;
inline bool CMsgClientToGCFindTopMatches::has_league_list() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCFindTopMatches::set_has_league_list() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCFindTopMatches::clear_has_league_list() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCFindTopMatches::clear_league_list() {
  league_list_ = false;
  clear_has_league_list();
}
inline bool CMsgClientToGCFindTopMatches::league_list() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindTopMatches.league_list)
  return league_list_;
}
inline void CMsgClientToGCFindTopMatches::set_league_list(bool value) {
  set_has_league_list();
  league_list_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindTopMatches.league_list)
}

// -------------------------------------------------------------------

// CMsgGCToClientFindTopLeagueMatchesResponse

// optional uint32 start_game = 1;
inline bool CMsgGCToClientFindTopLeagueMatchesResponse::has_start_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::set_has_start_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_has_start_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_start_game() {
  start_game_ = 0u;
  clear_has_start_game();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopLeagueMatchesResponse::start_game() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopLeagueMatchesResponse.start_game)
  return start_game_;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::set_start_game(::google::protobuf::uint32 value) {
  set_has_start_game();
  start_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopLeagueMatchesResponse.start_game)
}

// optional uint32 league_id = 2;
inline bool CMsgGCToClientFindTopLeagueMatchesResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopLeagueMatchesResponse::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopLeagueMatchesResponse.league_id)
  return league_id_;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopLeagueMatchesResponse.league_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgGCToClientFindTopLeagueMatchesResponse::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopLeagueMatchesResponse::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopLeagueMatchesResponse.hero_id)
  return hero_id_;
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopLeagueMatchesResponse.hero_id)
}

// repeated uint32 match_ids = 4;
inline int CMsgGCToClientFindTopLeagueMatchesResponse::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientFindTopLeagueMatchesResponse::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopLeagueMatchesResponse.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::set_match_ids(int index, ::google::protobuf::uint32 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFindTopLeagueMatchesResponse.match_ids)
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::add_match_ids(::google::protobuf::uint32 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientFindTopLeagueMatchesResponse.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientFindTopLeagueMatchesResponse::match_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFindTopLeagueMatchesResponse.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientFindTopLeagueMatchesResponse::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFindTopLeagueMatchesResponse.match_ids)
  return &match_ids_;
}

// repeated .CMsgDOTAMatch matches = 5;
inline int CMsgGCToClientFindTopLeagueMatchesResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgGCToClientFindTopLeagueMatchesResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgGCToClientFindTopLeagueMatchesResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFindTopLeagueMatchesResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgGCToClientFindTopLeagueMatchesResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFindTopLeagueMatchesResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgGCToClientFindTopLeagueMatchesResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFindTopLeagueMatchesResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgGCToClientFindTopLeagueMatchesResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFindTopLeagueMatchesResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgGCToClientFindTopLeagueMatchesResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFindTopLeagueMatchesResponse.matches)
  return &matches_;
}

// -------------------------------------------------------------------

// CMsgSpectateFriendGame

// optional fixed64 steam_id = 1;
inline bool CMsgSpectateFriendGame::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSpectateFriendGame::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSpectateFriendGame::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSpectateFriendGame::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgSpectateFriendGame::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSpectateFriendGame.steam_id)
  return steam_id_;
}
inline void CMsgSpectateFriendGame::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSpectateFriendGame.steam_id)
}

// -------------------------------------------------------------------

// CMsgSpectateFriendGameResponse

// optional fixed64 server_steamid = 4;
inline bool CMsgSpectateFriendGameResponse::has_server_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSpectateFriendGameResponse::set_has_server_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSpectateFriendGameResponse::clear_has_server_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSpectateFriendGameResponse::clear_server_steamid() {
  server_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steamid();
}
inline ::google::protobuf::uint64 CMsgSpectateFriendGameResponse::server_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgSpectateFriendGameResponse.server_steamid)
  return server_steamid_;
}
inline void CMsgSpectateFriendGameResponse::set_server_steamid(::google::protobuf::uint64 value) {
  set_has_server_steamid();
  server_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgSpectateFriendGameResponse.server_steamid)
}

// -------------------------------------------------------------------

// CMsgAbandonCurrentGame

// -------------------------------------------------------------------

// CMsgClientSuspended

// optional uint32 time_end = 1;
inline bool CMsgClientSuspended::has_time_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSuspended::set_has_time_end() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSuspended::clear_has_time_end() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSuspended::clear_time_end() {
  time_end_ = 0u;
  clear_has_time_end();
}
inline ::google::protobuf::uint32 CMsgClientSuspended::time_end() const {
  // @@protoc_insertion_point(field_get:CMsgClientSuspended.time_end)
  return time_end_;
}
inline void CMsgClientSuspended::set_time_end(::google::protobuf::uint32 value) {
  set_has_time_end();
  time_end_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientSuspended.time_end)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbySetDetails

// optional uint64 lobby_id = 1;
inline bool CMsgPracticeLobbySetDetails::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbySetDetails::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbySetDetails::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.lobby_id)
  return lobby_id_;
}
inline void CMsgPracticeLobbySetDetails::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.lobby_id)
}

// optional string game_name = 2;
inline bool CMsgPracticeLobbySetDetails::has_game_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_game_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbySetDetails::clear_game_name() {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_->clear();
  }
  clear_has_game_name();
}
inline const ::std::string& CMsgPracticeLobbySetDetails::game_name() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.game_name)
  return *game_name_;
}
inline void CMsgPracticeLobbySetDetails::set_game_name(const ::std::string& value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.game_name)
}
inline void CMsgPracticeLobbySetDetails::set_game_name(const char* value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbySetDetails.game_name)
}
inline void CMsgPracticeLobbySetDetails::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbySetDetails.game_name)
}
inline ::std::string* CMsgPracticeLobbySetDetails::mutable_game_name() {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbySetDetails.game_name)
  return game_name_;
}
inline ::std::string* CMsgPracticeLobbySetDetails::release_game_name() {
  clear_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_name_;
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbySetDetails::set_allocated_game_name(::std::string* game_name) {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_name_;
  }
  if (game_name) {
    set_has_game_name();
    game_name_ = game_name;
  } else {
    clear_has_game_name();
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbySetDetails.game_name)
}

// repeated .CLobbyTeamDetails team_details = 3;
inline int CMsgPracticeLobbySetDetails::team_details_size() const {
  return team_details_.size();
}
inline void CMsgPracticeLobbySetDetails::clear_team_details() {
  team_details_.Clear();
}
inline const ::CLobbyTeamDetails& CMsgPracticeLobbySetDetails::team_details(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.team_details)
  return team_details_.Get(index);
}
inline ::CLobbyTeamDetails* CMsgPracticeLobbySetDetails::mutable_team_details(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbySetDetails.team_details)
  return team_details_.Mutable(index);
}
inline ::CLobbyTeamDetails* CMsgPracticeLobbySetDetails::add_team_details() {
  // @@protoc_insertion_point(field_add:CMsgPracticeLobbySetDetails.team_details)
  return team_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >&
CMsgPracticeLobbySetDetails::team_details() const {
  // @@protoc_insertion_point(field_list:CMsgPracticeLobbySetDetails.team_details)
  return team_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::CLobbyTeamDetails >*
CMsgPracticeLobbySetDetails::mutable_team_details() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPracticeLobbySetDetails.team_details)
  return &team_details_;
}

// optional uint32 server_region = 4;
inline bool CMsgPracticeLobbySetDetails::has_server_region() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_server_region() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPracticeLobbySetDetails::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.server_region)
  return server_region_;
}
inline void CMsgPracticeLobbySetDetails::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.server_region)
}

// optional uint32 game_mode = 5;
inline bool CMsgPracticeLobbySetDetails::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_game_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPracticeLobbySetDetails::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.game_mode)
  return game_mode_;
}
inline void CMsgPracticeLobbySetDetails::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.game_mode)
}

// optional .DOTA_CM_PICK cm_pick = 6 [default = DOTA_CM_RANDOM];
inline bool CMsgPracticeLobbySetDetails::has_cm_pick() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_cm_pick() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_cm_pick() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPracticeLobbySetDetails::clear_cm_pick() {
  cm_pick_ = 0;
  clear_has_cm_pick();
}
inline ::DOTA_CM_PICK CMsgPracticeLobbySetDetails::cm_pick() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.cm_pick)
  return static_cast< ::DOTA_CM_PICK >(cm_pick_);
}
inline void CMsgPracticeLobbySetDetails::set_cm_pick(::DOTA_CM_PICK value) {
  assert(::DOTA_CM_PICK_IsValid(value));
  set_has_cm_pick();
  cm_pick_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.cm_pick)
}

// optional .DOTABotDifficulty bot_difficulty = 9 [default = BOT_DIFFICULTY_MEDIUM];
inline bool CMsgPracticeLobbySetDetails::has_bot_difficulty() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_bot_difficulty() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_bot_difficulty() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPracticeLobbySetDetails::clear_bot_difficulty() {
  bot_difficulty_ = 2;
  clear_has_bot_difficulty();
}
inline ::DOTABotDifficulty CMsgPracticeLobbySetDetails::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.bot_difficulty)
  return static_cast< ::DOTABotDifficulty >(bot_difficulty_);
}
inline void CMsgPracticeLobbySetDetails::set_bot_difficulty(::DOTABotDifficulty value) {
  assert(::DOTABotDifficulty_IsValid(value));
  set_has_bot_difficulty();
  bot_difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.bot_difficulty)
}

// optional bool allow_cheats = 10;
inline bool CMsgPracticeLobbySetDetails::has_allow_cheats() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_allow_cheats() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_allow_cheats() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPracticeLobbySetDetails::clear_allow_cheats() {
  allow_cheats_ = false;
  clear_has_allow_cheats();
}
inline bool CMsgPracticeLobbySetDetails::allow_cheats() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.allow_cheats)
  return allow_cheats_;
}
inline void CMsgPracticeLobbySetDetails::set_allow_cheats(bool value) {
  set_has_allow_cheats();
  allow_cheats_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.allow_cheats)
}

// optional bool fill_with_bots = 11;
inline bool CMsgPracticeLobbySetDetails::has_fill_with_bots() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_fill_with_bots() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_fill_with_bots() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgPracticeLobbySetDetails::clear_fill_with_bots() {
  fill_with_bots_ = false;
  clear_has_fill_with_bots();
}
inline bool CMsgPracticeLobbySetDetails::fill_with_bots() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.fill_with_bots)
  return fill_with_bots_;
}
inline void CMsgPracticeLobbySetDetails::set_fill_with_bots(bool value) {
  set_has_fill_with_bots();
  fill_with_bots_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.fill_with_bots)
}

// optional bool intro_mode = 12;
inline bool CMsgPracticeLobbySetDetails::has_intro_mode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_intro_mode() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_intro_mode() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgPracticeLobbySetDetails::clear_intro_mode() {
  intro_mode_ = false;
  clear_has_intro_mode();
}
inline bool CMsgPracticeLobbySetDetails::intro_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.intro_mode)
  return intro_mode_;
}
inline void CMsgPracticeLobbySetDetails::set_intro_mode(bool value) {
  set_has_intro_mode();
  intro_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.intro_mode)
}

// optional bool allow_spectating = 13;
inline bool CMsgPracticeLobbySetDetails::has_allow_spectating() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_allow_spectating() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_allow_spectating() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgPracticeLobbySetDetails::clear_allow_spectating() {
  allow_spectating_ = false;
  clear_has_allow_spectating();
}
inline bool CMsgPracticeLobbySetDetails::allow_spectating() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.allow_spectating)
  return allow_spectating_;
}
inline void CMsgPracticeLobbySetDetails::set_allow_spectating(bool value) {
  set_has_allow_spectating();
  allow_spectating_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.allow_spectating)
}

// optional .DOTAGameVersion game_version = 14 [default = GAME_VERSION_CURRENT];
inline bool CMsgPracticeLobbySetDetails::has_game_version() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_game_version() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_game_version() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgPracticeLobbySetDetails::clear_game_version() {
  game_version_ = 0;
  clear_has_game_version();
}
inline ::DOTAGameVersion CMsgPracticeLobbySetDetails::game_version() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.game_version)
  return static_cast< ::DOTAGameVersion >(game_version_);
}
inline void CMsgPracticeLobbySetDetails::set_game_version(::DOTAGameVersion value) {
  assert(::DOTAGameVersion_IsValid(value));
  set_has_game_version();
  game_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.game_version)
}

// optional string pass_key = 15;
inline bool CMsgPracticeLobbySetDetails::has_pass_key() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_pass_key() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_pass_key() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgPracticeLobbySetDetails::clear_pass_key() {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_->clear();
  }
  clear_has_pass_key();
}
inline const ::std::string& CMsgPracticeLobbySetDetails::pass_key() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.pass_key)
  return *pass_key_;
}
inline void CMsgPracticeLobbySetDetails::set_pass_key(const ::std::string& value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.pass_key)
}
inline void CMsgPracticeLobbySetDetails::set_pass_key(const char* value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbySetDetails.pass_key)
}
inline void CMsgPracticeLobbySetDetails::set_pass_key(const char* value, size_t size) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbySetDetails.pass_key)
}
inline ::std::string* CMsgPracticeLobbySetDetails::mutable_pass_key() {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbySetDetails.pass_key)
  return pass_key_;
}
inline ::std::string* CMsgPracticeLobbySetDetails::release_pass_key() {
  clear_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pass_key_;
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbySetDetails::set_allocated_pass_key(::std::string* pass_key) {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pass_key_;
  }
  if (pass_key) {
    set_has_pass_key();
    pass_key_ = pass_key;
  } else {
    clear_has_pass_key();
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbySetDetails.pass_key)
}

// optional uint32 leagueid = 16;
inline bool CMsgPracticeLobbySetDetails::has_leagueid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_leagueid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgPracticeLobbySetDetails::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.leagueid)
  return leagueid_;
}
inline void CMsgPracticeLobbySetDetails::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.leagueid)
}

// optional uint32 penalty_level_radiant = 17;
inline bool CMsgPracticeLobbySetDetails::has_penalty_level_radiant() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_penalty_level_radiant() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_penalty_level_radiant() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgPracticeLobbySetDetails::clear_penalty_level_radiant() {
  penalty_level_radiant_ = 0u;
  clear_has_penalty_level_radiant();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::penalty_level_radiant() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.penalty_level_radiant)
  return penalty_level_radiant_;
}
inline void CMsgPracticeLobbySetDetails::set_penalty_level_radiant(::google::protobuf::uint32 value) {
  set_has_penalty_level_radiant();
  penalty_level_radiant_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.penalty_level_radiant)
}

// optional uint32 penalty_level_dire = 18;
inline bool CMsgPracticeLobbySetDetails::has_penalty_level_dire() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_penalty_level_dire() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_penalty_level_dire() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgPracticeLobbySetDetails::clear_penalty_level_dire() {
  penalty_level_dire_ = 0u;
  clear_has_penalty_level_dire();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::penalty_level_dire() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.penalty_level_dire)
  return penalty_level_dire_;
}
inline void CMsgPracticeLobbySetDetails::set_penalty_level_dire(::google::protobuf::uint32 value) {
  set_has_penalty_level_dire();
  penalty_level_dire_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.penalty_level_dire)
}

// optional uint32 load_game_id = 19;
inline bool CMsgPracticeLobbySetDetails::has_load_game_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_load_game_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_load_game_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgPracticeLobbySetDetails::clear_load_game_id() {
  load_game_id_ = 0u;
  clear_has_load_game_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::load_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.load_game_id)
  return load_game_id_;
}
inline void CMsgPracticeLobbySetDetails::set_load_game_id(::google::protobuf::uint32 value) {
  set_has_load_game_id();
  load_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.load_game_id)
}

// optional uint32 series_type = 20;
inline bool CMsgPracticeLobbySetDetails::has_series_type() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_series_type() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_series_type() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgPracticeLobbySetDetails::clear_series_type() {
  series_type_ = 0u;
  clear_has_series_type();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::series_type() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.series_type)
  return series_type_;
}
inline void CMsgPracticeLobbySetDetails::set_series_type(::google::protobuf::uint32 value) {
  set_has_series_type();
  series_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.series_type)
}

// optional uint32 radiant_series_wins = 21;
inline bool CMsgPracticeLobbySetDetails::has_radiant_series_wins() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_radiant_series_wins() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_radiant_series_wins() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgPracticeLobbySetDetails::clear_radiant_series_wins() {
  radiant_series_wins_ = 0u;
  clear_has_radiant_series_wins();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::radiant_series_wins() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.radiant_series_wins)
  return radiant_series_wins_;
}
inline void CMsgPracticeLobbySetDetails::set_radiant_series_wins(::google::protobuf::uint32 value) {
  set_has_radiant_series_wins();
  radiant_series_wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.radiant_series_wins)
}

// optional uint32 dire_series_wins = 22;
inline bool CMsgPracticeLobbySetDetails::has_dire_series_wins() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_dire_series_wins() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_dire_series_wins() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgPracticeLobbySetDetails::clear_dire_series_wins() {
  dire_series_wins_ = 0u;
  clear_has_dire_series_wins();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::dire_series_wins() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.dire_series_wins)
  return dire_series_wins_;
}
inline void CMsgPracticeLobbySetDetails::set_dire_series_wins(::google::protobuf::uint32 value) {
  set_has_dire_series_wins();
  dire_series_wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.dire_series_wins)
}

// optional bool allchat = 23 [default = false];
inline bool CMsgPracticeLobbySetDetails::has_allchat() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_allchat() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_allchat() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgPracticeLobbySetDetails::clear_allchat() {
  allchat_ = false;
  clear_has_allchat();
}
inline bool CMsgPracticeLobbySetDetails::allchat() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.allchat)
  return allchat_;
}
inline void CMsgPracticeLobbySetDetails::set_allchat(bool value) {
  set_has_allchat();
  allchat_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.allchat)
}

// optional .LobbyDotaTVDelay dota_tv_delay = 24 [default = LobbyDotaTV_120];
inline bool CMsgPracticeLobbySetDetails::has_dota_tv_delay() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_dota_tv_delay() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_dota_tv_delay() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgPracticeLobbySetDetails::clear_dota_tv_delay() {
  dota_tv_delay_ = 1;
  clear_has_dota_tv_delay();
}
inline ::LobbyDotaTVDelay CMsgPracticeLobbySetDetails::dota_tv_delay() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.dota_tv_delay)
  return static_cast< ::LobbyDotaTVDelay >(dota_tv_delay_);
}
inline void CMsgPracticeLobbySetDetails::set_dota_tv_delay(::LobbyDotaTVDelay value) {
  assert(::LobbyDotaTVDelay_IsValid(value));
  set_has_dota_tv_delay();
  dota_tv_delay_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.dota_tv_delay)
}

// optional bool lan = 25;
inline bool CMsgPracticeLobbySetDetails::has_lan() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_lan() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_lan() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgPracticeLobbySetDetails::clear_lan() {
  lan_ = false;
  clear_has_lan();
}
inline bool CMsgPracticeLobbySetDetails::lan() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.lan)
  return lan_;
}
inline void CMsgPracticeLobbySetDetails::set_lan(bool value) {
  set_has_lan();
  lan_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.lan)
}

// optional string custom_game_mode = 26;
inline bool CMsgPracticeLobbySetDetails::has_custom_game_mode() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_game_mode() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_game_mode() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_game_mode() {
  if (custom_game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_->clear();
  }
  clear_has_custom_game_mode();
}
inline const ::std::string& CMsgPracticeLobbySetDetails::custom_game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_game_mode)
  return *custom_game_mode_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_game_mode(const ::std::string& value) {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  custom_game_mode_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_game_mode)
}
inline void CMsgPracticeLobbySetDetails::set_custom_game_mode(const char* value) {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  custom_game_mode_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbySetDetails.custom_game_mode)
}
inline void CMsgPracticeLobbySetDetails::set_custom_game_mode(const char* value, size_t size) {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  custom_game_mode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbySetDetails.custom_game_mode)
}
inline ::std::string* CMsgPracticeLobbySetDetails::mutable_custom_game_mode() {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbySetDetails.custom_game_mode)
  return custom_game_mode_;
}
inline ::std::string* CMsgPracticeLobbySetDetails::release_custom_game_mode() {
  clear_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_game_mode_;
    custom_game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbySetDetails::set_allocated_custom_game_mode(::std::string* custom_game_mode) {
  if (custom_game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_game_mode_;
  }
  if (custom_game_mode) {
    set_has_custom_game_mode();
    custom_game_mode_ = custom_game_mode;
  } else {
    clear_has_custom_game_mode();
    custom_game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbySetDetails.custom_game_mode)
}

// optional string custom_map_name = 27;
inline bool CMsgPracticeLobbySetDetails::has_custom_map_name() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_map_name() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_map_name() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_map_name() {
  if (custom_map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_->clear();
  }
  clear_has_custom_map_name();
}
inline const ::std::string& CMsgPracticeLobbySetDetails::custom_map_name() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_map_name)
  return *custom_map_name_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_map_name(const ::std::string& value) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_map_name)
}
inline void CMsgPracticeLobbySetDetails::set_custom_map_name(const char* value) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbySetDetails.custom_map_name)
}
inline void CMsgPracticeLobbySetDetails::set_custom_map_name(const char* value, size_t size) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbySetDetails.custom_map_name)
}
inline ::std::string* CMsgPracticeLobbySetDetails::mutable_custom_map_name() {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbySetDetails.custom_map_name)
  return custom_map_name_;
}
inline ::std::string* CMsgPracticeLobbySetDetails::release_custom_map_name() {
  clear_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_map_name_;
    custom_map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbySetDetails::set_allocated_custom_map_name(::std::string* custom_map_name) {
  if (custom_map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_map_name_;
  }
  if (custom_map_name) {
    set_has_custom_map_name();
    custom_map_name_ = custom_map_name;
  } else {
    clear_has_custom_map_name();
    custom_map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbySetDetails.custom_map_name)
}

// optional uint32 custom_difficulty = 28;
inline bool CMsgPracticeLobbySetDetails::has_custom_difficulty() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_difficulty() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_difficulty() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_difficulty() {
  custom_difficulty_ = 0u;
  clear_has_custom_difficulty();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::custom_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_difficulty)
  return custom_difficulty_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_difficulty(::google::protobuf::uint32 value) {
  set_has_custom_difficulty();
  custom_difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_difficulty)
}

// optional uint64 custom_game_id = 29;
inline bool CMsgPracticeLobbySetDetails::has_custom_game_id() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_game_id() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbySetDetails::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_game_id)
  return custom_game_id_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_game_id)
}

// optional uint32 custom_min_players = 30;
inline bool CMsgPracticeLobbySetDetails::has_custom_min_players() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_min_players() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_min_players() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_min_players() {
  custom_min_players_ = 0u;
  clear_has_custom_min_players();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::custom_min_players() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_min_players)
  return custom_min_players_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_min_players(::google::protobuf::uint32 value) {
  set_has_custom_min_players();
  custom_min_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_min_players)
}

// optional uint32 custom_max_players = 31;
inline bool CMsgPracticeLobbySetDetails::has_custom_max_players() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_max_players() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_max_players() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_max_players() {
  custom_max_players_ = 0u;
  clear_has_custom_max_players();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::custom_max_players() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_max_players)
  return custom_max_players_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_max_players(::google::protobuf::uint32 value) {
  set_has_custom_max_players();
  custom_max_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_max_players)
}

// optional uint32 lan_host_ping_to_server_region = 32;
inline bool CMsgPracticeLobbySetDetails::has_lan_host_ping_to_server_region() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_lan_host_ping_to_server_region() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_lan_host_ping_to_server_region() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_lan_host_ping_to_server_region() {
  lan_host_ping_to_server_region_ = 0u;
  clear_has_lan_host_ping_to_server_region();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::lan_host_ping_to_server_region() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.lan_host_ping_to_server_region)
  return lan_host_ping_to_server_region_;
}
inline void CMsgPracticeLobbySetDetails::set_lan_host_ping_to_server_region(::google::protobuf::uint32 value) {
  set_has_lan_host_ping_to_server_region();
  lan_host_ping_to_server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.lan_host_ping_to_server_region)
}

// optional .DOTALobbyVisibility visibility = 33 [default = DOTALobbyVisibility_Public];
inline bool CMsgPracticeLobbySetDetails::has_visibility() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_visibility() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_visibility() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_visibility() {
  visibility_ = 0;
  clear_has_visibility();
}
inline ::DOTALobbyVisibility CMsgPracticeLobbySetDetails::visibility() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.visibility)
  return static_cast< ::DOTALobbyVisibility >(visibility_);
}
inline void CMsgPracticeLobbySetDetails::set_visibility(::DOTALobbyVisibility value) {
  assert(::DOTALobbyVisibility_IsValid(value));
  set_has_visibility();
  visibility_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.visibility)
}

// optional fixed64 custom_game_crc = 34;
inline bool CMsgPracticeLobbySetDetails::has_custom_game_crc() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_game_crc() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_game_crc() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_game_crc() {
  custom_game_crc_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_crc();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbySetDetails::custom_game_crc() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_game_crc)
  return custom_game_crc_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_game_crc(::google::protobuf::uint64 value) {
  set_has_custom_game_crc();
  custom_game_crc_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_game_crc)
}

// optional uint32 league_series_id = 35;
inline bool CMsgPracticeLobbySetDetails::has_league_series_id() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_league_series_id() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_league_series_id() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CMsgPracticeLobbySetDetails::clear_league_series_id() {
  league_series_id_ = 0u;
  clear_has_league_series_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::league_series_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.league_series_id)
  return league_series_id_;
}
inline void CMsgPracticeLobbySetDetails::set_league_series_id(::google::protobuf::uint32 value) {
  set_has_league_series_id();
  league_series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.league_series_id)
}

// optional uint32 league_game_id = 36;
inline bool CMsgPracticeLobbySetDetails::has_league_game_id() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_league_game_id() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_league_game_id() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CMsgPracticeLobbySetDetails::clear_league_game_id() {
  league_game_id_ = 0u;
  clear_has_league_game_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::league_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.league_game_id)
  return league_game_id_;
}
inline void CMsgPracticeLobbySetDetails::set_league_game_id(::google::protobuf::uint32 value) {
  set_has_league_game_id();
  league_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.league_game_id)
}

// optional fixed32 custom_game_timestamp = 37;
inline bool CMsgPracticeLobbySetDetails::has_custom_game_timestamp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbySetDetails::set_has_custom_game_timestamp() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CMsgPracticeLobbySetDetails::clear_has_custom_game_timestamp() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CMsgPracticeLobbySetDetails::clear_custom_game_timestamp() {
  custom_game_timestamp_ = 0u;
  clear_has_custom_game_timestamp();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetDetails::custom_game_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetDetails.custom_game_timestamp)
  return custom_game_timestamp_;
}
inline void CMsgPracticeLobbySetDetails::set_custom_game_timestamp(::google::protobuf::uint32 value) {
  set_has_custom_game_timestamp();
  custom_game_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetDetails.custom_game_timestamp)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyCreate_SaveGame

// optional bytes data = 1;
inline bool CMsgPracticeLobbyCreate_SaveGame::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CMsgPracticeLobbyCreate_SaveGame::data() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.SaveGame.data)
  return *data_;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.SaveGame.data)
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyCreate.SaveGame.data)
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyCreate.SaveGame.data)
}
inline ::std::string* CMsgPracticeLobbyCreate_SaveGame::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyCreate.SaveGame.data)
  return data_;
}
inline ::std::string* CMsgPracticeLobbyCreate_SaveGame::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyCreate.SaveGame.data)
}

// optional int32 version = 2;
inline bool CMsgPracticeLobbyCreate_SaveGame::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 CMsgPracticeLobbyCreate_SaveGame::version() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.SaveGame.version)
  return version_;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.SaveGame.version)
}

// optional fixed64 steam_id = 3;
inline bool CMsgPracticeLobbyCreate_SaveGame::has_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_has_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbyCreate_SaveGame::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.SaveGame.steam_id)
  return steam_id_;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.SaveGame.steam_id)
}

// optional fixed64 signature = 4;
inline bool CMsgPracticeLobbyCreate_SaveGame::has_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_has_signature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_has_signature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPracticeLobbyCreate_SaveGame::clear_signature() {
  signature_ = GOOGLE_ULONGLONG(0);
  clear_has_signature();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbyCreate_SaveGame::signature() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.SaveGame.signature)
  return signature_;
}
inline void CMsgPracticeLobbyCreate_SaveGame::set_signature(::google::protobuf::uint64 value) {
  set_has_signature();
  signature_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.SaveGame.signature)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyCreate

// optional string search_key = 1;
inline bool CMsgPracticeLobbyCreate::has_search_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_search_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyCreate::clear_has_search_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyCreate::clear_search_key() {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_->clear();
  }
  clear_has_search_key();
}
inline const ::std::string& CMsgPracticeLobbyCreate::search_key() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.search_key)
  return *search_key_;
}
inline void CMsgPracticeLobbyCreate::set_search_key(const ::std::string& value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.search_key)
}
inline void CMsgPracticeLobbyCreate::set_search_key(const char* value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyCreate.search_key)
}
inline void CMsgPracticeLobbyCreate::set_search_key(const char* value, size_t size) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyCreate.search_key)
}
inline ::std::string* CMsgPracticeLobbyCreate::mutable_search_key() {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyCreate.search_key)
  return search_key_;
}
inline ::std::string* CMsgPracticeLobbyCreate::release_search_key() {
  clear_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_key_;
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyCreate::set_allocated_search_key(::std::string* search_key) {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_key_;
  }
  if (search_key) {
    set_has_search_key();
    search_key_ = search_key;
  } else {
    clear_has_search_key();
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyCreate.search_key)
}

// optional bool tournament_game = 2;
inline bool CMsgPracticeLobbyCreate::has_tournament_game() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_tournament_game() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbyCreate::clear_has_tournament_game() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbyCreate::clear_tournament_game() {
  tournament_game_ = false;
  clear_has_tournament_game();
}
inline bool CMsgPracticeLobbyCreate::tournament_game() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.tournament_game)
  return tournament_game_;
}
inline void CMsgPracticeLobbyCreate::set_tournament_game(bool value) {
  set_has_tournament_game();
  tournament_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.tournament_game)
}

// optional uint32 tournament_game_id = 3;
inline bool CMsgPracticeLobbyCreate::has_tournament_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_tournament_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPracticeLobbyCreate::clear_has_tournament_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPracticeLobbyCreate::clear_tournament_game_id() {
  tournament_game_id_ = 0u;
  clear_has_tournament_game_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyCreate::tournament_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.tournament_game_id)
  return tournament_game_id_;
}
inline void CMsgPracticeLobbyCreate::set_tournament_game_id(::google::protobuf::uint32 value) {
  set_has_tournament_game_id();
  tournament_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.tournament_game_id)
}

// optional uint32 tournament_id = 4;
inline bool CMsgPracticeLobbyCreate::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_tournament_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPracticeLobbyCreate::clear_has_tournament_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPracticeLobbyCreate::clear_tournament_id() {
  tournament_id_ = 0u;
  clear_has_tournament_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyCreate::tournament_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.tournament_id)
  return tournament_id_;
}
inline void CMsgPracticeLobbyCreate::set_tournament_id(::google::protobuf::uint32 value) {
  set_has_tournament_id();
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.tournament_id)
}

// optional string pass_key = 5;
inline bool CMsgPracticeLobbyCreate::has_pass_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_pass_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPracticeLobbyCreate::clear_has_pass_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPracticeLobbyCreate::clear_pass_key() {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_->clear();
  }
  clear_has_pass_key();
}
inline const ::std::string& CMsgPracticeLobbyCreate::pass_key() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.pass_key)
  return *pass_key_;
}
inline void CMsgPracticeLobbyCreate::set_pass_key(const ::std::string& value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.pass_key)
}
inline void CMsgPracticeLobbyCreate::set_pass_key(const char* value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyCreate.pass_key)
}
inline void CMsgPracticeLobbyCreate::set_pass_key(const char* value, size_t size) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyCreate.pass_key)
}
inline ::std::string* CMsgPracticeLobbyCreate::mutable_pass_key() {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyCreate.pass_key)
  return pass_key_;
}
inline ::std::string* CMsgPracticeLobbyCreate::release_pass_key() {
  clear_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pass_key_;
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyCreate::set_allocated_pass_key(::std::string* pass_key) {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pass_key_;
  }
  if (pass_key) {
    set_has_pass_key();
    pass_key_ = pass_key;
  } else {
    clear_has_pass_key();
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyCreate.pass_key)
}

// optional uint32 client_version = 6;
inline bool CMsgPracticeLobbyCreate::has_client_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_client_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPracticeLobbyCreate::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPracticeLobbyCreate::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyCreate::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.client_version)
  return client_version_;
}
inline void CMsgPracticeLobbyCreate::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCreate.client_version)
}

// optional .CMsgPracticeLobbySetDetails lobby_details = 7;
inline bool CMsgPracticeLobbyCreate::has_lobby_details() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_lobby_details() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPracticeLobbyCreate::clear_has_lobby_details() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPracticeLobbyCreate::clear_lobby_details() {
  if (lobby_details_ != NULL) lobby_details_->::CMsgPracticeLobbySetDetails::Clear();
  clear_has_lobby_details();
}
inline const ::CMsgPracticeLobbySetDetails& CMsgPracticeLobbyCreate::lobby_details() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.lobby_details)
  return lobby_details_ != NULL ? *lobby_details_ : *default_instance_->lobby_details_;
}
inline ::CMsgPracticeLobbySetDetails* CMsgPracticeLobbyCreate::mutable_lobby_details() {
  set_has_lobby_details();
  if (lobby_details_ == NULL) lobby_details_ = new ::CMsgPracticeLobbySetDetails;
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyCreate.lobby_details)
  return lobby_details_;
}
inline ::CMsgPracticeLobbySetDetails* CMsgPracticeLobbyCreate::release_lobby_details() {
  clear_has_lobby_details();
  ::CMsgPracticeLobbySetDetails* temp = lobby_details_;
  lobby_details_ = NULL;
  return temp;
}
inline void CMsgPracticeLobbyCreate::set_allocated_lobby_details(::CMsgPracticeLobbySetDetails* lobby_details) {
  delete lobby_details_;
  lobby_details_ = lobby_details;
  if (lobby_details) {
    set_has_lobby_details();
  } else {
    clear_has_lobby_details();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyCreate.lobby_details)
}

// optional .CMsgPracticeLobbyCreate.SaveGame save_game = 8;
inline bool CMsgPracticeLobbyCreate::has_save_game() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPracticeLobbyCreate::set_has_save_game() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPracticeLobbyCreate::clear_has_save_game() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPracticeLobbyCreate::clear_save_game() {
  if (save_game_ != NULL) save_game_->::CMsgPracticeLobbyCreate_SaveGame::Clear();
  clear_has_save_game();
}
inline const ::CMsgPracticeLobbyCreate_SaveGame& CMsgPracticeLobbyCreate::save_game() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCreate.save_game)
  return save_game_ != NULL ? *save_game_ : *default_instance_->save_game_;
}
inline ::CMsgPracticeLobbyCreate_SaveGame* CMsgPracticeLobbyCreate::mutable_save_game() {
  set_has_save_game();
  if (save_game_ == NULL) save_game_ = new ::CMsgPracticeLobbyCreate_SaveGame;
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyCreate.save_game)
  return save_game_;
}
inline ::CMsgPracticeLobbyCreate_SaveGame* CMsgPracticeLobbyCreate::release_save_game() {
  clear_has_save_game();
  ::CMsgPracticeLobbyCreate_SaveGame* temp = save_game_;
  save_game_ = NULL;
  return temp;
}
inline void CMsgPracticeLobbyCreate::set_allocated_save_game(::CMsgPracticeLobbyCreate_SaveGame* save_game) {
  delete save_game_;
  save_game_ = save_game;
  if (save_game) {
    set_has_save_game();
  } else {
    clear_has_save_game();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyCreate.save_game)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbySetTeamSlot

// optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];
inline bool CMsgPracticeLobbySetTeamSlot::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbySetTeamSlot::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbySetTeamSlot::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbySetTeamSlot::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::DOTA_GC_TEAM CMsgPracticeLobbySetTeamSlot::team() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetTeamSlot.team)
  return static_cast< ::DOTA_GC_TEAM >(team_);
}
inline void CMsgPracticeLobbySetTeamSlot::set_team(::DOTA_GC_TEAM value) {
  assert(::DOTA_GC_TEAM_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetTeamSlot.team)
}

// optional uint32 slot = 2;
inline bool CMsgPracticeLobbySetTeamSlot::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbySetTeamSlot::set_has_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbySetTeamSlot::clear_has_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbySetTeamSlot::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbySetTeamSlot::slot() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetTeamSlot.slot)
  return slot_;
}
inline void CMsgPracticeLobbySetTeamSlot::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetTeamSlot.slot)
}

// optional .DOTABotDifficulty bot_difficulty = 3 [default = BOT_DIFFICULTY_PASSIVE];
inline bool CMsgPracticeLobbySetTeamSlot::has_bot_difficulty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbySetTeamSlot::set_has_bot_difficulty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPracticeLobbySetTeamSlot::clear_has_bot_difficulty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPracticeLobbySetTeamSlot::clear_bot_difficulty() {
  bot_difficulty_ = 0;
  clear_has_bot_difficulty();
}
inline ::DOTABotDifficulty CMsgPracticeLobbySetTeamSlot::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetTeamSlot.bot_difficulty)
  return static_cast< ::DOTABotDifficulty >(bot_difficulty_);
}
inline void CMsgPracticeLobbySetTeamSlot::set_bot_difficulty(::DOTABotDifficulty value) {
  assert(::DOTABotDifficulty_IsValid(value));
  set_has_bot_difficulty();
  bot_difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetTeamSlot.bot_difficulty)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbySetCoach

// optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];
inline bool CMsgPracticeLobbySetCoach::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbySetCoach::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbySetCoach::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbySetCoach::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::DOTA_GC_TEAM CMsgPracticeLobbySetCoach::team() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbySetCoach.team)
  return static_cast< ::DOTA_GC_TEAM >(team_);
}
inline void CMsgPracticeLobbySetCoach::set_team(::DOTA_GC_TEAM value) {
  assert(::DOTA_GC_TEAM_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbySetCoach.team)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyJoinBroadcastChannel

// optional uint32 channel = 1;
inline bool CMsgPracticeLobbyJoinBroadcastChannel::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyJoinBroadcastChannel::channel() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoinBroadcastChannel.channel)
  return channel_;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoinBroadcastChannel.channel)
}

// optional string preferred_description = 2;
inline bool CMsgPracticeLobbyJoinBroadcastChannel::has_preferred_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_has_preferred_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_has_preferred_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_preferred_description() {
  if (preferred_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_description_->clear();
  }
  clear_has_preferred_description();
}
inline const ::std::string& CMsgPracticeLobbyJoinBroadcastChannel::preferred_description() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoinBroadcastChannel.preferred_description)
  return *preferred_description_;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_description(const ::std::string& value) {
  set_has_preferred_description();
  if (preferred_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_description_ = new ::std::string;
  }
  preferred_description_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoinBroadcastChannel.preferred_description)
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_description(const char* value) {
  set_has_preferred_description();
  if (preferred_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_description_ = new ::std::string;
  }
  preferred_description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyJoinBroadcastChannel.preferred_description)
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_description(const char* value, size_t size) {
  set_has_preferred_description();
  if (preferred_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_description_ = new ::std::string;
  }
  preferred_description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyJoinBroadcastChannel.preferred_description)
}
inline ::std::string* CMsgPracticeLobbyJoinBroadcastChannel::mutable_preferred_description() {
  set_has_preferred_description();
  if (preferred_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyJoinBroadcastChannel.preferred_description)
  return preferred_description_;
}
inline ::std::string* CMsgPracticeLobbyJoinBroadcastChannel::release_preferred_description() {
  clear_has_preferred_description();
  if (preferred_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = preferred_description_;
    preferred_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_allocated_preferred_description(::std::string* preferred_description) {
  if (preferred_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete preferred_description_;
  }
  if (preferred_description) {
    set_has_preferred_description();
    preferred_description_ = preferred_description;
  } else {
    clear_has_preferred_description();
    preferred_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyJoinBroadcastChannel.preferred_description)
}

// optional string preferred_country_code = 3;
inline bool CMsgPracticeLobbyJoinBroadcastChannel::has_preferred_country_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_has_preferred_country_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_has_preferred_country_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_preferred_country_code() {
  if (preferred_country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_country_code_->clear();
  }
  clear_has_preferred_country_code();
}
inline const ::std::string& CMsgPracticeLobbyJoinBroadcastChannel::preferred_country_code() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoinBroadcastChannel.preferred_country_code)
  return *preferred_country_code_;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_country_code(const ::std::string& value) {
  set_has_preferred_country_code();
  if (preferred_country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_country_code_ = new ::std::string;
  }
  preferred_country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoinBroadcastChannel.preferred_country_code)
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_country_code(const char* value) {
  set_has_preferred_country_code();
  if (preferred_country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_country_code_ = new ::std::string;
  }
  preferred_country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyJoinBroadcastChannel.preferred_country_code)
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_country_code(const char* value, size_t size) {
  set_has_preferred_country_code();
  if (preferred_country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_country_code_ = new ::std::string;
  }
  preferred_country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyJoinBroadcastChannel.preferred_country_code)
}
inline ::std::string* CMsgPracticeLobbyJoinBroadcastChannel::mutable_preferred_country_code() {
  set_has_preferred_country_code();
  if (preferred_country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyJoinBroadcastChannel.preferred_country_code)
  return preferred_country_code_;
}
inline ::std::string* CMsgPracticeLobbyJoinBroadcastChannel::release_preferred_country_code() {
  clear_has_preferred_country_code();
  if (preferred_country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = preferred_country_code_;
    preferred_country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_allocated_preferred_country_code(::std::string* preferred_country_code) {
  if (preferred_country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete preferred_country_code_;
  }
  if (preferred_country_code) {
    set_has_preferred_country_code();
    preferred_country_code_ = preferred_country_code;
  } else {
    clear_has_preferred_country_code();
    preferred_country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyJoinBroadcastChannel.preferred_country_code)
}

// optional string preferred_language_code = 4;
inline bool CMsgPracticeLobbyJoinBroadcastChannel::has_preferred_language_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_has_preferred_language_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_has_preferred_language_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::clear_preferred_language_code() {
  if (preferred_language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_language_code_->clear();
  }
  clear_has_preferred_language_code();
}
inline const ::std::string& CMsgPracticeLobbyJoinBroadcastChannel::preferred_language_code() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoinBroadcastChannel.preferred_language_code)
  return *preferred_language_code_;
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_language_code(const ::std::string& value) {
  set_has_preferred_language_code();
  if (preferred_language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_language_code_ = new ::std::string;
  }
  preferred_language_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoinBroadcastChannel.preferred_language_code)
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_language_code(const char* value) {
  set_has_preferred_language_code();
  if (preferred_language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_language_code_ = new ::std::string;
  }
  preferred_language_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyJoinBroadcastChannel.preferred_language_code)
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_preferred_language_code(const char* value, size_t size) {
  set_has_preferred_language_code();
  if (preferred_language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_language_code_ = new ::std::string;
  }
  preferred_language_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyJoinBroadcastChannel.preferred_language_code)
}
inline ::std::string* CMsgPracticeLobbyJoinBroadcastChannel::mutable_preferred_language_code() {
  set_has_preferred_language_code();
  if (preferred_language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_language_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyJoinBroadcastChannel.preferred_language_code)
  return preferred_language_code_;
}
inline ::std::string* CMsgPracticeLobbyJoinBroadcastChannel::release_preferred_language_code() {
  clear_has_preferred_language_code();
  if (preferred_language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = preferred_language_code_;
    preferred_language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyJoinBroadcastChannel::set_allocated_preferred_language_code(::std::string* preferred_language_code) {
  if (preferred_language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete preferred_language_code_;
  }
  if (preferred_language_code) {
    set_has_preferred_language_code();
    preferred_language_code_ = preferred_language_code;
  } else {
    clear_has_preferred_language_code();
    preferred_language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyJoinBroadcastChannel.preferred_language_code)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyCloseBroadcastChannel

// optional uint32 channel = 1;
inline bool CMsgPracticeLobbyCloseBroadcastChannel::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyCloseBroadcastChannel::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyCloseBroadcastChannel::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyCloseBroadcastChannel::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyCloseBroadcastChannel::channel() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyCloseBroadcastChannel.channel)
  return channel_;
}
inline void CMsgPracticeLobbyCloseBroadcastChannel::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyCloseBroadcastChannel.channel)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyToggleBroadcastChannelCameramanStatus

// -------------------------------------------------------------------

// CMsgPracticeLobbyKick

// optional uint32 account_id = 3;
inline bool CMsgPracticeLobbyKick::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyKick::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyKick::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyKick::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyKick::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyKick.account_id)
  return account_id_;
}
inline void CMsgPracticeLobbyKick::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyKick.account_id)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyKickFromTeam

// optional uint32 account_id = 1;
inline bool CMsgPracticeLobbyKickFromTeam::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyKickFromTeam::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyKickFromTeam::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyKickFromTeam::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyKickFromTeam::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyKickFromTeam.account_id)
  return account_id_;
}
inline void CMsgPracticeLobbyKickFromTeam::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyKickFromTeam.account_id)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyLeave

// -------------------------------------------------------------------

// CMsgPracticeLobbyLaunch

// optional uint32 client_version = 5;
inline bool CMsgPracticeLobbyLaunch::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyLaunch::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyLaunch::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyLaunch::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyLaunch::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyLaunch.client_version)
  return client_version_;
}
inline void CMsgPracticeLobbyLaunch::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyLaunch.client_version)
}

// -------------------------------------------------------------------

// CMsgApplyTeamToPracticeLobby

// optional uint32 team_id = 1;
inline bool CMsgApplyTeamToPracticeLobby::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgApplyTeamToPracticeLobby::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgApplyTeamToPracticeLobby::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgApplyTeamToPracticeLobby::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgApplyTeamToPracticeLobby::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyTeamToPracticeLobby.team_id)
  return team_id_;
}
inline void CMsgApplyTeamToPracticeLobby::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgApplyTeamToPracticeLobby.team_id)
}

// -------------------------------------------------------------------

// CMsgClearPracticeLobbyTeam

// -------------------------------------------------------------------

// CMsgPracticeLobbyList

// optional bool tournament_games = 1;
inline bool CMsgPracticeLobbyList::has_tournament_games() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyList::set_has_tournament_games() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyList::clear_has_tournament_games() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyList::clear_tournament_games() {
  tournament_games_ = false;
  clear_has_tournament_games();
}
inline bool CMsgPracticeLobbyList::tournament_games() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyList.tournament_games)
  return tournament_games_;
}
inline void CMsgPracticeLobbyList::set_tournament_games(bool value) {
  set_has_tournament_games();
  tournament_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyList.tournament_games)
}

// optional string pass_key = 2;
inline bool CMsgPracticeLobbyList::has_pass_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbyList::set_has_pass_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbyList::clear_has_pass_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbyList::clear_pass_key() {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_->clear();
  }
  clear_has_pass_key();
}
inline const ::std::string& CMsgPracticeLobbyList::pass_key() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyList.pass_key)
  return *pass_key_;
}
inline void CMsgPracticeLobbyList::set_pass_key(const ::std::string& value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyList.pass_key)
}
inline void CMsgPracticeLobbyList::set_pass_key(const char* value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyList.pass_key)
}
inline void CMsgPracticeLobbyList::set_pass_key(const char* value, size_t size) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyList.pass_key)
}
inline ::std::string* CMsgPracticeLobbyList::mutable_pass_key() {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyList.pass_key)
  return pass_key_;
}
inline ::std::string* CMsgPracticeLobbyList::release_pass_key() {
  clear_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pass_key_;
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyList::set_allocated_pass_key(::std::string* pass_key) {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pass_key_;
  }
  if (pass_key) {
    set_has_pass_key();
    pass_key_ = pass_key;
  } else {
    clear_has_pass_key();
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyList.pass_key)
}

// optional uint32 region = 3;
inline bool CMsgPracticeLobbyList::has_region() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbyList::set_has_region() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPracticeLobbyList::clear_has_region() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPracticeLobbyList::clear_region() {
  region_ = 0u;
  clear_has_region();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyList::region() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyList.region)
  return region_;
}
inline void CMsgPracticeLobbyList::set_region(::google::protobuf::uint32 value) {
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyList.region)
}

// optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgPracticeLobbyList::has_game_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPracticeLobbyList::set_has_game_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPracticeLobbyList::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPracticeLobbyList::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CMsgPracticeLobbyList::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyList.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CMsgPracticeLobbyList::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyList.game_mode)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyListResponseEntry_CLobbyMember

// optional uint32 account_id = 1;
inline bool CMsgPracticeLobbyListResponseEntry_CLobbyMember::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry_CLobbyMember::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.CLobbyMember.account_id)
  return account_id_;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.CLobbyMember.account_id)
}

// optional string player_name = 2;
inline bool CMsgPracticeLobbyListResponseEntry_CLobbyMember::has_player_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::set_has_player_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& CMsgPracticeLobbyListResponseEntry_CLobbyMember::player_name() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.CLobbyMember.player_name)
  return *player_name_;
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.CLobbyMember.player_name)
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyListResponseEntry.CLobbyMember.player_name)
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyListResponseEntry.CLobbyMember.player_name)
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry_CLobbyMember::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyListResponseEntry.CLobbyMember.player_name)
  return player_name_;
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry_CLobbyMember::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyListResponseEntry_CLobbyMember::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyListResponseEntry.CLobbyMember.player_name)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyListResponseEntry

// optional uint64 id = 1;
inline bool CMsgPracticeLobbyListResponseEntry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbyListResponseEntry::id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.id)
  return id_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.id)
}

// optional uint32 tournament_id = 3;
inline bool CMsgPracticeLobbyListResponseEntry::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_tournament_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_tournament_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_tournament_id() {
  tournament_id_ = 0u;
  clear_has_tournament_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::tournament_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.tournament_id)
  return tournament_id_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_tournament_id(::google::protobuf::uint32 value) {
  set_has_tournament_id();
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.tournament_id)
}

// optional uint32 tournament_game_id = 4;
inline bool CMsgPracticeLobbyListResponseEntry::has_tournament_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_tournament_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_tournament_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_tournament_game_id() {
  tournament_game_id_ = 0u;
  clear_has_tournament_game_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::tournament_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.tournament_game_id)
  return tournament_game_id_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_tournament_game_id(::google::protobuf::uint32 value) {
  set_has_tournament_game_id();
  tournament_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.tournament_game_id)
}

// repeated .CMsgPracticeLobbyListResponseEntry.CLobbyMember members = 5;
inline int CMsgPracticeLobbyListResponseEntry::members_size() const {
  return members_.size();
}
inline void CMsgPracticeLobbyListResponseEntry::clear_members() {
  members_.Clear();
}
inline const ::CMsgPracticeLobbyListResponseEntry_CLobbyMember& CMsgPracticeLobbyListResponseEntry::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.members)
  return members_.Get(index);
}
inline ::CMsgPracticeLobbyListResponseEntry_CLobbyMember* CMsgPracticeLobbyListResponseEntry::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyListResponseEntry.members)
  return members_.Mutable(index);
}
inline ::CMsgPracticeLobbyListResponseEntry_CLobbyMember* CMsgPracticeLobbyListResponseEntry::add_members() {
  // @@protoc_insertion_point(field_add:CMsgPracticeLobbyListResponseEntry.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry_CLobbyMember >&
CMsgPracticeLobbyListResponseEntry::members() const {
  // @@protoc_insertion_point(field_list:CMsgPracticeLobbyListResponseEntry.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry_CLobbyMember >*
CMsgPracticeLobbyListResponseEntry::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPracticeLobbyListResponseEntry.members)
  return &members_;
}

// optional bool requires_pass_key = 6;
inline bool CMsgPracticeLobbyListResponseEntry::has_requires_pass_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_requires_pass_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_requires_pass_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_requires_pass_key() {
  requires_pass_key_ = false;
  clear_has_requires_pass_key();
}
inline bool CMsgPracticeLobbyListResponseEntry::requires_pass_key() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.requires_pass_key)
  return requires_pass_key_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_requires_pass_key(bool value) {
  set_has_requires_pass_key();
  requires_pass_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.requires_pass_key)
}

// optional uint32 leader_account_id = 7;
inline bool CMsgPracticeLobbyListResponseEntry::has_leader_account_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_leader_account_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_leader_account_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_leader_account_id() {
  leader_account_id_ = 0u;
  clear_has_leader_account_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::leader_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.leader_account_id)
  return leader_account_id_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_leader_account_id(::google::protobuf::uint32 value) {
  set_has_leader_account_id();
  leader_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.leader_account_id)
}

// optional uint32 guild_id = 8;
inline bool CMsgPracticeLobbyListResponseEntry::has_guild_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_guild_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.guild_id)
  return guild_id_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.guild_id)
}

// optional uint64 guild_logo = 9;
inline bool CMsgPracticeLobbyListResponseEntry::has_guild_logo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_guild_logo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_guild_logo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_guild_logo() {
  guild_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_guild_logo();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbyListResponseEntry::guild_logo() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.guild_logo)
  return guild_logo_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_guild_logo(::google::protobuf::uint64 value) {
  set_has_guild_logo();
  guild_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.guild_logo)
}

// optional string name = 10;
inline bool CMsgPracticeLobbyListResponseEntry::has_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgPracticeLobbyListResponseEntry::name() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.name)
  return *name_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.name)
}
inline void CMsgPracticeLobbyListResponseEntry::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyListResponseEntry.name)
}
inline void CMsgPracticeLobbyListResponseEntry::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyListResponseEntry.name)
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyListResponseEntry.name)
  return name_;
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyListResponseEntry::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyListResponseEntry.name)
}

// optional string custom_game_mode = 11;
inline bool CMsgPracticeLobbyListResponseEntry::has_custom_game_mode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_custom_game_mode() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_custom_game_mode() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_custom_game_mode() {
  if (custom_game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_->clear();
  }
  clear_has_custom_game_mode();
}
inline const ::std::string& CMsgPracticeLobbyListResponseEntry::custom_game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.custom_game_mode)
  return *custom_game_mode_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_custom_game_mode(const ::std::string& value) {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  custom_game_mode_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.custom_game_mode)
}
inline void CMsgPracticeLobbyListResponseEntry::set_custom_game_mode(const char* value) {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  custom_game_mode_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyListResponseEntry.custom_game_mode)
}
inline void CMsgPracticeLobbyListResponseEntry::set_custom_game_mode(const char* value, size_t size) {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  custom_game_mode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyListResponseEntry.custom_game_mode)
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry::mutable_custom_game_mode() {
  set_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_game_mode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyListResponseEntry.custom_game_mode)
  return custom_game_mode_;
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry::release_custom_game_mode() {
  clear_has_custom_game_mode();
  if (custom_game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_game_mode_;
    custom_game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyListResponseEntry::set_allocated_custom_game_mode(::std::string* custom_game_mode) {
  if (custom_game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_game_mode_;
  }
  if (custom_game_mode) {
    set_has_custom_game_mode();
    custom_game_mode_ = custom_game_mode;
  } else {
    clear_has_custom_game_mode();
    custom_game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyListResponseEntry.custom_game_mode)
}

// optional .DOTA_GameMode game_mode = 12 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgPracticeLobbyListResponseEntry::has_game_mode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_game_mode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CMsgPracticeLobbyListResponseEntry::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CMsgPracticeLobbyListResponseEntry::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.game_mode)
}

// optional bool friend_present = 13;
inline bool CMsgPracticeLobbyListResponseEntry::has_friend_present() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_friend_present() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_friend_present() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_friend_present() {
  friend_present_ = false;
  clear_has_friend_present();
}
inline bool CMsgPracticeLobbyListResponseEntry::friend_present() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.friend_present)
  return friend_present_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_friend_present(bool value) {
  set_has_friend_present();
  friend_present_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.friend_present)
}

// optional uint32 players = 14;
inline bool CMsgPracticeLobbyListResponseEntry::has_players() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_players() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_players() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_players() {
  players_ = 0u;
  clear_has_players();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::players() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.players)
  return players_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_players(::google::protobuf::uint32 value) {
  set_has_players();
  players_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.players)
}

// optional string custom_map_name = 15;
inline bool CMsgPracticeLobbyListResponseEntry::has_custom_map_name() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_custom_map_name() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_custom_map_name() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_custom_map_name() {
  if (custom_map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_->clear();
  }
  clear_has_custom_map_name();
}
inline const ::std::string& CMsgPracticeLobbyListResponseEntry::custom_map_name() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.custom_map_name)
  return *custom_map_name_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_custom_map_name(const ::std::string& value) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.custom_map_name)
}
inline void CMsgPracticeLobbyListResponseEntry::set_custom_map_name(const char* value) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyListResponseEntry.custom_map_name)
}
inline void CMsgPracticeLobbyListResponseEntry::set_custom_map_name(const char* value, size_t size) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyListResponseEntry.custom_map_name)
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry::mutable_custom_map_name() {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyListResponseEntry.custom_map_name)
  return custom_map_name_;
}
inline ::std::string* CMsgPracticeLobbyListResponseEntry::release_custom_map_name() {
  clear_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_map_name_;
    custom_map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyListResponseEntry::set_allocated_custom_map_name(::std::string* custom_map_name) {
  if (custom_map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_map_name_;
  }
  if (custom_map_name) {
    set_has_custom_map_name();
    custom_map_name_ = custom_map_name;
  } else {
    clear_has_custom_map_name();
    custom_map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyListResponseEntry.custom_map_name)
}

// optional uint32 max_player_count = 16;
inline bool CMsgPracticeLobbyListResponseEntry::has_max_player_count() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_max_player_count() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_max_player_count() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_max_player_count() {
  max_player_count_ = 0u;
  clear_has_max_player_count();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::max_player_count() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.max_player_count)
  return max_player_count_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_max_player_count(::google::protobuf::uint32 value) {
  set_has_max_player_count();
  max_player_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.max_player_count)
}

// optional uint32 server_region = 17;
inline bool CMsgPracticeLobbyListResponseEntry::has_server_region() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_server_region() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_server_region() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.server_region)
  return server_region_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.server_region)
}

// optional uint32 lan_host_ping_to_server_region = 18;
inline bool CMsgPracticeLobbyListResponseEntry::has_lan_host_ping_to_server_region() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_lan_host_ping_to_server_region() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_lan_host_ping_to_server_region() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_lan_host_ping_to_server_region() {
  lan_host_ping_to_server_region_ = 0u;
  clear_has_lan_host_ping_to_server_region();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::lan_host_ping_to_server_region() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.lan_host_ping_to_server_region)
  return lan_host_ping_to_server_region_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_lan_host_ping_to_server_region(::google::protobuf::uint32 value) {
  set_has_lan_host_ping_to_server_region();
  lan_host_ping_to_server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.lan_host_ping_to_server_region)
}

// optional uint32 league_id = 19;
inline bool CMsgPracticeLobbyListResponseEntry::has_league_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgPracticeLobbyListResponseEntry::set_has_league_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_has_league_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgPracticeLobbyListResponseEntry::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyListResponseEntry::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponseEntry.league_id)
  return league_id_;
}
inline void CMsgPracticeLobbyListResponseEntry::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponseEntry.league_id)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyListResponse

// optional bool tournament_games = 1;
inline bool CMsgPracticeLobbyListResponse::has_tournament_games() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyListResponse::set_has_tournament_games() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyListResponse::clear_has_tournament_games() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyListResponse::clear_tournament_games() {
  tournament_games_ = false;
  clear_has_tournament_games();
}
inline bool CMsgPracticeLobbyListResponse::tournament_games() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponse.tournament_games)
  return tournament_games_;
}
inline void CMsgPracticeLobbyListResponse::set_tournament_games(bool value) {
  set_has_tournament_games();
  tournament_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyListResponse.tournament_games)
}

// repeated .CMsgPracticeLobbyListResponseEntry lobbies = 2;
inline int CMsgPracticeLobbyListResponse::lobbies_size() const {
  return lobbies_.size();
}
inline void CMsgPracticeLobbyListResponse::clear_lobbies() {
  lobbies_.Clear();
}
inline const ::CMsgPracticeLobbyListResponseEntry& CMsgPracticeLobbyListResponse::lobbies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyListResponse.lobbies)
  return lobbies_.Get(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgPracticeLobbyListResponse::mutable_lobbies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyListResponse.lobbies)
  return lobbies_.Mutable(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgPracticeLobbyListResponse::add_lobbies() {
  // @@protoc_insertion_point(field_add:CMsgPracticeLobbyListResponse.lobbies)
  return lobbies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
CMsgPracticeLobbyListResponse::lobbies() const {
  // @@protoc_insertion_point(field_list:CMsgPracticeLobbyListResponse.lobbies)
  return lobbies_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
CMsgPracticeLobbyListResponse::mutable_lobbies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPracticeLobbyListResponse.lobbies)
  return &lobbies_;
}

// -------------------------------------------------------------------

// CMsgLobbyList

// optional uint32 server_region = 1 [default = 0];
inline bool CMsgLobbyList::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLobbyList::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLobbyList::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLobbyList::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgLobbyList::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgLobbyList.server_region)
  return server_region_;
}
inline void CMsgLobbyList::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgLobbyList.server_region)
}

// optional .DOTA_GameMode game_mode = 2 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgLobbyList::has_game_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLobbyList::set_has_game_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLobbyList::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLobbyList::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CMsgLobbyList::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgLobbyList.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CMsgLobbyList::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgLobbyList.game_mode)
}

// -------------------------------------------------------------------

// CMsgLobbyListResponse

// repeated .CMsgPracticeLobbyListResponseEntry lobbies = 1;
inline int CMsgLobbyListResponse::lobbies_size() const {
  return lobbies_.size();
}
inline void CMsgLobbyListResponse::clear_lobbies() {
  lobbies_.Clear();
}
inline const ::CMsgPracticeLobbyListResponseEntry& CMsgLobbyListResponse::lobbies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgLobbyListResponse.lobbies)
  return lobbies_.Get(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgLobbyListResponse::mutable_lobbies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgLobbyListResponse.lobbies)
  return lobbies_.Mutable(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgLobbyListResponse::add_lobbies() {
  // @@protoc_insertion_point(field_add:CMsgLobbyListResponse.lobbies)
  return lobbies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
CMsgLobbyListResponse::lobbies() const {
  // @@protoc_insertion_point(field_list:CMsgLobbyListResponse.lobbies)
  return lobbies_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
CMsgLobbyListResponse::mutable_lobbies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgLobbyListResponse.lobbies)
  return &lobbies_;
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyJoin

// optional uint64 lobby_id = 1;
inline bool CMsgPracticeLobbyJoin::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyJoin::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyJoin::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyJoin::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbyJoin::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoin.lobby_id)
  return lobby_id_;
}
inline void CMsgPracticeLobbyJoin::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoin.lobby_id)
}

// optional uint32 client_version = 2;
inline bool CMsgPracticeLobbyJoin::has_client_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPracticeLobbyJoin::set_has_client_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPracticeLobbyJoin::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPracticeLobbyJoin::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyJoin::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoin.client_version)
  return client_version_;
}
inline void CMsgPracticeLobbyJoin::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoin.client_version)
}

// optional string pass_key = 3;
inline bool CMsgPracticeLobbyJoin::has_pass_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPracticeLobbyJoin::set_has_pass_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPracticeLobbyJoin::clear_has_pass_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPracticeLobbyJoin::clear_pass_key() {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_->clear();
  }
  clear_has_pass_key();
}
inline const ::std::string& CMsgPracticeLobbyJoin::pass_key() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoin.pass_key)
  return *pass_key_;
}
inline void CMsgPracticeLobbyJoin::set_pass_key(const ::std::string& value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoin.pass_key)
}
inline void CMsgPracticeLobbyJoin::set_pass_key(const char* value) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPracticeLobbyJoin.pass_key)
}
inline void CMsgPracticeLobbyJoin::set_pass_key(const char* value, size_t size) {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  pass_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPracticeLobbyJoin.pass_key)
}
inline ::std::string* CMsgPracticeLobbyJoin::mutable_pass_key() {
  set_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPracticeLobbyJoin.pass_key)
  return pass_key_;
}
inline ::std::string* CMsgPracticeLobbyJoin::release_pass_key() {
  clear_has_pass_key();
  if (pass_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pass_key_;
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPracticeLobbyJoin::set_allocated_pass_key(::std::string* pass_key) {
  if (pass_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pass_key_;
  }
  if (pass_key) {
    set_has_pass_key();
    pass_key_ = pass_key;
  } else {
    clear_has_pass_key();
    pass_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPracticeLobbyJoin.pass_key)
}

// optional fixed64 custom_game_crc = 4;
inline bool CMsgPracticeLobbyJoin::has_custom_game_crc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPracticeLobbyJoin::set_has_custom_game_crc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPracticeLobbyJoin::clear_has_custom_game_crc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPracticeLobbyJoin::clear_custom_game_crc() {
  custom_game_crc_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_crc();
}
inline ::google::protobuf::uint64 CMsgPracticeLobbyJoin::custom_game_crc() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoin.custom_game_crc)
  return custom_game_crc_;
}
inline void CMsgPracticeLobbyJoin::set_custom_game_crc(::google::protobuf::uint64 value) {
  set_has_custom_game_crc();
  custom_game_crc_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoin.custom_game_crc)
}

// optional fixed32 custom_game_timestamp = 5;
inline bool CMsgPracticeLobbyJoin::has_custom_game_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPracticeLobbyJoin::set_has_custom_game_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPracticeLobbyJoin::clear_has_custom_game_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPracticeLobbyJoin::clear_custom_game_timestamp() {
  custom_game_timestamp_ = 0u;
  clear_has_custom_game_timestamp();
}
inline ::google::protobuf::uint32 CMsgPracticeLobbyJoin::custom_game_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoin.custom_game_timestamp)
  return custom_game_timestamp_;
}
inline void CMsgPracticeLobbyJoin::set_custom_game_timestamp(::google::protobuf::uint32 value) {
  set_has_custom_game_timestamp();
  custom_game_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoin.custom_game_timestamp)
}

// -------------------------------------------------------------------

// CMsgPracticeLobbyJoinResponse

// optional .DOTAJoinLobbyResult result = 1 [default = DOTA_JOIN_RESULT_SUCCESS];
inline bool CMsgPracticeLobbyJoinResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPracticeLobbyJoinResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPracticeLobbyJoinResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPracticeLobbyJoinResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::DOTAJoinLobbyResult CMsgPracticeLobbyJoinResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgPracticeLobbyJoinResponse.result)
  return static_cast< ::DOTAJoinLobbyResult >(result_);
}
inline void CMsgPracticeLobbyJoinResponse::set_result(::DOTAJoinLobbyResult value) {
  assert(::DOTAJoinLobbyResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgPracticeLobbyJoinResponse.result)
}

// -------------------------------------------------------------------

// CMsgFriendPracticeLobbyListRequest

// repeated uint32 friends = 1;
inline int CMsgFriendPracticeLobbyListRequest::friends_size() const {
  return friends_.size();
}
inline void CMsgFriendPracticeLobbyListRequest::clear_friends() {
  friends_.Clear();
}
inline ::google::protobuf::uint32 CMsgFriendPracticeLobbyListRequest::friends(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFriendPracticeLobbyListRequest.friends)
  return friends_.Get(index);
}
inline void CMsgFriendPracticeLobbyListRequest::set_friends(int index, ::google::protobuf::uint32 value) {
  friends_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgFriendPracticeLobbyListRequest.friends)
}
inline void CMsgFriendPracticeLobbyListRequest::add_friends(::google::protobuf::uint32 value) {
  friends_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgFriendPracticeLobbyListRequest.friends)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgFriendPracticeLobbyListRequest::friends() const {
  // @@protoc_insertion_point(field_list:CMsgFriendPracticeLobbyListRequest.friends)
  return friends_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgFriendPracticeLobbyListRequest::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFriendPracticeLobbyListRequest.friends)
  return &friends_;
}

// -------------------------------------------------------------------

// CMsgFriendPracticeLobbyListResponse

// repeated .CMsgPracticeLobbyListResponseEntry lobbies = 1;
inline int CMsgFriendPracticeLobbyListResponse::lobbies_size() const {
  return lobbies_.size();
}
inline void CMsgFriendPracticeLobbyListResponse::clear_lobbies() {
  lobbies_.Clear();
}
inline const ::CMsgPracticeLobbyListResponseEntry& CMsgFriendPracticeLobbyListResponse::lobbies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFriendPracticeLobbyListResponse.lobbies)
  return lobbies_.Get(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgFriendPracticeLobbyListResponse::mutable_lobbies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgFriendPracticeLobbyListResponse.lobbies)
  return lobbies_.Mutable(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgFriendPracticeLobbyListResponse::add_lobbies() {
  // @@protoc_insertion_point(field_add:CMsgFriendPracticeLobbyListResponse.lobbies)
  return lobbies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
CMsgFriendPracticeLobbyListResponse::lobbies() const {
  // @@protoc_insertion_point(field_list:CMsgFriendPracticeLobbyListResponse.lobbies)
  return lobbies_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
CMsgFriendPracticeLobbyListResponse::mutable_lobbies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFriendPracticeLobbyListResponse.lobbies)
  return &lobbies_;
}

// -------------------------------------------------------------------

// CMsgGuildmatePracticeLobbyListRequest

// repeated uint32 guilds = 1;
inline int CMsgGuildmatePracticeLobbyListRequest::guilds_size() const {
  return guilds_.size();
}
inline void CMsgGuildmatePracticeLobbyListRequest::clear_guilds() {
  guilds_.Clear();
}
inline ::google::protobuf::uint32 CMsgGuildmatePracticeLobbyListRequest::guilds(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildmatePracticeLobbyListRequest.guilds)
  return guilds_.Get(index);
}
inline void CMsgGuildmatePracticeLobbyListRequest::set_guilds(int index, ::google::protobuf::uint32 value) {
  guilds_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGuildmatePracticeLobbyListRequest.guilds)
}
inline void CMsgGuildmatePracticeLobbyListRequest::add_guilds(::google::protobuf::uint32 value) {
  guilds_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGuildmatePracticeLobbyListRequest.guilds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGuildmatePracticeLobbyListRequest::guilds() const {
  // @@protoc_insertion_point(field_list:CMsgGuildmatePracticeLobbyListRequest.guilds)
  return guilds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGuildmatePracticeLobbyListRequest::mutable_guilds() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildmatePracticeLobbyListRequest.guilds)
  return &guilds_;
}

// -------------------------------------------------------------------

// CMsgGuildmatePracticeLobbyListResponse

// repeated .CMsgPracticeLobbyListResponseEntry lobbies = 1;
inline int CMsgGuildmatePracticeLobbyListResponse::lobbies_size() const {
  return lobbies_.size();
}
inline void CMsgGuildmatePracticeLobbyListResponse::clear_lobbies() {
  lobbies_.Clear();
}
inline const ::CMsgPracticeLobbyListResponseEntry& CMsgGuildmatePracticeLobbyListResponse::lobbies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildmatePracticeLobbyListResponse.lobbies)
  return lobbies_.Get(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgGuildmatePracticeLobbyListResponse::mutable_lobbies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGuildmatePracticeLobbyListResponse.lobbies)
  return lobbies_.Mutable(index);
}
inline ::CMsgPracticeLobbyListResponseEntry* CMsgGuildmatePracticeLobbyListResponse::add_lobbies() {
  // @@protoc_insertion_point(field_add:CMsgGuildmatePracticeLobbyListResponse.lobbies)
  return lobbies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >&
CMsgGuildmatePracticeLobbyListResponse::lobbies() const {
  // @@protoc_insertion_point(field_list:CMsgGuildmatePracticeLobbyListResponse.lobbies)
  return lobbies_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPracticeLobbyListResponseEntry >*
CMsgGuildmatePracticeLobbyListResponse::mutable_lobbies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildmatePracticeLobbyListResponse.lobbies)
  return &lobbies_;
}

// -------------------------------------------------------------------

// CMsgJoinableCustomGameModesRequest

// optional uint32 server_region = 1;
inline bool CMsgJoinableCustomGameModesRequest::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJoinableCustomGameModesRequest::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJoinableCustomGameModesRequest::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJoinableCustomGameModesRequest::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomGameModesRequest::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomGameModesRequest.server_region)
  return server_region_;
}
inline void CMsgJoinableCustomGameModesRequest::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomGameModesRequest.server_region)
}

// -------------------------------------------------------------------

// CMsgJoinableCustomGameModesResponseEntry

// optional uint64 custom_game_id = 1;
inline bool CMsgJoinableCustomGameModesResponseEntry::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJoinableCustomGameModesResponseEntry::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJoinableCustomGameModesResponseEntry::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJoinableCustomGameModesResponseEntry::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgJoinableCustomGameModesResponseEntry::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomGameModesResponseEntry.custom_game_id)
  return custom_game_id_;
}
inline void CMsgJoinableCustomGameModesResponseEntry::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomGameModesResponseEntry.custom_game_id)
}

// optional uint32 lobby_count = 2;
inline bool CMsgJoinableCustomGameModesResponseEntry::has_lobby_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJoinableCustomGameModesResponseEntry::set_has_lobby_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJoinableCustomGameModesResponseEntry::clear_has_lobby_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJoinableCustomGameModesResponseEntry::clear_lobby_count() {
  lobby_count_ = 0u;
  clear_has_lobby_count();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomGameModesResponseEntry::lobby_count() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomGameModesResponseEntry.lobby_count)
  return lobby_count_;
}
inline void CMsgJoinableCustomGameModesResponseEntry::set_lobby_count(::google::protobuf::uint32 value) {
  set_has_lobby_count();
  lobby_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomGameModesResponseEntry.lobby_count)
}

// optional uint32 player_count = 3;
inline bool CMsgJoinableCustomGameModesResponseEntry::has_player_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgJoinableCustomGameModesResponseEntry::set_has_player_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgJoinableCustomGameModesResponseEntry::clear_has_player_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgJoinableCustomGameModesResponseEntry::clear_player_count() {
  player_count_ = 0u;
  clear_has_player_count();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomGameModesResponseEntry::player_count() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomGameModesResponseEntry.player_count)
  return player_count_;
}
inline void CMsgJoinableCustomGameModesResponseEntry::set_player_count(::google::protobuf::uint32 value) {
  set_has_player_count();
  player_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomGameModesResponseEntry.player_count)
}

// -------------------------------------------------------------------

// CMsgJoinableCustomGameModesResponse

// repeated .CMsgJoinableCustomGameModesResponseEntry game_modes = 1;
inline int CMsgJoinableCustomGameModesResponse::game_modes_size() const {
  return game_modes_.size();
}
inline void CMsgJoinableCustomGameModesResponse::clear_game_modes() {
  game_modes_.Clear();
}
inline const ::CMsgJoinableCustomGameModesResponseEntry& CMsgJoinableCustomGameModesResponse::game_modes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomGameModesResponse.game_modes)
  return game_modes_.Get(index);
}
inline ::CMsgJoinableCustomGameModesResponseEntry* CMsgJoinableCustomGameModesResponse::mutable_game_modes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgJoinableCustomGameModesResponse.game_modes)
  return game_modes_.Mutable(index);
}
inline ::CMsgJoinableCustomGameModesResponseEntry* CMsgJoinableCustomGameModesResponse::add_game_modes() {
  // @@protoc_insertion_point(field_add:CMsgJoinableCustomGameModesResponse.game_modes)
  return game_modes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomGameModesResponseEntry >&
CMsgJoinableCustomGameModesResponse::game_modes() const {
  // @@protoc_insertion_point(field_list:CMsgJoinableCustomGameModesResponse.game_modes)
  return game_modes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomGameModesResponseEntry >*
CMsgJoinableCustomGameModesResponse::mutable_game_modes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgJoinableCustomGameModesResponse.game_modes)
  return &game_modes_;
}

// -------------------------------------------------------------------

// CMsgJoinableCustomLobbiesRequest

// optional uint32 server_region = 1;
inline bool CMsgJoinableCustomLobbiesRequest::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJoinableCustomLobbiesRequest::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJoinableCustomLobbiesRequest::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJoinableCustomLobbiesRequest::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomLobbiesRequest::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesRequest.server_region)
  return server_region_;
}
inline void CMsgJoinableCustomLobbiesRequest::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesRequest.server_region)
}

// optional uint64 custom_game_id = 2;
inline bool CMsgJoinableCustomLobbiesRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJoinableCustomLobbiesRequest::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJoinableCustomLobbiesRequest::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJoinableCustomLobbiesRequest::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgJoinableCustomLobbiesRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgJoinableCustomLobbiesRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgJoinableCustomLobbiesResponseEntry

// optional fixed64 lobby_id = 1;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgJoinableCustomLobbiesResponseEntry::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.lobby_id)
  return lobby_id_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.lobby_id)
}

// optional uint64 custom_game_id = 2;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgJoinableCustomLobbiesResponseEntry::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.custom_game_id)
  return custom_game_id_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.custom_game_id)
}

// optional string lobby_name = 3;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_lobby_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_lobby_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_lobby_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_lobby_name() {
  if (lobby_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lobby_name_->clear();
  }
  clear_has_lobby_name();
}
inline const ::std::string& CMsgJoinableCustomLobbiesResponseEntry::lobby_name() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.lobby_name)
  return *lobby_name_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_lobby_name(const ::std::string& value) {
  set_has_lobby_name();
  if (lobby_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lobby_name_ = new ::std::string;
  }
  lobby_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.lobby_name)
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_lobby_name(const char* value) {
  set_has_lobby_name();
  if (lobby_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lobby_name_ = new ::std::string;
  }
  lobby_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgJoinableCustomLobbiesResponseEntry.lobby_name)
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_lobby_name(const char* value, size_t size) {
  set_has_lobby_name();
  if (lobby_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lobby_name_ = new ::std::string;
  }
  lobby_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgJoinableCustomLobbiesResponseEntry.lobby_name)
}
inline ::std::string* CMsgJoinableCustomLobbiesResponseEntry::mutable_lobby_name() {
  set_has_lobby_name();
  if (lobby_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lobby_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgJoinableCustomLobbiesResponseEntry.lobby_name)
  return lobby_name_;
}
inline ::std::string* CMsgJoinableCustomLobbiesResponseEntry::release_lobby_name() {
  clear_has_lobby_name();
  if (lobby_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lobby_name_;
    lobby_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_allocated_lobby_name(::std::string* lobby_name) {
  if (lobby_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lobby_name_;
  }
  if (lobby_name) {
    set_has_lobby_name();
    lobby_name_ = lobby_name;
  } else {
    clear_has_lobby_name();
    lobby_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgJoinableCustomLobbiesResponseEntry.lobby_name)
}

// optional uint32 member_count = 4;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_member_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_member_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_member_count() {
  member_count_ = 0u;
  clear_has_member_count();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomLobbiesResponseEntry::member_count() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.member_count)
  return member_count_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_member_count(::google::protobuf::uint32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.member_count)
}

// optional uint32 leader_account_id = 5;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_leader_account_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_leader_account_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_leader_account_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_leader_account_id() {
  leader_account_id_ = 0u;
  clear_has_leader_account_id();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomLobbiesResponseEntry::leader_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.leader_account_id)
  return leader_account_id_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_leader_account_id(::google::protobuf::uint32 value) {
  set_has_leader_account_id();
  leader_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.leader_account_id)
}

// optional string leader_name = 6;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_leader_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_leader_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_leader_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_leader_name() {
  if (leader_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leader_name_->clear();
  }
  clear_has_leader_name();
}
inline const ::std::string& CMsgJoinableCustomLobbiesResponseEntry::leader_name() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.leader_name)
  return *leader_name_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_leader_name(const ::std::string& value) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.leader_name)
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_leader_name(const char* value) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgJoinableCustomLobbiesResponseEntry.leader_name)
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_leader_name(const char* value, size_t size) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgJoinableCustomLobbiesResponseEntry.leader_name)
}
inline ::std::string* CMsgJoinableCustomLobbiesResponseEntry::mutable_leader_name() {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leader_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgJoinableCustomLobbiesResponseEntry.leader_name)
  return leader_name_;
}
inline ::std::string* CMsgJoinableCustomLobbiesResponseEntry::release_leader_name() {
  clear_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = leader_name_;
    leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_allocated_leader_name(::std::string* leader_name) {
  if (leader_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete leader_name_;
  }
  if (leader_name) {
    set_has_leader_name();
    leader_name_ = leader_name;
  } else {
    clear_has_leader_name();
    leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgJoinableCustomLobbiesResponseEntry.leader_name)
}

// optional string custom_map_name = 7;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_custom_map_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_custom_map_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_custom_map_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_custom_map_name() {
  if (custom_map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_->clear();
  }
  clear_has_custom_map_name();
}
inline const ::std::string& CMsgJoinableCustomLobbiesResponseEntry::custom_map_name() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.custom_map_name)
  return *custom_map_name_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_custom_map_name(const ::std::string& value) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.custom_map_name)
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_custom_map_name(const char* value) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgJoinableCustomLobbiesResponseEntry.custom_map_name)
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_custom_map_name(const char* value, size_t size) {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  custom_map_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgJoinableCustomLobbiesResponseEntry.custom_map_name)
}
inline ::std::string* CMsgJoinableCustomLobbiesResponseEntry::mutable_custom_map_name() {
  set_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_map_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgJoinableCustomLobbiesResponseEntry.custom_map_name)
  return custom_map_name_;
}
inline ::std::string* CMsgJoinableCustomLobbiesResponseEntry::release_custom_map_name() {
  clear_has_custom_map_name();
  if (custom_map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_map_name_;
    custom_map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_allocated_custom_map_name(::std::string* custom_map_name) {
  if (custom_map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_map_name_;
  }
  if (custom_map_name) {
    set_has_custom_map_name();
    custom_map_name_ = custom_map_name;
  } else {
    clear_has_custom_map_name();
    custom_map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgJoinableCustomLobbiesResponseEntry.custom_map_name)
}

// optional uint32 max_player_count = 8;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_max_player_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_max_player_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_max_player_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_max_player_count() {
  max_player_count_ = 0u;
  clear_has_max_player_count();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomLobbiesResponseEntry::max_player_count() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.max_player_count)
  return max_player_count_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_max_player_count(::google::protobuf::uint32 value) {
  set_has_max_player_count();
  max_player_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.max_player_count)
}

// optional uint32 server_region = 9;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_server_region() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_server_region() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomLobbiesResponseEntry::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.server_region)
  return server_region_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.server_region)
}

// optional uint32 lan_host_ping_to_server_region = 10;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_lan_host_ping_to_server_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_lan_host_ping_to_server_region() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_lan_host_ping_to_server_region() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_lan_host_ping_to_server_region() {
  lan_host_ping_to_server_region_ = 0u;
  clear_has_lan_host_ping_to_server_region();
}
inline ::google::protobuf::uint32 CMsgJoinableCustomLobbiesResponseEntry::lan_host_ping_to_server_region() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.lan_host_ping_to_server_region)
  return lan_host_ping_to_server_region_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_lan_host_ping_to_server_region(::google::protobuf::uint32 value) {
  set_has_lan_host_ping_to_server_region();
  lan_host_ping_to_server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.lan_host_ping_to_server_region)
}

// optional bool has_pass_key = 11;
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_has_pass_key() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_has_pass_key() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_has_pass_key() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::clear_has_pass_key() {
  has_pass_key_ = false;
  clear_has_has_pass_key();
}
inline bool CMsgJoinableCustomLobbiesResponseEntry::has_pass_key() const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponseEntry.has_pass_key)
  return has_pass_key_;
}
inline void CMsgJoinableCustomLobbiesResponseEntry::set_has_pass_key(bool value) {
  set_has_has_pass_key();
  has_pass_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgJoinableCustomLobbiesResponseEntry.has_pass_key)
}

// -------------------------------------------------------------------

// CMsgJoinableCustomLobbiesResponse

// repeated .CMsgJoinableCustomLobbiesResponseEntry lobbies = 1;
inline int CMsgJoinableCustomLobbiesResponse::lobbies_size() const {
  return lobbies_.size();
}
inline void CMsgJoinableCustomLobbiesResponse::clear_lobbies() {
  lobbies_.Clear();
}
inline const ::CMsgJoinableCustomLobbiesResponseEntry& CMsgJoinableCustomLobbiesResponse::lobbies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgJoinableCustomLobbiesResponse.lobbies)
  return lobbies_.Get(index);
}
inline ::CMsgJoinableCustomLobbiesResponseEntry* CMsgJoinableCustomLobbiesResponse::mutable_lobbies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgJoinableCustomLobbiesResponse.lobbies)
  return lobbies_.Mutable(index);
}
inline ::CMsgJoinableCustomLobbiesResponseEntry* CMsgJoinableCustomLobbiesResponse::add_lobbies() {
  // @@protoc_insertion_point(field_add:CMsgJoinableCustomLobbiesResponse.lobbies)
  return lobbies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomLobbiesResponseEntry >&
CMsgJoinableCustomLobbiesResponse::lobbies() const {
  // @@protoc_insertion_point(field_list:CMsgJoinableCustomLobbiesResponse.lobbies)
  return lobbies_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgJoinableCustomLobbiesResponseEntry >*
CMsgJoinableCustomLobbiesResponse::mutable_lobbies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgJoinableCustomLobbiesResponse.lobbies)
  return &lobbies_;
}

// -------------------------------------------------------------------

// CMsgQuickJoinCustomLobby_RegionPing

// optional uint32 server_region = 1;
inline bool CMsgQuickJoinCustomLobby_RegionPing::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgQuickJoinCustomLobby_RegionPing::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.RegionPing.server_region)
  return server_region_;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobby.RegionPing.server_region)
}

// optional uint32 ping = 2;
inline bool CMsgQuickJoinCustomLobby_RegionPing::has_ping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::set_has_ping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::clear_has_ping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CMsgQuickJoinCustomLobby_RegionPing::ping() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.RegionPing.ping)
  return ping_;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobby.RegionPing.ping)
}

// optional fixed32 region_code = 3;
inline bool CMsgQuickJoinCustomLobby_RegionPing::has_region_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::set_has_region_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::clear_has_region_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::clear_region_code() {
  region_code_ = 0u;
  clear_has_region_code();
}
inline ::google::protobuf::uint32 CMsgQuickJoinCustomLobby_RegionPing::region_code() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.RegionPing.region_code)
  return region_code_;
}
inline void CMsgQuickJoinCustomLobby_RegionPing::set_region_code(::google::protobuf::uint32 value) {
  set_has_region_code();
  region_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobby.RegionPing.region_code)
}

// -------------------------------------------------------------------

// CMsgQuickJoinCustomLobby

// optional uint32 server_region = 1;
inline bool CMsgQuickJoinCustomLobby::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgQuickJoinCustomLobby::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgQuickJoinCustomLobby::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgQuickJoinCustomLobby::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgQuickJoinCustomLobby::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.server_region)
  return server_region_;
}
inline void CMsgQuickJoinCustomLobby::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobby.server_region)
}

// optional uint64 custom_game_id = 2;
inline bool CMsgQuickJoinCustomLobby::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgQuickJoinCustomLobby::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgQuickJoinCustomLobby::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgQuickJoinCustomLobby::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgQuickJoinCustomLobby::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.custom_game_id)
  return custom_game_id_;
}
inline void CMsgQuickJoinCustomLobby::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobby.custom_game_id)
}

// optional uint32 client_version = 3;
inline bool CMsgQuickJoinCustomLobby::has_client_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgQuickJoinCustomLobby::set_has_client_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgQuickJoinCustomLobby::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgQuickJoinCustomLobby::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgQuickJoinCustomLobby::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.client_version)
  return client_version_;
}
inline void CMsgQuickJoinCustomLobby::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobby.client_version)
}

// optional .CMsgPracticeLobbySetDetails create_lobby_details = 4;
inline bool CMsgQuickJoinCustomLobby::has_create_lobby_details() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgQuickJoinCustomLobby::set_has_create_lobby_details() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgQuickJoinCustomLobby::clear_has_create_lobby_details() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgQuickJoinCustomLobby::clear_create_lobby_details() {
  if (create_lobby_details_ != NULL) create_lobby_details_->::CMsgPracticeLobbySetDetails::Clear();
  clear_has_create_lobby_details();
}
inline const ::CMsgPracticeLobbySetDetails& CMsgQuickJoinCustomLobby::create_lobby_details() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.create_lobby_details)
  return create_lobby_details_ != NULL ? *create_lobby_details_ : *default_instance_->create_lobby_details_;
}
inline ::CMsgPracticeLobbySetDetails* CMsgQuickJoinCustomLobby::mutable_create_lobby_details() {
  set_has_create_lobby_details();
  if (create_lobby_details_ == NULL) create_lobby_details_ = new ::CMsgPracticeLobbySetDetails;
  // @@protoc_insertion_point(field_mutable:CMsgQuickJoinCustomLobby.create_lobby_details)
  return create_lobby_details_;
}
inline ::CMsgPracticeLobbySetDetails* CMsgQuickJoinCustomLobby::release_create_lobby_details() {
  clear_has_create_lobby_details();
  ::CMsgPracticeLobbySetDetails* temp = create_lobby_details_;
  create_lobby_details_ = NULL;
  return temp;
}
inline void CMsgQuickJoinCustomLobby::set_allocated_create_lobby_details(::CMsgPracticeLobbySetDetails* create_lobby_details) {
  delete create_lobby_details_;
  create_lobby_details_ = create_lobby_details;
  if (create_lobby_details) {
    set_has_create_lobby_details();
  } else {
    clear_has_create_lobby_details();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgQuickJoinCustomLobby.create_lobby_details)
}

// optional bool allow_any_map = 5;
inline bool CMsgQuickJoinCustomLobby::has_allow_any_map() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgQuickJoinCustomLobby::set_has_allow_any_map() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgQuickJoinCustomLobby::clear_has_allow_any_map() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgQuickJoinCustomLobby::clear_allow_any_map() {
  allow_any_map_ = false;
  clear_has_allow_any_map();
}
inline bool CMsgQuickJoinCustomLobby::allow_any_map() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.allow_any_map)
  return allow_any_map_;
}
inline void CMsgQuickJoinCustomLobby::set_allow_any_map(bool value) {
  set_has_allow_any_map();
  allow_any_map_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobby.allow_any_map)
}

// repeated .CMsgQuickJoinCustomLobby.RegionPing region_pings = 6;
inline int CMsgQuickJoinCustomLobby::region_pings_size() const {
  return region_pings_.size();
}
inline void CMsgQuickJoinCustomLobby::clear_region_pings() {
  region_pings_.Clear();
}
inline const ::CMsgQuickJoinCustomLobby_RegionPing& CMsgQuickJoinCustomLobby::region_pings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobby.region_pings)
  return region_pings_.Get(index);
}
inline ::CMsgQuickJoinCustomLobby_RegionPing* CMsgQuickJoinCustomLobby::mutable_region_pings(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgQuickJoinCustomLobby.region_pings)
  return region_pings_.Mutable(index);
}
inline ::CMsgQuickJoinCustomLobby_RegionPing* CMsgQuickJoinCustomLobby::add_region_pings() {
  // @@protoc_insertion_point(field_add:CMsgQuickJoinCustomLobby.region_pings)
  return region_pings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgQuickJoinCustomLobby_RegionPing >&
CMsgQuickJoinCustomLobby::region_pings() const {
  // @@protoc_insertion_point(field_list:CMsgQuickJoinCustomLobby.region_pings)
  return region_pings_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgQuickJoinCustomLobby_RegionPing >*
CMsgQuickJoinCustomLobby::mutable_region_pings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgQuickJoinCustomLobby.region_pings)
  return &region_pings_;
}

// -------------------------------------------------------------------

// CMsgQuickJoinCustomLobbyResponse

// optional .DOTAJoinLobbyResult result = 1 [default = DOTA_JOIN_RESULT_SUCCESS];
inline bool CMsgQuickJoinCustomLobbyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgQuickJoinCustomLobbyResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgQuickJoinCustomLobbyResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgQuickJoinCustomLobbyResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::DOTAJoinLobbyResult CMsgQuickJoinCustomLobbyResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgQuickJoinCustomLobbyResponse.result)
  return static_cast< ::DOTAJoinLobbyResult >(result_);
}
inline void CMsgQuickJoinCustomLobbyResponse::set_result(::DOTAJoinLobbyResult value) {
  assert(::DOTAJoinLobbyResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuickJoinCustomLobbyResponse.result)
}

// -------------------------------------------------------------------

// CMsgBotGameCreate

// optional string search_key = 1;
inline bool CMsgBotGameCreate::has_search_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBotGameCreate::set_has_search_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBotGameCreate::clear_has_search_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBotGameCreate::clear_search_key() {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_->clear();
  }
  clear_has_search_key();
}
inline const ::std::string& CMsgBotGameCreate::search_key() const {
  // @@protoc_insertion_point(field_get:CMsgBotGameCreate.search_key)
  return *search_key_;
}
inline void CMsgBotGameCreate::set_search_key(const ::std::string& value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgBotGameCreate.search_key)
}
inline void CMsgBotGameCreate::set_search_key(const char* value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgBotGameCreate.search_key)
}
inline void CMsgBotGameCreate::set_search_key(const char* value, size_t size) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgBotGameCreate.search_key)
}
inline ::std::string* CMsgBotGameCreate::mutable_search_key() {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgBotGameCreate.search_key)
  return search_key_;
}
inline ::std::string* CMsgBotGameCreate::release_search_key() {
  clear_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_key_;
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgBotGameCreate::set_allocated_search_key(::std::string* search_key) {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_key_;
  }
  if (search_key) {
    set_has_search_key();
    search_key_ = search_key;
  } else {
    clear_has_search_key();
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotGameCreate.search_key)
}

// optional uint32 client_version = 2;
inline bool CMsgBotGameCreate::has_client_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBotGameCreate::set_has_client_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBotGameCreate::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBotGameCreate::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgBotGameCreate::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgBotGameCreate.client_version)
  return client_version_;
}
inline void CMsgBotGameCreate::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgBotGameCreate.client_version)
}

// optional .DOTABotDifficulty difficulty = 3 [default = BOT_DIFFICULTY_PASSIVE];
inline bool CMsgBotGameCreate::has_difficulty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBotGameCreate::set_has_difficulty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBotGameCreate::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBotGameCreate::clear_difficulty() {
  difficulty_ = 0;
  clear_has_difficulty();
}
inline ::DOTABotDifficulty CMsgBotGameCreate::difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgBotGameCreate.difficulty)
  return static_cast< ::DOTABotDifficulty >(difficulty_);
}
inline void CMsgBotGameCreate::set_difficulty(::DOTABotDifficulty value) {
  assert(::DOTABotDifficulty_IsValid(value));
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgBotGameCreate.difficulty)
}

// optional .DOTA_GC_TEAM team = 4 [default = DOTA_GC_TEAM_GOOD_GUYS];
inline bool CMsgBotGameCreate::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgBotGameCreate::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgBotGameCreate::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgBotGameCreate::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::DOTA_GC_TEAM CMsgBotGameCreate::team() const {
  // @@protoc_insertion_point(field_get:CMsgBotGameCreate.team)
  return static_cast< ::DOTA_GC_TEAM >(team_);
}
inline void CMsgBotGameCreate::set_team(::DOTA_GC_TEAM value) {
  assert(::DOTA_GC_TEAM_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CMsgBotGameCreate.team)
}

// optional uint32 game_mode = 5;
inline bool CMsgBotGameCreate::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgBotGameCreate::set_has_game_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgBotGameCreate::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgBotGameCreate::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgBotGameCreate::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgBotGameCreate.game_mode)
  return game_mode_;
}
inline void CMsgBotGameCreate::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgBotGameCreate.game_mode)
}

// -------------------------------------------------------------------

// CMsgCustomGameCreate

// optional string search_key = 1;
inline bool CMsgCustomGameCreate::has_search_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCustomGameCreate::set_has_search_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCustomGameCreate::clear_has_search_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCustomGameCreate::clear_search_key() {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_->clear();
  }
  clear_has_search_key();
}
inline const ::std::string& CMsgCustomGameCreate::search_key() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameCreate.search_key)
  return *search_key_;
}
inline void CMsgCustomGameCreate::set_search_key(const ::std::string& value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgCustomGameCreate.search_key)
}
inline void CMsgCustomGameCreate::set_search_key(const char* value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgCustomGameCreate.search_key)
}
inline void CMsgCustomGameCreate::set_search_key(const char* value, size_t size) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgCustomGameCreate.search_key)
}
inline ::std::string* CMsgCustomGameCreate::mutable_search_key() {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgCustomGameCreate.search_key)
  return search_key_;
}
inline ::std::string* CMsgCustomGameCreate::release_search_key() {
  clear_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_key_;
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgCustomGameCreate::set_allocated_search_key(::std::string* search_key) {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_key_;
  }
  if (search_key) {
    set_has_search_key();
    search_key_ = search_key;
  } else {
    clear_has_search_key();
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgCustomGameCreate.search_key)
}

// optional uint32 client_version = 2;
inline bool CMsgCustomGameCreate::has_client_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCustomGameCreate::set_has_client_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCustomGameCreate::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCustomGameCreate::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgCustomGameCreate::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameCreate.client_version)
  return client_version_;
}
inline void CMsgCustomGameCreate::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgCustomGameCreate.client_version)
}

// optional uint32 difficulty = 3;
inline bool CMsgCustomGameCreate::has_difficulty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgCustomGameCreate::set_has_difficulty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgCustomGameCreate::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgCustomGameCreate::clear_difficulty() {
  difficulty_ = 0u;
  clear_has_difficulty();
}
inline ::google::protobuf::uint32 CMsgCustomGameCreate::difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameCreate.difficulty)
  return difficulty_;
}
inline void CMsgCustomGameCreate::set_difficulty(::google::protobuf::uint32 value) {
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgCustomGameCreate.difficulty)
}

// optional string game_mode = 4;
inline bool CMsgCustomGameCreate::has_game_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgCustomGameCreate::set_has_game_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgCustomGameCreate::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgCustomGameCreate::clear_game_mode() {
  if (game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_->clear();
  }
  clear_has_game_mode();
}
inline const ::std::string& CMsgCustomGameCreate::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameCreate.game_mode)
  return *game_mode_;
}
inline void CMsgCustomGameCreate::set_game_mode(const ::std::string& value) {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  game_mode_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgCustomGameCreate.game_mode)
}
inline void CMsgCustomGameCreate::set_game_mode(const char* value) {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  game_mode_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgCustomGameCreate.game_mode)
}
inline void CMsgCustomGameCreate::set_game_mode(const char* value, size_t size) {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  game_mode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgCustomGameCreate.game_mode)
}
inline ::std::string* CMsgCustomGameCreate::mutable_game_mode() {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgCustomGameCreate.game_mode)
  return game_mode_;
}
inline ::std::string* CMsgCustomGameCreate::release_game_mode() {
  clear_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_mode_;
    game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgCustomGameCreate::set_allocated_game_mode(::std::string* game_mode) {
  if (game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_mode_;
  }
  if (game_mode) {
    set_has_game_mode();
    game_mode_ = game_mode;
  } else {
    clear_has_game_mode();
    game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgCustomGameCreate.game_mode)
}

// optional string map = 5;
inline bool CMsgCustomGameCreate::has_map() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgCustomGameCreate::set_has_map() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgCustomGameCreate::clear_has_map() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgCustomGameCreate::clear_map() {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_->clear();
  }
  clear_has_map();
}
inline const ::std::string& CMsgCustomGameCreate::map() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameCreate.map)
  return *map_;
}
inline void CMsgCustomGameCreate::set_map(const ::std::string& value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgCustomGameCreate.map)
}
inline void CMsgCustomGameCreate::set_map(const char* value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgCustomGameCreate.map)
}
inline void CMsgCustomGameCreate::set_map(const char* value, size_t size) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgCustomGameCreate.map)
}
inline ::std::string* CMsgCustomGameCreate::mutable_map() {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgCustomGameCreate.map)
  return map_;
}
inline ::std::string* CMsgCustomGameCreate::release_map() {
  clear_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_;
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgCustomGameCreate::set_allocated_map(::std::string* map) {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_;
  }
  if (map) {
    set_has_map();
    map_ = map;
  } else {
    clear_has_map();
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgCustomGameCreate.map)
}

// optional uint64 custom_game_id = 7;
inline bool CMsgCustomGameCreate::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgCustomGameCreate::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgCustomGameCreate::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgCustomGameCreate::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgCustomGameCreate::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameCreate.custom_game_id)
  return custom_game_id_;
}
inline void CMsgCustomGameCreate::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgCustomGameCreate.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgEventGameCreate

// optional string search_key = 1;
inline bool CMsgEventGameCreate::has_search_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEventGameCreate::set_has_search_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgEventGameCreate::clear_has_search_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgEventGameCreate::clear_search_key() {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_->clear();
  }
  clear_has_search_key();
}
inline const ::std::string& CMsgEventGameCreate::search_key() const {
  // @@protoc_insertion_point(field_get:CMsgEventGameCreate.search_key)
  return *search_key_;
}
inline void CMsgEventGameCreate::set_search_key(const ::std::string& value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgEventGameCreate.search_key)
}
inline void CMsgEventGameCreate::set_search_key(const char* value) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgEventGameCreate.search_key)
}
inline void CMsgEventGameCreate::set_search_key(const char* value, size_t size) {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  search_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgEventGameCreate.search_key)
}
inline ::std::string* CMsgEventGameCreate::mutable_search_key() {
  set_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgEventGameCreate.search_key)
  return search_key_;
}
inline ::std::string* CMsgEventGameCreate::release_search_key() {
  clear_has_search_key();
  if (search_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_key_;
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgEventGameCreate::set_allocated_search_key(::std::string* search_key) {
  if (search_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_key_;
  }
  if (search_key) {
    set_has_search_key();
    search_key_ = search_key;
  } else {
    clear_has_search_key();
    search_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgEventGameCreate.search_key)
}

// optional uint32 client_version = 2;
inline bool CMsgEventGameCreate::has_client_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgEventGameCreate::set_has_client_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgEventGameCreate::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgEventGameCreate::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgEventGameCreate::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgEventGameCreate.client_version)
  return client_version_;
}
inline void CMsgEventGameCreate::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgEventGameCreate.client_version)
}

// optional uint32 difficulty = 3;
inline bool CMsgEventGameCreate::has_difficulty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgEventGameCreate::set_has_difficulty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgEventGameCreate::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgEventGameCreate::clear_difficulty() {
  difficulty_ = 0u;
  clear_has_difficulty();
}
inline ::google::protobuf::uint32 CMsgEventGameCreate::difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgEventGameCreate.difficulty)
  return difficulty_;
}
inline void CMsgEventGameCreate::set_difficulty(::google::protobuf::uint32 value) {
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgEventGameCreate.difficulty)
}

// optional string game_mode = 4;
inline bool CMsgEventGameCreate::has_game_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgEventGameCreate::set_has_game_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgEventGameCreate::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgEventGameCreate::clear_game_mode() {
  if (game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_->clear();
  }
  clear_has_game_mode();
}
inline const ::std::string& CMsgEventGameCreate::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgEventGameCreate.game_mode)
  return *game_mode_;
}
inline void CMsgEventGameCreate::set_game_mode(const ::std::string& value) {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  game_mode_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgEventGameCreate.game_mode)
}
inline void CMsgEventGameCreate::set_game_mode(const char* value) {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  game_mode_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgEventGameCreate.game_mode)
}
inline void CMsgEventGameCreate::set_game_mode(const char* value, size_t size) {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  game_mode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgEventGameCreate.game_mode)
}
inline ::std::string* CMsgEventGameCreate::mutable_game_mode() {
  set_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_mode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgEventGameCreate.game_mode)
  return game_mode_;
}
inline ::std::string* CMsgEventGameCreate::release_game_mode() {
  clear_has_game_mode();
  if (game_mode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_mode_;
    game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgEventGameCreate::set_allocated_game_mode(::std::string* game_mode) {
  if (game_mode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_mode_;
  }
  if (game_mode) {
    set_has_game_mode();
    game_mode_ = game_mode;
  } else {
    clear_has_game_mode();
    game_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgEventGameCreate.game_mode)
}

// optional string map = 5;
inline bool CMsgEventGameCreate::has_map() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgEventGameCreate::set_has_map() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgEventGameCreate::clear_has_map() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgEventGameCreate::clear_map() {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_->clear();
  }
  clear_has_map();
}
inline const ::std::string& CMsgEventGameCreate::map() const {
  // @@protoc_insertion_point(field_get:CMsgEventGameCreate.map)
  return *map_;
}
inline void CMsgEventGameCreate::set_map(const ::std::string& value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgEventGameCreate.map)
}
inline void CMsgEventGameCreate::set_map(const char* value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgEventGameCreate.map)
}
inline void CMsgEventGameCreate::set_map(const char* value, size_t size) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgEventGameCreate.map)
}
inline ::std::string* CMsgEventGameCreate::mutable_map() {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgEventGameCreate.map)
  return map_;
}
inline ::std::string* CMsgEventGameCreate::release_map() {
  clear_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_;
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgEventGameCreate::set_allocated_map(::std::string* map) {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_;
  }
  if (map) {
    set_has_map();
    map_ = map;
  } else {
    clear_has_map();
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgEventGameCreate.map)
}

// optional uint64 custom_game_id = 7;
inline bool CMsgEventGameCreate::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgEventGameCreate::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgEventGameCreate::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgEventGameCreate::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgEventGameCreate::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgEventGameCreate.custom_game_id)
  return custom_game_id_;
}
inline void CMsgEventGameCreate::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgEventGameCreate.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgRequestInternationalTicket

// -------------------------------------------------------------------

// CMsgBalancedShuffleLobby

// -------------------------------------------------------------------

// CMsgInitialQuestionnaireResponse

// optional uint32 initial_skill = 1;
inline bool CMsgInitialQuestionnaireResponse::has_initial_skill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgInitialQuestionnaireResponse::set_has_initial_skill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgInitialQuestionnaireResponse::clear_has_initial_skill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgInitialQuestionnaireResponse::clear_initial_skill() {
  initial_skill_ = 0u;
  clear_has_initial_skill();
}
inline ::google::protobuf::uint32 CMsgInitialQuestionnaireResponse::initial_skill() const {
  // @@protoc_insertion_point(field_get:CMsgInitialQuestionnaireResponse.initial_skill)
  return initial_skill_;
}
inline void CMsgInitialQuestionnaireResponse::set_initial_skill(::google::protobuf::uint32 value) {
  set_has_initial_skill();
  initial_skill_ = value;
  // @@protoc_insertion_point(field_set:CMsgInitialQuestionnaireResponse.initial_skill)
}

// -------------------------------------------------------------------

// CMsgDOTAMatch_Player_CustomGameData

// optional uint32 dota_team = 1;
inline bool CMsgDOTAMatch_Player_CustomGameData::has_dota_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch_Player_CustomGameData::set_has_dota_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatch_Player_CustomGameData::clear_has_dota_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatch_Player_CustomGameData::clear_dota_team() {
  dota_team_ = 0u;
  clear_has_dota_team();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player_CustomGameData::dota_team() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.CustomGameData.dota_team)
  return dota_team_;
}
inline void CMsgDOTAMatch_Player_CustomGameData::set_dota_team(::google::protobuf::uint32 value) {
  set_has_dota_team();
  dota_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.CustomGameData.dota_team)
}

// optional bool winner = 2;
inline bool CMsgDOTAMatch_Player_CustomGameData::has_winner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch_Player_CustomGameData::set_has_winner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatch_Player_CustomGameData::clear_has_winner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatch_Player_CustomGameData::clear_winner() {
  winner_ = false;
  clear_has_winner();
}
inline bool CMsgDOTAMatch_Player_CustomGameData::winner() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.CustomGameData.winner)
  return winner_;
}
inline void CMsgDOTAMatch_Player_CustomGameData::set_winner(bool value) {
  set_has_winner();
  winner_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.CustomGameData.winner)
}

// -------------------------------------------------------------------

// CMsgDOTAMatch_Player

// optional uint32 account_id = 1;
inline bool CMsgDOTAMatch_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatch_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatch_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.account_id)
  return account_id_;
}
inline void CMsgDOTAMatch_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.account_id)
}

// optional uint32 player_slot = 2;
inline bool CMsgDOTAMatch_Player::has_player_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_player_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatch_Player::clear_has_player_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatch_Player::clear_player_slot() {
  player_slot_ = 0u;
  clear_has_player_slot();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.player_slot)
  return player_slot_;
}
inline void CMsgDOTAMatch_Player::set_player_slot(::google::protobuf::uint32 value) {
  set_has_player_slot();
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.player_slot)
}

// optional uint32 hero_id = 3;
inline bool CMsgDOTAMatch_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatch_Player::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatch_Player::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.hero_id)
  return hero_id_;
}
inline void CMsgDOTAMatch_Player::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.hero_id)
}

// optional uint32 item_0 = 4;
inline bool CMsgDOTAMatch_Player::has_item_0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_item_0() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAMatch_Player::clear_has_item_0() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAMatch_Player::clear_item_0() {
  item_0_ = 0u;
  clear_has_item_0();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::item_0() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.item_0)
  return item_0_;
}
inline void CMsgDOTAMatch_Player::set_item_0(::google::protobuf::uint32 value) {
  set_has_item_0();
  item_0_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.item_0)
}

// optional uint32 item_1 = 5;
inline bool CMsgDOTAMatch_Player::has_item_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_item_1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAMatch_Player::clear_has_item_1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAMatch_Player::clear_item_1() {
  item_1_ = 0u;
  clear_has_item_1();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::item_1() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.item_1)
  return item_1_;
}
inline void CMsgDOTAMatch_Player::set_item_1(::google::protobuf::uint32 value) {
  set_has_item_1();
  item_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.item_1)
}

// optional uint32 item_2 = 6;
inline bool CMsgDOTAMatch_Player::has_item_2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_item_2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAMatch_Player::clear_has_item_2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAMatch_Player::clear_item_2() {
  item_2_ = 0u;
  clear_has_item_2();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::item_2() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.item_2)
  return item_2_;
}
inline void CMsgDOTAMatch_Player::set_item_2(::google::protobuf::uint32 value) {
  set_has_item_2();
  item_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.item_2)
}

// optional uint32 item_3 = 7;
inline bool CMsgDOTAMatch_Player::has_item_3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_item_3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAMatch_Player::clear_has_item_3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAMatch_Player::clear_item_3() {
  item_3_ = 0u;
  clear_has_item_3();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::item_3() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.item_3)
  return item_3_;
}
inline void CMsgDOTAMatch_Player::set_item_3(::google::protobuf::uint32 value) {
  set_has_item_3();
  item_3_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.item_3)
}

// optional uint32 item_4 = 8;
inline bool CMsgDOTAMatch_Player::has_item_4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_item_4() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAMatch_Player::clear_has_item_4() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAMatch_Player::clear_item_4() {
  item_4_ = 0u;
  clear_has_item_4();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::item_4() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.item_4)
  return item_4_;
}
inline void CMsgDOTAMatch_Player::set_item_4(::google::protobuf::uint32 value) {
  set_has_item_4();
  item_4_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.item_4)
}

// optional uint32 item_5 = 9;
inline bool CMsgDOTAMatch_Player::has_item_5() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_item_5() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAMatch_Player::clear_has_item_5() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAMatch_Player::clear_item_5() {
  item_5_ = 0u;
  clear_has_item_5();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::item_5() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.item_5)
  return item_5_;
}
inline void CMsgDOTAMatch_Player::set_item_5(::google::protobuf::uint32 value) {
  set_has_item_5();
  item_5_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.item_5)
}

// optional float expected_team_contribution = 10;
inline bool CMsgDOTAMatch_Player::has_expected_team_contribution() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_expected_team_contribution() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAMatch_Player::clear_has_expected_team_contribution() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAMatch_Player::clear_expected_team_contribution() {
  expected_team_contribution_ = 0;
  clear_has_expected_team_contribution();
}
inline float CMsgDOTAMatch_Player::expected_team_contribution() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.expected_team_contribution)
  return expected_team_contribution_;
}
inline void CMsgDOTAMatch_Player::set_expected_team_contribution(float value) {
  set_has_expected_team_contribution();
  expected_team_contribution_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.expected_team_contribution)
}

// optional float scaled_metric = 11;
inline bool CMsgDOTAMatch_Player::has_scaled_metric() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_scaled_metric() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAMatch_Player::clear_has_scaled_metric() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAMatch_Player::clear_scaled_metric() {
  scaled_metric_ = 0;
  clear_has_scaled_metric();
}
inline float CMsgDOTAMatch_Player::scaled_metric() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.scaled_metric)
  return scaled_metric_;
}
inline void CMsgDOTAMatch_Player::set_scaled_metric(float value) {
  set_has_scaled_metric();
  scaled_metric_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.scaled_metric)
}

// optional uint32 previous_rank = 12;
inline bool CMsgDOTAMatch_Player::has_previous_rank() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_previous_rank() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAMatch_Player::clear_has_previous_rank() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAMatch_Player::clear_previous_rank() {
  previous_rank_ = 0u;
  clear_has_previous_rank();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::previous_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.previous_rank)
  return previous_rank_;
}
inline void CMsgDOTAMatch_Player::set_previous_rank(::google::protobuf::uint32 value) {
  set_has_previous_rank();
  previous_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.previous_rank)
}

// optional uint32 rank_change = 13;
inline bool CMsgDOTAMatch_Player::has_rank_change() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_rank_change() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAMatch_Player::clear_has_rank_change() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAMatch_Player::clear_rank_change() {
  rank_change_ = 0u;
  clear_has_rank_change();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::rank_change() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.rank_change)
  return rank_change_;
}
inline void CMsgDOTAMatch_Player::set_rank_change(::google::protobuf::uint32 value) {
  set_has_rank_change();
  rank_change_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.rank_change)
}

// optional bool solo_rank = 49;
inline bool CMsgDOTAMatch_Player::has_solo_rank() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_solo_rank() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAMatch_Player::clear_has_solo_rank() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAMatch_Player::clear_solo_rank() {
  solo_rank_ = false;
  clear_has_solo_rank();
}
inline bool CMsgDOTAMatch_Player::solo_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.solo_rank)
  return solo_rank_;
}
inline void CMsgDOTAMatch_Player::set_solo_rank(bool value) {
  set_has_solo_rank();
  solo_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.solo_rank)
}

// optional uint32 kills = 14;
inline bool CMsgDOTAMatch_Player::has_kills() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_kills() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAMatch_Player::clear_has_kills() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAMatch_Player::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::kills() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.kills)
  return kills_;
}
inline void CMsgDOTAMatch_Player::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.kills)
}

// optional uint32 deaths = 15;
inline bool CMsgDOTAMatch_Player::has_deaths() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_deaths() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAMatch_Player::clear_has_deaths() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAMatch_Player::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.deaths)
  return deaths_;
}
inline void CMsgDOTAMatch_Player::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.deaths)
}

// optional uint32 assists = 16;
inline bool CMsgDOTAMatch_Player::has_assists() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_assists() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTAMatch_Player::clear_has_assists() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTAMatch_Player::clear_assists() {
  assists_ = 0u;
  clear_has_assists();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::assists() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.assists)
  return assists_;
}
inline void CMsgDOTAMatch_Player::set_assists(::google::protobuf::uint32 value) {
  set_has_assists();
  assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.assists)
}

// optional uint32 leaver_status = 17;
inline bool CMsgDOTAMatch_Player::has_leaver_status() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_leaver_status() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAMatch_Player::clear_has_leaver_status() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAMatch_Player::clear_leaver_status() {
  leaver_status_ = 0u;
  clear_has_leaver_status();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::leaver_status() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.leaver_status)
  return leaver_status_;
}
inline void CMsgDOTAMatch_Player::set_leaver_status(::google::protobuf::uint32 value) {
  set_has_leaver_status();
  leaver_status_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.leaver_status)
}

// optional uint32 gold = 18;
inline bool CMsgDOTAMatch_Player::has_gold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_gold() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgDOTAMatch_Player::clear_has_gold() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgDOTAMatch_Player::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::gold() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.gold)
  return gold_;
}
inline void CMsgDOTAMatch_Player::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.gold)
}

// optional uint32 last_hits = 19;
inline bool CMsgDOTAMatch_Player::has_last_hits() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_last_hits() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgDOTAMatch_Player::clear_has_last_hits() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgDOTAMatch_Player::clear_last_hits() {
  last_hits_ = 0u;
  clear_has_last_hits();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.last_hits)
  return last_hits_;
}
inline void CMsgDOTAMatch_Player::set_last_hits(::google::protobuf::uint32 value) {
  set_has_last_hits();
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.last_hits)
}

// optional uint32 denies = 20;
inline bool CMsgDOTAMatch_Player::has_denies() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_denies() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgDOTAMatch_Player::clear_has_denies() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgDOTAMatch_Player::clear_denies() {
  denies_ = 0u;
  clear_has_denies();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::denies() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.denies)
  return denies_;
}
inline void CMsgDOTAMatch_Player::set_denies(::google::protobuf::uint32 value) {
  set_has_denies();
  denies_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.denies)
}

// optional uint32 gold_per_min = 21;
inline bool CMsgDOTAMatch_Player::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_gold_per_min() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgDOTAMatch_Player::clear_has_gold_per_min() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgDOTAMatch_Player::clear_gold_per_min() {
  gold_per_min_ = 0u;
  clear_has_gold_per_min();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::gold_per_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.gold_per_min)
  return gold_per_min_;
}
inline void CMsgDOTAMatch_Player::set_gold_per_min(::google::protobuf::uint32 value) {
  set_has_gold_per_min();
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.gold_per_min)
}

// optional uint32 XP_per_min = 22;
inline bool CMsgDOTAMatch_Player::has_xp_per_min() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_xp_per_min() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgDOTAMatch_Player::clear_has_xp_per_min() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgDOTAMatch_Player::clear_xp_per_min() {
  xp_per_min_ = 0u;
  clear_has_xp_per_min();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::xp_per_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.XP_per_min)
  return xp_per_min_;
}
inline void CMsgDOTAMatch_Player::set_xp_per_min(::google::protobuf::uint32 value) {
  set_has_xp_per_min();
  xp_per_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.XP_per_min)
}

// optional uint32 gold_spent = 23;
inline bool CMsgDOTAMatch_Player::has_gold_spent() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_gold_spent() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgDOTAMatch_Player::clear_has_gold_spent() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgDOTAMatch_Player::clear_gold_spent() {
  gold_spent_ = 0u;
  clear_has_gold_spent();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::gold_spent() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.gold_spent)
  return gold_spent_;
}
inline void CMsgDOTAMatch_Player::set_gold_spent(::google::protobuf::uint32 value) {
  set_has_gold_spent();
  gold_spent_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.gold_spent)
}

// optional uint32 hero_damage = 24;
inline bool CMsgDOTAMatch_Player::has_hero_damage() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_hero_damage() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_hero_damage() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgDOTAMatch_Player::clear_hero_damage() {
  hero_damage_ = 0u;
  clear_has_hero_damage();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::hero_damage() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.hero_damage)
  return hero_damage_;
}
inline void CMsgDOTAMatch_Player::set_hero_damage(::google::protobuf::uint32 value) {
  set_has_hero_damage();
  hero_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.hero_damage)
}

// optional uint32 tower_damage = 25;
inline bool CMsgDOTAMatch_Player::has_tower_damage() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_tower_damage() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_tower_damage() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgDOTAMatch_Player::clear_tower_damage() {
  tower_damage_ = 0u;
  clear_has_tower_damage();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::tower_damage() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.tower_damage)
  return tower_damage_;
}
inline void CMsgDOTAMatch_Player::set_tower_damage(::google::protobuf::uint32 value) {
  set_has_tower_damage();
  tower_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.tower_damage)
}

// optional uint32 hero_healing = 26;
inline bool CMsgDOTAMatch_Player::has_hero_healing() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_hero_healing() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_hero_healing() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgDOTAMatch_Player::clear_hero_healing() {
  hero_healing_ = 0u;
  clear_has_hero_healing();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::hero_healing() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.hero_healing)
  return hero_healing_;
}
inline void CMsgDOTAMatch_Player::set_hero_healing(::google::protobuf::uint32 value) {
  set_has_hero_healing();
  hero_healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.hero_healing)
}

// optional uint32 level = 27;
inline bool CMsgDOTAMatch_Player::has_level() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_level() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_level() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgDOTAMatch_Player::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.level)
  return level_;
}
inline void CMsgDOTAMatch_Player::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.level)
}

// optional uint32 time_last_seen = 28;
inline bool CMsgDOTAMatch_Player::has_time_last_seen() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_time_last_seen() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_time_last_seen() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgDOTAMatch_Player::clear_time_last_seen() {
  time_last_seen_ = 0u;
  clear_has_time_last_seen();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::time_last_seen() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.time_last_seen)
  return time_last_seen_;
}
inline void CMsgDOTAMatch_Player::set_time_last_seen(::google::protobuf::uint32 value) {
  set_has_time_last_seen();
  time_last_seen_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.time_last_seen)
}

// optional string player_name = 29;
inline bool CMsgDOTAMatch_Player::has_player_name() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_player_name() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_player_name() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgDOTAMatch_Player::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& CMsgDOTAMatch_Player::player_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.player_name)
  return *player_name_;
}
inline void CMsgDOTAMatch_Player::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.player_name)
}
inline void CMsgDOTAMatch_Player::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.Player.player_name)
}
inline void CMsgDOTAMatch_Player::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.Player.player_name)
}
inline ::std::string* CMsgDOTAMatch_Player::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.Player.player_name)
  return player_name_;
}
inline ::std::string* CMsgDOTAMatch_Player::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch_Player::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.Player.player_name)
}

// optional uint32 support_ability_value = 30;
inline bool CMsgDOTAMatch_Player::has_support_ability_value() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_support_ability_value() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_support_ability_value() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CMsgDOTAMatch_Player::clear_support_ability_value() {
  support_ability_value_ = 0u;
  clear_has_support_ability_value();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::support_ability_value() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.support_ability_value)
  return support_ability_value_;
}
inline void CMsgDOTAMatch_Player::set_support_ability_value(::google::protobuf::uint32 value) {
  set_has_support_ability_value();
  support_ability_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.support_ability_value)
}

// optional bool feeding_detected = 32;
inline bool CMsgDOTAMatch_Player::has_feeding_detected() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_feeding_detected() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CMsgDOTAMatch_Player::clear_has_feeding_detected() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CMsgDOTAMatch_Player::clear_feeding_detected() {
  feeding_detected_ = false;
  clear_has_feeding_detected();
}
inline bool CMsgDOTAMatch_Player::feeding_detected() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.feeding_detected)
  return feeding_detected_;
}
inline void CMsgDOTAMatch_Player::set_feeding_detected(bool value) {
  set_has_feeding_detected();
  feeding_detected_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.feeding_detected)
}

// optional uint32 search_rank = 34;
inline bool CMsgDOTAMatch_Player::has_search_rank() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_search_rank() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CMsgDOTAMatch_Player::clear_has_search_rank() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CMsgDOTAMatch_Player::clear_search_rank() {
  search_rank_ = 0u;
  clear_has_search_rank();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::search_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.search_rank)
  return search_rank_;
}
inline void CMsgDOTAMatch_Player::set_search_rank(::google::protobuf::uint32 value) {
  set_has_search_rank();
  search_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.search_rank)
}

// optional uint32 search_rank_uncertainty = 35;
inline bool CMsgDOTAMatch_Player::has_search_rank_uncertainty() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_search_rank_uncertainty() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CMsgDOTAMatch_Player::clear_has_search_rank_uncertainty() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CMsgDOTAMatch_Player::clear_search_rank_uncertainty() {
  search_rank_uncertainty_ = 0u;
  clear_has_search_rank_uncertainty();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::search_rank_uncertainty() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.search_rank_uncertainty)
  return search_rank_uncertainty_;
}
inline void CMsgDOTAMatch_Player::set_search_rank_uncertainty(::google::protobuf::uint32 value) {
  set_has_search_rank_uncertainty();
  search_rank_uncertainty_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.search_rank_uncertainty)
}

// optional int32 rank_uncertainty_change = 36;
inline bool CMsgDOTAMatch_Player::has_rank_uncertainty_change() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_rank_uncertainty_change() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CMsgDOTAMatch_Player::clear_has_rank_uncertainty_change() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CMsgDOTAMatch_Player::clear_rank_uncertainty_change() {
  rank_uncertainty_change_ = 0;
  clear_has_rank_uncertainty_change();
}
inline ::google::protobuf::int32 CMsgDOTAMatch_Player::rank_uncertainty_change() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.rank_uncertainty_change)
  return rank_uncertainty_change_;
}
inline void CMsgDOTAMatch_Player::set_rank_uncertainty_change(::google::protobuf::int32 value) {
  set_has_rank_uncertainty_change();
  rank_uncertainty_change_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.rank_uncertainty_change)
}

// optional uint32 hero_play_count = 37;
inline bool CMsgDOTAMatch_Player::has_hero_play_count() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_hero_play_count() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CMsgDOTAMatch_Player::clear_has_hero_play_count() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CMsgDOTAMatch_Player::clear_hero_play_count() {
  hero_play_count_ = 0u;
  clear_has_hero_play_count();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::hero_play_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.hero_play_count)
  return hero_play_count_;
}
inline void CMsgDOTAMatch_Player::set_hero_play_count(::google::protobuf::uint32 value) {
  set_has_hero_play_count();
  hero_play_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.hero_play_count)
}

// optional fixed64 party_id = 38;
inline bool CMsgDOTAMatch_Player::has_party_id() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_party_id() {
  _has_bits_[1] |= 0x00000010u;
}
inline void CMsgDOTAMatch_Player::clear_has_party_id() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void CMsgDOTAMatch_Player::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAMatch_Player::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.party_id)
  return party_id_;
}
inline void CMsgDOTAMatch_Player::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.party_id)
}

// optional float scaled_kills = 39;
inline bool CMsgDOTAMatch_Player::has_scaled_kills() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_scaled_kills() {
  _has_bits_[1] |= 0x00000020u;
}
inline void CMsgDOTAMatch_Player::clear_has_scaled_kills() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void CMsgDOTAMatch_Player::clear_scaled_kills() {
  scaled_kills_ = 0;
  clear_has_scaled_kills();
}
inline float CMsgDOTAMatch_Player::scaled_kills() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.scaled_kills)
  return scaled_kills_;
}
inline void CMsgDOTAMatch_Player::set_scaled_kills(float value) {
  set_has_scaled_kills();
  scaled_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.scaled_kills)
}

// optional float scaled_deaths = 40;
inline bool CMsgDOTAMatch_Player::has_scaled_deaths() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_scaled_deaths() {
  _has_bits_[1] |= 0x00000040u;
}
inline void CMsgDOTAMatch_Player::clear_has_scaled_deaths() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void CMsgDOTAMatch_Player::clear_scaled_deaths() {
  scaled_deaths_ = 0;
  clear_has_scaled_deaths();
}
inline float CMsgDOTAMatch_Player::scaled_deaths() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.scaled_deaths)
  return scaled_deaths_;
}
inline void CMsgDOTAMatch_Player::set_scaled_deaths(float value) {
  set_has_scaled_deaths();
  scaled_deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.scaled_deaths)
}

// optional float scaled_assists = 41;
inline bool CMsgDOTAMatch_Player::has_scaled_assists() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_scaled_assists() {
  _has_bits_[1] |= 0x00000080u;
}
inline void CMsgDOTAMatch_Player::clear_has_scaled_assists() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void CMsgDOTAMatch_Player::clear_scaled_assists() {
  scaled_assists_ = 0;
  clear_has_scaled_assists();
}
inline float CMsgDOTAMatch_Player::scaled_assists() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.scaled_assists)
  return scaled_assists_;
}
inline void CMsgDOTAMatch_Player::set_scaled_assists(float value) {
  set_has_scaled_assists();
  scaled_assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.scaled_assists)
}

// optional uint32 claimed_farm_gold = 42;
inline bool CMsgDOTAMatch_Player::has_claimed_farm_gold() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_claimed_farm_gold() {
  _has_bits_[1] |= 0x00000100u;
}
inline void CMsgDOTAMatch_Player::clear_has_claimed_farm_gold() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void CMsgDOTAMatch_Player::clear_claimed_farm_gold() {
  claimed_farm_gold_ = 0u;
  clear_has_claimed_farm_gold();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::claimed_farm_gold() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.claimed_farm_gold)
  return claimed_farm_gold_;
}
inline void CMsgDOTAMatch_Player::set_claimed_farm_gold(::google::protobuf::uint32 value) {
  set_has_claimed_farm_gold();
  claimed_farm_gold_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.claimed_farm_gold)
}

// optional uint32 support_gold = 43;
inline bool CMsgDOTAMatch_Player::has_support_gold() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_support_gold() {
  _has_bits_[1] |= 0x00000200u;
}
inline void CMsgDOTAMatch_Player::clear_has_support_gold() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void CMsgDOTAMatch_Player::clear_support_gold() {
  support_gold_ = 0u;
  clear_has_support_gold();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::support_gold() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.support_gold)
  return support_gold_;
}
inline void CMsgDOTAMatch_Player::set_support_gold(::google::protobuf::uint32 value) {
  set_has_support_gold();
  support_gold_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.support_gold)
}

// optional uint32 claimed_denies = 44;
inline bool CMsgDOTAMatch_Player::has_claimed_denies() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_claimed_denies() {
  _has_bits_[1] |= 0x00000400u;
}
inline void CMsgDOTAMatch_Player::clear_has_claimed_denies() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void CMsgDOTAMatch_Player::clear_claimed_denies() {
  claimed_denies_ = 0u;
  clear_has_claimed_denies();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::claimed_denies() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.claimed_denies)
  return claimed_denies_;
}
inline void CMsgDOTAMatch_Player::set_claimed_denies(::google::protobuf::uint32 value) {
  set_has_claimed_denies();
  claimed_denies_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.claimed_denies)
}

// optional uint32 claimed_misses = 45;
inline bool CMsgDOTAMatch_Player::has_claimed_misses() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_claimed_misses() {
  _has_bits_[1] |= 0x00000800u;
}
inline void CMsgDOTAMatch_Player::clear_has_claimed_misses() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void CMsgDOTAMatch_Player::clear_claimed_misses() {
  claimed_misses_ = 0u;
  clear_has_claimed_misses();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::claimed_misses() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.claimed_misses)
  return claimed_misses_;
}
inline void CMsgDOTAMatch_Player::set_claimed_misses(::google::protobuf::uint32 value) {
  set_has_claimed_misses();
  claimed_misses_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.claimed_misses)
}

// optional uint32 misses = 46;
inline bool CMsgDOTAMatch_Player::has_misses() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_misses() {
  _has_bits_[1] |= 0x00001000u;
}
inline void CMsgDOTAMatch_Player::clear_has_misses() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void CMsgDOTAMatch_Player::clear_misses() {
  misses_ = 0u;
  clear_has_misses();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_Player::misses() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.misses)
  return misses_;
}
inline void CMsgDOTAMatch_Player::set_misses(::google::protobuf::uint32 value) {
  set_has_misses();
  misses_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.Player.misses)
}

// repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;
inline int CMsgDOTAMatch_Player::ability_upgrades_size() const {
  return ability_upgrades_.size();
}
inline void CMsgDOTAMatch_Player::clear_ability_upgrades() {
  ability_upgrades_.Clear();
}
inline const ::CMatchPlayerAbilityUpgrade& CMsgDOTAMatch_Player::ability_upgrades(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.ability_upgrades)
  return ability_upgrades_.Get(index);
}
inline ::CMatchPlayerAbilityUpgrade* CMsgDOTAMatch_Player::mutable_ability_upgrades(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.Player.ability_upgrades)
  return ability_upgrades_.Mutable(index);
}
inline ::CMatchPlayerAbilityUpgrade* CMsgDOTAMatch_Player::add_ability_upgrades() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.Player.ability_upgrades)
  return ability_upgrades_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >&
CMsgDOTAMatch_Player::ability_upgrades() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.Player.ability_upgrades)
  return ability_upgrades_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >*
CMsgDOTAMatch_Player::mutable_ability_upgrades() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.Player.ability_upgrades)
  return &ability_upgrades_;
}

// repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;
inline int CMsgDOTAMatch_Player::additional_units_inventory_size() const {
  return additional_units_inventory_.size();
}
inline void CMsgDOTAMatch_Player::clear_additional_units_inventory() {
  additional_units_inventory_.Clear();
}
inline const ::CMatchAdditionalUnitInventory& CMsgDOTAMatch_Player::additional_units_inventory(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.additional_units_inventory)
  return additional_units_inventory_.Get(index);
}
inline ::CMatchAdditionalUnitInventory* CMsgDOTAMatch_Player::mutable_additional_units_inventory(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.Player.additional_units_inventory)
  return additional_units_inventory_.Mutable(index);
}
inline ::CMatchAdditionalUnitInventory* CMsgDOTAMatch_Player::add_additional_units_inventory() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.Player.additional_units_inventory)
  return additional_units_inventory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >&
CMsgDOTAMatch_Player::additional_units_inventory() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.Player.additional_units_inventory)
  return additional_units_inventory_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >*
CMsgDOTAMatch_Player::mutable_additional_units_inventory() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.Player.additional_units_inventory)
  return &additional_units_inventory_;
}

// optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;
inline bool CMsgDOTAMatch_Player::has_custom_game_data() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void CMsgDOTAMatch_Player::set_has_custom_game_data() {
  _has_bits_[1] |= 0x00008000u;
}
inline void CMsgDOTAMatch_Player::clear_has_custom_game_data() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void CMsgDOTAMatch_Player::clear_custom_game_data() {
  if (custom_game_data_ != NULL) custom_game_data_->::CMsgDOTAMatch_Player_CustomGameData::Clear();
  clear_has_custom_game_data();
}
inline const ::CMsgDOTAMatch_Player_CustomGameData& CMsgDOTAMatch_Player::custom_game_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.Player.custom_game_data)
  return custom_game_data_ != NULL ? *custom_game_data_ : *default_instance_->custom_game_data_;
}
inline ::CMsgDOTAMatch_Player_CustomGameData* CMsgDOTAMatch_Player::mutable_custom_game_data() {
  set_has_custom_game_data();
  if (custom_game_data_ == NULL) custom_game_data_ = new ::CMsgDOTAMatch_Player_CustomGameData;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.Player.custom_game_data)
  return custom_game_data_;
}
inline ::CMsgDOTAMatch_Player_CustomGameData* CMsgDOTAMatch_Player::release_custom_game_data() {
  clear_has_custom_game_data();
  ::CMsgDOTAMatch_Player_CustomGameData* temp = custom_game_data_;
  custom_game_data_ = NULL;
  return temp;
}
inline void CMsgDOTAMatch_Player::set_allocated_custom_game_data(::CMsgDOTAMatch_Player_CustomGameData* custom_game_data) {
  delete custom_game_data_;
  custom_game_data_ = custom_game_data;
  if (custom_game_data) {
    set_has_custom_game_data();
  } else {
    clear_has_custom_game_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.Player.custom_game_data)
}

// -------------------------------------------------------------------

// CMsgDOTAMatch_BroadcasterInfo

// optional uint32 account_id = 1;
inline bool CMsgDOTAMatch_BroadcasterInfo::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch_BroadcasterInfo::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatch_BroadcasterInfo::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatch_BroadcasterInfo::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch_BroadcasterInfo::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.BroadcasterInfo.account_id)
  return account_id_;
}
inline void CMsgDOTAMatch_BroadcasterInfo::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.BroadcasterInfo.account_id)
}

// optional string name = 2;
inline bool CMsgDOTAMatch_BroadcasterInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch_BroadcasterInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatch_BroadcasterInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatch_BroadcasterInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTAMatch_BroadcasterInfo::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.BroadcasterInfo.name)
  return *name_;
}
inline void CMsgDOTAMatch_BroadcasterInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.BroadcasterInfo.name)
}
inline void CMsgDOTAMatch_BroadcasterInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.BroadcasterInfo.name)
}
inline void CMsgDOTAMatch_BroadcasterInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.BroadcasterInfo.name)
}
inline ::std::string* CMsgDOTAMatch_BroadcasterInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.BroadcasterInfo.name)
  return name_;
}
inline ::std::string* CMsgDOTAMatch_BroadcasterInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch_BroadcasterInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.BroadcasterInfo.name)
}

// -------------------------------------------------------------------

// CMsgDOTAMatch_BroadcasterChannel

// optional string country_code = 1;
inline bool CMsgDOTAMatch_BroadcasterChannel::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatch_BroadcasterChannel::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatch_BroadcasterChannel::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgDOTAMatch_BroadcasterChannel::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.BroadcasterChannel.country_code)
  return *country_code_;
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.BroadcasterChannel.country_code)
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.BroadcasterChannel.country_code)
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.BroadcasterChannel.country_code)
}
inline ::std::string* CMsgDOTAMatch_BroadcasterChannel::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.BroadcasterChannel.country_code)
  return country_code_;
}
inline ::std::string* CMsgDOTAMatch_BroadcasterChannel::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.BroadcasterChannel.country_code)
}

// optional string description = 2;
inline bool CMsgDOTAMatch_BroadcasterChannel::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatch_BroadcasterChannel::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatch_BroadcasterChannel::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CMsgDOTAMatch_BroadcasterChannel::description() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.BroadcasterChannel.description)
  return *description_;
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.BroadcasterChannel.description)
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.BroadcasterChannel.description)
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.BroadcasterChannel.description)
}
inline ::std::string* CMsgDOTAMatch_BroadcasterChannel::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.BroadcasterChannel.description)
  return description_;
}
inline ::std::string* CMsgDOTAMatch_BroadcasterChannel::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.BroadcasterChannel.description)
}

// repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;
inline int CMsgDOTAMatch_BroadcasterChannel::broadcaster_infos_size() const {
  return broadcaster_infos_.size();
}
inline void CMsgDOTAMatch_BroadcasterChannel::clear_broadcaster_infos() {
  broadcaster_infos_.Clear();
}
inline const ::CMsgDOTAMatch_BroadcasterInfo& CMsgDOTAMatch_BroadcasterChannel::broadcaster_infos(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.BroadcasterChannel.broadcaster_infos)
  return broadcaster_infos_.Get(index);
}
inline ::CMsgDOTAMatch_BroadcasterInfo* CMsgDOTAMatch_BroadcasterChannel::mutable_broadcaster_infos(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.BroadcasterChannel.broadcaster_infos)
  return broadcaster_infos_.Mutable(index);
}
inline ::CMsgDOTAMatch_BroadcasterInfo* CMsgDOTAMatch_BroadcasterChannel::add_broadcaster_infos() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.BroadcasterChannel.broadcaster_infos)
  return broadcaster_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterInfo >&
CMsgDOTAMatch_BroadcasterChannel::broadcaster_infos() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.BroadcasterChannel.broadcaster_infos)
  return broadcaster_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterInfo >*
CMsgDOTAMatch_BroadcasterChannel::mutable_broadcaster_infos() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.BroadcasterChannel.broadcaster_infos)
  return &broadcaster_infos_;
}

// optional string language_code = 4;
inline bool CMsgDOTAMatch_BroadcasterChannel::has_language_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_has_language_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAMatch_BroadcasterChannel::clear_has_language_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAMatch_BroadcasterChannel::clear_language_code() {
  if (language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_->clear();
  }
  clear_has_language_code();
}
inline const ::std::string& CMsgDOTAMatch_BroadcasterChannel::language_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.BroadcasterChannel.language_code)
  return *language_code_;
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_language_code(const ::std::string& value) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.BroadcasterChannel.language_code)
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_language_code(const char* value) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.BroadcasterChannel.language_code)
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_language_code(const char* value, size_t size) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.BroadcasterChannel.language_code)
}
inline ::std::string* CMsgDOTAMatch_BroadcasterChannel::mutable_language_code() {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.BroadcasterChannel.language_code)
  return language_code_;
}
inline ::std::string* CMsgDOTAMatch_BroadcasterChannel::release_language_code() {
  clear_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = language_code_;
    language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch_BroadcasterChannel::set_allocated_language_code(::std::string* language_code) {
  if (language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete language_code_;
  }
  if (language_code) {
    set_has_language_code();
    language_code_ = language_code;
  } else {
    clear_has_language_code();
    language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.BroadcasterChannel.language_code)
}

// -------------------------------------------------------------------

// CMsgDOTAMatch_CustomGameData

// optional uint64 custom_game_id = 1;
inline bool CMsgDOTAMatch_CustomGameData::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch_CustomGameData::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatch_CustomGameData::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatch_CustomGameData::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTAMatch_CustomGameData::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.CustomGameData.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTAMatch_CustomGameData::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.CustomGameData.custom_game_id)
}

// optional string map_name = 2;
inline bool CMsgDOTAMatch_CustomGameData::has_map_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch_CustomGameData::set_has_map_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatch_CustomGameData::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatch_CustomGameData::clear_map_name() {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_->clear();
  }
  clear_has_map_name();
}
inline const ::std::string& CMsgDOTAMatch_CustomGameData::map_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.CustomGameData.map_name)
  return *map_name_;
}
inline void CMsgDOTAMatch_CustomGameData::set_map_name(const ::std::string& value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.CustomGameData.map_name)
}
inline void CMsgDOTAMatch_CustomGameData::set_map_name(const char* value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.CustomGameData.map_name)
}
inline void CMsgDOTAMatch_CustomGameData::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.CustomGameData.map_name)
}
inline ::std::string* CMsgDOTAMatch_CustomGameData::mutable_map_name() {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.CustomGameData.map_name)
  return map_name_;
}
inline ::std::string* CMsgDOTAMatch_CustomGameData::release_map_name() {
  clear_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_name_;
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch_CustomGameData::set_allocated_map_name(::std::string* map_name) {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_name_;
  }
  if (map_name) {
    set_has_map_name();
    map_name_ = map_name;
  } else {
    clear_has_map_name();
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.CustomGameData.map_name)
}

// -------------------------------------------------------------------

// CMsgDOTAMatch

// optional bool good_guys_win = 2;
inline bool CMsgDOTAMatch::has_good_guys_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch::set_has_good_guys_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatch::clear_has_good_guys_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatch::clear_good_guys_win() {
  good_guys_win_ = false;
  clear_has_good_guys_win();
}
inline bool CMsgDOTAMatch::good_guys_win() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.good_guys_win)
  return good_guys_win_;
}
inline void CMsgDOTAMatch::set_good_guys_win(bool value) {
  set_has_good_guys_win();
  good_guys_win_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.good_guys_win)
}

// optional uint32 duration = 3;
inline bool CMsgDOTAMatch::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatch::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatch::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::duration() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.duration)
  return duration_;
}
inline void CMsgDOTAMatch::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.duration)
}

// optional fixed32 startTime = 4;
inline bool CMsgDOTAMatch::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatch::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatch::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatch::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::starttime() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.startTime)
  return starttime_;
}
inline void CMsgDOTAMatch::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.startTime)
}

// repeated .CMsgDOTAMatch.Player players = 5;
inline int CMsgDOTAMatch::players_size() const {
  return players_.size();
}
inline void CMsgDOTAMatch::clear_players() {
  players_.Clear();
}
inline const ::CMsgDOTAMatch_Player& CMsgDOTAMatch::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.players)
  return players_.Get(index);
}
inline ::CMsgDOTAMatch_Player* CMsgDOTAMatch::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.players)
  return players_.Mutable(index);
}
inline ::CMsgDOTAMatch_Player* CMsgDOTAMatch::add_players() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_Player >&
CMsgDOTAMatch::players() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_Player >*
CMsgDOTAMatch::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.players)
  return &players_;
}

// optional uint64 match_id = 6;
inline bool CMsgDOTAMatch::has_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatch::set_has_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAMatch::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAMatch::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.match_id)
  return match_id_;
}
inline void CMsgDOTAMatch::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.match_id)
}

// repeated uint32 tower_status = 8;
inline int CMsgDOTAMatch::tower_status_size() const {
  return tower_status_.size();
}
inline void CMsgDOTAMatch::clear_tower_status() {
  tower_status_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::tower_status(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.tower_status)
  return tower_status_.Get(index);
}
inline void CMsgDOTAMatch::set_tower_status(int index, ::google::protobuf::uint32 value) {
  tower_status_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.tower_status)
}
inline void CMsgDOTAMatch::add_tower_status(::google::protobuf::uint32 value) {
  tower_status_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.tower_status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatch::tower_status() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.tower_status)
  return tower_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatch::mutable_tower_status() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.tower_status)
  return &tower_status_;
}

// repeated uint32 barracks_status = 9;
inline int CMsgDOTAMatch::barracks_status_size() const {
  return barracks_status_.size();
}
inline void CMsgDOTAMatch::clear_barracks_status() {
  barracks_status_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::barracks_status(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.barracks_status)
  return barracks_status_.Get(index);
}
inline void CMsgDOTAMatch::set_barracks_status(int index, ::google::protobuf::uint32 value) {
  barracks_status_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.barracks_status)
}
inline void CMsgDOTAMatch::add_barracks_status(::google::protobuf::uint32 value) {
  barracks_status_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.barracks_status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatch::barracks_status() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.barracks_status)
  return barracks_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatch::mutable_barracks_status() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.barracks_status)
  return &barracks_status_;
}

// optional uint32 cluster = 10;
inline bool CMsgDOTAMatch::has_cluster() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAMatch::set_has_cluster() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAMatch::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAMatch::clear_cluster() {
  cluster_ = 0u;
  clear_has_cluster();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::cluster() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.cluster)
  return cluster_;
}
inline void CMsgDOTAMatch::set_cluster(::google::protobuf::uint32 value) {
  set_has_cluster();
  cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.cluster)
}

// optional uint32 first_blood_time = 12;
inline bool CMsgDOTAMatch::has_first_blood_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAMatch::set_has_first_blood_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAMatch::clear_has_first_blood_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAMatch::clear_first_blood_time() {
  first_blood_time_ = 0u;
  clear_has_first_blood_time();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::first_blood_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.first_blood_time)
  return first_blood_time_;
}
inline void CMsgDOTAMatch::set_first_blood_time(::google::protobuf::uint32 value) {
  set_has_first_blood_time();
  first_blood_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.first_blood_time)
}

// optional fixed32 replay_salt = 13;
inline bool CMsgDOTAMatch::has_replay_salt() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAMatch::set_has_replay_salt() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAMatch::clear_has_replay_salt() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAMatch::clear_replay_salt() {
  replay_salt_ = 0u;
  clear_has_replay_salt();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::replay_salt() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.replay_salt)
  return replay_salt_;
}
inline void CMsgDOTAMatch::set_replay_salt(::google::protobuf::uint32 value) {
  set_has_replay_salt();
  replay_salt_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.replay_salt)
}

// optional fixed32 server_ip = 14;
inline bool CMsgDOTAMatch::has_server_ip() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAMatch::set_has_server_ip() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAMatch::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAMatch::clear_server_ip() {
  server_ip_ = 0u;
  clear_has_server_ip();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::server_ip() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.server_ip)
  return server_ip_;
}
inline void CMsgDOTAMatch::set_server_ip(::google::protobuf::uint32 value) {
  set_has_server_ip();
  server_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.server_ip)
}

// optional uint32 server_port = 15;
inline bool CMsgDOTAMatch::has_server_port() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAMatch::set_has_server_port() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAMatch::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAMatch::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.server_port)
  return server_port_;
}
inline void CMsgDOTAMatch::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.server_port)
}

// optional uint32 lobby_type = 16;
inline bool CMsgDOTAMatch::has_lobby_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAMatch::set_has_lobby_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAMatch::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAMatch::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::lobby_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTAMatch::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.lobby_type)
}

// optional uint32 human_players = 17;
inline bool CMsgDOTAMatch::has_human_players() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAMatch::set_has_human_players() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAMatch::clear_has_human_players() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAMatch::clear_human_players() {
  human_players_ = 0u;
  clear_has_human_players();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::human_players() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.human_players)
  return human_players_;
}
inline void CMsgDOTAMatch::set_human_players(::google::protobuf::uint32 value) {
  set_has_human_players();
  human_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.human_players)
}

// optional uint32 average_skill = 18;
inline bool CMsgDOTAMatch::has_average_skill() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAMatch::set_has_average_skill() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAMatch::clear_has_average_skill() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAMatch::clear_average_skill() {
  average_skill_ = 0u;
  clear_has_average_skill();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::average_skill() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.average_skill)
  return average_skill_;
}
inline void CMsgDOTAMatch::set_average_skill(::google::protobuf::uint32 value) {
  set_has_average_skill();
  average_skill_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.average_skill)
}

// optional float game_balance = 19;
inline bool CMsgDOTAMatch::has_game_balance() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAMatch::set_has_game_balance() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAMatch::clear_has_game_balance() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAMatch::clear_game_balance() {
  game_balance_ = 0;
  clear_has_game_balance();
}
inline float CMsgDOTAMatch::game_balance() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.game_balance)
  return game_balance_;
}
inline void CMsgDOTAMatch::set_game_balance(float value) {
  set_has_game_balance();
  game_balance_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.game_balance)
}

// optional uint32 radiant_team_id = 20;
inline bool CMsgDOTAMatch::has_radiant_team_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAMatch::set_has_radiant_team_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTAMatch::clear_has_radiant_team_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTAMatch::clear_radiant_team_id() {
  radiant_team_id_ = 0u;
  clear_has_radiant_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::radiant_team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.radiant_team_id)
  return radiant_team_id_;
}
inline void CMsgDOTAMatch::set_radiant_team_id(::google::protobuf::uint32 value) {
  set_has_radiant_team_id();
  radiant_team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.radiant_team_id)
}

// optional uint32 dire_team_id = 21;
inline bool CMsgDOTAMatch::has_dire_team_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAMatch::set_has_dire_team_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAMatch::clear_has_dire_team_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAMatch::clear_dire_team_id() {
  dire_team_id_ = 0u;
  clear_has_dire_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::dire_team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.dire_team_id)
  return dire_team_id_;
}
inline void CMsgDOTAMatch::set_dire_team_id(::google::protobuf::uint32 value) {
  set_has_dire_team_id();
  dire_team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.dire_team_id)
}

// optional uint32 leagueid = 22;
inline bool CMsgDOTAMatch::has_leagueid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTAMatch::set_has_leagueid() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgDOTAMatch::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgDOTAMatch::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.leagueid)
  return leagueid_;
}
inline void CMsgDOTAMatch::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.leagueid)
}

// optional string radiant_team_name = 23;
inline bool CMsgDOTAMatch::has_radiant_team_name() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTAMatch::set_has_radiant_team_name() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgDOTAMatch::clear_has_radiant_team_name() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgDOTAMatch::clear_radiant_team_name() {
  if (radiant_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_->clear();
  }
  clear_has_radiant_team_name();
}
inline const ::std::string& CMsgDOTAMatch::radiant_team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.radiant_team_name)
  return *radiant_team_name_;
}
inline void CMsgDOTAMatch::set_radiant_team_name(const ::std::string& value) {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  radiant_team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.radiant_team_name)
}
inline void CMsgDOTAMatch::set_radiant_team_name(const char* value) {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  radiant_team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.radiant_team_name)
}
inline void CMsgDOTAMatch::set_radiant_team_name(const char* value, size_t size) {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  radiant_team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.radiant_team_name)
}
inline ::std::string* CMsgDOTAMatch::mutable_radiant_team_name() {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.radiant_team_name)
  return radiant_team_name_;
}
inline ::std::string* CMsgDOTAMatch::release_radiant_team_name() {
  clear_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = radiant_team_name_;
    radiant_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch::set_allocated_radiant_team_name(::std::string* radiant_team_name) {
  if (radiant_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete radiant_team_name_;
  }
  if (radiant_team_name) {
    set_has_radiant_team_name();
    radiant_team_name_ = radiant_team_name;
  } else {
    clear_has_radiant_team_name();
    radiant_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.radiant_team_name)
}

// optional string dire_team_name = 24;
inline bool CMsgDOTAMatch::has_dire_team_name() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTAMatch::set_has_dire_team_name() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgDOTAMatch::clear_has_dire_team_name() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgDOTAMatch::clear_dire_team_name() {
  if (dire_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_->clear();
  }
  clear_has_dire_team_name();
}
inline const ::std::string& CMsgDOTAMatch::dire_team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.dire_team_name)
  return *dire_team_name_;
}
inline void CMsgDOTAMatch::set_dire_team_name(const ::std::string& value) {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  dire_team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.dire_team_name)
}
inline void CMsgDOTAMatch::set_dire_team_name(const char* value) {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  dire_team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.dire_team_name)
}
inline void CMsgDOTAMatch::set_dire_team_name(const char* value, size_t size) {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  dire_team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.dire_team_name)
}
inline ::std::string* CMsgDOTAMatch::mutable_dire_team_name() {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.dire_team_name)
  return dire_team_name_;
}
inline ::std::string* CMsgDOTAMatch::release_dire_team_name() {
  clear_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dire_team_name_;
    dire_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch::set_allocated_dire_team_name(::std::string* dire_team_name) {
  if (dire_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dire_team_name_;
  }
  if (dire_team_name) {
    set_has_dire_team_name();
    dire_team_name_ = dire_team_name;
  } else {
    clear_has_dire_team_name();
    dire_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.dire_team_name)
}

// optional uint64 radiant_team_logo = 25;
inline bool CMsgDOTAMatch::has_radiant_team_logo() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgDOTAMatch::set_has_radiant_team_logo() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgDOTAMatch::clear_has_radiant_team_logo() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgDOTAMatch::clear_radiant_team_logo() {
  radiant_team_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_radiant_team_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAMatch::radiant_team_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.radiant_team_logo)
  return radiant_team_logo_;
}
inline void CMsgDOTAMatch::set_radiant_team_logo(::google::protobuf::uint64 value) {
  set_has_radiant_team_logo();
  radiant_team_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.radiant_team_logo)
}

// optional uint64 dire_team_logo = 26;
inline bool CMsgDOTAMatch::has_dire_team_logo() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgDOTAMatch::set_has_dire_team_logo() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgDOTAMatch::clear_has_dire_team_logo() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgDOTAMatch::clear_dire_team_logo() {
  dire_team_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_dire_team_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAMatch::dire_team_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.dire_team_logo)
  return dire_team_logo_;
}
inline void CMsgDOTAMatch::set_dire_team_logo(::google::protobuf::uint64 value) {
  set_has_dire_team_logo();
  dire_team_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.dire_team_logo)
}

// optional uint32 radiant_team_complete = 27;
inline bool CMsgDOTAMatch::has_radiant_team_complete() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgDOTAMatch::set_has_radiant_team_complete() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgDOTAMatch::clear_has_radiant_team_complete() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgDOTAMatch::clear_radiant_team_complete() {
  radiant_team_complete_ = 0u;
  clear_has_radiant_team_complete();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::radiant_team_complete() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.radiant_team_complete)
  return radiant_team_complete_;
}
inline void CMsgDOTAMatch::set_radiant_team_complete(::google::protobuf::uint32 value) {
  set_has_radiant_team_complete();
  radiant_team_complete_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.radiant_team_complete)
}

// optional uint32 dire_team_complete = 28;
inline bool CMsgDOTAMatch::has_dire_team_complete() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgDOTAMatch::set_has_dire_team_complete() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgDOTAMatch::clear_has_dire_team_complete() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgDOTAMatch::clear_dire_team_complete() {
  dire_team_complete_ = 0u;
  clear_has_dire_team_complete();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::dire_team_complete() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.dire_team_complete)
  return dire_team_complete_;
}
inline void CMsgDOTAMatch::set_dire_team_complete(::google::protobuf::uint32 value) {
  set_has_dire_team_complete();
  dire_team_complete_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.dire_team_complete)
}

// optional uint32 positive_votes = 29;
inline bool CMsgDOTAMatch::has_positive_votes() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgDOTAMatch::set_has_positive_votes() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgDOTAMatch::clear_has_positive_votes() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgDOTAMatch::clear_positive_votes() {
  positive_votes_ = 0u;
  clear_has_positive_votes();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::positive_votes() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.positive_votes)
  return positive_votes_;
}
inline void CMsgDOTAMatch::set_positive_votes(::google::protobuf::uint32 value) {
  set_has_positive_votes();
  positive_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.positive_votes)
}

// optional uint32 negative_votes = 30;
inline bool CMsgDOTAMatch::has_negative_votes() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgDOTAMatch::set_has_negative_votes() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgDOTAMatch::clear_has_negative_votes() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgDOTAMatch::clear_negative_votes() {
  negative_votes_ = 0u;
  clear_has_negative_votes();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::negative_votes() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.negative_votes)
  return negative_votes_;
}
inline void CMsgDOTAMatch::set_negative_votes(::google::protobuf::uint32 value) {
  set_has_negative_votes();
  negative_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.negative_votes)
}

// optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgDOTAMatch::has_game_mode() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgDOTAMatch::set_has_game_mode() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgDOTAMatch::clear_has_game_mode() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgDOTAMatch::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CMsgDOTAMatch::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CMsgDOTAMatch::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.game_mode)
}

// repeated .CMatchHeroSelectEvent picks_bans = 32;
inline int CMsgDOTAMatch::picks_bans_size() const {
  return picks_bans_.size();
}
inline void CMsgDOTAMatch::clear_picks_bans() {
  picks_bans_.Clear();
}
inline const ::CMatchHeroSelectEvent& CMsgDOTAMatch::picks_bans(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.picks_bans)
  return picks_bans_.Get(index);
}
inline ::CMatchHeroSelectEvent* CMsgDOTAMatch::mutable_picks_bans(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.picks_bans)
  return picks_bans_.Mutable(index);
}
inline ::CMatchHeroSelectEvent* CMsgDOTAMatch::add_picks_bans() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.picks_bans)
  return picks_bans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >&
CMsgDOTAMatch::picks_bans() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.picks_bans)
  return picks_bans_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >*
CMsgDOTAMatch::mutable_picks_bans() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.picks_bans)
  return &picks_bans_;
}

// optional uint64 match_seq_num = 33;
inline bool CMsgDOTAMatch::has_match_seq_num() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgDOTAMatch::set_has_match_seq_num() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgDOTAMatch::clear_has_match_seq_num() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgDOTAMatch::clear_match_seq_num() {
  match_seq_num_ = GOOGLE_ULONGLONG(0);
  clear_has_match_seq_num();
}
inline ::google::protobuf::uint64 CMsgDOTAMatch::match_seq_num() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.match_seq_num)
  return match_seq_num_;
}
inline void CMsgDOTAMatch::set_match_seq_num(::google::protobuf::uint64 value) {
  set_has_match_seq_num();
  match_seq_num_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.match_seq_num)
}

// optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];
inline bool CMsgDOTAMatch::has_replay_state() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgDOTAMatch::set_has_replay_state() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CMsgDOTAMatch::clear_has_replay_state() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CMsgDOTAMatch::clear_replay_state() {
  replay_state_ = 0;
  clear_has_replay_state();
}
inline ::CMsgDOTAMatch_ReplayState CMsgDOTAMatch::replay_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.replay_state)
  return static_cast< ::CMsgDOTAMatch_ReplayState >(replay_state_);
}
inline void CMsgDOTAMatch::set_replay_state(::CMsgDOTAMatch_ReplayState value) {
  assert(::CMsgDOTAMatch_ReplayState_IsValid(value));
  set_has_replay_state();
  replay_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.replay_state)
}

// optional uint32 radiant_guild_id = 35;
inline bool CMsgDOTAMatch::has_radiant_guild_id() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgDOTAMatch::set_has_radiant_guild_id() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CMsgDOTAMatch::clear_has_radiant_guild_id() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CMsgDOTAMatch::clear_radiant_guild_id() {
  radiant_guild_id_ = 0u;
  clear_has_radiant_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::radiant_guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.radiant_guild_id)
  return radiant_guild_id_;
}
inline void CMsgDOTAMatch::set_radiant_guild_id(::google::protobuf::uint32 value) {
  set_has_radiant_guild_id();
  radiant_guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.radiant_guild_id)
}

// optional uint32 dire_guild_id = 36;
inline bool CMsgDOTAMatch::has_dire_guild_id() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatch::set_has_dire_guild_id() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CMsgDOTAMatch::clear_has_dire_guild_id() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CMsgDOTAMatch::clear_dire_guild_id() {
  dire_guild_id_ = 0u;
  clear_has_dire_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::dire_guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.dire_guild_id)
  return dire_guild_id_;
}
inline void CMsgDOTAMatch::set_dire_guild_id(::google::protobuf::uint32 value) {
  set_has_dire_guild_id();
  dire_guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.dire_guild_id)
}

// optional string radiant_team_tag = 37;
inline bool CMsgDOTAMatch::has_radiant_team_tag() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatch::set_has_radiant_team_tag() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CMsgDOTAMatch::clear_has_radiant_team_tag() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CMsgDOTAMatch::clear_radiant_team_tag() {
  if (radiant_team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_tag_->clear();
  }
  clear_has_radiant_team_tag();
}
inline const ::std::string& CMsgDOTAMatch::radiant_team_tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.radiant_team_tag)
  return *radiant_team_tag_;
}
inline void CMsgDOTAMatch::set_radiant_team_tag(const ::std::string& value) {
  set_has_radiant_team_tag();
  if (radiant_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_tag_ = new ::std::string;
  }
  radiant_team_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.radiant_team_tag)
}
inline void CMsgDOTAMatch::set_radiant_team_tag(const char* value) {
  set_has_radiant_team_tag();
  if (radiant_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_tag_ = new ::std::string;
  }
  radiant_team_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.radiant_team_tag)
}
inline void CMsgDOTAMatch::set_radiant_team_tag(const char* value, size_t size) {
  set_has_radiant_team_tag();
  if (radiant_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_tag_ = new ::std::string;
  }
  radiant_team_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.radiant_team_tag)
}
inline ::std::string* CMsgDOTAMatch::mutable_radiant_team_tag() {
  set_has_radiant_team_tag();
  if (radiant_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.radiant_team_tag)
  return radiant_team_tag_;
}
inline ::std::string* CMsgDOTAMatch::release_radiant_team_tag() {
  clear_has_radiant_team_tag();
  if (radiant_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = radiant_team_tag_;
    radiant_team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch::set_allocated_radiant_team_tag(::std::string* radiant_team_tag) {
  if (radiant_team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete radiant_team_tag_;
  }
  if (radiant_team_tag) {
    set_has_radiant_team_tag();
    radiant_team_tag_ = radiant_team_tag;
  } else {
    clear_has_radiant_team_tag();
    radiant_team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.radiant_team_tag)
}

// optional string dire_team_tag = 38;
inline bool CMsgDOTAMatch::has_dire_team_tag() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatch::set_has_dire_team_tag() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CMsgDOTAMatch::clear_has_dire_team_tag() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CMsgDOTAMatch::clear_dire_team_tag() {
  if (dire_team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_tag_->clear();
  }
  clear_has_dire_team_tag();
}
inline const ::std::string& CMsgDOTAMatch::dire_team_tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.dire_team_tag)
  return *dire_team_tag_;
}
inline void CMsgDOTAMatch::set_dire_team_tag(const ::std::string& value) {
  set_has_dire_team_tag();
  if (dire_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_tag_ = new ::std::string;
  }
  dire_team_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.dire_team_tag)
}
inline void CMsgDOTAMatch::set_dire_team_tag(const char* value) {
  set_has_dire_team_tag();
  if (dire_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_tag_ = new ::std::string;
  }
  dire_team_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatch.dire_team_tag)
}
inline void CMsgDOTAMatch::set_dire_team_tag(const char* value, size_t size) {
  set_has_dire_team_tag();
  if (dire_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_tag_ = new ::std::string;
  }
  dire_team_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatch.dire_team_tag)
}
inline ::std::string* CMsgDOTAMatch::mutable_dire_team_tag() {
  set_has_dire_team_tag();
  if (dire_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.dire_team_tag)
  return dire_team_tag_;
}
inline ::std::string* CMsgDOTAMatch::release_dire_team_tag() {
  clear_has_dire_team_tag();
  if (dire_team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dire_team_tag_;
    dire_team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatch::set_allocated_dire_team_tag(::std::string* dire_team_tag) {
  if (dire_team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dire_team_tag_;
  }
  if (dire_team_tag) {
    set_has_dire_team_tag();
    dire_team_tag_ = dire_team_tag;
  } else {
    clear_has_dire_team_tag();
    dire_team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.dire_team_tag)
}

// optional uint32 series_id = 39;
inline bool CMsgDOTAMatch::has_series_id() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatch::set_has_series_id() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CMsgDOTAMatch::clear_has_series_id() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CMsgDOTAMatch::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::series_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.series_id)
  return series_id_;
}
inline void CMsgDOTAMatch::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.series_id)
}

// optional uint32 series_type = 40;
inline bool CMsgDOTAMatch::has_series_type() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatch::set_has_series_type() {
  _has_bits_[1] |= 0x00000010u;
}
inline void CMsgDOTAMatch::clear_has_series_type() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void CMsgDOTAMatch::clear_series_type() {
  series_type_ = 0u;
  clear_has_series_type();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::series_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.series_type)
  return series_type_;
}
inline void CMsgDOTAMatch::set_series_type(::google::protobuf::uint32 value) {
  set_has_series_type();
  series_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.series_type)
}

// repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;
inline int CMsgDOTAMatch::broadcaster_channels_size() const {
  return broadcaster_channels_.size();
}
inline void CMsgDOTAMatch::clear_broadcaster_channels() {
  broadcaster_channels_.Clear();
}
inline const ::CMsgDOTAMatch_BroadcasterChannel& CMsgDOTAMatch::broadcaster_channels(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.broadcaster_channels)
  return broadcaster_channels_.Get(index);
}
inline ::CMsgDOTAMatch_BroadcasterChannel* CMsgDOTAMatch::mutable_broadcaster_channels(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.broadcaster_channels)
  return broadcaster_channels_.Mutable(index);
}
inline ::CMsgDOTAMatch_BroadcasterChannel* CMsgDOTAMatch::add_broadcaster_channels() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatch.broadcaster_channels)
  return broadcaster_channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterChannel >&
CMsgDOTAMatch::broadcaster_channels() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatch.broadcaster_channels)
  return broadcaster_channels_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch_BroadcasterChannel >*
CMsgDOTAMatch::mutable_broadcaster_channels() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatch.broadcaster_channels)
  return &broadcaster_channels_;
}

// optional uint32 engine = 44;
inline bool CMsgDOTAMatch::has_engine() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void CMsgDOTAMatch::set_has_engine() {
  _has_bits_[1] |= 0x00000040u;
}
inline void CMsgDOTAMatch::clear_has_engine() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void CMsgDOTAMatch::clear_engine() {
  engine_ = 0u;
  clear_has_engine();
}
inline ::google::protobuf::uint32 CMsgDOTAMatch::engine() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.engine)
  return engine_;
}
inline void CMsgDOTAMatch::set_engine(::google::protobuf::uint32 value) {
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatch.engine)
}

// optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;
inline bool CMsgDOTAMatch::has_custom_game_data() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void CMsgDOTAMatch::set_has_custom_game_data() {
  _has_bits_[1] |= 0x00000080u;
}
inline void CMsgDOTAMatch::clear_has_custom_game_data() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void CMsgDOTAMatch::clear_custom_game_data() {
  if (custom_game_data_ != NULL) custom_game_data_->::CMsgDOTAMatch_CustomGameData::Clear();
  clear_has_custom_game_data();
}
inline const ::CMsgDOTAMatch_CustomGameData& CMsgDOTAMatch::custom_game_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatch.custom_game_data)
  return custom_game_data_ != NULL ? *custom_game_data_ : *default_instance_->custom_game_data_;
}
inline ::CMsgDOTAMatch_CustomGameData* CMsgDOTAMatch::mutable_custom_game_data() {
  set_has_custom_game_data();
  if (custom_game_data_ == NULL) custom_game_data_ = new ::CMsgDOTAMatch_CustomGameData;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatch.custom_game_data)
  return custom_game_data_;
}
inline ::CMsgDOTAMatch_CustomGameData* CMsgDOTAMatch::release_custom_game_data() {
  clear_has_custom_game_data();
  ::CMsgDOTAMatch_CustomGameData* temp = custom_game_data_;
  custom_game_data_ = NULL;
  return temp;
}
inline void CMsgDOTAMatch::set_allocated_custom_game_data(::CMsgDOTAMatch_CustomGameData* custom_game_data) {
  delete custom_game_data_;
  custom_game_data_ = custom_game_data;
  if (custom_game_data) {
    set_has_custom_game_data();
  } else {
    clear_has_custom_game_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatch.custom_game_data)
}

// -------------------------------------------------------------------

// CMsgDOTAPlayerMatchHistory

// repeated uint64 match_ids = 1;
inline int CMsgDOTAPlayerMatchHistory::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAPlayerMatchHistory::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerMatchHistory::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAPlayerMatchHistory::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPlayerMatchHistory.match_ids)
}
inline void CMsgDOTAPlayerMatchHistory::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAPlayerMatchHistory.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerMatchHistory::match_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerMatchHistory::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPlayerMatchHistory.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchMinimal_Player

// optional uint32 account_id = 1;
inline bool CMsgDOTAMatchMinimal_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchMinimal_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.Player.account_id)
  return account_id_;
}
inline void CMsgDOTAMatchMinimal_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.Player.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAMatchMinimal_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchMinimal_Player::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.Player.hero_id)
  return hero_id_;
}
inline void CMsgDOTAMatchMinimal_Player::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.Player.hero_id)
}

// optional uint32 kills = 3;
inline bool CMsgDOTAMatchMinimal_Player::has_kills() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatchMinimal_Player::set_has_kills() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_has_kills() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_Player::kills() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.Player.kills)
  return kills_;
}
inline void CMsgDOTAMatchMinimal_Player::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.Player.kills)
}

// optional uint32 deaths = 4;
inline bool CMsgDOTAMatchMinimal_Player::has_deaths() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatchMinimal_Player::set_has_deaths() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_Player::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.Player.deaths)
  return deaths_;
}
inline void CMsgDOTAMatchMinimal_Player::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.Player.deaths)
}

// optional uint32 assists = 5;
inline bool CMsgDOTAMatchMinimal_Player::has_assists() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatchMinimal_Player::set_has_assists() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_has_assists() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAMatchMinimal_Player::clear_assists() {
  assists_ = 0u;
  clear_has_assists();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_Player::assists() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.Player.assists)
  return assists_;
}
inline void CMsgDOTAMatchMinimal_Player::set_assists(::google::protobuf::uint32 value) {
  set_has_assists();
  assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.Player.assists)
}

// repeated uint32 items = 6;
inline int CMsgDOTAMatchMinimal_Player::items_size() const {
  return items_.size();
}
inline void CMsgDOTAMatchMinimal_Player::clear_items() {
  items_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_Player::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.Player.items)
  return items_.Get(index);
}
inline void CMsgDOTAMatchMinimal_Player::set_items(int index, ::google::protobuf::uint32 value) {
  items_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.Player.items)
}
inline void CMsgDOTAMatchMinimal_Player::add_items(::google::protobuf::uint32 value) {
  items_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchMinimal.Player.items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatchMinimal_Player::items() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchMinimal.Player.items)
  return items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatchMinimal_Player::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchMinimal.Player.items)
  return &items_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchMinimal_League

// optional uint32 league_id = 1;
inline bool CMsgDOTAMatchMinimal_League::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchMinimal_League::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_League::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.league_id)
  return league_id_;
}
inline void CMsgDOTAMatchMinimal_League::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.league_id)
}

// optional uint32 radiant_team_id = 2;
inline bool CMsgDOTAMatchMinimal_League::has_radiant_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_radiant_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_radiant_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchMinimal_League::clear_radiant_team_id() {
  radiant_team_id_ = 0u;
  clear_has_radiant_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_League::radiant_team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.radiant_team_id)
  return radiant_team_id_;
}
inline void CMsgDOTAMatchMinimal_League::set_radiant_team_id(::google::protobuf::uint32 value) {
  set_has_radiant_team_id();
  radiant_team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.radiant_team_id)
}

// optional string radiant_team_name = 3;
inline bool CMsgDOTAMatchMinimal_League::has_radiant_team_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_radiant_team_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_radiant_team_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatchMinimal_League::clear_radiant_team_name() {
  if (radiant_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_->clear();
  }
  clear_has_radiant_team_name();
}
inline const ::std::string& CMsgDOTAMatchMinimal_League::radiant_team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.radiant_team_name)
  return *radiant_team_name_;
}
inline void CMsgDOTAMatchMinimal_League::set_radiant_team_name(const ::std::string& value) {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  radiant_team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.radiant_team_name)
}
inline void CMsgDOTAMatchMinimal_League::set_radiant_team_name(const char* value) {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  radiant_team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatchMinimal.League.radiant_team_name)
}
inline void CMsgDOTAMatchMinimal_League::set_radiant_team_name(const char* value, size_t size) {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  radiant_team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatchMinimal.League.radiant_team_name)
}
inline ::std::string* CMsgDOTAMatchMinimal_League::mutable_radiant_team_name() {
  set_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    radiant_team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchMinimal.League.radiant_team_name)
  return radiant_team_name_;
}
inline ::std::string* CMsgDOTAMatchMinimal_League::release_radiant_team_name() {
  clear_has_radiant_team_name();
  if (radiant_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = radiant_team_name_;
    radiant_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatchMinimal_League::set_allocated_radiant_team_name(::std::string* radiant_team_name) {
  if (radiant_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete radiant_team_name_;
  }
  if (radiant_team_name) {
    set_has_radiant_team_name();
    radiant_team_name_ = radiant_team_name;
  } else {
    clear_has_radiant_team_name();
    radiant_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatchMinimal.League.radiant_team_name)
}

// optional fixed64 radiant_team_logo = 4;
inline bool CMsgDOTAMatchMinimal_League::has_radiant_team_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_radiant_team_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_radiant_team_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAMatchMinimal_League::clear_radiant_team_logo() {
  radiant_team_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_radiant_team_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchMinimal_League::radiant_team_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.radiant_team_logo)
  return radiant_team_logo_;
}
inline void CMsgDOTAMatchMinimal_League::set_radiant_team_logo(::google::protobuf::uint64 value) {
  set_has_radiant_team_logo();
  radiant_team_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.radiant_team_logo)
}

// optional uint32 dire_team_id = 5;
inline bool CMsgDOTAMatchMinimal_League::has_dire_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_dire_team_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_dire_team_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAMatchMinimal_League::clear_dire_team_id() {
  dire_team_id_ = 0u;
  clear_has_dire_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_League::dire_team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.dire_team_id)
  return dire_team_id_;
}
inline void CMsgDOTAMatchMinimal_League::set_dire_team_id(::google::protobuf::uint32 value) {
  set_has_dire_team_id();
  dire_team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.dire_team_id)
}

// optional string dire_team_name = 6;
inline bool CMsgDOTAMatchMinimal_League::has_dire_team_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_dire_team_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_dire_team_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAMatchMinimal_League::clear_dire_team_name() {
  if (dire_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_->clear();
  }
  clear_has_dire_team_name();
}
inline const ::std::string& CMsgDOTAMatchMinimal_League::dire_team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.dire_team_name)
  return *dire_team_name_;
}
inline void CMsgDOTAMatchMinimal_League::set_dire_team_name(const ::std::string& value) {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  dire_team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.dire_team_name)
}
inline void CMsgDOTAMatchMinimal_League::set_dire_team_name(const char* value) {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  dire_team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAMatchMinimal.League.dire_team_name)
}
inline void CMsgDOTAMatchMinimal_League::set_dire_team_name(const char* value, size_t size) {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  dire_team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAMatchMinimal.League.dire_team_name)
}
inline ::std::string* CMsgDOTAMatchMinimal_League::mutable_dire_team_name() {
  set_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dire_team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchMinimal.League.dire_team_name)
  return dire_team_name_;
}
inline ::std::string* CMsgDOTAMatchMinimal_League::release_dire_team_name() {
  clear_has_dire_team_name();
  if (dire_team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dire_team_name_;
    dire_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAMatchMinimal_League::set_allocated_dire_team_name(::std::string* dire_team_name) {
  if (dire_team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dire_team_name_;
  }
  if (dire_team_name) {
    set_has_dire_team_name();
    dire_team_name_ = dire_team_name;
  } else {
    clear_has_dire_team_name();
    dire_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatchMinimal.League.dire_team_name)
}

// optional fixed64 dire_team_logo = 7;
inline bool CMsgDOTAMatchMinimal_League::has_dire_team_logo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_dire_team_logo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_dire_team_logo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAMatchMinimal_League::clear_dire_team_logo() {
  dire_team_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_dire_team_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchMinimal_League::dire_team_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.dire_team_logo)
  return dire_team_logo_;
}
inline void CMsgDOTAMatchMinimal_League::set_dire_team_logo(::google::protobuf::uint64 value) {
  set_has_dire_team_logo();
  dire_team_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.dire_team_logo)
}

// optional uint32 series_type = 8;
inline bool CMsgDOTAMatchMinimal_League::has_series_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_series_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_series_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAMatchMinimal_League::clear_series_type() {
  series_type_ = 0u;
  clear_has_series_type();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_League::series_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.series_type)
  return series_type_;
}
inline void CMsgDOTAMatchMinimal_League::set_series_type(::google::protobuf::uint32 value) {
  set_has_series_type();
  series_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.series_type)
}

// optional uint32 series_game = 9;
inline bool CMsgDOTAMatchMinimal_League::has_series_game() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAMatchMinimal_League::set_has_series_game() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAMatchMinimal_League::clear_has_series_game() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAMatchMinimal_League::clear_series_game() {
  series_game_ = 0u;
  clear_has_series_game();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal_League::series_game() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.League.series_game)
  return series_game_;
}
inline void CMsgDOTAMatchMinimal_League::set_series_game(::google::protobuf::uint32 value) {
  set_has_series_game();
  series_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.League.series_game)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchMinimal

// optional uint32 match_id = 1;
inline bool CMsgDOTAMatchMinimal::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchMinimal::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchMinimal::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchMinimal::clear_match_id() {
  match_id_ = 0u;
  clear_has_match_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.match_id)
  return match_id_;
}
inline void CMsgDOTAMatchMinimal::set_match_id(::google::protobuf::uint32 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.match_id)
}

// optional fixed32 start_time = 2;
inline bool CMsgDOTAMatchMinimal::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchMinimal::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchMinimal::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchMinimal::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.start_time)
  return start_time_;
}
inline void CMsgDOTAMatchMinimal::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.start_time)
}

// optional uint32 duration = 3;
inline bool CMsgDOTAMatchMinimal::has_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatchMinimal::set_has_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatchMinimal::clear_has_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatchMinimal::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal::duration() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.duration)
  return duration_;
}
inline void CMsgDOTAMatchMinimal::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.duration)
}

// optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgDOTAMatchMinimal::has_game_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatchMinimal::set_has_game_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAMatchMinimal::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAMatchMinimal::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CMsgDOTAMatchMinimal::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CMsgDOTAMatchMinimal::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.game_mode)
}

// optional uint32 winning_team = 5;
inline bool CMsgDOTAMatchMinimal::has_winning_team() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatchMinimal::set_has_winning_team() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAMatchMinimal::clear_has_winning_team() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAMatchMinimal::clear_winning_team() {
  winning_team_ = 0u;
  clear_has_winning_team();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchMinimal::winning_team() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.winning_team)
  return winning_team_;
}
inline void CMsgDOTAMatchMinimal::set_winning_team(::google::protobuf::uint32 value) {
  set_has_winning_team();
  winning_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchMinimal.winning_team)
}

// repeated .CMsgDOTAMatchMinimal.Player players = 6;
inline int CMsgDOTAMatchMinimal::players_size() const {
  return players_.size();
}
inline void CMsgDOTAMatchMinimal::clear_players() {
  players_.Clear();
}
inline const ::CMsgDOTAMatchMinimal_Player& CMsgDOTAMatchMinimal::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.players)
  return players_.Get(index);
}
inline ::CMsgDOTAMatchMinimal_Player* CMsgDOTAMatchMinimal::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchMinimal.players)
  return players_.Mutable(index);
}
inline ::CMsgDOTAMatchMinimal_Player* CMsgDOTAMatchMinimal::add_players() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchMinimal.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal_Player >&
CMsgDOTAMatchMinimal::players() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchMinimal.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchMinimal_Player >*
CMsgDOTAMatchMinimal::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchMinimal.players)
  return &players_;
}

// optional .CMsgDOTAMatchMinimal.League league = 7;
inline bool CMsgDOTAMatchMinimal::has_league() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAMatchMinimal::set_has_league() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAMatchMinimal::clear_has_league() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAMatchMinimal::clear_league() {
  if (league_ != NULL) league_->::CMsgDOTAMatchMinimal_League::Clear();
  clear_has_league();
}
inline const ::CMsgDOTAMatchMinimal_League& CMsgDOTAMatchMinimal::league() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchMinimal.league)
  return league_ != NULL ? *league_ : *default_instance_->league_;
}
inline ::CMsgDOTAMatchMinimal_League* CMsgDOTAMatchMinimal::mutable_league() {
  set_has_league();
  if (league_ == NULL) league_ = new ::CMsgDOTAMatchMinimal_League;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchMinimal.league)
  return league_;
}
inline ::CMsgDOTAMatchMinimal_League* CMsgDOTAMatchMinimal::release_league() {
  clear_has_league();
  ::CMsgDOTAMatchMinimal_League* temp = league_;
  league_ = NULL;
  return temp;
}
inline void CMsgDOTAMatchMinimal::set_allocated_league(::CMsgDOTAMatchMinimal_League* league) {
  delete league_;
  league_ = league;
  if (league) {
    set_has_league();
  } else {
    clear_has_league();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatchMinimal.league)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchHistoryFilter

// repeated uint64 match_ids = 1;
inline int CMsgDOTAMatchHistoryFilter::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAMatchHistoryFilter::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAMatchHistoryFilter::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchHistoryFilter.match_ids)
}
inline void CMsgDOTAMatchHistoryFilter::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchHistoryFilter.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAMatchHistoryFilter::match_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAMatchHistoryFilter::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchHistoryFilter.match_ids)
  return &match_ids_;
}

// optional uint64 newest_match_id_at_last_query = 2;
inline bool CMsgDOTAMatchHistoryFilter::has_newest_match_id_at_last_query() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::set_has_newest_match_id_at_last_query() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_has_newest_match_id_at_last_query() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_newest_match_id_at_last_query() {
  newest_match_id_at_last_query_ = GOOGLE_ULONGLONG(0);
  clear_has_newest_match_id_at_last_query();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::newest_match_id_at_last_query() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
  return newest_match_id_at_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_newest_match_id_at_last_query(::google::protobuf::uint64 value) {
  set_has_newest_match_id_at_last_query();
  newest_match_id_at_last_query_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
}

// optional uint32 time_last_query = 3;
inline bool CMsgDOTAMatchHistoryFilter::has_time_last_query() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::set_has_time_last_query() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_has_time_last_query() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_time_last_query() {
  time_last_query_ = 0u;
  clear_has_time_last_query();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchHistoryFilter::time_last_query() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchHistoryFilter.time_last_query)
  return time_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_time_last_query(::google::protobuf::uint32 value) {
  set_has_time_last_query();
  time_last_query_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchHistoryFilter.time_last_query)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatches

// optional uint32 hero_id = 2;
inline bool CMsgDOTARequestMatches::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestMatches::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestMatches::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.hero_id)
  return hero_id_;
}
inline void CMsgDOTARequestMatches::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.hero_id)
}

// optional uint32 game_mode = 3;
inline bool CMsgDOTARequestMatches::has_game_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_game_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestMatches::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestMatches::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.game_mode)
  return game_mode_;
}
inline void CMsgDOTARequestMatches::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.game_mode)
}

// optional fixed32 date_min = 6;
inline bool CMsgDOTARequestMatches::has_date_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_date_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatches::clear_has_date_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatches::clear_date_min() {
  date_min_ = 0u;
  clear_has_date_min();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.date_min)
  return date_min_;
}
inline void CMsgDOTARequestMatches::set_date_min(::google::protobuf::uint32 value) {
  set_has_date_min();
  date_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.date_min)
}

// optional fixed32 date_max = 7;
inline bool CMsgDOTARequestMatches::has_date_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_date_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARequestMatches::clear_has_date_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARequestMatches::clear_date_max() {
  date_max_ = 0u;
  clear_has_date_max();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_max() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.date_max)
  return date_max_;
}
inline void CMsgDOTARequestMatches::set_date_max(::google::protobuf::uint32 value) {
  set_has_date_max();
  date_max_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.date_max)
}

// optional uint32 matches_requested = 10;
inline bool CMsgDOTARequestMatches::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_matches_requested() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTARequestMatches::clear_has_matches_requested() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTARequestMatches::clear_matches_requested() {
  matches_requested_ = 0u;
  clear_has_matches_requested();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::matches_requested() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTARequestMatches::set_matches_requested(::google::protobuf::uint32 value) {
  set_has_matches_requested();
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.matches_requested)
}

// optional uint64 start_at_match_id = 11;
inline bool CMsgDOTARequestMatches::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_start_at_match_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTARequestMatches::clear_has_start_at_match_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTARequestMatches::clear_start_at_match_id() {
  start_at_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_start_at_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTARequestMatches::set_start_at_match_id(::google::protobuf::uint64 value) {
  set_has_start_at_match_id();
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.start_at_match_id)
}

// optional fixed32 min_players = 12;
inline bool CMsgDOTARequestMatches::has_min_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_min_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTARequestMatches::clear_has_min_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTARequestMatches::clear_min_players() {
  min_players_ = 0u;
  clear_has_min_players();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::min_players() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.min_players)
  return min_players_;
}
inline void CMsgDOTARequestMatches::set_min_players(::google::protobuf::uint32 value) {
  set_has_min_players();
  min_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.min_players)
}

// optional uint32 request_id = 13;
inline bool CMsgDOTARequestMatches::has_request_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_request_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTARequestMatches::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTARequestMatches::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatches::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.request_id)
}

// optional bool tournament_games_only = 14;
inline bool CMsgDOTARequestMatches::has_tournament_games_only() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_tournament_games_only() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTARequestMatches::clear_has_tournament_games_only() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTARequestMatches::clear_tournament_games_only() {
  tournament_games_only_ = false;
  clear_has_tournament_games_only();
}
inline bool CMsgDOTARequestMatches::tournament_games_only() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.tournament_games_only)
  return tournament_games_only_;
}
inline void CMsgDOTARequestMatches::set_tournament_games_only(bool value) {
  set_has_tournament_games_only();
  tournament_games_only_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.tournament_games_only)
}

// optional uint32 account_id = 15;
inline bool CMsgDOTARequestMatches::has_account_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_account_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTARequestMatches::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTARequestMatches::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.account_id)
  return account_id_;
}
inline void CMsgDOTARequestMatches::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.account_id)
}

// optional uint32 league_id = 16;
inline bool CMsgDOTARequestMatches::has_league_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_league_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTARequestMatches::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTARequestMatches::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.league_id)
  return league_id_;
}
inline void CMsgDOTARequestMatches::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.league_id)
}

// optional .CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
inline bool CMsgDOTARequestMatches::has_skill() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_skill() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTARequestMatches::clear_has_skill() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTARequestMatches::clear_skill() {
  skill_ = 0;
  clear_has_skill();
}
inline ::CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches::skill() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.skill)
  return static_cast< ::CMsgDOTARequestMatches_SkillLevel >(skill_);
}
inline void CMsgDOTARequestMatches::set_skill(::CMsgDOTARequestMatches_SkillLevel value) {
  assert(::CMsgDOTARequestMatches_SkillLevel_IsValid(value));
  set_has_skill();
  skill_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.skill)
}

// optional uint32 team_id = 18;
inline bool CMsgDOTARequestMatches::has_team_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_team_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTARequestMatches::clear_has_team_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTARequestMatches::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.team_id)
  return team_id_;
}
inline void CMsgDOTARequestMatches::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.team_id)
}

// optional uint64 custom_game_id = 20;
inline bool CMsgDOTARequestMatches::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTARequestMatches::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTARequestMatches::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatches.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTARequestMatches::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatches.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse_Series

// repeated .CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse_Series::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse_Series::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse_Series::matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse_Series::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestMatchesResponse.Series.matches)
  return &matches_;
}

// optional uint32 series_id = 2;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_has_series_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.Series.series_id)
  return series_id_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.Series.series_id)
}

// optional uint32 series_type = 3;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_has_series_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_has_series_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_type() {
  series_type_ = 0u;
  clear_has_series_type();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.Series.series_type)
  return series_type_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_type(::google::protobuf::uint32 value) {
  set_has_series_type();
  series_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.Series.series_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse

// repeated .CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTARequestMatchesResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestMatchesResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestMatchesResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestMatchesResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestMatchesResponse.matches)
  return &matches_;
}

// repeated .CMsgDOTARequestMatchesResponse.Series series = 2;
inline int CMsgDOTARequestMatchesResponse::series_size() const {
  return series_.size();
}
inline void CMsgDOTARequestMatchesResponse::clear_series() {
  series_.Clear();
}
inline const ::CMsgDOTARequestMatchesResponse_Series& CMsgDOTARequestMatchesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.series)
  return series_.Get(index);
}
inline ::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestMatchesResponse.series)
  return series_.Mutable(index);
}
inline ::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::add_series() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestMatchesResponse.series)
  return series_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >&
CMsgDOTARequestMatchesResponse::series() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestMatchesResponse.series)
  return series_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestMatchesResponse_Series >*
CMsgDOTARequestMatchesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestMatchesResponse.series)
  return &series_;
}

// optional uint32 request_id = 3;
inline bool CMsgDOTARequestMatchesResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatchesResponse::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.request_id)
}

// optional uint32 total_results = 4;
inline bool CMsgDOTARequestMatchesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARequestMatchesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.total_results)
  return total_results_;
}
inline void CMsgDOTARequestMatchesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.total_results)
}

// optional uint32 results_remaining = 5;
inline bool CMsgDOTARequestMatchesResponse::has_results_remaining() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_results_remaining() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_results_remaining() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTARequestMatchesResponse::clear_results_remaining() {
  results_remaining_ = 0u;
  clear_has_results_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::results_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestMatchesResponse.results_remaining)
  return results_remaining_;
}
inline void CMsgDOTARequestMatchesResponse::set_results_remaining(::google::protobuf::uint32 value) {
  set_has_results_remaining();
  results_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestMatchesResponse.results_remaining)
}

// -------------------------------------------------------------------

// CMsgDOTAPopup

// optional .CMsgDOTAPopup.PopupID id = 1 [default = KICKED_FROM_LOBBY];
inline bool CMsgDOTAPopup::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPopup::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPopup::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPopup::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::CMsgDOTAPopup_PopupID CMsgDOTAPopup::id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.id)
  return static_cast< ::CMsgDOTAPopup_PopupID >(id_);
}
inline void CMsgDOTAPopup::set_id(::CMsgDOTAPopup_PopupID value) {
  assert(::CMsgDOTAPopup_PopupID_IsValid(value));
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.id)
}

// optional string custom_text = 2;
inline bool CMsgDOTAPopup::has_custom_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPopup::set_has_custom_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPopup::clear_has_custom_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPopup::clear_custom_text() {
  if (custom_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_->clear();
  }
  clear_has_custom_text();
}
inline const ::std::string& CMsgDOTAPopup::custom_text() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.custom_text)
  return *custom_text_;
}
inline void CMsgDOTAPopup::set_custom_text(const ::std::string& value) {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  custom_text_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.custom_text)
}
inline void CMsgDOTAPopup::set_custom_text(const char* value) {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  custom_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.custom_text)
}
inline void CMsgDOTAPopup::set_custom_text(const char* value, size_t size) {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  custom_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.custom_text)
}
inline ::std::string* CMsgDOTAPopup::mutable_custom_text() {
  set_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.custom_text)
  return custom_text_;
}
inline ::std::string* CMsgDOTAPopup::release_custom_text() {
  clear_has_custom_text();
  if (custom_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_text_;
    custom_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPopup::set_allocated_custom_text(::std::string* custom_text) {
  if (custom_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_text_;
  }
  if (custom_text) {
    set_has_custom_text();
    custom_text_ = custom_text;
  } else {
    clear_has_custom_text();
    custom_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPopup.custom_text)
}

// optional sint32 int_data = 3;
inline bool CMsgDOTAPopup::has_int_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPopup::set_has_int_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPopup::clear_has_int_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPopup::clear_int_data() {
  int_data_ = 0;
  clear_has_int_data();
}
inline ::google::protobuf::int32 CMsgDOTAPopup::int_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.int_data)
  return int_data_;
}
inline void CMsgDOTAPopup::set_int_data(::google::protobuf::int32 value) {
  set_has_int_data();
  int_data_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.int_data)
}

// optional bytes popup_data = 4;
inline bool CMsgDOTAPopup::has_popup_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPopup::set_has_popup_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPopup::clear_has_popup_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPopup::clear_popup_data() {
  if (popup_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_->clear();
  }
  clear_has_popup_data();
}
inline const ::std::string& CMsgDOTAPopup::popup_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPopup.popup_data)
  return *popup_data_;
}
inline void CMsgDOTAPopup::set_popup_data(const ::std::string& value) {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  popup_data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPopup.popup_data)
}
inline void CMsgDOTAPopup::set_popup_data(const char* value) {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  popup_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPopup.popup_data)
}
inline void CMsgDOTAPopup::set_popup_data(const void* value, size_t size) {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  popup_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPopup.popup_data)
}
inline ::std::string* CMsgDOTAPopup::mutable_popup_data() {
  set_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    popup_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPopup.popup_data)
  return popup_data_;
}
inline ::std::string* CMsgDOTAPopup::release_popup_data() {
  clear_has_popup_data();
  if (popup_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = popup_data_;
    popup_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPopup::set_allocated_popup_data(::std::string* popup_data) {
  if (popup_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete popup_data_;
  }
  if (popup_data) {
    set_has_popup_data();
    popup_data_ = popup_data;
  } else {
    clear_has_popup_data();
    popup_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPopup.popup_data)
}

// -------------------------------------------------------------------

// CMsgDOTATeamMemberSDO

// optional uint32 account_id = 1;
inline bool CMsgDOTATeamMemberSDO::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamMemberSDO::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamMemberSDO::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamMemberSDO::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamMemberSDO::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamMemberSDO.account_id)
  return account_id_;
}
inline void CMsgDOTATeamMemberSDO::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamMemberSDO.account_id)
}

// repeated uint32 team_ids = 2;
inline int CMsgDOTATeamMemberSDO::team_ids_size() const {
  return team_ids_.size();
}
inline void CMsgDOTATeamMemberSDO::clear_team_ids() {
  team_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTATeamMemberSDO::team_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamMemberSDO.team_ids)
  return team_ids_.Get(index);
}
inline void CMsgDOTATeamMemberSDO::set_team_ids(int index, ::google::protobuf::uint32 value) {
  team_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamMemberSDO.team_ids)
}
inline void CMsgDOTATeamMemberSDO::add_team_ids(::google::protobuf::uint32 value) {
  team_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTATeamMemberSDO.team_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTATeamMemberSDO::team_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTATeamMemberSDO.team_ids)
  return team_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTATeamMemberSDO::mutable_team_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTATeamMemberSDO.team_ids)
  return &team_ids_;
}

// optional uint32 profile_team_id = 3;
inline bool CMsgDOTATeamMemberSDO::has_profile_team_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTATeamMemberSDO::set_has_profile_team_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTATeamMemberSDO::clear_has_profile_team_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTATeamMemberSDO::clear_profile_team_id() {
  profile_team_id_ = 0u;
  clear_has_profile_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamMemberSDO::profile_team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamMemberSDO.profile_team_id)
  return profile_team_id_;
}
inline void CMsgDOTATeamMemberSDO::set_profile_team_id(::google::protobuf::uint32 value) {
  set_has_profile_team_id();
  profile_team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamMemberSDO.profile_team_id)
}

// -------------------------------------------------------------------

// CMsgDOTATeamAdminSDO

// optional uint32 account_id = 1;
inline bool CMsgDOTATeamAdminSDO::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamAdminSDO::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamAdminSDO::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamAdminSDO::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamAdminSDO::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamAdminSDO.account_id)
  return account_id_;
}
inline void CMsgDOTATeamAdminSDO::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamAdminSDO.account_id)
}

// repeated uint32 team_ids = 2;
inline int CMsgDOTATeamAdminSDO::team_ids_size() const {
  return team_ids_.size();
}
inline void CMsgDOTATeamAdminSDO::clear_team_ids() {
  team_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTATeamAdminSDO::team_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamAdminSDO.team_ids)
  return team_ids_.Get(index);
}
inline void CMsgDOTATeamAdminSDO::set_team_ids(int index, ::google::protobuf::uint32 value) {
  team_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamAdminSDO.team_ids)
}
inline void CMsgDOTATeamAdminSDO::add_team_ids(::google::protobuf::uint32 value) {
  team_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTATeamAdminSDO.team_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTATeamAdminSDO::team_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTATeamAdminSDO.team_ids)
  return team_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTATeamAdminSDO::mutable_team_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTATeamAdminSDO.team_ids)
  return &team_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTATeamMember

// optional uint32 account_id = 1;
inline bool CMsgDOTATeamMember::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamMember::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamMember::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamMember::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamMember::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamMember.account_id)
  return account_id_;
}
inline void CMsgDOTATeamMember::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamMember.account_id)
}

// optional uint32 time_joined = 4;
inline bool CMsgDOTATeamMember::has_time_joined() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamMember::set_has_time_joined() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamMember::clear_has_time_joined() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamMember::clear_time_joined() {
  time_joined_ = 0u;
  clear_has_time_joined();
}
inline ::google::protobuf::uint32 CMsgDOTATeamMember::time_joined() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamMember.time_joined)
  return time_joined_;
}
inline void CMsgDOTATeamMember::set_time_joined(::google::protobuf::uint32 value) {
  set_has_time_joined();
  time_joined_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamMember.time_joined)
}

// -------------------------------------------------------------------

// CMsgDOTATeam

// repeated .CMsgDOTATeamMember members = 1;
inline int CMsgDOTATeam::members_size() const {
  return members_.size();
}
inline void CMsgDOTATeam::clear_members() {
  members_.Clear();
}
inline const ::CMsgDOTATeamMember& CMsgDOTATeam::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.members)
  return members_.Get(index);
}
inline ::CMsgDOTATeamMember* CMsgDOTATeam::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeam.members)
  return members_.Mutable(index);
}
inline ::CMsgDOTATeamMember* CMsgDOTATeam::add_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTATeam.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamMember >&
CMsgDOTATeam::members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTATeam.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamMember >*
CMsgDOTATeam::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTATeam.members)
  return &members_;
}

// optional uint32 team_id = 2;
inline bool CMsgDOTATeam::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeam::set_has_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeam::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeam::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.team_id)
  return team_id_;
}
inline void CMsgDOTATeam::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.team_id)
}

// optional string name = 3;
inline bool CMsgDOTATeam::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTATeam::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTATeam::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTATeam::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTATeam::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.name)
  return *name_;
}
inline void CMsgDOTATeam::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.name)
}
inline void CMsgDOTATeam::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeam.name)
}
inline void CMsgDOTATeam::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeam.name)
}
inline ::std::string* CMsgDOTATeam::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeam.name)
  return name_;
}
inline ::std::string* CMsgDOTATeam::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeam::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeam.name)
}

// optional string tag = 4;
inline bool CMsgDOTATeam::has_tag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTATeam::set_has_tag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTATeam::clear_has_tag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTATeam::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& CMsgDOTATeam::tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.tag)
  return *tag_;
}
inline void CMsgDOTATeam::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.tag)
}
inline void CMsgDOTATeam::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeam.tag)
}
inline void CMsgDOTATeam::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeam.tag)
}
inline ::std::string* CMsgDOTATeam::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeam.tag)
  return tag_;
}
inline ::std::string* CMsgDOTATeam::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeam::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeam.tag)
}

// optional uint32 admin_id = 5;
inline bool CMsgDOTATeam::has_admin_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTATeam::set_has_admin_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTATeam::clear_has_admin_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTATeam::clear_admin_id() {
  admin_id_ = 0u;
  clear_has_admin_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::admin_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.admin_id)
  return admin_id_;
}
inline void CMsgDOTATeam::set_admin_id(::google::protobuf::uint32 value) {
  set_has_admin_id();
  admin_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.admin_id)
}

// optional uint32 time_created = 6;
inline bool CMsgDOTATeam::has_time_created() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTATeam::set_has_time_created() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTATeam::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTATeam::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::time_created() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.time_created)
  return time_created_;
}
inline void CMsgDOTATeam::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.time_created)
}

// optional bool disbanded = 7;
inline bool CMsgDOTATeam::has_disbanded() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTATeam::set_has_disbanded() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTATeam::clear_has_disbanded() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTATeam::clear_disbanded() {
  disbanded_ = false;
  clear_has_disbanded();
}
inline bool CMsgDOTATeam::disbanded() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.disbanded)
  return disbanded_;
}
inline void CMsgDOTATeam::set_disbanded(bool value) {
  set_has_disbanded();
  disbanded_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.disbanded)
}

// optional uint32 wins = 8;
inline bool CMsgDOTATeam::has_wins() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTATeam::set_has_wins() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTATeam::clear_has_wins() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTATeam::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::wins() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.wins)
  return wins_;
}
inline void CMsgDOTATeam::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.wins)
}

// optional uint32 losses = 9;
inline bool CMsgDOTATeam::has_losses() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTATeam::set_has_losses() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTATeam::clear_has_losses() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTATeam::clear_losses() {
  losses_ = 0u;
  clear_has_losses();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::losses() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.losses)
  return losses_;
}
inline void CMsgDOTATeam::set_losses(::google::protobuf::uint32 value) {
  set_has_losses();
  losses_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.losses)
}

// optional uint32 rank = 10;
inline bool CMsgDOTATeam::has_rank() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTATeam::set_has_rank() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTATeam::clear_has_rank() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTATeam::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.rank)
  return rank_;
}
inline void CMsgDOTATeam::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.rank)
}

// optional uint32 calibration_games_remaining = 24;
inline bool CMsgDOTATeam::has_calibration_games_remaining() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTATeam::set_has_calibration_games_remaining() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTATeam::clear_has_calibration_games_remaining() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTATeam::clear_calibration_games_remaining() {
  calibration_games_remaining_ = 0u;
  clear_has_calibration_games_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::calibration_games_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.calibration_games_remaining)
  return calibration_games_remaining_;
}
inline void CMsgDOTATeam::set_calibration_games_remaining(::google::protobuf::uint32 value) {
  set_has_calibration_games_remaining();
  calibration_games_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.calibration_games_remaining)
}

// optional uint64 logo = 11;
inline bool CMsgDOTATeam::has_logo() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTATeam::set_has_logo() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTATeam::clear_has_logo() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTATeam::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTATeam::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.logo)
  return logo_;
}
inline void CMsgDOTATeam::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.logo)
}

// optional uint64 base_logo = 12;
inline bool CMsgDOTATeam::has_base_logo() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTATeam::set_has_base_logo() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTATeam::clear_has_base_logo() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTATeam::clear_base_logo() {
  base_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_base_logo();
}
inline ::google::protobuf::uint64 CMsgDOTATeam::base_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.base_logo)
  return base_logo_;
}
inline void CMsgDOTATeam::set_base_logo(::google::protobuf::uint64 value) {
  set_has_base_logo();
  base_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.base_logo)
}

// optional uint64 banner_logo = 13;
inline bool CMsgDOTATeam::has_banner_logo() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTATeam::set_has_banner_logo() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTATeam::clear_has_banner_logo() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTATeam::clear_banner_logo() {
  banner_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_banner_logo();
}
inline ::google::protobuf::uint64 CMsgDOTATeam::banner_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.banner_logo)
  return banner_logo_;
}
inline void CMsgDOTATeam::set_banner_logo(::google::protobuf::uint64 value) {
  set_has_banner_logo();
  banner_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.banner_logo)
}

// optional uint64 sponsor_logo = 14;
inline bool CMsgDOTATeam::has_sponsor_logo() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTATeam::set_has_sponsor_logo() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTATeam::clear_has_sponsor_logo() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTATeam::clear_sponsor_logo() {
  sponsor_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsor_logo();
}
inline ::google::protobuf::uint64 CMsgDOTATeam::sponsor_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.sponsor_logo)
  return sponsor_logo_;
}
inline void CMsgDOTATeam::set_sponsor_logo(::google::protobuf::uint64 value) {
  set_has_sponsor_logo();
  sponsor_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.sponsor_logo)
}

// optional string country_code = 15;
inline bool CMsgDOTATeam::has_country_code() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTATeam::set_has_country_code() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTATeam::clear_has_country_code() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTATeam::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgDOTATeam::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.country_code)
  return *country_code_;
}
inline void CMsgDOTATeam::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.country_code)
}
inline void CMsgDOTATeam::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeam.country_code)
}
inline void CMsgDOTATeam::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeam.country_code)
}
inline ::std::string* CMsgDOTATeam::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeam.country_code)
  return country_code_;
}
inline ::std::string* CMsgDOTATeam::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeam::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeam.country_code)
}

// optional string url = 16;
inline bool CMsgDOTATeam::has_url() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTATeam::set_has_url() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTATeam::clear_has_url() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTATeam::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CMsgDOTATeam::url() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.url)
  return *url_;
}
inline void CMsgDOTATeam::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.url)
}
inline void CMsgDOTATeam::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeam.url)
}
inline void CMsgDOTATeam::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeam.url)
}
inline ::std::string* CMsgDOTATeam::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeam.url)
  return url_;
}
inline ::std::string* CMsgDOTATeam::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeam::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeam.url)
}

// optional uint32 fullgamesplayed = 17;
inline bool CMsgDOTATeam::has_fullgamesplayed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTATeam::set_has_fullgamesplayed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTATeam::clear_has_fullgamesplayed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTATeam::clear_fullgamesplayed() {
  fullgamesplayed_ = 0u;
  clear_has_fullgamesplayed();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::fullgamesplayed() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.fullgamesplayed)
  return fullgamesplayed_;
}
inline void CMsgDOTATeam::set_fullgamesplayed(::google::protobuf::uint32 value) {
  set_has_fullgamesplayed();
  fullgamesplayed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.fullgamesplayed)
}

// repeated uint32 leagues = 18;
inline int CMsgDOTATeam::leagues_size() const {
  return leagues_.size();
}
inline void CMsgDOTATeam::clear_leagues() {
  leagues_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::leagues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.leagues)
  return leagues_.Get(index);
}
inline void CMsgDOTATeam::set_leagues(int index, ::google::protobuf::uint32 value) {
  leagues_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.leagues)
}
inline void CMsgDOTATeam::add_leagues(::google::protobuf::uint32 value) {
  leagues_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTATeam.leagues)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTATeam::leagues() const {
  // @@protoc_insertion_point(field_list:CMsgDOTATeam.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTATeam::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTATeam.leagues)
  return &leagues_;
}

// optional uint32 gamesplayed = 19;
inline bool CMsgDOTATeam::has_gamesplayed() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTATeam::set_has_gamesplayed() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgDOTATeam::clear_has_gamesplayed() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgDOTATeam::clear_gamesplayed() {
  gamesplayed_ = 0u;
  clear_has_gamesplayed();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::gamesplayed() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.gamesplayed)
  return gamesplayed_;
}
inline void CMsgDOTATeam::set_gamesplayed(::google::protobuf::uint32 value) {
  set_has_gamesplayed();
  gamesplayed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.gamesplayed)
}

// optional uint32 gamesplayedwithcurrentroster = 20;
inline bool CMsgDOTATeam::has_gamesplayedwithcurrentroster() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTATeam::set_has_gamesplayedwithcurrentroster() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgDOTATeam::clear_has_gamesplayedwithcurrentroster() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgDOTATeam::clear_gamesplayedwithcurrentroster() {
  gamesplayedwithcurrentroster_ = 0u;
  clear_has_gamesplayedwithcurrentroster();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::gamesplayedwithcurrentroster() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.gamesplayedwithcurrentroster)
  return gamesplayedwithcurrentroster_;
}
inline void CMsgDOTATeam::set_gamesplayedwithcurrentroster(::google::protobuf::uint32 value) {
  set_has_gamesplayedwithcurrentroster();
  gamesplayedwithcurrentroster_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.gamesplayedwithcurrentroster)
}

// optional uint32 teammatchmakinggamesplayed = 21;
inline bool CMsgDOTATeam::has_teammatchmakinggamesplayed() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgDOTATeam::set_has_teammatchmakinggamesplayed() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgDOTATeam::clear_has_teammatchmakinggamesplayed() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgDOTATeam::clear_teammatchmakinggamesplayed() {
  teammatchmakinggamesplayed_ = 0u;
  clear_has_teammatchmakinggamesplayed();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::teammatchmakinggamesplayed() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.teammatchmakinggamesplayed)
  return teammatchmakinggamesplayed_;
}
inline void CMsgDOTATeam::set_teammatchmakinggamesplayed(::google::protobuf::uint32 value) {
  set_has_teammatchmakinggamesplayed();
  teammatchmakinggamesplayed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.teammatchmakinggamesplayed)
}

// optional uint32 lastplayedgametime = 22;
inline bool CMsgDOTATeam::has_lastplayedgametime() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgDOTATeam::set_has_lastplayedgametime() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgDOTATeam::clear_has_lastplayedgametime() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgDOTATeam::clear_lastplayedgametime() {
  lastplayedgametime_ = 0u;
  clear_has_lastplayedgametime();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::lastplayedgametime() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.lastplayedgametime)
  return lastplayedgametime_;
}
inline void CMsgDOTATeam::set_lastplayedgametime(::google::protobuf::uint32 value) {
  set_has_lastplayedgametime();
  lastplayedgametime_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.lastplayedgametime)
}

// optional uint32 lastrenametime = 23;
inline bool CMsgDOTATeam::has_lastrenametime() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgDOTATeam::set_has_lastrenametime() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgDOTATeam::clear_has_lastrenametime() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgDOTATeam::clear_lastrenametime() {
  lastrenametime_ = 0u;
  clear_has_lastrenametime();
}
inline ::google::protobuf::uint32 CMsgDOTATeam::lastrenametime() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeam.lastrenametime)
  return lastrenametime_;
}
inline void CMsgDOTATeam::set_lastrenametime(::google::protobuf::uint32 value) {
  set_has_lastrenametime();
  lastrenametime_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeam.lastrenametime)
}

// -------------------------------------------------------------------

// CMsgDOTACreateTeam

// optional string name = 1;
inline bool CMsgDOTACreateTeam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACreateTeam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACreateTeam::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTACreateTeam::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.name)
  return *name_;
}
inline void CMsgDOTACreateTeam::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.name)
}
inline void CMsgDOTACreateTeam::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACreateTeam.name)
}
inline void CMsgDOTACreateTeam::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACreateTeam.name)
}
inline ::std::string* CMsgDOTACreateTeam::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACreateTeam.name)
  return name_;
}
inline ::std::string* CMsgDOTACreateTeam::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACreateTeam::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACreateTeam.name)
}

// optional string tag = 2;
inline bool CMsgDOTACreateTeam::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACreateTeam::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACreateTeam::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& CMsgDOTACreateTeam::tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.tag)
  return *tag_;
}
inline void CMsgDOTACreateTeam::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.tag)
}
inline void CMsgDOTACreateTeam::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACreateTeam.tag)
}
inline void CMsgDOTACreateTeam::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACreateTeam.tag)
}
inline ::std::string* CMsgDOTACreateTeam::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACreateTeam.tag)
  return tag_;
}
inline ::std::string* CMsgDOTACreateTeam::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACreateTeam::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACreateTeam.tag)
}

// optional uint64 logo = 3;
inline bool CMsgDOTACreateTeam::has_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACreateTeam::clear_has_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACreateTeam::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTACreateTeam::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.logo)
  return logo_;
}
inline void CMsgDOTACreateTeam::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.logo)
}

// optional uint64 base_logo = 4;
inline bool CMsgDOTACreateTeam::has_base_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_base_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACreateTeam::clear_has_base_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACreateTeam::clear_base_logo() {
  base_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_base_logo();
}
inline ::google::protobuf::uint64 CMsgDOTACreateTeam::base_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.base_logo)
  return base_logo_;
}
inline void CMsgDOTACreateTeam::set_base_logo(::google::protobuf::uint64 value) {
  set_has_base_logo();
  base_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.base_logo)
}

// optional uint64 banner_logo = 5;
inline bool CMsgDOTACreateTeam::has_banner_logo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_banner_logo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTACreateTeam::clear_has_banner_logo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTACreateTeam::clear_banner_logo() {
  banner_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_banner_logo();
}
inline ::google::protobuf::uint64 CMsgDOTACreateTeam::banner_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.banner_logo)
  return banner_logo_;
}
inline void CMsgDOTACreateTeam::set_banner_logo(::google::protobuf::uint64 value) {
  set_has_banner_logo();
  banner_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.banner_logo)
}

// optional uint64 sponsor_logo = 6;
inline bool CMsgDOTACreateTeam::has_sponsor_logo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_sponsor_logo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTACreateTeam::clear_has_sponsor_logo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTACreateTeam::clear_sponsor_logo() {
  sponsor_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsor_logo();
}
inline ::google::protobuf::uint64 CMsgDOTACreateTeam::sponsor_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.sponsor_logo)
  return sponsor_logo_;
}
inline void CMsgDOTACreateTeam::set_sponsor_logo(::google::protobuf::uint64 value) {
  set_has_sponsor_logo();
  sponsor_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.sponsor_logo)
}

// optional string country_code = 7;
inline bool CMsgDOTACreateTeam::has_country_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_country_code() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTACreateTeam::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTACreateTeam::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgDOTACreateTeam::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.country_code)
  return *country_code_;
}
inline void CMsgDOTACreateTeam::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.country_code)
}
inline void CMsgDOTACreateTeam::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACreateTeam.country_code)
}
inline void CMsgDOTACreateTeam::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACreateTeam.country_code)
}
inline ::std::string* CMsgDOTACreateTeam::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACreateTeam.country_code)
  return country_code_;
}
inline ::std::string* CMsgDOTACreateTeam::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACreateTeam::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACreateTeam.country_code)
}

// optional string url = 8;
inline bool CMsgDOTACreateTeam::has_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTACreateTeam::set_has_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTACreateTeam::clear_has_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTACreateTeam::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CMsgDOTACreateTeam::url() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeam.url)
  return *url_;
}
inline void CMsgDOTACreateTeam::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeam.url)
}
inline void CMsgDOTACreateTeam::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACreateTeam.url)
}
inline void CMsgDOTACreateTeam::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACreateTeam.url)
}
inline ::std::string* CMsgDOTACreateTeam::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACreateTeam.url)
  return url_;
}
inline ::std::string* CMsgDOTACreateTeam::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACreateTeam::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACreateTeam.url)
}

// -------------------------------------------------------------------

// CMsgDOTACreateTeamResponse

// repeated .CMsgDOTACreateTeamResponse.Result results = 1;
inline int CMsgDOTACreateTeamResponse::results_size() const {
  return results_.size();
}
inline void CMsgDOTACreateTeamResponse::clear_results() {
  results_.Clear();
}
inline ::CMsgDOTACreateTeamResponse_Result CMsgDOTACreateTeamResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeamResponse.results)
  return static_cast< ::CMsgDOTACreateTeamResponse_Result >(results_.Get(index));
}
inline void CMsgDOTACreateTeamResponse::set_results(int index, ::CMsgDOTACreateTeamResponse_Result value) {
  assert(::CMsgDOTACreateTeamResponse_Result_IsValid(value));
  results_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeamResponse.results)
}
inline void CMsgDOTACreateTeamResponse::add_results(::CMsgDOTACreateTeamResponse_Result value) {
  assert(::CMsgDOTACreateTeamResponse_Result_IsValid(value));
  results_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACreateTeamResponse.results)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgDOTACreateTeamResponse::results() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACreateTeamResponse.results)
  return results_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgDOTACreateTeamResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACreateTeamResponse.results)
  return &results_;
}

// optional uint32 team_id = 2;
inline bool CMsgDOTACreateTeamResponse::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACreateTeamResponse::set_has_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACreateTeamResponse::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACreateTeamResponse::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTACreateTeamResponse::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeamResponse.team_id)
  return team_id_;
}
inline void CMsgDOTACreateTeamResponse::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeamResponse.team_id)
}

// optional uint32 seconds_remaining = 3;
inline bool CMsgDOTACreateTeamResponse::has_seconds_remaining() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACreateTeamResponse::set_has_seconds_remaining() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACreateTeamResponse::clear_has_seconds_remaining() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACreateTeamResponse::clear_seconds_remaining() {
  seconds_remaining_ = 0u;
  clear_has_seconds_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTACreateTeamResponse::seconds_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeamResponse.seconds_remaining)
  return seconds_remaining_;
}
inline void CMsgDOTACreateTeamResponse::set_seconds_remaining(::google::protobuf::uint32 value) {
  set_has_seconds_remaining();
  seconds_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeamResponse.seconds_remaining)
}

// optional uint32 required_level = 4;
inline bool CMsgDOTACreateTeamResponse::has_required_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACreateTeamResponse::set_has_required_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACreateTeamResponse::clear_has_required_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACreateTeamResponse::clear_required_level() {
  required_level_ = 0u;
  clear_has_required_level();
}
inline ::google::protobuf::uint32 CMsgDOTACreateTeamResponse::required_level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACreateTeamResponse.required_level)
  return required_level_;
}
inline void CMsgDOTACreateTeamResponse::set_required_level(::google::protobuf::uint32 value) {
  set_has_required_level();
  required_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACreateTeamResponse.required_level)
}

// -------------------------------------------------------------------

// CMsgDOTAEditTeam

// optional string name = 1;
inline bool CMsgDOTAEditTeam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEditTeam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEditTeam::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTAEditTeam::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.name)
  return *name_;
}
inline void CMsgDOTAEditTeam::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.name)
}
inline void CMsgDOTAEditTeam::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEditTeam.name)
}
inline void CMsgDOTAEditTeam::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEditTeam.name)
}
inline ::std::string* CMsgDOTAEditTeam::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEditTeam.name)
  return name_;
}
inline ::std::string* CMsgDOTAEditTeam::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEditTeam::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEditTeam.name)
}

// optional string tag = 2;
inline bool CMsgDOTAEditTeam::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEditTeam::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEditTeam::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& CMsgDOTAEditTeam::tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.tag)
  return *tag_;
}
inline void CMsgDOTAEditTeam::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.tag)
}
inline void CMsgDOTAEditTeam::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEditTeam.tag)
}
inline void CMsgDOTAEditTeam::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEditTeam.tag)
}
inline ::std::string* CMsgDOTAEditTeam::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEditTeam.tag)
  return tag_;
}
inline ::std::string* CMsgDOTAEditTeam::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEditTeam::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEditTeam.tag)
}

// optional uint64 logo = 3;
inline bool CMsgDOTAEditTeam::has_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAEditTeam::clear_has_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAEditTeam::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeam::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.logo)
  return logo_;
}
inline void CMsgDOTAEditTeam::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.logo)
}

// optional uint64 base_logo = 4;
inline bool CMsgDOTAEditTeam::has_base_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_base_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAEditTeam::clear_has_base_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAEditTeam::clear_base_logo() {
  base_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_base_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeam::base_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.base_logo)
  return base_logo_;
}
inline void CMsgDOTAEditTeam::set_base_logo(::google::protobuf::uint64 value) {
  set_has_base_logo();
  base_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.base_logo)
}

// optional uint64 banner_logo = 5;
inline bool CMsgDOTAEditTeam::has_banner_logo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_banner_logo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAEditTeam::clear_has_banner_logo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAEditTeam::clear_banner_logo() {
  banner_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_banner_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeam::banner_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.banner_logo)
  return banner_logo_;
}
inline void CMsgDOTAEditTeam::set_banner_logo(::google::protobuf::uint64 value) {
  set_has_banner_logo();
  banner_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.banner_logo)
}

// optional uint64 sponsor_logo = 6;
inline bool CMsgDOTAEditTeam::has_sponsor_logo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_sponsor_logo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAEditTeam::clear_has_sponsor_logo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAEditTeam::clear_sponsor_logo() {
  sponsor_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsor_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeam::sponsor_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.sponsor_logo)
  return sponsor_logo_;
}
inline void CMsgDOTAEditTeam::set_sponsor_logo(::google::protobuf::uint64 value) {
  set_has_sponsor_logo();
  sponsor_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.sponsor_logo)
}

// optional string country_code = 7;
inline bool CMsgDOTAEditTeam::has_country_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_country_code() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAEditTeam::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAEditTeam::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgDOTAEditTeam::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.country_code)
  return *country_code_;
}
inline void CMsgDOTAEditTeam::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.country_code)
}
inline void CMsgDOTAEditTeam::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEditTeam.country_code)
}
inline void CMsgDOTAEditTeam::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEditTeam.country_code)
}
inline ::std::string* CMsgDOTAEditTeam::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEditTeam.country_code)
  return country_code_;
}
inline ::std::string* CMsgDOTAEditTeam::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEditTeam::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEditTeam.country_code)
}

// optional string url = 8;
inline bool CMsgDOTAEditTeam::has_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAEditTeam::clear_has_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAEditTeam::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CMsgDOTAEditTeam::url() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.url)
  return *url_;
}
inline void CMsgDOTAEditTeam::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.url)
}
inline void CMsgDOTAEditTeam::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEditTeam.url)
}
inline void CMsgDOTAEditTeam::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEditTeam.url)
}
inline ::std::string* CMsgDOTAEditTeam::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEditTeam.url)
  return url_;
}
inline ::std::string* CMsgDOTAEditTeam::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEditTeam::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEditTeam.url)
}

// optional uint32 team_id = 9;
inline bool CMsgDOTAEditTeam::has_team_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAEditTeam::set_has_team_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAEditTeam::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAEditTeam::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEditTeam::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeam.team_id)
  return team_id_;
}
inline void CMsgDOTAEditTeam::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeam.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTAEditTeamLogo

// optional uint64 logo = 1;
inline bool CMsgDOTAEditTeamLogo::has_logo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEditTeamLogo::set_has_logo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEditTeamLogo::clear_has_logo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEditTeamLogo::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeamLogo::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamLogo.logo)
  return logo_;
}
inline void CMsgDOTAEditTeamLogo::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamLogo.logo)
}

// optional uint64 base_logo = 2;
inline bool CMsgDOTAEditTeamLogo::has_base_logo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEditTeamLogo::set_has_base_logo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEditTeamLogo::clear_has_base_logo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEditTeamLogo::clear_base_logo() {
  base_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_base_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeamLogo::base_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamLogo.base_logo)
  return base_logo_;
}
inline void CMsgDOTAEditTeamLogo::set_base_logo(::google::protobuf::uint64 value) {
  set_has_base_logo();
  base_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamLogo.base_logo)
}

// optional uint64 banner_logo = 3;
inline bool CMsgDOTAEditTeamLogo::has_banner_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAEditTeamLogo::set_has_banner_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAEditTeamLogo::clear_has_banner_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAEditTeamLogo::clear_banner_logo() {
  banner_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_banner_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeamLogo::banner_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamLogo.banner_logo)
  return banner_logo_;
}
inline void CMsgDOTAEditTeamLogo::set_banner_logo(::google::protobuf::uint64 value) {
  set_has_banner_logo();
  banner_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamLogo.banner_logo)
}

// optional uint64 sponsor_logo = 4;
inline bool CMsgDOTAEditTeamLogo::has_sponsor_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAEditTeamLogo::set_has_sponsor_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAEditTeamLogo::clear_has_sponsor_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAEditTeamLogo::clear_sponsor_logo() {
  sponsor_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsor_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAEditTeamLogo::sponsor_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamLogo.sponsor_logo)
  return sponsor_logo_;
}
inline void CMsgDOTAEditTeamLogo::set_sponsor_logo(::google::protobuf::uint64 value) {
  set_has_sponsor_logo();
  sponsor_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamLogo.sponsor_logo)
}

// optional uint32 team_id = 5;
inline bool CMsgDOTAEditTeamLogo::has_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAEditTeamLogo::set_has_team_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAEditTeamLogo::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAEditTeamLogo::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEditTeamLogo::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamLogo.team_id)
  return team_id_;
}
inline void CMsgDOTAEditTeamLogo::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamLogo.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTAEditTeamLogoResponse

// repeated .CMsgDOTAEditTeamLogoResponse.Result results = 1;
inline int CMsgDOTAEditTeamLogoResponse::results_size() const {
  return results_.size();
}
inline void CMsgDOTAEditTeamLogoResponse::clear_results() {
  results_.Clear();
}
inline ::CMsgDOTAEditTeamLogoResponse_Result CMsgDOTAEditTeamLogoResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamLogoResponse.results)
  return static_cast< ::CMsgDOTAEditTeamLogoResponse_Result >(results_.Get(index));
}
inline void CMsgDOTAEditTeamLogoResponse::set_results(int index, ::CMsgDOTAEditTeamLogoResponse_Result value) {
  assert(::CMsgDOTAEditTeamLogoResponse_Result_IsValid(value));
  results_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamLogoResponse.results)
}
inline void CMsgDOTAEditTeamLogoResponse::add_results(::CMsgDOTAEditTeamLogoResponse_Result value) {
  assert(::CMsgDOTAEditTeamLogoResponse_Result_IsValid(value));
  results_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAEditTeamLogoResponse.results)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgDOTAEditTeamLogoResponse::results() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAEditTeamLogoResponse.results)
  return results_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgDOTAEditTeamLogoResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAEditTeamLogoResponse.results)
  return &results_;
}

// -------------------------------------------------------------------

// CMsgDOTAEditTeamDetails

// optional string country_code = 1;
inline bool CMsgDOTAEditTeamDetails::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEditTeamDetails::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEditTeamDetails::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEditTeamDetails::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgDOTAEditTeamDetails::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamDetails.country_code)
  return *country_code_;
}
inline void CMsgDOTAEditTeamDetails::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamDetails.country_code)
}
inline void CMsgDOTAEditTeamDetails::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEditTeamDetails.country_code)
}
inline void CMsgDOTAEditTeamDetails::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEditTeamDetails.country_code)
}
inline ::std::string* CMsgDOTAEditTeamDetails::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEditTeamDetails.country_code)
  return country_code_;
}
inline ::std::string* CMsgDOTAEditTeamDetails::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEditTeamDetails::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEditTeamDetails.country_code)
}

// optional string url = 2;
inline bool CMsgDOTAEditTeamDetails::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEditTeamDetails::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEditTeamDetails::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEditTeamDetails::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CMsgDOTAEditTeamDetails::url() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamDetails.url)
  return *url_;
}
inline void CMsgDOTAEditTeamDetails::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamDetails.url)
}
inline void CMsgDOTAEditTeamDetails::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEditTeamDetails.url)
}
inline void CMsgDOTAEditTeamDetails::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEditTeamDetails.url)
}
inline ::std::string* CMsgDOTAEditTeamDetails::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEditTeamDetails.url)
  return url_;
}
inline ::std::string* CMsgDOTAEditTeamDetails::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEditTeamDetails::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEditTeamDetails.url)
}

// optional uint32 team_id = 3;
inline bool CMsgDOTAEditTeamDetails::has_team_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAEditTeamDetails::set_has_team_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAEditTeamDetails::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAEditTeamDetails::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEditTeamDetails::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamDetails.team_id)
  return team_id_;
}
inline void CMsgDOTAEditTeamDetails::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamDetails.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTAEditTeamDetailsResponse

// repeated .CMsgDOTAEditTeamDetailsResponse.Result results = 1;
inline int CMsgDOTAEditTeamDetailsResponse::results_size() const {
  return results_.size();
}
inline void CMsgDOTAEditTeamDetailsResponse::clear_results() {
  results_.Clear();
}
inline ::CMsgDOTAEditTeamDetailsResponse_Result CMsgDOTAEditTeamDetailsResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEditTeamDetailsResponse.results)
  return static_cast< ::CMsgDOTAEditTeamDetailsResponse_Result >(results_.Get(index));
}
inline void CMsgDOTAEditTeamDetailsResponse::set_results(int index, ::CMsgDOTAEditTeamDetailsResponse_Result value) {
  assert(::CMsgDOTAEditTeamDetailsResponse_Result_IsValid(value));
  results_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEditTeamDetailsResponse.results)
}
inline void CMsgDOTAEditTeamDetailsResponse::add_results(::CMsgDOTAEditTeamDetailsResponse_Result value) {
  assert(::CMsgDOTAEditTeamDetailsResponse_Result_IsValid(value));
  results_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAEditTeamDetailsResponse.results)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgDOTAEditTeamDetailsResponse::results() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAEditTeamDetailsResponse.results)
  return results_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgDOTAEditTeamDetailsResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAEditTeamDetailsResponse.results)
  return &results_;
}

// -------------------------------------------------------------------

// CMsgDOTADisbandTeam

// optional uint32 team_id = 1;
inline bool CMsgDOTADisbandTeam::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTADisbandTeam::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTADisbandTeam::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTADisbandTeam::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTADisbandTeam::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTADisbandTeam.team_id)
  return team_id_;
}
inline void CMsgDOTADisbandTeam::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTADisbandTeam.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTADisbandTeamResponse

// optional .CMsgDOTADisbandTeamResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTADisbandTeamResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTADisbandTeamResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTADisbandTeamResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTADisbandTeamResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTADisbandTeamResponse_Result CMsgDOTADisbandTeamResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTADisbandTeamResponse.result)
  return static_cast< ::CMsgDOTADisbandTeamResponse_Result >(result_);
}
inline void CMsgDOTADisbandTeamResponse::set_result(::CMsgDOTADisbandTeamResponse_Result value) {
  assert(::CMsgDOTADisbandTeamResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTADisbandTeamResponse.result)
}

// optional string team_name = 2;
inline bool CMsgDOTADisbandTeamResponse::has_team_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTADisbandTeamResponse::set_has_team_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTADisbandTeamResponse::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTADisbandTeamResponse::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTADisbandTeamResponse::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTADisbandTeamResponse.team_name)
  return *team_name_;
}
inline void CMsgDOTADisbandTeamResponse::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTADisbandTeamResponse.team_name)
}
inline void CMsgDOTADisbandTeamResponse::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTADisbandTeamResponse.team_name)
}
inline void CMsgDOTADisbandTeamResponse::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTADisbandTeamResponse.team_name)
}
inline ::std::string* CMsgDOTADisbandTeamResponse::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTADisbandTeamResponse.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTADisbandTeamResponse::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTADisbandTeamResponse::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTADisbandTeamResponse.team_name)
}

// -------------------------------------------------------------------

// CMsgDOTARequestTeamData

// -------------------------------------------------------------------

// CMsgDOTARequestTeamDataResponse

// optional .CMsgDOTARequestTeamDataResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTARequestTeamDataResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestTeamDataResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestTeamDataResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestTeamDataResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTARequestTeamDataResponse_Result CMsgDOTARequestTeamDataResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestTeamDataResponse.result)
  return static_cast< ::CMsgDOTARequestTeamDataResponse_Result >(result_);
}
inline void CMsgDOTARequestTeamDataResponse::set_result(::CMsgDOTARequestTeamDataResponse_Result value) {
  assert(::CMsgDOTARequestTeamDataResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestTeamDataResponse.result)
}

// repeated .CMsgDOTATeamData data = 2;
inline int CMsgDOTARequestTeamDataResponse::data_size() const {
  return data_.size();
}
inline void CMsgDOTARequestTeamDataResponse::clear_data() {
  data_.Clear();
}
inline const ::CMsgDOTATeamData& CMsgDOTARequestTeamDataResponse::data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestTeamDataResponse.data)
  return data_.Get(index);
}
inline ::CMsgDOTATeamData* CMsgDOTARequestTeamDataResponse::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestTeamDataResponse.data)
  return data_.Mutable(index);
}
inline ::CMsgDOTATeamData* CMsgDOTARequestTeamDataResponse::add_data() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestTeamDataResponse.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamData >&
CMsgDOTARequestTeamDataResponse::data() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestTeamDataResponse.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTATeamData >*
CMsgDOTARequestTeamDataResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestTeamDataResponse.data)
  return &data_;
}

// -------------------------------------------------------------------

// CMsgDOTATeamData

// optional bool on_team = 1;
inline bool CMsgDOTATeamData::has_on_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamData::set_has_on_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamData::clear_has_on_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamData::clear_on_team() {
  on_team_ = false;
  clear_has_on_team();
}
inline bool CMsgDOTATeamData::on_team() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamData.on_team)
  return on_team_;
}
inline void CMsgDOTATeamData::set_on_team(bool value) {
  set_has_on_team();
  on_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamData.on_team)
}

// optional bool profile_team = 2;
inline bool CMsgDOTATeamData::has_profile_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamData::set_has_profile_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamData::clear_has_profile_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamData::clear_profile_team() {
  profile_team_ = false;
  clear_has_profile_team();
}
inline bool CMsgDOTATeamData::profile_team() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamData.profile_team)
  return profile_team_;
}
inline void CMsgDOTATeamData::set_profile_team(bool value) {
  set_has_profile_team();
  profile_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamData.profile_team)
}

// optional .CMsgDOTATeam team = 3;
inline bool CMsgDOTATeamData::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTATeamData::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTATeamData::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTATeamData::clear_team() {
  if (team_ != NULL) team_->::CMsgDOTATeam::Clear();
  clear_has_team();
}
inline const ::CMsgDOTATeam& CMsgDOTATeamData::team() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamData.team)
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::CMsgDOTATeam* CMsgDOTATeamData::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::CMsgDOTATeam;
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamData.team)
  return team_;
}
inline ::CMsgDOTATeam* CMsgDOTATeamData::release_team() {
  clear_has_team();
  ::CMsgDOTATeam* temp = team_;
  team_ = NULL;
  return temp;
}
inline void CMsgDOTATeamData::set_allocated_team(::CMsgDOTATeam* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamData.team)
}

// -------------------------------------------------------------------

// CMsgDOTATeamProfileRequest

// optional uint32 team_id = 1;
inline bool CMsgDOTATeamProfileRequest::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamProfileRequest::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamProfileRequest::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamProfileRequest::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamProfileRequest::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamProfileRequest.team_id)
  return team_id_;
}
inline void CMsgDOTATeamProfileRequest::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamProfileRequest.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTATeamMemberProfileRequest

// optional fixed64 steam_id = 1;
inline bool CMsgDOTATeamMemberProfileRequest::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamMemberProfileRequest::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamMemberProfileRequest::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamMemberProfileRequest::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTATeamMemberProfileRequest::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamMemberProfileRequest.steam_id)
  return steam_id_;
}
inline void CMsgDOTATeamMemberProfileRequest::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamMemberProfileRequest.steam_id)
}

// -------------------------------------------------------------------

// CMsgDOTATeamIDByNameRequest

// optional string name = 1;
inline bool CMsgDOTATeamIDByNameRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamIDByNameRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamIDByNameRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamIDByNameRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTATeamIDByNameRequest::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamIDByNameRequest.name)
  return *name_;
}
inline void CMsgDOTATeamIDByNameRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamIDByNameRequest.name)
}
inline void CMsgDOTATeamIDByNameRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeamIDByNameRequest.name)
}
inline void CMsgDOTATeamIDByNameRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeamIDByNameRequest.name)
}
inline ::std::string* CMsgDOTATeamIDByNameRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamIDByNameRequest.name)
  return name_;
}
inline ::std::string* CMsgDOTATeamIDByNameRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeamIDByNameRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamIDByNameRequest.name)
}

// -------------------------------------------------------------------

// CMsgDOTATeamIDByNameResponse

// optional uint32 eresult = 1;
inline bool CMsgDOTATeamIDByNameResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamIDByNameResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamIDByNameResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamIDByNameResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTATeamIDByNameResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamIDByNameResponse.eresult)
  return eresult_;
}
inline void CMsgDOTATeamIDByNameResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamIDByNameResponse.eresult)
}

// optional uint32 team_id = 2;
inline bool CMsgDOTATeamIDByNameResponse::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamIDByNameResponse::set_has_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamIDByNameResponse::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamIDByNameResponse::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamIDByNameResponse::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamIDByNameResponse.team_id)
  return team_id_;
}
inline void CMsgDOTATeamIDByNameResponse::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamIDByNameResponse.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTATeamProfileResponse

// optional uint32 eresult = 1;
inline bool CMsgDOTATeamProfileResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamProfileResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamProfileResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamProfileResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTATeamProfileResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamProfileResponse.eresult)
  return eresult_;
}
inline void CMsgDOTATeamProfileResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamProfileResponse.eresult)
}

// optional .CMsgDOTATeam team = 2;
inline bool CMsgDOTATeamProfileResponse::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamProfileResponse::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamProfileResponse::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamProfileResponse::clear_team() {
  if (team_ != NULL) team_->::CMsgDOTATeam::Clear();
  clear_has_team();
}
inline const ::CMsgDOTATeam& CMsgDOTATeamProfileResponse::team() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamProfileResponse.team)
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::CMsgDOTATeam* CMsgDOTATeamProfileResponse::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::CMsgDOTATeam;
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamProfileResponse.team)
  return team_;
}
inline ::CMsgDOTATeam* CMsgDOTATeamProfileResponse::release_team() {
  clear_has_team();
  ::CMsgDOTATeam* temp = team_;
  team_ = NULL;
  return temp;
}
inline void CMsgDOTATeamProfileResponse::set_allocated_team(::CMsgDOTATeam* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamProfileResponse.team)
}

// -------------------------------------------------------------------

// CMsgDOTAProTeamListRequest

// -------------------------------------------------------------------

// CMsgDOTAProTeamListResponse_TeamEntry

// optional uint32 team_id = 1;
inline bool CMsgDOTAProTeamListResponse_TeamEntry::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProTeamListResponse_TeamEntry::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.TeamEntry.team_id)
  return team_id_;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProTeamListResponse.TeamEntry.team_id)
}

// optional string tag = 2;
inline bool CMsgDOTAProTeamListResponse_TeamEntry::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& CMsgDOTAProTeamListResponse_TeamEntry::tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.TeamEntry.tag)
  return *tag_;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProTeamListResponse.TeamEntry.tag)
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProTeamListResponse.TeamEntry.tag)
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProTeamListResponse.TeamEntry.tag)
}
inline ::std::string* CMsgDOTAProTeamListResponse_TeamEntry::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProTeamListResponse.TeamEntry.tag)
  return tag_;
}
inline ::std::string* CMsgDOTAProTeamListResponse_TeamEntry::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProTeamListResponse.TeamEntry.tag)
}

// optional uint32 time_created = 3;
inline bool CMsgDOTAProTeamListResponse_TeamEntry::has_time_created() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_has_time_created() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CMsgDOTAProTeamListResponse_TeamEntry::time_created() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.TeamEntry.time_created)
  return time_created_;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProTeamListResponse.TeamEntry.time_created)
}

// optional uint64 logo = 4;
inline bool CMsgDOTAProTeamListResponse_TeamEntry::has_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_has_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_has_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAProTeamListResponse_TeamEntry::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.TeamEntry.logo)
  return logo_;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProTeamListResponse.TeamEntry.logo)
}

// optional string country_code = 5;
inline bool CMsgDOTAProTeamListResponse_TeamEntry::has_country_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_has_country_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgDOTAProTeamListResponse_TeamEntry::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.TeamEntry.country_code)
  return *country_code_;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProTeamListResponse.TeamEntry.country_code)
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProTeamListResponse.TeamEntry.country_code)
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProTeamListResponse.TeamEntry.country_code)
}
inline ::std::string* CMsgDOTAProTeamListResponse_TeamEntry::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProTeamListResponse.TeamEntry.country_code)
  return country_code_;
}
inline ::std::string* CMsgDOTAProTeamListResponse_TeamEntry::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProTeamListResponse.TeamEntry.country_code)
}

// optional uint32 member_count = 6;
inline bool CMsgDOTAProTeamListResponse_TeamEntry::has_member_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_has_member_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::clear_member_count() {
  member_count_ = 0u;
  clear_has_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTAProTeamListResponse_TeamEntry::member_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.TeamEntry.member_count)
  return member_count_;
}
inline void CMsgDOTAProTeamListResponse_TeamEntry::set_member_count(::google::protobuf::uint32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProTeamListResponse.TeamEntry.member_count)
}

// -------------------------------------------------------------------

// CMsgDOTAProTeamListResponse

// repeated .CMsgDOTAProTeamListResponse.TeamEntry teams = 1;
inline int CMsgDOTAProTeamListResponse::teams_size() const {
  return teams_.size();
}
inline void CMsgDOTAProTeamListResponse::clear_teams() {
  teams_.Clear();
}
inline const ::CMsgDOTAProTeamListResponse_TeamEntry& CMsgDOTAProTeamListResponse::teams(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.teams)
  return teams_.Get(index);
}
inline ::CMsgDOTAProTeamListResponse_TeamEntry* CMsgDOTAProTeamListResponse::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProTeamListResponse.teams)
  return teams_.Mutable(index);
}
inline ::CMsgDOTAProTeamListResponse_TeamEntry* CMsgDOTAProTeamListResponse::add_teams() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProTeamListResponse.teams)
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProTeamListResponse_TeamEntry >&
CMsgDOTAProTeamListResponse::teams() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProTeamListResponse.teams)
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProTeamListResponse_TeamEntry >*
CMsgDOTAProTeamListResponse::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProTeamListResponse.teams)
  return &teams_;
}

// optional uint32 eresult = 2;
inline bool CMsgDOTAProTeamListResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProTeamListResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProTeamListResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProTeamListResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTAProTeamListResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProTeamListResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAProTeamListResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProTeamListResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTATeamInvite_InviterToGC

// optional uint32 account_id = 1;
inline bool CMsgDOTATeamInvite_InviterToGC::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamInvite_InviterToGC::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamInvite_InviterToGC::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamInvite_InviterToGC::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamInvite_InviterToGC::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_InviterToGC.account_id)
  return account_id_;
}
inline void CMsgDOTATeamInvite_InviterToGC::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_InviterToGC.account_id)
}

// optional uint32 team_id = 2;
inline bool CMsgDOTATeamInvite_InviterToGC::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamInvite_InviterToGC::set_has_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamInvite_InviterToGC::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamInvite_InviterToGC::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamInvite_InviterToGC::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_InviterToGC.team_id)
  return team_id_;
}
inline void CMsgDOTATeamInvite_InviterToGC::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_InviterToGC.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTATeamInvite_GCImmediateResponseToInviter

// optional .CMsgDOTATeamInvite_GCImmediateResponseToInviter.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTATeamInvite_GCImmediateResponseToInviter::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result CMsgDOTATeamInvite_GCImmediateResponseToInviter::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCImmediateResponseToInviter.result)
  return static_cast< ::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result >(result_);
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_result(::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result value) {
  assert(::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCImmediateResponseToInviter.result)
}

// optional string invitee_name = 2;
inline bool CMsgDOTATeamInvite_GCImmediateResponseToInviter::has_invitee_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_has_invitee_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::clear_has_invitee_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::clear_invitee_name() {
  if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_->clear();
  }
  clear_has_invitee_name();
}
inline const ::std::string& CMsgDOTATeamInvite_GCImmediateResponseToInviter::invitee_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCImmediateResponseToInviter.invitee_name)
  return *invitee_name_;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_invitee_name(const ::std::string& value) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCImmediateResponseToInviter.invitee_name)
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_invitee_name(const char* value) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeamInvite_GCImmediateResponseToInviter.invitee_name)
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_invitee_name(const char* value, size_t size) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeamInvite_GCImmediateResponseToInviter.invitee_name)
}
inline ::std::string* CMsgDOTATeamInvite_GCImmediateResponseToInviter::mutable_invitee_name() {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamInvite_GCImmediateResponseToInviter.invitee_name)
  return invitee_name_;
}
inline ::std::string* CMsgDOTATeamInvite_GCImmediateResponseToInviter::release_invitee_name() {
  clear_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitee_name_;
    invitee_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_allocated_invitee_name(::std::string* invitee_name) {
  if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitee_name_;
  }
  if (invitee_name) {
    set_has_invitee_name();
    invitee_name_ = invitee_name;
  } else {
    clear_has_invitee_name();
    invitee_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamInvite_GCImmediateResponseToInviter.invitee_name)
}

// optional uint32 required_level = 3;
inline bool CMsgDOTATeamInvite_GCImmediateResponseToInviter::has_required_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_has_required_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::clear_has_required_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::clear_required_level() {
  required_level_ = 0u;
  clear_has_required_level();
}
inline ::google::protobuf::uint32 CMsgDOTATeamInvite_GCImmediateResponseToInviter::required_level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCImmediateResponseToInviter.required_level)
  return required_level_;
}
inline void CMsgDOTATeamInvite_GCImmediateResponseToInviter::set_required_level(::google::protobuf::uint32 value) {
  set_has_required_level();
  required_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCImmediateResponseToInviter.required_level)
}

// -------------------------------------------------------------------

// CMsgDOTATeamInvite_GCRequestToInvitee

// optional uint32 inviter_account_id = 1;
inline bool CMsgDOTATeamInvite_GCRequestToInvitee::has_inviter_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_has_inviter_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_has_inviter_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_inviter_account_id() {
  inviter_account_id_ = 0u;
  clear_has_inviter_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamInvite_GCRequestToInvitee::inviter_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCRequestToInvitee.inviter_account_id)
  return inviter_account_id_;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_inviter_account_id(::google::protobuf::uint32 value) {
  set_has_inviter_account_id();
  inviter_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCRequestToInvitee.inviter_account_id)
}

// optional string team_name = 2;
inline bool CMsgDOTATeamInvite_GCRequestToInvitee::has_team_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_has_team_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTATeamInvite_GCRequestToInvitee::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCRequestToInvitee.team_name)
  return *team_name_;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCRequestToInvitee.team_name)
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeamInvite_GCRequestToInvitee.team_name)
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeamInvite_GCRequestToInvitee.team_name)
}
inline ::std::string* CMsgDOTATeamInvite_GCRequestToInvitee::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamInvite_GCRequestToInvitee.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTATeamInvite_GCRequestToInvitee::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamInvite_GCRequestToInvitee.team_name)
}

// optional string team_tag = 3;
inline bool CMsgDOTATeamInvite_GCRequestToInvitee::has_team_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_has_team_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_has_team_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_team_tag() {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_->clear();
  }
  clear_has_team_tag();
}
inline const ::std::string& CMsgDOTATeamInvite_GCRequestToInvitee::team_tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCRequestToInvitee.team_tag)
  return *team_tag_;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_team_tag(const ::std::string& value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCRequestToInvitee.team_tag)
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_team_tag(const char* value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeamInvite_GCRequestToInvitee.team_tag)
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_team_tag(const char* value, size_t size) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeamInvite_GCRequestToInvitee.team_tag)
}
inline ::std::string* CMsgDOTATeamInvite_GCRequestToInvitee::mutable_team_tag() {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamInvite_GCRequestToInvitee.team_tag)
  return team_tag_;
}
inline ::std::string* CMsgDOTATeamInvite_GCRequestToInvitee::release_team_tag() {
  clear_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_tag_;
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_allocated_team_tag(::std::string* team_tag) {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_tag_;
  }
  if (team_tag) {
    set_has_team_tag();
    team_tag_ = team_tag;
  } else {
    clear_has_team_tag();
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamInvite_GCRequestToInvitee.team_tag)
}

// optional uint64 logo = 4;
inline bool CMsgDOTATeamInvite_GCRequestToInvitee::has_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_has_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_has_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTATeamInvite_GCRequestToInvitee::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCRequestToInvitee.logo)
  return logo_;
}
inline void CMsgDOTATeamInvite_GCRequestToInvitee::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCRequestToInvitee.logo)
}

// -------------------------------------------------------------------

// CMsgDOTATeamInvite_InviteeResponseToGC

// optional .CMsgDOTATeamInvite_InviteeResponseToGC.Result result = 1 [default = JOIN];
inline bool CMsgDOTATeamInvite_InviteeResponseToGC::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamInvite_InviteeResponseToGC::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamInvite_InviteeResponseToGC::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamInvite_InviteeResponseToGC::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTATeamInvite_InviteeResponseToGC_Result CMsgDOTATeamInvite_InviteeResponseToGC::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_InviteeResponseToGC.result)
  return static_cast< ::CMsgDOTATeamInvite_InviteeResponseToGC_Result >(result_);
}
inline void CMsgDOTATeamInvite_InviteeResponseToGC::set_result(::CMsgDOTATeamInvite_InviteeResponseToGC_Result value) {
  assert(::CMsgDOTATeamInvite_InviteeResponseToGC_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_InviteeResponseToGC.result)
}

// -------------------------------------------------------------------

// CMsgDOTATeamInvite_GCResponseToInviter

// optional .CMsgDOTATeamInvite_GCResponseToInviter.Result result = 1 [default = JOINED];
inline bool CMsgDOTATeamInvite_GCResponseToInviter::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTATeamInvite_GCResponseToInviter_Result CMsgDOTATeamInvite_GCResponseToInviter::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCResponseToInviter.result)
  return static_cast< ::CMsgDOTATeamInvite_GCResponseToInviter_Result >(result_);
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::set_result(::CMsgDOTATeamInvite_GCResponseToInviter_Result value) {
  assert(::CMsgDOTATeamInvite_GCResponseToInviter_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCResponseToInviter.result)
}

// optional string invitee_name = 2;
inline bool CMsgDOTATeamInvite_GCResponseToInviter::has_invitee_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::set_has_invitee_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::clear_has_invitee_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::clear_invitee_name() {
  if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_->clear();
  }
  clear_has_invitee_name();
}
inline const ::std::string& CMsgDOTATeamInvite_GCResponseToInviter::invitee_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCResponseToInviter.invitee_name)
  return *invitee_name_;
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::set_invitee_name(const ::std::string& value) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCResponseToInviter.invitee_name)
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::set_invitee_name(const char* value) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeamInvite_GCResponseToInviter.invitee_name)
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::set_invitee_name(const char* value, size_t size) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeamInvite_GCResponseToInviter.invitee_name)
}
inline ::std::string* CMsgDOTATeamInvite_GCResponseToInviter::mutable_invitee_name() {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamInvite_GCResponseToInviter.invitee_name)
  return invitee_name_;
}
inline ::std::string* CMsgDOTATeamInvite_GCResponseToInviter::release_invitee_name() {
  clear_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitee_name_;
    invitee_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeamInvite_GCResponseToInviter::set_allocated_invitee_name(::std::string* invitee_name) {
  if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitee_name_;
  }
  if (invitee_name) {
    set_has_invitee_name();
    invitee_name_ = invitee_name;
  } else {
    clear_has_invitee_name();
    invitee_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamInvite_GCResponseToInviter.invitee_name)
}

// -------------------------------------------------------------------

// CMsgDOTATeamInvite_GCResponseToInvitee

// optional .CMsgDOTATeamInvite_GCResponseToInvitee.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTATeamInvite_GCResponseToInvitee::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTATeamInvite_GCResponseToInvitee_Result CMsgDOTATeamInvite_GCResponseToInvitee::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCResponseToInvitee.result)
  return static_cast< ::CMsgDOTATeamInvite_GCResponseToInvitee_Result >(result_);
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::set_result(::CMsgDOTATeamInvite_GCResponseToInvitee_Result value) {
  assert(::CMsgDOTATeamInvite_GCResponseToInvitee_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCResponseToInvitee.result)
}

// optional string team_name = 2;
inline bool CMsgDOTATeamInvite_GCResponseToInvitee::has_team_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::set_has_team_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTATeamInvite_GCResponseToInvitee::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamInvite_GCResponseToInvitee.team_name)
  return *team_name_;
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATeamInvite_GCResponseToInvitee.team_name)
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATeamInvite_GCResponseToInvitee.team_name)
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATeamInvite_GCResponseToInvitee.team_name)
}
inline ::std::string* CMsgDOTATeamInvite_GCResponseToInvitee::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATeamInvite_GCResponseToInvitee.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTATeamInvite_GCResponseToInvitee::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATeamInvite_GCResponseToInvitee::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATeamInvite_GCResponseToInvitee.team_name)
}

// -------------------------------------------------------------------

// CMsgDOTATeamOnProfile

// optional uint32 team_id = 1;
inline bool CMsgDOTATeamOnProfile::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATeamOnProfile::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATeamOnProfile::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATeamOnProfile::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTATeamOnProfile::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamOnProfile.team_id)
  return team_id_;
}
inline void CMsgDOTATeamOnProfile::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamOnProfile.team_id)
}

// optional bool enabled = 2;
inline bool CMsgDOTATeamOnProfile::has_enabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATeamOnProfile::set_has_enabled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATeamOnProfile::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATeamOnProfile::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool CMsgDOTATeamOnProfile::enabled() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATeamOnProfile.enabled)
  return enabled_;
}
inline void CMsgDOTATeamOnProfile::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATeamOnProfile.enabled)
}

// -------------------------------------------------------------------

// CMsgDOTAKickTeamMember

// optional uint32 account_id = 1;
inline bool CMsgDOTAKickTeamMember::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAKickTeamMember::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAKickTeamMember::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAKickTeamMember::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAKickTeamMember::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAKickTeamMember.account_id)
  return account_id_;
}
inline void CMsgDOTAKickTeamMember::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAKickTeamMember.account_id)
}

// optional uint32 team_id = 2;
inline bool CMsgDOTAKickTeamMember::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAKickTeamMember::set_has_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAKickTeamMember::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAKickTeamMember::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAKickTeamMember::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAKickTeamMember.team_id)
  return team_id_;
}
inline void CMsgDOTAKickTeamMember::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAKickTeamMember.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTAKickTeamMemberResponse

// optional .CMsgDOTAKickTeamMemberResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTAKickTeamMemberResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAKickTeamMemberResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAKickTeamMemberResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAKickTeamMemberResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAKickTeamMemberResponse_Result CMsgDOTAKickTeamMemberResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAKickTeamMemberResponse.result)
  return static_cast< ::CMsgDOTAKickTeamMemberResponse_Result >(result_);
}
inline void CMsgDOTAKickTeamMemberResponse::set_result(::CMsgDOTAKickTeamMemberResponse_Result value) {
  assert(::CMsgDOTAKickTeamMemberResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAKickTeamMemberResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTATransferTeamAdmin

// optional uint32 new_admin_account_id = 1;
inline bool CMsgDOTATransferTeamAdmin::has_new_admin_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATransferTeamAdmin::set_has_new_admin_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATransferTeamAdmin::clear_has_new_admin_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATransferTeamAdmin::clear_new_admin_account_id() {
  new_admin_account_id_ = 0u;
  clear_has_new_admin_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTATransferTeamAdmin::new_admin_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATransferTeamAdmin.new_admin_account_id)
  return new_admin_account_id_;
}
inline void CMsgDOTATransferTeamAdmin::set_new_admin_account_id(::google::protobuf::uint32 value) {
  set_has_new_admin_account_id();
  new_admin_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATransferTeamAdmin.new_admin_account_id)
}

// optional uint32 team_id = 2;
inline bool CMsgDOTATransferTeamAdmin::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATransferTeamAdmin::set_has_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATransferTeamAdmin::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATransferTeamAdmin::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTATransferTeamAdmin::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATransferTeamAdmin.team_id)
  return team_id_;
}
inline void CMsgDOTATransferTeamAdmin::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATransferTeamAdmin.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTATransferTeamAdminResponse

// optional .CMsgDOTATransferTeamAdminResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTATransferTeamAdminResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATransferTeamAdminResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATransferTeamAdminResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATransferTeamAdminResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTATransferTeamAdminResponse_Result CMsgDOTATransferTeamAdminResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATransferTeamAdminResponse.result)
  return static_cast< ::CMsgDOTATransferTeamAdminResponse_Result >(result_);
}
inline void CMsgDOTATransferTeamAdminResponse::set_result(::CMsgDOTATransferTeamAdminResponse_Result value) {
  assert(::CMsgDOTATransferTeamAdminResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTATransferTeamAdminResponse.result)
}

// optional string invitee_name = 2;
inline bool CMsgDOTATransferTeamAdminResponse::has_invitee_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATransferTeamAdminResponse::set_has_invitee_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATransferTeamAdminResponse::clear_has_invitee_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATransferTeamAdminResponse::clear_invitee_name() {
  if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_->clear();
  }
  clear_has_invitee_name();
}
inline const ::std::string& CMsgDOTATransferTeamAdminResponse::invitee_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTATransferTeamAdminResponse.invitee_name)
  return *invitee_name_;
}
inline void CMsgDOTATransferTeamAdminResponse::set_invitee_name(const ::std::string& value) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTATransferTeamAdminResponse.invitee_name)
}
inline void CMsgDOTATransferTeamAdminResponse::set_invitee_name(const char* value) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTATransferTeamAdminResponse.invitee_name)
}
inline void CMsgDOTATransferTeamAdminResponse::set_invitee_name(const char* value, size_t size) {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  invitee_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTATransferTeamAdminResponse.invitee_name)
}
inline ::std::string* CMsgDOTATransferTeamAdminResponse::mutable_invitee_name() {
  set_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTATransferTeamAdminResponse.invitee_name)
  return invitee_name_;
}
inline ::std::string* CMsgDOTATransferTeamAdminResponse::release_invitee_name() {
  clear_has_invitee_name();
  if (invitee_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitee_name_;
    invitee_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTATransferTeamAdminResponse::set_allocated_invitee_name(::std::string* invitee_name) {
  if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitee_name_;
  }
  if (invitee_name) {
    set_has_invitee_name();
    invitee_name_ = invitee_name;
  } else {
    clear_has_invitee_name();
    invitee_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTATransferTeamAdminResponse.invitee_name)
}

// -------------------------------------------------------------------

// CMsgDOTALeaveTeam

// optional uint32 team_id = 1;
inline bool CMsgDOTALeaveTeam::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaveTeam::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaveTeam::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaveTeam::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeaveTeam::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaveTeam.team_id)
  return team_id_;
}
inline void CMsgDOTALeaveTeam::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaveTeam.team_id)
}

// -------------------------------------------------------------------

// CMsgDOTALeaveTeamResponse

// optional .CMsgDOTALeaveTeamResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTALeaveTeamResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaveTeamResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaveTeamResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaveTeamResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTALeaveTeamResponse_Result CMsgDOTALeaveTeamResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaveTeamResponse.result)
  return static_cast< ::CMsgDOTALeaveTeamResponse_Result >(result_);
}
inline void CMsgDOTALeaveTeamResponse::set_result(::CMsgDOTALeaveTeamResponse_Result value) {
  assert(::CMsgDOTALeaveTeamResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaveTeamResponse.result)
}

// optional string team_name = 2;
inline bool CMsgDOTALeaveTeamResponse::has_team_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeaveTeamResponse::set_has_team_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeaveTeamResponse::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeaveTeamResponse::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTALeaveTeamResponse::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaveTeamResponse.team_name)
  return *team_name_;
}
inline void CMsgDOTALeaveTeamResponse::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTALeaveTeamResponse.team_name)
}
inline void CMsgDOTALeaveTeamResponse::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTALeaveTeamResponse.team_name)
}
inline void CMsgDOTALeaveTeamResponse::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTALeaveTeamResponse.team_name)
}
inline ::std::string* CMsgDOTALeaveTeamResponse::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeaveTeamResponse.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTALeaveTeamResponse::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTALeaveTeamResponse::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALeaveTeamResponse.team_name)
}

// -------------------------------------------------------------------

// CMsgDOTABetaParticipation

// optional uint32 access_rights = 1;
inline bool CMsgDOTABetaParticipation::has_access_rights() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTABetaParticipation::set_has_access_rights() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTABetaParticipation::clear_has_access_rights() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTABetaParticipation::clear_access_rights() {
  access_rights_ = 0u;
  clear_has_access_rights();
}
inline ::google::protobuf::uint32 CMsgDOTABetaParticipation::access_rights() const {
  // @@protoc_insertion_point(field_get:CMsgDOTABetaParticipation.access_rights)
  return access_rights_;
}
inline void CMsgDOTABetaParticipation::set_access_rights(::google::protobuf::uint32 value) {
  set_has_access_rights();
  access_rights_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTABetaParticipation.access_rights)
}

// -------------------------------------------------------------------

// CMsgDOTAJoinChatChannel

// optional string channel_name = 2;
inline bool CMsgDOTAJoinChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAJoinChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAJoinChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAJoinChatChannel::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgDOTAJoinChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannel.channel_name)
  return *channel_name_;
}
inline void CMsgDOTAJoinChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannel.channel_name)
}
inline void CMsgDOTAJoinChatChannel::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAJoinChatChannel.channel_name)
}
inline void CMsgDOTAJoinChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAJoinChatChannel.channel_name)
}
inline ::std::string* CMsgDOTAJoinChatChannel::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAJoinChatChannel.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgDOTAJoinChatChannel::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAJoinChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAJoinChatChannel.channel_name)
}

// optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];
inline bool CMsgDOTAJoinChatChannel::has_channel_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAJoinChatChannel::set_has_channel_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAJoinChatChannel::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAJoinChatChannel::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::DOTAChatChannelType_t CMsgDOTAJoinChatChannel::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannel.channel_type)
  return static_cast< ::DOTAChatChannelType_t >(channel_type_);
}
inline void CMsgDOTAJoinChatChannel::set_channel_type(::DOTAChatChannelType_t value) {
  assert(::DOTAChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannel.channel_type)
}

// -------------------------------------------------------------------

// CMsgDOTALeaveChatChannel

// optional uint64 channel_id = 1;
inline bool CMsgDOTALeaveChatChannel::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaveChatChannel::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaveChatChannel::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaveChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTALeaveChatChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaveChatChannel.channel_id)
  return channel_id_;
}
inline void CMsgDOTALeaveChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaveChatChannel.channel_id)
}

// -------------------------------------------------------------------

// CMsgDOTAClientIgnoredUser

// optional uint32 ignored_account_id = 1;
inline bool CMsgDOTAClientIgnoredUser::has_ignored_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClientIgnoredUser::set_has_ignored_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAClientIgnoredUser::clear_has_ignored_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAClientIgnoredUser::clear_ignored_account_id() {
  ignored_account_id_ = 0u;
  clear_has_ignored_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAClientIgnoredUser::ignored_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAClientIgnoredUser.ignored_account_id)
  return ignored_account_id_;
}
inline void CMsgDOTAClientIgnoredUser::set_ignored_account_id(::google::protobuf::uint32 value) {
  set_has_ignored_account_id();
  ignored_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAClientIgnoredUser.ignored_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAChatMessage

// optional uint32 account_id = 1;
inline bool CMsgDOTAChatMessage::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatMessage::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatMessage::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.account_id)
  return account_id_;
}
inline void CMsgDOTAChatMessage::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.account_id)
}

// optional uint64 channel_id = 2;
inline bool CMsgDOTAChatMessage::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAChatMessage::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAChatMessage::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatMessage::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.channel_id)
  return channel_id_;
}
inline void CMsgDOTAChatMessage::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.channel_id)
}

// optional string persona_name = 3;
inline bool CMsgDOTAChatMessage::has_persona_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_persona_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAChatMessage::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAChatMessage::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgDOTAChatMessage::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.persona_name)
  return *persona_name_;
}
inline void CMsgDOTAChatMessage::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.persona_name)
}
inline void CMsgDOTAChatMessage::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatMessage.persona_name)
}
inline void CMsgDOTAChatMessage::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatMessage.persona_name)
}
inline ::std::string* CMsgDOTAChatMessage::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatMessage.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgDOTAChatMessage::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatMessage::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatMessage.persona_name)
}

// optional string text = 4;
inline bool CMsgDOTAChatMessage::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAChatMessage::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAChatMessage::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CMsgDOTAChatMessage::text() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.text)
  return *text_;
}
inline void CMsgDOTAChatMessage::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.text)
}
inline void CMsgDOTAChatMessage::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatMessage.text)
}
inline void CMsgDOTAChatMessage::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatMessage.text)
}
inline ::std::string* CMsgDOTAChatMessage::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatMessage.text)
  return text_;
}
inline ::std::string* CMsgDOTAChatMessage::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatMessage::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatMessage.text)
}

// optional uint32 timestamp = 5;
inline bool CMsgDOTAChatMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAChatMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAChatMessage::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.timestamp)
  return timestamp_;
}
inline void CMsgDOTAChatMessage::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.timestamp)
}

// optional uint32 suggest_invite_account_id = 6;
inline bool CMsgDOTAChatMessage::has_suggest_invite_account_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_suggest_invite_account_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAChatMessage::clear_has_suggest_invite_account_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAChatMessage::clear_suggest_invite_account_id() {
  suggest_invite_account_id_ = 0u;
  clear_has_suggest_invite_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::suggest_invite_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.suggest_invite_account_id)
  return suggest_invite_account_id_;
}
inline void CMsgDOTAChatMessage::set_suggest_invite_account_id(::google::protobuf::uint32 value) {
  set_has_suggest_invite_account_id();
  suggest_invite_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.suggest_invite_account_id)
}

// optional string suggest_invite_name = 7;
inline bool CMsgDOTAChatMessage::has_suggest_invite_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_suggest_invite_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAChatMessage::clear_has_suggest_invite_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAChatMessage::clear_suggest_invite_name() {
  if (suggest_invite_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suggest_invite_name_->clear();
  }
  clear_has_suggest_invite_name();
}
inline const ::std::string& CMsgDOTAChatMessage::suggest_invite_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.suggest_invite_name)
  return *suggest_invite_name_;
}
inline void CMsgDOTAChatMessage::set_suggest_invite_name(const ::std::string& value) {
  set_has_suggest_invite_name();
  if (suggest_invite_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suggest_invite_name_ = new ::std::string;
  }
  suggest_invite_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.suggest_invite_name)
}
inline void CMsgDOTAChatMessage::set_suggest_invite_name(const char* value) {
  set_has_suggest_invite_name();
  if (suggest_invite_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suggest_invite_name_ = new ::std::string;
  }
  suggest_invite_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatMessage.suggest_invite_name)
}
inline void CMsgDOTAChatMessage::set_suggest_invite_name(const char* value, size_t size) {
  set_has_suggest_invite_name();
  if (suggest_invite_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suggest_invite_name_ = new ::std::string;
  }
  suggest_invite_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatMessage.suggest_invite_name)
}
inline ::std::string* CMsgDOTAChatMessage::mutable_suggest_invite_name() {
  set_has_suggest_invite_name();
  if (suggest_invite_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suggest_invite_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatMessage.suggest_invite_name)
  return suggest_invite_name_;
}
inline ::std::string* CMsgDOTAChatMessage::release_suggest_invite_name() {
  clear_has_suggest_invite_name();
  if (suggest_invite_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = suggest_invite_name_;
    suggest_invite_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatMessage::set_allocated_suggest_invite_name(::std::string* suggest_invite_name) {
  if (suggest_invite_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suggest_invite_name_;
  }
  if (suggest_invite_name) {
    set_has_suggest_invite_name();
    suggest_invite_name_ = suggest_invite_name;
  } else {
    clear_has_suggest_invite_name();
    suggest_invite_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatMessage.suggest_invite_name)
}

// optional uint32 fantasy_draft_owner_account_id = 8;
inline bool CMsgDOTAChatMessage::has_fantasy_draft_owner_account_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_fantasy_draft_owner_account_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAChatMessage::clear_has_fantasy_draft_owner_account_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAChatMessage::clear_fantasy_draft_owner_account_id() {
  fantasy_draft_owner_account_id_ = 0u;
  clear_has_fantasy_draft_owner_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::fantasy_draft_owner_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.fantasy_draft_owner_account_id)
  return fantasy_draft_owner_account_id_;
}
inline void CMsgDOTAChatMessage::set_fantasy_draft_owner_account_id(::google::protobuf::uint32 value) {
  set_has_fantasy_draft_owner_account_id();
  fantasy_draft_owner_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.fantasy_draft_owner_account_id)
}

// optional uint32 fantasy_draft_player_account_id = 9;
inline bool CMsgDOTAChatMessage::has_fantasy_draft_player_account_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_fantasy_draft_player_account_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAChatMessage::clear_has_fantasy_draft_player_account_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAChatMessage::clear_fantasy_draft_player_account_id() {
  fantasy_draft_player_account_id_ = 0u;
  clear_has_fantasy_draft_player_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::fantasy_draft_player_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.fantasy_draft_player_account_id)
  return fantasy_draft_player_account_id_;
}
inline void CMsgDOTAChatMessage::set_fantasy_draft_player_account_id(::google::protobuf::uint32 value) {
  set_has_fantasy_draft_player_account_id();
  fantasy_draft_player_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.fantasy_draft_player_account_id)
}

// optional uint32 event_id = 10;
inline bool CMsgDOTAChatMessage::has_event_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_event_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAChatMessage::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAChatMessage::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.event_id)
  return event_id_;
}
inline void CMsgDOTAChatMessage::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.event_id)
}

// optional bool suggest_invite_to_lobby = 11;
inline bool CMsgDOTAChatMessage::has_suggest_invite_to_lobby() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_suggest_invite_to_lobby() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAChatMessage::clear_has_suggest_invite_to_lobby() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAChatMessage::clear_suggest_invite_to_lobby() {
  suggest_invite_to_lobby_ = false;
  clear_has_suggest_invite_to_lobby();
}
inline bool CMsgDOTAChatMessage::suggest_invite_to_lobby() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.suggest_invite_to_lobby)
  return suggest_invite_to_lobby_;
}
inline void CMsgDOTAChatMessage::set_suggest_invite_to_lobby(bool value) {
  set_has_suggest_invite_to_lobby();
  suggest_invite_to_lobby_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.suggest_invite_to_lobby)
}

// optional uint32 event_points = 12;
inline bool CMsgDOTAChatMessage::has_event_points() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_event_points() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAChatMessage::clear_has_event_points() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAChatMessage::clear_event_points() {
  event_points_ = 0u;
  clear_has_event_points();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::event_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.event_points)
  return event_points_;
}
inline void CMsgDOTAChatMessage::set_event_points(::google::protobuf::uint32 value) {
  set_has_event_points();
  event_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.event_points)
}

// optional bool coin_flip = 13;
inline bool CMsgDOTAChatMessage::has_coin_flip() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_coin_flip() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAChatMessage::clear_has_coin_flip() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAChatMessage::clear_coin_flip() {
  coin_flip_ = false;
  clear_has_coin_flip();
}
inline bool CMsgDOTAChatMessage::coin_flip() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.coin_flip)
  return coin_flip_;
}
inline void CMsgDOTAChatMessage::set_coin_flip(bool value) {
  set_has_coin_flip();
  coin_flip_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.coin_flip)
}

// optional int32 player_id = 14 [default = -1];
inline bool CMsgDOTAChatMessage::has_player_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_player_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAChatMessage::clear_has_player_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAChatMessage::clear_player_id() {
  player_id_ = -1;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CMsgDOTAChatMessage::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.player_id)
  return player_id_;
}
inline void CMsgDOTAChatMessage::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.player_id)
}

// optional uint32 share_profile_account_id = 15;
inline bool CMsgDOTAChatMessage::has_share_profile_account_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAChatMessage::set_has_share_profile_account_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAChatMessage::clear_has_share_profile_account_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAChatMessage::clear_share_profile_account_id() {
  share_profile_account_id_ = 0u;
  clear_has_share_profile_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAChatMessage::share_profile_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMessage.share_profile_account_id)
  return share_profile_account_id_;
}
inline void CMsgDOTAChatMessage::set_share_profile_account_id(::google::protobuf::uint32 value) {
  set_has_share_profile_account_id();
  share_profile_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMessage.share_profile_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAChatMember

// optional fixed64 steam_id = 1;
inline bool CMsgDOTAChatMember::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatMember::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatMember::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatMember::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMember.steam_id)
  return steam_id_;
}
inline void CMsgDOTAChatMember::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMember.steam_id)
}

// optional string persona_name = 2;
inline bool CMsgDOTAChatMember::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAChatMember::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAChatMember::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAChatMember::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgDOTAChatMember::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatMember.persona_name)
  return *persona_name_;
}
inline void CMsgDOTAChatMember::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatMember.persona_name)
}
inline void CMsgDOTAChatMember::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatMember.persona_name)
}
inline void CMsgDOTAChatMember::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatMember.persona_name)
}
inline ::std::string* CMsgDOTAChatMember::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatMember.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgDOTAChatMember::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatMember::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatMember.persona_name)
}

// -------------------------------------------------------------------

// CMsgDOTAJoinChatChannelResponse

// optional uint32 response = 1;
inline bool CMsgDOTAJoinChatChannelResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAJoinChatChannelResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_response() {
  response_ = 0u;
  clear_has_response();
}
inline ::google::protobuf::uint32 CMsgDOTAJoinChatChannelResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.response)
  return response_;
}
inline void CMsgDOTAJoinChatChannelResponse::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannelResponse.response)
}

// optional string channel_name = 2;
inline bool CMsgDOTAJoinChatChannelResponse::has_channel_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAJoinChatChannelResponse::set_has_channel_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgDOTAJoinChatChannelResponse::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.channel_name)
  return *channel_name_;
}
inline void CMsgDOTAJoinChatChannelResponse::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannelResponse.channel_name)
}
inline void CMsgDOTAJoinChatChannelResponse::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAJoinChatChannelResponse.channel_name)
}
inline void CMsgDOTAJoinChatChannelResponse::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAJoinChatChannelResponse.channel_name)
}
inline ::std::string* CMsgDOTAJoinChatChannelResponse::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAJoinChatChannelResponse.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgDOTAJoinChatChannelResponse::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAJoinChatChannelResponse::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAJoinChatChannelResponse.channel_name)
}

// optional fixed64 channel_id = 3;
inline bool CMsgDOTAJoinChatChannelResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAJoinChatChannelResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAJoinChatChannelResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.channel_id)
  return channel_id_;
}
inline void CMsgDOTAJoinChatChannelResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannelResponse.channel_id)
}

// optional uint32 max_members = 4;
inline bool CMsgDOTAJoinChatChannelResponse::has_max_members() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAJoinChatChannelResponse::set_has_max_members() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_has_max_members() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_max_members() {
  max_members_ = 0u;
  clear_has_max_members();
}
inline ::google::protobuf::uint32 CMsgDOTAJoinChatChannelResponse::max_members() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.max_members)
  return max_members_;
}
inline void CMsgDOTAJoinChatChannelResponse::set_max_members(::google::protobuf::uint32 value) {
  set_has_max_members();
  max_members_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannelResponse.max_members)
}

// repeated .CMsgDOTAChatMember members = 5;
inline int CMsgDOTAJoinChatChannelResponse::members_size() const {
  return members_.size();
}
inline void CMsgDOTAJoinChatChannelResponse::clear_members() {
  members_.Clear();
}
inline const ::CMsgDOTAChatMember& CMsgDOTAJoinChatChannelResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.members)
  return members_.Get(index);
}
inline ::CMsgDOTAChatMember* CMsgDOTAJoinChatChannelResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAJoinChatChannelResponse.members)
  return members_.Mutable(index);
}
inline ::CMsgDOTAChatMember* CMsgDOTAJoinChatChannelResponse::add_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTAJoinChatChannelResponse.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >&
CMsgDOTAJoinChatChannelResponse::members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAJoinChatChannelResponse.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >*
CMsgDOTAJoinChatChannelResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAJoinChatChannelResponse.members)
  return &members_;
}

// optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];
inline bool CMsgDOTAJoinChatChannelResponse::has_channel_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAJoinChatChannelResponse::set_has_channel_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::DOTAChatChannelType_t CMsgDOTAJoinChatChannelResponse::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.channel_type)
  return static_cast< ::DOTAChatChannelType_t >(channel_type_);
}
inline void CMsgDOTAJoinChatChannelResponse::set_channel_type(::DOTAChatChannelType_t value) {
  assert(::DOTAChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannelResponse.channel_type)
}

// optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];
inline bool CMsgDOTAJoinChatChannelResponse::has_result() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAJoinChatChannelResponse::set_has_result() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAJoinChatChannelResponse_Result CMsgDOTAJoinChatChannelResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.result)
  return static_cast< ::CMsgDOTAJoinChatChannelResponse_Result >(result_);
}
inline void CMsgDOTAJoinChatChannelResponse::set_result(::CMsgDOTAJoinChatChannelResponse_Result value) {
  assert(::CMsgDOTAJoinChatChannelResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannelResponse.result)
}

// optional bool gc_initiated_join = 8;
inline bool CMsgDOTAJoinChatChannelResponse::has_gc_initiated_join() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAJoinChatChannelResponse::set_has_gc_initiated_join() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_has_gc_initiated_join() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAJoinChatChannelResponse::clear_gc_initiated_join() {
  gc_initiated_join_ = false;
  clear_has_gc_initiated_join();
}
inline bool CMsgDOTAJoinChatChannelResponse::gc_initiated_join() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinChatChannelResponse.gc_initiated_join)
  return gc_initiated_join_;
}
inline void CMsgDOTAJoinChatChannelResponse::set_gc_initiated_join(bool value) {
  set_has_gc_initiated_join();
  gc_initiated_join_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinChatChannelResponse.gc_initiated_join)
}

// -------------------------------------------------------------------

// CMsgDOTAChatChannelFullUpdate

// optional fixed64 channel_id = 1;
inline bool CMsgDOTAChatChannelFullUpdate::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatChannelFullUpdate::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatChannelFullUpdate::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatChannelFullUpdate::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatChannelFullUpdate::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatChannelFullUpdate.channel_id)
  return channel_id_;
}
inline void CMsgDOTAChatChannelFullUpdate::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatChannelFullUpdate.channel_id)
}

// repeated .CMsgDOTAChatMember members = 2;
inline int CMsgDOTAChatChannelFullUpdate::members_size() const {
  return members_.size();
}
inline void CMsgDOTAChatChannelFullUpdate::clear_members() {
  members_.Clear();
}
inline const ::CMsgDOTAChatMember& CMsgDOTAChatChannelFullUpdate::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatChannelFullUpdate.members)
  return members_.Get(index);
}
inline ::CMsgDOTAChatMember* CMsgDOTAChatChannelFullUpdate::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatChannelFullUpdate.members)
  return members_.Mutable(index);
}
inline ::CMsgDOTAChatMember* CMsgDOTAChatChannelFullUpdate::add_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTAChatChannelFullUpdate.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >&
CMsgDOTAChatChannelFullUpdate::members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAChatChannelFullUpdate.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatMember >*
CMsgDOTAChatChannelFullUpdate::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAChatChannelFullUpdate.members)
  return &members_;
}

// -------------------------------------------------------------------

// CMsgDOTAOtherJoinedChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgDOTAOtherJoinedChatChannel::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAOtherJoinedChatChannel::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAOtherJoinedChatChannel::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAOtherJoinedChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAOtherJoinedChatChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAOtherJoinedChatChannel.channel_id)
  return channel_id_;
}
inline void CMsgDOTAOtherJoinedChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAOtherJoinedChatChannel.channel_id)
}

// optional string persona_name = 2;
inline bool CMsgDOTAOtherJoinedChatChannel::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAOtherJoinedChatChannel::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAOtherJoinedChatChannel::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAOtherJoinedChatChannel::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgDOTAOtherJoinedChatChannel::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAOtherJoinedChatChannel.persona_name)
  return *persona_name_;
}
inline void CMsgDOTAOtherJoinedChatChannel::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAOtherJoinedChatChannel.persona_name)
}
inline void CMsgDOTAOtherJoinedChatChannel::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAOtherJoinedChatChannel.persona_name)
}
inline void CMsgDOTAOtherJoinedChatChannel::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAOtherJoinedChatChannel.persona_name)
}
inline ::std::string* CMsgDOTAOtherJoinedChatChannel::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAOtherJoinedChatChannel.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgDOTAOtherJoinedChatChannel::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAOtherJoinedChatChannel::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAOtherJoinedChatChannel.persona_name)
}

// optional fixed64 steam_id = 3;
inline bool CMsgDOTAOtherJoinedChatChannel::has_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAOtherJoinedChatChannel::set_has_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAOtherJoinedChatChannel::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAOtherJoinedChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAOtherJoinedChatChannel::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAOtherJoinedChatChannel.steam_id)
  return steam_id_;
}
inline void CMsgDOTAOtherJoinedChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAOtherJoinedChatChannel.steam_id)
}

// -------------------------------------------------------------------

// CMsgDOTAOtherLeftChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgDOTAOtherLeftChatChannel::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAOtherLeftChatChannel::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAOtherLeftChatChannel::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAOtherLeftChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAOtherLeftChatChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAOtherLeftChatChannel.channel_id)
  return channel_id_;
}
inline void CMsgDOTAOtherLeftChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAOtherLeftChatChannel.channel_id)
}

// optional fixed64 steam_id = 2;
inline bool CMsgDOTAOtherLeftChatChannel::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAOtherLeftChatChannel::set_has_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAOtherLeftChatChannel::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAOtherLeftChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAOtherLeftChatChannel::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAOtherLeftChatChannel.steam_id)
  return steam_id_;
}
inline void CMsgDOTAOtherLeftChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAOtherLeftChatChannel.steam_id)
}

// -------------------------------------------------------------------

// CMsgDOTAChatChannelMemberUpdate_JoinedMember

// optional fixed64 steam_id = 1;
inline bool CMsgDOTAChatChannelMemberUpdate_JoinedMember::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatChannelMemberUpdate_JoinedMember::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatChannelMemberUpdate.JoinedMember.steam_id)
  return steam_id_;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatChannelMemberUpdate.JoinedMember.steam_id)
}

// optional string persona_name = 2;
inline bool CMsgDOTAChatChannelMemberUpdate_JoinedMember::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgDOTAChatChannelMemberUpdate_JoinedMember::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatChannelMemberUpdate.JoinedMember.persona_name)
  return *persona_name_;
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatChannelMemberUpdate.JoinedMember.persona_name)
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatChannelMemberUpdate.JoinedMember.persona_name)
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatChannelMemberUpdate.JoinedMember.persona_name)
}
inline ::std::string* CMsgDOTAChatChannelMemberUpdate_JoinedMember::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatChannelMemberUpdate.JoinedMember.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgDOTAChatChannelMemberUpdate_JoinedMember::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatChannelMemberUpdate_JoinedMember::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatChannelMemberUpdate.JoinedMember.persona_name)
}

// -------------------------------------------------------------------

// CMsgDOTAChatChannelMemberUpdate

// optional fixed64 channel_id = 1;
inline bool CMsgDOTAChatChannelMemberUpdate::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatChannelMemberUpdate::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatChannelMemberUpdate::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatChannelMemberUpdate::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatChannelMemberUpdate::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatChannelMemberUpdate.channel_id)
  return channel_id_;
}
inline void CMsgDOTAChatChannelMemberUpdate::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatChannelMemberUpdate.channel_id)
}

// repeated fixed64 left_steam_ids = 2;
inline int CMsgDOTAChatChannelMemberUpdate::left_steam_ids_size() const {
  return left_steam_ids_.size();
}
inline void CMsgDOTAChatChannelMemberUpdate::clear_left_steam_ids() {
  left_steam_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAChatChannelMemberUpdate::left_steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatChannelMemberUpdate.left_steam_ids)
  return left_steam_ids_.Get(index);
}
inline void CMsgDOTAChatChannelMemberUpdate::set_left_steam_ids(int index, ::google::protobuf::uint64 value) {
  left_steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatChannelMemberUpdate.left_steam_ids)
}
inline void CMsgDOTAChatChannelMemberUpdate::add_left_steam_ids(::google::protobuf::uint64 value) {
  left_steam_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAChatChannelMemberUpdate.left_steam_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAChatChannelMemberUpdate::left_steam_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAChatChannelMemberUpdate.left_steam_ids)
  return left_steam_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAChatChannelMemberUpdate::mutable_left_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAChatChannelMemberUpdate.left_steam_ids)
  return &left_steam_ids_;
}

// repeated .CMsgDOTAChatChannelMemberUpdate.JoinedMember joined_members = 3;
inline int CMsgDOTAChatChannelMemberUpdate::joined_members_size() const {
  return joined_members_.size();
}
inline void CMsgDOTAChatChannelMemberUpdate::clear_joined_members() {
  joined_members_.Clear();
}
inline const ::CMsgDOTAChatChannelMemberUpdate_JoinedMember& CMsgDOTAChatChannelMemberUpdate::joined_members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatChannelMemberUpdate.joined_members)
  return joined_members_.Get(index);
}
inline ::CMsgDOTAChatChannelMemberUpdate_JoinedMember* CMsgDOTAChatChannelMemberUpdate::mutable_joined_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatChannelMemberUpdate.joined_members)
  return joined_members_.Mutable(index);
}
inline ::CMsgDOTAChatChannelMemberUpdate_JoinedMember* CMsgDOTAChatChannelMemberUpdate::add_joined_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTAChatChannelMemberUpdate.joined_members)
  return joined_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatChannelMemberUpdate_JoinedMember >&
CMsgDOTAChatChannelMemberUpdate::joined_members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAChatChannelMemberUpdate.joined_members)
  return joined_members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatChannelMemberUpdate_JoinedMember >*
CMsgDOTAChatChannelMemberUpdate::mutable_joined_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAChatChannelMemberUpdate.joined_members)
  return &joined_members_;
}

// -------------------------------------------------------------------

// CMsgDOTARequestChatChannelList

// -------------------------------------------------------------------

// CMsgDOTARequestChatChannelListResponse_ChatChannel

// optional string channel_name = 1;
inline bool CMsgDOTARequestChatChannelListResponse_ChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgDOTARequestChatChannelListResponse_ChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_name)
  return *channel_name_;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_name)
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_name)
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_name)
}
inline ::std::string* CMsgDOTARequestChatChannelListResponse_ChatChannel::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgDOTARequestChatChannelListResponse_ChatChannel::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_name)
}

// optional uint32 num_members = 2;
inline bool CMsgDOTARequestChatChannelListResponse_ChatChannel::has_num_members() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_has_num_members() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::clear_has_num_members() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::clear_num_members() {
  num_members_ = 0u;
  clear_has_num_members();
}
inline ::google::protobuf::uint32 CMsgDOTARequestChatChannelListResponse_ChatChannel::num_members() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestChatChannelListResponse.ChatChannel.num_members)
  return num_members_;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_num_members(::google::protobuf::uint32 value) {
  set_has_num_members();
  num_members_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestChatChannelListResponse.ChatChannel.num_members)
}

// optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];
inline bool CMsgDOTARequestChatChannelListResponse_ChatChannel::has_channel_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_has_channel_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::DOTAChatChannelType_t CMsgDOTARequestChatChannelListResponse_ChatChannel::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_type)
  return static_cast< ::DOTAChatChannelType_t >(channel_type_);
}
inline void CMsgDOTARequestChatChannelListResponse_ChatChannel::set_channel_type(::DOTAChatChannelType_t value) {
  assert(::DOTAChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestChatChannelListResponse.ChatChannel.channel_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestChatChannelListResponse

// repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;
inline int CMsgDOTARequestChatChannelListResponse::channels_size() const {
  return channels_.size();
}
inline void CMsgDOTARequestChatChannelListResponse::clear_channels() {
  channels_.Clear();
}
inline const ::CMsgDOTARequestChatChannelListResponse_ChatChannel& CMsgDOTARequestChatChannelListResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestChatChannelListResponse.channels)
  return channels_.Get(index);
}
inline ::CMsgDOTARequestChatChannelListResponse_ChatChannel* CMsgDOTARequestChatChannelListResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestChatChannelListResponse.channels)
  return channels_.Mutable(index);
}
inline ::CMsgDOTARequestChatChannelListResponse_ChatChannel* CMsgDOTARequestChatChannelListResponse::add_channels() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestChatChannelListResponse.channels)
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestChatChannelListResponse_ChatChannel >&
CMsgDOTARequestChatChannelListResponse::channels() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestChatChannelListResponse.channels)
  return channels_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestChatChannelListResponse_ChatChannel >*
CMsgDOTARequestChatChannelListResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestChatChannelListResponse.channels)
  return &channels_;
}

// -------------------------------------------------------------------

// CMsgDOTAChatGetUserList

// optional fixed64 channel_id = 1;
inline bool CMsgDOTAChatGetUserList::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatGetUserList::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatGetUserList::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatGetUserList::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatGetUserList::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetUserList.channel_id)
  return channel_id_;
}
inline void CMsgDOTAChatGetUserList::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetUserList.channel_id)
}

// -------------------------------------------------------------------

// CMsgDOTAChatGetUserListResponse_Member

// optional fixed64 steam_id = 1;
inline bool CMsgDOTAChatGetUserListResponse_Member::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatGetUserListResponse_Member::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatGetUserListResponse_Member::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatGetUserListResponse_Member::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatGetUserListResponse_Member::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetUserListResponse.Member.steam_id)
  return steam_id_;
}
inline void CMsgDOTAChatGetUserListResponse_Member::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetUserListResponse.Member.steam_id)
}

// optional string persona_name = 2;
inline bool CMsgDOTAChatGetUserListResponse_Member::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAChatGetUserListResponse_Member::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAChatGetUserListResponse_Member::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAChatGetUserListResponse_Member::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgDOTAChatGetUserListResponse_Member::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetUserListResponse.Member.persona_name)
  return *persona_name_;
}
inline void CMsgDOTAChatGetUserListResponse_Member::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetUserListResponse.Member.persona_name)
}
inline void CMsgDOTAChatGetUserListResponse_Member::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatGetUserListResponse.Member.persona_name)
}
inline void CMsgDOTAChatGetUserListResponse_Member::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatGetUserListResponse.Member.persona_name)
}
inline ::std::string* CMsgDOTAChatGetUserListResponse_Member::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatGetUserListResponse.Member.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgDOTAChatGetUserListResponse_Member::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatGetUserListResponse_Member::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatGetUserListResponse.Member.persona_name)
}

// -------------------------------------------------------------------

// CMsgDOTAChatGetUserListResponse

// optional fixed64 channel_id = 1;
inline bool CMsgDOTAChatGetUserListResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatGetUserListResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatGetUserListResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatGetUserListResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgDOTAChatGetUserListResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetUserListResponse.channel_id)
  return channel_id_;
}
inline void CMsgDOTAChatGetUserListResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetUserListResponse.channel_id)
}

// repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;
inline int CMsgDOTAChatGetUserListResponse::members_size() const {
  return members_.size();
}
inline void CMsgDOTAChatGetUserListResponse::clear_members() {
  members_.Clear();
}
inline const ::CMsgDOTAChatGetUserListResponse_Member& CMsgDOTAChatGetUserListResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetUserListResponse.members)
  return members_.Get(index);
}
inline ::CMsgDOTAChatGetUserListResponse_Member* CMsgDOTAChatGetUserListResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatGetUserListResponse.members)
  return members_.Mutable(index);
}
inline ::CMsgDOTAChatGetUserListResponse_Member* CMsgDOTAChatGetUserListResponse::add_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTAChatGetUserListResponse.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatGetUserListResponse_Member >&
CMsgDOTAChatGetUserListResponse::members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAChatGetUserListResponse.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatGetUserListResponse_Member >*
CMsgDOTAChatGetUserListResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAChatGetUserListResponse.members)
  return &members_;
}

// -------------------------------------------------------------------

// CMsgDOTAChatGetMemberCount

// optional string channel_name = 1;
inline bool CMsgDOTAChatGetMemberCount::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatGetMemberCount::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatGetMemberCount::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatGetMemberCount::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgDOTAChatGetMemberCount::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetMemberCount.channel_name)
  return *channel_name_;
}
inline void CMsgDOTAChatGetMemberCount::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetMemberCount.channel_name)
}
inline void CMsgDOTAChatGetMemberCount::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatGetMemberCount.channel_name)
}
inline void CMsgDOTAChatGetMemberCount::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatGetMemberCount.channel_name)
}
inline ::std::string* CMsgDOTAChatGetMemberCount::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatGetMemberCount.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgDOTAChatGetMemberCount::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatGetMemberCount::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatGetMemberCount.channel_name)
}

// optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];
inline bool CMsgDOTAChatGetMemberCount::has_channel_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAChatGetMemberCount::set_has_channel_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAChatGetMemberCount::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAChatGetMemberCount::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::DOTAChatChannelType_t CMsgDOTAChatGetMemberCount::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetMemberCount.channel_type)
  return static_cast< ::DOTAChatChannelType_t >(channel_type_);
}
inline void CMsgDOTAChatGetMemberCount::set_channel_type(::DOTAChatChannelType_t value) {
  assert(::DOTAChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetMemberCount.channel_type)
}

// -------------------------------------------------------------------

// CMsgDOTAChatGetMemberCountResponse

// optional string channel_name = 1;
inline bool CMsgDOTAChatGetMemberCountResponse::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatGetMemberCountResponse::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatGetMemberCountResponse::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatGetMemberCountResponse::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgDOTAChatGetMemberCountResponse::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetMemberCountResponse.channel_name)
  return *channel_name_;
}
inline void CMsgDOTAChatGetMemberCountResponse::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetMemberCountResponse.channel_name)
}
inline void CMsgDOTAChatGetMemberCountResponse::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAChatGetMemberCountResponse.channel_name)
}
inline void CMsgDOTAChatGetMemberCountResponse::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAChatGetMemberCountResponse.channel_name)
}
inline ::std::string* CMsgDOTAChatGetMemberCountResponse::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatGetMemberCountResponse.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgDOTAChatGetMemberCountResponse::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAChatGetMemberCountResponse::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAChatGetMemberCountResponse.channel_name)
}

// optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];
inline bool CMsgDOTAChatGetMemberCountResponse::has_channel_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAChatGetMemberCountResponse::set_has_channel_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAChatGetMemberCountResponse::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAChatGetMemberCountResponse::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::DOTAChatChannelType_t CMsgDOTAChatGetMemberCountResponse::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetMemberCountResponse.channel_type)
  return static_cast< ::DOTAChatChannelType_t >(channel_type_);
}
inline void CMsgDOTAChatGetMemberCountResponse::set_channel_type(::DOTAChatChannelType_t value) {
  assert(::DOTAChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetMemberCountResponse.channel_type)
}

// optional uint32 member_count = 3;
inline bool CMsgDOTAChatGetMemberCountResponse::has_member_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAChatGetMemberCountResponse::set_has_member_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAChatGetMemberCountResponse::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAChatGetMemberCountResponse::clear_member_count() {
  member_count_ = 0u;
  clear_has_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTAChatGetMemberCountResponse::member_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatGetMemberCountResponse.member_count)
  return member_count_;
}
inline void CMsgDOTAChatGetMemberCountResponse::set_member_count(::google::protobuf::uint32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatGetMemberCountResponse.member_count)
}

// -------------------------------------------------------------------

// CMsgDOTAChatRegionsEnabled_Region

// optional float min_latitude = 1;
inline bool CMsgDOTAChatRegionsEnabled_Region::has_min_latitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_has_min_latitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_has_min_latitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_min_latitude() {
  min_latitude_ = 0;
  clear_has_min_latitude();
}
inline float CMsgDOTAChatRegionsEnabled_Region::min_latitude() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatRegionsEnabled.Region.min_latitude)
  return min_latitude_;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_min_latitude(float value) {
  set_has_min_latitude();
  min_latitude_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatRegionsEnabled.Region.min_latitude)
}

// optional float max_latitude = 2;
inline bool CMsgDOTAChatRegionsEnabled_Region::has_max_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_has_max_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_has_max_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_max_latitude() {
  max_latitude_ = 0;
  clear_has_max_latitude();
}
inline float CMsgDOTAChatRegionsEnabled_Region::max_latitude() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatRegionsEnabled.Region.max_latitude)
  return max_latitude_;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_max_latitude(float value) {
  set_has_max_latitude();
  max_latitude_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatRegionsEnabled.Region.max_latitude)
}

// optional float min_longitude = 3;
inline bool CMsgDOTAChatRegionsEnabled_Region::has_min_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_has_min_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_has_min_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_min_longitude() {
  min_longitude_ = 0;
  clear_has_min_longitude();
}
inline float CMsgDOTAChatRegionsEnabled_Region::min_longitude() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatRegionsEnabled.Region.min_longitude)
  return min_longitude_;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_min_longitude(float value) {
  set_has_min_longitude();
  min_longitude_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatRegionsEnabled.Region.min_longitude)
}

// optional float max_longitude = 4;
inline bool CMsgDOTAChatRegionsEnabled_Region::has_max_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_has_max_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_has_max_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAChatRegionsEnabled_Region::clear_max_longitude() {
  max_longitude_ = 0;
  clear_has_max_longitude();
}
inline float CMsgDOTAChatRegionsEnabled_Region::max_longitude() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatRegionsEnabled.Region.max_longitude)
  return max_longitude_;
}
inline void CMsgDOTAChatRegionsEnabled_Region::set_max_longitude(float value) {
  set_has_max_longitude();
  max_longitude_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatRegionsEnabled.Region.max_longitude)
}

// -------------------------------------------------------------------

// CMsgDOTAChatRegionsEnabled

// optional bool enable_all_regions = 1;
inline bool CMsgDOTAChatRegionsEnabled::has_enable_all_regions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAChatRegionsEnabled::set_has_enable_all_regions() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAChatRegionsEnabled::clear_has_enable_all_regions() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAChatRegionsEnabled::clear_enable_all_regions() {
  enable_all_regions_ = false;
  clear_has_enable_all_regions();
}
inline bool CMsgDOTAChatRegionsEnabled::enable_all_regions() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatRegionsEnabled.enable_all_regions)
  return enable_all_regions_;
}
inline void CMsgDOTAChatRegionsEnabled::set_enable_all_regions(bool value) {
  set_has_enable_all_regions();
  enable_all_regions_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAChatRegionsEnabled.enable_all_regions)
}

// repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;
inline int CMsgDOTAChatRegionsEnabled::enabled_regions_size() const {
  return enabled_regions_.size();
}
inline void CMsgDOTAChatRegionsEnabled::clear_enabled_regions() {
  enabled_regions_.Clear();
}
inline const ::CMsgDOTAChatRegionsEnabled_Region& CMsgDOTAChatRegionsEnabled::enabled_regions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAChatRegionsEnabled.enabled_regions)
  return enabled_regions_.Get(index);
}
inline ::CMsgDOTAChatRegionsEnabled_Region* CMsgDOTAChatRegionsEnabled::mutable_enabled_regions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAChatRegionsEnabled.enabled_regions)
  return enabled_regions_.Mutable(index);
}
inline ::CMsgDOTAChatRegionsEnabled_Region* CMsgDOTAChatRegionsEnabled::add_enabled_regions() {
  // @@protoc_insertion_point(field_add:CMsgDOTAChatRegionsEnabled.enabled_regions)
  return enabled_regions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatRegionsEnabled_Region >&
CMsgDOTAChatRegionsEnabled::enabled_regions() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAChatRegionsEnabled.enabled_regions)
  return enabled_regions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAChatRegionsEnabled_Region >*
CMsgDOTAChatRegionsEnabled::mutable_enabled_regions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAChatRegionsEnabled.enabled_regions)
  return &enabled_regions_;
}

// -------------------------------------------------------------------

// CMsgDOTAGuildSDO_Member

// optional uint32 account_id = 1;
inline bool CMsgDOTAGuildSDO_Member::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildSDO_Member::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildSDO_Member::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildSDO_Member::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO_Member::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.Member.account_id)
  return account_id_;
}
inline void CMsgDOTAGuildSDO_Member::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.Member.account_id)
}

// optional uint32 time_joined = 2;
inline bool CMsgDOTAGuildSDO_Member::has_time_joined() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildSDO_Member::set_has_time_joined() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildSDO_Member::clear_has_time_joined() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildSDO_Member::clear_time_joined() {
  time_joined_ = 0u;
  clear_has_time_joined();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO_Member::time_joined() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.Member.time_joined)
  return time_joined_;
}
inline void CMsgDOTAGuildSDO_Member::set_time_joined(::google::protobuf::uint32 value) {
  set_has_time_joined();
  time_joined_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.Member.time_joined)
}

// optional uint32 role = 3;
inline bool CMsgDOTAGuildSDO_Member::has_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildSDO_Member::set_has_role() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildSDO_Member::clear_has_role() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildSDO_Member::clear_role() {
  role_ = 0u;
  clear_has_role();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO_Member::role() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.Member.role)
  return role_;
}
inline void CMsgDOTAGuildSDO_Member::set_role(::google::protobuf::uint32 value) {
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.Member.role)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildSDO_Invitation

// optional uint32 account_id = 1;
inline bool CMsgDOTAGuildSDO_Invitation::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildSDO_Invitation::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildSDO_Invitation::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildSDO_Invitation::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO_Invitation::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.Invitation.account_id)
  return account_id_;
}
inline void CMsgDOTAGuildSDO_Invitation::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.Invitation.account_id)
}

// optional uint32 time_sent = 2;
inline bool CMsgDOTAGuildSDO_Invitation::has_time_sent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildSDO_Invitation::set_has_time_sent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildSDO_Invitation::clear_has_time_sent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildSDO_Invitation::clear_time_sent() {
  time_sent_ = 0u;
  clear_has_time_sent();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO_Invitation::time_sent() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.Invitation.time_sent)
  return time_sent_;
}
inline void CMsgDOTAGuildSDO_Invitation::set_time_sent(::google::protobuf::uint32 value) {
  set_has_time_sent();
  time_sent_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.Invitation.time_sent)
}

// optional uint32 account_id_sender = 3;
inline bool CMsgDOTAGuildSDO_Invitation::has_account_id_sender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildSDO_Invitation::set_has_account_id_sender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildSDO_Invitation::clear_has_account_id_sender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildSDO_Invitation::clear_account_id_sender() {
  account_id_sender_ = 0u;
  clear_has_account_id_sender();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO_Invitation::account_id_sender() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.Invitation.account_id_sender)
  return account_id_sender_;
}
inline void CMsgDOTAGuildSDO_Invitation::set_account_id_sender(::google::protobuf::uint32 value) {
  set_has_account_id_sender();
  account_id_sender_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.Invitation.account_id_sender)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildSDO

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildSDO::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildSDO::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildSDO::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildSDO::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.guild_id)
}

// optional string name = 2;
inline bool CMsgDOTAGuildSDO::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildSDO::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildSDO::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTAGuildSDO::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.name)
  return *name_;
}
inline void CMsgDOTAGuildSDO::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.name)
}
inline void CMsgDOTAGuildSDO::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildSDO.name)
}
inline void CMsgDOTAGuildSDO::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildSDO.name)
}
inline ::std::string* CMsgDOTAGuildSDO::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildSDO.name)
  return name_;
}
inline ::std::string* CMsgDOTAGuildSDO::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildSDO::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildSDO.name)
}

// optional string tag = 3;
inline bool CMsgDOTAGuildSDO::has_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildSDO::clear_has_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildSDO::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& CMsgDOTAGuildSDO::tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.tag)
  return *tag_;
}
inline void CMsgDOTAGuildSDO::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.tag)
}
inline void CMsgDOTAGuildSDO::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildSDO.tag)
}
inline void CMsgDOTAGuildSDO::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildSDO.tag)
}
inline ::std::string* CMsgDOTAGuildSDO::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildSDO.tag)
  return tag_;
}
inline ::std::string* CMsgDOTAGuildSDO::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildSDO::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildSDO.tag)
}

// optional uint32 time_created = 4;
inline bool CMsgDOTAGuildSDO::has_time_created() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_time_created() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGuildSDO::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGuildSDO::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO::time_created() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.time_created)
  return time_created_;
}
inline void CMsgDOTAGuildSDO::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.time_created)
}

// optional uint32 time_disbanded = 5;
inline bool CMsgDOTAGuildSDO::has_time_disbanded() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_time_disbanded() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGuildSDO::clear_has_time_disbanded() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGuildSDO::clear_time_disbanded() {
  time_disbanded_ = 0u;
  clear_has_time_disbanded();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSDO::time_disbanded() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.time_disbanded)
  return time_disbanded_;
}
inline void CMsgDOTAGuildSDO::set_time_disbanded(::google::protobuf::uint32 value) {
  set_has_time_disbanded();
  time_disbanded_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.time_disbanded)
}

// optional uint64 logo = 6;
inline bool CMsgDOTAGuildSDO::has_logo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_logo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGuildSDO::clear_has_logo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGuildSDO::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildSDO::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.logo)
  return logo_;
}
inline void CMsgDOTAGuildSDO::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.logo)
}

// optional uint64 base_logo = 7;
inline bool CMsgDOTAGuildSDO::has_base_logo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_base_logo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGuildSDO::clear_has_base_logo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGuildSDO::clear_base_logo() {
  base_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_base_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildSDO::base_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.base_logo)
  return base_logo_;
}
inline void CMsgDOTAGuildSDO::set_base_logo(::google::protobuf::uint64 value) {
  set_has_base_logo();
  base_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.base_logo)
}

// optional uint64 banner_logo = 8;
inline bool CMsgDOTAGuildSDO::has_banner_logo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_banner_logo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGuildSDO::clear_has_banner_logo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGuildSDO::clear_banner_logo() {
  banner_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_banner_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildSDO::banner_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.banner_logo)
  return banner_logo_;
}
inline void CMsgDOTAGuildSDO::set_banner_logo(::google::protobuf::uint64 value) {
  set_has_banner_logo();
  banner_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.banner_logo)
}

// repeated .CMsgDOTAGuildSDO.Member members = 9;
inline int CMsgDOTAGuildSDO::members_size() const {
  return members_.size();
}
inline void CMsgDOTAGuildSDO::clear_members() {
  members_.Clear();
}
inline const ::CMsgDOTAGuildSDO_Member& CMsgDOTAGuildSDO::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.members)
  return members_.Get(index);
}
inline ::CMsgDOTAGuildSDO_Member* CMsgDOTAGuildSDO::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildSDO.members)
  return members_.Mutable(index);
}
inline ::CMsgDOTAGuildSDO_Member* CMsgDOTAGuildSDO::add_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGuildSDO.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Member >&
CMsgDOTAGuildSDO::members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGuildSDO.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Member >*
CMsgDOTAGuildSDO::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGuildSDO.members)
  return &members_;
}

// repeated .CMsgDOTAGuildSDO.Invitation invitations = 10;
inline int CMsgDOTAGuildSDO::invitations_size() const {
  return invitations_.size();
}
inline void CMsgDOTAGuildSDO::clear_invitations() {
  invitations_.Clear();
}
inline const ::CMsgDOTAGuildSDO_Invitation& CMsgDOTAGuildSDO::invitations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.invitations)
  return invitations_.Get(index);
}
inline ::CMsgDOTAGuildSDO_Invitation* CMsgDOTAGuildSDO::mutable_invitations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildSDO.invitations)
  return invitations_.Mutable(index);
}
inline ::CMsgDOTAGuildSDO_Invitation* CMsgDOTAGuildSDO::add_invitations() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGuildSDO.invitations)
  return invitations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Invitation >&
CMsgDOTAGuildSDO::invitations() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGuildSDO.invitations)
  return invitations_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildSDO_Invitation >*
CMsgDOTAGuildSDO::mutable_invitations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGuildSDO.invitations)
  return &invitations_;
}

// optional string message = 11;
inline bool CMsgDOTAGuildSDO::has_message() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_message() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAGuildSDO::clear_has_message() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAGuildSDO::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgDOTAGuildSDO::message() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.message)
  return *message_;
}
inline void CMsgDOTAGuildSDO::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.message)
}
inline void CMsgDOTAGuildSDO::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildSDO.message)
}
inline void CMsgDOTAGuildSDO::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildSDO.message)
}
inline ::std::string* CMsgDOTAGuildSDO::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildSDO.message)
  return message_;
}
inline ::std::string* CMsgDOTAGuildSDO::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildSDO::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildSDO.message)
}

// optional bool incremental = 12;
inline bool CMsgDOTAGuildSDO::has_incremental() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAGuildSDO::set_has_incremental() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAGuildSDO::clear_has_incremental() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAGuildSDO::clear_incremental() {
  incremental_ = false;
  clear_has_incremental();
}
inline bool CMsgDOTAGuildSDO::incremental() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSDO.incremental)
  return incremental_;
}
inline void CMsgDOTAGuildSDO::set_incremental(bool value) {
  set_has_incremental();
  incremental_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSDO.incremental)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildAuditSDO_Entry

// optional uint32 event_index = 1;
inline bool CMsgDOTAGuildAuditSDO_Entry::has_event_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_has_event_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_has_event_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_event_index() {
  event_index_ = 0u;
  clear_has_event_index();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO_Entry::event_index() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.Entry.event_index)
  return event_index_;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_event_index(::google::protobuf::uint32 value) {
  set_has_event_index();
  event_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.Entry.event_index)
}

// optional uint32 timestamp = 2;
inline bool CMsgDOTAGuildAuditSDO_Entry::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO_Entry::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.Entry.timestamp)
  return timestamp_;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.Entry.timestamp)
}

// optional uint32 action = 3;
inline bool CMsgDOTAGuildAuditSDO_Entry::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_action() {
  action_ = 0u;
  clear_has_action();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO_Entry::action() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.Entry.action)
  return action_;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_action(::google::protobuf::uint32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.Entry.action)
}

// optional uint32 account_id_requestor = 4;
inline bool CMsgDOTAGuildAuditSDO_Entry::has_account_id_requestor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_has_account_id_requestor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_has_account_id_requestor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_account_id_requestor() {
  account_id_requestor_ = 0u;
  clear_has_account_id_requestor();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO_Entry::account_id_requestor() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.Entry.account_id_requestor)
  return account_id_requestor_;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_account_id_requestor(::google::protobuf::uint32 value) {
  set_has_account_id_requestor();
  account_id_requestor_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.Entry.account_id_requestor)
}

// optional uint32 account_id_target = 5;
inline bool CMsgDOTAGuildAuditSDO_Entry::has_account_id_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_has_account_id_target() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_has_account_id_target() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_account_id_target() {
  account_id_target_ = 0u;
  clear_has_account_id_target();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO_Entry::account_id_target() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.Entry.account_id_target)
  return account_id_target_;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_account_id_target(::google::protobuf::uint32 value) {
  set_has_account_id_target();
  account_id_target_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.Entry.account_id_target)
}

// optional uint32 reference_data_a = 6;
inline bool CMsgDOTAGuildAuditSDO_Entry::has_reference_data_a() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_has_reference_data_a() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_has_reference_data_a() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_reference_data_a() {
  reference_data_a_ = 0u;
  clear_has_reference_data_a();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO_Entry::reference_data_a() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.Entry.reference_data_a)
  return reference_data_a_;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_reference_data_a(::google::protobuf::uint32 value) {
  set_has_reference_data_a();
  reference_data_a_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.Entry.reference_data_a)
}

// optional uint32 reference_data_b = 7;
inline bool CMsgDOTAGuildAuditSDO_Entry::has_reference_data_b() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_has_reference_data_b() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_has_reference_data_b() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGuildAuditSDO_Entry::clear_reference_data_b() {
  reference_data_b_ = 0u;
  clear_has_reference_data_b();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO_Entry::reference_data_b() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.Entry.reference_data_b)
  return reference_data_b_;
}
inline void CMsgDOTAGuildAuditSDO_Entry::set_reference_data_b(::google::protobuf::uint32 value) {
  set_has_reference_data_b();
  reference_data_b_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.Entry.reference_data_b)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildAuditSDO

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildAuditSDO::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildAuditSDO::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildAuditSDO::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildAuditSDO::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildAuditSDO::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildAuditSDO::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildAuditSDO.guild_id)
}

// repeated .CMsgDOTAGuildAuditSDO.Entry entries = 2;
inline int CMsgDOTAGuildAuditSDO::entries_size() const {
  return entries_.size();
}
inline void CMsgDOTAGuildAuditSDO::clear_entries() {
  entries_.Clear();
}
inline const ::CMsgDOTAGuildAuditSDO_Entry& CMsgDOTAGuildAuditSDO::entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildAuditSDO.entries)
  return entries_.Get(index);
}
inline ::CMsgDOTAGuildAuditSDO_Entry* CMsgDOTAGuildAuditSDO::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildAuditSDO.entries)
  return entries_.Mutable(index);
}
inline ::CMsgDOTAGuildAuditSDO_Entry* CMsgDOTAGuildAuditSDO::add_entries() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGuildAuditSDO.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildAuditSDO_Entry >&
CMsgDOTAGuildAuditSDO::entries() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGuildAuditSDO.entries)
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildAuditSDO_Entry >*
CMsgDOTAGuildAuditSDO::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGuildAuditSDO.entries)
  return &entries_;
}

// -------------------------------------------------------------------

// CMsgDOTAAccountGuildMembershipsSDO_Membership

// optional uint32 guild_id = 1;
inline bool CMsgDOTAAccountGuildMembershipsSDO_Membership::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAAccountGuildMembershipsSDO_Membership::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.Membership.guild_id)
  return guild_id_;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAccountGuildMembershipsSDO.Membership.guild_id)
}

// optional uint32 role = 2;
inline bool CMsgDOTAAccountGuildMembershipsSDO_Membership::has_role() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::set_has_role() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::clear_has_role() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::clear_role() {
  role_ = 0u;
  clear_has_role();
}
inline ::google::protobuf::uint32 CMsgDOTAAccountGuildMembershipsSDO_Membership::role() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.Membership.role)
  return role_;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Membership::set_role(::google::protobuf::uint32 value) {
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAccountGuildMembershipsSDO.Membership.role)
}

// -------------------------------------------------------------------

// CMsgDOTAAccountGuildMembershipsSDO_Invitation

// optional uint32 guild_id = 1;
inline bool CMsgDOTAAccountGuildMembershipsSDO_Invitation::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAAccountGuildMembershipsSDO_Invitation::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.Invitation.guild_id)
  return guild_id_;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAccountGuildMembershipsSDO.Invitation.guild_id)
}

// optional uint32 time_sent = 2;
inline bool CMsgDOTAAccountGuildMembershipsSDO_Invitation::has_time_sent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::set_has_time_sent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::clear_has_time_sent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::clear_time_sent() {
  time_sent_ = 0u;
  clear_has_time_sent();
}
inline ::google::protobuf::uint32 CMsgDOTAAccountGuildMembershipsSDO_Invitation::time_sent() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.Invitation.time_sent)
  return time_sent_;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::set_time_sent(::google::protobuf::uint32 value) {
  set_has_time_sent();
  time_sent_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAccountGuildMembershipsSDO.Invitation.time_sent)
}

// optional uint32 account_id_sender = 3;
inline bool CMsgDOTAAccountGuildMembershipsSDO_Invitation::has_account_id_sender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::set_has_account_id_sender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::clear_has_account_id_sender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::clear_account_id_sender() {
  account_id_sender_ = 0u;
  clear_has_account_id_sender();
}
inline ::google::protobuf::uint32 CMsgDOTAAccountGuildMembershipsSDO_Invitation::account_id_sender() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.Invitation.account_id_sender)
  return account_id_sender_;
}
inline void CMsgDOTAAccountGuildMembershipsSDO_Invitation::set_account_id_sender(::google::protobuf::uint32 value) {
  set_has_account_id_sender();
  account_id_sender_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAccountGuildMembershipsSDO.Invitation.account_id_sender)
}

// -------------------------------------------------------------------

// CMsgDOTAAccountGuildMembershipsSDO

// optional uint32 account_id = 1;
inline bool CMsgDOTAAccountGuildMembershipsSDO::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAccountGuildMembershipsSDO::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAAccountGuildMembershipsSDO::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAAccountGuildMembershipsSDO::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.account_id)
  return account_id_;
}
inline void CMsgDOTAAccountGuildMembershipsSDO::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAccountGuildMembershipsSDO.account_id)
}

// repeated .CMsgDOTAAccountGuildMembershipsSDO.Membership memberships = 2;
inline int CMsgDOTAAccountGuildMembershipsSDO::memberships_size() const {
  return memberships_.size();
}
inline void CMsgDOTAAccountGuildMembershipsSDO::clear_memberships() {
  memberships_.Clear();
}
inline const ::CMsgDOTAAccountGuildMembershipsSDO_Membership& CMsgDOTAAccountGuildMembershipsSDO::memberships(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.memberships)
  return memberships_.Get(index);
}
inline ::CMsgDOTAAccountGuildMembershipsSDO_Membership* CMsgDOTAAccountGuildMembershipsSDO::mutable_memberships(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAAccountGuildMembershipsSDO.memberships)
  return memberships_.Mutable(index);
}
inline ::CMsgDOTAAccountGuildMembershipsSDO_Membership* CMsgDOTAAccountGuildMembershipsSDO::add_memberships() {
  // @@protoc_insertion_point(field_add:CMsgDOTAAccountGuildMembershipsSDO.memberships)
  return memberships_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Membership >&
CMsgDOTAAccountGuildMembershipsSDO::memberships() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAAccountGuildMembershipsSDO.memberships)
  return memberships_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Membership >*
CMsgDOTAAccountGuildMembershipsSDO::mutable_memberships() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAAccountGuildMembershipsSDO.memberships)
  return &memberships_;
}

// repeated .CMsgDOTAAccountGuildMembershipsSDO.Invitation invitations = 3;
inline int CMsgDOTAAccountGuildMembershipsSDO::invitations_size() const {
  return invitations_.size();
}
inline void CMsgDOTAAccountGuildMembershipsSDO::clear_invitations() {
  invitations_.Clear();
}
inline const ::CMsgDOTAAccountGuildMembershipsSDO_Invitation& CMsgDOTAAccountGuildMembershipsSDO::invitations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAccountGuildMembershipsSDO.invitations)
  return invitations_.Get(index);
}
inline ::CMsgDOTAAccountGuildMembershipsSDO_Invitation* CMsgDOTAAccountGuildMembershipsSDO::mutable_invitations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAAccountGuildMembershipsSDO.invitations)
  return invitations_.Mutable(index);
}
inline ::CMsgDOTAAccountGuildMembershipsSDO_Invitation* CMsgDOTAAccountGuildMembershipsSDO::add_invitations() {
  // @@protoc_insertion_point(field_add:CMsgDOTAAccountGuildMembershipsSDO.invitations)
  return invitations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Invitation >&
CMsgDOTAAccountGuildMembershipsSDO::invitations() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAAccountGuildMembershipsSDO.invitations)
  return invitations_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAccountGuildMembershipsSDO_Invitation >*
CMsgDOTAAccountGuildMembershipsSDO::mutable_invitations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAAccountGuildMembershipsSDO.invitations)
  return &invitations_;
}

// -------------------------------------------------------------------

// CMsgDOTAGuildCreateRequest

// optional string name = 1;
inline bool CMsgDOTAGuildCreateRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildCreateRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildCreateRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildCreateRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTAGuildCreateRequest::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCreateRequest.name)
  return *name_;
}
inline void CMsgDOTAGuildCreateRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCreateRequest.name)
}
inline void CMsgDOTAGuildCreateRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildCreateRequest.name)
}
inline void CMsgDOTAGuildCreateRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildCreateRequest.name)
}
inline ::std::string* CMsgDOTAGuildCreateRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildCreateRequest.name)
  return name_;
}
inline ::std::string* CMsgDOTAGuildCreateRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildCreateRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildCreateRequest.name)
}

// optional string tag = 2;
inline bool CMsgDOTAGuildCreateRequest::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildCreateRequest::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildCreateRequest::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildCreateRequest::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& CMsgDOTAGuildCreateRequest::tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCreateRequest.tag)
  return *tag_;
}
inline void CMsgDOTAGuildCreateRequest::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCreateRequest.tag)
}
inline void CMsgDOTAGuildCreateRequest::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildCreateRequest.tag)
}
inline void CMsgDOTAGuildCreateRequest::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildCreateRequest.tag)
}
inline ::std::string* CMsgDOTAGuildCreateRequest::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildCreateRequest.tag)
  return tag_;
}
inline ::std::string* CMsgDOTAGuildCreateRequest::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildCreateRequest::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildCreateRequest.tag)
}

// optional uint64 logo = 3;
inline bool CMsgDOTAGuildCreateRequest::has_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildCreateRequest::set_has_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildCreateRequest::clear_has_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildCreateRequest::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildCreateRequest::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCreateRequest.logo)
  return logo_;
}
inline void CMsgDOTAGuildCreateRequest::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCreateRequest.logo)
}

// optional uint64 base_logo = 4;
inline bool CMsgDOTAGuildCreateRequest::has_base_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGuildCreateRequest::set_has_base_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGuildCreateRequest::clear_has_base_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGuildCreateRequest::clear_base_logo() {
  base_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_base_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildCreateRequest::base_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCreateRequest.base_logo)
  return base_logo_;
}
inline void CMsgDOTAGuildCreateRequest::set_base_logo(::google::protobuf::uint64 value) {
  set_has_base_logo();
  base_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCreateRequest.base_logo)
}

// optional uint64 banner_logo = 5;
inline bool CMsgDOTAGuildCreateRequest::has_banner_logo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGuildCreateRequest::set_has_banner_logo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGuildCreateRequest::clear_has_banner_logo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGuildCreateRequest::clear_banner_logo() {
  banner_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_banner_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildCreateRequest::banner_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCreateRequest.banner_logo)
  return banner_logo_;
}
inline void CMsgDOTAGuildCreateRequest::set_banner_logo(::google::protobuf::uint64 value) {
  set_has_banner_logo();
  banner_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCreateRequest.banner_logo)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildCreateResponse

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildCreateResponse::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildCreateResponse::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildCreateResponse::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildCreateResponse::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildCreateResponse::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCreateResponse.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildCreateResponse::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCreateResponse.guild_id)
}

// repeated .CMsgDOTAGuildCreateResponse.EError errors = 2;
inline int CMsgDOTAGuildCreateResponse::errors_size() const {
  return errors_.size();
}
inline void CMsgDOTAGuildCreateResponse::clear_errors() {
  errors_.Clear();
}
inline ::CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::errors(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCreateResponse.errors)
  return static_cast< ::CMsgDOTAGuildCreateResponse_EError >(errors_.Get(index));
}
inline void CMsgDOTAGuildCreateResponse::set_errors(int index, ::CMsgDOTAGuildCreateResponse_EError value) {
  assert(::CMsgDOTAGuildCreateResponse_EError_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCreateResponse.errors)
}
inline void CMsgDOTAGuildCreateResponse::add_errors(::CMsgDOTAGuildCreateResponse_EError value) {
  assert(::CMsgDOTAGuildCreateResponse_EError_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAGuildCreateResponse.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgDOTAGuildCreateResponse::errors() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGuildCreateResponse.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgDOTAGuildCreateResponse::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGuildCreateResponse.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// CMsgDOTAGuildSetAccountRoleRequest

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildSetAccountRoleRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSetAccountRoleRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSetAccountRoleRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSetAccountRoleRequest.guild_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgDOTAGuildSetAccountRoleRequest::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSetAccountRoleRequest::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSetAccountRoleRequest.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSetAccountRoleRequest.target_account_id)
}

// optional uint32 target_role = 3;
inline bool CMsgDOTAGuildSetAccountRoleRequest::has_target_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::set_has_target_role() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::clear_has_target_role() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::clear_target_role() {
  target_role_ = 0u;
  clear_has_target_role();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildSetAccountRoleRequest::target_role() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSetAccountRoleRequest.target_role)
  return target_role_;
}
inline void CMsgDOTAGuildSetAccountRoleRequest::set_target_role(::google::protobuf::uint32 value) {
  set_has_target_role();
  target_role_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSetAccountRoleRequest.target_role)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildSetAccountRoleResponse

// optional .CMsgDOTAGuildSetAccountRoleResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAGuildSetAccountRoleResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildSetAccountRoleResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildSetAccountRoleResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildSetAccountRoleResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildSetAccountRoleResponse.result)
  return static_cast< ::CMsgDOTAGuildSetAccountRoleResponse_EResult >(result_);
}
inline void CMsgDOTAGuildSetAccountRoleResponse::set_result(::CMsgDOTAGuildSetAccountRoleResponse_EResult value) {
  assert(::CMsgDOTAGuildSetAccountRoleResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildSetAccountRoleResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildInviteAccountRequest

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildInviteAccountRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildInviteAccountRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildInviteAccountRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildInviteAccountRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildInviteAccountRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteAccountRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildInviteAccountRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteAccountRequest.guild_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgDOTAGuildInviteAccountRequest::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildInviteAccountRequest::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildInviteAccountRequest::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildInviteAccountRequest::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildInviteAccountRequest::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteAccountRequest.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAGuildInviteAccountRequest::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteAccountRequest.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildInviteAccountResponse

// optional .CMsgDOTAGuildInviteAccountResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAGuildInviteAccountResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildInviteAccountResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildInviteAccountResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildInviteAccountResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteAccountResponse.result)
  return static_cast< ::CMsgDOTAGuildInviteAccountResponse_EResult >(result_);
}
inline void CMsgDOTAGuildInviteAccountResponse::set_result(::CMsgDOTAGuildInviteAccountResponse_EResult value) {
  assert(::CMsgDOTAGuildInviteAccountResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteAccountResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildCancelInviteRequest

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildCancelInviteRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildCancelInviteRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildCancelInviteRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildCancelInviteRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildCancelInviteRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCancelInviteRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildCancelInviteRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCancelInviteRequest.guild_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgDOTAGuildCancelInviteRequest::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildCancelInviteRequest::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildCancelInviteRequest::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildCancelInviteRequest::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildCancelInviteRequest::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCancelInviteRequest.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAGuildCancelInviteRequest::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCancelInviteRequest.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildCancelInviteResponse

// optional .CMsgDOTAGuildCancelInviteResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAGuildCancelInviteResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildCancelInviteResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildCancelInviteResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildCancelInviteResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildCancelInviteResponse.result)
  return static_cast< ::CMsgDOTAGuildCancelInviteResponse_EResult >(result_);
}
inline void CMsgDOTAGuildCancelInviteResponse::set_result(::CMsgDOTAGuildCancelInviteResponse_EResult value) {
  assert(::CMsgDOTAGuildCancelInviteResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildCancelInviteResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildUpdateDetailsRequest

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildUpdateDetailsRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildUpdateDetailsRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildUpdateDetailsRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildUpdateDetailsRequest.guild_id)
}

// optional uint64 logo = 2;
inline bool CMsgDOTAGuildUpdateDetailsRequest::has_logo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_has_logo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_has_logo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildUpdateDetailsRequest::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildUpdateDetailsRequest.logo)
  return logo_;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildUpdateDetailsRequest.logo)
}

// optional uint64 base_logo = 3;
inline bool CMsgDOTAGuildUpdateDetailsRequest::has_base_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_has_base_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_has_base_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_base_logo() {
  base_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_base_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildUpdateDetailsRequest::base_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildUpdateDetailsRequest.base_logo)
  return base_logo_;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_base_logo(::google::protobuf::uint64 value) {
  set_has_base_logo();
  base_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildUpdateDetailsRequest.base_logo)
}

// optional uint64 banner_logo = 4;
inline bool CMsgDOTAGuildUpdateDetailsRequest::has_banner_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_has_banner_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_has_banner_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::clear_banner_logo() {
  banner_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_banner_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildUpdateDetailsRequest::banner_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildUpdateDetailsRequest.banner_logo)
  return banner_logo_;
}
inline void CMsgDOTAGuildUpdateDetailsRequest::set_banner_logo(::google::protobuf::uint64 value) {
  set_has_banner_logo();
  banner_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildUpdateDetailsRequest.banner_logo)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildUpdateDetailsResponse

// optional .CMsgDOTAGuildUpdateDetailsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAGuildUpdateDetailsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildUpdateDetailsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildUpdateDetailsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildUpdateDetailsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildUpdateDetailsResponse.result)
  return static_cast< ::CMsgDOTAGuildUpdateDetailsResponse_EResult >(result_);
}
inline void CMsgDOTAGuildUpdateDetailsResponse::set_result(::CMsgDOTAGuildUpdateDetailsResponse_EResult value) {
  assert(::CMsgDOTAGuildUpdateDetailsResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildUpdateDetailsResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAGCToGCUpdateOpenGuildPartyRequest

// optional uint64 party_id = 1;
inline bool CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.party_id)
  return party_id_;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.party_id)
}

// optional uint32 guild_id = 2;
inline bool CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.guild_id)
}

// repeated uint32 member_account_ids = 3;
inline int CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::member_account_ids_size() const {
  return member_account_ids_.size();
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::clear_member_account_ids() {
  member_account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::member_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.member_account_ids)
  return member_account_ids_.Get(index);
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_member_account_ids(int index, ::google::protobuf::uint32 value) {
  member_account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.member_account_ids)
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::add_member_account_ids(::google::protobuf::uint32 value) {
  member_account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.member_account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::member_account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.member_account_ids)
  return member_account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::mutable_member_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.member_account_ids)
  return &member_account_ids_;
}

// optional string description = 4;
inline bool CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::description() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description)
  return *description_;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description)
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description)
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description)
}
inline ::std::string* CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description)
  return description_;
}
inline ::std::string* CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description)
}

// -------------------------------------------------------------------

// CMsgDOTAGCToGCUpdateOpenGuildPartyResponse

// optional bool maintain_association = 1;
inline bool CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::has_maintain_association() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::set_has_maintain_association() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::clear_has_maintain_association() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::clear_maintain_association() {
  maintain_association_ = false;
  clear_has_maintain_association();
}
inline bool CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::maintain_association() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGCToGCUpdateOpenGuildPartyResponse.maintain_association)
  return maintain_association_;
}
inline void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::set_maintain_association(bool value) {
  set_has_maintain_association();
  maintain_association_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGCToGCUpdateOpenGuildPartyResponse.maintain_association)
}

// -------------------------------------------------------------------

// CMsgDOTAGCToGCDestroyOpenGuildPartyRequest

// optional uint64 party_id = 1;
inline bool CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGCToGCDestroyOpenGuildPartyRequest.party_id)
  return party_id_;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGCToGCDestroyOpenGuildPartyRequest.party_id)
}

// optional uint32 guild_id = 2;
inline bool CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGCToGCDestroyOpenGuildPartyRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGCToGCDestroyOpenGuildPartyRequest.guild_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGCToGCDestroyOpenGuildPartyResponse

// -------------------------------------------------------------------

// CMsgDOTAPartySetOpenGuildRequest

// optional uint32 guild_id = 1;
inline bool CMsgDOTAPartySetOpenGuildRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartySetOpenGuildRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartySetOpenGuildRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartySetOpenGuildRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAPartySetOpenGuildRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartySetOpenGuildRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAPartySetOpenGuildRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartySetOpenGuildRequest.guild_id)
}

// optional string description = 2;
inline bool CMsgDOTAPartySetOpenGuildRequest::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartySetOpenGuildRequest::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartySetOpenGuildRequest::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartySetOpenGuildRequest::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CMsgDOTAPartySetOpenGuildRequest::description() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartySetOpenGuildRequest.description)
  return *description_;
}
inline void CMsgDOTAPartySetOpenGuildRequest::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPartySetOpenGuildRequest.description)
}
inline void CMsgDOTAPartySetOpenGuildRequest::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAPartySetOpenGuildRequest.description)
}
inline void CMsgDOTAPartySetOpenGuildRequest::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAPartySetOpenGuildRequest.description)
}
inline ::std::string* CMsgDOTAPartySetOpenGuildRequest::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPartySetOpenGuildRequest.description)
  return description_;
}
inline ::std::string* CMsgDOTAPartySetOpenGuildRequest::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAPartySetOpenGuildRequest::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAPartySetOpenGuildRequest.description)
}

// -------------------------------------------------------------------

// CMsgDOTAPartySetOpenGuildResponse

// optional .CMsgDOTAPartySetOpenGuildResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAPartySetOpenGuildResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartySetOpenGuildResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartySetOpenGuildResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartySetOpenGuildResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAPartySetOpenGuildResponse_EResult CMsgDOTAPartySetOpenGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartySetOpenGuildResponse.result)
  return static_cast< ::CMsgDOTAPartySetOpenGuildResponse_EResult >(result_);
}
inline void CMsgDOTAPartySetOpenGuildResponse::set_result(::CMsgDOTAPartySetOpenGuildResponse_EResult value) {
  assert(::CMsgDOTAPartySetOpenGuildResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartySetOpenGuildResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAJoinOpenGuildPartyRequest

// optional uint64 party_id = 1;
inline bool CMsgDOTAJoinOpenGuildPartyRequest::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAJoinOpenGuildPartyRequest::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAJoinOpenGuildPartyRequest::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAJoinOpenGuildPartyRequest::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAJoinOpenGuildPartyRequest::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinOpenGuildPartyRequest.party_id)
  return party_id_;
}
inline void CMsgDOTAJoinOpenGuildPartyRequest::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinOpenGuildPartyRequest.party_id)
}

// -------------------------------------------------------------------

// CMsgDOTAJoinOpenGuildPartyResponse

// optional .CMsgDOTAJoinOpenGuildPartyResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAJoinOpenGuildPartyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAJoinOpenGuildPartyResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAJoinOpenGuildPartyResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAJoinOpenGuildPartyResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAJoinOpenGuildPartyResponse_EResult CMsgDOTAJoinOpenGuildPartyResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAJoinOpenGuildPartyResponse.result)
  return static_cast< ::CMsgDOTAJoinOpenGuildPartyResponse_EResult >(result_);
}
inline void CMsgDOTAJoinOpenGuildPartyResponse::set_result(::CMsgDOTAJoinOpenGuildPartyResponse_EResult value) {
  assert(::CMsgDOTAJoinOpenGuildPartyResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAJoinOpenGuildPartyResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildOpenPartyRefresh_OpenParty

// optional uint64 party_id = 1;
inline bool CMsgDOTAGuildOpenPartyRefresh_OpenParty::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildOpenPartyRefresh_OpenParty::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildOpenPartyRefresh.OpenParty.party_id)
  return party_id_;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildOpenPartyRefresh.OpenParty.party_id)
}

// repeated uint32 member_account_ids = 2;
inline int CMsgDOTAGuildOpenPartyRefresh_OpenParty::member_account_ids_size() const {
  return member_account_ids_.size();
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::clear_member_account_ids() {
  member_account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildOpenPartyRefresh_OpenParty::member_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildOpenPartyRefresh.OpenParty.member_account_ids)
  return member_account_ids_.Get(index);
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_member_account_ids(int index, ::google::protobuf::uint32 value) {
  member_account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildOpenPartyRefresh.OpenParty.member_account_ids)
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::add_member_account_ids(::google::protobuf::uint32 value) {
  member_account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAGuildOpenPartyRefresh.OpenParty.member_account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAGuildOpenPartyRefresh_OpenParty::member_account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGuildOpenPartyRefresh.OpenParty.member_account_ids)
  return member_account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAGuildOpenPartyRefresh_OpenParty::mutable_member_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGuildOpenPartyRefresh.OpenParty.member_account_ids)
  return &member_account_ids_;
}

// optional uint32 time_created = 3;
inline bool CMsgDOTAGuildOpenPartyRefresh_OpenParty::has_time_created() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_has_time_created() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildOpenPartyRefresh_OpenParty::time_created() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildOpenPartyRefresh.OpenParty.time_created)
  return time_created_;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildOpenPartyRefresh.OpenParty.time_created)
}

// optional string description = 4;
inline bool CMsgDOTAGuildOpenPartyRefresh_OpenParty::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CMsgDOTAGuildOpenPartyRefresh_OpenParty::description() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildOpenPartyRefresh.OpenParty.description)
  return *description_;
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildOpenPartyRefresh.OpenParty.description)
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildOpenPartyRefresh.OpenParty.description)
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildOpenPartyRefresh.OpenParty.description)
}
inline ::std::string* CMsgDOTAGuildOpenPartyRefresh_OpenParty::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildOpenPartyRefresh.OpenParty.description)
  return description_;
}
inline ::std::string* CMsgDOTAGuildOpenPartyRefresh_OpenParty::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildOpenPartyRefresh_OpenParty::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildOpenPartyRefresh.OpenParty.description)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildOpenPartyRefresh

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildOpenPartyRefresh::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildOpenPartyRefresh::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildOpenPartyRefresh::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildOpenPartyRefresh::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildOpenPartyRefresh::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildOpenPartyRefresh.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildOpenPartyRefresh::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildOpenPartyRefresh.guild_id)
}

// repeated .CMsgDOTAGuildOpenPartyRefresh.OpenParty open_parties = 2;
inline int CMsgDOTAGuildOpenPartyRefresh::open_parties_size() const {
  return open_parties_.size();
}
inline void CMsgDOTAGuildOpenPartyRefresh::clear_open_parties() {
  open_parties_.Clear();
}
inline const ::CMsgDOTAGuildOpenPartyRefresh_OpenParty& CMsgDOTAGuildOpenPartyRefresh::open_parties(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildOpenPartyRefresh.open_parties)
  return open_parties_.Get(index);
}
inline ::CMsgDOTAGuildOpenPartyRefresh_OpenParty* CMsgDOTAGuildOpenPartyRefresh::mutable_open_parties(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildOpenPartyRefresh.open_parties)
  return open_parties_.Mutable(index);
}
inline ::CMsgDOTAGuildOpenPartyRefresh_OpenParty* CMsgDOTAGuildOpenPartyRefresh::add_open_parties() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGuildOpenPartyRefresh.open_parties)
  return open_parties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildOpenPartyRefresh_OpenParty >&
CMsgDOTAGuildOpenPartyRefresh::open_parties() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGuildOpenPartyRefresh.open_parties)
  return open_parties_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGuildOpenPartyRefresh_OpenParty >*
CMsgDOTAGuildOpenPartyRefresh::mutable_open_parties() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGuildOpenPartyRefresh.open_parties)
  return &open_parties_;
}

// -------------------------------------------------------------------

// CMsgDOTARequestGuildData

// -------------------------------------------------------------------

// CMsgDOTAGuildInviteData

// optional bool invited_to_guild = 1;
inline bool CMsgDOTAGuildInviteData::has_invited_to_guild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_invited_to_guild() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildInviteData::clear_has_invited_to_guild() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildInviteData::clear_invited_to_guild() {
  invited_to_guild_ = false;
  clear_has_invited_to_guild();
}
inline bool CMsgDOTAGuildInviteData::invited_to_guild() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.invited_to_guild)
  return invited_to_guild_;
}
inline void CMsgDOTAGuildInviteData::set_invited_to_guild(bool value) {
  set_has_invited_to_guild();
  invited_to_guild_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.invited_to_guild)
}

// optional uint32 guild_id = 2;
inline bool CMsgDOTAGuildInviteData::has_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildInviteData::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildInviteData::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildInviteData::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildInviteData::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.guild_id)
}

// optional string guild_name = 3;
inline bool CMsgDOTAGuildInviteData::has_guild_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_guild_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGuildInviteData::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGuildInviteData::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& CMsgDOTAGuildInviteData::guild_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.guild_name)
  return *guild_name_;
}
inline void CMsgDOTAGuildInviteData::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.guild_name)
}
inline void CMsgDOTAGuildInviteData::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildInviteData.guild_name)
}
inline void CMsgDOTAGuildInviteData::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildInviteData.guild_name)
}
inline ::std::string* CMsgDOTAGuildInviteData::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildInviteData.guild_name)
  return guild_name_;
}
inline ::std::string* CMsgDOTAGuildInviteData::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildInviteData::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildInviteData.guild_name)
}

// optional string guild_tag = 4;
inline bool CMsgDOTAGuildInviteData::has_guild_tag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_guild_tag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGuildInviteData::clear_has_guild_tag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGuildInviteData::clear_guild_tag() {
  if (guild_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_tag_->clear();
  }
  clear_has_guild_tag();
}
inline const ::std::string& CMsgDOTAGuildInviteData::guild_tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.guild_tag)
  return *guild_tag_;
}
inline void CMsgDOTAGuildInviteData::set_guild_tag(const ::std::string& value) {
  set_has_guild_tag();
  if (guild_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_tag_ = new ::std::string;
  }
  guild_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.guild_tag)
}
inline void CMsgDOTAGuildInviteData::set_guild_tag(const char* value) {
  set_has_guild_tag();
  if (guild_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_tag_ = new ::std::string;
  }
  guild_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildInviteData.guild_tag)
}
inline void CMsgDOTAGuildInviteData::set_guild_tag(const char* value, size_t size) {
  set_has_guild_tag();
  if (guild_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_tag_ = new ::std::string;
  }
  guild_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildInviteData.guild_tag)
}
inline ::std::string* CMsgDOTAGuildInviteData::mutable_guild_tag() {
  set_has_guild_tag();
  if (guild_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildInviteData.guild_tag)
  return guild_tag_;
}
inline ::std::string* CMsgDOTAGuildInviteData::release_guild_tag() {
  clear_has_guild_tag();
  if (guild_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_tag_;
    guild_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildInviteData::set_allocated_guild_tag(::std::string* guild_tag) {
  if (guild_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_tag_;
  }
  if (guild_tag) {
    set_has_guild_tag();
    guild_tag_ = guild_tag;
  } else {
    clear_has_guild_tag();
    guild_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildInviteData.guild_tag)
}

// optional uint64 logo = 5;
inline bool CMsgDOTAGuildInviteData::has_logo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_logo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGuildInviteData::clear_has_logo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGuildInviteData::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildInviteData::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.logo)
  return logo_;
}
inline void CMsgDOTAGuildInviteData::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.logo)
}

// optional uint32 inviter = 6;
inline bool CMsgDOTAGuildInviteData::has_inviter() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_inviter() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGuildInviteData::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGuildInviteData::clear_inviter() {
  inviter_ = 0u;
  clear_has_inviter();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildInviteData::inviter() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.inviter)
  return inviter_;
}
inline void CMsgDOTAGuildInviteData::set_inviter(::google::protobuf::uint32 value) {
  set_has_inviter();
  inviter_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.inviter)
}

// optional string inviter_name = 7;
inline bool CMsgDOTAGuildInviteData::has_inviter_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_inviter_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGuildInviteData::clear_has_inviter_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGuildInviteData::clear_inviter_name() {
  if (inviter_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_name_->clear();
  }
  clear_has_inviter_name();
}
inline const ::std::string& CMsgDOTAGuildInviteData::inviter_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.inviter_name)
  return *inviter_name_;
}
inline void CMsgDOTAGuildInviteData::set_inviter_name(const ::std::string& value) {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_name_ = new ::std::string;
  }
  inviter_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.inviter_name)
}
inline void CMsgDOTAGuildInviteData::set_inviter_name(const char* value) {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_name_ = new ::std::string;
  }
  inviter_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildInviteData.inviter_name)
}
inline void CMsgDOTAGuildInviteData::set_inviter_name(const char* value, size_t size) {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_name_ = new ::std::string;
  }
  inviter_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildInviteData.inviter_name)
}
inline ::std::string* CMsgDOTAGuildInviteData::mutable_inviter_name() {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildInviteData.inviter_name)
  return inviter_name_;
}
inline ::std::string* CMsgDOTAGuildInviteData::release_inviter_name() {
  clear_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inviter_name_;
    inviter_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildInviteData::set_allocated_inviter_name(::std::string* inviter_name) {
  if (inviter_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inviter_name_;
  }
  if (inviter_name) {
    set_has_inviter_name();
    inviter_name_ = inviter_name;
  } else {
    clear_has_inviter_name();
    inviter_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildInviteData.inviter_name)
}

// optional uint32 member_count = 8;
inline bool CMsgDOTAGuildInviteData::has_member_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGuildInviteData::set_has_member_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGuildInviteData::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGuildInviteData::clear_member_count() {
  member_count_ = 0u;
  clear_has_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildInviteData::member_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildInviteData.member_count)
  return member_count_;
}
inline void CMsgDOTAGuildInviteData::set_member_count(::google::protobuf::uint32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildInviteData.member_count)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildUpdateMessage

// optional string message = 1;
inline bool CMsgDOTAGuildUpdateMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildUpdateMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildUpdateMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildUpdateMessage::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgDOTAGuildUpdateMessage::message() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildUpdateMessage.message)
  return *message_;
}
inline void CMsgDOTAGuildUpdateMessage::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildUpdateMessage.message)
}
inline void CMsgDOTAGuildUpdateMessage::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAGuildUpdateMessage.message)
}
inline void CMsgDOTAGuildUpdateMessage::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAGuildUpdateMessage.message)
}
inline ::std::string* CMsgDOTAGuildUpdateMessage::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGuildUpdateMessage.message)
  return message_;
}
inline ::std::string* CMsgDOTAGuildUpdateMessage::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAGuildUpdateMessage::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAGuildUpdateMessage.message)
}

// optional uint32 guild_id = 2;
inline bool CMsgDOTAGuildUpdateMessage::has_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildUpdateMessage::set_has_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildUpdateMessage::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildUpdateMessage::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildUpdateMessage::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildUpdateMessage.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildUpdateMessage::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildUpdateMessage.guild_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildEditLogoRequest

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildEditLogoRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildEditLogoRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildEditLogoRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildEditLogoRequest::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildEditLogoRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildEditLogoRequest.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildEditLogoRequest::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildEditLogoRequest.guild_id)
}

// optional uint64 logo = 2;
inline bool CMsgDOTAGuildEditLogoRequest::has_logo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildEditLogoRequest::set_has_logo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildEditLogoRequest::clear_has_logo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildEditLogoRequest::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGuildEditLogoRequest::logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildEditLogoRequest.logo)
  return logo_;
}
inline void CMsgDOTAGuildEditLogoRequest::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildEditLogoRequest.logo)
}

// -------------------------------------------------------------------

// CMsgDOTAGuildEditLogoResponse

// optional uint32 guild_id = 1;
inline bool CMsgDOTAGuildEditLogoResponse::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGuildEditLogoResponse::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGuildEditLogoResponse::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGuildEditLogoResponse::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGuildEditLogoResponse::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildEditLogoResponse.guild_id)
  return guild_id_;
}
inline void CMsgDOTAGuildEditLogoResponse::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildEditLogoResponse.guild_id)
}

// optional .CMsgDOTAGuildEditLogoResponse.EResult result = 2 [default = SUCCESS];
inline bool CMsgDOTAGuildEditLogoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGuildEditLogoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGuildEditLogoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGuildEditLogoResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGuildEditLogoResponse.result)
  return static_cast< ::CMsgDOTAGuildEditLogoResponse_EResult >(result_);
}
inline void CMsgDOTAGuildEditLogoResponse::set_result(::CMsgDOTAGuildEditLogoResponse_EResult value) {
  assert(::CMsgDOTAGuildEditLogoResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGuildEditLogoResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingRequest

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingResponse

// optional uint32 num_positive_reports_remaining = 1;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_positive_reports_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_positive_reports_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_remaining() {
  num_positive_reports_remaining_ = 0u;
  clear_has_num_positive_reports_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
  return num_positive_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_remaining(::google::protobuf::uint32 value) {
  set_has_num_positive_reports_remaining();
  num_positive_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
}

// optional uint32 num_negative_reports_remaining = 2;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_negative_reports_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_negative_reports_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_remaining() {
  num_negative_reports_remaining_ = 0u;
  clear_has_num_negative_reports_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
  return num_negative_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_remaining(::google::protobuf::uint32 value) {
  set_has_num_negative_reports_remaining();
  num_negative_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
}

// optional uint32 num_positive_reports_total = 3;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_positive_reports_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_positive_reports_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_total() {
  num_positive_reports_total_ = 0u;
  clear_has_num_positive_reports_total();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_total() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
  return num_positive_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_total(::google::protobuf::uint32 value) {
  set_has_num_positive_reports_total();
  num_positive_reports_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
}

// optional uint32 num_negative_reports_total = 4;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_negative_reports_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_negative_reports_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_total() {
  num_negative_reports_total_ = 0u;
  clear_has_num_negative_reports_total();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_total() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
  return num_negative_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_total(::google::protobuf::uint32 value) {
  set_has_num_negative_reports_total();
  num_negative_reports_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReport

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReport::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitPlayerReport::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReport.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReport::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReport.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReport::has_report_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_report_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_report_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitPlayerReport::clear_report_flags() {
  report_flags_ = 0u;
  clear_has_report_flags();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::report_flags() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReport.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReport::set_report_flags(::google::protobuf::uint32 value) {
  set_has_report_flags();
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReport.report_flags)
}

// optional string comment = 5;
inline bool CMsgDOTASubmitPlayerReport::has_comment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_comment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_comment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTASubmitPlayerReport::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgDOTASubmitPlayerReport::comment() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReport.comment)
  return *comment_;
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReport.comment)
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTASubmitPlayerReport.comment)
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTASubmitPlayerReport.comment)
}
inline ::std::string* CMsgDOTASubmitPlayerReport::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTASubmitPlayerReport.comment)
  return comment_;
}
inline ::std::string* CMsgDOTASubmitPlayerReport::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTASubmitPlayerReport::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTASubmitPlayerReport.comment)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReportResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReportResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReportResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReportResponse.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReportResponse::has_report_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_report_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_report_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_report_flags() {
  report_flags_ = 0u;
  clear_has_report_flags();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::report_flags() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReportResponse.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_report_flags(::google::protobuf::uint32 value) {
  set_has_report_flags();
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReportResponse.report_flags)
}

// optional uint32 result = 3;
inline bool CMsgDOTASubmitPlayerReportResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASubmitPlayerReportResponse.result)
  return result_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASubmitPlayerReportResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsRequest

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsRequest::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsRequest::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportCountsRequest::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportCountsRequest::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsRequest::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsRequest.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsRequest::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsRequest.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportCountsResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.target_account_id)
}

// optional uint32 leadership_count = 2;
inline bool CMsgDOTAReportCountsResponse::has_leadership_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_leadership_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_leadership_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAReportCountsResponse::clear_leadership_count() {
  leadership_count_ = 0u;
  clear_has_leadership_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::leadership_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.leadership_count)
  return leadership_count_;
}
inline void CMsgDOTAReportCountsResponse::set_leadership_count(::google::protobuf::uint32 value) {
  set_has_leadership_count();
  leadership_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.leadership_count)
}

// optional uint32 teaching_count = 3;
inline bool CMsgDOTAReportCountsResponse::has_teaching_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_teaching_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_teaching_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAReportCountsResponse::clear_teaching_count() {
  teaching_count_ = 0u;
  clear_has_teaching_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::teaching_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.teaching_count)
  return teaching_count_;
}
inline void CMsgDOTAReportCountsResponse::set_teaching_count(::google::protobuf::uint32 value) {
  set_has_teaching_count();
  teaching_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.teaching_count)
}

// optional uint32 friendly_count = 4;
inline bool CMsgDOTAReportCountsResponse::has_friendly_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_friendly_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_friendly_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAReportCountsResponse::clear_friendly_count() {
  friendly_count_ = 0u;
  clear_has_friendly_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::friendly_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.friendly_count)
  return friendly_count_;
}
inline void CMsgDOTAReportCountsResponse::set_friendly_count(::google::protobuf::uint32 value) {
  set_has_friendly_count();
  friendly_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.friendly_count)
}

// optional uint32 forgiving_count = 5;
inline bool CMsgDOTAReportCountsResponse::has_forgiving_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_forgiving_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_forgiving_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAReportCountsResponse::clear_forgiving_count() {
  forgiving_count_ = 0u;
  clear_has_forgiving_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::forgiving_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAReportCountsResponse.forgiving_count)
  return forgiving_count_;
}
inline void CMsgDOTAReportCountsResponse::set_forgiving_count(::google::protobuf::uint32 value) {
  set_has_forgiving_count();
  forgiving_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAReportCountsResponse.forgiving_count)
}

// -------------------------------------------------------------------

// CMsgDOTAKickedFromMatchmakingQueue

// optional .MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
inline bool CMsgDOTAKickedFromMatchmakingQueue::has_match_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::set_has_match_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::clear_match_type() {
  match_type_ = 0;
  clear_has_match_type();
}
inline ::MatchType CMsgDOTAKickedFromMatchmakingQueue::match_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAKickedFromMatchmakingQueue.match_type)
  return static_cast< ::MatchType >(match_type_);
}
inline void CMsgDOTAKickedFromMatchmakingQueue::set_match_type(::MatchType value) {
  assert(::MatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAKickedFromMatchmakingQueue.match_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGames

// optional uint32 server_region = 1;
inline bool CMsgDOTARequestSaveGames::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGames::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestSaveGames::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestSaveGames::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgDOTARequestSaveGames::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestSaveGames.server_region)
  return server_region_;
}
inline void CMsgDOTARequestSaveGames::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestSaveGames.server_region)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGamesResponse

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestSaveGamesResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGamesResponse::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestSaveGamesResponse::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestSaveGamesResponse::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestSaveGamesResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestSaveGamesResponse.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestSaveGamesResponse::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestSaveGamesResponse.steam_id)
}

// repeated .CDOTASaveGame save_games = 2;
inline int CMsgDOTARequestSaveGamesResponse::save_games_size() const {
  return save_games_.size();
}
inline void CMsgDOTARequestSaveGamesResponse::clear_save_games() {
  save_games_.Clear();
}
inline const ::CDOTASaveGame& CMsgDOTARequestSaveGamesResponse::save_games(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Get(index);
}
inline ::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::mutable_save_games(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Mutable(index);
}
inline ::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::add_save_games() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >&
CMsgDOTARequestSaveGamesResponse::save_games() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDOTASaveGame >*
CMsgDOTARequestSaveGamesResponse::mutable_save_games() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestSaveGamesResponse.save_games)
  return &save_games_;
}

// -------------------------------------------------------------------

// CMsgWatchGame

// optional fixed64 server_steamid = 1;
inline bool CMsgWatchGame::has_server_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgWatchGame::set_has_server_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgWatchGame::clear_has_server_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgWatchGame::clear_server_steamid() {
  server_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steamid();
}
inline ::google::protobuf::uint64 CMsgWatchGame::server_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGame.server_steamid)
  return server_steamid_;
}
inline void CMsgWatchGame::set_server_steamid(::google::protobuf::uint64 value) {
  set_has_server_steamid();
  server_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGame.server_steamid)
}

// optional uint32 client_version = 2;
inline bool CMsgWatchGame::has_client_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgWatchGame::set_has_client_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgWatchGame::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgWatchGame::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgWatchGame::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGame.client_version)
  return client_version_;
}
inline void CMsgWatchGame::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGame.client_version)
}

// optional fixed64 watch_server_steamid = 3;
inline bool CMsgWatchGame::has_watch_server_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgWatchGame::set_has_watch_server_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgWatchGame::clear_has_watch_server_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgWatchGame::clear_watch_server_steamid() {
  watch_server_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_watch_server_steamid();
}
inline ::google::protobuf::uint64 CMsgWatchGame::watch_server_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGame.watch_server_steamid)
  return watch_server_steamid_;
}
inline void CMsgWatchGame::set_watch_server_steamid(::google::protobuf::uint64 value) {
  set_has_watch_server_steamid();
  watch_server_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGame.watch_server_steamid)
}

// optional uint64 lobby_id = 4;
inline bool CMsgWatchGame::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgWatchGame::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgWatchGame::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgWatchGame::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgWatchGame::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGame.lobby_id)
  return lobby_id_;
}
inline void CMsgWatchGame::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGame.lobby_id)
}

// -------------------------------------------------------------------

// CMsgCancelWatchGame

// -------------------------------------------------------------------

// CMsgWatchGameResponse

// optional .CMsgWatchGameResponse.WatchGameResult watch_game_result = 1 [default = PENDING];
inline bool CMsgWatchGameResponse::has_watch_game_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgWatchGameResponse::set_has_watch_game_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgWatchGameResponse::clear_has_watch_game_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgWatchGameResponse::clear_watch_game_result() {
  watch_game_result_ = 0;
  clear_has_watch_game_result();
}
inline ::CMsgWatchGameResponse_WatchGameResult CMsgWatchGameResponse::watch_game_result() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGameResponse.watch_game_result)
  return static_cast< ::CMsgWatchGameResponse_WatchGameResult >(watch_game_result_);
}
inline void CMsgWatchGameResponse::set_watch_game_result(::CMsgWatchGameResponse_WatchGameResult value) {
  assert(::CMsgWatchGameResponse_WatchGameResult_IsValid(value));
  set_has_watch_game_result();
  watch_game_result_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGameResponse.watch_game_result)
}

// optional uint32 source_tv_public_addr = 2;
inline bool CMsgWatchGameResponse::has_source_tv_public_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgWatchGameResponse::set_has_source_tv_public_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgWatchGameResponse::clear_has_source_tv_public_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgWatchGameResponse::clear_source_tv_public_addr() {
  source_tv_public_addr_ = 0u;
  clear_has_source_tv_public_addr();
}
inline ::google::protobuf::uint32 CMsgWatchGameResponse::source_tv_public_addr() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGameResponse.source_tv_public_addr)
  return source_tv_public_addr_;
}
inline void CMsgWatchGameResponse::set_source_tv_public_addr(::google::protobuf::uint32 value) {
  set_has_source_tv_public_addr();
  source_tv_public_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGameResponse.source_tv_public_addr)
}

// optional uint32 source_tv_private_addr = 3;
inline bool CMsgWatchGameResponse::has_source_tv_private_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgWatchGameResponse::set_has_source_tv_private_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgWatchGameResponse::clear_has_source_tv_private_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgWatchGameResponse::clear_source_tv_private_addr() {
  source_tv_private_addr_ = 0u;
  clear_has_source_tv_private_addr();
}
inline ::google::protobuf::uint32 CMsgWatchGameResponse::source_tv_private_addr() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGameResponse.source_tv_private_addr)
  return source_tv_private_addr_;
}
inline void CMsgWatchGameResponse::set_source_tv_private_addr(::google::protobuf::uint32 value) {
  set_has_source_tv_private_addr();
  source_tv_private_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGameResponse.source_tv_private_addr)
}

// optional uint32 source_tv_port = 4;
inline bool CMsgWatchGameResponse::has_source_tv_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgWatchGameResponse::set_has_source_tv_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgWatchGameResponse::clear_has_source_tv_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgWatchGameResponse::clear_source_tv_port() {
  source_tv_port_ = 0u;
  clear_has_source_tv_port();
}
inline ::google::protobuf::uint32 CMsgWatchGameResponse::source_tv_port() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGameResponse.source_tv_port)
  return source_tv_port_;
}
inline void CMsgWatchGameResponse::set_source_tv_port(::google::protobuf::uint32 value) {
  set_has_source_tv_port();
  source_tv_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGameResponse.source_tv_port)
}

// optional fixed64 game_server_steamid = 5;
inline bool CMsgWatchGameResponse::has_game_server_steamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgWatchGameResponse::set_has_game_server_steamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgWatchGameResponse::clear_has_game_server_steamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgWatchGameResponse::clear_game_server_steamid() {
  game_server_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_game_server_steamid();
}
inline ::google::protobuf::uint64 CMsgWatchGameResponse::game_server_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGameResponse.game_server_steamid)
  return game_server_steamid_;
}
inline void CMsgWatchGameResponse::set_game_server_steamid(::google::protobuf::uint64 value) {
  set_has_game_server_steamid();
  game_server_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGameResponse.game_server_steamid)
}

// optional fixed64 watch_server_steamid = 6;
inline bool CMsgWatchGameResponse::has_watch_server_steamid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgWatchGameResponse::set_has_watch_server_steamid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgWatchGameResponse::clear_has_watch_server_steamid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgWatchGameResponse::clear_watch_server_steamid() {
  watch_server_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_watch_server_steamid();
}
inline ::google::protobuf::uint64 CMsgWatchGameResponse::watch_server_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGameResponse.watch_server_steamid)
  return watch_server_steamid_;
}
inline void CMsgWatchGameResponse::set_watch_server_steamid(::google::protobuf::uint64 value) {
  set_has_watch_server_steamid();
  watch_server_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGameResponse.watch_server_steamid)
}

// optional fixed64 watch_tv_unique_secret_code = 7;
inline bool CMsgWatchGameResponse::has_watch_tv_unique_secret_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgWatchGameResponse::set_has_watch_tv_unique_secret_code() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgWatchGameResponse::clear_has_watch_tv_unique_secret_code() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgWatchGameResponse::clear_watch_tv_unique_secret_code() {
  watch_tv_unique_secret_code_ = GOOGLE_ULONGLONG(0);
  clear_has_watch_tv_unique_secret_code();
}
inline ::google::protobuf::uint64 CMsgWatchGameResponse::watch_tv_unique_secret_code() const {
  // @@protoc_insertion_point(field_get:CMsgWatchGameResponse.watch_tv_unique_secret_code)
  return watch_tv_unique_secret_code_;
}
inline void CMsgWatchGameResponse::set_watch_tv_unique_secret_code(::google::protobuf::uint64 value) {
  set_has_watch_tv_unique_secret_code();
  watch_tv_unique_secret_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgWatchGameResponse.watch_tv_unique_secret_code)
}

// -------------------------------------------------------------------

// CMsgPartyLeaderWatchGamePrompt

// optional fixed64 game_server_steamid = 5;
inline bool CMsgPartyLeaderWatchGamePrompt::has_game_server_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyLeaderWatchGamePrompt::set_has_game_server_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyLeaderWatchGamePrompt::clear_has_game_server_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyLeaderWatchGamePrompt::clear_game_server_steamid() {
  game_server_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_game_server_steamid();
}
inline ::google::protobuf::uint64 CMsgPartyLeaderWatchGamePrompt::game_server_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgPartyLeaderWatchGamePrompt.game_server_steamid)
  return game_server_steamid_;
}
inline void CMsgPartyLeaderWatchGamePrompt::set_game_server_steamid(::google::protobuf::uint64 value) {
  set_has_game_server_steamid();
  game_server_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyLeaderWatchGamePrompt.game_server_steamid)
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgGCMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchDetailsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMatchDetailsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMatchDetailsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgGCMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMatchDetailsRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsResponse

// optional uint32 result = 1;
inline bool CMsgGCMatchDetailsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMatchDetailsResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCMatchDetailsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsResponse.result)
  return result_;
}
inline void CMsgGCMatchDetailsResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMatchDetailsResponse.result)
}

// optional .CMsgDOTAMatch match = 2;
inline bool CMsgGCMatchDetailsResponse::has_match() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_match() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_match() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMatchDetailsResponse::clear_match() {
  if (match_ != NULL) match_->::CMsgDOTAMatch::Clear();
  clear_has_match();
}
inline const ::CMsgDOTAMatch& CMsgGCMatchDetailsResponse::match() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsResponse.match)
  return match_ != NULL ? *match_ : *default_instance_->match_;
}
inline ::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::mutable_match() {
  set_has_match();
  if (match_ == NULL) match_ = new ::CMsgDOTAMatch;
  // @@protoc_insertion_point(field_mutable:CMsgGCMatchDetailsResponse.match)
  return match_;
}
inline ::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::release_match() {
  clear_has_match();
  ::CMsgDOTAMatch* temp = match_;
  match_ = NULL;
  return temp;
}
inline void CMsgGCMatchDetailsResponse::set_allocated_match(::CMsgDOTAMatch* match) {
  delete match_;
  match_ = match;
  if (match) {
    set_has_match();
  } else {
    clear_has_match();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMatchDetailsResponse.match)
}

// optional .DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
inline bool CMsgGCMatchDetailsResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_vote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_vote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCMatchDetailsResponse::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::DOTAMatchVote CMsgGCMatchDetailsResponse::vote() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchDetailsResponse.vote)
  return static_cast< ::DOTAMatchVote >(vote_);
}
inline void CMsgGCMatchDetailsResponse::set_vote(::DOTAMatchVote value) {
  assert(::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMatchDetailsResponse.vote)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileRequest

// optional uint32 account_id = 1;
inline bool CMsgDOTAProfileRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileRequest.account_id)
  return account_id_;
}
inline void CMsgDOTAProfileRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileRequest.account_id)
}

// optional bool request_name = 2;
inline bool CMsgDOTAProfileRequest::has_request_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileRequest::set_has_request_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileRequest::clear_has_request_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileRequest::clear_request_name() {
  request_name_ = false;
  clear_has_request_name();
}
inline bool CMsgDOTAProfileRequest::request_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileRequest.request_name)
  return request_name_;
}
inline void CMsgDOTAProfileRequest::set_request_name(bool value) {
  set_has_request_name();
  request_name_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileRequest.request_name)
}

// optional .ESourceEngine engine = 3 [default = k_ESE_Source1];
inline bool CMsgDOTAProfileRequest::has_engine() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAProfileRequest::set_has_engine() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAProfileRequest::clear_has_engine() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAProfileRequest::clear_engine() {
  engine_ = 0;
  clear_has_engine();
}
inline ::ESourceEngine CMsgDOTAProfileRequest::engine() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileRequest.engine)
  return static_cast< ::ESourceEngine >(engine_);
}
inline void CMsgDOTAProfileRequest::set_engine(::ESourceEngine value) {
  assert(::ESourceEngine_IsValid(value));
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileRequest.engine)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_PlayedHero

// optional uint32 hero_id = 1;
inline bool CMsgDOTAProfileResponse_PlayedHero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_PlayedHero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.PlayedHero.hero_id)
  return hero_id_;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.PlayedHero.hero_id)
}

// optional uint32 wins = 2;
inline bool CMsgDOTAProfileResponse_PlayedHero::has_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_has_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_has_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_PlayedHero::wins() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.PlayedHero.wins)
  return wins_;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.PlayedHero.wins)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_ShowcaseHero

// optional uint32 hero_id = 1;
inline bool CMsgDOTAProfileResponse_ShowcaseHero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_ShowcaseHero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.ShowcaseHero.hero_id)
  return hero_id_;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.ShowcaseHero.hero_id)
}

// repeated bytes object_data = 2;
inline int CMsgDOTAProfileResponse_ShowcaseHero::object_data_size() const {
  return object_data_.size();
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgDOTAProfileResponse_ShowcaseHero::object_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgDOTAProfileResponse_ShowcaseHero::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const char* value) {
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline ::std::string* CMsgDOTAProfileResponse_ShowcaseHero::add_object_data() {
  return object_data_.Add();
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const char* value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAProfileResponse_ShowcaseHero::object_data() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAProfileResponse_ShowcaseHero::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_LeaguePass

// optional uint32 league_id = 1;
inline bool CMsgDOTAProfileResponse_LeaguePass::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_LeaguePass::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.LeaguePass.league_id)
  return league_id_;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.LeaguePass.league_id)
}

// optional uint32 item_def = 2;
inline bool CMsgDOTAProfileResponse_LeaguePass::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_LeaguePass::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.LeaguePass.item_def)
  return item_def_;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.LeaguePass.item_def)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_EventTicket

// optional uint32 event_id = 1;
inline bool CMsgDOTAProfileResponse_EventTicket::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_EventTicket::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_EventTicket::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_EventTicket::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_EventTicket::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.EventTicket.event_id)
  return event_id_;
}
inline void CMsgDOTAProfileResponse_EventTicket::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.EventTicket.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_FeaturedItem

// optional uint64 item_id = 1;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgDOTAProfileResponse_FeaturedItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.FeaturedItem.item_id)
  return item_id_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.FeaturedItem.item_id)
}

// optional bytes object_data = 2;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_object_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_object_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_object_data() {
  if (object_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_->clear();
  }
  clear_has_object_data();
}
inline const ::std::string& CMsgDOTAProfileResponse_FeaturedItem::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.FeaturedItem.object_data)
  return *object_data_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const ::std::string& value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const char* value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline ::std::string* CMsgDOTAProfileResponse_FeaturedItem::mutable_object_data() {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    object_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.FeaturedItem.object_data)
  return object_data_;
}
inline ::std::string* CMsgDOTAProfileResponse_FeaturedItem::release_object_data() {
  clear_has_object_data();
  if (object_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = object_data_;
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_allocated_object_data(::std::string* object_data) {
  if (object_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete object_data_;
  }
  if (object_data) {
    set_has_object_data();
    object_data_ = object_data;
  } else {
    clear_has_object_data();
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.FeaturedItem.object_data)
}

// optional uint32 slot_index = 3;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_slot_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_slot_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_slot_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_slot_index() {
  slot_index_ = 0u;
  clear_has_slot_index();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_FeaturedItem::slot_index() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.FeaturedItem.slot_index)
  return slot_index_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_slot_index(::google::protobuf::uint32 value) {
  set_has_slot_index();
  slot_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.FeaturedItem.slot_index)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse

// optional uint32 result = 1;
inline bool CMsgDOTAProfileResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.result)
  return result_;
}
inline void CMsgDOTAProfileResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.result)
}

// optional .CSODOTAGameAccountClient game_account_client = 2;
inline bool CMsgDOTAProfileResponse::has_game_account_client() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_game_account_client() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse::clear_has_game_account_client() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse::clear_game_account_client() {
  if (game_account_client_ != NULL) game_account_client_->::CSODOTAGameAccountClient::Clear();
  clear_has_game_account_client();
}
inline const ::CSODOTAGameAccountClient& CMsgDOTAProfileResponse::game_account_client() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.game_account_client)
  return game_account_client_ != NULL ? *game_account_client_ : *default_instance_->game_account_client_;
}
inline ::CSODOTAGameAccountClient* CMsgDOTAProfileResponse::mutable_game_account_client() {
  set_has_game_account_client();
  if (game_account_client_ == NULL) game_account_client_ = new ::CSODOTAGameAccountClient;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.game_account_client)
  return game_account_client_;
}
inline ::CSODOTAGameAccountClient* CMsgDOTAProfileResponse::release_game_account_client() {
  clear_has_game_account_client();
  ::CSODOTAGameAccountClient* temp = game_account_client_;
  game_account_client_ = NULL;
  return temp;
}
inline void CMsgDOTAProfileResponse::set_allocated_game_account_client(::CSODOTAGameAccountClient* game_account_client) {
  delete game_account_client_;
  game_account_client_ = game_account_client;
  if (game_account_client) {
    set_has_game_account_client();
  } else {
    clear_has_game_account_client();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.game_account_client)
}

// repeated .CMsgDOTAMatch latest_matches = 3;
inline int CMsgDOTAProfileResponse::latest_matches_size() const {
  return latest_matches_.size();
}
inline void CMsgDOTAProfileResponse::clear_latest_matches() {
  latest_matches_.Clear();
}
inline const ::CMsgDOTAMatch& CMsgDOTAProfileResponse::latest_matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Get(index);
}
inline ::CMsgDOTAMatch* CMsgDOTAProfileResponse::mutable_latest_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Mutable(index);
}
inline ::CMsgDOTAMatch* CMsgDOTAProfileResponse::add_latest_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >&
CMsgDOTAProfileResponse::latest_matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatch >*
CMsgDOTAProfileResponse::mutable_latest_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.latest_matches)
  return &latest_matches_;
}

// repeated .CMsgDOTAProfileResponse.PlayedHero heroes = 4;
inline int CMsgDOTAProfileResponse::heroes_size() const {
  return heroes_.size();
}
inline void CMsgDOTAProfileResponse::clear_heroes() {
  heroes_.Clear();
}
inline const ::CMsgDOTAProfileResponse_PlayedHero& CMsgDOTAProfileResponse::heroes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.heroes)
  return heroes_.Get(index);
}
inline ::CMsgDOTAProfileResponse_PlayedHero* CMsgDOTAProfileResponse::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.heroes)
  return heroes_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_PlayedHero* CMsgDOTAProfileResponse::add_heroes() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.heroes)
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >&
CMsgDOTAProfileResponse::heroes() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.heroes)
  return heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_PlayedHero >*
CMsgDOTAProfileResponse::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.heroes)
  return &heroes_;
}

// optional string player_name = 5;
inline bool CMsgDOTAProfileResponse::has_player_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_player_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAProfileResponse::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAProfileResponse::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& CMsgDOTAProfileResponse::player_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.player_name)
  return *player_name_;
}
inline void CMsgDOTAProfileResponse::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.player_name)
}
inline void CMsgDOTAProfileResponse::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.player_name)
}
inline void CMsgDOTAProfileResponse::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.player_name)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.player_name)
  return player_name_;
}
inline ::std::string* CMsgDOTAProfileResponse::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.player_name)
}

// optional string team_name = 6;
inline bool CMsgDOTAProfileResponse::has_team_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAProfileResponse::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAProfileResponse::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_name)
  return *team_name_;
}
inline void CMsgDOTAProfileResponse::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_name)
}
inline void CMsgDOTAProfileResponse::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.team_name)
}
inline void CMsgDOTAProfileResponse::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.team_name)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.team_name)
  return team_name_;
}
inline ::std::string* CMsgDOTAProfileResponse::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.team_name)
}

// optional string team_tag = 7;
inline bool CMsgDOTAProfileResponse::has_team_tag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_tag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_tag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAProfileResponse::clear_team_tag() {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_->clear();
  }
  clear_has_team_tag();
}
inline const ::std::string& CMsgDOTAProfileResponse::team_tag() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_tag)
  return *team_tag_;
}
inline void CMsgDOTAProfileResponse::set_team_tag(const ::std::string& value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_tag)
}
inline void CMsgDOTAProfileResponse::set_team_tag(const char* value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAProfileResponse.team_tag)
}
inline void CMsgDOTAProfileResponse::set_team_tag(const char* value, size_t size) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAProfileResponse.team_tag)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_team_tag() {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.team_tag)
  return team_tag_;
}
inline ::std::string* CMsgDOTAProfileResponse::release_team_tag() {
  clear_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_tag_;
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAProfileResponse::set_allocated_team_tag(::std::string* team_tag) {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_tag_;
  }
  if (team_tag) {
    set_has_team_tag();
    team_tag_ = team_tag;
  } else {
    clear_has_team_tag();
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.team_tag)
}

// optional uint64 team_logo = 8;
inline bool CMsgDOTAProfileResponse::has_team_logo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_logo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_logo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAProfileResponse::clear_team_logo() {
  team_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_team_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAProfileResponse::team_logo() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_logo)
  return team_logo_;
}
inline void CMsgDOTAProfileResponse::set_team_logo(::google::protobuf::uint64 value) {
  set_has_team_logo();
  team_logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_logo)
}

// optional .CMsgDOTAProfileResponse.ShowcaseHero showcase_hero = 9;
inline bool CMsgDOTAProfileResponse::has_showcase_hero() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_showcase_hero() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAProfileResponse::clear_has_showcase_hero() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAProfileResponse::clear_showcase_hero() {
  if (showcase_hero_ != NULL) showcase_hero_->::CMsgDOTAProfileResponse_ShowcaseHero::Clear();
  clear_has_showcase_hero();
}
inline const ::CMsgDOTAProfileResponse_ShowcaseHero& CMsgDOTAProfileResponse::showcase_hero() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.showcase_hero)
  return showcase_hero_ != NULL ? *showcase_hero_ : *default_instance_->showcase_hero_;
}
inline ::CMsgDOTAProfileResponse_ShowcaseHero* CMsgDOTAProfileResponse::mutable_showcase_hero() {
  set_has_showcase_hero();
  if (showcase_hero_ == NULL) showcase_hero_ = new ::CMsgDOTAProfileResponse_ShowcaseHero;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.showcase_hero)
  return showcase_hero_;
}
inline ::CMsgDOTAProfileResponse_ShowcaseHero* CMsgDOTAProfileResponse::release_showcase_hero() {
  clear_has_showcase_hero();
  ::CMsgDOTAProfileResponse_ShowcaseHero* temp = showcase_hero_;
  showcase_hero_ = NULL;
  return temp;
}
inline void CMsgDOTAProfileResponse::set_allocated_showcase_hero(::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero) {
  delete showcase_hero_;
  showcase_hero_ = showcase_hero;
  if (showcase_hero) {
    set_has_showcase_hero();
  } else {
    clear_has_showcase_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAProfileResponse.showcase_hero)
}

// repeated .CMsgDOTAProfileResponse.LeaguePass league_passes = 10;
inline int CMsgDOTAProfileResponse::league_passes_size() const {
  return league_passes_.size();
}
inline void CMsgDOTAProfileResponse::clear_league_passes() {
  league_passes_.Clear();
}
inline const ::CMsgDOTAProfileResponse_LeaguePass& CMsgDOTAProfileResponse::league_passes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Get(index);
}
inline ::CMsgDOTAProfileResponse_LeaguePass* CMsgDOTAProfileResponse::mutable_league_passes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_LeaguePass* CMsgDOTAProfileResponse::add_league_passes() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >&
CMsgDOTAProfileResponse::league_passes() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.league_passes)
  return league_passes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_LeaguePass >*
CMsgDOTAProfileResponse::mutable_league_passes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.league_passes)
  return &league_passes_;
}

// repeated .CMsgDOTAProfileResponse.EventTicket event_tickets = 11;
inline int CMsgDOTAProfileResponse::event_tickets_size() const {
  return event_tickets_.size();
}
inline void CMsgDOTAProfileResponse::clear_event_tickets() {
  event_tickets_.Clear();
}
inline const ::CMsgDOTAProfileResponse_EventTicket& CMsgDOTAProfileResponse::event_tickets(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Get(index);
}
inline ::CMsgDOTAProfileResponse_EventTicket* CMsgDOTAProfileResponse::mutable_event_tickets(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_EventTicket* CMsgDOTAProfileResponse::add_event_tickets() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >&
CMsgDOTAProfileResponse::event_tickets() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_EventTicket >*
CMsgDOTAProfileResponse::mutable_event_tickets() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.event_tickets)
  return &event_tickets_;
}

// optional uint32 team_id = 12;
inline bool CMsgDOTAProfileResponse::has_team_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAProfileResponse::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.team_id)
  return team_id_;
}
inline void CMsgDOTAProfileResponse::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.team_id)
}

// optional bool has_passport = 13;
inline bool CMsgDOTAProfileResponse::has_has_passport() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_has_passport() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAProfileResponse::clear_has_has_passport() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAProfileResponse::clear_has_passport() {
  has_passport_ = false;
  clear_has_has_passport();
}
inline bool CMsgDOTAProfileResponse::has_passport() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.has_passport)
  return has_passport_;
}
inline void CMsgDOTAProfileResponse::set_has_passport(bool value) {
  set_has_has_passport();
  has_passport_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.has_passport)
}

// repeated .CMsgDOTAProfileResponse.FeaturedItem featured_items = 14;
inline int CMsgDOTAProfileResponse::featured_items_size() const {
  return featured_items_.size();
}
inline void CMsgDOTAProfileResponse::clear_featured_items() {
  featured_items_.Clear();
}
inline const ::CMsgDOTAProfileResponse_FeaturedItem& CMsgDOTAProfileResponse::featured_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Get(index);
}
inline ::CMsgDOTAProfileResponse_FeaturedItem* CMsgDOTAProfileResponse::mutable_featured_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Mutable(index);
}
inline ::CMsgDOTAProfileResponse_FeaturedItem* CMsgDOTAProfileResponse::add_featured_items() {
  // @@protoc_insertion_point(field_add:CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >&
CMsgDOTAProfileResponse::featured_items() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAProfileResponse.featured_items)
  return featured_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileResponse_FeaturedItem >*
CMsgDOTAProfileResponse::mutable_featured_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAProfileResponse.featured_items)
  return &featured_items_;
}

// optional uint32 abandon_percent = 15;
inline bool CMsgDOTAProfileResponse::has_abandon_percent() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_abandon_percent() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAProfileResponse::clear_has_abandon_percent() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAProfileResponse::clear_abandon_percent() {
  abandon_percent_ = 0u;
  clear_has_abandon_percent();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::abandon_percent() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAProfileResponse.abandon_percent)
  return abandon_percent_;
}
inline void CMsgDOTAProfileResponse::set_abandon_percent(::google::protobuf::uint32 value) {
  set_has_abandon_percent();
  abandon_percent_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAProfileResponse.abandon_percent)
}

// -------------------------------------------------------------------

// CMsgGCSteamProfileRequest

// optional uint32 account_id = 1;
inline bool CMsgGCSteamProfileRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSteamProfileRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSteamProfileRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSteamProfileRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCSteamProfileRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCSteamProfileRequest.account_id)
  return account_id_;
}
inline void CMsgGCSteamProfileRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSteamProfileRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCSteamProfileRequestResponse

// optional uint32 result = 1;
inline bool CMsgGCSteamProfileRequestResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSteamProfileRequestResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSteamProfileRequestResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSteamProfileRequestResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCSteamProfileRequestResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCSteamProfileRequestResponse.result)
  return result_;
}
inline void CMsgGCSteamProfileRequestResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSteamProfileRequestResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAClearNotifySuccessfulReport

// -------------------------------------------------------------------

// CMsgDOTAWelcome_LocalizationDigest

// optional string context = 1;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_context() {
  if (context_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_->clear();
  }
  clear_has_context();
}
inline const ::std::string& CMsgDOTAWelcome_LocalizationDigest::context() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.LocalizationDigest.context)
  return *context_;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const ::std::string& value) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  context_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.LocalizationDigest.context)
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const char* value) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  context_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAWelcome.LocalizationDigest.context)
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const char* value, size_t size) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  context_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAWelcome.LocalizationDigest.context)
}
inline ::std::string* CMsgDOTAWelcome_LocalizationDigest::mutable_context() {
  set_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    context_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.LocalizationDigest.context)
  return context_;
}
inline ::std::string* CMsgDOTAWelcome_LocalizationDigest::release_context() {
  clear_has_context();
  if (context_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = context_;
    context_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_context(::std::string* context) {
  if (context_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete context_;
  }
  if (context) {
    set_has_context();
    context_ = context;
  } else {
    clear_has_context();
    context_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.LocalizationDigest.context)
}

// optional .CMsgSHA1Digest english_language_file_sha1 = 2;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_english_language_file_sha1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_english_language_file_sha1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_english_language_file_sha1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_english_language_file_sha1() {
  if (english_language_file_sha1_ != NULL) english_language_file_sha1_->::CMsgSHA1Digest::Clear();
  clear_has_english_language_file_sha1();
}
inline const ::CMsgSHA1Digest& CMsgDOTAWelcome_LocalizationDigest::english_language_file_sha1() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
  return english_language_file_sha1_ != NULL ? *english_language_file_sha1_ : *default_instance_->english_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::mutable_english_language_file_sha1() {
  set_has_english_language_file_sha1();
  if (english_language_file_sha1_ == NULL) english_language_file_sha1_ = new ::CMsgSHA1Digest;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
  return english_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::release_english_language_file_sha1() {
  clear_has_english_language_file_sha1();
  ::CMsgSHA1Digest* temp = english_language_file_sha1_;
  english_language_file_sha1_ = NULL;
  return temp;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_english_language_file_sha1(::CMsgSHA1Digest* english_language_file_sha1) {
  delete english_language_file_sha1_;
  english_language_file_sha1_ = english_language_file_sha1;
  if (english_language_file_sha1) {
    set_has_english_language_file_sha1();
  } else {
    clear_has_english_language_file_sha1();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
}

// optional .CMsgSHA1Digest client_language_file_sha1 = 3;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_client_language_file_sha1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_client_language_file_sha1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_client_language_file_sha1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_client_language_file_sha1() {
  if (client_language_file_sha1_ != NULL) client_language_file_sha1_->::CMsgSHA1Digest::Clear();
  clear_has_client_language_file_sha1();
}
inline const ::CMsgSHA1Digest& CMsgDOTAWelcome_LocalizationDigest::client_language_file_sha1() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
  return client_language_file_sha1_ != NULL ? *client_language_file_sha1_ : *default_instance_->client_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::mutable_client_language_file_sha1() {
  set_has_client_language_file_sha1();
  if (client_language_file_sha1_ == NULL) client_language_file_sha1_ = new ::CMsgSHA1Digest;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
  return client_language_file_sha1_;
}
inline ::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::release_client_language_file_sha1() {
  clear_has_client_language_file_sha1();
  ::CMsgSHA1Digest* temp = client_language_file_sha1_;
  client_language_file_sha1_ = NULL;
  return temp;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_client_language_file_sha1(::CMsgSHA1Digest* client_language_file_sha1) {
  delete client_language_file_sha1_;
  client_language_file_sha1_ = client_language_file_sha1;
  if (client_language_file_sha1) {
    set_has_client_language_file_sha1();
  } else {
    clear_has_client_language_file_sha1();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
}

// -------------------------------------------------------------------

// CMsgDOTAWelcome_CExtraMsg

// optional uint32 id = 1;
inline bool CMsgDOTAWelcome_CExtraMsg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome_CExtraMsg::id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.CExtraMsg.id)
  return id_;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.CExtraMsg.id)
}

// optional bytes contents = 2;
inline bool CMsgDOTAWelcome_CExtraMsg::has_contents() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_has_contents() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_has_contents() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_contents() {
  if (contents_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_->clear();
  }
  clear_has_contents();
}
inline const ::std::string& CMsgDOTAWelcome_CExtraMsg::contents() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.CExtraMsg.contents)
  return *contents_;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const ::std::string& value) {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  contents_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.CExtraMsg.contents)
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const char* value) {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  contents_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAWelcome.CExtraMsg.contents)
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const void* value, size_t size) {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  contents_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAWelcome.CExtraMsg.contents)
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::mutable_contents() {
  set_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contents_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.CExtraMsg.contents)
  return contents_;
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::release_contents() {
  clear_has_contents();
  if (contents_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = contents_;
    contents_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAWelcome_CExtraMsg::set_allocated_contents(::std::string* contents) {
  if (contents_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete contents_;
  }
  if (contents) {
    set_has_contents();
    contents_ = contents;
  } else {
    clear_has_contents();
    contents_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAWelcome.CExtraMsg.contents)
}

// -------------------------------------------------------------------

// CMsgDOTAWelcome

// optional bool tournament_admin = 3;
inline bool CMsgDOTAWelcome::has_tournament_admin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome::set_has_tournament_admin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome::clear_has_tournament_admin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome::clear_tournament_admin() {
  tournament_admin_ = false;
  clear_has_tournament_admin();
}
inline bool CMsgDOTAWelcome::tournament_admin() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.tournament_admin)
  return tournament_admin_;
}
inline void CMsgDOTAWelcome::set_tournament_admin(bool value) {
  set_has_tournament_admin();
  tournament_admin_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.tournament_admin)
}

// optional bool tournament_broadcaster = 4;
inline bool CMsgDOTAWelcome::has_tournament_broadcaster() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome::set_has_tournament_broadcaster() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome::clear_has_tournament_broadcaster() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome::clear_tournament_broadcaster() {
  tournament_broadcaster_ = false;
  clear_has_tournament_broadcaster();
}
inline bool CMsgDOTAWelcome::tournament_broadcaster() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.tournament_broadcaster)
  return tournament_broadcaster_;
}
inline void CMsgDOTAWelcome::set_tournament_broadcaster(bool value) {
  set_has_tournament_broadcaster();
  tournament_broadcaster_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.tournament_broadcaster)
}

// optional uint32 store_item_hash = 5;
inline bool CMsgDOTAWelcome::has_store_item_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAWelcome::set_has_store_item_hash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAWelcome::clear_has_store_item_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAWelcome::clear_store_item_hash() {
  store_item_hash_ = 0u;
  clear_has_store_item_hash();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::store_item_hash() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.store_item_hash)
  return store_item_hash_;
}
inline void CMsgDOTAWelcome::set_store_item_hash(::google::protobuf::uint32 value) {
  set_has_store_item_hash();
  store_item_hash_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.store_item_hash)
}

// optional uint32 timeplayedconsecutively = 6;
inline bool CMsgDOTAWelcome::has_timeplayedconsecutively() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAWelcome::set_has_timeplayedconsecutively() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAWelcome::clear_has_timeplayedconsecutively() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAWelcome::clear_timeplayedconsecutively() {
  timeplayedconsecutively_ = 0u;
  clear_has_timeplayedconsecutively();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::timeplayedconsecutively() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.timeplayedconsecutively)
  return timeplayedconsecutively_;
}
inline void CMsgDOTAWelcome::set_timeplayedconsecutively(::google::protobuf::uint32 value) {
  set_has_timeplayedconsecutively();
  timeplayedconsecutively_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.timeplayedconsecutively)
}

// optional bool allow_3rd_party_match_history = 7;
inline bool CMsgDOTAWelcome::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAWelcome::set_has_allow_3rd_party_match_history() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAWelcome::clear_has_allow_3rd_party_match_history() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAWelcome::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  clear_has_allow_3rd_party_match_history();
}
inline bool CMsgDOTAWelcome::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTAWelcome::set_allow_3rd_party_match_history(bool value) {
  set_has_allow_3rd_party_match_history();
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.allow_3rd_party_match_history)
}

// optional .PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
inline bool CMsgDOTAWelcome::has_partner_account_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAWelcome::set_has_partner_account_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAWelcome::clear_has_partner_account_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAWelcome::clear_partner_account_type() {
  partner_account_type_ = 0;
  clear_has_partner_account_type();
}
inline ::PartnerAccountType CMsgDOTAWelcome::partner_account_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.partner_account_type)
  return static_cast< ::PartnerAccountType >(partner_account_type_);
}
inline void CMsgDOTAWelcome::set_partner_account_type(::PartnerAccountType value) {
  assert(::PartnerAccountType_IsValid(value));
  set_has_partner_account_type();
  partner_account_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.partner_account_type)
}

// optional uint32 banned_word_list_word_id = 9;
inline bool CMsgDOTAWelcome::has_banned_word_list_word_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAWelcome::set_has_banned_word_list_word_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAWelcome::clear_has_banned_word_list_word_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAWelcome::clear_banned_word_list_word_id() {
  banned_word_list_word_id_ = 0u;
  clear_has_banned_word_list_word_id();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::banned_word_list_word_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.banned_word_list_word_id)
  return banned_word_list_word_id_;
}
inline void CMsgDOTAWelcome::set_banned_word_list_word_id(::google::protobuf::uint32 value) {
  set_has_banned_word_list_word_id();
  banned_word_list_word_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.banned_word_list_word_id)
}

// optional uint32 partner_account_state = 11;
inline bool CMsgDOTAWelcome::has_partner_account_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAWelcome::set_has_partner_account_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAWelcome::clear_has_partner_account_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAWelcome::clear_partner_account_state() {
  partner_account_state_ = 0u;
  clear_has_partner_account_state();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::partner_account_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.partner_account_state)
  return partner_account_state_;
}
inline void CMsgDOTAWelcome::set_partner_account_state(::google::protobuf::uint32 value) {
  set_has_partner_account_state();
  partner_account_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.partner_account_state)
}

// optional uint32 last_time_played = 12;
inline bool CMsgDOTAWelcome::has_last_time_played() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAWelcome::set_has_last_time_played() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAWelcome::clear_has_last_time_played() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAWelcome::clear_last_time_played() {
  last_time_played_ = 0u;
  clear_has_last_time_played();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_time_played() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.last_time_played)
  return last_time_played_;
}
inline void CMsgDOTAWelcome::set_last_time_played(::google::protobuf::uint32 value) {
  set_has_last_time_played();
  last_time_played_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.last_time_played)
}

// optional uint32 last_ip_address = 13;
inline bool CMsgDOTAWelcome::has_last_ip_address() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAWelcome::set_has_last_ip_address() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAWelcome::clear_has_last_ip_address() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAWelcome::clear_last_ip_address() {
  last_ip_address_ = 0u;
  clear_has_last_ip_address();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_ip_address() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.last_ip_address)
  return last_ip_address_;
}
inline void CMsgDOTAWelcome::set_last_ip_address(::google::protobuf::uint32 value) {
  set_has_last_ip_address();
  last_ip_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.last_ip_address)
}

// optional uint32 shutdownlawterminateminutes = 15;
inline bool CMsgDOTAWelcome::has_shutdownlawterminateminutes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAWelcome::set_has_shutdownlawterminateminutes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAWelcome::clear_has_shutdownlawterminateminutes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAWelcome::clear_shutdownlawterminateminutes() {
  shutdownlawterminateminutes_ = 0u;
  clear_has_shutdownlawterminateminutes();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::shutdownlawterminateminutes() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.shutdownlawterminateminutes)
  return shutdownlawterminateminutes_;
}
inline void CMsgDOTAWelcome::set_shutdownlawterminateminutes(::google::protobuf::uint32 value) {
  set_has_shutdownlawterminateminutes();
  shutdownlawterminateminutes_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.shutdownlawterminateminutes)
}

// optional uint32 banned_word_list_version = 16;
inline bool CMsgDOTAWelcome::has_banned_word_list_version() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAWelcome::set_has_banned_word_list_version() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAWelcome::clear_has_banned_word_list_version() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAWelcome::clear_banned_word_list_version() {
  banned_word_list_version_ = 0u;
  clear_has_banned_word_list_version();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::banned_word_list_version() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.banned_word_list_version)
  return banned_word_list_version_;
}
inline void CMsgDOTAWelcome::set_banned_word_list_version(::google::protobuf::uint32 value) {
  set_has_banned_word_list_version();
  banned_word_list_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.banned_word_list_version)
}

// optional bool profile_private = 17;
inline bool CMsgDOTAWelcome::has_profile_private() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_profile_private() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAWelcome::clear_has_profile_private() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAWelcome::clear_profile_private() {
  profile_private_ = false;
  clear_has_profile_private();
}
inline bool CMsgDOTAWelcome::profile_private() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.profile_private)
  return profile_private_;
}
inline void CMsgDOTAWelcome::set_profile_private(bool value) {
  set_has_profile_private();
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.profile_private)
}

// optional uint32 currency = 18;
inline bool CMsgDOTAWelcome::has_currency() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_currency() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAWelcome::clear_has_currency() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAWelcome::clear_currency() {
  currency_ = 0u;
  clear_has_currency();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::currency() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.currency)
  return currency_;
}
inline void CMsgDOTAWelcome::set_currency(::google::protobuf::uint32 value) {
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.currency)
}

// optional uint32 bang_no = 19;
inline bool CMsgDOTAWelcome::has_bang_no() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_bang_no() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAWelcome::clear_has_bang_no() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAWelcome::clear_bang_no() {
  bang_no_ = 0u;
  clear_has_bang_no();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::bang_no() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.bang_no)
  return bang_no_;
}
inline void CMsgDOTAWelcome::set_bang_no(::google::protobuf::uint32 value) {
  set_has_bang_no();
  bang_no_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.bang_no)
}

// optional bool should_request_player_origin = 20;
inline bool CMsgDOTAWelcome::has_should_request_player_origin() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_should_request_player_origin() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAWelcome::clear_has_should_request_player_origin() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAWelcome::clear_should_request_player_origin() {
  should_request_player_origin_ = false;
  clear_has_should_request_player_origin();
}
inline bool CMsgDOTAWelcome::should_request_player_origin() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.should_request_player_origin)
  return should_request_player_origin_;
}
inline void CMsgDOTAWelcome::set_should_request_player_origin(bool value) {
  set_has_should_request_player_origin();
  should_request_player_origin_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.should_request_player_origin)
}

// optional uint64 compendium_unlocks = 21;
inline bool CMsgDOTAWelcome::has_compendium_unlocks() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_compendium_unlocks() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTAWelcome::clear_has_compendium_unlocks() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTAWelcome::clear_compendium_unlocks() {
  compendium_unlocks_ = GOOGLE_ULONGLONG(0);
  clear_has_compendium_unlocks();
}
inline ::google::protobuf::uint64 CMsgDOTAWelcome::compendium_unlocks() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.compendium_unlocks)
  return compendium_unlocks_;
}
inline void CMsgDOTAWelcome::set_compendium_unlocks(::google::protobuf::uint64 value) {
  set_has_compendium_unlocks();
  compendium_unlocks_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.compendium_unlocks)
}

// optional uint32 gc_socache_file_version = 22;
inline bool CMsgDOTAWelcome::has_gc_socache_file_version() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_gc_socache_file_version() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAWelcome::clear_has_gc_socache_file_version() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAWelcome::clear_gc_socache_file_version() {
  gc_socache_file_version_ = 0u;
  clear_has_gc_socache_file_version();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::gc_socache_file_version() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.gc_socache_file_version)
  return gc_socache_file_version_;
}
inline void CMsgDOTAWelcome::set_gc_socache_file_version(::google::protobuf::uint32 value) {
  set_has_gc_socache_file_version();
  gc_socache_file_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.gc_socache_file_version)
}

// repeated .CMsgDOTAWelcome.LocalizationDigest localization_digests = 23;
inline int CMsgDOTAWelcome::localization_digests_size() const {
  return localization_digests_.size();
}
inline void CMsgDOTAWelcome::clear_localization_digests() {
  localization_digests_.Clear();
}
inline const ::CMsgDOTAWelcome_LocalizationDigest& CMsgDOTAWelcome::localization_digests(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Get(index);
}
inline ::CMsgDOTAWelcome_LocalizationDigest* CMsgDOTAWelcome::mutable_localization_digests(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Mutable(index);
}
inline ::CMsgDOTAWelcome_LocalizationDigest* CMsgDOTAWelcome::add_localization_digests() {
  // @@protoc_insertion_point(field_add:CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >&
CMsgDOTAWelcome::localization_digests() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAWelcome.localization_digests)
  return localization_digests_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_LocalizationDigest >*
CMsgDOTAWelcome::mutable_localization_digests() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAWelcome.localization_digests)
  return &localization_digests_;
}

// optional bool is_perfect_world_test_account = 24;
inline bool CMsgDOTAWelcome::has_is_perfect_world_test_account() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_is_perfect_world_test_account() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgDOTAWelcome::clear_has_is_perfect_world_test_account() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgDOTAWelcome::clear_is_perfect_world_test_account() {
  is_perfect_world_test_account_ = false;
  clear_has_is_perfect_world_test_account();
}
inline bool CMsgDOTAWelcome::is_perfect_world_test_account() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.is_perfect_world_test_account)
  return is_perfect_world_test_account_;
}
inline void CMsgDOTAWelcome::set_is_perfect_world_test_account(bool value) {
  set_has_is_perfect_world_test_account();
  is_perfect_world_test_account_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.is_perfect_world_test_account)
}

// repeated .EEvent active_events = 25;
inline int CMsgDOTAWelcome::active_events_size() const {
  return active_events_.size();
}
inline void CMsgDOTAWelcome::clear_active_events() {
  active_events_.Clear();
}
inline ::EEvent CMsgDOTAWelcome::active_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.active_events)
  return static_cast< ::EEvent >(active_events_.Get(index));
}
inline void CMsgDOTAWelcome::set_active_events(int index, ::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAWelcome.active_events)
}
inline void CMsgDOTAWelcome::add_active_events(::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAWelcome.active_events)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgDOTAWelcome::active_events() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAWelcome.active_events)
  return active_events_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgDOTAWelcome::mutable_active_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAWelcome.active_events)
  return &active_events_;
}

// repeated .CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
inline int CMsgDOTAWelcome::extra_messages_size() const {
  return extra_messages_.size();
}
inline void CMsgDOTAWelcome::clear_extra_messages() {
  extra_messages_.Clear();
}
inline const ::CMsgDOTAWelcome_CExtraMsg& CMsgDOTAWelcome::extra_messages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Get(index);
}
inline ::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::mutable_extra_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Mutable(index);
}
inline ::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::add_extra_messages() {
  // @@protoc_insertion_point(field_add:CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >&
CMsgDOTAWelcome::extra_messages() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAWelcome.extra_messages)
  return extra_messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAWelcome_CExtraMsg >*
CMsgDOTAWelcome::mutable_extra_messages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAWelcome.extra_messages)
  return &extra_messages_;
}

// -------------------------------------------------------------------

// CSODOTAGameHeroFavorites

// optional uint32 account_id = 1;
inline bool CSODOTAGameHeroFavorites::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSODOTAGameHeroFavorites::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSODOTAGameHeroFavorites::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSODOTAGameHeroFavorites::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::account_id() const {
  // @@protoc_insertion_point(field_get:CSODOTAGameHeroFavorites.account_id)
  return account_id_;
}
inline void CSODOTAGameHeroFavorites::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSODOTAGameHeroFavorites.account_id)
}

// optional uint32 hero_id = 2;
inline bool CSODOTAGameHeroFavorites::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSODOTAGameHeroFavorites::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSODOTAGameHeroFavorites::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSODOTAGameHeroFavorites::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::hero_id() const {
  // @@protoc_insertion_point(field_get:CSODOTAGameHeroFavorites.hero_id)
  return hero_id_;
}
inline void CSODOTAGameHeroFavorites::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CSODOTAGameHeroFavorites.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesAdd

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesAdd::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesAdd::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHeroFavoritesAdd::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHeroFavoritesAdd::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesAdd::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHeroFavoritesAdd.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesAdd::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHeroFavoritesAdd.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesRemove

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesRemove::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesRemove::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHeroFavoritesRemove::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHeroFavoritesRemove::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesRemove::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHeroFavoritesRemove.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesRemove::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHeroFavoritesRemove.hero_id)
}

// -------------------------------------------------------------------

// CMsgSetShowcaseHero

// optional uint32 showcase_hero_id = 1;
inline bool CMsgSetShowcaseHero::has_showcase_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetShowcaseHero::set_has_showcase_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetShowcaseHero::clear_has_showcase_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetShowcaseHero::clear_showcase_hero_id() {
  showcase_hero_id_ = 0u;
  clear_has_showcase_hero_id();
}
inline ::google::protobuf::uint32 CMsgSetShowcaseHero::showcase_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetShowcaseHero.showcase_hero_id)
  return showcase_hero_id_;
}
inline void CMsgSetShowcaseHero::set_showcase_hero_id(::google::protobuf::uint32 value) {
  set_has_showcase_hero_id();
  showcase_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetShowcaseHero.showcase_hero_id)
}

// -------------------------------------------------------------------

// CMsgSetFeaturedItems

// repeated uint64 featured_item_id = 1;
inline int CMsgSetFeaturedItems::featured_item_id_size() const {
  return featured_item_id_.size();
}
inline void CMsgSetFeaturedItems::clear_featured_item_id() {
  featured_item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgSetFeaturedItems::featured_item_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSetFeaturedItems.featured_item_id)
  return featured_item_id_.Get(index);
}
inline void CMsgSetFeaturedItems::set_featured_item_id(int index, ::google::protobuf::uint64 value) {
  featured_item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSetFeaturedItems.featured_item_id)
}
inline void CMsgSetFeaturedItems::add_featured_item_id(::google::protobuf::uint64 value) {
  featured_item_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSetFeaturedItems.featured_item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSetFeaturedItems::featured_item_id() const {
  // @@protoc_insertion_point(field_list:CMsgSetFeaturedItems.featured_item_id)
  return featured_item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSetFeaturedItems::mutable_featured_item_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSetFeaturedItems.featured_item_id)
  return &featured_item_id_;
}

// -------------------------------------------------------------------

// CMsgDOTAFeaturedItems

// optional uint32 account_id = 1;
inline bool CMsgDOTAFeaturedItems::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFeaturedItems::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFeaturedItems::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFeaturedItems::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFeaturedItems::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFeaturedItems.account_id)
  return account_id_;
}
inline void CMsgDOTAFeaturedItems::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFeaturedItems.account_id)
}

// repeated uint64 featured_item_id = 2;
inline int CMsgDOTAFeaturedItems::featured_item_id_size() const {
  return featured_item_id_.size();
}
inline void CMsgDOTAFeaturedItems::clear_featured_item_id() {
  featured_item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAFeaturedItems::featured_item_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_.Get(index);
}
inline void CMsgDOTAFeaturedItems::set_featured_item_id(int index, ::google::protobuf::uint64 value) {
  featured_item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAFeaturedItems.featured_item_id)
}
inline void CMsgDOTAFeaturedItems::add_featured_item_id(::google::protobuf::uint64 value) {
  featured_item_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAFeaturedItems.featured_item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAFeaturedItems::featured_item_id() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAFeaturedItems::mutable_featured_item_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFeaturedItems.featured_item_id)
  return &featured_item_id_;
}

// repeated bytes object_data = 3;
inline int CMsgDOTAFeaturedItems::object_data_size() const {
  return object_data_.size();
}
inline void CMsgDOTAFeaturedItems::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgDOTAFeaturedItems::object_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFeaturedItems.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgDOTAFeaturedItems::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAFeaturedItems.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgDOTAFeaturedItems.object_data)
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const char* value) {
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAFeaturedItems.object_data)
}
inline ::std::string* CMsgDOTAFeaturedItems::add_object_data() {
  return object_data_.Add();
}
inline void CMsgDOTAFeaturedItems::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::add_object_data(const char* value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDOTAFeaturedItems.object_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAFeaturedItems::object_data() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFeaturedItems.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAFeaturedItems::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFeaturedItems.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgRequestLeagueInfo

// -------------------------------------------------------------------

// CDynamicLeagueData

// optional uint32 league_id = 1;
inline bool CDynamicLeagueData::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDynamicLeagueData::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDynamicLeagueData::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDynamicLeagueData::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::league_id() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.league_id)
  return league_id_;
}
inline void CDynamicLeagueData::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.league_id)
}

// optional fixed32 last_match_time = 2;
inline bool CDynamicLeagueData::has_last_match_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDynamicLeagueData::set_has_last_match_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDynamicLeagueData::clear_has_last_match_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDynamicLeagueData::clear_last_match_time() {
  last_match_time_ = 0u;
  clear_has_last_match_time();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::last_match_time() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.last_match_time)
  return last_match_time_;
}
inline void CDynamicLeagueData::set_last_match_time(::google::protobuf::uint32 value) {
  set_has_last_match_time();
  last_match_time_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.last_match_time)
}

// optional uint32 prize_pool_usd = 3;
inline bool CDynamicLeagueData::has_prize_pool_usd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDynamicLeagueData::set_has_prize_pool_usd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDynamicLeagueData::clear_has_prize_pool_usd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDynamicLeagueData::clear_prize_pool_usd() {
  prize_pool_usd_ = 0u;
  clear_has_prize_pool_usd();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::prize_pool_usd() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.prize_pool_usd)
  return prize_pool_usd_;
}
inline void CDynamicLeagueData::set_prize_pool_usd(::google::protobuf::uint32 value) {
  set_has_prize_pool_usd();
  prize_pool_usd_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.prize_pool_usd)
}

// optional bool has_live_matches = 4;
inline bool CDynamicLeagueData::has_has_live_matches() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDynamicLeagueData::set_has_has_live_matches() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDynamicLeagueData::clear_has_has_live_matches() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDynamicLeagueData::clear_has_live_matches() {
  has_live_matches_ = false;
  clear_has_has_live_matches();
}
inline bool CDynamicLeagueData::has_live_matches() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.has_live_matches)
  return has_live_matches_;
}
inline void CDynamicLeagueData::set_has_live_matches(bool value) {
  set_has_has_live_matches();
  has_live_matches_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.has_live_matches)
}

// optional bool is_compendium_public = 5;
inline bool CDynamicLeagueData::has_is_compendium_public() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDynamicLeagueData::set_has_is_compendium_public() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDynamicLeagueData::clear_has_is_compendium_public() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDynamicLeagueData::clear_is_compendium_public() {
  is_compendium_public_ = false;
  clear_has_is_compendium_public();
}
inline bool CDynamicLeagueData::is_compendium_public() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.is_compendium_public)
  return is_compendium_public_;
}
inline void CDynamicLeagueData::set_is_compendium_public(bool value) {
  set_has_is_compendium_public();
  is_compendium_public_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.is_compendium_public)
}

// optional uint32 compendium_version = 6;
inline bool CDynamicLeagueData::has_compendium_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDynamicLeagueData::set_has_compendium_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDynamicLeagueData::clear_has_compendium_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDynamicLeagueData::clear_compendium_version() {
  compendium_version_ = 0u;
  clear_has_compendium_version();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::compendium_version() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.compendium_version)
  return compendium_version_;
}
inline void CDynamicLeagueData::set_compendium_version(::google::protobuf::uint32 value) {
  set_has_compendium_version();
  compendium_version_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.compendium_version)
}

// optional uint32 compendium_content_version = 7;
inline bool CDynamicLeagueData::has_compendium_content_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDynamicLeagueData::set_has_compendium_content_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDynamicLeagueData::clear_has_compendium_content_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDynamicLeagueData::clear_compendium_content_version() {
  compendium_content_version_ = 0u;
  clear_has_compendium_content_version();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::compendium_content_version() const {
  // @@protoc_insertion_point(field_get:CDynamicLeagueData.compendium_content_version)
  return compendium_content_version_;
}
inline void CDynamicLeagueData::set_compendium_content_version(::google::protobuf::uint32 value) {
  set_has_compendium_content_version();
  compendium_content_version_ = value;
  // @@protoc_insertion_point(field_set:CDynamicLeagueData.compendium_content_version)
}

// -------------------------------------------------------------------

// CStaticLeagueData

// optional uint32 league_id = 1;
inline bool CStaticLeagueData::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStaticLeagueData::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CStaticLeagueData::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CStaticLeagueData::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CStaticLeagueData::league_id() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.league_id)
  return league_id_;
}
inline void CStaticLeagueData::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.league_id)
}

// optional string name = 2;
inline bool CStaticLeagueData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStaticLeagueData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CStaticLeagueData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CStaticLeagueData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CStaticLeagueData::name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.name)
  return *name_;
}
inline void CStaticLeagueData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.name)
}
inline void CStaticLeagueData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.name)
}
inline void CStaticLeagueData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.name)
}
inline ::std::string* CStaticLeagueData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.name)
  return name_;
}
inline ::std::string* CStaticLeagueData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.name)
}

// optional string description = 3;
inline bool CStaticLeagueData::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStaticLeagueData::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CStaticLeagueData::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CStaticLeagueData::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CStaticLeagueData::description() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.description)
  return *description_;
}
inline void CStaticLeagueData::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.description)
}
inline void CStaticLeagueData::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.description)
}
inline void CStaticLeagueData::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.description)
}
inline ::std::string* CStaticLeagueData::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.description)
  return description_;
}
inline ::std::string* CStaticLeagueData::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.description)
}

// optional string banner_name = 4;
inline bool CStaticLeagueData::has_banner_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CStaticLeagueData::set_has_banner_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CStaticLeagueData::clear_has_banner_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CStaticLeagueData::clear_banner_name() {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_->clear();
  }
  clear_has_banner_name();
}
inline const ::std::string& CStaticLeagueData::banner_name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.banner_name)
  return *banner_name_;
}
inline void CStaticLeagueData::set_banner_name(const ::std::string& value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.banner_name)
}
inline void CStaticLeagueData::set_banner_name(const char* value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.banner_name)
}
inline void CStaticLeagueData::set_banner_name(const char* value, size_t size) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.banner_name)
}
inline ::std::string* CStaticLeagueData::mutable_banner_name() {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.banner_name)
  return banner_name_;
}
inline ::std::string* CStaticLeagueData::release_banner_name() {
  clear_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = banner_name_;
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_banner_name(::std::string* banner_name) {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banner_name_;
  }
  if (banner_name) {
    set_has_banner_name();
    banner_name_ = banner_name;
  } else {
    clear_has_banner_name();
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.banner_name)
}

// optional string itemdef_name = 5;
inline bool CStaticLeagueData::has_itemdef_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CStaticLeagueData::set_has_itemdef_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CStaticLeagueData::clear_has_itemdef_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CStaticLeagueData::clear_itemdef_name() {
  if (itemdef_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_->clear();
  }
  clear_has_itemdef_name();
}
inline const ::std::string& CStaticLeagueData::itemdef_name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.itemdef_name)
  return *itemdef_name_;
}
inline void CStaticLeagueData::set_itemdef_name(const ::std::string& value) {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  itemdef_name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.itemdef_name)
}
inline void CStaticLeagueData::set_itemdef_name(const char* value) {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  itemdef_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.itemdef_name)
}
inline void CStaticLeagueData::set_itemdef_name(const char* value, size_t size) {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  itemdef_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.itemdef_name)
}
inline ::std::string* CStaticLeagueData::mutable_itemdef_name() {
  set_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemdef_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.itemdef_name)
  return itemdef_name_;
}
inline ::std::string* CStaticLeagueData::release_itemdef_name() {
  clear_has_itemdef_name();
  if (itemdef_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemdef_name_;
    itemdef_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_itemdef_name(::std::string* itemdef_name) {
  if (itemdef_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemdef_name_;
  }
  if (itemdef_name) {
    set_has_itemdef_name();
    itemdef_name_ = itemdef_name;
  } else {
    clear_has_itemdef_name();
    itemdef_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.itemdef_name)
}

// optional string url = 6;
inline bool CStaticLeagueData::has_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CStaticLeagueData::set_has_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CStaticLeagueData::clear_has_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CStaticLeagueData::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CStaticLeagueData::url() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.url)
  return *url_;
}
inline void CStaticLeagueData::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.url)
}
inline void CStaticLeagueData::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.url)
}
inline void CStaticLeagueData::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.url)
}
inline ::std::string* CStaticLeagueData::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.url)
  return url_;
}
inline ::std::string* CStaticLeagueData::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.url)
}

// optional uint32 item_def_index = 7;
inline bool CStaticLeagueData::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CStaticLeagueData::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CStaticLeagueData::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CStaticLeagueData::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
inline ::google::protobuf::uint32 CStaticLeagueData::item_def_index() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.item_def_index)
  return item_def_index_;
}
inline void CStaticLeagueData::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.item_def_index)
}

// optional uint32 hud_skin_item_def_index = 8;
inline bool CStaticLeagueData::has_hud_skin_item_def_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CStaticLeagueData::set_has_hud_skin_item_def_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CStaticLeagueData::clear_has_hud_skin_item_def_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CStaticLeagueData::clear_hud_skin_item_def_index() {
  hud_skin_item_def_index_ = 0u;
  clear_has_hud_skin_item_def_index();
}
inline ::google::protobuf::uint32 CStaticLeagueData::hud_skin_item_def_index() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.hud_skin_item_def_index)
  return hud_skin_item_def_index_;
}
inline void CStaticLeagueData::set_hud_skin_item_def_index(::google::protobuf::uint32 value) {
  set_has_hud_skin_item_def_index();
  hud_skin_item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.hud_skin_item_def_index)
}

// optional string loading_screen_name = 9;
inline bool CStaticLeagueData::has_loading_screen_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CStaticLeagueData::set_has_loading_screen_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CStaticLeagueData::clear_has_loading_screen_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CStaticLeagueData::clear_loading_screen_name() {
  if (loading_screen_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_->clear();
  }
  clear_has_loading_screen_name();
}
inline const ::std::string& CStaticLeagueData::loading_screen_name() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.loading_screen_name)
  return *loading_screen_name_;
}
inline void CStaticLeagueData::set_loading_screen_name(const ::std::string& value) {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  loading_screen_name_->assign(value);
  // @@protoc_insertion_point(field_set:CStaticLeagueData.loading_screen_name)
}
inline void CStaticLeagueData::set_loading_screen_name(const char* value) {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  loading_screen_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CStaticLeagueData.loading_screen_name)
}
inline void CStaticLeagueData::set_loading_screen_name(const char* value, size_t size) {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  loading_screen_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CStaticLeagueData.loading_screen_name)
}
inline ::std::string* CStaticLeagueData::mutable_loading_screen_name() {
  set_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loading_screen_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CStaticLeagueData.loading_screen_name)
  return loading_screen_name_;
}
inline ::std::string* CStaticLeagueData::release_loading_screen_name() {
  clear_has_loading_screen_name();
  if (loading_screen_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loading_screen_name_;
    loading_screen_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CStaticLeagueData::set_allocated_loading_screen_name(::std::string* loading_screen_name) {
  if (loading_screen_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loading_screen_name_;
  }
  if (loading_screen_name) {
    set_has_loading_screen_name();
    loading_screen_name_ = loading_screen_name;
  } else {
    clear_has_loading_screen_name();
    loading_screen_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CStaticLeagueData.loading_screen_name)
}

// optional uint32 base_prize_pool = 10;
inline bool CStaticLeagueData::has_base_prize_pool() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CStaticLeagueData::set_has_base_prize_pool() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CStaticLeagueData::clear_has_base_prize_pool() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CStaticLeagueData::clear_base_prize_pool() {
  base_prize_pool_ = 0u;
  clear_has_base_prize_pool();
}
inline ::google::protobuf::uint32 CStaticLeagueData::base_prize_pool() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.base_prize_pool)
  return base_prize_pool_;
}
inline void CStaticLeagueData::set_base_prize_pool(::google::protobuf::uint32 value) {
  set_has_base_prize_pool();
  base_prize_pool_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.base_prize_pool)
}

// optional bool is_major = 11;
inline bool CStaticLeagueData::has_is_major() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CStaticLeagueData::set_has_is_major() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CStaticLeagueData::clear_has_is_major() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CStaticLeagueData::clear_is_major() {
  is_major_ = false;
  clear_has_is_major();
}
inline bool CStaticLeagueData::is_major() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.is_major)
  return is_major_;
}
inline void CStaticLeagueData::set_is_major(bool value) {
  set_has_is_major();
  is_major_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.is_major)
}

// optional uint32 sort_order = 12;
inline bool CStaticLeagueData::has_sort_order() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CStaticLeagueData::set_has_sort_order() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CStaticLeagueData::clear_has_sort_order() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CStaticLeagueData::clear_sort_order() {
  sort_order_ = 0u;
  clear_has_sort_order();
}
inline ::google::protobuf::uint32 CStaticLeagueData::sort_order() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.sort_order)
  return sort_order_;
}
inline void CStaticLeagueData::set_sort_order(::google::protobuf::uint32 value) {
  set_has_sort_order();
  sort_order_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.sort_order)
}

// optional uint32 tier = 13;
inline bool CStaticLeagueData::has_tier() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CStaticLeagueData::set_has_tier() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CStaticLeagueData::clear_has_tier() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CStaticLeagueData::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CStaticLeagueData::tier() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.tier)
  return tier_;
}
inline void CStaticLeagueData::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.tier)
}

// optional uint32 amateur_region = 14;
inline bool CStaticLeagueData::has_amateur_region() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CStaticLeagueData::set_has_amateur_region() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CStaticLeagueData::clear_has_amateur_region() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CStaticLeagueData::clear_amateur_region() {
  amateur_region_ = 0u;
  clear_has_amateur_region();
}
inline ::google::protobuf::uint32 CStaticLeagueData::amateur_region() const {
  // @@protoc_insertion_point(field_get:CStaticLeagueData.amateur_region)
  return amateur_region_;
}
inline void CStaticLeagueData::set_amateur_region(::google::protobuf::uint32 value) {
  set_has_amateur_region();
  amateur_region_ = value;
  // @@protoc_insertion_point(field_set:CStaticLeagueData.amateur_region)
}

// -------------------------------------------------------------------

// CLeagueData

// optional .CDynamicLeagueData dynamic_data = 1;
inline bool CLeagueData::has_dynamic_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLeagueData::set_has_dynamic_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLeagueData::clear_has_dynamic_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLeagueData::clear_dynamic_data() {
  if (dynamic_data_ != NULL) dynamic_data_->::CDynamicLeagueData::Clear();
  clear_has_dynamic_data();
}
inline const ::CDynamicLeagueData& CLeagueData::dynamic_data() const {
  // @@protoc_insertion_point(field_get:CLeagueData.dynamic_data)
  return dynamic_data_ != NULL ? *dynamic_data_ : *default_instance_->dynamic_data_;
}
inline ::CDynamicLeagueData* CLeagueData::mutable_dynamic_data() {
  set_has_dynamic_data();
  if (dynamic_data_ == NULL) dynamic_data_ = new ::CDynamicLeagueData;
  // @@protoc_insertion_point(field_mutable:CLeagueData.dynamic_data)
  return dynamic_data_;
}
inline ::CDynamicLeagueData* CLeagueData::release_dynamic_data() {
  clear_has_dynamic_data();
  ::CDynamicLeagueData* temp = dynamic_data_;
  dynamic_data_ = NULL;
  return temp;
}
inline void CLeagueData::set_allocated_dynamic_data(::CDynamicLeagueData* dynamic_data) {
  delete dynamic_data_;
  dynamic_data_ = dynamic_data;
  if (dynamic_data) {
    set_has_dynamic_data();
  } else {
    clear_has_dynamic_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CLeagueData.dynamic_data)
}

// optional .CStaticLeagueData static_data = 2;
inline bool CLeagueData::has_static_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLeagueData::set_has_static_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLeagueData::clear_has_static_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLeagueData::clear_static_data() {
  if (static_data_ != NULL) static_data_->::CStaticLeagueData::Clear();
  clear_has_static_data();
}
inline const ::CStaticLeagueData& CLeagueData::static_data() const {
  // @@protoc_insertion_point(field_get:CLeagueData.static_data)
  return static_data_ != NULL ? *static_data_ : *default_instance_->static_data_;
}
inline ::CStaticLeagueData* CLeagueData::mutable_static_data() {
  set_has_static_data();
  if (static_data_ == NULL) static_data_ = new ::CStaticLeagueData;
  // @@protoc_insertion_point(field_mutable:CLeagueData.static_data)
  return static_data_;
}
inline ::CStaticLeagueData* CLeagueData::release_static_data() {
  clear_has_static_data();
  ::CStaticLeagueData* temp = static_data_;
  static_data_ = NULL;
  return temp;
}
inline void CLeagueData::set_allocated_static_data(::CStaticLeagueData* static_data) {
  delete static_data_;
  static_data_ = static_data;
  if (static_data) {
    set_has_static_data();
  } else {
    clear_has_static_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CLeagueData.static_data)
}

// optional bool is_owned = 3;
inline bool CLeagueData::has_is_owned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLeagueData::set_has_is_owned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLeagueData::clear_has_is_owned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLeagueData::clear_is_owned() {
  is_owned_ = false;
  clear_has_is_owned();
}
inline bool CLeagueData::is_owned() const {
  // @@protoc_insertion_point(field_get:CLeagueData.is_owned)
  return is_owned_;
}
inline void CLeagueData::set_is_owned(bool value) {
  set_has_is_owned();
  is_owned_ = value;
  // @@protoc_insertion_point(field_set:CLeagueData.is_owned)
}

// -------------------------------------------------------------------

// CMsgResponseLeagueInfo

// repeated .CDynamicLeagueData leagues = 1;
inline int CMsgResponseLeagueInfo::leagues_size() const {
  return leagues_.size();
}
inline void CMsgResponseLeagueInfo::clear_leagues() {
  leagues_.Clear();
}
inline const ::CDynamicLeagueData& CMsgResponseLeagueInfo::leagues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgResponseLeagueInfo.leagues)
  return leagues_.Get(index);
}
inline ::CDynamicLeagueData* CMsgResponseLeagueInfo::mutable_leagues(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgResponseLeagueInfo.leagues)
  return leagues_.Mutable(index);
}
inline ::CDynamicLeagueData* CMsgResponseLeagueInfo::add_leagues() {
  // @@protoc_insertion_point(field_add:CMsgResponseLeagueInfo.leagues)
  return leagues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >&
CMsgResponseLeagueInfo::leagues() const {
  // @@protoc_insertion_point(field_list:CMsgResponseLeagueInfo.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDynamicLeagueData >*
CMsgResponseLeagueInfo::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgResponseLeagueInfo.leagues)
  return &leagues_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes_PlayerVote

// optional uint32 account_id = 1;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.PlayerVote.account_id)
  return account_id_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchVotes.PlayerVote.account_id)
}

// optional uint32 vote = 2;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_vote() {
  vote_ = 0u;
  clear_has_vote();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::vote() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.PlayerVote.vote)
  return vote_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_vote(::google::protobuf::uint32 value) {
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchVotes.PlayerVote.vote)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes

// optional uint64 match_id = 1;
inline bool CMsgDOTAMatchVotes::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchVotes::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchVotes::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchVotes::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.match_id)
  return match_id_;
}
inline void CMsgDOTAMatchVotes::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchVotes.match_id)
}

// repeated .CMsgDOTAMatchVotes.PlayerVote votes = 2;
inline int CMsgDOTAMatchVotes::votes_size() const {
  return votes_.size();
}
inline void CMsgDOTAMatchVotes::clear_votes() {
  votes_.Clear();
}
inline const ::CMsgDOTAMatchVotes_PlayerVote& CMsgDOTAMatchVotes::votes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchVotes.votes)
  return votes_.Get(index);
}
inline ::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchVotes.votes)
  return votes_.Mutable(index);
}
inline ::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::add_votes() {
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchVotes.votes)
  return votes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >&
CMsgDOTAMatchVotes::votes() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchVotes.votes)
  return votes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAMatchVotes_PlayerVote >*
CMsgDOTAMatchVotes::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchVotes.votes)
  return &votes_;
}

// -------------------------------------------------------------------

// CMsgCastMatchVote

// optional uint64 match_id = 1;
inline bool CMsgCastMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCastMatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCastMatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCastMatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgCastMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgCastMatchVote.match_id)
  return match_id_;
}
inline void CMsgCastMatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgCastMatchVote.match_id)
}

// optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgCastMatchVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCastMatchVote::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCastMatchVote::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCastMatchVote::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::DOTAMatchVote CMsgCastMatchVote::vote() const {
  // @@protoc_insertion_point(field_get:CMsgCastMatchVote.vote)
  return static_cast< ::DOTAMatchVote >(vote_);
}
inline void CMsgCastMatchVote::set_vote(::DOTAMatchVote value) {
  assert(::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgCastMatchVote.vote)
}

// -------------------------------------------------------------------

// CMsgRetrieveMatchVote

// optional uint64 match_id = 1;
inline bool CMsgRetrieveMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRetrieveMatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRetrieveMatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRetrieveMatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgRetrieveMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgRetrieveMatchVote.match_id)
  return match_id_;
}
inline void CMsgRetrieveMatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRetrieveMatchVote.match_id)
}

// optional uint32 incremental = 2;
inline bool CMsgRetrieveMatchVote::has_incremental() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRetrieveMatchVote::set_has_incremental() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRetrieveMatchVote::clear_has_incremental() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRetrieveMatchVote::clear_incremental() {
  incremental_ = 0u;
  clear_has_incremental();
}
inline ::google::protobuf::uint32 CMsgRetrieveMatchVote::incremental() const {
  // @@protoc_insertion_point(field_get:CMsgRetrieveMatchVote.incremental)
  return incremental_;
}
inline void CMsgRetrieveMatchVote::set_incremental(::google::protobuf::uint32 value) {
  set_has_incremental();
  incremental_ = value;
  // @@protoc_insertion_point(field_set:CMsgRetrieveMatchVote.incremental)
}

// -------------------------------------------------------------------

// CMsgMatchVoteResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgMatchVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchVoteResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchVoteResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.eresult)
  return eresult_;
}
inline void CMsgMatchVoteResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.eresult)
}

// optional .DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgMatchVoteResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchVoteResponse::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchVoteResponse::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::DOTAMatchVote CMsgMatchVoteResponse::vote() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.vote)
  return static_cast< ::DOTAMatchVote >(vote_);
}
inline void CMsgMatchVoteResponse::set_vote(::DOTAMatchVote value) {
  assert(::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.vote)
}

// optional uint32 positive_votes = 3;
inline bool CMsgMatchVoteResponse::has_positive_votes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_positive_votes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchVoteResponse::clear_has_positive_votes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchVoteResponse::clear_positive_votes() {
  positive_votes_ = 0u;
  clear_has_positive_votes();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::positive_votes() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.positive_votes)
  return positive_votes_;
}
inline void CMsgMatchVoteResponse::set_positive_votes(::google::protobuf::uint32 value) {
  set_has_positive_votes();
  positive_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.positive_votes)
}

// optional uint32 negative_votes = 4;
inline bool CMsgMatchVoteResponse::has_negative_votes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_negative_votes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchVoteResponse::clear_has_negative_votes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchVoteResponse::clear_negative_votes() {
  negative_votes_ = 0u;
  clear_has_negative_votes();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::negative_votes() const {
  // @@protoc_insertion_point(field_get:CMsgMatchVoteResponse.negative_votes)
  return negative_votes_;
}
inline void CMsgMatchVoteResponse::set_negative_votes(::google::protobuf::uint32 value) {
  set_has_negative_votes();
  negative_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchVoteResponse.negative_votes)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedPlayer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
}

// optional float average_scaled_metric = 3;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_average_scaled_metric() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_average_scaled_metric() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_average_scaled_metric() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_average_scaled_metric() {
  average_scaled_metric_ = 0;
  clear_has_average_scaled_metric();
}
inline float CMsgDOTAHallOfFame_FeaturedPlayer::average_scaled_metric() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
  return average_scaled_metric_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_average_scaled_metric(float value) {
  set_has_average_scaled_metric();
  average_scaled_metric_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
}

// optional uint32 num_games = 4;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_num_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_num_games() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::num_games() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
  return num_games_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedFarmer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
}

// optional uint32 gold_per_min = 3;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_gold_per_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_gold_per_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_gold_per_min() {
  gold_per_min_ = 0u;
  clear_has_gold_per_min();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::gold_per_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
  return gold_per_min_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_gold_per_min(::google::protobuf::uint32 value) {
  set_has_gold_per_min();
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
}

// optional uint64 match_id = 4;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_match_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_match_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAHallOfFame_FeaturedFarmer::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
  return match_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFame::has_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame::set_has_week() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame::clear_has_week() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame::clear_week() {
  week_ = 0u;
  clear_has_week();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame::week() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.week)
  return week_;
}
inline void CMsgDOTAHallOfFame::set_week(::google::protobuf::uint32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFame.week)
}

// repeated .CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
inline int CMsgDOTAHallOfFame::featured_players_size() const {
  return featured_players_.size();
}
inline void CMsgDOTAHallOfFame::clear_featured_players() {
  featured_players_.Clear();
}
inline const ::CMsgDOTAHallOfFame_FeaturedPlayer& CMsgDOTAHallOfFame::featured_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Get(index);
}
inline ::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::mutable_featured_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Mutable(index);
}
inline ::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::add_featured_players() {
  // @@protoc_insertion_point(field_add:CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >&
CMsgDOTAHallOfFame::featured_players() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAHallOfFame.featured_players)
  return featured_players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAHallOfFame_FeaturedPlayer >*
CMsgDOTAHallOfFame::mutable_featured_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAHallOfFame.featured_players)
  return &featured_players_;
}

// optional .CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
inline bool CMsgDOTAHallOfFame::has_featured_farmer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame::set_has_featured_farmer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame::clear_has_featured_farmer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame::clear_featured_farmer() {
  if (featured_farmer_ != NULL) featured_farmer_->::CMsgDOTAHallOfFame_FeaturedFarmer::Clear();
  clear_has_featured_farmer();
}
inline const ::CMsgDOTAHallOfFame_FeaturedFarmer& CMsgDOTAHallOfFame::featured_farmer() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFame.featured_farmer)
  return featured_farmer_ != NULL ? *featured_farmer_ : *default_instance_->featured_farmer_;
}
inline ::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::mutable_featured_farmer() {
  set_has_featured_farmer();
  if (featured_farmer_ == NULL) featured_farmer_ = new ::CMsgDOTAHallOfFame_FeaturedFarmer;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHallOfFame.featured_farmer)
  return featured_farmer_;
}
inline ::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::release_featured_farmer() {
  clear_has_featured_farmer();
  ::CMsgDOTAHallOfFame_FeaturedFarmer* temp = featured_farmer_;
  featured_farmer_ = NULL;
  return temp;
}
inline void CMsgDOTAHallOfFame::set_allocated_featured_farmer(::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer) {
  delete featured_farmer_;
  featured_farmer_ = featured_farmer;
  if (featured_farmer) {
    set_has_featured_farmer();
  } else {
    clear_has_featured_farmer();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAHallOfFame.featured_farmer)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameRequest

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFameRequest::has_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameRequest::set_has_week() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFameRequest::clear_has_week() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFameRequest::clear_week() {
  week_ = 0u;
  clear_has_week();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameRequest::week() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFameRequest.week)
  return week_;
}
inline void CMsgDOTAHallOfFameRequest::set_week(::google::protobuf::uint32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFameRequest.week)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameResponse

// optional .CMsgDOTAHallOfFame hall_of_fame = 1;
inline bool CMsgDOTAHallOfFameResponse::has_hall_of_fame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::set_has_hall_of_fame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFameResponse::clear_has_hall_of_fame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFameResponse::clear_hall_of_fame() {
  if (hall_of_fame_ != NULL) hall_of_fame_->::CMsgDOTAHallOfFame::Clear();
  clear_has_hall_of_fame();
}
inline const ::CMsgDOTAHallOfFame& CMsgDOTAHallOfFameResponse::hall_of_fame() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFameResponse.hall_of_fame)
  return hall_of_fame_ != NULL ? *hall_of_fame_ : *default_instance_->hall_of_fame_;
}
inline ::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::mutable_hall_of_fame() {
  set_has_hall_of_fame();
  if (hall_of_fame_ == NULL) hall_of_fame_ = new ::CMsgDOTAHallOfFame;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHallOfFameResponse.hall_of_fame)
  return hall_of_fame_;
}
inline ::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::release_hall_of_fame() {
  clear_has_hall_of_fame();
  ::CMsgDOTAHallOfFame* temp = hall_of_fame_;
  hall_of_fame_ = NULL;
  return temp;
}
inline void CMsgDOTAHallOfFameResponse::set_allocated_hall_of_fame(::CMsgDOTAHallOfFame* hall_of_fame) {
  delete hall_of_fame_;
  hall_of_fame_ = hall_of_fame;
  if (hall_of_fame) {
    set_has_hall_of_fame();
  } else {
    clear_has_hall_of_fame();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAHallOfFameResponse.hall_of_fame)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTAHallOfFameResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFameResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFameResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHallOfFameResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHallOfFameResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHallOfFameResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreRequest

// optional int32 round = 1 [default = -1];
inline bool CMsgDOTAHalloweenHighScoreRequest::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreRequest::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreRequest::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreRequest::clear_round() {
  round_ = -1;
  clear_has_round();
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreRequest::round() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreRequest.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreRequest::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreRequest.round)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreResponse.score)
}

// optional .CMsgDOTAMatch match = 2;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_match() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_match() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_match() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_match() {
  if (match_ != NULL) match_->::CMsgDOTAMatch::Clear();
  clear_has_match();
}
inline const ::CMsgDOTAMatch& CMsgDOTAHalloweenHighScoreResponse::match() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.match)
  return match_ != NULL ? *match_ : *default_instance_->match_;
}
inline ::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::mutable_match() {
  set_has_match();
  if (match_ == NULL) match_ = new ::CMsgDOTAMatch;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAHalloweenHighScoreResponse.match)
  return match_;
}
inline ::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::release_match() {
  clear_has_match();
  ::CMsgDOTAMatch* temp = match_;
  match_ = NULL;
  return temp;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_allocated_match(::CMsgDOTAMatch* match) {
  delete match_;
  match_ = match;
  if (match) {
    set_has_match();
  } else {
    clear_has_match();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAHalloweenHighScoreResponse.match)
}

// optional uint32 eresult = 3;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreResponse.eresult)
}

// optional int32 round = 4;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_round() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_round() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_round() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreResponse::round() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAHalloweenHighScoreResponse.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAHalloweenHighScoreResponse.round)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesRequest

// optional uint32 version_seen = 1;
inline bool CMsgDOTAStorePromoPagesRequest::has_version_seen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesRequest::set_has_version_seen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAStorePromoPagesRequest::clear_has_version_seen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAStorePromoPagesRequest::clear_version_seen() {
  version_seen_ = 0u;
  clear_has_version_seen();
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesRequest::version_seen() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesRequest.version_seen)
  return version_seen_;
}
inline void CMsgDOTAStorePromoPagesRequest::set_version_seen(::google::protobuf::uint32 value) {
  set_has_version_seen();
  version_seen_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesRequest.version_seen)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse_PromoPage

// optional uint32 promo_id = 1;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_promo_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_promo_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_promo_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_promo_id() {
  promo_id_ = 0u;
  clear_has_promo_id();
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesResponse_PromoPage::promo_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
  return promo_id_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_promo_id(::google::protobuf::uint32 value) {
  set_has_promo_id();
  promo_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
}

// optional string title = 2;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::title() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return *title_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return title_;
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}

// optional string url = 3;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::url() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return *url_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return url_;
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse

// repeated .CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
inline int CMsgDOTAStorePromoPagesResponse::pages_size() const {
  return pages_.size();
}
inline void CMsgDOTAStorePromoPagesResponse::clear_pages() {
  pages_.Clear();
}
inline const ::CMsgDOTAStorePromoPagesResponse_PromoPage& CMsgDOTAStorePromoPagesResponse::pages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Get(index);
}
inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Mutable(index);
}
inline ::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::add_pages() {
  // @@protoc_insertion_point(field_add:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >&
CMsgDOTAStorePromoPagesResponse::pages() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAStorePromoPagesResponse.pages)
  return pages_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAStorePromoPagesResponse_PromoPage >*
CMsgDOTAStorePromoPagesResponse::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAStorePromoPagesResponse.pages)
  return &pages_;
}

// -------------------------------------------------------------------

// CMsgLeagueScheduleBlockTeamInfo

// optional uint32 team_id = 1;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlockTeamInfo::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlockTeamInfo.team_id)
  return team_id_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlockTeamInfo.team_id)
}

// optional string name = 2;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgLeagueScheduleBlockTeamInfo::name() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlockTeamInfo.name)
  return *name_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlockTeamInfo.name)
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgLeagueScheduleBlockTeamInfo.name)
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgLeagueScheduleBlockTeamInfo.name)
}
inline ::std::string* CMsgLeagueScheduleBlockTeamInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLeagueScheduleBlockTeamInfo.name)
  return name_;
}
inline ::std::string* CMsgLeagueScheduleBlockTeamInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLeagueScheduleBlockTeamInfo.name)
}

// optional uint64 logo = 4;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgLeagueScheduleBlockTeamInfo::logo() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlockTeamInfo.logo)
  return logo_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlockTeamInfo.logo)
}

// -------------------------------------------------------------------

// CMsgLeagueScheduleBlock

// optional uint32 block_id = 1;
inline bool CMsgLeagueScheduleBlock::has_block_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_block_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeagueScheduleBlock::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeagueScheduleBlock::clear_block_id() {
  block_id_ = 0u;
  clear_has_block_id();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlock::block_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.block_id)
  return block_id_;
}
inline void CMsgLeagueScheduleBlock::set_block_id(::google::protobuf::uint32 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.block_id)
}

// optional uint32 start_time = 2;
inline bool CMsgLeagueScheduleBlock::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeagueScheduleBlock::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeagueScheduleBlock::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlock::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.start_time)
  return start_time_;
}
inline void CMsgLeagueScheduleBlock::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.start_time)
}

// optional bool finals = 4;
inline bool CMsgLeagueScheduleBlock::has_finals() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_finals() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLeagueScheduleBlock::clear_has_finals() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLeagueScheduleBlock::clear_finals() {
  finals_ = false;
  clear_has_finals();
}
inline bool CMsgLeagueScheduleBlock::finals() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.finals)
  return finals_;
}
inline void CMsgLeagueScheduleBlock::set_finals(bool value) {
  set_has_finals();
  finals_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.finals)
}

// optional string comment = 5;
inline bool CMsgLeagueScheduleBlock::has_comment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_comment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLeagueScheduleBlock::clear_has_comment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLeagueScheduleBlock::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgLeagueScheduleBlock::comment() const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.comment)
  return *comment_;
}
inline void CMsgLeagueScheduleBlock::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgLeagueScheduleBlock.comment)
}
inline void CMsgLeagueScheduleBlock::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgLeagueScheduleBlock.comment)
}
inline void CMsgLeagueScheduleBlock::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgLeagueScheduleBlock.comment)
}
inline ::std::string* CMsgLeagueScheduleBlock::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLeagueScheduleBlock.comment)
  return comment_;
}
inline ::std::string* CMsgLeagueScheduleBlock::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgLeagueScheduleBlock::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLeagueScheduleBlock.comment)
}

// repeated .CMsgLeagueScheduleBlockTeamInfo teams = 6;
inline int CMsgLeagueScheduleBlock::teams_size() const {
  return teams_.size();
}
inline void CMsgLeagueScheduleBlock::clear_teams() {
  teams_.Clear();
}
inline const ::CMsgLeagueScheduleBlockTeamInfo& CMsgLeagueScheduleBlock::teams(int index) const {
  // @@protoc_insertion_point(field_get:CMsgLeagueScheduleBlock.teams)
  return teams_.Get(index);
}
inline ::CMsgLeagueScheduleBlockTeamInfo* CMsgLeagueScheduleBlock::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgLeagueScheduleBlock.teams)
  return teams_.Mutable(index);
}
inline ::CMsgLeagueScheduleBlockTeamInfo* CMsgLeagueScheduleBlock::add_teams() {
  // @@protoc_insertion_point(field_add:CMsgLeagueScheduleBlock.teams)
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >&
CMsgLeagueScheduleBlock::teams() const {
  // @@protoc_insertion_point(field_list:CMsgLeagueScheduleBlock.teams)
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlockTeamInfo >*
CMsgLeagueScheduleBlock::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:CMsgLeagueScheduleBlock.teams)
  return &teams_;
}

// -------------------------------------------------------------------

// CMsgDOTALeague

// optional uint32 league_id = 1;
inline bool CMsgDOTALeague::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeague::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeague::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeague::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeague::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeague.league_id)
  return league_id_;
}
inline void CMsgDOTALeague::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeague.league_id)
}

// repeated .CMsgLeagueScheduleBlock schedule = 2;
inline int CMsgDOTALeague::schedule_size() const {
  return schedule_.size();
}
inline void CMsgDOTALeague::clear_schedule() {
  schedule_.Clear();
}
inline const ::CMsgLeagueScheduleBlock& CMsgDOTALeague::schedule(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeague.schedule)
  return schedule_.Get(index);
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeague::mutable_schedule(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeague.schedule)
  return schedule_.Mutable(index);
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeague::add_schedule() {
  // @@protoc_insertion_point(field_add:CMsgDOTALeague.schedule)
  return schedule_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >&
CMsgDOTALeague::schedule() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALeague.schedule)
  return schedule_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgLeagueScheduleBlock >*
CMsgDOTALeague::mutable_schedule() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALeague.schedule)
  return &schedule_;
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleRequest

// optional uint32 league_id = 1;
inline bool CMsgDOTALeagueScheduleRequest::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleRequest::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleRequest::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleRequest::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleRequest::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleRequest.league_id)
  return league_id_;
}
inline void CMsgDOTALeagueScheduleRequest::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleRequest.league_id)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleResponse

// optional .CMsgDOTALeague league = 1;
inline bool CMsgDOTALeagueScheduleResponse::has_league() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleResponse::set_has_league() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_has_league() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_league() {
  if (league_ != NULL) league_->::CMsgDOTALeague::Clear();
  clear_has_league();
}
inline const ::CMsgDOTALeague& CMsgDOTALeagueScheduleResponse::league() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleResponse.league)
  return league_ != NULL ? *league_ : *default_instance_->league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleResponse::mutable_league() {
  set_has_league();
  if (league_ == NULL) league_ = new ::CMsgDOTALeague;
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeagueScheduleResponse.league)
  return league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleResponse::release_league() {
  clear_has_league();
  ::CMsgDOTALeague* temp = league_;
  league_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleResponse::set_allocated_league(::CMsgDOTALeague* league) {
  delete league_;
  league_ = league;
  if (league) {
    set_has_league();
  } else {
    clear_has_league();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALeagueScheduleResponse.league)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTALeagueScheduleResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeagueScheduleResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleEdit

// optional uint32 league_id = 1;
inline bool CMsgDOTALeagueScheduleEdit::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleEdit::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEdit.league_id)
  return league_id_;
}
inline void CMsgDOTALeagueScheduleEdit::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleEdit.league_id)
}

// optional .CMsgLeagueScheduleBlock schedule = 2;
inline bool CMsgDOTALeagueScheduleEdit::has_schedule() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_schedule() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_schedule() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_schedule() {
  if (schedule_ != NULL) schedule_->::CMsgLeagueScheduleBlock::Clear();
  clear_has_schedule();
}
inline const ::CMsgLeagueScheduleBlock& CMsgDOTALeagueScheduleEdit::schedule() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEdit.schedule)
  return schedule_ != NULL ? *schedule_ : *default_instance_->schedule_;
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeagueScheduleEdit::mutable_schedule() {
  set_has_schedule();
  if (schedule_ == NULL) schedule_ = new ::CMsgLeagueScheduleBlock;
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeagueScheduleEdit.schedule)
  return schedule_;
}
inline ::CMsgLeagueScheduleBlock* CMsgDOTALeagueScheduleEdit::release_schedule() {
  clear_has_schedule();
  ::CMsgLeagueScheduleBlock* temp = schedule_;
  schedule_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleEdit::set_allocated_schedule(::CMsgLeagueScheduleBlock* schedule) {
  delete schedule_;
  schedule_ = schedule;
  if (schedule) {
    set_has_schedule();
  } else {
    clear_has_schedule();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALeagueScheduleEdit.schedule)
}

// optional bool delete_block = 3;
inline bool CMsgDOTALeagueScheduleEdit::has_delete_block() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_delete_block() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_delete_block() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_delete_block() {
  delete_block_ = false;
  clear_has_delete_block();
}
inline bool CMsgDOTALeagueScheduleEdit::delete_block() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEdit.delete_block)
  return delete_block_;
}
inline void CMsgDOTALeagueScheduleEdit::set_delete_block(bool value) {
  set_has_delete_block();
  delete_block_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleEdit.delete_block)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleEditResponse

// optional .CMsgDOTALeague league = 1;
inline bool CMsgDOTALeagueScheduleEditResponse::has_league() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_has_league() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_has_league() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_league() {
  if (league_ != NULL) league_->::CMsgDOTALeague::Clear();
  clear_has_league();
}
inline const ::CMsgDOTALeague& CMsgDOTALeagueScheduleEditResponse::league() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEditResponse.league)
  return league_ != NULL ? *league_ : *default_instance_->league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleEditResponse::mutable_league() {
  set_has_league();
  if (league_ == NULL) league_ = new ::CMsgDOTALeague;
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeagueScheduleEditResponse.league)
  return league_;
}
inline ::CMsgDOTALeague* CMsgDOTALeagueScheduleEditResponse::release_league() {
  clear_has_league();
  ::CMsgDOTALeague* temp = league_;
  league_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_allocated_league(::CMsgDOTALeague* league) {
  delete league_;
  league_ = league;
  if (league) {
    set_has_league();
  } else {
    clear_has_league();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALeagueScheduleEditResponse.league)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTALeagueScheduleEditResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleEditResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeagueScheduleEditResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeagueScheduleEditResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALeaguesInMonthRequest

// optional uint32 month = 1;
inline bool CMsgDOTALeaguesInMonthRequest::has_month() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_month() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_month() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::month() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthRequest.month)
  return month_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthRequest.month)
}

// optional uint32 year = 2;
inline bool CMsgDOTALeaguesInMonthRequest::has_year() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_year() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_year() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::year() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthRequest.year)
  return year_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthRequest.year)
}

// optional uint32 tier = 3;
inline bool CMsgDOTALeaguesInMonthRequest::has_tier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_tier() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_tier() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::tier() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthRequest.tier)
  return tier_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthRequest.tier)
}

// -------------------------------------------------------------------

// CMsgDOTALeaguesInMonthResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTALeaguesInMonthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthResponse.eresult)
}

// optional uint32 month = 2;
inline bool CMsgDOTALeaguesInMonthResponse::has_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_month() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_month() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::month() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.month)
  return month_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthResponse.month)
}

// optional uint32 year = 3;
inline bool CMsgDOTALeaguesInMonthResponse::has_year() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_year() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_year() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::year() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.year)
  return year_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALeaguesInMonthResponse.year)
}

// repeated .CMsgDOTALeague leagues = 4;
inline int CMsgDOTALeaguesInMonthResponse::leagues_size() const {
  return leagues_.size();
}
inline void CMsgDOTALeaguesInMonthResponse::clear_leagues() {
  leagues_.Clear();
}
inline const ::CMsgDOTALeague& CMsgDOTALeaguesInMonthResponse::leagues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Get(index);
}
inline ::CMsgDOTALeague* CMsgDOTALeaguesInMonthResponse::mutable_leagues(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Mutable(index);
}
inline ::CMsgDOTALeague* CMsgDOTALeaguesInMonthResponse::add_leagues() {
  // @@protoc_insertion_point(field_add:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >&
CMsgDOTALeaguesInMonthResponse::leagues() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTALeague >*
CMsgDOTALeaguesInMonthResponse::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALeaguesInMonthResponse.leagues)
  return &leagues_;
}

// -------------------------------------------------------------------

// CMsgSockAddrList

// repeated fixed32 ip = 1 [packed = true];
inline int CMsgSockAddrList::ip_size() const {
  return ip_.size();
}
inline void CMsgSockAddrList::clear_ip() {
  ip_.Clear();
}
inline ::google::protobuf::uint32 CMsgSockAddrList::ip(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSockAddrList.ip)
  return ip_.Get(index);
}
inline void CMsgSockAddrList::set_ip(int index, ::google::protobuf::uint32 value) {
  ip_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSockAddrList.ip)
}
inline void CMsgSockAddrList::add_ip(::google::protobuf::uint32 value) {
  ip_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSockAddrList.ip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSockAddrList::ip() const {
  // @@protoc_insertion_point(field_list:CMsgSockAddrList.ip)
  return ip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSockAddrList::mutable_ip() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSockAddrList.ip)
  return &ip_;
}

// repeated uint32 port = 2 [packed = true];
inline int CMsgSockAddrList::port_size() const {
  return port_.size();
}
inline void CMsgSockAddrList::clear_port() {
  port_.Clear();
}
inline ::google::protobuf::uint32 CMsgSockAddrList::port(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSockAddrList.port)
  return port_.Get(index);
}
inline void CMsgSockAddrList::set_port(int index, ::google::protobuf::uint32 value) {
  port_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSockAddrList.port)
}
inline void CMsgSockAddrList::add_port(::google::protobuf::uint32 value) {
  port_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSockAddrList.port)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSockAddrList::port() const {
  // @@protoc_insertion_point(field_list:CMsgSockAddrList.port)
  return port_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSockAddrList::mutable_port() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSockAddrList.port)
  return &port_;
}

// -------------------------------------------------------------------

// CMsgMatchmakingGroupServerSample

// repeated .CMsgSockAddrList servers_by_group = 5;
inline int CMsgMatchmakingGroupServerSample::servers_by_group_size() const {
  return servers_by_group_.size();
}
inline void CMsgMatchmakingGroupServerSample::clear_servers_by_group() {
  servers_by_group_.Clear();
}
inline const ::CMsgSockAddrList& CMsgMatchmakingGroupServerSample::servers_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingGroupServerSample.servers_by_group)
  return servers_by_group_.Get(index);
}
inline ::CMsgSockAddrList* CMsgMatchmakingGroupServerSample::mutable_servers_by_group(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchmakingGroupServerSample.servers_by_group)
  return servers_by_group_.Mutable(index);
}
inline ::CMsgSockAddrList* CMsgMatchmakingGroupServerSample::add_servers_by_group() {
  // @@protoc_insertion_point(field_add:CMsgMatchmakingGroupServerSample.servers_by_group)
  return servers_by_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSockAddrList >&
CMsgMatchmakingGroupServerSample::servers_by_group() const {
  // @@protoc_insertion_point(field_list:CMsgMatchmakingGroupServerSample.servers_by_group)
  return servers_by_group_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSockAddrList >*
CMsgMatchmakingGroupServerSample::mutable_servers_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchmakingGroupServerSample.servers_by_group)
  return &servers_by_group_;
}

// optional uint32 servers_to_ping = 2;
inline bool CMsgMatchmakingGroupServerSample::has_servers_to_ping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchmakingGroupServerSample::set_has_servers_to_ping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchmakingGroupServerSample::clear_has_servers_to_ping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchmakingGroupServerSample::clear_servers_to_ping() {
  servers_to_ping_ = 0u;
  clear_has_servers_to_ping();
}
inline ::google::protobuf::uint32 CMsgMatchmakingGroupServerSample::servers_to_ping() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingGroupServerSample.servers_to_ping)
  return servers_to_ping_;
}
inline void CMsgMatchmakingGroupServerSample::set_servers_to_ping(::google::protobuf::uint32 value) {
  set_has_servers_to_ping();
  servers_to_ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingGroupServerSample.servers_to_ping)
}

// optional uint32 reply_odds = 3;
inline bool CMsgMatchmakingGroupServerSample::has_reply_odds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchmakingGroupServerSample::set_has_reply_odds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchmakingGroupServerSample::clear_has_reply_odds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchmakingGroupServerSample::clear_reply_odds() {
  reply_odds_ = 0u;
  clear_has_reply_odds();
}
inline ::google::protobuf::uint32 CMsgMatchmakingGroupServerSample::reply_odds() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingGroupServerSample.reply_odds)
  return reply_odds_;
}
inline void CMsgMatchmakingGroupServerSample::set_reply_odds(::google::protobuf::uint32 value) {
  set_has_reply_odds();
  reply_odds_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingGroupServerSample.reply_odds)
}

// optional uint32 reply_detailed_odds = 4;
inline bool CMsgMatchmakingGroupServerSample::has_reply_detailed_odds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchmakingGroupServerSample::set_has_reply_detailed_odds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchmakingGroupServerSample::clear_has_reply_detailed_odds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchmakingGroupServerSample::clear_reply_detailed_odds() {
  reply_detailed_odds_ = 0u;
  clear_has_reply_detailed_odds();
}
inline ::google::protobuf::uint32 CMsgMatchmakingGroupServerSample::reply_detailed_odds() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingGroupServerSample.reply_detailed_odds)
  return reply_detailed_odds_;
}
inline void CMsgMatchmakingGroupServerSample::set_reply_detailed_odds(::google::protobuf::uint32 value) {
  set_has_reply_detailed_odds();
  reply_detailed_odds_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingGroupServerSample.reply_detailed_odds)
}

// -------------------------------------------------------------------

// CMsgClientGameserverPings_PingDetail

// optional fixed32 ip = 1;
inline bool CMsgClientGameserverPings_PingDetail::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGameserverPings_PingDetail::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGameserverPings_PingDetail::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGameserverPings_PingDetail::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgClientGameserverPings_PingDetail::ip() const {
  // @@protoc_insertion_point(field_get:CMsgClientGameserverPings.PingDetail.ip)
  return ip_;
}
inline void CMsgClientGameserverPings_PingDetail::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientGameserverPings.PingDetail.ip)
}

// optional uint32 port = 2;
inline bool CMsgClientGameserverPings_PingDetail::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientGameserverPings_PingDetail::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientGameserverPings_PingDetail::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientGameserverPings_PingDetail::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 CMsgClientGameserverPings_PingDetail::port() const {
  // @@protoc_insertion_point(field_get:CMsgClientGameserverPings.PingDetail.port)
  return port_;
}
inline void CMsgClientGameserverPings_PingDetail::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientGameserverPings.PingDetail.port)
}

// optional uint32 ping = 3;
inline bool CMsgClientGameserverPings_PingDetail::has_ping() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientGameserverPings_PingDetail::set_has_ping() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientGameserverPings_PingDetail::clear_has_ping() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientGameserverPings_PingDetail::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CMsgClientGameserverPings_PingDetail::ping() const {
  // @@protoc_insertion_point(field_get:CMsgClientGameserverPings.PingDetail.ping)
  return ping_;
}
inline void CMsgClientGameserverPings_PingDetail::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientGameserverPings.PingDetail.ping)
}

// -------------------------------------------------------------------

// CMsgClientGameserverPings

// repeated uint32 average_ping_by_group = 1;
inline int CMsgClientGameserverPings::average_ping_by_group_size() const {
  return average_ping_by_group_.size();
}
inline void CMsgClientGameserverPings::clear_average_ping_by_group() {
  average_ping_by_group_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientGameserverPings::average_ping_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGameserverPings.average_ping_by_group)
  return average_ping_by_group_.Get(index);
}
inline void CMsgClientGameserverPings::set_average_ping_by_group(int index, ::google::protobuf::uint32 value) {
  average_ping_by_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientGameserverPings.average_ping_by_group)
}
inline void CMsgClientGameserverPings::add_average_ping_by_group(::google::protobuf::uint32 value) {
  average_ping_by_group_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientGameserverPings.average_ping_by_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientGameserverPings::average_ping_by_group() const {
  // @@protoc_insertion_point(field_list:CMsgClientGameserverPings.average_ping_by_group)
  return average_ping_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientGameserverPings::mutable_average_ping_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGameserverPings.average_ping_by_group)
  return &average_ping_by_group_;
}

// repeated .CMsgClientGameserverPings.PingDetail ping_details = 2;
inline int CMsgClientGameserverPings::ping_details_size() const {
  return ping_details_.size();
}
inline void CMsgClientGameserverPings::clear_ping_details() {
  ping_details_.Clear();
}
inline const ::CMsgClientGameserverPings_PingDetail& CMsgClientGameserverPings::ping_details(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGameserverPings.ping_details)
  return ping_details_.Get(index);
}
inline ::CMsgClientGameserverPings_PingDetail* CMsgClientGameserverPings::mutable_ping_details(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientGameserverPings.ping_details)
  return ping_details_.Mutable(index);
}
inline ::CMsgClientGameserverPings_PingDetail* CMsgClientGameserverPings::add_ping_details() {
  // @@protoc_insertion_point(field_add:CMsgClientGameserverPings.ping_details)
  return ping_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientGameserverPings_PingDetail >&
CMsgClientGameserverPings::ping_details() const {
  // @@protoc_insertion_point(field_list:CMsgClientGameserverPings.ping_details)
  return ping_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientGameserverPings_PingDetail >*
CMsgClientGameserverPings::mutable_ping_details() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGameserverPings.ping_details)
  return &ping_details_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsRequest

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsResponse

// repeated uint32 searching_players_by_group = 2;
inline int CMsgDOTAMatchmakingStatsResponse::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::searching_players_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group)
  return searching_players_by_group_.Get(index);
}
inline void CMsgDOTAMatchmakingStatsResponse::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group)
}
inline void CMsgDOTAMatchmakingStatsResponse::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatchmakingStatsResponse::searching_players_by_group() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group)
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatchmakingStatsResponse::mutable_searching_players_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group)
  return &searching_players_by_group_;
}

// repeated uint32 searching_players_by_group_source2 = 7;
inline int CMsgDOTAMatchmakingStatsResponse::searching_players_by_group_source2_size() const {
  return searching_players_by_group_source2_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_searching_players_by_group_source2() {
  searching_players_by_group_source2_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::searching_players_by_group_source2(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group_source2)
  return searching_players_by_group_source2_.Get(index);
}
inline void CMsgDOTAMatchmakingStatsResponse::set_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_source2_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group_source2)
}
inline void CMsgDOTAMatchmakingStatsResponse::add_searching_players_by_group_source2(::google::protobuf::uint32 value) {
  searching_players_by_group_source2_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group_source2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatchmakingStatsResponse::searching_players_by_group_source2() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group_source2)
  return searching_players_by_group_source2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatchmakingStatsResponse::mutable_searching_players_by_group_source2() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAMatchmakingStatsResponse.searching_players_by_group_source2)
  return &searching_players_by_group_source2_;
}

// optional uint32 disabled_groups = 3;
inline bool CMsgDOTAMatchmakingStatsResponse::has_disabled_groups() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_has_disabled_groups() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_has_disabled_groups() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_disabled_groups() {
  disabled_groups_ = 0u;
  clear_has_disabled_groups();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::disabled_groups() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.disabled_groups)
  return disabled_groups_;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_disabled_groups(::google::protobuf::uint32 value) {
  set_has_disabled_groups();
  disabled_groups_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchmakingStatsResponse.disabled_groups)
}

// optional uint32 disabled_groups_source2 = 8;
inline bool CMsgDOTAMatchmakingStatsResponse::has_disabled_groups_source2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_has_disabled_groups_source2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_has_disabled_groups_source2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_disabled_groups_source2() {
  disabled_groups_source2_ = 0u;
  clear_has_disabled_groups_source2();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::disabled_groups_source2() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.disabled_groups_source2)
  return disabled_groups_source2_;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_disabled_groups_source2(::google::protobuf::uint32 value) {
  set_has_disabled_groups_source2();
  disabled_groups_source2_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchmakingStatsResponse.disabled_groups_source2)
}

// optional .CMsgMatchmakingGroupServerSample gameserver_sample = 4;
inline bool CMsgDOTAMatchmakingStatsResponse::has_gameserver_sample() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_has_gameserver_sample() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_has_gameserver_sample() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_gameserver_sample() {
  if (gameserver_sample_ != NULL) gameserver_sample_->::CMsgMatchmakingGroupServerSample::Clear();
  clear_has_gameserver_sample();
}
inline const ::CMsgMatchmakingGroupServerSample& CMsgDOTAMatchmakingStatsResponse::gameserver_sample() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.gameserver_sample)
  return gameserver_sample_ != NULL ? *gameserver_sample_ : *default_instance_->gameserver_sample_;
}
inline ::CMsgMatchmakingGroupServerSample* CMsgDOTAMatchmakingStatsResponse::mutable_gameserver_sample() {
  set_has_gameserver_sample();
  if (gameserver_sample_ == NULL) gameserver_sample_ = new ::CMsgMatchmakingGroupServerSample;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchmakingStatsResponse.gameserver_sample)
  return gameserver_sample_;
}
inline ::CMsgMatchmakingGroupServerSample* CMsgDOTAMatchmakingStatsResponse::release_gameserver_sample() {
  clear_has_gameserver_sample();
  ::CMsgMatchmakingGroupServerSample* temp = gameserver_sample_;
  gameserver_sample_ = NULL;
  return temp;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_allocated_gameserver_sample(::CMsgMatchmakingGroupServerSample* gameserver_sample) {
  delete gameserver_sample_;
  gameserver_sample_ = gameserver_sample;
  if (gameserver_sample) {
    set_has_gameserver_sample();
  } else {
    clear_has_gameserver_sample();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatchmakingStatsResponse.gameserver_sample)
}

// optional .CMsgMatchmakingGroupServerSample gameserver_sample_source2 = 6;
inline bool CMsgDOTAMatchmakingStatsResponse::has_gameserver_sample_source2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_has_gameserver_sample_source2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_has_gameserver_sample_source2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_gameserver_sample_source2() {
  if (gameserver_sample_source2_ != NULL) gameserver_sample_source2_->::CMsgMatchmakingGroupServerSample::Clear();
  clear_has_gameserver_sample_source2();
}
inline const ::CMsgMatchmakingGroupServerSample& CMsgDOTAMatchmakingStatsResponse::gameserver_sample_source2() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.gameserver_sample_source2)
  return gameserver_sample_source2_ != NULL ? *gameserver_sample_source2_ : *default_instance_->gameserver_sample_source2_;
}
inline ::CMsgMatchmakingGroupServerSample* CMsgDOTAMatchmakingStatsResponse::mutable_gameserver_sample_source2() {
  set_has_gameserver_sample_source2();
  if (gameserver_sample_source2_ == NULL) gameserver_sample_source2_ = new ::CMsgMatchmakingGroupServerSample;
  // @@protoc_insertion_point(field_mutable:CMsgDOTAMatchmakingStatsResponse.gameserver_sample_source2)
  return gameserver_sample_source2_;
}
inline ::CMsgMatchmakingGroupServerSample* CMsgDOTAMatchmakingStatsResponse::release_gameserver_sample_source2() {
  clear_has_gameserver_sample_source2();
  ::CMsgMatchmakingGroupServerSample* temp = gameserver_sample_source2_;
  gameserver_sample_source2_ = NULL;
  return temp;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_allocated_gameserver_sample_source2(::CMsgMatchmakingGroupServerSample* gameserver_sample_source2) {
  delete gameserver_sample_source2_;
  gameserver_sample_source2_ = gameserver_sample_source2;
  if (gameserver_sample_source2) {
    set_has_gameserver_sample_source2();
  } else {
    clear_has_gameserver_sample_source2();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAMatchmakingStatsResponse.gameserver_sample_source2)
}

// optional bool maintenance_alerts = 5;
inline bool CMsgDOTAMatchmakingStatsResponse::has_maintenance_alerts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_has_maintenance_alerts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_has_maintenance_alerts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_maintenance_alerts() {
  maintenance_alerts_ = false;
  clear_has_maintenance_alerts();
}
inline bool CMsgDOTAMatchmakingStatsResponse::maintenance_alerts() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAMatchmakingStatsResponse.maintenance_alerts)
  return maintenance_alerts_;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_maintenance_alerts(bool value) {
  set_has_maintenance_alerts();
  maintenance_alerts_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAMatchmakingStatsResponse.maintenance_alerts)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccess

// optional bool allow_3rd_party_match_history = 1;
inline bool CMsgDOTASetMatchHistoryAccess::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccess::set_has_allow_3rd_party_match_history() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccess::clear_has_allow_3rd_party_match_history() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccess::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  clear_has_allow_3rd_party_match_history();
}
inline bool CMsgDOTASetMatchHistoryAccess::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTASetMatchHistoryAccess::set_allow_3rd_party_match_history(bool value) {
  set_has_allow_3rd_party_match_history();
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccessResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTASetMatchHistoryAccessResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASetMatchHistoryAccessResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetMatchHistoryAccessResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetMatchHistoryAccessResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTANotifyAccountFlagsChange

// optional uint32 accountid = 1;
inline bool CMsgDOTANotifyAccountFlagsChange::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::accountid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTANotifyAccountFlagsChange.accountid)
  return accountid_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTANotifyAccountFlagsChange.accountid)
}

// optional uint32 account_flags = 2;
inline bool CMsgDOTANotifyAccountFlagsChange::has_account_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_has_account_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_has_account_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_account_flags() {
  account_flags_ = 0u;
  clear_has_account_flags();
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::account_flags() const {
  // @@protoc_insertion_point(field_get:CMsgDOTANotifyAccountFlagsChange.account_flags)
  return account_flags_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_account_flags(::google::protobuf::uint32 value) {
  set_has_account_flags();
  account_flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTANotifyAccountFlagsChange.account_flags)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacy

// optional bool profile_private = 1;
inline bool CMsgDOTASetProfilePrivacy::has_profile_private() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacy::set_has_profile_private() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetProfilePrivacy::clear_has_profile_private() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetProfilePrivacy::clear_profile_private() {
  profile_private_ = false;
  clear_has_profile_private();
}
inline bool CMsgDOTASetProfilePrivacy::profile_private() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetProfilePrivacy.profile_private)
  return profile_private_;
}
inline void CMsgDOTASetProfilePrivacy::set_profile_private(bool value) {
  set_has_profile_private();
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetProfilePrivacy.profile_private)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacyResponse

// optional uint32 eresult = 1;
inline bool CMsgDOTASetProfilePrivacyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacyResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetProfilePrivacyResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetProfilePrivacyResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASetProfilePrivacyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetProfilePrivacyResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetProfilePrivacyResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetProfilePrivacyResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItem

// optional uint64 match_id = 1;
inline bool CMsgUpgradeLeagueItem::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpgradeLeagueItem::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpgradeLeagueItem::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpgradeLeagueItem::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgUpgradeLeagueItem::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpgradeLeagueItem.match_id)
  return match_id_;
}
inline void CMsgUpgradeLeagueItem::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpgradeLeagueItem.match_id)
}

// optional uint32 league_id = 2;
inline bool CMsgUpgradeLeagueItem::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpgradeLeagueItem::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUpgradeLeagueItem::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUpgradeLeagueItem::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgUpgradeLeagueItem::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpgradeLeagueItem.league_id)
  return league_id_;
}
inline void CMsgUpgradeLeagueItem::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpgradeLeagueItem.league_id)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItemResponse

// -------------------------------------------------------------------

// CMsgGCWatchDownloadedReplay

// optional uint64 match_id = 1;
inline bool CMsgGCWatchDownloadedReplay::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCWatchDownloadedReplay::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCWatchDownloadedReplay::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCWatchDownloadedReplay::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCWatchDownloadedReplay.match_id)
  return match_id_;
}
inline void CMsgGCWatchDownloadedReplay::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCWatchDownloadedReplay.match_id)
}

// optional .DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
inline bool CMsgGCWatchDownloadedReplay::has_watch_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::set_has_watch_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCWatchDownloadedReplay::clear_has_watch_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCWatchDownloadedReplay::clear_watch_type() {
  watch_type_ = 0;
  clear_has_watch_type();
}
inline ::DOTA_WatchReplayType CMsgGCWatchDownloadedReplay::watch_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCWatchDownloadedReplay.watch_type)
  return static_cast< ::DOTA_WatchReplayType >(watch_type_);
}
inline void CMsgGCWatchDownloadedReplay::set_watch_type(::DOTA_WatchReplayType value) {
  assert(::DOTA_WatchReplayType_IsValid(value));
  set_has_watch_type();
  watch_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCWatchDownloadedReplay.watch_type)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationState

// optional int32 location_id = 1;
inline bool CMsgSetMapLocationState::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationState::set_has_location_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetMapLocationState::clear_has_location_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetMapLocationState::clear_location_id() {
  location_id_ = 0;
  clear_has_location_id();
}
inline ::google::protobuf::int32 CMsgSetMapLocationState::location_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetMapLocationState.location_id)
  return location_id_;
}
inline void CMsgSetMapLocationState::set_location_id(::google::protobuf::int32 value) {
  set_has_location_id();
  location_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetMapLocationState.location_id)
}

// optional bool completed = 2;
inline bool CMsgSetMapLocationState::has_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetMapLocationState::set_has_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetMapLocationState::clear_has_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetMapLocationState::clear_completed() {
  completed_ = false;
  clear_has_completed();
}
inline bool CMsgSetMapLocationState::completed() const {
  // @@protoc_insertion_point(field_get:CMsgSetMapLocationState.completed)
  return completed_;
}
inline void CMsgSetMapLocationState::set_completed(bool value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetMapLocationState.completed)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationStateResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgSetMapLocationStateResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationStateResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetMapLocationStateResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetMapLocationStateResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgSetMapLocationStateResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgSetMapLocationStateResponse.eresult)
  return eresult_;
}
inline void CMsgSetMapLocationStateResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetMapLocationStateResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgResetMapLocations

// -------------------------------------------------------------------

// CMsgResetMapLocationsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgResetMapLocationsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgResetMapLocationsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgResetMapLocationsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgResetMapLocationsResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgResetMapLocationsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgResetMapLocationsResponse.eresult)
  return eresult_;
}
inline void CMsgResetMapLocationsResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgResetMapLocationsResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgRefreshPartnerAccountLink

// optional int32 partner_type = 1;
inline bool CMsgRefreshPartnerAccountLink::has_partner_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRefreshPartnerAccountLink::set_has_partner_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRefreshPartnerAccountLink::clear_has_partner_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRefreshPartnerAccountLink::clear_partner_type() {
  partner_type_ = 0;
  clear_has_partner_type();
}
inline ::google::protobuf::int32 CMsgRefreshPartnerAccountLink::partner_type() const {
  // @@protoc_insertion_point(field_get:CMsgRefreshPartnerAccountLink.partner_type)
  return partner_type_;
}
inline void CMsgRefreshPartnerAccountLink::set_partner_type(::google::protobuf::int32 value) {
  set_has_partner_type();
  partner_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgRefreshPartnerAccountLink.partner_type)
}

// -------------------------------------------------------------------

// CMsgClientsRejoinChatChannels

// -------------------------------------------------------------------

// CMsgDOTASendFriendRecruits

// repeated uint32 recruits = 1;
inline int CMsgDOTASendFriendRecruits::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTASendFriendRecruits::clear_recruits() {
  recruits_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTASendFriendRecruits::recruits(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTASendFriendRecruits.recruits)
  return recruits_.Get(index);
}
inline void CMsgDOTASendFriendRecruits::set_recruits(int index, ::google::protobuf::uint32 value) {
  recruits_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTASendFriendRecruits.recruits)
}
inline void CMsgDOTASendFriendRecruits::add_recruits(::google::protobuf::uint32 value) {
  recruits_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTASendFriendRecruits.recruits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTASendFriendRecruits::recruits() const {
  // @@protoc_insertion_point(field_list:CMsgDOTASendFriendRecruits.recruits)
  return recruits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTASendFriendRecruits::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTASendFriendRecruits.recruits)
  return &recruits_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsRequest

// repeated uint32 account_ids = 1;
inline int CMsgDOTAFriendRecruitsRequest::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgDOTAFriendRecruitsRequest::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsRequest::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgDOTAFriendRecruitsRequest::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline void CMsgDOTAFriendRecruitsRequest::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAFriendRecruitsRequest::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAFriendRecruitsRequest::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFriendRecruitsRequest.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus

// optional uint32 account_id = 1;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
}

// optional uint32 status = 2;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::status() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
  return status_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
}

// optional uint32 levels_earned = 3;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_levels_earned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_levels_earned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_levels_earned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_levels_earned() {
  levels_earned_ = 0u;
  clear_has_levels_earned();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::levels_earned() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
  return levels_earned_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_levels_earned(::google::protobuf::uint32 value) {
  set_has_levels_earned();
  levels_earned_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
}

// optional bool bonus = 4;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_bonus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_bonus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_bonus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_bonus() {
  bonus_ = false;
  clear_has_bonus();
}
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::bonus() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
  return bonus_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_bonus(bool value) {
  set_has_bonus();
  bonus_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse

// optional .CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAFriendRecruitsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.result)
  return static_cast< ::CMsgDOTAFriendRecruitsResponse_EResult >(result_);
}
inline void CMsgDOTAFriendRecruitsResponse::set_result(::CMsgDOTAFriendRecruitsResponse_EResult value) {
  assert(::CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitsResponse.result)
}

// repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
inline int CMsgDOTAFriendRecruitsResponse::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruits() {
  recruits_.Clear();
}
inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruits(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Get(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruits(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Mutable(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruits() {
  // @@protoc_insertion_point(field_add:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruits() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFriendRecruitsResponse.recruits)
  return &recruits_;
}

// repeated .CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
inline int CMsgDOTAFriendRecruitsResponse::recruiters_size() const {
  return recruiters_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruiters() {
  recruiters_.Clear();
}
inline const ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruiters(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Get(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruiters(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Mutable(index);
}
inline ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruiters() {
  // @@protoc_insertion_point(field_add:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruiters() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruiters() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFriendRecruitsResponse.recruiters)
  return &recruiters_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitInviteAcceptDecline

// optional bool accepted = 1;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_accepted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_has_accepted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_accepted() {
  accepted_ = false;
  clear_has_accepted();
}
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::accepted() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
  return accepted_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitInviteAcceptDecline::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePool

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePool::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePool::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestLeaguePrizePool::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestLeaguePrizePool::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePool::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgRequestLeaguePrizePool.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePool::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestLeaguePrizePool.league_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePoolResponse

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePoolResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgRequestLeaguePrizePoolResponse.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestLeaguePrizePoolResponse.league_id)
}

// optional uint32 prize_pool = 2;
inline bool CMsgRequestLeaguePrizePoolResponse::has_prize_pool() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_has_prize_pool() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_has_prize_pool() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_prize_pool() {
  prize_pool_ = 0u;
  clear_has_prize_pool();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::prize_pool() const {
  // @@protoc_insertion_point(field_get:CMsgRequestLeaguePrizePoolResponse.prize_pool)
  return prize_pool_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_prize_pool(::google::protobuf::uint32 value) {
  set_has_prize_pool();
  prize_pool_ = value;
  // @@protoc_insertion_point(field_set:CMsgRequestLeaguePrizePoolResponse.prize_pool)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandings

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse_Hero

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.hero_id)
}

// optional uint32 wins = 2;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::wins() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.wins)
  return wins_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.wins)
}

// optional uint32 losses = 3;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_losses() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_losses() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_losses() {
  losses_ = 0u;
  clear_has_losses();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::losses() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.Hero.losses)
  return losses_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_losses(::google::protobuf::uint32 value) {
  set_has_losses();
  losses_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGetHeroStandingsResponse.Hero.losses)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse

// repeated .CMsgGCGetHeroStandingsResponse.Hero standings = 1;
inline int CMsgGCGetHeroStandingsResponse::standings_size() const {
  return standings_.size();
}
inline void CMsgGCGetHeroStandingsResponse::clear_standings() {
  standings_.Clear();
}
inline const ::CMsgGCGetHeroStandingsResponse_Hero& CMsgGCGetHeroStandingsResponse::standings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Get(index);
}
inline ::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::mutable_standings(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Mutable(index);
}
inline ::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::add_standings() {
  // @@protoc_insertion_point(field_add:CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >&
CMsgGCGetHeroStandingsResponse::standings() const {
  // @@protoc_insertion_point(field_list:CMsgGCGetHeroStandingsResponse.standings)
  return standings_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCGetHeroStandingsResponse_Hero >*
CMsgGCGetHeroStandingsResponse::mutable_standings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGetHeroStandingsResponse.standings)
  return &standings_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsRequest

// -------------------------------------------------------------------

// CMsgGCItemEditorReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReservation::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReservation::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReservation::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReservation::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReservation::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReservation.def_index)
}

// optional string name = 2;
inline bool CMsgGCItemEditorReservation::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReservation::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReservation::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReservation::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCItemEditorReservation::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReservation.name)
  return *name_;
}
inline void CMsgGCItemEditorReservation::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReservation.name)
}
inline void CMsgGCItemEditorReservation::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReservation.name)
}
inline void CMsgGCItemEditorReservation::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReservation.name)
}
inline ::std::string* CMsgGCItemEditorReservation::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReservation.name)
  return name_;
}
inline ::std::string* CMsgGCItemEditorReservation::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReservation::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReservation.name)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsResponse

// repeated .CMsgGCItemEditorReservation reservations = 1;
inline int CMsgGCItemEditorReservationsResponse::reservations_size() const {
  return reservations_.size();
}
inline void CMsgGCItemEditorReservationsResponse::clear_reservations() {
  reservations_.Clear();
}
inline const ::CMsgGCItemEditorReservation& CMsgGCItemEditorReservationsResponse::reservations(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Get(index);
}
inline ::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::mutable_reservations(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Mutable(index);
}
inline ::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::add_reservations() {
  // @@protoc_insertion_point(field_add:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >&
CMsgGCItemEditorReservationsResponse::reservations() const {
  // @@protoc_insertion_point(field_list:CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCItemEditorReservation >*
CMsgGCItemEditorReservationsResponse::mutable_reservations() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCItemEditorReservationsResponse.reservations)
  return &reservations_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDef

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDef::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDef::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDef.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDef::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDef.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDef::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReserveItemDef::username() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDef.username)
  return *username_;
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDef.username)
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReserveItemDef.username)
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReserveItemDef.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReserveItemDef.username)
  return username_;
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReserveItemDef::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReserveItemDef.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDefResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDefResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDefResponse.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReserveItemDefResponse::username() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDefResponse.username)
  return *username_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDefResponse.username)
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReserveItemDefResponse.username)
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReserveItemDefResponse.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReserveItemDefResponse.username)
  return username_;
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReserveItemDefResponse.username)
}

// optional uint32 result = 3;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReserveItemDefResponse.result)
  return result_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReserveItemDefResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservation::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservation::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservation.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReleaseReservation::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReleaseReservation::username() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservation.username)
  return *username_;
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservation.username)
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorReleaseReservation.username)
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorReleaseReservation.username)
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorReleaseReservation.username)
  return username_;
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorReleaseReservation::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorReleaseReservation.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservationResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservationResponse::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservationResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservationResponse.def_index)
}

// optional bool released = 2;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_released() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_has_released() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_has_released() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_released() {
  released_ = false;
  clear_has_released();
}
inline bool CMsgGCItemEditorReleaseReservationResponse::released() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorReleaseReservationResponse.released)
  return released_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_released(bool value) {
  set_has_released();
  released_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorReleaseReservationResponse.released)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorRequestLeagueInfo

// optional uint32 league_id = 1;
inline bool CMsgGCItemEditorRequestLeagueInfo::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorRequestLeagueInfo::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorRequestLeagueInfo::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorRequestLeagueInfo::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorRequestLeagueInfo::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorRequestLeagueInfo.league_id)
  return league_id_;
}
inline void CMsgGCItemEditorRequestLeagueInfo::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorRequestLeagueInfo.league_id)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorLeagueInfoResponse

// optional uint32 league_id = 1;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_id)
  return league_id_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_id)
}

// optional string league_name = 2;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_name() {
  if (league_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_->clear();
  }
  clear_has_league_name();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_name)
  return *league_name_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const ::std::string& value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const char* value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const char* value, size_t size) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_name() {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.league_name)
  return league_name_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_name() {
  clear_has_league_name();
  if (league_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = league_name_;
    league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_name(::std::string* league_name) {
  if (league_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete league_name_;
  }
  if (league_name) {
    set_has_league_name();
    league_name_ = league_name;
  } else {
    clear_has_league_name();
    league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.league_name)
}

// optional string league_desc = 3;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_desc() {
  if (league_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_->clear();
  }
  clear_has_league_desc();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_desc() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_desc)
  return *league_desc_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const ::std::string& value) {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  league_desc_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const char* value) {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  league_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const char* value, size_t size) {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  league_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_desc() {
  set_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.league_desc)
  return league_desc_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_desc() {
  clear_has_league_desc();
  if (league_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = league_desc_;
    league_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_desc(::std::string* league_desc) {
  if (league_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete league_desc_;
  }
  if (league_desc) {
    set_has_league_desc();
    league_desc_ = league_desc;
  } else {
    clear_has_league_desc();
    league_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.league_desc)
}

// optional string league_url = 4;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_url() {
  if (league_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_->clear();
  }
  clear_has_league_url();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_url() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.league_url)
  return *league_url_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const ::std::string& value) {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  league_url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const char* value) {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  league_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const char* value, size_t size) {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  league_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_url() {
  set_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    league_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.league_url)
  return league_url_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_url() {
  clear_has_league_url();
  if (league_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = league_url_;
    league_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_url(::std::string* league_url) {
  if (league_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete league_url_;
  }
  if (league_url) {
    set_has_league_url();
    league_url_ = league_url;
  } else {
    clear_has_league_url();
    league_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.league_url)
}

// optional string revenue_url = 5;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_revenue_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_revenue_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_revenue_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_revenue_url() {
  if (revenue_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_->clear();
  }
  clear_has_revenue_url();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::revenue_url() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
  return *revenue_url_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const ::std::string& value) {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  revenue_url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const char* value) {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  revenue_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const char* value, size_t size) {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  revenue_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_revenue_url() {
  set_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    revenue_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
  return revenue_url_;
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_revenue_url() {
  clear_has_revenue_url();
  if (revenue_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = revenue_url_;
    revenue_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_revenue_url(::std::string* revenue_url) {
  if (revenue_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revenue_url_;
  }
  if (revenue_url) {
    set_has_revenue_url();
    revenue_url_ = revenue_url;
  } else {
    clear_has_revenue_url();
    revenue_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}

// optional uint32 tier = 6;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_tier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_tier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_tier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::tier() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.tier)
  return tier_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.tier)
}

// optional uint32 location = 7;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_location() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_location() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_location() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::location() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.location)
  return location_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.location)
}

// optional uint32 result = 8;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemEditorLeagueInfoResponse.result)
  return result_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCItemEditorLeagueInfoResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTARewardTutorialPrizes

// optional uint32 location_id = 1;
inline bool CMsgDOTARewardTutorialPrizes::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::set_has_location_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_has_location_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_location_id() {
  location_id_ = 0u;
  clear_has_location_id();
}
inline ::google::protobuf::uint32 CMsgDOTARewardTutorialPrizes::location_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARewardTutorialPrizes.location_id)
  return location_id_;
}
inline void CMsgDOTARewardTutorialPrizes::set_location_id(::google::protobuf::uint32 value) {
  set_has_location_id();
  location_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARewardTutorialPrizes.location_id)
}

// optional bool tracking_only = 2;
inline bool CMsgDOTARewardTutorialPrizes::has_tracking_only() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::set_has_tracking_only() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_has_tracking_only() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_tracking_only() {
  tracking_only_ = false;
  clear_has_tracking_only();
}
inline bool CMsgDOTARewardTutorialPrizes::tracking_only() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARewardTutorialPrizes.tracking_only)
  return tracking_only_;
}
inline void CMsgDOTARewardTutorialPrizes::set_tracking_only(bool value) {
  set_has_tracking_only();
  tracking_only_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARewardTutorialPrizes.tracking_only)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScorePost

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScorePost.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScorePost.hero_id)
}

// optional uint32 high_score = 2;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_high_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_has_high_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_has_high_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_high_score() {
  high_score_ = 0u;
  clear_has_high_score();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::high_score() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScorePost.high_score)
  return high_score_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_high_score(::google::protobuf::uint32 value) {
  set_has_high_score();
  high_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScorePost.high_score)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreRequest

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScoreRequest::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreRequest::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScoreResponse.score)
}

// optional uint32 eresult = 2;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALastHitChallengeHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALastHitChallengeHighScoreResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgFlipLobbyTeams

// -------------------------------------------------------------------

// CMsgPresentedClientTerminateDlg

// -------------------------------------------------------------------

// CMsgGCLobbyUpdateBroadcastChannelInfo

// optional uint32 channel_id = 1;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CMsgGCLobbyUpdateBroadcastChannelInfo::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
  return channel_id_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
}

// optional string country_code = 2;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_country_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return *country_code_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return country_code_;
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}

// optional string description = 3;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::description() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return *description_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return description_;
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}

// optional string language_code = 4;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_language_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_language_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_language_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_language_code() {
  if (language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_->clear();
  }
  clear_has_language_code();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::language_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return *language_code_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const ::std::string& value) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value, size_t size) {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  language_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_language_code() {
  set_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    language_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return language_code_;
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_language_code() {
  clear_has_language_code();
  if (language_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = language_code_;
    language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_language_code(::std::string* language_code) {
  if (language_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete language_code_;
  }
  if (language_code) {
    set_has_language_code();
    language_code_ = language_code;
  } else {
    clear_has_language_code();
    language_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}

// -------------------------------------------------------------------

// CMsgDOTARedeemEventPrize

// optional uint32 prize_id = 1;
inline bool CMsgDOTARedeemEventPrize::has_prize_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemEventPrize::set_has_prize_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemEventPrize::clear_has_prize_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemEventPrize::clear_prize_id() {
  prize_id_ = 0u;
  clear_has_prize_id();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrize::prize_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrize.prize_id)
  return prize_id_;
}
inline void CMsgDOTARedeemEventPrize::set_prize_id(::google::protobuf::uint32 value) {
  set_has_prize_id();
  prize_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrize.prize_id)
}

// optional uint32 event_id = 2;
inline bool CMsgDOTARedeemEventPrize::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARedeemEventPrize::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARedeemEventPrize::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARedeemEventPrize::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrize::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrize.event_id)
  return event_id_;
}
inline void CMsgDOTARedeemEventPrize::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrize.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTARedeemEventPrizeResponse

// optional .CMsgDOTARedeemEventPrizeResponse.ResultCode result = 1 [default = Success];
inline bool CMsgDOTARedeemEventPrizeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgDOTARedeemEventPrizeResponse_ResultCode CMsgDOTARedeemEventPrizeResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.result)
  return static_cast< ::CMsgDOTARedeemEventPrizeResponse_ResultCode >(result_);
}
inline void CMsgDOTARedeemEventPrizeResponse::set_result(::CMsgDOTARedeemEventPrizeResponse_ResultCode value) {
  assert(::CMsgDOTARedeemEventPrizeResponse_ResultCode_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.result)
}

// optional uint32 remaining_points = 2;
inline bool CMsgDOTARedeemEventPrizeResponse::has_remaining_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_remaining_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_remaining_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_remaining_points() {
  remaining_points_ = 0u;
  clear_has_remaining_points();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrizeResponse::remaining_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.remaining_points)
  return remaining_points_;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_remaining_points(::google::protobuf::uint32 value) {
  set_has_remaining_points();
  remaining_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.remaining_points)
}

// optional uint32 remaining_premium_points = 3;
inline bool CMsgDOTARedeemEventPrizeResponse::has_remaining_premium_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_remaining_premium_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_remaining_premium_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_remaining_premium_points() {
  remaining_premium_points_ = 0u;
  clear_has_remaining_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrizeResponse::remaining_premium_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.remaining_premium_points)
  return remaining_premium_points_;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_remaining_premium_points(::google::protobuf::uint32 value) {
  set_has_remaining_premium_points();
  remaining_premium_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.remaining_premium_points)
}

// optional uint32 event_id = 4;
inline bool CMsgDOTARedeemEventPrizeResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARedeemEventPrizeResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemEventPrizeResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARedeemEventPrizeResponse.event_id)
  return event_id_;
}
inline void CMsgDOTARedeemEventPrizeResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARedeemEventPrizeResponse.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPoints

// optional uint32 event_id = 1;
inline bool CMsgDOTAGetEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPoints::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPoints::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPoints::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPoints.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPoints::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPoints.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAGetEventPoints::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPoints::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPoints::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPoints::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPoints.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPoints::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPoints.account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse_Action

// optional uint32 action_id = 1;
inline bool CMsgDOTAGetEventPointsResponse_Action::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::action_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.Action.action_id)
  return action_id_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.Action.action_id)
}

// optional uint32 times_completed = 2 [default = 1];
inline bool CMsgDOTAGetEventPointsResponse_Action::has_times_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_has_times_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_has_times_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_times_completed() {
  times_completed_ = 1u;
  clear_has_times_completed();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::times_completed() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.Action.times_completed)
  return times_completed_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_times_completed(::google::protobuf::uint32 value) {
  set_has_times_completed();
  times_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.Action.times_completed)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse

// optional uint32 total_points = 1;
inline bool CMsgDOTAGetEventPointsResponse::has_total_points() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_total_points() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_total_points() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_points() {
  total_points_ = 0u;
  clear_has_total_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.total_points)
  return total_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_points(::google::protobuf::uint32 value) {
  set_has_total_points();
  total_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.total_points)
}

// optional uint32 total_premium_points = 2;
inline bool CMsgDOTAGetEventPointsResponse::has_total_premium_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_total_premium_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_total_premium_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_premium_points() {
  total_premium_points_ = 0u;
  clear_has_total_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_premium_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.total_premium_points)
  return total_premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_premium_points(::google::protobuf::uint32 value) {
  set_has_total_premium_points();
  total_premium_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.total_premium_points)
}

// optional uint32 event_id = 3;
inline bool CMsgDOTAGetEventPointsResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.event_id)
}

// optional uint32 points = 4;
inline bool CMsgDOTAGetEventPointsResponse::has_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_points() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_points() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.points)
  return points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.points)
}

// optional uint32 premium_points = 5;
inline bool CMsgDOTAGetEventPointsResponse::has_premium_points() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_premium_points() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_premium_points() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_premium_points() {
  premium_points_ = 0u;
  clear_has_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::premium_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.premium_points)
  return premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_premium_points(::google::protobuf::uint32 value) {
  set_has_premium_points();
  premium_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.premium_points)
}

// repeated .CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
inline int CMsgDOTAGetEventPointsResponse::completed_actions_size() const {
  return completed_actions_.size();
}
inline void CMsgDOTAGetEventPointsResponse::clear_completed_actions() {
  completed_actions_.Clear();
}
inline const ::CMsgDOTAGetEventPointsResponse_Action& CMsgDOTAGetEventPointsResponse::completed_actions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Get(index);
}
inline ::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::mutable_completed_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Mutable(index);
}
inline ::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::add_completed_actions() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >&
CMsgDOTAGetEventPointsResponse::completed_actions() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetEventPointsResponse_Action >*
CMsgDOTAGetEventPointsResponse::mutable_completed_actions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGetEventPointsResponse.completed_actions)
  return &completed_actions_;
}

// optional uint32 account_id = 7;
inline bool CMsgDOTAGetEventPointsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.account_id)
}

// optional bool owned = 8;
inline bool CMsgDOTAGetEventPointsResponse::has_owned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_owned() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_owned() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_owned() {
  owned_ = false;
  clear_has_owned();
}
inline bool CMsgDOTAGetEventPointsResponse::owned() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetEventPointsResponse.owned)
  return owned_;
}
inline void CMsgDOTAGetEventPointsResponse::set_owned(bool value) {
  set_has_owned();
  owned_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetEventPointsResponse.owned)
}

// -------------------------------------------------------------------

// CMsgDOTALiveLeagueGameUpdate

// optional uint32 live_league_games = 1;
inline bool CMsgDOTALiveLeagueGameUpdate::has_live_league_games() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveLeagueGameUpdate::set_has_live_league_games() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALiveLeagueGameUpdate::clear_has_live_league_games() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALiveLeagueGameUpdate::clear_live_league_games() {
  live_league_games_ = 0u;
  clear_has_live_league_games();
}
inline ::google::protobuf::uint32 CMsgDOTALiveLeagueGameUpdate::live_league_games() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveLeagueGameUpdate.live_league_games)
  return live_league_games_;
}
inline void CMsgDOTALiveLeagueGameUpdate::set_live_league_games(::google::protobuf::uint32 value) {
  set_has_live_league_games();
  live_league_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveLeagueGameUpdate.live_league_games)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelection

// optional uint32 selection_index = 1;
inline bool CMsgDOTACompendiumSelection::has_selection_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_selection_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumSelection::clear_has_selection_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumSelection::clear_selection_index() {
  selection_index_ = 0u;
  clear_has_selection_index();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection_index() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelection.selection_index)
  return selection_index_;
}
inline void CMsgDOTACompendiumSelection::set_selection_index(::google::protobuf::uint32 value) {
  set_has_selection_index();
  selection_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelection.selection_index)
}

// optional uint32 selection = 2;
inline bool CMsgDOTACompendiumSelection::has_selection() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_selection() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumSelection::clear_has_selection() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumSelection::clear_selection() {
  selection_ = 0u;
  clear_has_selection();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelection.selection)
  return selection_;
}
inline void CMsgDOTACompendiumSelection::set_selection(::google::protobuf::uint32 value) {
  set_has_selection();
  selection_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelection.selection)
}

// optional uint32 leagueid = 3;
inline bool CMsgDOTACompendiumSelection::has_leagueid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_leagueid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACompendiumSelection::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACompendiumSelection::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelection.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumSelection::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelection.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelectionResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTACompendiumSelectionResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelectionResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumSelectionResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumSelectionResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelectionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelectionResponse.eresult)
  return eresult_;
}
inline void CMsgDOTACompendiumSelectionResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumSelectionResponse.eresult)
}

// repeated .CMsgDOTACompendiumSelection extra_selections = 2;
inline int CMsgDOTACompendiumSelectionResponse::extra_selections_size() const {
  return extra_selections_.size();
}
inline void CMsgDOTACompendiumSelectionResponse::clear_extra_selections() {
  extra_selections_.Clear();
}
inline const ::CMsgDOTACompendiumSelection& CMsgDOTACompendiumSelectionResponse::extra_selections(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Get(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::mutable_extra_selections(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Mutable(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::add_extra_selections() {
  // @@protoc_insertion_point(field_add:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumSelectionResponse::extra_selections() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumSelectionResponse::mutable_extra_selections() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACompendiumSelectionResponse.extra_selections)
  return &extra_selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumData

// repeated .CMsgDOTACompendiumSelection selections = 1;
inline int CMsgDOTACompendiumData::selections_size() const {
  return selections_.size();
}
inline void CMsgDOTACompendiumData::clear_selections() {
  selections_.Clear();
}
inline const ::CMsgDOTACompendiumSelection& CMsgDOTACompendiumData::selections(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumData.selections)
  return selections_.Get(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::mutable_selections(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTACompendiumData.selections)
  return selections_.Mutable(index);
}
inline ::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::add_selections() {
  // @@protoc_insertion_point(field_add:CMsgDOTACompendiumData.selections)
  return selections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumData::selections() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACompendiumData.selections)
  return selections_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumData::mutable_selections() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACompendiumData.selections)
  return &selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataRequest

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumDataRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumDataRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataRequest.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataRequest.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataRequest::has_leagueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::set_has_leagueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumDataRequest::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumDataRequest::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataRequest.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataRequest::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataRequest.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataResponse

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumDataResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataResponse.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataResponse::has_leagueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_leagueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumDataResponse::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataResponse::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataResponse.leagueid)
}

// optional uint32 result = 3 [default = 2];
inline bool CMsgDOTACompendiumDataResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACompendiumDataResponse::clear_result() {
  result_ = 2u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.result)
  return result_;
}
inline void CMsgDOTACompendiumDataResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACompendiumDataResponse.result)
}

// optional .CMsgDOTACompendiumData compendium_data = 4;
inline bool CMsgDOTACompendiumDataResponse::has_compendium_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_compendium_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_compendium_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACompendiumDataResponse::clear_compendium_data() {
  if (compendium_data_ != NULL) compendium_data_->::CMsgDOTACompendiumData::Clear();
  clear_has_compendium_data();
}
inline const ::CMsgDOTACompendiumData& CMsgDOTACompendiumDataResponse::compendium_data() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACompendiumDataResponse.compendium_data)
  return compendium_data_ != NULL ? *compendium_data_ : *default_instance_->compendium_data_;
}
inline ::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::mutable_compendium_data() {
  set_has_compendium_data();
  if (compendium_data_ == NULL) compendium_data_ = new ::CMsgDOTACompendiumData;
  // @@protoc_insertion_point(field_mutable:CMsgDOTACompendiumDataResponse.compendium_data)
  return compendium_data_;
}
inline ::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::release_compendium_data() {
  clear_has_compendium_data();
  ::CMsgDOTACompendiumData* temp = compendium_data_;
  compendium_data_ = NULL;
  return temp;
}
inline void CMsgDOTACompendiumDataResponse::set_allocated_compendium_data(::CMsgDOTACompendiumData* compendium_data) {
  delete compendium_data_;
  compendium_data_ = compendium_data;
  if (compendium_data) {
    set_has_compendium_data();
  } else {
    clear_has_compendium_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACompendiumDataResponse.compendium_data)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistory

// optional uint32 account_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistory::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.account_id)
  return account_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.account_id)
}

// optional uint64 start_at_match_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistory::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_start_at_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_start_at_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_start_at_match_id() {
  start_at_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_start_at_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistory::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_start_at_match_id(::google::protobuf::uint64 value) {
  set_has_start_at_match_id();
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
}

// optional uint32 matches_requested = 3;
inline bool CMsgDOTAGetPlayerMatchHistory::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_matches_requested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_matches_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_matches_requested() {
  matches_requested_ = 0u;
  clear_has_matches_requested();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::matches_requested() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_matches_requested(::google::protobuf::uint32 value) {
  set_has_matches_requested();
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.matches_requested)
}

// optional uint32 hero_id = 4;
inline bool CMsgDOTAGetPlayerMatchHistory::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.hero_id)
}

// optional uint32 request_id = 5;
inline bool CMsgDOTAGetPlayerMatchHistory::has_request_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_request_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.request_id)
}

// optional bool include_practice_matches = 7;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_practice_matches() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_include_practice_matches() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_include_practice_matches() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_practice_matches() {
  include_practice_matches_ = false;
  clear_has_include_practice_matches();
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_practice_matches() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
  return include_practice_matches_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_practice_matches(bool value) {
  set_has_include_practice_matches();
  include_practice_matches_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
}

// optional bool include_custom_games = 8;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_custom_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_include_custom_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_include_custom_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_custom_games() {
  include_custom_games_ = false;
  clear_has_include_custom_games();
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_custom_games() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistory.include_custom_games)
  return include_custom_games_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_custom_games(bool value) {
  set_has_include_custom_games();
  include_custom_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistory.include_custom_games)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse_Match

// optional uint64 match_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistoryResponse_Match::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
  return match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
}

// optional uint32 start_time = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
  return start_time_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
}

// optional uint32 hero_id = 3;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
}

// optional bool winner = 4;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_winner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_winner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_winner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_winner() {
  winner_ = false;
  clear_has_winner();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::winner() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
  return winner_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_winner(bool value) {
  set_has_winner();
  winner_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
}

// optional uint32 game_mode = 5;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_game_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
  return game_mode_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
}

// optional int32 rank_change = 6;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_rank_change() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_rank_change() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_rank_change() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_rank_change() {
  rank_change_ = 0;
  clear_has_rank_change();
}
inline ::google::protobuf::int32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::rank_change() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
  return rank_change_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_rank_change(::google::protobuf::int32 value) {
  set_has_rank_change();
  rank_change_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
}

// optional uint32 previous_rank = 7;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_previous_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_previous_rank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_previous_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_previous_rank() {
  previous_rank_ = 0u;
  clear_has_previous_rank();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::previous_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
  return previous_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_previous_rank(::google::protobuf::uint32 value) {
  set_has_previous_rank();
  previous_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
}

// optional uint32 lobby_type = 8;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_lobby_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::lobby_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
}

// optional bool solo_rank = 9;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_solo_rank() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_solo_rank() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_solo_rank() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_solo_rank() {
  solo_rank_ = false;
  clear_has_solo_rank();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::solo_rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
  return solo_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_solo_rank(bool value) {
  set_has_solo_rank();
  solo_rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
}

// optional bool abandon = 10;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_abandon() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_abandon() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_abandon() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_abandon() {
  abandon_ = false;
  clear_has_abandon();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::abandon() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
  return abandon_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_abandon(bool value) {
  set_has_abandon();
  abandon_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
}

// optional uint32 duration = 11;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_duration() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_duration() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_duration() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::duration() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
  return duration_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
}

// optional uint32 engine = 12;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_engine() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_engine() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_engine() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_engine() {
  engine_ = 0u;
  clear_has_engine();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::engine() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
  return engine_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_engine(::google::protobuf::uint32 value) {
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse

// repeated .CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
inline int CMsgDOTAGetPlayerMatchHistoryResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_matches() {
  matches_.Clear();
}
inline const ::CMsgDOTAGetPlayerMatchHistoryResponse_Match& CMsgDOTAGetPlayerMatchHistoryResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Get(index);
}
inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Mutable(index);
}
inline ::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::add_matches() {
  // @@protoc_insertion_point(field_add:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
CMsgDOTAGetPlayerMatchHistoryResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return &matches_;
}

// optional uint32 request_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
}

// -------------------------------------------------------------------

// CMsgDOTAStartDailyHeroChallenge

// -------------------------------------------------------------------

// CMsgGCNotificationsRequest

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse_Notification

// optional uint64 id = 1;
inline bool CMsgGCNotificationsResponse_Notification::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CMsgGCNotificationsResponse_Notification::id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.id)
  return id_;
}
inline void CMsgGCNotificationsResponse_Notification::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.id)
}

// optional uint32 type = 2;
inline bool CMsgGCNotificationsResponse_Notification::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::type() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.type)
  return type_;
}
inline void CMsgGCNotificationsResponse_Notification::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.type)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCNotificationsResponse_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.timestamp)
  return timestamp_;
}
inline void CMsgGCNotificationsResponse_Notification::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.timestamp)
}

// optional uint32 reference_a = 4;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_a() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_a() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_a() {
  reference_a_ = 0u;
  clear_has_reference_a();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_a() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.reference_a)
  return reference_a_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_a(::google::protobuf::uint32 value) {
  set_has_reference_a();
  reference_a_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.reference_a)
}

// optional uint32 reference_b = 5;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_b() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_b() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_b() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_b() {
  reference_b_ = 0u;
  clear_has_reference_b();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_b() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.reference_b)
  return reference_b_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_b(::google::protobuf::uint32 value) {
  set_has_reference_b();
  reference_b_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.reference_b)
}

// optional uint32 reference_c = 6;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_c() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_c() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_c() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_c() {
  reference_c_ = 0u;
  clear_has_reference_c();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_c() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.reference_c)
  return reference_c_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_c(::google::protobuf::uint32 value) {
  set_has_reference_c();
  reference_c_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.reference_c)
}

// optional string message = 7;
inline bool CMsgGCNotificationsResponse_Notification::has_message() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_message() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_message() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgGCNotificationsResponse_Notification::message() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.message)
  return *message_;
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.message)
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCNotificationsResponse.Notification.message)
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCNotificationsResponse.Notification.message)
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCNotificationsResponse.Notification.message)
  return message_;
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCNotificationsResponse_Notification::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCNotificationsResponse.Notification.message)
}

// optional bool unread = 8;
inline bool CMsgGCNotificationsResponse_Notification::has_unread() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_unread() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_unread() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_unread() {
  unread_ = false;
  clear_has_unread();
}
inline bool CMsgGCNotificationsResponse_Notification::unread() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.Notification.unread)
  return unread_;
}
inline void CMsgGCNotificationsResponse_Notification::set_unread(bool value) {
  set_has_unread();
  unread_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.Notification.unread)
}

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse

// optional .CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCNotificationsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotificationsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotificationsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.result)
  return static_cast< ::CMsgGCNotificationsResponse_EResult >(result_);
}
inline void CMsgGCNotificationsResponse::set_result(::CMsgGCNotificationsResponse_EResult value) {
  assert(::CMsgGCNotificationsResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotificationsResponse.result)
}

// repeated .CMsgGCNotificationsResponse.Notification notifications = 2;
inline int CMsgGCNotificationsResponse::notifications_size() const {
  return notifications_.size();
}
inline void CMsgGCNotificationsResponse::clear_notifications() {
  notifications_.Clear();
}
inline const ::CMsgGCNotificationsResponse_Notification& CMsgGCNotificationsResponse::notifications(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationsResponse.notifications)
  return notifications_.Get(index);
}
inline ::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCNotificationsResponse.notifications)
  return notifications_.Mutable(index);
}
inline ::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::add_notifications() {
  // @@protoc_insertion_point(field_add:CMsgGCNotificationsResponse.notifications)
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >&
CMsgGCNotificationsResponse::notifications() const {
  // @@protoc_insertion_point(field_list:CMsgGCNotificationsResponse.notifications)
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotificationsResponse_Notification >*
CMsgGCNotificationsResponse::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCNotificationsResponse.notifications)
  return &notifications_;
}

// -------------------------------------------------------------------

// CMsgGCNotificationsMarkReadRequest

// -------------------------------------------------------------------

// CMsgClientToGCMarkNotificationListRead

// repeated uint64 notification_ids = 1;
inline int CMsgClientToGCMarkNotificationListRead::notification_ids_size() const {
  return notification_ids_.size();
}
inline void CMsgClientToGCMarkNotificationListRead::clear_notification_ids() {
  notification_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCMarkNotificationListRead::notification_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_.Get(index);
}
inline void CMsgClientToGCMarkNotificationListRead::set_notification_ids(int index, ::google::protobuf::uint64 value) {
  notification_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline void CMsgClientToGCMarkNotificationListRead::add_notification_ids(::google::protobuf::uint64 value) {
  notification_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCMarkNotificationListRead::notification_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCMarkNotificationListRead::mutable_notification_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCMarkNotificationListRead.notification_ids)
  return &notification_ids_;
}

// -------------------------------------------------------------------

// CMsgGCLeagueAdminState_PrivateLeagueKeys

// optional uint32 leagueid = 1;
inline bool CMsgGCLeagueAdminState_PrivateLeagueKeys::has_leagueid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_has_leagueid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState_PrivateLeagueKeys::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.PrivateLeagueKeys.leagueid)
  return leagueid_;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCLeagueAdminState.PrivateLeagueKeys.leagueid)
}

// optional uint32 privatekey = 2;
inline bool CMsgGCLeagueAdminState_PrivateLeagueKeys::has_privatekey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_has_privatekey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_has_privatekey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_privatekey() {
  privatekey_ = 0u;
  clear_has_privatekey();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState_PrivateLeagueKeys::privatekey() const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.PrivateLeagueKeys.privatekey)
  return privatekey_;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_privatekey(::google::protobuf::uint32 value) {
  set_has_privatekey();
  privatekey_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCLeagueAdminState.PrivateLeagueKeys.privatekey)
}

// -------------------------------------------------------------------

// CMsgGCLeagueAdminState

// repeated uint32 leagues = 1;
inline int CMsgGCLeagueAdminState::leagues_size() const {
  return leagues_.size();
}
inline void CMsgGCLeagueAdminState::clear_leagues() {
  leagues_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState::leagues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.leagues)
  return leagues_.Get(index);
}
inline void CMsgGCLeagueAdminState::set_leagues(int index, ::google::protobuf::uint32 value) {
  leagues_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCLeagueAdminState.leagues)
}
inline void CMsgGCLeagueAdminState::add_leagues(::google::protobuf::uint32 value) {
  leagues_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCLeagueAdminState.leagues)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCLeagueAdminState::leagues() const {
  // @@protoc_insertion_point(field_list:CMsgGCLeagueAdminState.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCLeagueAdminState::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCLeagueAdminState.leagues)
  return &leagues_;
}

// repeated .CMsgGCLeagueAdminState.PrivateLeagueKeys keys = 2;
inline int CMsgGCLeagueAdminState::keys_size() const {
  return keys_.size();
}
inline void CMsgGCLeagueAdminState::clear_keys() {
  keys_.Clear();
}
inline const ::CMsgGCLeagueAdminState_PrivateLeagueKeys& CMsgGCLeagueAdminState::keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCLeagueAdminState.keys)
  return keys_.Get(index);
}
inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* CMsgGCLeagueAdminState::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCLeagueAdminState.keys)
  return keys_.Mutable(index);
}
inline ::CMsgGCLeagueAdminState_PrivateLeagueKeys* CMsgGCLeagueAdminState::add_keys() {
  // @@protoc_insertion_point(field_add:CMsgGCLeagueAdminState.keys)
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >&
CMsgGCLeagueAdminState::keys() const {
  // @@protoc_insertion_point(field_list:CMsgGCLeagueAdminState.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCLeagueAdminState_PrivateLeagueKeys >*
CMsgGCLeagueAdminState::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCLeagueAdminState.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoRequest

// repeated uint32 account_ids = 1;
inline int CMsgGCPlayerInfoRequest::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCPlayerInfoRequest::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoRequest::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoRequest.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCPlayerInfoRequest::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoRequest.account_ids)
}
inline void CMsgGCPlayerInfoRequest::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCPlayerInfoRequest.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCPlayerInfoRequest::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCPlayerInfoRequest.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCPlayerInfoRequest::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCPlayerInfoRequest.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmit

// optional string name = 1;
inline bool CMsgGCPlayerInfoSubmit::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoSubmit::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.name)
  return *name_;
}
inline void CMsgGCPlayerInfoSubmit::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.name)
}
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCPlayerInfoSubmit.name)
}
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCPlayerInfoSubmit.name)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCPlayerInfoSubmit.name)
  return name_;
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCPlayerInfoSubmit.name)
}

// optional string country_code = 2;
inline bool CMsgGCPlayerInfoSubmit::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_country_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCPlayerInfoSubmit::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::country_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.country_code)
  return *country_code_;
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.country_code)
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCPlayerInfoSubmit.country_code)
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCPlayerInfoSubmit.country_code)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCPlayerInfoSubmit.country_code)
  return country_code_;
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCPlayerInfoSubmit.country_code)
}

// optional uint32 fantasy_role = 3;
inline bool CMsgGCPlayerInfoSubmit::has_fantasy_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_fantasy_role() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_fantasy_role() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCPlayerInfoSubmit::clear_fantasy_role() {
  fantasy_role_ = 0u;
  clear_has_fantasy_role();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::fantasy_role() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.fantasy_role)
  return fantasy_role_;
}
inline void CMsgGCPlayerInfoSubmit::set_fantasy_role(::google::protobuf::uint32 value) {
  set_has_fantasy_role();
  fantasy_role_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.fantasy_role)
}

// optional uint32 team_id = 4;
inline bool CMsgGCPlayerInfoSubmit::has_team_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_team_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCPlayerInfoSubmit::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.team_id)
  return team_id_;
}
inline void CMsgGCPlayerInfoSubmit::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.team_id)
}

// optional string sponsor = 5;
inline bool CMsgGCPlayerInfoSubmit::has_sponsor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_sponsor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_sponsor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCPlayerInfoSubmit::clear_sponsor() {
  if (sponsor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_->clear();
  }
  clear_has_sponsor();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::sponsor() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmit.sponsor)
  return *sponsor_;
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const ::std::string& value) {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  sponsor_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmit.sponsor)
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value) {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  sponsor_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCPlayerInfoSubmit.sponsor)
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value, size_t size) {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  sponsor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCPlayerInfoSubmit.sponsor)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_sponsor() {
  set_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCPlayerInfoSubmit.sponsor)
  return sponsor_;
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_sponsor() {
  clear_has_sponsor();
  if (sponsor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sponsor_;
    sponsor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_sponsor(::std::string* sponsor) {
  if (sponsor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sponsor_;
  }
  if (sponsor) {
    set_has_sponsor();
    sponsor_ = sponsor;
  } else {
    clear_has_sponsor();
    sponsor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCPlayerInfoSubmit.sponsor)
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmitResponse

// optional .CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCPlayerInfoSubmitResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmitResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoSubmitResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoSubmitResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCPlayerInfoSubmitResponse.result)
  return static_cast< ::CMsgGCPlayerInfoSubmitResponse_EResult >(result_);
}
inline void CMsgGCPlayerInfoSubmitResponse::set_result(::CMsgGCPlayerInfoSubmitResponse_EResult value) {
  assert(::CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCPlayerInfoSubmitResponse.result)
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache_TypeCache

// optional uint32 type = 1;
inline bool CMsgSerializedSOCache_TypeCache::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSerializedSOCache_TypeCache::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSerializedSOCache_TypeCache::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSerializedSOCache_TypeCache::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CMsgSerializedSOCache_TypeCache::type() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.TypeCache.type)
  return type_;
}
inline void CMsgSerializedSOCache_TypeCache::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.TypeCache.type)
}

// repeated bytes objects = 2;
inline int CMsgSerializedSOCache_TypeCache::objects_size() const {
  return objects_.size();
}
inline void CMsgSerializedSOCache_TypeCache::clear_objects() {
  objects_.Clear();
}
inline const ::std::string& CMsgSerializedSOCache_TypeCache::objects(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.TypeCache.objects)
  return objects_.Get(index);
}
inline ::std::string* CMsgSerializedSOCache_TypeCache::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.TypeCache.objects)
  return objects_.Mutable(index);
}
inline void CMsgSerializedSOCache_TypeCache::set_objects(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.TypeCache.objects)
  objects_.Mutable(index)->assign(value);
}
inline void CMsgSerializedSOCache_TypeCache::set_objects(int index, const char* value) {
  objects_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSerializedSOCache.TypeCache.objects)
}
inline void CMsgSerializedSOCache_TypeCache::set_objects(int index, const void* value, size_t size) {
  objects_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSerializedSOCache.TypeCache.objects)
}
inline ::std::string* CMsgSerializedSOCache_TypeCache::add_objects() {
  return objects_.Add();
}
inline void CMsgSerializedSOCache_TypeCache::add_objects(const ::std::string& value) {
  objects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.TypeCache.objects)
}
inline void CMsgSerializedSOCache_TypeCache::add_objects(const char* value) {
  objects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSerializedSOCache.TypeCache.objects)
}
inline void CMsgSerializedSOCache_TypeCache::add_objects(const void* value, size_t size) {
  objects_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSerializedSOCache.TypeCache.objects)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSerializedSOCache_TypeCache::objects() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.TypeCache.objects)
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSerializedSOCache_TypeCache::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.TypeCache.objects)
  return &objects_;
}

// optional uint32 service_id = 3;
inline bool CMsgSerializedSOCache_TypeCache::has_service_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSerializedSOCache_TypeCache::set_has_service_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSerializedSOCache_TypeCache::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSerializedSOCache_TypeCache::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSerializedSOCache_TypeCache::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.TypeCache.service_id)
  return service_id_;
}
inline void CMsgSerializedSOCache_TypeCache::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.TypeCache.service_id)
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache_Cache_Version

// optional uint32 service = 1;
inline bool CMsgSerializedSOCache_Cache_Version::has_service() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSerializedSOCache_Cache_Version::set_has_service() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSerializedSOCache_Cache_Version::clear_has_service() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSerializedSOCache_Cache_Version::clear_service() {
  service_ = 0u;
  clear_has_service();
}
inline ::google::protobuf::uint32 CMsgSerializedSOCache_Cache_Version::service() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.Version.service)
  return service_;
}
inline void CMsgSerializedSOCache_Cache_Version::set_service(::google::protobuf::uint32 value) {
  set_has_service();
  service_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.Version.service)
}

// optional uint64 version = 2;
inline bool CMsgSerializedSOCache_Cache_Version::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSerializedSOCache_Cache_Version::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSerializedSOCache_Cache_Version::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSerializedSOCache_Cache_Version::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSerializedSOCache_Cache_Version::version() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.Version.version)
  return version_;
}
inline void CMsgSerializedSOCache_Cache_Version::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.Version.version)
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache_Cache

// optional uint32 type = 1;
inline bool CMsgSerializedSOCache_Cache::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSerializedSOCache_Cache::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSerializedSOCache_Cache::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSerializedSOCache_Cache::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CMsgSerializedSOCache_Cache::type() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.type)
  return type_;
}
inline void CMsgSerializedSOCache_Cache::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.type)
}

// optional uint64 id = 2;
inline bool CMsgSerializedSOCache_Cache::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSerializedSOCache_Cache::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSerializedSOCache_Cache::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSerializedSOCache_Cache::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CMsgSerializedSOCache_Cache::id() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.id)
  return id_;
}
inline void CMsgSerializedSOCache_Cache::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.id)
}

// repeated .CMsgSerializedSOCache.Cache.Version versions = 3;
inline int CMsgSerializedSOCache_Cache::versions_size() const {
  return versions_.size();
}
inline void CMsgSerializedSOCache_Cache::clear_versions() {
  versions_.Clear();
}
inline const ::CMsgSerializedSOCache_Cache_Version& CMsgSerializedSOCache_Cache::versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.versions)
  return versions_.Get(index);
}
inline ::CMsgSerializedSOCache_Cache_Version* CMsgSerializedSOCache_Cache::mutable_versions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.Cache.versions)
  return versions_.Mutable(index);
}
inline ::CMsgSerializedSOCache_Cache_Version* CMsgSerializedSOCache_Cache::add_versions() {
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.Cache.versions)
  return versions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >&
CMsgSerializedSOCache_Cache::versions() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.Cache.versions)
  return versions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >*
CMsgSerializedSOCache_Cache::mutable_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.Cache.versions)
  return &versions_;
}

// repeated .CMsgSerializedSOCache.TypeCache type_caches = 4;
inline int CMsgSerializedSOCache_Cache::type_caches_size() const {
  return type_caches_.size();
}
inline void CMsgSerializedSOCache_Cache::clear_type_caches() {
  type_caches_.Clear();
}
inline const ::CMsgSerializedSOCache_TypeCache& CMsgSerializedSOCache_Cache::type_caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.type_caches)
  return type_caches_.Get(index);
}
inline ::CMsgSerializedSOCache_TypeCache* CMsgSerializedSOCache_Cache::mutable_type_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.Cache.type_caches)
  return type_caches_.Mutable(index);
}
inline ::CMsgSerializedSOCache_TypeCache* CMsgSerializedSOCache_Cache::add_type_caches() {
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.Cache.type_caches)
  return type_caches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >&
CMsgSerializedSOCache_Cache::type_caches() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.Cache.type_caches)
  return type_caches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >*
CMsgSerializedSOCache_Cache::mutable_type_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.Cache.type_caches)
  return &type_caches_;
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache

// optional uint32 file_version = 1;
inline bool CMsgSerializedSOCache::has_file_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSerializedSOCache::set_has_file_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSerializedSOCache::clear_has_file_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSerializedSOCache::clear_file_version() {
  file_version_ = 0u;
  clear_has_file_version();
}
inline ::google::protobuf::uint32 CMsgSerializedSOCache::file_version() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.file_version)
  return file_version_;
}
inline void CMsgSerializedSOCache::set_file_version(::google::protobuf::uint32 value) {
  set_has_file_version();
  file_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.file_version)
}

// repeated .CMsgSerializedSOCache.Cache caches = 2;
inline int CMsgSerializedSOCache::caches_size() const {
  return caches_.size();
}
inline void CMsgSerializedSOCache::clear_caches() {
  caches_.Clear();
}
inline const ::CMsgSerializedSOCache_Cache& CMsgSerializedSOCache::caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.caches)
  return caches_.Get(index);
}
inline ::CMsgSerializedSOCache_Cache* CMsgSerializedSOCache::mutable_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.caches)
  return caches_.Mutable(index);
}
inline ::CMsgSerializedSOCache_Cache* CMsgSerializedSOCache::add_caches() {
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.caches)
  return caches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >&
CMsgSerializedSOCache::caches() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.caches)
  return caches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >*
CMsgSerializedSOCache::mutable_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.caches)
  return &caches_;
}

// optional uint32 gc_socache_file_version = 3;
inline bool CMsgSerializedSOCache::has_gc_socache_file_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSerializedSOCache::set_has_gc_socache_file_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSerializedSOCache::clear_has_gc_socache_file_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSerializedSOCache::clear_gc_socache_file_version() {
  gc_socache_file_version_ = 0u;
  clear_has_gc_socache_file_version();
}
inline ::google::protobuf::uint32 CMsgSerializedSOCache::gc_socache_file_version() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.gc_socache_file_version)
  return gc_socache_file_version_;
}
inline void CMsgSerializedSOCache::set_gc_socache_file_version(::google::protobuf::uint32 value) {
  set_has_gc_socache_file_version();
  gc_socache_file_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.gc_socache_file_version)
}

// -------------------------------------------------------------------

// CMsgRequestWeekendTourneySchedule

// -------------------------------------------------------------------

// CMsgWeekendTourneySchedule_Division

// optional uint32 division_code = 1;
inline bool CMsgWeekendTourneySchedule_Division::has_division_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgWeekendTourneySchedule_Division::set_has_division_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgWeekendTourneySchedule_Division::clear_has_division_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgWeekendTourneySchedule_Division::clear_division_code() {
  division_code_ = 0u;
  clear_has_division_code();
}
inline ::google::protobuf::uint32 CMsgWeekendTourneySchedule_Division::division_code() const {
  // @@protoc_insertion_point(field_get:CMsgWeekendTourneySchedule.Division.division_code)
  return division_code_;
}
inline void CMsgWeekendTourneySchedule_Division::set_division_code(::google::protobuf::uint32 value) {
  set_has_division_code();
  division_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgWeekendTourneySchedule.Division.division_code)
}

// optional uint32 time_window_open = 2;
inline bool CMsgWeekendTourneySchedule_Division::has_time_window_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgWeekendTourneySchedule_Division::set_has_time_window_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgWeekendTourneySchedule_Division::clear_has_time_window_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgWeekendTourneySchedule_Division::clear_time_window_open() {
  time_window_open_ = 0u;
  clear_has_time_window_open();
}
inline ::google::protobuf::uint32 CMsgWeekendTourneySchedule_Division::time_window_open() const {
  // @@protoc_insertion_point(field_get:CMsgWeekendTourneySchedule.Division.time_window_open)
  return time_window_open_;
}
inline void CMsgWeekendTourneySchedule_Division::set_time_window_open(::google::protobuf::uint32 value) {
  set_has_time_window_open();
  time_window_open_ = value;
  // @@protoc_insertion_point(field_set:CMsgWeekendTourneySchedule.Division.time_window_open)
}

// optional uint32 time_window_close = 3;
inline bool CMsgWeekendTourneySchedule_Division::has_time_window_close() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgWeekendTourneySchedule_Division::set_has_time_window_close() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgWeekendTourneySchedule_Division::clear_has_time_window_close() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgWeekendTourneySchedule_Division::clear_time_window_close() {
  time_window_close_ = 0u;
  clear_has_time_window_close();
}
inline ::google::protobuf::uint32 CMsgWeekendTourneySchedule_Division::time_window_close() const {
  // @@protoc_insertion_point(field_get:CMsgWeekendTourneySchedule.Division.time_window_close)
  return time_window_close_;
}
inline void CMsgWeekendTourneySchedule_Division::set_time_window_close(::google::protobuf::uint32 value) {
  set_has_time_window_close();
  time_window_close_ = value;
  // @@protoc_insertion_point(field_set:CMsgWeekendTourneySchedule.Division.time_window_close)
}

// -------------------------------------------------------------------

// CMsgWeekendTourneySchedule

// repeated .CMsgWeekendTourneySchedule.Division divisions = 1;
inline int CMsgWeekendTourneySchedule::divisions_size() const {
  return divisions_.size();
}
inline void CMsgWeekendTourneySchedule::clear_divisions() {
  divisions_.Clear();
}
inline const ::CMsgWeekendTourneySchedule_Division& CMsgWeekendTourneySchedule::divisions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgWeekendTourneySchedule.divisions)
  return divisions_.Get(index);
}
inline ::CMsgWeekendTourneySchedule_Division* CMsgWeekendTourneySchedule::mutable_divisions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgWeekendTourneySchedule.divisions)
  return divisions_.Mutable(index);
}
inline ::CMsgWeekendTourneySchedule_Division* CMsgWeekendTourneySchedule::add_divisions() {
  // @@protoc_insertion_point(field_add:CMsgWeekendTourneySchedule.divisions)
  return divisions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgWeekendTourneySchedule_Division >&
CMsgWeekendTourneySchedule::divisions() const {
  // @@protoc_insertion_point(field_list:CMsgWeekendTourneySchedule.divisions)
  return divisions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgWeekendTourneySchedule_Division >*
CMsgWeekendTourneySchedule::mutable_divisions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgWeekendTourneySchedule.divisions)
  return &divisions_;
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult_Response

// optional uint32 question_id = 1;
inline bool CMsgClientProvideSurveyResult_Response::has_question_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::set_has_question_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_has_question_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_question_id() {
  question_id_ = 0u;
  clear_has_question_id();
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::question_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.Response.question_id)
  return question_id_;
}
inline void CMsgClientProvideSurveyResult_Response::set_question_id(::google::protobuf::uint32 value) {
  set_has_question_id();
  question_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientProvideSurveyResult.Response.question_id)
}

// optional uint32 survey_value = 2;
inline bool CMsgClientProvideSurveyResult_Response::has_survey_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::set_has_survey_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_has_survey_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_survey_value() {
  survey_value_ = 0u;
  clear_has_survey_value();
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::survey_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.Response.survey_value)
  return survey_value_;
}
inline void CMsgClientProvideSurveyResult_Response::set_survey_value(::google::protobuf::uint32 value) {
  set_has_survey_value();
  survey_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientProvideSurveyResult.Response.survey_value)
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult

// repeated .CMsgClientProvideSurveyResult.Response responses = 1;
inline int CMsgClientProvideSurveyResult::responses_size() const {
  return responses_.size();
}
inline void CMsgClientProvideSurveyResult::clear_responses() {
  responses_.Clear();
}
inline const ::CMsgClientProvideSurveyResult_Response& CMsgClientProvideSurveyResult::responses(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.responses)
  return responses_.Get(index);
}
inline ::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientProvideSurveyResult.responses)
  return responses_.Mutable(index);
}
inline ::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::add_responses() {
  // @@protoc_insertion_point(field_add:CMsgClientProvideSurveyResult.responses)
  return responses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >&
CMsgClientProvideSurveyResult::responses() const {
  // @@protoc_insertion_point(field_list:CMsgClientProvideSurveyResult.responses)
  return responses_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientProvideSurveyResult_Response >*
CMsgClientProvideSurveyResult::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientProvideSurveyResult.responses)
  return &responses_;
}

// optional uint64 survey_key = 2;
inline bool CMsgClientProvideSurveyResult::has_survey_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientProvideSurveyResult::set_has_survey_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientProvideSurveyResult::clear_has_survey_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientProvideSurveyResult::clear_survey_key() {
  survey_key_ = GOOGLE_ULONGLONG(0);
  clear_has_survey_key();
}
inline ::google::protobuf::uint64 CMsgClientProvideSurveyResult::survey_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientProvideSurveyResult.survey_key)
  return survey_key_;
}
inline void CMsgClientProvideSurveyResult::set_survey_key(::google::protobuf::uint64 value) {
  set_has_survey_key();
  survey_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientProvideSurveyResult.survey_key)
}

// -------------------------------------------------------------------

// CMsgDOTAEmoticonAccessSDO

// optional uint32 account_id = 1;
inline bool CMsgDOTAEmoticonAccessSDO::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEmoticonAccessSDO::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEmoticonAccessSDO.account_id)
  return account_id_;
}
inline void CMsgDOTAEmoticonAccessSDO::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAEmoticonAccessSDO.account_id)
}

// optional bytes unlocked_emoticons = 2;
inline bool CMsgDOTAEmoticonAccessSDO::has_unlocked_emoticons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::set_has_unlocked_emoticons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_has_unlocked_emoticons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_unlocked_emoticons() {
  if (unlocked_emoticons_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_->clear();
  }
  clear_has_unlocked_emoticons();
}
inline const ::std::string& CMsgDOTAEmoticonAccessSDO::unlocked_emoticons() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return *unlocked_emoticons_;
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const ::std::string& value) {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  unlocked_emoticons_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const char* value) {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  unlocked_emoticons_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const void* value, size_t size) {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  unlocked_emoticons_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::mutable_unlocked_emoticons() {
  set_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    unlocked_emoticons_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return unlocked_emoticons_;
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::release_unlocked_emoticons() {
  clear_has_unlocked_emoticons();
  if (unlocked_emoticons_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = unlocked_emoticons_;
    unlocked_emoticons_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTAEmoticonAccessSDO::set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons) {
  if (unlocked_emoticons_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unlocked_emoticons_;
  }
  if (unlocked_emoticons) {
    set_has_unlocked_emoticons();
    unlocked_emoticons_ = unlocked_emoticons;
  } else {
    clear_has_unlocked_emoticons();
    unlocked_emoticons_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}

// -------------------------------------------------------------------

// CMsgClientToGCEmoticonDataRequest

// -------------------------------------------------------------------

// CMsgGCToClientEmoticonData

// optional .CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
inline bool CMsgGCToClientEmoticonData::has_emoticon_access() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientEmoticonData::set_has_emoticon_access() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientEmoticonData::clear_has_emoticon_access() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientEmoticonData::clear_emoticon_access() {
  if (emoticon_access_ != NULL) emoticon_access_->::CMsgDOTAEmoticonAccessSDO::Clear();
  clear_has_emoticon_access();
}
inline const ::CMsgDOTAEmoticonAccessSDO& CMsgGCToClientEmoticonData::emoticon_access() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientEmoticonData.emoticon_access)
  return emoticon_access_ != NULL ? *emoticon_access_ : *default_instance_->emoticon_access_;
}
inline ::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::mutable_emoticon_access() {
  set_has_emoticon_access();
  if (emoticon_access_ == NULL) emoticon_access_ = new ::CMsgDOTAEmoticonAccessSDO;
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientEmoticonData.emoticon_access)
  return emoticon_access_;
}
inline ::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::release_emoticon_access() {
  clear_has_emoticon_access();
  ::CMsgDOTAEmoticonAccessSDO* temp = emoticon_access_;
  emoticon_access_ = NULL;
  return temp;
}
inline void CMsgGCToClientEmoticonData::set_allocated_emoticon_access(::CMsgDOTAEmoticonAccessSDO* emoticon_access) {
  delete emoticon_access_;
  emoticon_access_ = emoticon_access;
  if (emoticon_access) {
    set_has_emoticon_access();
  } else {
    clear_has_emoticon_access();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientEmoticonData.emoticon_access)
}

// -------------------------------------------------------------------

// CMsgClientToGCTrackDialogResult

// optional uint32 dialog_id = 1;
inline bool CMsgClientToGCTrackDialogResult::has_dialog_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::set_has_dialog_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTrackDialogResult::clear_has_dialog_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTrackDialogResult::clear_dialog_id() {
  dialog_id_ = 0u;
  clear_has_dialog_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::dialog_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTrackDialogResult.dialog_id)
  return dialog_id_;
}
inline void CMsgClientToGCTrackDialogResult::set_dialog_id(::google::protobuf::uint32 value) {
  set_has_dialog_id();
  dialog_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTrackDialogResult.dialog_id)
}

// optional uint32 value = 2;
inline bool CMsgClientToGCTrackDialogResult::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCTrackDialogResult::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCTrackDialogResult::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCTrackDialogResult.value)
  return value_;
}
inline void CMsgClientToGCTrackDialogResult::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCTrackDialogResult.value)
}

// -------------------------------------------------------------------

// CMsgGCToClientTournamentItemDrop

// optional uint32 item_def = 1;
inline bool CMsgGCToClientTournamentItemDrop::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTournamentItemDrop.item_def)
  return item_def_;
}
inline void CMsgGCToClientTournamentItemDrop::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTournamentItemDrop.item_def)
}

// optional uint32 event_type = 2;
inline bool CMsgGCToClientTournamentItemDrop::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTournamentItemDrop.event_type)
  return event_type_;
}
inline void CMsgGCToClientTournamentItemDrop::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTournamentItemDrop.event_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquips

// repeated .CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCSetAdditionalEquips::equips_size() const {
  return equips_.size();
}
inline void CMsgClientToGCSetAdditionalEquips::clear_equips() {
  equips_.Clear();
}
inline const ::CAdditionalEquipSlot& CMsgClientToGCSetAdditionalEquips::equips(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Get(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Mutable(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::add_equips() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
CMsgClientToGCSetAdditionalEquips::equips() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetAdditionalEquips.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
CMsgClientToGCSetAdditionalEquips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetAdditionalEquips.equips)
  return &equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquipsResponse

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquips

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquipsResponse

// repeated .CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCGetAdditionalEquipsResponse::equips_size() const {
  return equips_.size();
}
inline void CMsgClientToGCGetAdditionalEquipsResponse::clear_equips() {
  equips_.Clear();
}
inline const ::CAdditionalEquipSlot& CMsgClientToGCGetAdditionalEquipsResponse::equips(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Get(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Mutable(index);
}
inline ::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::add_equips() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
CMsgClientToGCGetAdditionalEquipsResponse::equips() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return &equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrder

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrderResponse

// repeated uint32 hero_ids = 1;
inline int CMsgClientToGCGetAllHeroOrderResponse::hero_ids_size() const {
  return hero_ids_.size();
}
inline void CMsgClientToGCGetAllHeroOrderResponse::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroOrderResponse::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_.Get(index);
}
inline void CMsgClientToGCGetAllHeroOrderResponse::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline void CMsgClientToGCGetAllHeroOrderResponse::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCGetAllHeroOrderResponse::hero_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCGetAllHeroOrderResponse::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return &hero_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgress

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgress::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgress::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgress::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgress::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgress::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgress.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgress::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgress.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgressResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.account_id)
}

// optional uint32 curr_hero_id = 2;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_id() {
  curr_hero_id_ = 0u;
  clear_has_curr_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
  return curr_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_id(::google::protobuf::uint32 value) {
  set_has_curr_hero_id();
  curr_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
}

// optional uint32 laps_completed = 3;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_laps_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_laps_completed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_laps_completed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_laps_completed() {
  laps_completed_ = 0u;
  clear_has_laps_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::laps_completed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
  return laps_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_laps_completed(::google::protobuf::uint32 value) {
  set_has_laps_completed();
  laps_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
}

// optional uint32 curr_hero_games = 4;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_hero_games() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_hero_games() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_games() {
  curr_hero_games_ = 0u;
  clear_has_curr_hero_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
  return curr_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_games(::google::protobuf::uint32 value) {
  set_has_curr_hero_games();
  curr_hero_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
}

// optional uint32 curr_lap_time_started = 5;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_time_started() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_time_started() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_time_started() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_time_started() {
  curr_lap_time_started_ = 0u;
  clear_has_curr_lap_time_started();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_time_started() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
  return curr_lap_time_started_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_time_started(::google::protobuf::uint32 value) {
  set_has_curr_lap_time_started();
  curr_lap_time_started_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
}

// optional uint32 curr_lap_games = 6;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_games() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_games() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_games() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_games() {
  curr_lap_games_ = 0u;
  clear_has_curr_lap_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
  return curr_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_games(::google::protobuf::uint32 value) {
  set_has_curr_lap_games();
  curr_lap_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
}

// optional uint32 best_lap_games = 7;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_best_lap_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_best_lap_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_games() {
  best_lap_games_ = 0u;
  clear_has_best_lap_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
  return best_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_games(::google::protobuf::uint32 value) {
  set_has_best_lap_games();
  best_lap_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
}

// optional uint32 best_lap_time = 8;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_best_lap_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_best_lap_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_time() {
  best_lap_time_ = 0u;
  clear_has_best_lap_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
  return best_lap_time_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_time(::google::protobuf::uint32 value) {
  set_has_best_lap_time();
  best_lap_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
}

// optional uint32 lap_heroes_completed = 9;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_completed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_lap_heroes_completed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_lap_heroes_completed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_completed() {
  lap_heroes_completed_ = 0u;
  clear_has_lap_heroes_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_completed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
  return lap_heroes_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_completed(::google::protobuf::uint32 value) {
  set_has_lap_heroes_completed();
  lap_heroes_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
}

// optional uint32 lap_heroes_remaining = 10;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_remaining() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_lap_heroes_remaining() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_lap_heroes_remaining() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_remaining() {
  lap_heroes_remaining_ = 0u;
  clear_has_lap_heroes_remaining();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
  return lap_heroes_remaining_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_remaining(::google::protobuf::uint32 value) {
  set_has_lap_heroes_remaining();
  lap_heroes_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
}

// optional uint32 next_hero_id = 11;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_hero_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_next_hero_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_next_hero_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_hero_id() {
  next_hero_id_ = 0u;
  clear_has_next_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::next_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
  return next_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_hero_id(::google::protobuf::uint32 value) {
  set_has_next_hero_id();
  next_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
}

// optional uint32 prev_hero_id = 12;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_hero_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_hero_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_id() {
  prev_hero_id_ = 0u;
  clear_has_prev_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
  return prev_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_id(::google::protobuf::uint32 value) {
  set_has_prev_hero_id();
  prev_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
}

// optional uint32 prev_hero_games = 13;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_games() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_hero_games() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_hero_games() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_games() {
  prev_hero_games_ = 0u;
  clear_has_prev_hero_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
  return prev_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_games(::google::protobuf::uint32 value) {
  set_has_prev_hero_games();
  prev_hero_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
}

// optional float prev_avg_tries = 14;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_avg_tries() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_avg_tries() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_avg_tries() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_avg_tries() {
  prev_avg_tries_ = 0;
  clear_has_prev_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::prev_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
  return prev_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_avg_tries(float value) {
  set_has_prev_avg_tries();
  prev_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
}

// optional float curr_avg_tries = 15;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_avg_tries() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_avg_tries() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_avg_tries() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_avg_tries() {
  curr_avg_tries_ = 0;
  clear_has_curr_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
  return curr_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_avg_tries(float value) {
  set_has_curr_avg_tries();
  curr_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
}

// optional float next_avg_tries = 16;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_avg_tries() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_next_avg_tries() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_next_avg_tries() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_avg_tries() {
  next_avg_tries_ = 0;
  clear_has_next_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::next_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
  return next_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_avg_tries(float value) {
  set_has_next_avg_tries();
  next_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
}

// optional float full_lap_avg_tries = 17;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_full_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_full_lap_avg_tries() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_full_lap_avg_tries() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_full_lap_avg_tries() {
  full_lap_avg_tries_ = 0;
  clear_has_full_lap_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::full_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
  return full_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_full_lap_avg_tries(float value) {
  set_has_full_lap_avg_tries();
  full_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
}

// optional float curr_lap_avg_tries = 18;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_avg_tries() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_avg_tries() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_avg_tries() {
  curr_lap_avg_tries_ = 0;
  clear_has_curr_lap_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
  return curr_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_avg_tries(float value) {
  set_has_curr_lap_avg_tries();
  curr_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
}

// optional string profile_name = 19;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_profile_name() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_profile_name() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_profile_name() {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_->clear();
  }
  clear_has_profile_name();
}
inline const ::std::string& CMsgClientToGCGetAllHeroProgressResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return *profile_name_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const ::std::string& value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value, size_t size) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::mutable_profile_name() {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return profile_name_;
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::release_profile_name() {
  clear_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profile_name_;
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profile_name_;
  }
  if (profile_name) {
    set_has_profile_name();
    profile_name_ = profile_name;
  } else {
    clear_has_profile_name();
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}

// optional uint32 start_hero_id = 20;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_start_hero_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_start_hero_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_start_hero_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_start_hero_id() {
  start_hero_id_ = 0u;
  clear_has_start_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::start_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
  return start_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_start_hero_id(::google::protobuf::uint32 value) {
  set_has_start_hero_id();
  start_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyList

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyList::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyList::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyList::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyList::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyList::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyList.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyList::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyList.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse_Trophy

// optional uint32 trophy_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_trophy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_trophy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_id() {
  trophy_id_ = 0u;
  clear_has_trophy_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
  return trophy_id_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_id(::google::protobuf::uint32 value) {
  set_has_trophy_id();
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_trophy_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_trophy_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_score() {
  trophy_score_ = 0u;
  clear_has_trophy_score();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_score() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
  return trophy_score_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_score(::google::protobuf::uint32 value) {
  set_has_trophy_score();
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
}

// optional uint32 last_updated = 3;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_last_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_last_updated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_last_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_last_updated() {
  last_updated_ = 0u;
  clear_has_last_updated();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::last_updated() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
  return last_updated_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_last_updated(::google::protobuf::uint32 value) {
  set_has_last_updated();
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyListResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.account_id)
}

// repeated .CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
inline int CMsgClientToGCGetTrophyListResponse::trophies_size() const {
  return trophies_.size();
}
inline void CMsgClientToGCGetTrophyListResponse::clear_trophies() {
  trophies_.Clear();
}
inline const ::CMsgClientToGCGetTrophyListResponse_Trophy& CMsgClientToGCGetTrophyListResponse::trophies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Get(index);
}
inline ::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::mutable_trophies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Mutable(index);
}
inline ::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::add_trophies() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >&
CMsgClientToGCGetTrophyListResponse::trophies() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetTrophyListResponse_Trophy >*
CMsgClientToGCGetTrophyListResponse::mutable_trophies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetTrophyListResponse.trophies)
  return &trophies_;
}

// optional string profile_name = 3;
inline bool CMsgClientToGCGetTrophyListResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::set_has_profile_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_has_profile_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_profile_name() {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_->clear();
  }
  clear_has_profile_name();
}
inline const ::std::string& CMsgClientToGCGetTrophyListResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetTrophyListResponse.profile_name)
  return *profile_name_;
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const ::std::string& value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value, size_t size) {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  profile_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::mutable_profile_name() {
  set_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetTrophyListResponse.profile_name)
  return profile_name_;
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::release_profile_name() {
  clear_has_profile_name();
  if (profile_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profile_name_;
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetTrophyListResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profile_name_;
  }
  if (profile_name) {
    set_has_profile_name();
    profile_name_ = profile_name;
  } else {
    clear_has_profile_name();
    profile_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetTrophyListResponse.profile_name)
}

// -------------------------------------------------------------------

// CMsgGCToClientTrophyAwarded

// optional uint32 trophy_id = 1;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_id() {
  trophy_id_ = 0u;
  clear_has_trophy_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.trophy_id)
  return trophy_id_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_id(::google::protobuf::uint32 value) {
  set_has_trophy_id();
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_score() {
  trophy_score_ = 0u;
  clear_has_trophy_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.trophy_score)
  return trophy_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_score(::google::protobuf::uint32 value) {
  set_has_trophy_score();
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.trophy_score)
}

// optional uint32 trophy_old_score = 3;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_old_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_old_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_old_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_old_score() {
  trophy_old_score_ = 0u;
  clear_has_trophy_old_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_old_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.trophy_old_score)
  return trophy_old_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_old_score(::google::protobuf::uint32 value) {
  set_has_trophy_old_score();
  trophy_old_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.trophy_old_score)
}

// optional uint32 last_updated = 4;
inline bool CMsgGCToClientTrophyAwarded::has_last_updated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_last_updated() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_last_updated() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientTrophyAwarded::clear_last_updated() {
  last_updated_ = 0u;
  clear_has_last_updated();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::last_updated() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTrophyAwarded.last_updated)
  return last_updated_;
}
inline void CMsgGCToClientTrophyAwarded::set_last_updated(::google::protobuf::uint32 value) {
  set_has_last_updated();
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTrophyAwarded.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCard

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetProfileCard::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetProfileCard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetProfileCard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetProfileCard::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetProfileCard.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetProfileCard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetProfileCard.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots_CardSlot

// optional uint32 slot_id = 1;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
  return slot_id_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
}

// optional .EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_type() {
  slot_type_ = 0;
  clear_has_slot_type();
}
inline ::EProfileCardSlotType CMsgClientToGCSetProfileCardSlots_CardSlot::slot_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
  return static_cast< ::EProfileCardSlotType >(slot_type_);
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_type(::EProfileCardSlotType value) {
  assert(::EProfileCardSlotType_IsValid(value));
  set_has_slot_type();
  slot_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
}

// optional uint64 slot_value = 3;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_value() {
  slot_value_ = GOOGLE_ULONGLONG(0);
  clear_has_slot_value();
}
inline ::google::protobuf::uint64 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
  return slot_value_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_value(::google::protobuf::uint64 value) {
  set_has_slot_value();
  slot_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots

// repeated .CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
inline int CMsgClientToGCSetProfileCardSlots::slots_size() const {
  return slots_.size();
}
inline void CMsgClientToGCSetProfileCardSlots::clear_slots() {
  slots_.Clear();
}
inline const ::CMsgClientToGCSetProfileCardSlots_CardSlot& CMsgClientToGCSetProfileCardSlots::slots(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Get(index);
}
inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Mutable(index);
}
inline ::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::add_slots() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >&
CMsgClientToGCSetProfileCardSlots::slots() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetProfileCardSlots.slots)
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCSetProfileCardSlots_CardSlot >*
CMsgClientToGCSetProfileCardSlots::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetProfileCardSlots.slots)
  return &slots_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCardStats

// -------------------------------------------------------------------

// CMsgClientToGCCreateHeroStatue

// optional uint64 source_item = 1;
inline bool CMsgClientToGCCreateHeroStatue::has_source_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_source_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_source_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_source_item() {
  source_item_ = GOOGLE_ULONGLONG(0);
  clear_has_source_item();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::source_item() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.source_item)
  return source_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_source_item(::google::protobuf::uint64 value) {
  set_has_source_item();
  source_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.source_item)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCCreateHeroStatue::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCCreateHeroStatue::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.hero_id)
}

// optional string sequence_name = 4;
inline bool CMsgClientToGCCreateHeroStatue::has_sequence_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_sequence_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_sequence_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_sequence_name() {
  if (sequence_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_->clear();
  }
  clear_has_sequence_name();
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::sequence_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.sequence_name)
  return *sequence_name_;
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const ::std::string& value) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value, size_t size) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_sequence_name() {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateHeroStatue.sequence_name)
  return sequence_name_;
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_sequence_name() {
  clear_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sequence_name_;
    sequence_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_sequence_name(::std::string* sequence_name) {
  if (sequence_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequence_name_;
  }
  if (sequence_name) {
    set_has_sequence_name();
    sequence_name_ = sequence_name;
  } else {
    clear_has_sequence_name();
    sequence_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCCreateHeroStatue.sequence_name)
}

// optional float cycle = 5;
inline bool CMsgClientToGCCreateHeroStatue::has_cycle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_cycle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
inline float CMsgClientToGCCreateHeroStatue::cycle() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.cycle)
  return cycle_;
}
inline void CMsgClientToGCCreateHeroStatue::set_cycle(float value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.cycle)
}

// repeated uint32 wearables = 6;
inline int CMsgClientToGCCreateHeroStatue::wearables_size() const {
  return wearables_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_wearables() {
  wearables_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::wearables(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_wearables(int index, ::google::protobuf::uint32 value) {
  wearables_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.wearables)
}
inline void CMsgClientToGCCreateHeroStatue::add_wearables(::google::protobuf::uint32 value) {
  wearables_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateHeroStatue.wearables)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::wearables() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_wearables() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateHeroStatue.wearables)
  return &wearables_;
}

// optional string inscription = 7;
inline bool CMsgClientToGCCreateHeroStatue::has_inscription() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_inscription() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_inscription() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_inscription() {
  if (inscription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_->clear();
  }
  clear_has_inscription();
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::inscription() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.inscription)
  return *inscription_;
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const ::std::string& value) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.inscription)
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCCreateHeroStatue.inscription)
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value, size_t size) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCCreateHeroStatue.inscription)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_inscription() {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateHeroStatue.inscription)
  return inscription_;
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_inscription() {
  clear_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inscription_;
    inscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_inscription(::std::string* inscription) {
  if (inscription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inscription_;
  }
  if (inscription) {
    set_has_inscription();
    inscription_ = inscription;
  } else {
    clear_has_inscription();
    inscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCCreateHeroStatue.inscription)
}

// repeated uint32 styles = 8;
inline int CMsgClientToGCCreateHeroStatue::styles_size() const {
  return styles_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_styles() {
  styles_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::styles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.styles)
  return styles_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_styles(int index, ::google::protobuf::uint32 value) {
  styles_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.styles)
}
inline void CMsgClientToGCCreateHeroStatue::add_styles(::google::protobuf::uint32 value) {
  styles_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateHeroStatue.styles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::styles() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateHeroStatue.styles)
  return styles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_styles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateHeroStatue.styles)
  return &styles_;
}

// optional uint64 reforger_item = 9;
inline bool CMsgClientToGCCreateHeroStatue::has_reforger_item() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_reforger_item() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_reforger_item() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_reforger_item() {
  reforger_item_ = GOOGLE_ULONGLONG(0);
  clear_has_reforger_item();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::reforger_item() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.reforger_item)
  return reforger_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_reforger_item(::google::protobuf::uint64 value) {
  set_has_reforger_item();
  reforger_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.reforger_item)
}

// optional bool tournament_drop = 10;
inline bool CMsgClientToGCCreateHeroStatue::has_tournament_drop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_tournament_drop() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_tournament_drop() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_tournament_drop() {
  tournament_drop_ = false;
  clear_has_tournament_drop();
}
inline bool CMsgClientToGCCreateHeroStatue::tournament_drop() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateHeroStatue.tournament_drop)
  return tournament_drop_;
}
inline void CMsgClientToGCCreateHeroStatue::set_tournament_drop(bool value) {
  set_has_tournament_drop();
  tournament_drop_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateHeroStatue.tournament_drop)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateTeamShowcase

// optional uint64 source_item = 1;
inline bool CMsgClientToGCCreateTeamShowcase::has_source_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreateTeamShowcase::set_has_source_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_has_source_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_source_item() {
  source_item_ = GOOGLE_ULONGLONG(0);
  clear_has_source_item();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateTeamShowcase::source_item() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateTeamShowcase.source_item)
  return source_item_;
}
inline void CMsgClientToGCCreateTeamShowcase::set_source_item(::google::protobuf::uint64 value) {
  set_has_source_item();
  source_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateTeamShowcase.source_item)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCCreateTeamShowcase::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreateTeamShowcase::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateTeamShowcase::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateTeamShowcase.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCCreateTeamShowcase::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateTeamShowcase.hero_id)
}

// optional string sequence_name = 4;
inline bool CMsgClientToGCCreateTeamShowcase::has_sequence_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCreateTeamShowcase::set_has_sequence_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_has_sequence_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_sequence_name() {
  if (sequence_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_->clear();
  }
  clear_has_sequence_name();
}
inline const ::std::string& CMsgClientToGCCreateTeamShowcase::sequence_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateTeamShowcase.sequence_name)
  return *sequence_name_;
}
inline void CMsgClientToGCCreateTeamShowcase::set_sequence_name(const ::std::string& value) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateTeamShowcase.sequence_name)
}
inline void CMsgClientToGCCreateTeamShowcase::set_sequence_name(const char* value) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCCreateTeamShowcase.sequence_name)
}
inline void CMsgClientToGCCreateTeamShowcase::set_sequence_name(const char* value, size_t size) {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  sequence_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCCreateTeamShowcase.sequence_name)
}
inline ::std::string* CMsgClientToGCCreateTeamShowcase::mutable_sequence_name() {
  set_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateTeamShowcase.sequence_name)
  return sequence_name_;
}
inline ::std::string* CMsgClientToGCCreateTeamShowcase::release_sequence_name() {
  clear_has_sequence_name();
  if (sequence_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sequence_name_;
    sequence_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCCreateTeamShowcase::set_allocated_sequence_name(::std::string* sequence_name) {
  if (sequence_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequence_name_;
  }
  if (sequence_name) {
    set_has_sequence_name();
    sequence_name_ = sequence_name;
  } else {
    clear_has_sequence_name();
    sequence_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCCreateTeamShowcase.sequence_name)
}

// optional float cycle = 5;
inline bool CMsgClientToGCCreateTeamShowcase::has_cycle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCCreateTeamShowcase::set_has_cycle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
inline float CMsgClientToGCCreateTeamShowcase::cycle() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateTeamShowcase.cycle)
  return cycle_;
}
inline void CMsgClientToGCCreateTeamShowcase::set_cycle(float value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateTeamShowcase.cycle)
}

// repeated uint32 wearables = 6;
inline int CMsgClientToGCCreateTeamShowcase::wearables_size() const {
  return wearables_.size();
}
inline void CMsgClientToGCCreateTeamShowcase::clear_wearables() {
  wearables_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateTeamShowcase::wearables(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateTeamShowcase.wearables)
  return wearables_.Get(index);
}
inline void CMsgClientToGCCreateTeamShowcase::set_wearables(int index, ::google::protobuf::uint32 value) {
  wearables_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateTeamShowcase.wearables)
}
inline void CMsgClientToGCCreateTeamShowcase::add_wearables(::google::protobuf::uint32 value) {
  wearables_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateTeamShowcase.wearables)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateTeamShowcase::wearables() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateTeamShowcase.wearables)
  return wearables_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateTeamShowcase::mutable_wearables() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateTeamShowcase.wearables)
  return &wearables_;
}

// optional string inscription = 7;
inline bool CMsgClientToGCCreateTeamShowcase::has_inscription() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCCreateTeamShowcase::set_has_inscription() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_has_inscription() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCCreateTeamShowcase::clear_inscription() {
  if (inscription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_->clear();
  }
  clear_has_inscription();
}
inline const ::std::string& CMsgClientToGCCreateTeamShowcase::inscription() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateTeamShowcase.inscription)
  return *inscription_;
}
inline void CMsgClientToGCCreateTeamShowcase::set_inscription(const ::std::string& value) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateTeamShowcase.inscription)
}
inline void CMsgClientToGCCreateTeamShowcase::set_inscription(const char* value) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCCreateTeamShowcase.inscription)
}
inline void CMsgClientToGCCreateTeamShowcase::set_inscription(const char* value, size_t size) {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  inscription_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCCreateTeamShowcase.inscription)
}
inline ::std::string* CMsgClientToGCCreateTeamShowcase::mutable_inscription() {
  set_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inscription_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateTeamShowcase.inscription)
  return inscription_;
}
inline ::std::string* CMsgClientToGCCreateTeamShowcase::release_inscription() {
  clear_has_inscription();
  if (inscription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inscription_;
    inscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCCreateTeamShowcase::set_allocated_inscription(::std::string* inscription) {
  if (inscription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inscription_;
  }
  if (inscription) {
    set_has_inscription();
    inscription_ = inscription;
  } else {
    clear_has_inscription();
    inscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCCreateTeamShowcase.inscription)
}

// repeated uint32 styles = 8;
inline int CMsgClientToGCCreateTeamShowcase::styles_size() const {
  return styles_.size();
}
inline void CMsgClientToGCCreateTeamShowcase::clear_styles() {
  styles_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateTeamShowcase::styles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateTeamShowcase.styles)
  return styles_.Get(index);
}
inline void CMsgClientToGCCreateTeamShowcase::set_styles(int index, ::google::protobuf::uint32 value) {
  styles_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateTeamShowcase.styles)
}
inline void CMsgClientToGCCreateTeamShowcase::add_styles(::google::protobuf::uint32 value) {
  styles_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateTeamShowcase.styles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateTeamShowcase::styles() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateTeamShowcase.styles)
  return styles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateTeamShowcase::mutable_styles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateTeamShowcase.styles)
  return &styles_;
}

// -------------------------------------------------------------------

// CMsgGCToClientHeroStatueCreateResult

// optional uint64 resulting_item = 1;
inline bool CMsgGCToClientHeroStatueCreateResult::has_resulting_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientHeroStatueCreateResult::set_has_resulting_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientHeroStatueCreateResult::clear_has_resulting_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientHeroStatueCreateResult::clear_resulting_item() {
  resulting_item_ = GOOGLE_ULONGLONG(0);
  clear_has_resulting_item();
}
inline ::google::protobuf::uint64 CMsgGCToClientHeroStatueCreateResult::resulting_item() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroStatueCreateResult.resulting_item)
  return resulting_item_;
}
inline void CMsgGCToClientHeroStatueCreateResult::set_resulting_item(::google::protobuf::uint64 value) {
  set_has_resulting_item();
  resulting_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientHeroStatueCreateResult.resulting_item)
}

// -------------------------------------------------------------------

// CMsgGCToClientTeamShowcaseCreateResult

// optional uint64 resulting_item = 1;
inline bool CMsgGCToClientTeamShowcaseCreateResult::has_resulting_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTeamShowcaseCreateResult::set_has_resulting_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTeamShowcaseCreateResult::clear_has_resulting_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTeamShowcaseCreateResult::clear_resulting_item() {
  resulting_item_ = GOOGLE_ULONGLONG(0);
  clear_has_resulting_item();
}
inline ::google::protobuf::uint64 CMsgGCToClientTeamShowcaseCreateResult::resulting_item() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientTeamShowcaseCreateResult.resulting_item)
  return resulting_item_;
}
inline void CMsgGCToClientTeamShowcaseCreateResult::set_resulting_item(::google::protobuf::uint64 value) {
  set_has_resulting_item();
  resulting_item_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientTeamShowcaseCreateResult.resulting_item)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecordCompendiumStats

// optional uint32 league_id = 1;
inline bool CMsgClientToGCRecordCompendiumStats::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.league_id)
  return league_id_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.league_id)
}

// optional uint32 view_duration_s = 2;
inline bool CMsgClientToGCRecordCompendiumStats::has_view_duration_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_view_duration_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_view_duration_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_view_duration_s() {
  view_duration_s_ = 0u;
  clear_has_view_duration_s();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::view_duration_s() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.view_duration_s)
  return view_duration_s_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_view_duration_s(::google::protobuf::uint32 value) {
  set_has_view_duration_s();
  view_duration_s_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.view_duration_s)
}

// optional uint32 videos_viewed = 3;
inline bool CMsgClientToGCRecordCompendiumStats::has_videos_viewed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_videos_viewed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_videos_viewed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_videos_viewed() {
  videos_viewed_ = 0u;
  clear_has_videos_viewed();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::videos_viewed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.videos_viewed)
  return videos_viewed_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_videos_viewed(::google::protobuf::uint32 value) {
  set_has_videos_viewed();
  videos_viewed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.videos_viewed)
}

// optional uint32 page_turns = 4;
inline bool CMsgClientToGCRecordCompendiumStats::has_page_turns() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_page_turns() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_page_turns() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_page_turns() {
  page_turns_ = 0u;
  clear_has_page_turns();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::page_turns() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.page_turns)
  return page_turns_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_page_turns(::google::protobuf::uint32 value) {
  set_has_page_turns();
  page_turns_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.page_turns)
}

// optional uint32 links_followed = 5;
inline bool CMsgClientToGCRecordCompendiumStats::has_links_followed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_links_followed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_links_followed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_links_followed() {
  links_followed_ = 0u;
  clear_has_links_followed();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::links_followed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordCompendiumStats.links_followed)
  return links_followed_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_links_followed(::google::protobuf::uint32 value) {
  set_has_links_followed();
  links_followed_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordCompendiumStats.links_followed)
}

// -------------------------------------------------------------------

// CMsgGCToClientEventStatusChanged

// repeated .EEvent active_events = 1;
inline int CMsgGCToClientEventStatusChanged::active_events_size() const {
  return active_events_.size();
}
inline void CMsgGCToClientEventStatusChanged::clear_active_events() {
  active_events_.Clear();
}
inline ::EEvent CMsgGCToClientEventStatusChanged::active_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientEventStatusChanged.active_events)
  return static_cast< ::EEvent >(active_events_.Get(index));
}
inline void CMsgGCToClientEventStatusChanged::set_active_events(int index, ::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientEventStatusChanged.active_events)
}
inline void CMsgGCToClientEventStatusChanged::add_active_events(::EEvent value) {
  assert(::EEvent_IsValid(value));
  active_events_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientEventStatusChanged.active_events)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgGCToClientEventStatusChanged::active_events() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientEventStatusChanged.active_events)
  return active_events_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgGCToClientEventStatusChanged::mutable_active_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientEventStatusChanged.active_events)
  return &active_events_;
}

// -------------------------------------------------------------------

// CMsgClientToGCExchangeItemsForOffering

// repeated uint64 item_ids = 1;
inline int CMsgClientToGCExchangeItemsForOffering::item_ids_size() const {
  return item_ids_.size();
}
inline void CMsgClientToGCExchangeItemsForOffering::clear_item_ids() {
  item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCExchangeItemsForOffering::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCExchangeItemsForOffering.item_ids)
  return item_ids_.Get(index);
}
inline void CMsgClientToGCExchangeItemsForOffering::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCExchangeItemsForOffering.item_ids)
}
inline void CMsgClientToGCExchangeItemsForOffering::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCExchangeItemsForOffering.item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCExchangeItemsForOffering::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCExchangeItemsForOffering.item_ids)
  return item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCExchangeItemsForOffering::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCExchangeItemsForOffering.item_ids)
  return &item_ids_;
}

// optional uint32 recycle_id = 2;
inline bool CMsgClientToGCExchangeItemsForOffering::has_recycle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCExchangeItemsForOffering::set_has_recycle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCExchangeItemsForOffering::clear_has_recycle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCExchangeItemsForOffering::clear_recycle_id() {
  recycle_id_ = 0u;
  clear_has_recycle_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCExchangeItemsForOffering::recycle_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCExchangeItemsForOffering.recycle_id)
  return recycle_id_;
}
inline void CMsgClientToGCExchangeItemsForOffering::set_recycle_id(::google::protobuf::uint32 value) {
  set_has_recycle_id();
  recycle_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCExchangeItemsForOffering.recycle_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCExchangeItemsForOfferingResponse

// optional .CMsgClientToGCExchangeItemsForOfferingResponse.EResponse response = 1 [default = eResponse_Success];
inline bool CMsgClientToGCExchangeItemsForOfferingResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCExchangeItemsForOfferingResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCExchangeItemsForOfferingResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCExchangeItemsForOfferingResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
inline ::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse CMsgClientToGCExchangeItemsForOfferingResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCExchangeItemsForOfferingResponse.response)
  return static_cast< ::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse >(response_);
}
inline void CMsgClientToGCExchangeItemsForOfferingResponse::set_response(::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse value) {
  assert(::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCExchangeItemsForOfferingResponse.response)
}

// -------------------------------------------------------------------

// CMsgClientToGCPlayerStatsRequest

// optional uint32 account_id = 1;
inline bool CMsgClientToGCPlayerStatsRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPlayerStatsRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCPlayerStatsRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCPlayerStatsRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCPlayerStatsRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPlayerStatsRequest.account_id)
  return account_id_;
}
inline void CMsgClientToGCPlayerStatsRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCPlayerStatsRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientPlayerStatsResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientPlayerStatsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.account_id)
}

// repeated float player_stats = 2;
inline int CMsgGCToClientPlayerStatsResponse::player_stats_size() const {
  return player_stats_.size();
}
inline void CMsgGCToClientPlayerStatsResponse::clear_player_stats() {
  player_stats_.Clear();
}
inline float CMsgGCToClientPlayerStatsResponse::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_.Get(index);
}
inline void CMsgGCToClientPlayerStatsResponse::set_player_stats(int index, float value) {
  player_stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline void CMsgGCToClientPlayerStatsResponse::add_player_stats(float value) {
  player_stats_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGCToClientPlayerStatsResponse::player_stats() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGCToClientPlayerStatsResponse::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientPlayerStatsResponse.player_stats)
  return &player_stats_;
}

// optional uint32 match_count = 3;
inline bool CMsgGCToClientPlayerStatsResponse::has_match_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_match_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_match_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_match_count() {
  match_count_ = 0u;
  clear_has_match_count();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::match_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.match_count)
  return match_count_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_match_count(::google::protobuf::uint32 value) {
  set_has_match_count();
  match_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.match_count)
}

// optional float mean_gpm = 4;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_gpm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_gpm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_gpm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_gpm() {
  mean_gpm_ = 0;
  clear_has_mean_gpm();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_gpm() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.mean_gpm)
  return mean_gpm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_gpm(float value) {
  set_has_mean_gpm();
  mean_gpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.mean_gpm)
}

// optional float mean_xppm = 5;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_xppm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_xppm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_xppm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_xppm() {
  mean_xppm_ = 0;
  clear_has_mean_xppm();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_xppm() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.mean_xppm)
  return mean_xppm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_xppm(float value) {
  set_has_mean_xppm();
  mean_xppm_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.mean_xppm)
}

// optional float mean_lasthits = 6;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_lasthits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_lasthits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_lasthits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_lasthits() {
  mean_lasthits_ = 0;
  clear_has_mean_lasthits();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_lasthits() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.mean_lasthits)
  return mean_lasthits_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_lasthits(float value) {
  set_has_mean_lasthits();
  mean_lasthits_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.mean_lasthits)
}

// optional uint32 rampages = 7;
inline bool CMsgGCToClientPlayerStatsResponse::has_rampages() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_rampages() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_rampages() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_rampages() {
  rampages_ = 0u;
  clear_has_rampages();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::rampages() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.rampages)
  return rampages_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_rampages(::google::protobuf::uint32 value) {
  set_has_rampages();
  rampages_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.rampages)
}

// optional uint32 triple_kills = 8;
inline bool CMsgGCToClientPlayerStatsResponse::has_triple_kills() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_triple_kills() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_triple_kills() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_triple_kills() {
  triple_kills_ = 0u;
  clear_has_triple_kills();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::triple_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.triple_kills)
  return triple_kills_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_triple_kills(::google::protobuf::uint32 value) {
  set_has_triple_kills();
  triple_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.triple_kills)
}

// optional uint32 first_blood_claimed = 9;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_claimed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_first_blood_claimed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_first_blood_claimed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_claimed() {
  first_blood_claimed_ = 0u;
  clear_has_first_blood_claimed();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_claimed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
  return first_blood_claimed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_claimed(::google::protobuf::uint32 value) {
  set_has_first_blood_claimed();
  first_blood_claimed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
}

// optional uint32 first_blood_given = 10;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_given() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_first_blood_given() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_first_blood_given() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_given() {
  first_blood_given_ = 0u;
  clear_has_first_blood_given();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_given() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.first_blood_given)
  return first_blood_given_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_given(::google::protobuf::uint32 value) {
  set_has_first_blood_given();
  first_blood_given_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.first_blood_given)
}

// optional uint32 couriers_killed = 11;
inline bool CMsgGCToClientPlayerStatsResponse::has_couriers_killed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_couriers_killed() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_couriers_killed() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_couriers_killed() {
  couriers_killed_ = 0u;
  clear_has_couriers_killed();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::couriers_killed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.couriers_killed)
  return couriers_killed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_couriers_killed(::google::protobuf::uint32 value) {
  set_has_couriers_killed();
  couriers_killed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.couriers_killed)
}

// optional uint32 aegises_snatched = 12;
inline bool CMsgGCToClientPlayerStatsResponse::has_aegises_snatched() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_aegises_snatched() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_aegises_snatched() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_aegises_snatched() {
  aegises_snatched_ = 0u;
  clear_has_aegises_snatched();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::aegises_snatched() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.aegises_snatched)
  return aegises_snatched_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_aegises_snatched(::google::protobuf::uint32 value) {
  set_has_aegises_snatched();
  aegises_snatched_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.aegises_snatched)
}

// optional uint32 cheeses_eaten = 13;
inline bool CMsgGCToClientPlayerStatsResponse::has_cheeses_eaten() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_cheeses_eaten() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_cheeses_eaten() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_cheeses_eaten() {
  cheeses_eaten_ = 0u;
  clear_has_cheeses_eaten();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::cheeses_eaten() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
  return cheeses_eaten_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_cheeses_eaten(::google::protobuf::uint32 value) {
  set_has_cheeses_eaten();
  cheeses_eaten_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
}

// optional uint32 creeps_stacked = 14;
inline bool CMsgGCToClientPlayerStatsResponse::has_creeps_stacked() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_creeps_stacked() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_creeps_stacked() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_creeps_stacked() {
  creeps_stacked_ = 0u;
  clear_has_creeps_stacked();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::creeps_stacked() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.creeps_stacked)
  return creeps_stacked_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_creeps_stacked(::google::protobuf::uint32 value) {
  set_has_creeps_stacked();
  creeps_stacked_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.creeps_stacked)
}

// optional float fight_score = 15;
inline bool CMsgGCToClientPlayerStatsResponse::has_fight_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_fight_score() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_fight_score() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_fight_score() {
  fight_score_ = 0;
  clear_has_fight_score();
}
inline float CMsgGCToClientPlayerStatsResponse::fight_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.fight_score)
  return fight_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_fight_score(float value) {
  set_has_fight_score();
  fight_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.fight_score)
}

// optional float farm_score = 16;
inline bool CMsgGCToClientPlayerStatsResponse::has_farm_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_farm_score() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_farm_score() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_farm_score() {
  farm_score_ = 0;
  clear_has_farm_score();
}
inline float CMsgGCToClientPlayerStatsResponse::farm_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.farm_score)
  return farm_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_farm_score(float value) {
  set_has_farm_score();
  farm_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.farm_score)
}

// optional float support_score = 17;
inline bool CMsgGCToClientPlayerStatsResponse::has_support_score() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_support_score() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_support_score() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_support_score() {
  support_score_ = 0;
  clear_has_support_score();
}
inline float CMsgGCToClientPlayerStatsResponse::support_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.support_score)
  return support_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_support_score(float value) {
  set_has_support_score();
  support_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.support_score)
}

// optional float push_score = 18;
inline bool CMsgGCToClientPlayerStatsResponse::has_push_score() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_push_score() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_push_score() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_push_score() {
  push_score_ = 0;
  clear_has_push_score();
}
inline float CMsgGCToClientPlayerStatsResponse::push_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.push_score)
  return push_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_push_score(float value) {
  set_has_push_score();
  push_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.push_score)
}

// optional float versatility_score = 19;
inline bool CMsgGCToClientPlayerStatsResponse::has_versatility_score() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_versatility_score() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_versatility_score() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_versatility_score() {
  versatility_score_ = 0;
  clear_has_versatility_score();
}
inline float CMsgGCToClientPlayerStatsResponse::versatility_score() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPlayerStatsResponse.versatility_score)
  return versatility_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_versatility_score(float value) {
  set_has_versatility_score();
  versatility_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientPlayerStatsResponse.versatility_score)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamePlayerCountRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCCustomGamePlayerCountRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCCustomGamePlayerCountRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamePlayerCountResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
}

// optional uint64 player_count = 2;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_player_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_player_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_player_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_player_count() {
  player_count_ = GOOGLE_ULONGLONG(0);
  clear_has_player_count();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::player_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamePlayerCountResponse.player_count)
  return player_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_player_count(::google::protobuf::uint64 value) {
  set_has_player_count();
  player_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamePlayerCountResponse.player_count)
}

// optional uint64 spectator_count = 3;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_spectator_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_spectator_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_spectator_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_spectator_count() {
  spectator_count_ = GOOGLE_ULONGLONG(0);
  clear_has_spectator_count();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::spectator_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
  return spectator_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_spectator_count(::google::protobuf::uint64 value) {
  set_has_spectator_count();
  spectator_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamesFriendsPlayedRequest

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
}

// repeated .CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse::games_size() const {
  return games_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_games() {
  games_.Clear();
}
inline const ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& CMsgGCToClientCustomGamesFriendsPlayedResponse::games(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Get(index);
}
inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Mutable(index);
}
inline ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::add_games() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
CMsgGCToClientCustomGamesFriendsPlayedResponse::games() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return &games_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostCommentRequest

// optional uint64 event_id = 1;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_event_id() {
  event_id_ = GOOGLE_ULONGLONG(0);
  clear_has_event_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostCommentRequest::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostCommentRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_event_id(::google::protobuf::uint64 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostCommentRequest.event_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgClientToGCSocialFeedPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return *comment_;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return comment_;
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSocialFeedPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialFeedPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialFeedPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialFeedPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostMessageRequest

// optional string message = 1;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgClientToGCSocialFeedPostMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostMessageRequest.message)
  return *message_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSocialFeedPostMessageRequest.message)
  return message_;
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSocialFeedPostMessageRequest.message)
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostMessageRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostMessageRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostMessageRequest.match_id)
}

// optional uint32 match_timestamp = 3;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_match_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_match_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_timestamp() {
  match_timestamp_ = 0u;
  clear_has_match_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialFeedPostMessageRequest::match_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
  return match_timestamp_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_timestamp(::google::protobuf::uint32 value) {
  set_has_match_timestamp();
  match_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostMessageResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostMessageResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialFeedPostMessageResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialFeedPostMessageResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialFeedPostMessageResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCFriendsPlayedCustomGameRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCFriendsPlayedCustomGameRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCFriendsPlayedCustomGameRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientFriendsPlayedCustomGameResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientFriendsPlayedCustomGameResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientFriendsPlayedCustomGameResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientFriendsPlayedCustomGameResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCFeaturedHeroesRequest

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_DataField

// optional .EFeaturedHeroDataType data_type = 1 [default = k_EFeaturedHeroDataType_HeroID];
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_data_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
inline ::EFeaturedHeroDataType CMsgGCToClientFeaturedHeroesResponse_DataField::data_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.data_type)
  return static_cast< ::EFeaturedHeroDataType >(data_type_);
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_data_type(::EFeaturedHeroDataType value) {
  assert(::EFeaturedHeroDataType_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.data_type)
}

// optional uint32 uint32_value = 2;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_uint32_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_uint32_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_uint32_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_uint32_value() {
  uint32_value_ = 0u;
  clear_has_uint32_value();
}
inline ::google::protobuf::uint32 CMsgGCToClientFeaturedHeroesResponse_DataField::uint32_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.uint32_value)
  return uint32_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_uint32_value(::google::protobuf::uint32 value) {
  set_has_uint32_value();
  uint32_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.uint32_value)
}

// optional uint64 uint64_value = 3;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_uint64_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_uint64_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_uint64_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_uint64_value() {
  uint64_value_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64_value();
}
inline ::google::protobuf::uint64 CMsgGCToClientFeaturedHeroesResponse_DataField::uint64_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.uint64_value)
  return uint64_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_uint64_value(::google::protobuf::uint64 value) {
  set_has_uint64_value();
  uint64_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.uint64_value)
}

// optional string string_value = 4;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_string_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_string_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_string_value() {
  if (string_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_->clear();
  }
  clear_has_string_value();
}
inline const ::std::string& CMsgGCToClientFeaturedHeroesResponse_DataField::string_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
  return *string_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const ::std::string& value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const char* value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline ::std::string* CMsgGCToClientFeaturedHeroesResponse_DataField::mutable_string_value() {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
  return string_value_;
}
inline ::std::string* CMsgGCToClientFeaturedHeroesResponse_DataField::release_string_value() {
  clear_has_string_value();
  if (string_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = string_value_;
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_allocated_string_value(::std::string* string_value) {
  if (string_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_value_;
  }
  if (string_value) {
    set_has_string_value();
    string_value_ = string_value;
  } else {
    clear_has_string_value();
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}

// optional float float_value = 5;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_float_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_float_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_float_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_float_value() {
  float_value_ = 0;
  clear_has_float_value();
}
inline float CMsgGCToClientFeaturedHeroesResponse_DataField::float_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.DataField.float_value)
  return float_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_float_value(float value) {
  set_has_float_value();
  float_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.DataField.float_value)
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_FeaturedHero

// repeated .CMsgGCToClientFeaturedHeroesResponse.DataField data_fields = 1;
inline int CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields_size() const {
  return data_fields_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::clear_data_fields() {
  data_fields_.Clear();
}
inline const ::CMsgGCToClientFeaturedHeroesResponse_DataField& CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Get(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::mutable_data_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Mutable(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_DataField* CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::add_data_fields() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >&
CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_DataField >*
CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::mutable_data_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return &data_fields_;
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_Category

// optional int32 category_weight = 1;
inline bool CMsgGCToClientFeaturedHeroesResponse_Category::has_category_weight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_has_category_weight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_has_category_weight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_category_weight() {
  category_weight_ = 0;
  clear_has_category_weight();
}
inline ::google::protobuf::int32 CMsgGCToClientFeaturedHeroesResponse_Category::category_weight() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.Category.category_weight)
  return category_weight_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_category_weight(::google::protobuf::int32 value) {
  set_has_category_weight();
  category_weight_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.Category.category_weight)
}

// repeated .EFeaturedHeroTextField text_fields = 2;
inline int CMsgGCToClientFeaturedHeroesResponse_Category::text_fields_size() const {
  return text_fields_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_text_fields() {
  text_fields_.Clear();
}
inline ::EFeaturedHeroTextField CMsgGCToClientFeaturedHeroesResponse_Category::text_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return static_cast< ::EFeaturedHeroTextField >(text_fields_.Get(index));
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_text_fields(int index, ::EFeaturedHeroTextField value) {
  assert(::EFeaturedHeroTextField_IsValid(value));
  text_fields_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::add_text_fields(::EFeaturedHeroTextField value) {
  assert(::EFeaturedHeroTextField_IsValid(value));
  text_fields_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgGCToClientFeaturedHeroesResponse_Category::text_fields() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return text_fields_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgGCToClientFeaturedHeroesResponse_Category::mutable_text_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return &text_fields_;
}

// repeated .CMsgGCToClientFeaturedHeroesResponse.FeaturedHero featured_heroes = 3;
inline int CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes_size() const {
  return featured_heroes_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_featured_heroes() {
  featured_heroes_.Clear();
}
inline const ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Get(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* CMsgGCToClientFeaturedHeroesResponse_Category::mutable_featured_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Mutable(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* CMsgGCToClientFeaturedHeroesResponse_Category::add_featured_heroes() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >&
CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >*
CMsgGCToClientFeaturedHeroesResponse_Category::mutable_featured_heroes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return &featured_heroes_;
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse

// repeated .CMsgGCToClientFeaturedHeroesResponse.Category categories = 1;
inline int CMsgGCToClientFeaturedHeroesResponse::categories_size() const {
  return categories_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse::clear_categories() {
  categories_.Clear();
}
inline const ::CMsgGCToClientFeaturedHeroesResponse_Category& CMsgGCToClientFeaturedHeroesResponse::categories(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Get(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_Category* CMsgGCToClientFeaturedHeroesResponse::mutable_categories(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Mutable(index);
}
inline ::CMsgGCToClientFeaturedHeroesResponse_Category* CMsgGCToClientFeaturedHeroesResponse::add_categories() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >&
CMsgGCToClientFeaturedHeroesResponse::categories() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientFeaturedHeroesResponse_Category >*
CMsgGCToClientFeaturedHeroesResponse::mutable_categories() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientFeaturedHeroesResponse.categories)
  return &categories_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchPostCommentRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchPostCommentRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchPostCommentRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchPostCommentRequest.match_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgClientToGCSocialMatchPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return *comment_;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return comment_;
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSocialMatchPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialMatchPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchDetailsRequest.match_id)
}

// optional uint32 pagination_timestamp = 2;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_pagination_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_has_pagination_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_has_pagination_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_pagination_timestamp() {
  pagination_timestamp_ = 0u;
  clear_has_pagination_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialMatchDetailsRequest::pagination_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
  return pagination_timestamp_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_pagination_timestamp(::google::protobuf::uint32 value) {
  set_has_pagination_timestamp();
  pagination_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse_Comment

// optional uint32 account_id = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
  return account_id_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
}

// optional string persona_name = 2;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return *persona_name_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
  return timestamp_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
}

// optional string comment = 4;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_comment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_comment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_comment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::comment() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return *comment_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return comment_;
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialMatchDetailsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToClientSocialMatchDetailsResponse.success)
}

// repeated .CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
inline int CMsgGCToClientSocialMatchDetailsResponse::comments_size() const {
  return comments_.size();
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_comments() {
  comments_.Clear();
}
inline const ::CMsgGCToClientSocialMatchDetailsResponse_Comment& CMsgGCToClientSocialMatchDetailsResponse::comments(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Get(index);
}
inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Mutable(index);
}
inline ::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::add_comments() {
  // @@protoc_insertion_point(field_add:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
CMsgGCToClientSocialMatchDetailsResponse::comments() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
CMsgGCToClientSocialMatchDetailsResponse::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientSocialMatchDetailsResponse.comments)
  return &comments_;
}

// -------------------------------------------------------------------

// CMsgDOTAPartyMemberSetCoach

// optional bool wants_coach = 1;
inline bool CMsgDOTAPartyMemberSetCoach::has_wants_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyMemberSetCoach::set_has_wants_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyMemberSetCoach::clear_has_wants_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyMemberSetCoach::clear_wants_coach() {
  wants_coach_ = false;
  clear_has_wants_coach();
}
inline bool CMsgDOTAPartyMemberSetCoach::wants_coach() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyMemberSetCoach.wants_coach)
  return wants_coach_;
}
inline void CMsgDOTAPartyMemberSetCoach::set_wants_coach(bool value) {
  set_has_wants_coach();
  wants_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyMemberSetCoach.wants_coach)
}

// -------------------------------------------------------------------

// CMsgDOTASetGroupLeader

// optional fixed64 new_leader_steamid = 1;
inline bool CMsgDOTASetGroupLeader::has_new_leader_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetGroupLeader::set_has_new_leader_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetGroupLeader::clear_has_new_leader_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetGroupLeader::clear_new_leader_steamid() {
  new_leader_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_new_leader_steamid();
}
inline ::google::protobuf::uint64 CMsgDOTASetGroupLeader::new_leader_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetGroupLeader.new_leader_steamid)
  return new_leader_steamid_;
}
inline void CMsgDOTASetGroupLeader::set_new_leader_steamid(::google::protobuf::uint64 value) {
  set_has_new_leader_steamid();
  new_leader_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetGroupLeader.new_leader_steamid)
}

// -------------------------------------------------------------------

// CMsgDOTACancelGroupInvites

// repeated fixed64 invited_steamids = 1;
inline int CMsgDOTACancelGroupInvites::invited_steamids_size() const {
  return invited_steamids_.size();
}
inline void CMsgDOTACancelGroupInvites::clear_invited_steamids() {
  invited_steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTACancelGroupInvites::invited_steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACancelGroupInvites.invited_steamids)
  return invited_steamids_.Get(index);
}
inline void CMsgDOTACancelGroupInvites::set_invited_steamids(int index, ::google::protobuf::uint64 value) {
  invited_steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACancelGroupInvites.invited_steamids)
}
inline void CMsgDOTACancelGroupInvites::add_invited_steamids(::google::protobuf::uint64 value) {
  invited_steamids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACancelGroupInvites.invited_steamids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTACancelGroupInvites::invited_steamids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACancelGroupInvites.invited_steamids)
  return invited_steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTACancelGroupInvites::mutable_invited_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACancelGroupInvites.invited_steamids)
  return &invited_steamids_;
}

// repeated fixed64 invited_groupids = 2;
inline int CMsgDOTACancelGroupInvites::invited_groupids_size() const {
  return invited_groupids_.size();
}
inline void CMsgDOTACancelGroupInvites::clear_invited_groupids() {
  invited_groupids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTACancelGroupInvites::invited_groupids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACancelGroupInvites.invited_groupids)
  return invited_groupids_.Get(index);
}
inline void CMsgDOTACancelGroupInvites::set_invited_groupids(int index, ::google::protobuf::uint64 value) {
  invited_groupids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACancelGroupInvites.invited_groupids)
}
inline void CMsgDOTACancelGroupInvites::add_invited_groupids(::google::protobuf::uint64 value) {
  invited_groupids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACancelGroupInvites.invited_groupids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTACancelGroupInvites::invited_groupids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACancelGroupInvites.invited_groupids)
  return invited_groupids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTACancelGroupInvites::mutable_invited_groupids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACancelGroupInvites.invited_groupids)
  return &invited_groupids_;
}

// -------------------------------------------------------------------

// CMsgDOTASetGroupOpenStatus

// optional bool open = 1;
inline bool CMsgDOTASetGroupOpenStatus::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetGroupOpenStatus::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetGroupOpenStatus::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetGroupOpenStatus::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CMsgDOTASetGroupOpenStatus::open() const {
  // @@protoc_insertion_point(field_get:CMsgDOTASetGroupOpenStatus.open)
  return open_;
}
inline void CMsgDOTASetGroupOpenStatus::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTASetGroupOpenStatus.open)
}

// -------------------------------------------------------------------

// CMsgDOTAGroupMergeInvite

// optional fixed64 other_group_id = 1;
inline bool CMsgDOTAGroupMergeInvite::has_other_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGroupMergeInvite::set_has_other_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGroupMergeInvite::clear_has_other_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGroupMergeInvite::clear_other_group_id() {
  other_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_other_group_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGroupMergeInvite::other_group_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGroupMergeInvite.other_group_id)
  return other_group_id_;
}
inline void CMsgDOTAGroupMergeInvite::set_other_group_id(::google::protobuf::uint64 value) {
  set_has_other_group_id();
  other_group_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGroupMergeInvite.other_group_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGroupMergeResponse

// optional fixed64 initiator_group_id = 1;
inline bool CMsgDOTAGroupMergeResponse::has_initiator_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGroupMergeResponse::set_has_initiator_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGroupMergeResponse::clear_has_initiator_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGroupMergeResponse::clear_initiator_group_id() {
  initiator_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_initiator_group_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGroupMergeResponse::initiator_group_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGroupMergeResponse.initiator_group_id)
  return initiator_group_id_;
}
inline void CMsgDOTAGroupMergeResponse::set_initiator_group_id(::google::protobuf::uint64 value) {
  set_has_initiator_group_id();
  initiator_group_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGroupMergeResponse.initiator_group_id)
}

// optional bool accept = 2;
inline bool CMsgDOTAGroupMergeResponse::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGroupMergeResponse::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGroupMergeResponse::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGroupMergeResponse::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool CMsgDOTAGroupMergeResponse::accept() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGroupMergeResponse.accept)
  return accept_;
}
inline void CMsgDOTAGroupMergeResponse::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGroupMergeResponse.accept)
}

// -------------------------------------------------------------------

// CMsgDOTAGroupMergeReply

// optional .EDOTAGroupMergeResult result = 1 [default = k_EDOTAGroupMergeResult_OK];
inline bool CMsgDOTAGroupMergeReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGroupMergeReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGroupMergeReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGroupMergeReply::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::EDOTAGroupMergeResult CMsgDOTAGroupMergeReply::result() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGroupMergeReply.result)
  return static_cast< ::EDOTAGroupMergeResult >(result_);
}
inline void CMsgDOTAGroupMergeReply::set_result(::EDOTAGroupMergeResult value) {
  assert(::EDOTAGroupMergeResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGroupMergeReply.result)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence_Member

// optional fixed64 steam_id = 1;
inline bool CMsgDOTAPartyRichPresence_Member::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence_Member::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.Member.steam_id)
  return steam_id_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.Member.steam_id)
}

// optional bool coach = 2;
inline bool CMsgDOTAPartyRichPresence_Member::has_coach() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::set_has_coach() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_has_coach() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_coach() {
  coach_ = false;
  clear_has_coach();
}
inline bool CMsgDOTAPartyRichPresence_Member::coach() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.Member.coach)
  return coach_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_coach(bool value) {
  set_has_coach();
  coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.Member.coach)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence

// optional fixed64 party_id = 1;
inline bool CMsgDOTAPartyRichPresence::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.party_id)
  return party_id_;
}
inline void CMsgDOTAPartyRichPresence::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.party_id)
}

// optional .CSODOTAParty.State party_state = 2 [default = UI];
inline bool CMsgDOTAPartyRichPresence::has_party_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_party_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_party_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence::clear_party_state() {
  party_state_ = 0;
  clear_has_party_state();
}
inline ::CSODOTAParty_State CMsgDOTAPartyRichPresence::party_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.party_state)
  return static_cast< ::CSODOTAParty_State >(party_state_);
}
inline void CMsgDOTAPartyRichPresence::set_party_state(::CSODOTAParty_State value) {
  assert(::CSODOTAParty_State_IsValid(value));
  set_has_party_state();
  party_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.party_state)
}

// optional bool open = 3;
inline bool CMsgDOTAPartyRichPresence::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPartyRichPresence::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CMsgDOTAPartyRichPresence::open() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.open)
  return open_;
}
inline void CMsgDOTAPartyRichPresence::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.open)
}

// optional bool low_priority = 5;
inline bool CMsgDOTAPartyRichPresence::has_low_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_low_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPartyRichPresence::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CMsgDOTAPartyRichPresence::low_priority() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.low_priority)
  return low_priority_;
}
inline void CMsgDOTAPartyRichPresence::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAPartyRichPresence.low_priority)
}

// repeated .CMsgDOTAPartyRichPresence.Member members = 4;
inline int CMsgDOTAPartyRichPresence::members_size() const {
  return members_.size();
}
inline void CMsgDOTAPartyRichPresence::clear_members() {
  members_.Clear();
}
inline const ::CMsgDOTAPartyRichPresence_Member& CMsgDOTAPartyRichPresence::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPartyRichPresence.members)
  return members_.Get(index);
}
inline ::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAPartyRichPresence.members)
  return members_.Mutable(index);
}
inline ::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::add_members() {
  // @@protoc_insertion_point(field_add:CMsgDOTAPartyRichPresence.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >&
CMsgDOTAPartyRichPresence::members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPartyRichPresence.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAPartyRichPresence_Member >*
CMsgDOTAPartyRichPresence::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPartyRichPresence.members)
  return &members_;
}

// -------------------------------------------------------------------

// CMsgDOTALobbyRichPresence

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTALobbyRichPresence::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTALobbyRichPresence::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.lobby_id)
}

// optional .CSODOTALobby.State lobby_state = 2 [default = UI];
inline bool CMsgDOTALobbyRichPresence::has_lobby_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_state() {
  lobby_state_ = 0;
  clear_has_lobby_state();
}
inline ::CSODOTALobby_State CMsgDOTALobbyRichPresence::lobby_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.lobby_state)
  return static_cast< ::CSODOTALobby_State >(lobby_state_);
}
inline void CMsgDOTALobbyRichPresence::set_lobby_state(::CSODOTALobby_State value) {
  assert(::CSODOTALobby_State_IsValid(value));
  set_has_lobby_state();
  lobby_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.lobby_state)
}

// optional bool password = 3;
inline bool CMsgDOTALobbyRichPresence::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALobbyRichPresence::clear_password() {
  password_ = false;
  clear_has_password();
}
inline bool CMsgDOTALobbyRichPresence::password() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.password)
  return password_;
}
inline void CMsgDOTALobbyRichPresence::set_password(bool value) {
  set_has_password();
  password_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.password)
}

// optional .DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgDOTALobbyRichPresence::has_game_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_game_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTALobbyRichPresence::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::DOTA_GameMode CMsgDOTALobbyRichPresence::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.game_mode)
  return static_cast< ::DOTA_GameMode >(game_mode_);
}
inline void CMsgDOTALobbyRichPresence::set_game_mode(::DOTA_GameMode value) {
  assert(::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.game_mode)
}

// optional uint32 member_count = 5;
inline bool CMsgDOTALobbyRichPresence::has_member_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_member_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTALobbyRichPresence::clear_member_count() {
  member_count_ = 0u;
  clear_has_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::member_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.member_count)
  return member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_member_count(::google::protobuf::uint32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.member_count)
}

// optional uint32 max_member_count = 6;
inline bool CMsgDOTALobbyRichPresence::has_max_member_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_max_member_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_max_member_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTALobbyRichPresence::clear_max_member_count() {
  max_member_count_ = 0u;
  clear_has_max_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::max_member_count() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.max_member_count)
  return max_member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_max_member_count(::google::protobuf::uint32 value) {
  set_has_max_member_count();
  max_member_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.max_member_count)
}

// optional fixed64 custom_game_id = 7;
inline bool CMsgDOTALobbyRichPresence::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTALobbyRichPresence::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTALobbyRichPresence::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.custom_game_id)
}

// optional string name = 8;
inline bool CMsgDOTALobbyRichPresence::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTALobbyRichPresence::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgDOTALobbyRichPresence::name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALobbyRichPresence.name)
  return *name_;
}
inline void CMsgDOTALobbyRichPresence::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTALobbyRichPresence.name)
}
inline void CMsgDOTALobbyRichPresence::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTALobbyRichPresence.name)
}
inline void CMsgDOTALobbyRichPresence::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTALobbyRichPresence.name)
}
inline ::std::string* CMsgDOTALobbyRichPresence::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTALobbyRichPresence.name)
  return name_;
}
inline ::std::string* CMsgDOTALobbyRichPresence::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTALobbyRichPresence::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALobbyRichPresence.name)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameListenServerStartedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
}

// optional uint64 custom_game_id = 2;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
}

// repeated uint32 lobby_members = 3;
inline int CMsgDOTACustomGameListenServerStartedLoading::lobby_members_size() const {
  return lobby_members_.size();
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_members() {
  lobby_members_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::lobby_members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_.Get(index);
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_members(int index, ::google::protobuf::uint32 value) {
  lobby_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline void CMsgDOTACustomGameListenServerStartedLoading::add_lobby_members(::google::protobuf::uint32 value) {
  lobby_members_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTACustomGameListenServerStartedLoading::lobby_members() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTACustomGameListenServerStartedLoading::mutable_lobby_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return &lobby_members_;
}

// optional uint32 start_time = 4;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameListenServerStartedLoading.start_time)
  return start_time_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameListenServerStartedLoading.start_time)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameClientFinishedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameClientFinishedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.lobby_id)
}

// optional uint32 loading_duration = 2;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_loading_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_loading_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_loading_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_loading_duration() {
  loading_duration_ = 0u;
  clear_has_loading_duration();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::loading_duration() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.loading_duration)
  return loading_duration_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_loading_duration(::google::protobuf::uint32 value) {
  set_has_loading_duration();
  loading_duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.loading_duration)
}

// optional sint32 result_code = 3;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_result_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::google::protobuf::int32 CMsgDOTACustomGameClientFinishedLoading::result_code() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.result_code)
  return result_code_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_code(::google::protobuf::int32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.result_code)
}

// optional string result_string = 4;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_result_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_result_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_string() {
  if (result_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_->clear();
  }
  clear_has_result_string();
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::result_string() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.result_string)
  return *result_string_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const ::std::string& value) {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  result_string_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value) {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  result_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value, size_t size) {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  result_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_result_string() {
  set_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACustomGameClientFinishedLoading.result_string)
  return result_string_;
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_result_string() {
  clear_has_result_string();
  if (result_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = result_string_;
    result_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_result_string(::std::string* result_string) {
  if (result_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete result_string_;
  }
  if (result_string) {
    set_has_result_string();
    result_string_ = result_string;
  } else {
    clear_has_result_string();
    result_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACustomGameClientFinishedLoading.result_string)
}

// optional uint32 signon_states = 5;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_signon_states() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_signon_states() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_signon_states() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_signon_states() {
  signon_states_ = 0u;
  clear_has_signon_states();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::signon_states() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.signon_states)
  return signon_states_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_signon_states(::google::protobuf::uint32 value) {
  set_has_signon_states();
  signon_states_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.signon_states)
}

// optional string comment = 6;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_comment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_comment() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_comment() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::comment() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACustomGameClientFinishedLoading.comment)
  return *comment_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACustomGameClientFinishedLoading.comment)
  return comment_;
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACustomGameClientFinishedLoading.comment)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeries

// optional uint32 league_id = 1;
inline bool CMsgClientToGCGetLeagueSeries::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeries::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeries::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeries::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeries::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeries.league_id)
  return league_id_;
}
inline void CMsgClientToGCGetLeagueSeries::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeries.league_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse_Series_Team

// optional uint32 team_id = 1;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_id)
  return team_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_id)
}

// optional string team_name = 2;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_name() {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_->clear();
  }
  clear_has_team_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
  return *team_name_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const ::std::string& value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const char* value) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  team_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::mutable_team_name() {
  set_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
  return team_name_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::release_team_name() {
  clear_has_team_name();
  if (team_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_name_;
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_allocated_team_name(::std::string* team_name) {
  if (team_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_name_;
  }
  if (team_name) {
    set_has_team_name();
    team_name_ = team_name;
  } else {
    clear_has_team_name();
    team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}

// optional string team_tag = 3;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_tag() {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_->clear();
  }
  clear_has_team_tag();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_tag() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
  return *team_tag_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const ::std::string& value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const char* value) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const char* value, size_t size) {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  team_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::mutable_team_tag() {
  set_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    team_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
  return team_tag_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::release_team_tag() {
  clear_has_team_tag();
  if (team_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = team_tag_;
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_allocated_team_tag(::std::string* team_tag) {
  if (team_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete team_tag_;
  }
  if (team_tag) {
    set_has_team_tag();
    team_tag_ = team_tag;
  } else {
    clear_has_team_tag();
    team_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}

// optional uint32 team_score = 4;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_score() {
  team_score_ = 0u;
  clear_has_team_score();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_score() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_score)
  return team_score_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_score(::google::protobuf::uint32 value) {
  set_has_team_score();
  team_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_score)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse_Series

// optional uint32 series_id = 1;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_series_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_series_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::series_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.series_id)
  return series_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.series_id)
}

// optional uint32 num_games = 2;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_num_games() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_num_games() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::num_games() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.num_games)
  return num_games_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.num_games)
}

// repeated .CMsgClientToGCGetLeagueSeriesResponse.Series.Team teams = 3;
inline int CMsgClientToGCGetLeagueSeriesResponse_Series::teams_size() const {
  return teams_.size();
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_teams() {
  teams_.Clear();
}
inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team& CMsgClientToGCGetLeagueSeriesResponse_Series::teams(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Get(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Mutable(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* CMsgClientToGCGetLeagueSeriesResponse_Series::add_teams() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >&
CMsgClientToGCGetLeagueSeriesResponse_Series::teams() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >*
CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return &teams_;
}

// optional string series_name = 4;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_series_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_series_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_series_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_series_name() {
  if (series_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_->clear();
  }
  clear_has_series_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series::series_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
  return *series_name_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const ::std::string& value) {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  series_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const char* value) {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  series_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const char* value, size_t size) {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  series_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_series_name() {
  set_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    series_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
  return series_name_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::release_series_name() {
  clear_has_series_name();
  if (series_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = series_name_;
    series_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_allocated_series_name(::std::string* series_name) {
  if (series_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete series_name_;
  }
  if (series_name) {
    set_has_series_name();
    series_name_ = series_name;
  } else {
    clear_has_series_name();
    series_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}

// optional string phase_name = 5;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_phase_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_phase_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_phase_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_phase_name() {
  if (phase_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_->clear();
  }
  clear_has_phase_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series::phase_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
  return *phase_name_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const ::std::string& value) {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  phase_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const char* value) {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  phase_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const char* value, size_t size) {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  phase_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_phase_name() {
  set_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phase_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
  return phase_name_;
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::release_phase_name() {
  clear_has_phase_name();
  if (phase_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phase_name_;
    phase_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_allocated_phase_name(::std::string* phase_name) {
  if (phase_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phase_name_;
  }
  if (phase_name) {
    set_has_phase_name();
    phase_name_ = phase_name;
  } else {
    clear_has_phase_name();
    phase_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}

// optional uint32 start_time = 6;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_start_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_start_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.start_time)
  return start_time_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.start_time)
}

// optional uint32 after_series_id = 7;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_after_series_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_after_series_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_after_series_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_after_series_id() {
  after_series_id_ = 0u;
  clear_has_after_series_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::after_series_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.Series.after_series_id)
  return after_series_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_after_series_id(::google::protobuf::uint32 value) {
  set_has_after_series_id();
  after_series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeagueSeriesResponse.Series.after_series_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse

// repeated .CMsgClientToGCGetLeagueSeriesResponse.Series series = 1;
inline int CMsgClientToGCGetLeagueSeriesResponse::series_size() const {
  return series_.size();
}
inline void CMsgClientToGCGetLeagueSeriesResponse::clear_series() {
  series_.Clear();
}
inline const ::CMsgClientToGCGetLeagueSeriesResponse_Series& CMsgClientToGCGetLeagueSeriesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Get(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* CMsgClientToGCGetLeagueSeriesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Mutable(index);
}
inline ::CMsgClientToGCGetLeagueSeriesResponse_Series* CMsgClientToGCGetLeagueSeriesResponse::add_series() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >&
CMsgClientToGCGetLeagueSeriesResponse::series() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCGetLeagueSeriesResponse_Series >*
CMsgClientToGCGetLeagueSeriesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetLeagueSeriesResponse.series)
  return &series_;
}

// -------------------------------------------------------------------

// CMsgClientToGCApplyGemCombiner

// optional uint64 item_id_1 = 1;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::set_has_item_id_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_has_item_id_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_1() {
  item_id_1_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id_1();
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_1() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCApplyGemCombiner.item_id_1)
  return item_id_1_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_1(::google::protobuf::uint64 value) {
  set_has_item_id_1();
  item_id_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCApplyGemCombiner.item_id_1)
}

// optional uint64 item_id_2 = 2;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::set_has_item_id_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_has_item_id_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_2() {
  item_id_2_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id_2();
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_2() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCApplyGemCombiner.item_id_2)
  return item_id_2_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_2(::google::protobuf::uint64 value) {
  set_has_item_id_2();
  item_id_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCApplyGemCombiner.item_id_2)
}

// -------------------------------------------------------------------

// CDummyUnbreakMessage

// optional .CMsgDOTAClearTournamentGame dummy_field = 1;
inline bool CDummyUnbreakMessage::has_dummy_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDummyUnbreakMessage::set_has_dummy_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDummyUnbreakMessage::clear_has_dummy_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDummyUnbreakMessage::clear_dummy_field() {
  if (dummy_field_ != NULL) dummy_field_->::CMsgDOTAClearTournamentGame::Clear();
  clear_has_dummy_field();
}
inline const ::CMsgDOTAClearTournamentGame& CDummyUnbreakMessage::dummy_field() const {
  // @@protoc_insertion_point(field_get:CDummyUnbreakMessage.dummy_field)
  return dummy_field_ != NULL ? *dummy_field_ : *default_instance_->dummy_field_;
}
inline ::CMsgDOTAClearTournamentGame* CDummyUnbreakMessage::mutable_dummy_field() {
  set_has_dummy_field();
  if (dummy_field_ == NULL) dummy_field_ = new ::CMsgDOTAClearTournamentGame;
  // @@protoc_insertion_point(field_mutable:CDummyUnbreakMessage.dummy_field)
  return dummy_field_;
}
inline ::CMsgDOTAClearTournamentGame* CDummyUnbreakMessage::release_dummy_field() {
  clear_has_dummy_field();
  ::CMsgDOTAClearTournamentGame* temp = dummy_field_;
  dummy_field_ = NULL;
  return temp;
}
inline void CDummyUnbreakMessage::set_allocated_dummy_field(::CMsgDOTAClearTournamentGame* dummy_field) {
  delete dummy_field_;
  dummy_field_ = dummy_field;
  if (dummy_field) {
    set_has_dummy_field();
  } else {
    clear_has_dummy_field();
  }
  // @@protoc_insertion_point(field_set_allocated:CDummyUnbreakMessage.dummy_field)
}

// optional .ETournamentState another_dummy_field = 2 [default = k_ETournamentState_Unknown];
inline bool CDummyUnbreakMessage::has_another_dummy_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDummyUnbreakMessage::set_has_another_dummy_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDummyUnbreakMessage::clear_has_another_dummy_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDummyUnbreakMessage::clear_another_dummy_field() {
  another_dummy_field_ = 0;
  clear_has_another_dummy_field();
}
inline ::ETournamentState CDummyUnbreakMessage::another_dummy_field() const {
  // @@protoc_insertion_point(field_get:CDummyUnbreakMessage.another_dummy_field)
  return static_cast< ::ETournamentState >(another_dummy_field_);
}
inline void CDummyUnbreakMessage::set_another_dummy_field(::ETournamentState value) {
  assert(::ETournamentState_IsValid(value));
  set_has_another_dummy_field();
  another_dummy_field_ = value;
  // @@protoc_insertion_point(field_set:CDummyUnbreakMessage.another_dummy_field)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipe_Item

// optional uint64 item_id = 1;
inline bool CMsgClientToGCCreateStaticRecipe_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateStaticRecipe_Item::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.Item.item_id)
  return item_id_;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipe.Item.item_id)
}

// optional uint32 slot_id = 2;
inline bool CMsgClientToGCCreateStaticRecipe_Item::has_slot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::set_has_slot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipe_Item::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.Item.slot_id)
  return slot_id_;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipe.Item.slot_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipe

// repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
inline int CMsgClientToGCCreateStaticRecipe::items_size() const {
  return items_.size();
}
inline void CMsgClientToGCCreateStaticRecipe::clear_items() {
  items_.Clear();
}
inline const ::CMsgClientToGCCreateStaticRecipe_Item& CMsgClientToGCCreateStaticRecipe::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.items)
  return items_.Get(index);
}
inline ::CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateStaticRecipe.items)
  return items_.Mutable(index);
}
inline ::CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe::add_items() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateStaticRecipe.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >&
CMsgClientToGCCreateStaticRecipe::items() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateStaticRecipe.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >*
CMsgClientToGCCreateStaticRecipe::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateStaticRecipe.items)
  return &items_;
}

// optional uint32 recipe_def_index = 2;
inline bool CMsgClientToGCCreateStaticRecipe::has_recipe_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreateStaticRecipe::set_has_recipe_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCCreateStaticRecipe::clear_has_recipe_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCCreateStaticRecipe::clear_recipe_def_index() {
  recipe_def_index_ = 0u;
  clear_has_recipe_def_index();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipe::recipe_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.recipe_def_index)
  return recipe_def_index_;
}
inline void CMsgClientToGCCreateStaticRecipe::set_recipe_def_index(::google::protobuf::uint32 value) {
  set_has_recipe_def_index();
  recipe_def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipe.recipe_def_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipeResponse

// optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
inline bool CMsgClientToGCCreateStaticRecipeResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreateStaticRecipeResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreateStaticRecipeResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreateStaticRecipeResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.response)
  return static_cast< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(response_);
}
inline void CMsgClientToGCCreateStaticRecipeResponse::set_response(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  assert(::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.response)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgDOTAMatch_ReplayState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAMatch_ReplayState>() {
  return ::CMsgDOTAMatch_ReplayState_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTARequestMatches_SkillLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTARequestMatches_SkillLevel>() {
  return ::CMsgDOTARequestMatches_SkillLevel_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAPopup_PopupID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAPopup_PopupID>() {
  return ::CMsgDOTAPopup_PopupID_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTACreateTeamResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTACreateTeamResponse_Result>() {
  return ::CMsgDOTACreateTeamResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAEditTeamLogoResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAEditTeamLogoResponse_Result>() {
  return ::CMsgDOTAEditTeamLogoResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAEditTeamDetailsResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAEditTeamDetailsResponse_Result>() {
  return ::CMsgDOTAEditTeamDetailsResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTADisbandTeamResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTADisbandTeamResponse_Result>() {
  return ::CMsgDOTADisbandTeamResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTARequestTeamDataResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTARequestTeamDataResponse_Result>() {
  return ::CMsgDOTARequestTeamDataResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result>() {
  return ::CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTATeamInvite_InviteeResponseToGC_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTATeamInvite_InviteeResponseToGC_Result>() {
  return ::CMsgDOTATeamInvite_InviteeResponseToGC_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTATeamInvite_GCResponseToInviter_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTATeamInvite_GCResponseToInviter_Result>() {
  return ::CMsgDOTATeamInvite_GCResponseToInviter_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTATeamInvite_GCResponseToInvitee_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTATeamInvite_GCResponseToInvitee_Result>() {
  return ::CMsgDOTATeamInvite_GCResponseToInvitee_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAKickTeamMemberResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAKickTeamMemberResponse_Result>() {
  return ::CMsgDOTAKickTeamMemberResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTATransferTeamAdminResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTATransferTeamAdminResponse_Result>() {
  return ::CMsgDOTATransferTeamAdminResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTALeaveTeamResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTALeaveTeamResponse_Result>() {
  return ::CMsgDOTALeaveTeamResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAJoinChatChannelResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAJoinChatChannelResponse_Result>() {
  return ::CMsgDOTAJoinChatChannelResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAGuildCreateResponse_EError> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAGuildCreateResponse_EError>() {
  return ::CMsgDOTAGuildCreateResponse_EError_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAGuildSetAccountRoleResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAGuildSetAccountRoleResponse_EResult>() {
  return ::CMsgDOTAGuildSetAccountRoleResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAGuildInviteAccountResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAGuildInviteAccountResponse_EResult>() {
  return ::CMsgDOTAGuildInviteAccountResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAGuildCancelInviteResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAGuildCancelInviteResponse_EResult>() {
  return ::CMsgDOTAGuildCancelInviteResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAGuildUpdateDetailsResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAGuildUpdateDetailsResponse_EResult>() {
  return ::CMsgDOTAGuildUpdateDetailsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAPartySetOpenGuildResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAPartySetOpenGuildResponse_EResult>() {
  return ::CMsgDOTAPartySetOpenGuildResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAJoinOpenGuildPartyResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAJoinOpenGuildPartyResponse_EResult>() {
  return ::CMsgDOTAJoinOpenGuildPartyResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAGuildEditLogoResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAGuildEditLogoResponse_EResult>() {
  return ::CMsgDOTAGuildEditLogoResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgWatchGameResponse_WatchGameResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgWatchGameResponse_WatchGameResult>() {
  return ::CMsgWatchGameResponse_WatchGameResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTAFriendRecruitsResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTAFriendRecruitsResponse_EResult>() {
  return ::CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTARedeemEventPrizeResponse_ResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTARedeemEventPrizeResponse_ResultCode>() {
  return ::CMsgDOTARedeemEventPrizeResponse_ResultCode_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCNotificationsResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCNotificationsResponse_EResult>() {
  return ::CMsgGCNotificationsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCPlayerInfoSubmitResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCPlayerInfoSubmitResponse_EResult>() {
  return ::CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse>() {
  return ::CMsgClientToGCExchangeItemsForOfferingResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse>() {
  return ::CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::DOTA_WatchReplayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_WatchReplayType>() {
  return ::DOTA_WatchReplayType_descriptor();
}
template <> struct is_proto_enum< ::EItemEditorReservationResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EItemEditorReservationResult>() {
  return ::EItemEditorReservationResult_descriptor();
}
template <> struct is_proto_enum< ::EProfileCardSlotType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EProfileCardSlotType>() {
  return ::EProfileCardSlotType_descriptor();
}
template <> struct is_proto_enum< ::EFeaturedHeroTextField> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EFeaturedHeroTextField>() {
  return ::EFeaturedHeroTextField_descriptor();
}
template <> struct is_proto_enum< ::EFeaturedHeroDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EFeaturedHeroDataType>() {
  return ::EFeaturedHeroDataType_descriptor();
}
template <> struct is_proto_enum< ::EDOTAGroupMergeResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EDOTAGroupMergeResult>() {
  return ::EDOTAGroupMergeResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED
