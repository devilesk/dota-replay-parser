// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_msgid.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dota_gcmessages_msgid.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* EDOTAGCMsg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_dota_5fgcmessages_5fmsgid_2eproto() {
  protobuf_AddDesc_dota_5fgcmessages_5fmsgid_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dota_gcmessages_msgid.proto");
  GOOGLE_CHECK(file != NULL);
  EDOTAGCMsg_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dota_5fgcmessages_5fmsgid_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_dota_5fgcmessages_5fmsgid_2eproto() {
}

void protobuf_AddDesc_dota_5fgcmessages_5fmsgid_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033dota_gcmessages_msgid.proto*\351\330\001\n\nEDOTA"
    "GCMsg\022\025\n\020k_EMsgGCDOTABase\020\3306\022\034\n\027k_EMsgGC"
    "GeneralResponse\020\3316\022\035\n\030k_EMsgGCGameMatchS"
    "ignOut\020\3346\022%\n k_EMsgGCGameMatchSignOutRes"
    "ponse\020\3356\022\034\n\027k_EMsgGCJoinChatChannel\020\3416\022$"
    "\n\037k_EMsgGCJoinChatChannelResponse\020\3426\022\037\n\032"
    "k_EMsgGCOtherJoinedChannel\020\3456\022\035\n\030k_EMsgG"
    "COtherLeftChannel\020\3466\022\035\n\030k_EMsgGCMatchHis"
    "toryList\020\3516\022\"\n\035k_EMsgServerToGCRequestSt"
    "atus\020\3626\022\035\n\030k_EMsgGCGetRecentMatches\020\3636\022\""
    "\n\035k_EMsgGCRecentMatchesResponse\020\3646\022\036\n\031k_"
    "EMsgGCStartFindingMatch\020\3716\022\035\n\030k_EMsgGCCo"
    "nnectedPlayers\020\3726\022\037\n\032k_EMsgGCAbandonCurr"
    "entGame\020\3736\022\035\n\030k_EMsgGCStopFindingMatch\020\374"
    "6\022 \n\033k_EMsgGCPracticeLobbyCreate\020\3766\022\037\n\032k"
    "_EMsgGCPracticeLobbyLeave\020\2007\022 \n\033k_EMsgGC"
    "PracticeLobbyLaunch\020\2017\022\036\n\031k_EMsgGCPracti"
    "ceLobbyList\020\2027\022&\n!k_EMsgGCPracticeLobbyL"
    "istResponse\020\2037\022\036\n\031k_EMsgGCPracticeLobbyJ"
    "oin\020\2047\022$\n\037k_EMsgGCPracticeLobbySetDetail"
    "s\020\2067\022%\n k_EMsgGCPracticeLobbySetTeamSlot"
    "\020\2077\022)\n$k_EMsgGCInitialQuestionnaireRespo"
    "nse\020\2117\022\"\n\035k_EMsgGCPracticeLobbyResponse\020"
    "\2177\022\"\n\035k_EMsgGCBroadcastNotification\020\2207\022!"
    "\n\034k_EMsgGCLiveScoreboardUpdate\020\2217\022#\n\036k_E"
    "MsgGCRequestChatChannelList\020\2247\022+\n&k_EMsg"
    "GCRequestChatChannelListResponse\020\2257\022\033\n\026k"
    "_EMsgGCRequestMatches\020\2307\022#\n\036k_EMsgGCRequ"
    "estMatchesResponse\020\2317\022#\n\036k_EMsgGCRequest"
    "PlayerResources\020\2347\022+\n&k_EMsgGCRequestPla"
    "yerResourcesResponse\020\2357\022\024\n\017k_EMsgGCReady"
    "Up\020\2367\022\'\n\"k_EMsgGCKickedFromMatchmakingQu"
    "eue\020\2377\022\033\n\026k_EMsgGCLeaverDetected\020\2407\022\037\n\032k"
    "_EMsgGCSpectateFriendGame\020\2417\022\'\n\"k_EMsgGC"
    "SpectateFriendGameResponse\020\2427\022\032\n\025k_EMsgG"
    "CPlayerReports\020\2437\022$\n\037k_EMsgGCReportsRema"
    "iningRequest\020\2447\022%\n k_EMsgGCReportsRemain"
    "ingResponse\020\2457\022\037\n\032k_EMsgGCSubmitPlayerRe"
    "port\020\2467\022\'\n\"k_EMsgGCSubmitPlayerReportRes"
    "ponse\020\2477\022\036\n\031k_EMsgGCPracticeLobbyKick\020\2517"
    "\022 \n\033k_EMsgGCReportCountsRequest\020\2527\022!\n\034k_"
    "EMsgGCReportCountsResponse\020\2537\022\035\n\030k_EMsgG"
    "CRequestSaveGames\020\2547\022#\n\036k_EMsgGCRequestS"
    "aveGamesServer\020\2557\022%\n k_EMsgGCRequestSave"
    "GamesResponse\020\2567\022#\n\036k_EMsgGCLeaverDetect"
    "edResponse\020\2577\022\"\n\035k_EMsgGCPlayerFailedToC"
    "onnect\020\2607\022\035\n\030k_EMsgGCGCToRelayConnect\020\2617"
    "\022%\n k_EMsgGCGCToRelayConnectresponse\020\2627\022"
    "\026\n\021k_EMsgGCWatchGame\020\2637\022\036\n\031k_EMsgGCWatch"
    "GameResponse\020\2647\022\035\n\030k_EMsgGCBanStatusRequ"
    "est\020\2657\022\036\n\031k_EMsgGCBanStatusResponse\020\2667\022 "
    "\n\033k_EMsgGCMatchDetailsRequest\020\2677\022!\n\034k_EM"
    "sgGCMatchDetailsResponse\020\2707\022\034\n\027k_EMsgGCC"
    "ancelWatchGame\020\2717\022\033\n\026k_EMsgGCProfileRequ"
    "est\020\2727\022\034\n\027k_EMsgGCProfileResponse\020\2737\022\022\n\r"
    "k_EMsgGCPopup\020\2767\022,\n\'k_EMsgGCDOTAClearNot"
    "ifySuccessfulReport\020\3007\022+\n&k_EMsgGCFriend"
    "PracticeLobbyListRequest\020\3077\022,\n\'k_EMsgGCF"
    "riendPracticeLobbyListResponse\020\3107\022&\n!k_E"
    "MsgGCPracticeLobbyJoinResponse\020\3117\022%\n k_E"
    "MsgClientEconNotification_Job\020\3127\022\027\n\022k_EM"
    "sgGCCreateTeam\020\3137\022\037\n\032k_EMsgGCCreateTeamR"
    "esponse\020\3147\022\025\n\020k_EMsgGCTeamData\020\3217\022#\n\036k_E"
    "MsgGCTeamInvite_InviterToGC\020\3227\0224\n/k_EMsg"
    "GCTeamInvite_GCImmediateResponseToInvite"
    "r\020\3237\022*\n%k_EMsgGCTeamInvite_GCRequestToIn"
    "vitee\020\3247\022+\n&k_EMsgGCTeamInvite_InviteeRe"
    "sponseToGC\020\3257\022+\n&k_EMsgGCTeamInvite_GCRe"
    "sponseToInviter\020\3267\022+\n&k_EMsgGCTeamInvite"
    "_GCResponseToInvitee\020\3277\022\033\n\026k_EMsgGCKickT"
    "eamMember\020\3307\022#\n\036k_EMsgGCKickTeamMemberRe"
    "sponse\020\3317\022\026\n\021k_EMsgGCLeaveTeam\020\3327\022\036\n\031k_E"
    "MsgGCLeaveTeamResponse\020\3337\022#\n\036k_EMsgGCSug"
    "gestTeamMatchmaking\020\3347\022%\n k_EMsgGCPlayer"
    "HeroesFavoritesAdd\020\3357\022(\n#k_EMsgGCPlayerH"
    "eroesFavoritesRemove\020\3367\022\034\n\027k_EMsgGCSetSh"
    "owcaseHero\020\3457\022%\n k_EMsgGCApplyTeamToPrac"
    "ticeLobby\020\3467\022+\n&k_EMsgGCRequestInternati"
    "nalTicketEmail\020\3477\022\036\n\031k_EMsgGCTransferTea"
    "mAdmin\020\3507\022\034\n\027k_EMsgRequestLeagueInfo\020\3537\022"
    "\035\n\030k_EMsgResponseLeagueInfo\020\3547\022.\n)k_EMsg"
    "GCPracticeLobbyJoinBroadcastChannel\020\3557\022!"
    "\n\034k_EMsgGC_TournamentItemEvent\020\3567\022)\n$k_E"
    "MsgGC_TournamentItemEventResponse\020\3577\022\030\n\023"
    "k_EMsgCastMatchVote\020\3607\022 \n\033k_EMsgCastMatc"
    "hVoteResponse\020\3617\022\034\n\027k_EMsgRetrieveMatchV"
    "ote\020\3627\022$\n\037k_EMsgRetrieveMatchVoteRespons"
    "e\020\3637\022\026\n\021k_EMsgTeamFanfare\020\3647\022\036\n\031k_EMsgRe"
    "sponseTeamFanfare\020\3657\022&\n!k_EMsgGC_GameSer"
    "verUploadSaveGame\020\3667\022&\n!k_EMsgGC_GameSer"
    "verSaveGameResult\020\3677\022#\n\036k_EMsgGC_GameSer"
    "verGetLoadGame\020\3707\022)\n$k_EMsgGC_GameServer"
    "GetLoadGameResult\020\3717\022\034\n\027k_EMsgGCEditTeam"
    "Details\020\3767\022$\n\037k_EMsgGCEditTeamDetailsRes"
    "ponse\020\3777\022\037\n\032k_EMsgGCProTeamListRequest\020\200"
    "8\022 \n\033k_EMsgGCProTeamListResponse\020\2018\022\032\n\025k"
    "_EMsgGCReadyUpStatus\020\2028\022\027\n\022k_EMsgGCHallO"
    "fFame\020\2038\022\036\n\031k_EMsgGCHallOfFameRequest\020\2048"
    "\022\037\n\032k_EMsgGCHallOfFameResponse\020\2058\022&\n!k_E"
    "MsgGCGenerateDiretidePrizeList\020\2068\022!\n\034k_E"
    "MsgGCRewardDiretidePrizes\020\2108\022+\n&k_EMsgGC"
    "DiretidePrizesRewardedResponse\020\2118\022&\n!k_E"
    "MsgGCHalloweenHighScoreRequest\020\2128\022\'\n\"k_E"
    "MsgGCHalloweenHighScoreResponse\020\2138\022.\n)k_"
    "EMsgGCGenerateDiretidePrizeListResponse\020"
    "\2148\022#\n\036k_EMsgGCStorePromoPagesRequest\020\2168\022"
    "$\n\037k_EMsgGCStorePromoPagesResponse\020\2178\022\037\n"
    "\032k_EMsgGCToGCMatchCompleted\020\2228\022!\n\034k_EMsg"
    "GCBalancedShuffleLobby\020\2248\022&\n!k_EMsgGCToG"
    "CCheckLeaguePermission\020\2258\022.\n)k_EMsgGCToG"
    "CCheckLeaguePermissionResponse\020\2268\022\"\n\035k_E"
    "MsgGCLeagueScheduleRequest\020\2278\022#\n\036k_EMsgG"
    "CLeagueScheduleResponse\020\2308\022\037\n\032k_EMsgGCLe"
    "agueScheduleEdit\020\2318\022\'\n\"k_EMsgGCLeagueSch"
    "eduleEditResponse\020\2328\022\"\n\035k_EMsgGCLeaguesI"
    "nMonthRequest\020\2338\022#\n\036k_EMsgGCLeaguesInMon"
    "thResponse\020\2348\022$\n\037k_EMsgGCMatchmakingStat"
    "sRequest\020\2358\022%\n k_EMsgGCMatchmakingStatsR"
    "esponse\020\2368\022\032\n\025k_EMsgGCBotGameCreate\020\2378\022\""
    "\n\035k_EMsgGCSetMatchHistoryAccess\020\2408\022*\n%k_"
    "EMsgGCSetMatchHistoryAccessResponse\020\2418\022\034"
    "\n\027k_EMsgUpgradeLeagueItem\020\2438\022$\n\037k_EMsgUp"
    "gradeLeagueItemResponse\020\2448\022%\n k_EMsgGCTe"
    "amMemberProfileRequest\020\2458\022\"\n\035k_EMsgGCWat"
    "chDownloadedReplay\020\2468\022 \n\033k_EMsgGCSetMapL"
    "ocationState\020\2478\022(\n#k_EMsgGCSetMapLocatio"
    "nStateResponse\020\2508\022\036\n\031k_EMsgGCResetMapLoc"
    "ations\020\2518\022&\n!k_EMsgGCResetMapLocationsRe"
    "sponse\020\2528\022\035\n\030k_EMsgGCSetFeaturedItems\020\2548"
    "\022\032\n\025k_EMsgGCFeaturedItems\020\2578\022$\n\037k_EMsgRe"
    "freshPartnerAccountLink\020\2608\022$\n\037k_EMsgClie"
    "ntsRejoinChatChannels\020\2618\022 \n\033k_EMsgGCToGC"
    "GetUserChatInfo\020\2628\022(\n#k_EMsgGCToGCGetUse"
    "rChatInfoResponse\020\2638\022%\n k_EMsgGCToGCLeav"
    "eAllChatChannels\020\2648\022%\n k_EMsgGCToGCUpdat"
    "eAccountChatBan\020\2658\022\037\n\032k_EMsgGCGuildCreat"
    "eRequest\020\2668\022 \n\033k_EMsgGCGuildCreateRespon"
    "se\020\2678\022\'\n\"k_EMsgGCGuildSetAccountRoleRequ"
    "est\020\2708\022(\n#k_EMsgGCGuildSetAccountRoleRes"
    "ponse\020\2718\022\035\n\030k_EMsgGCRequestGuildData\020\2728\022"
    "\026\n\021k_EMsgGCGuildData\020\2738\022&\n!k_EMsgGCGuild"
    "InviteAccountRequest\020\2748\022\'\n\"k_EMsgGCGuild"
    "InviteAccountResponse\020\2758\022%\n k_EMsgGCGuil"
    "dCancelInviteRequest\020\2768\022&\n!k_EMsgGCGuild"
    "CancelInviteResponse\020\2778\022&\n!k_EMsgGCGuild"
    "UpdateDetailsRequest\020\3008\022\'\n\"k_EMsgGCGuild"
    "UpdateDetailsResponse\020\3018\022$\n\037k_EMsgGCToGC"
    "CanInviteUserToTeam\020\3028\022,\n\'k_EMsgGCToGCCa"
    "nInviteUserToTeamResponse\020\3038\022\034\n\027k_EMsgGC"
    "ToGCGetUserRank\020\3048\022$\n\037k_EMsgGCToGCGetUse"
    "rRankResponse\020\3058\022 \n\033k_EMsgGCToGCUpdateTe"
    "amStats\020\3108\022\034\n\027k_EMsgGCToGCGetTeamRank\020\3118"
    "\022$\n\037k_EMsgGCToGCGetTeamRankResponse\020\3128\022 "
    "\n\033k_EMsgGCPassportDataRequest\020\3208\022!\n\034k_EM"
    "sgGCPassportDataResponse\020\3218\022\033\n\026k_EMsgGCN"
    "otInGuildData\020\3238\022\034\n\027k_EMsgGCGuildInviteD"
    "ata\020\3268\022\037\n\032k_EMsgGCToGCGetLeagueAdmin\020\3278\022"
    "\'\n\"k_EMsgGCToGCGetLeagueAdminResponse\020\3308"
    "\022#\n\036k_EMsgGCRequestLeaguePrizePool\020\3328\022+\n"
    "&k_EMsgGCRequestLeaguePrizePoolResponse\020"
    "\3338\022,\n\'k_EMsgGCToGCUpdateOpenGuildPartyRe"
    "quest\020\3358\022-\n(k_EMsgGCToGCUpdateOpenGuildP"
    "artyResponse\020\3368\022-\n(k_EMsgGCToGCDestroyOp"
    "enGuildPartyRequest\020\3378\022.\n)k_EMsgGCToGCDe"
    "stroyOpenGuildPartyResponse\020\3408\022\037\n\032k_EMsg"
    "GCGuildUpdateMessage\020\3418\022%\n k_EMsgGCParty"
    "SetOpenGuildRequest\020\3428\022&\n!k_EMsgGCPartyS"
    "etOpenGuildResponse\020\3438\022\"\n\035k_EMsgGCGuildO"
    "penPartyRefresh\020\3448\022&\n!k_EMsgGCJoinOpenGu"
    "ildPartyRequest\020\3458\022\'\n\"k_EMsgGCJoinOpenGu"
    "ildPartyResponse\020\3468\022\035\n\030k_EMsgGCLeaveChat"
    "Channel\020\3508\022\030\n\023k_EMsgGCChatMessage\020\3518\022\035\n\030"
    "k_EMsgGCGetHeroStandings\020\3528\022%\n k_EMsgGCG"
    "etHeroStandingsResponse\020\3538\022!\n\034k_EMsgGCGu"
    "ildEditLogoRequest\020\3578\022\"\n\035k_EMsgGCGuildEd"
    "itLogoResponse\020\3608\022.\n)k_EMsgGCGuildmatePr"
    "acticeLobbyListRequest\020\3618\022/\n*k_EMsgGCGui"
    "ldmatePracticeLobbyListResponse\020\3628\022*\n%k_"
    "EMsgGCItemEditorReservationsRequest\020\3638\022+"
    "\n&k_EMsgGCItemEditorReservationsResponse"
    "\020\3648\022%\n k_EMsgGCItemEditorReserveItemDef\020"
    "\3658\022-\n(k_EMsgGCItemEditorReserveItemDefRe"
    "sponse\020\3668\022)\n$k_EMsgGCItemEditorReleaseRe"
    "servation\020\3678\0221\n,k_EMsgGCItemEditorReleas"
    "eReservationResponse\020\3708\022!\n\034k_EMsgGCRewar"
    "dTutorialPrizes\020\3718\022*\n%k_EMsgGCLastHitCha"
    "llengeHighScorePost\020\3728\022-\n(k_EMsgGCLastHi"
    "tChallengeHighScoreRequest\020\3738\022.\n)k_EMsgG"
    "CLastHitChallengeHighScoreResponse\020\3748\022\'\n"
    "\"k_EMsgGCCreateFantasyLeagueRequest\020\3758\022("
    "\n#k_EMsgGCCreateFantasyLeagueResponse\020\3768"
    "\022%\n k_EMsgGCFantasyLeagueInfoRequest\020\2019\022"
    "&\n!k_EMsgGCFantasyLeagueInfoResponse\020\2029\022"
    "\036\n\031k_EMsgGCFantasyLeagueInfo\020\2039\022%\n k_EMs"
    "gGCCreateFantasyTeamRequest\020\2049\022&\n!k_EMsg"
    "GCCreateFantasyTeamResponse\020\2059\022#\n\036k_EMsg"
    "GCEditFantasyTeamRequest\020\2069\022$\n\037k_EMsgGCE"
    "ditFantasyTeamResponse\020\2079\0224\n/k_EMsgGCFan"
    "tasyTeamInfoRequestByFantasyLeagueID\020\2109\022"
    "3\n.k_EMsgGCFantasyTeamInfoRequestByOwner"
    "AccountID\020\2119\022$\n\037k_EMsgGCFantasyTeamInfoR"
    "esponse\020\2129\022\034\n\027k_EMsgGCFantasyTeamInfo\020\2139"
    "\022#\n\036k_EMsgGCFantasyLivePlayerStats\020\2149\022$\n"
    "\037k_EMsgGCFantasyFinalPlayerStats\020\2159\022\031\n\024k"
    "_EMsgGCFantasyMatch\020\2169\022$\n\037k_EMsgGCFantas"
    "yTeamScoreRequest\020\2209\022%\n k_EMsgGCFantasyT"
    "eamScoreResponse\020\2219\022(\n#k_EMsgGCFantasyTe"
    "amStandingsRequest\020\2229\022)\n$k_EMsgGCFantasy"
    "TeamStandingsResponse\020\2239\022&\n!k_EMsgGCFant"
    "asyPlayerScoreRequest\020\2249\022\'\n\"k_EMsgGCFant"
    "asyPlayerScoreResponse\020\2259\022*\n%k_EMsgGCFan"
    "tasyPlayerStandingsRequest\020\2269\022+\n&k_EMsgG"
    "CFantasyPlayerStandingsResponse\020\2279\022\033\n\026k_"
    "EMsgGCFlipLobbyTeams\020\2309\022\035\n\030k_EMsgGCCusto"
    "mGameCreate\020\2319\022%\n k_EMsgGCFantasyPlayerI"
    "nfoRequest\020\2329\022&\n!k_EMsgGCFantasyPlayerIn"
    "foResponse\020\2339\022-\n(k_EMsgGCToGCProcessPlay"
    "erReportForTarget\020\2349\022%\n k_EMsgGCToGCProc"
    "essReportSuccess\020\2359\022%\n k_EMsgGCNotifyAcc"
    "ountFlagsChange\020\2369\022\036\n\031k_EMsgGCSetProfile"
    "Privacy\020\2379\022&\n!k_EMsgGCSetProfilePrivacyR"
    "esponse\020\2409\022 \n\033k_EMsgGCSteamProfileReques"
    "t\020\2419\022(\n#k_EMsgGCSteamProfileRequestRespo"
    "nse\020\2429\022+\n&k_EMsgGCFantasyLeagueCreateInf"
    "oRequest\020\2439\022,\n\'k_EMsgGCFantasyLeagueCrea"
    "teInfoResponse\020\2449\022+\n&k_EMsgGCFantasyLeag"
    "ueInviteInfoRequest\020\2459\022,\n\'k_EMsgGCFantas"
    "yLeagueInviteInfoResponse\020\2469\022\036\n\031k_EMsgGC"
    "ClientIgnoredUser\020\2479\022\'\n\"k_EMsgGCFantasyL"
    "eagueCreateRequest\020\2509\022(\n#k_EMsgGCFantasy"
    "LeagueCreateResponse\020\2519\022%\n k_EMsgGCFanta"
    "syTeamCreateRequest\020\2529\022&\n!k_EMsgGCFantas"
    "yTeamCreateResponse\020\2539\022/\n*k_EMsgGCFantas"
    "yLeagueFriendJoinListRequest\020\2549\0220\n+k_EMs"
    "gGCFantasyLeagueFriendJoinListResponse\020\255"
    "9\022\034\n\027k_EMsgGCClientSuspended\020\2569\022 \n\033k_EMs"
    "gGCPartyMemberSetCoach\020\2579\022,\n\'k_EMsgGCFan"
    "tasyLeagueEditInvitesRequest\020\2609\022-\n(k_EMs"
    "gGCFantasyLeagueEditInvitesResponse\020\2619\022\""
    "\n\035k_EMsgGCPracticeLobbySetCoach\020\2629\022)\n$k_"
    "EMsgGCFantasyLeagueEditInfoRequest\020\2639\022*\n"
    "%k_EMsgGCFantasyLeagueEditInfoResponse\020\264"
    "9\022,\n\'k_EMsgGCFantasyLeagueDraftStatusReq"
    "uest\020\2659\022%\n k_EMsgGCFantasyLeagueDraftSta"
    "tus\020\2669\022,\n\'k_EMsgGCFantasyLeagueDraftPlay"
    "erRequest\020\2679\022-\n(k_EMsgGCFantasyLeagueDra"
    "ftPlayerResponse\020\2709\022)\n$k_EMsgGCFantasyLe"
    "agueMatchupsRequest\020\2719\022*\n%k_EMsgGCFantas"
    "yLeagueMatchupsResponse\020\2729\022)\n$k_EMsgGCFa"
    "ntasyTeamRosterSwapRequest\020\2739\022*\n%k_EMsgG"
    "CFantasyTeamRosterSwapResponse\020\2749\022%\n k_E"
    "MsgGCFantasyTeamRosterRequest\020\2759\022&\n!k_EM"
    "sgGCFantasyTeamRosterResponse\020\2769\022\037\n\032k_EM"
    "sgGCNexonPartnerUpdate\020\2779\022*\n%k_EMsgGCToG"
    "CProcessPCBangRewardPoints\020\3009\022,\n\'k_EMsgG"
    "CFantasyTeamRosterAddDropRequest\020\3019\022-\n(k"
    "_EMsgGCFantasyTeamRosterAddDropResponse\020"
    "\3029\022&\n!k_EMsgPresentedClientTerminateDlg\020"
    "\3039\022/\n*k_EMsgGCFantasyPlayerHisoricalStat"
    "sRequest\020\3049\0220\n+k_EMsgGCFantasyPlayerHiso"
    "ricalStatsResponse\020\3059\022%\n k_EMsgGCPCBangT"
    "imedRewardMessage\020\3069\022,\n\'k_EMsgGCLobbyUpd"
    "ateBroadcastChannelInfo\020\3079\022%\n k_EMsgGCFa"
    "ntasyTeamTradesRequest\020\3109\022&\n!k_EMsgGCFan"
    "tasyTeamTradesResponse\020\3119\022*\n%k_EMsgGCFan"
    "tasyTeamTradeCancelRequest\020\3129\022+\n&k_EMsgG"
    "CFantasyTeamTradeCancelResponse\020\3139\022$\n\037k_"
    "EMsgGCToGCGrantTournamentItem\020\3149\022)\n$k_EM"
    "sgGCProcessFantasyScheduledEvent\020\3159\022&\n!k"
    "_EMsgGCToGCGrantPCBangRewardItem\020\3169\022)\n$k"
    "_EMsgGCToGCUpgradeTwitchViewerItems\020\3179\022\'"
    "\n\"k_EMsgGCToGCGetLiveMatchAffiliates\020\3209\022"
    "/\n*k_EMsgGCToGCGetLiveMatchAffiliatesRes"
    "ponse\020\3219\022*\n%k_EMsgGCToGCUpdatePlayerPenn"
    "antCounts\020\3229\022\'\n\"k_EMsgGCToGCGetPlayerPen"
    "nantCounts\020\3239\022/\n*k_EMsgGCToGCGetPlayerPe"
    "nnantCountsResponse\020\3249\022.\n)k_EMsgGCGameMa"
    "tchSignOutPermissionRequest\020\3259\022/\n*k_EMsg"
    "GCGameMatchSignOutPermissionResponse\020\3269\022"
    "&\n!k_EMsgDOTAChatChannelMemberUpdate\020\3279\022"
    "\037\n\032k_EMsgDOTAAwardEventPoints\020\3309\022\037\n\032k_EM"
    "sgDOTARedeemEventPrize\020\3319\022\'\n\"k_EMsgDOTAR"
    "edeemEventPrizeResponse\020\3329\022\035\n\030k_EMsgDOTA"
    "GetEventPoints\020\3339\022%\n k_EMsgDOTAGetEventP"
    "ointsResponse\020\3349\022(\n#k_EMsgGCToGCSignoutA"
    "wardEventPoints\020\3369\022!\n\034k_EMsgDOTASendFrie"
    "ndRecruits\020\3419\022$\n\037k_EMsgDOTAFriendRecruit"
    "sRequest\020\3429\022%\n k_EMsgDOTAFriendRecruitsR"
    "esponse\020\3439\022/\n*k_EMsgDOTAFriendRecruitInv"
    "iteAcceptDecline\020\3449\022\'\n\"k_EMsgGCPartyLead"
    "erWatchGamePrompt\020\3459\022#\n\036k_EMsgDOTAFrosti"
    "vusTimeElapsed\020\3469\022#\n\036k_EMsgDOTALiveLeagu"
    "eGameUpdate\020\3529\022\036\n\031k_EMsgDOTAChatGetUserL"
    "ist\020\3539\022&\n!k_EMsgDOTAChatGetUserListRespo"
    "nse\020\3549\022#\n\036k_EMsgGCCompendiumSetSelection"
    "\020\3559\022\"\n\035k_EMsgGCCompendiumDataRequest\020\3569\022"
    "#\n\036k_EMsgGCCompendiumDataResponse\020\3579\022$\n\037"
    "k_EMsgDOTAGetPlayerMatchHistory\020\3609\022,\n\'k_"
    "EMsgDOTAGetPlayerMatchHistoryResponse\020\3619"
    "\022$\n\037k_EMsgGCToGCMatchmakingAddParty\020\3629\022\'"
    "\n\"k_EMsgGCToGCMatchmakingRemoveParty\020\3639\022"
    ",\n\'k_EMsgGCToGCMatchmakingRemoveAllParti"
    "es\020\3649\022&\n!k_EMsgGCToGCMatchmakingMatchFou"
    "nd\020\3659\022+\n&k_EMsgGCToGCUpdateMatchManageme"
    "ntStats\020\3669\022\'\n\"k_EMsgGCToGCUpdateMatchmak"
    "ingStats\020\3679\022 \n\033k_EMsgGCToServerPingReque"
    "st\020\3709\022!\n\034k_EMsgGCToServerPingResponse\020\3719"
    "\022#\n\036k_EMsgGCToServerConsoleCommand\020\3729\022)\n"
    "$k_EMsgGCToGCUpdateLiveLeagueGameInfo\020\3749"
    "\022\031\n\024k_EMsgGCMakeOffering\020\3779\022\035\n\030k_EMsgGCR"
    "equestOfferings\020\200:\022%\n k_EMsgGCRequestOff"
    "eringsResponse\020\201:\022#\n\036k_EMsgGCToGCProcess"
    "MatchLeaver\020\202:\022!\n\034k_EMsgGCNotificationsR"
    "equest\020\203:\022\"\n\035k_EMsgGCNotificationsRespon"
    "se\020\204:\022#\n\036k_EMsgGCToGCModifyNotification\020"
    "\205:\022$\n\037k_EMsgGCToGCSetNewNotifications\020\206:"
    "\022!\n\034k_EMsgGCToGCSetIsLeagueAdmin\020\207:\022\035\n\030k"
    "_EMsgGCLeagueAdminState\020\210:\022%\n k_EMsgGCTo"
    "GCSendLeagueAdminState\020\211:\022\034\n\027k_EMsgGCLea"
    "gueAdminList\020\212:\022)\n$k_EMsgGCNotifications"
    "MarkReadRequest\020\213:\022\036\n\031k_EMsgGCFantasyMes"
    "sageAdd\020\214:\022#\n\036k_EMsgGCFantasyMessagesReq"
    "uest\020\215:\022$\n\037k_EMsgGCFantasyMessagesRespon"
    "se\020\216:\022+\n&k_EMsgGCFantasyScheduledMatches"
    "Request\020\217:\022,\n\'k_EMsgGCFantasyScheduledMa"
    "tchesResponse\020\220:\022\"\n\035k_EMsgGCToGCGrantLea"
    "gueAccess\020\221:\022\034\n\027k_EMsgGCEventGameCreate\020"
    "\223:\022*\n%k_EMsgGCPerfectWorldUserLookupRequ"
    "est\020\224:\022+\n&k_EMsgGCPerfectWorldUserLookup"
    "Response\020\225:\022\037\n\032k_EMsgGCFantasyRemoveOwne"
    "r\020\230:\022\'\n\"k_EMsgGCFantasyRemoveOwnerRespon"
    "se\020\231:\022(\n#k_EMsgGCRequestBatchPlayerResou"
    "rces\020\232:\0220\n+k_EMsgGCRequestBatchPlayerRes"
    "ourcesResponse\020\233:\022\"\n\035k_EMsgGCToGCSendUpd"
    "ateLeagues\020\234:\022+\n&k_EMsgGCCompendiumSetSe"
    "lectionResponse\020\235:\022\036\n\031k_EMsgGCPlayerInfo"
    "Request\020\236:\022\027\n\022k_EMsgGCPlayerInfo\020\237:\022\035\n\030k"
    "_EMsgGCPlayerInfoSubmit\020\240:\022%\n k_EMsgGCPl"
    "ayerInfoSubmitResponse\020\241:\022 \n\033k_EMsgGCToG"
    "CGetAccountLevel\020\242:\022(\n#k_EMsgGCToGCGetAc"
    "countLevelResponse\020\243:\022\"\n\035k_EMsgGCToGCGet"
    "AccountPartner\020\244:\022*\n%k_EMsgGCToGCGetAcco"
    "untPartnerResponse\020\245:\022\"\n\035k_EMsgGCToGCGet"
    "AccountProfile\020\246:\022*\n%k_EMsgGCToGCGetAcco"
    "untProfileResponse\020\247:\022(\n#k_EMsgDOTAGetWe"
    "ekendTourneySchedule\020\250:\022%\n k_EMsgDOTAWee"
    "kendTourneySchedule\020\251:\022+\n&k_EMsgGCJoinab"
    "leCustomGameModesRequest\020\252:\022,\n\'k_EMsgGCJ"
    "oinableCustomGameModesResponse\020\253:\022)\n$k_E"
    "MsgGCJoinableCustomLobbiesRequest\020\254:\022*\n%"
    "k_EMsgGCJoinableCustomLobbiesResponse\020\255:"
    "\022!\n\034k_EMsgGCQuickJoinCustomLobby\020\256:\022)\n$k"
    "_EMsgGCQuickJoinCustomLobbyResponse\020\257:\022&"
    "\n!k_EMsgGCToGCGrantEventPointAction\020\260:\022\037"
    "\n\032k_EMsgServerGetEventPoints\020\261:\022\'\n\"k_EMs"
    "gServerGetEventPointsResponse\020\262:\022&\n!k_EM"
    "sgServerGrantSurveyPermission\020\263:\022.\n)k_EM"
    "sgServerGrantSurveyPermissionResponse\020\264:"
    "\022$\n\037k_EMsgClientProvideSurveyResult\020\265:\022\'"
    "\n\"k_EMsgGCToGCSetCompendiumSelection\020\266:\022"
    "#\n\036k_EMsgGCToGCUpdateTI4HeroQuest\020\270:\022\"\n\035"
    "k_EMsgGCCompendiumDataChanged\020\271:\022\'\n\"k_EM"
    "sgDOTAFantasyLeagueFindRequest\020\272:\022(\n#k_E"
    "MsgDOTAFantasyLeagueFindResponse\020\273:\022\031\n\024k"
    "_EMsgGCHasItemQuery\020\274:\022\034\n\027k_EMsgGCHasIte"
    "mResponse\020\275:\022!\n\034k_EMsgGCConsumeFantasyTi"
    "cket\020\276:\022(\n#k_EMsgGCConsumeFantasyTicketF"
    "ailure\020\277:\022)\n$k_EMsgGCToGCGrantEventPoint"
    "ActionMsg\020\300:\022&\n!k_EMsgClientToGCTrackDia"
    "logResult\020\301:\022&\n!k_EMsgGCFantasyLeaveLeag"
    "ueRequest\020\302:\022\'\n\"k_EMsgGCFantasyLeaveLeag"
    "ueResponse\020\303:\022(\n#k_EMsgGCToGCGetCompendi"
    "umSelections\020\304:\0220\n+k_EMsgGCToGCGetCompen"
    "diumSelectionsResponse\020\305:\022)\n$k_EMsgServe"
    "rToGCMatchConnectionStats\020\306:\022\'\n\"k_EMsgGC"
    "ToClientTournamentItemDrop\020\307:\022$\n\037k_EMsgS"
    "QLDelayedGrantLeagueDrop\020\310:\022\'\n\"k_EMsgSer"
    "verGCUpdateSpectatorCount\020\311:\022-\n(k_EMsgGC"
    "FantasyPlayerScoreDetailsRequest\020\313:\022.\n)k"
    "_EMsgGCFantasyPlayerScoreDetailsResponse"
    "\020\314:\022\037\n\032k_EMsgGCToGCEmoticonUnlock\020\315:\022\033\n\026"
    "k_EMsgSignOutDraftInfo\020\316:\022(\n#k_EMsgClien"
    "tToGCEmoticonDataRequest\020\317:\022!\n\034k_EMsgGCT"
    "oClientEmoticonData\020\320:\022\?\n:k_EMsgGCPracti"
    "ceLobbyToggleBroadcastChannelCameramanSt"
    "atus\020\321:\022,\n\'k_EMsgGCToGCCreateWeekendTour"
    "neyRequest\020\322:\022-\n(k_EMsgGCToGCCreateWeeke"
    "ndTourneyResponse\020\323:\022(\n#k_EMsgClientToGC"
    "SetAdditionalEquips\020\331:\022(\n#k_EMsgClientTo"
    "GCGetAdditionalEquips\020\332:\0220\n+k_EMsgClient"
    "ToGCGetAdditionalEquipsResponse\020\333:\022(\n#k_"
    "EMsgServerToGCGetAdditionalEquips\020\334:\0220\n+"
    "k_EMsgServerToGCGetAdditionalEquipsRespo"
    "nse\020\335:\022\031\n\024k_EMsgDOTARedeemItem\020\336:\022!\n\034k_E"
    "MsgDOTARedeemItemResponse\020\337:\022(\n#k_EMsgSQ"
    "LGCToGCGrantAllHeroProgress\020\340:\022\'\n\"k_EMsg"
    "ClientToGCGetAllHeroProgress\020\341:\022/\n*k_EMs"
    "gClientToGCGetAllHeroProgressResponse\020\342:"
    "\022#\n\036k_EMsgGCToGCGetServerForClient\020\343:\022+\n"
    "&k_EMsgGCToGCGetServerForClientResponse\020"
    "\344:\022*\n%k_EMsgSQLProcessTournamentGameOutc"
    "ome\020\345:\022\"\n\035k_EMsgSQLGrantTrophyToAccount\020"
    "\346:\022\"\n\035k_EMsgClientToGCGetTrophyList\020\347:\022*"
    "\n%k_EMsgClientToGCGetTrophyListResponse\020"
    "\350:\022\"\n\035k_EMsgGCToClientTrophyAwarded\020\351:\022 "
    "\n\033k_EMsgGCGameBotMatchSignOut\020\352:\0221\n,k_EM"
    "sgGCGameBotMatchSignOutPermissionRequest"
    "\020\353:\022\031\n\024k_EMsgSignOutBotInfo\020\354:\022#\n\036k_EMsg"
    "GCToGCUpdateProfileCards\020\355:\022#\n\036k_EMsgCli"
    "entToGCGetProfileCard\020\356:\022+\n&k_EMsgClient"
    "ToGCGetProfileCardResponse\020\357:\022#\n\036k_EMsgS"
    "erverToGCGetProfileCard\020\360:\022+\n&k_EMsgServ"
    "erToGCGetProfileCardResponse\020\361:\022(\n#k_EMs"
    "gClientToGCSetProfileCardSlots\020\362:\022\'\n\"k_E"
    "MsgGCToClientProfileCardUpdated\020\363:\022\'\n\"k_"
    "EMsgServerToGCVictoryPredictions\020\364:\022-\n(k"
    "_EMsgClientToGCMarkNotificationListRead\020"
    "\366:\022)\n$k_EMsgGCToClientNewNotificationAdd"
    "ed\020\367:\022\'\n\"k_EMsgServerToGCSuspiciousActiv"
    "ity\020\370:\022&\n!k_EMsgSignOutCommunicationSumm"
    "ary\020\371:\022+\n&k_EMsgServerToGCRequestStatus_"
    "Response\020\372:\022%\n k_EMsgClientToGCCreateHer"
    "oStatue\020\373:\022+\n&k_EMsgGCToClientHeroStatue"
    "CreateResult\020\374:\022&\n!k_EMsgGCGCToLANServer"
    "RelayConnect\020\375:\022\'\n\"k_EMsgServerToGCGetIn"
    "gameEventData\020\377:\022/\n*k_EMsgGCToGCUpdateIn"
    "gameEventDataBroadcast\020\200;\022-\n(k_EMsgGCToS"
    "erverIngameEventData_OraclePA\020\201;\022(\n#k_EM"
    "sgServerToGCReportKillSummaries\020\202;\022$\n\037k_"
    "EMsgGCToGCReportKillSummaries\020\203;\022\'\n\"k_EM"
    "sgGCToGCUpdateAssassinMinigame\020\204;\022&\n!k_E"
    "MsgGCToGCFantasySetMatchLeague\020\205;\022*\n%k_E"
    "MsgClientToGCRecordCompendiumStats\020\206;\022(\n"
    "#k_EMsgGCItemEditorRequestLeagueInfo\020\207;\022"
    ")\n$k_EMsgGCItemEditorLeagueInfoResponse\020"
    "\210;\022(\n#k_EMsgGCToGCUpdatePlayerPrediction"
    "s\020\211;\022%\n k_EMsgGCToServerPredictionResult"
    "\020\212;\0220\n+k_EMsgServerToGCSignoutAwardAddit"
    "ionalDrops\020\213;\022,\n\'k_EMsgGCToGCSignoutAwar"
    "dAdditionalDrops\020\214;\022\'\n\"k_EMsgGCToClientE"
    "ventStatusChanged\020\215;\022\035\n\030k_EMsgGCHasItemD"
    "efsQuery\020\216;\022 \n\033k_EMsgGCHasItemDefsRespon"
    "se\020\217;\022,\n\'k_EMsgGCToGCReplayMonitorValida"
    "teReplay\020\221;\022\033\n\026k_EMsgLobbyEventPoints\020\224;"
    "\022%\n k_EMsgGCToGCGetCustomGameTickets\020\225;\022"
    "-\n(k_EMsgGCToGCGetCustomGameTicketsRespo"
    "nse\020\226;\022!\n\034k_EMsgGCToGCCustomGamePlayed\020\230"
    ";\022\'\n\"k_EMsgGCToGCGrantEventPointsToUser\020"
    "\231;\022)\n$k_EMsgGCToGCSetEventMMPanicFlushTi"
    "me\020\232;\022 \n\033k_EMsgGameserverCrashReport\020\233;\022"
    "(\n#k_EMsgGameserverCrashReportResponse\020\234"
    ";\022(\n#k_EMsgGCToClientSteamDatagramTicket"
    "\020\235;\022$\n\037k_EMsgGCToGCGrantEventOwnership\020\236"
    ";\022(\n#k_EMsgGCToGCSendAccountsEventPoints"
    "\020\237;\022*\n%k_EMsgClientToGCRerollPlayerChall"
    "enge\020\240;\022*\n%k_EMsgServerToGCRerollPlayerC"
    "hallenge\020\241;\022*\n%k_EMsgGCRerollPlayerChall"
    "engeResponse\020\242;\022\'\n\"k_EMsgSignOutUpdatePl"
    "ayerChallenge\020\243;\022#\n\036k_EMsgClientToGCSetP"
    "artyLeader\020\244;\022\'\n\"k_EMsgClientToGCCancelP"
    "artyInvites\020\245;\022$\n\037k_EMsgGCToGCMasterRelo"
    "adAccount\020\246;\022-\n(k_EMsgSQLGrantLeagueMatc"
    "hToTicketHolders\020\250;\0220\n+k_EMsgClientToGCS"
    "etAdditionalEquipsResponse\020\251;\022)\n$k_EMsgG"
    "CToGCEmoticonUnlockNoRollback\020\252;\022%\n k_EM"
    "sgGCToGCGetCompendiumFanfare\020\253;\022$\n\037k_EMs"
    "gServerToGCHoldEventPoints\020\254;\022(\n#k_EMsgS"
    "ignOutReleaseEventPointHolds\020\255;\022#\n\036k_EMs"
    "gGCToGCChatNewUserSession\020\256;\022$\n\037k_EMsgCl"
    "ientToGCGetLeagueSeries\020\257;\022,\n\'k_EMsgClie"
    "ntToGCGetLeagueSeriesResponse\020\260;\022/\n*k_EM"
    "sgSQLGCToGCSignoutUpdateLeagueSchedule\020\261"
    ";\022*\n%k_EMsgGCToServerUpdateBroadcastChee"
    "rs\020\262;\022%\n k_EMsgClientToGCApplyGemCombine"
    "r\020\263;\022+\n&k_EMsgClientToGCDOTACreateStatic"
    "Recipe\020\264;\0223\n.k_EMsgClientToGCDOTACreateS"
    "taticRecipeResponse\020\265;\022$\n\037k_EMsgClientTo"
    "GCGetAllHeroOrder\020\266;\022,\n\'k_EMsgClientToGC"
    "GetAllHeroOrderResponse\020\267;\022$\n\037k_EMsgSQLG"
    "CToGCGrantBadgePoints\020\270;\022&\n!k_EMsgGCToGC"
    "GetAccountMatchStatus\020\271;\022.\n)k_EMsgGCToGC"
    "GetAccountMatchStatusResponse\020\272;\022-\n(k_EM"
    "sgGCToGCCheckOwnsEntireEmoticonRange\020\273;\022"
    "5\n0k_EMsgGCToGCCheckOwnsEntireEmoticonRa"
    "ngeResponse\020\274;\022\035\n\030k_EMsgGCDev_GrantWarKi"
    "ll\020\301>\022%\n k_EMsgServerToGCLockCharmTradin"
    "g\020\304>\022\'\n\"k_EMsgClientToGCPlayerStatsReque"
    "st\020\306>\022(\n#k_EMsgGCToClientPlayerStatsResp"
    "onse\020\307>\022#\n\036k_EMsgGCClearPracticeLobbyTea"
    "m\020\310>\022)\n$k_EMsgClientToGCFindTopSourceTVG"
    "ames\020\311>\0221\n,k_EMsgGCToClientFindTopSource"
    "TVGamesResponse\020\312>\022\026\n\021k_EMsgGCLobbyList\020"
    "\313>\022\036\n\031k_EMsgGCLobbyListResponse\020\314>\022$\n\037k_"
    "EMsgGCPlayerStatsMatchSignOut\020\315>\0221\n,k_EM"
    "sgClientToGCCustomGamePlayerCountRequest"
    "\020\316>\0222\n-k_EMsgGCToClientCustomGamePlayerC"
    "ountResponse\020\317>\0221\n,k_EMsgClientToGCSocia"
    "lFeedPostCommentRequest\020\320>\0222\n-k_EMsgGCTo"
    "ClientSocialFeedPostCommentResponse\020\321>\0224"
    "\n/k_EMsgClientToGCCustomGamesFriendsPlay"
    "edRequest\020\322>\0225\n0k_EMsgGCToClientCustomGa"
    "mesFriendsPlayedResponse\020\323>\0223\n.k_EMsgCli"
    "entToGCFriendsPlayedCustomGameRequest\020\324>"
    "\0224\n/k_EMsgGCToClientFriendsPlayedCustomG"
    "ameResponse\020\325>\022*\n%k_EMsgClientToGCFeatur"
    "edHeroesRequest\020\326>\022+\n&k_EMsgGCToClientFe"
    "aturedHeroesResponse\020\327>\022\037\n\032k_EMsgGCTopCu"
    "stomGamesList\020\330>\0222\n-k_EMsgClientToGCSoci"
    "alMatchPostCommentRequest\020\331>\0223\n.k_EMsgGC"
    "ToClientSocialMatchPostCommentResponse\020\332"
    ">\022.\n)k_EMsgClientToGCSocialMatchDetailsR"
    "equest\020\333>\022/\n*k_EMsgGCToClientSocialMatch"
    "DetailsResponse\020\334>\022!\n\034k_EMsgClientToGCSe"
    "tPartyOpen\020\335>\022%\n k_EMsgClientToGCMergePa"
    "rtyInvite\020\336>\022*\n%k_EMsgGCToClientMergeGro"
    "upInviteReply\020\337>\022\'\n\"k_EMsgClientToGCMerg"
    "ePartyResponse\020\340>\022,\n\'k_EMsgGCToClientMer"
    "gePartyResponseReply\020\341>\022(\n#k_EMsgClientT"
    "oGCGetProfileCardStats\020\342>\0220\n+k_EMsgClien"
    "tToGCGetProfileCardStatsResponse\020\343>\022,\n\'k"
    "_EMsgClientToGCTopLeagueMatchesRequest\020\344"
    ">\022,\n\'k_EMsgClientToGCTopFriendMatchesReq"
    "uest\020\345>\022,\n\'k_EMsgGCToClientProfileCardSt"
    "atsUpdated\020\350>\022\"\n\035k_EMsgServerToGCRealtim"
    "eStats\020\351>\022+\n&k_EMsgGCToServerRealtimeSta"
    "tsStartStop\020\352>\022%\n k_EMsgGCToGCGetServers"
    "ForClients\020\355>\022-\n(k_EMsgGCToGCGetServersF"
    "orClientsResponse\020\356>\022&\n!k_EMsgGCPractice"
    "LobbyKickFromTeam\020\357>\022!\n\034k_EMsgDOTAChatGe"
    "tMemberCount\020\360>\022)\n$k_EMsgDOTAChatGetMemb"
    "erCountResponse\020\361>\0221\n,k_EMsgClientToGCSo"
    "cialFeedPostMessageRequest\020\362>\0222\n-k_EMsgG"
    "CToClientSocialFeedPostMessageResponse\020\363"
    ">\022/\n*k_EMsgCustomGameListenServerStarted"
    "Loading\020\364>\022*\n%k_EMsgCustomGameClientFini"
    "shedLoading\020\365>\022/\n*k_EMsgGCPracticeLobbyC"
    "loseBroadcastChannel\020\366>\022&\n!k_EMsgGCStart"
    "FindingMatchResponse\020\367>\022$\n\037k_EMsgSQLGCTo"
    "GCGrantAccountFlag\020\371>\022 \n\033k_EMsgGCToGCGet"
    "AccountFlags\020\372>\022(\n#k_EMsgGCToGCGetAccoun"
    "tFlagsResponse\020\373>\022\034\n\027k_EMsgSignOutWagerS"
    "tats\020\374>\022-\n(k_EMsgGCToClientTopLeagueMatc"
    "hesResponse\020\375>\022-\n(k_EMsgGCToClientTopFri"
    "endMatchesResponse\020\376>\022*\n%k_EMsgClientToG"
    "CMatchesMinimalRequest\020\377>\022+\n&k_EMsgClien"
    "tToGCMatchesMinimalResponse\020\200\?\022&\n!k_EMsg"
    "GCToGCGetProfileBadgePoints\020\201\?\022.\n)k_EMsg"
    "GCToGCGetProfileBadgePointsResponse\020\202\?\022\'"
    "\n\"k_EMsgGCToClientChatRegionsEnabled\020\203\?\022"
    "\035\n\030k_EMsgClientToGCPingData\020\204\?\022(\n#k_EMsg"
    "ServerToGCMatchDetailsRequest\020\205\?\022)\n$k_EM"
    "sgGCToServerMatchDetailsResponse\020\206\?\022%\n k"
    "_EMsgGCToGCEnsureAccountInParty\020\207\?\022-\n(k_"
    "EMsgGCToGCEnsureAccountInPartyResponse\020\210"
    "\?\022&\n!k_EMsgClientToGCGetProfileTickets\020\211"
    "\?\022.\n)k_EMsgClientToGCGetProfileTicketsRe"
    "sponse\020\212\?\022\'\n\"k_EMsgGCToClientMatchGroups"
    "Version\020\213\?\022$\n\037k_EMsgClientToGCH264Unsupp"
    "orted\020\214\?\022\'\n\"k_EMsgClientToGCRequestH264S"
    "upport\020\215\?\022%\n k_EMsgClientToGCGetQuestPro"
    "gress\020\216\?\022-\n(k_EMsgClientToGCGetQuestProg"
    "ressResponse\020\217\?\022\031\n\024k_EMsgSignOutXPCoins\020"
    "\220\?\022#\n\036k_EMsgGCToClientMatchSignedOut\020\221\?\022"
    " \n\033k_EMsgGCGetHeroStatsHistory\020\222\?\022(\n#k_E"
    "MsgGCGetHeroStatsHistoryResponse\020\223\?\022&\n!k"
    "_EMsgClientToGCPrivateChatInvite\020\224\?\022$\n\037k"
    "_EMsgClientToGCPrivateChatKick\020\230\?\022\'\n\"k_E"
    "MsgClientToGCPrivateChatPromote\020\231\?\022&\n!k_"
    "EMsgClientToGCPrivateChatDemote\020\232\?\022(\n#k_"
    "EMsgGCToClientPrivateChatResponse\020\233\?\022+\n&"
    "k_EMsgClientToGCPrivateChatInfoRequest\020\234"
    "\?\022,\n\'k_EMsgGCToClientPrivateChatInfoResp"
    "onse\020\235\?\0222\n-k_EMsgClientToGCLatestConduct"
    "ScorecardRequest\020\237\?\022+\n&k_EMsgClientToGCL"
    "atestConductScorecard\020\240\?\022!\n\034k_EMsgServer"
    "ToGCPostMatchTip\020\241\?\022)\n$k_EMsgServerToGCP"
    "ostMatchTipResponse\020\242\?\022$\n\037k_EMsgClientTo"
    "GCWageringRequest\020\243\?\022%\n k_EMsgGCToClient"
    "WageringResponse\020\244\?\022 \n\033k_EMsgClientToGCM"
    "ysteryItem\020\245\?\022(\n#k_EMsgGCToClientMystery"
    "ItemResponse\020\246\?\022&\n!k_EMsgClientToGCEvent"
    "GoalsRequest\020\247\?\022\'\n\"k_EMsgClientToGCEvent"
    "GoalsResponse\020\250\?\022&\n!k_EMsgClientToGCLeag"
    "uePredictions\020\252\?\022.\n)k_EMsgGCToClientLeag"
    "uePredictionsResponse\020\253\?\022(\n#k_EMsgGCToGC"
    "LeaguePredictionsUpdate\020\254\?\022\'\n\"k_EMsgClie"
    "ntToGCSuspiciousActivity\020\255\?\022&\n!k_EMsgGCT"
    "oGCAddUserToPostGameChat\020\256\?\022)\n$k_EMsgCli"
    "entToGCHasPlayerVotedForMVP\020\257\?\0221\n,k_EMsg"
    "ClientToGCHasPlayerVotedForMVPResponse\020\260"
    "\?\022\037\n\032k_EMsgClientToGCVoteForMVP\020\261\?\022\'\n\"k_"
    "EMsgClientToGCVoteForMVPResponse\020\262\?\022\"\n\035k"
    "_EMsgGCToGCGetEventOwnership\020\263\?\022*\n%k_EMs"
    "gGCToGCGetEventOwnershipResponse\020\264\?\0223\n.k"
    "_EMsgGCToClientAutomatedTournamentStateC"
    "hange\020\265\?\022\'\n\"k_EMsgClientToGCWeekendTourn"
    "eyOpts\020\266\?\022/\n*k_EMsgClientToGCWeekendTour"
    "neyOptsResponse\020\267\?\022(\n#k_EMsgClientToGCWe"
    "ekendTourneyLeave\020\270\?\0220\n+k_EMsgClientToGC"
    "WeekendTourneyLeaveResponse\020\271\?\022)\n$k_EMsg"
    "ClientToGCTeammateStatsRequest\020\274\?\022*\n%k_E"
    "MsgClientToGCTeammateStatsResponse\020\275\?\022\'\n"
    "\"k_EMsgClientToGCGetGiftPermissions\020\276\?\022/"
    "\n*k_EMsgClientToGCGetGiftPermissionsResp"
    "onse\020\277\?\022\"\n\035k_EMsgClientToGCVoteForArcana"
    "\020\300\?\022*\n%k_EMsgClientToGCVoteForArcanaResp"
    "onse\020\301\?\0220\n+k_EMsgClientToGCRequestArcana"
    "VotesRemaining\020\302\?\0228\n3k_EMsgClientToGCReq"
    "uestArcanaVotesRemainingResponse\020\303\?\022&\n!k"
    "_EMsgGCTransferTeamAdminResponse\020\304\?\022\032\n\025k"
    "_EMsgGCChangeTeamSub\020\305\?\022\"\n\035k_EMsgGCChang"
    "eTeamSubResponse\020\306\?\022\035\n\030k_EMsgGCToClientT"
    "eamInfo\020\307\?\022\036\n\031k_EMsgGCToClientTeamsInfo\020"
    "\310\?\022&\n!k_EMsgClientToGCMyTeamInfoRequest\020"
    "\311\?\022)\n$k_EMsgClientToGCRequestEventPointL"
    "og\020\312\?\0221\n,k_EMsgClientToGCRequestEventPoi"
    "ntLogResponse\020\313\?\022$\n\037k_EMsgClientToGCPubl"
    "ishUserStat\020\314\?\022\"\n\035k_EMsgGCToGCSignoutSpe"
    "ndWager\020\315\?\022!\n\034k_EMsgClientToGCRedeemRewa"
    "rd\020\316\?\022)\n$k_EMsgGCToClientRedeemRewardRes"
    "ponse\020\317\?\022\037\n\032k_EMsgGCSubmitLobbyMVPVote\020\320"
    "\?\022\'\n\"k_EMsgGCSubmitLobbyMVPVoteResponse\020"
    "\321\?\022.\n)k_EMsgClientToGCRequestLinaPlaysRe"
    "maining\020\322\?\0226\n1k_EMsgClientToGCRequestLin"
    "aPlaysRemainingResponse\020\323\?\022*\n%k_EMsgClie"
    "ntToGCRequestLinaGameResult\020\324\?\0222\n-k_EMsg"
    "ClientToGCRequestLinaGameResultResponse\020"
    "\325\?\022\'\n\"k_EMsgSignOutCommunityGoalProgress"
    "\020\326\?\022,\n\'k_EMsgGCToClientLobbyMVPNotifyRec"
    "ipient\020\327\?\022$\n\037k_EMsgGCToClientLobbyMVPAwa"
    "rded\020\330\?\022)\n$k_EMsgGCToClientQuestProgress"
    "Updated\020\331\?\022#\n\036k_EMsgGCToClientWageringUp"
    "date\020\332\?\022&\n!k_EMsgGCToClientArcanaVotesUp"
    "date\020\333\?\022\'\n\"k_EMsgClientToGCAddTI6TreePro"
    "gress\020\334\?\022-\n(k_EMsgClientToGCSetSpectator"
    "LobbyDetails\020\335\?\0225\n0k_EMsgClientToGCSetSp"
    "ectatorLobbyDetailsResponse\020\336\?\022)\n$k_EMsg"
    "ClientToGCCreateSpectatorLobby\020\337\?\0221\n,k_E"
    "MsgClientToGCCreateSpectatorLobbyRespons"
    "e\020\340\?\022\'\n\"k_EMsgClientToGCSpectatorLobbyLi"
    "st\020\341\?\022/\n*k_EMsgClientToGCSpectatorLobbyL"
    "istResponse\020\342\?\022$\n\037k_EMsgSpectatorLobbyGa"
    "meDetails\020\343\?\0225\n0k_EMsgServerToGCStartCom"
    "pendiumInGamePredictions\020\344\?\0223\n.k_EMsgSer"
    "verToGCEndCompendiumInGamePredictions\020\345\?"
    "\0226\n1k_EMsgServerToGCCompendiumInGamePred"
    "ictionResults\020\346\?\022:\n5k_EMsgServerToGCClos"
    "eCompendiumInGamePredictionVoting\020\347\?\022\'\n\""
    "k_EMsgClientToGCOpenPlayerCardPack\020\350\?\022/\n"
    "*k_EMsgClientToGCOpenPlayerCardPackRespo"
    "nse\020\351\?\0225\n0k_EMsgClientToGCSelectCompendi"
    "umInGamePrediction\020\352\?\022=\n8k_EMsgClientToG"
    "CSelectCompendiumInGamePredictionRespons"
    "e\020\353\?\0221\n,k_EMsgClientToGCWeekendTourneyGe"
    "tPlayerStats\020\354\?\0229\n4k_EMsgClientToGCWeeke"
    "ndTourneyGetPlayerStatsResponse\020\355\?\022&\n!k_"
    "EMsgClientToGCRecyclePlayerCard\020\356\?\022.\n)k_"
    "EMsgClientToGCRecyclePlayerCardResponse\020"
    "\357\?\022)\n$k_EMsgClientToGCCreatePlayerCardPa"
    "ck\020\360\?\0221\n,k_EMsgClientToGCCreatePlayerCar"
    "dPackResponse\020\361\?\022/\n*k_EMsgClientToGCGetP"
    "layerCardRosterRequest\020\362\?\0220\n+k_EMsgClien"
    "tToGCGetPlayerCardRosterResponse\020\363\?\022/\n*k"
    "_EMsgClientToGCSetPlayerCardRosterReques"
    "t\020\364\?\0220\n+k_EMsgClientToGCSetPlayerCardRos"
    "terResponse\020\365\?\022=\n8k_EMsgServerToGCStartC"
    "ompendiumInGamePredictionsResponse\020\366\?\022B\n"
    "=k_EMsgServerToGCCloseCompendiumInGamePr"
    "edictionVotingResponse\020\367\?\022;\n6k_EMsgServe"
    "rToGCEndCompendiumInGamePredictionsRespo"
    "nse\020\370\?\022>\n9k_EMsgServerToGCCompendiumInGa"
    "mePredictionResultsResponse\020\371\?\022 \n\033k_EMsg"
    "LobbyBattleCupVictory\020\372\?\022\"\n\035k_EMsgGCGetP"
    "layerCardItemInfo\020\373\?\022*\n%k_EMsgGCGetPlaye"
    "rCardItemInfoResponse\020\374\?\022/\n*k_EMsgClient"
    "ToGCRequestSteamDatagramTicket\020\375\?\0227\n2k_E"
    "MsgClientToGCRequestSteamDatagramTicketR"
    "esponse\020\376\?\022,\n\'k_EMsgGCToClientBattlePass"
    "RollupRequest\020\377\?\022-\n(k_EMsgGCToClientBatt"
    "lePassRollupResponse\020\200@\022/\n*k_EMsgClientT"
    "oGCTransferSeasonalMMRRequest\020\201@\0220\n+k_EM"
    "sgClientToGCTransferSeasonalMMRResponse\020"
    "\202@\022+\n&k_EMsgGCToGCPublicChatCommunicatio"
    "nBan\020\203@\022+\n&k_EMsgGCToGCUpdateAccountPubl"
    "icChatBan\020\204@\022!\n\034k_EMsgGCChatReportPublic"
    "Spam\020\205@\022+\n&k_EMsgClientToGCSetPartyBuild"
    "erOptions\020\206@\0223\n.k_EMsgClientToGCSetParty"
    "BuilderOptionsResponse\020\207@\022#\n\036k_EMsgGCToC"
    "lientPlaytestStatus\020\210@\022!\n\034k_EMsgClientTo"
    "GCJoinPlaytest\020\211@\022)\n$k_EMsgClientToGCJoi"
    "nPlaytestResponse\020\212@\022\037\n\032k_EMsgLobbyPlayt"
    "estDetails\020\213@\022\036\n\031k_EMsgDOTASetFavoriteTe"
    "am\020\214@\0220\n+k_EMsgGCToClientBattlePassRollu"
    "pListRequest\020\215@\0221\n,k_EMsgGCToClientBattl"
    "ePassRollupListResponse\020\216@B\005H\001\200\001\000", 27793);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_gcmessages_msgid.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dota_5fgcmessages_5fmsgid_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dota_5fgcmessages_5fmsgid_2eproto {
  StaticDescriptorInitializer_dota_5fgcmessages_5fmsgid_2eproto() {
    protobuf_AddDesc_dota_5fgcmessages_5fmsgid_2eproto();
  }
} static_descriptor_initializer_dota_5fgcmessages_5fmsgid_2eproto_;
const ::google::protobuf::EnumDescriptor* EDOTAGCMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EDOTAGCMsg_descriptor_;
}
bool EDOTAGCMsg_IsValid(int value) {
  switch(value) {
    case 7000:
    case 7001:
    case 7004:
    case 7005:
    case 7009:
    case 7010:
    case 7013:
    case 7014:
    case 7017:
    case 7026:
    case 7027:
    case 7028:
    case 7033:
    case 7034:
    case 7035:
    case 7036:
    case 7038:
    case 7040:
    case 7041:
    case 7042:
    case 7043:
    case 7044:
    case 7046:
    case 7047:
    case 7049:
    case 7055:
    case 7056:
    case 7057:
    case 7060:
    case 7061:
    case 7064:
    case 7065:
    case 7068:
    case 7069:
    case 7070:
    case 7071:
    case 7072:
    case 7073:
    case 7074:
    case 7075:
    case 7076:
    case 7077:
    case 7078:
    case 7079:
    case 7081:
    case 7082:
    case 7083:
    case 7084:
    case 7085:
    case 7086:
    case 7087:
    case 7088:
    case 7089:
    case 7090:
    case 7091:
    case 7092:
    case 7093:
    case 7094:
    case 7095:
    case 7096:
    case 7097:
    case 7098:
    case 7099:
    case 7102:
    case 7104:
    case 7111:
    case 7112:
    case 7113:
    case 7114:
    case 7115:
    case 7116:
    case 7121:
    case 7122:
    case 7123:
    case 7124:
    case 7125:
    case 7126:
    case 7127:
    case 7128:
    case 7129:
    case 7130:
    case 7131:
    case 7132:
    case 7133:
    case 7134:
    case 7141:
    case 7142:
    case 7143:
    case 7144:
    case 7147:
    case 7148:
    case 7149:
    case 7150:
    case 7151:
    case 7152:
    case 7153:
    case 7154:
    case 7155:
    case 7156:
    case 7157:
    case 7158:
    case 7159:
    case 7160:
    case 7161:
    case 7166:
    case 7167:
    case 7168:
    case 7169:
    case 7170:
    case 7171:
    case 7172:
    case 7173:
    case 7174:
    case 7176:
    case 7177:
    case 7178:
    case 7179:
    case 7180:
    case 7182:
    case 7183:
    case 7186:
    case 7188:
    case 7189:
    case 7190:
    case 7191:
    case 7192:
    case 7193:
    case 7194:
    case 7195:
    case 7196:
    case 7197:
    case 7198:
    case 7199:
    case 7200:
    case 7201:
    case 7203:
    case 7204:
    case 7205:
    case 7206:
    case 7207:
    case 7208:
    case 7209:
    case 7210:
    case 7212:
    case 7215:
    case 7216:
    case 7217:
    case 7218:
    case 7219:
    case 7220:
    case 7221:
    case 7222:
    case 7223:
    case 7224:
    case 7225:
    case 7226:
    case 7227:
    case 7228:
    case 7229:
    case 7230:
    case 7231:
    case 7232:
    case 7233:
    case 7234:
    case 7235:
    case 7236:
    case 7237:
    case 7240:
    case 7241:
    case 7242:
    case 7248:
    case 7249:
    case 7251:
    case 7254:
    case 7255:
    case 7256:
    case 7258:
    case 7259:
    case 7261:
    case 7262:
    case 7263:
    case 7264:
    case 7265:
    case 7266:
    case 7267:
    case 7268:
    case 7269:
    case 7270:
    case 7272:
    case 7273:
    case 7274:
    case 7275:
    case 7279:
    case 7280:
    case 7281:
    case 7282:
    case 7283:
    case 7284:
    case 7285:
    case 7286:
    case 7287:
    case 7288:
    case 7289:
    case 7290:
    case 7291:
    case 7292:
    case 7293:
    case 7294:
    case 7297:
    case 7298:
    case 7299:
    case 7300:
    case 7301:
    case 7302:
    case 7303:
    case 7304:
    case 7305:
    case 7306:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7312:
    case 7313:
    case 7314:
    case 7315:
    case 7316:
    case 7317:
    case 7318:
    case 7319:
    case 7320:
    case 7321:
    case 7322:
    case 7323:
    case 7324:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7329:
    case 7330:
    case 7331:
    case 7332:
    case 7333:
    case 7334:
    case 7335:
    case 7336:
    case 7337:
    case 7338:
    case 7339:
    case 7340:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7345:
    case 7346:
    case 7347:
    case 7348:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7357:
    case 7358:
    case 7359:
    case 7360:
    case 7361:
    case 7362:
    case 7363:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7368:
    case 7369:
    case 7370:
    case 7371:
    case 7372:
    case 7373:
    case 7374:
    case 7375:
    case 7376:
    case 7377:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7382:
    case 7383:
    case 7384:
    case 7385:
    case 7386:
    case 7387:
    case 7388:
    case 7390:
    case 7393:
    case 7394:
    case 7395:
    case 7396:
    case 7397:
    case 7398:
    case 7402:
    case 7403:
    case 7404:
    case 7405:
    case 7406:
    case 7407:
    case 7408:
    case 7409:
    case 7410:
    case 7411:
    case 7412:
    case 7413:
    case 7414:
    case 7415:
    case 7416:
    case 7417:
    case 7418:
    case 7420:
    case 7423:
    case 7424:
    case 7425:
    case 7426:
    case 7427:
    case 7428:
    case 7429:
    case 7430:
    case 7431:
    case 7432:
    case 7433:
    case 7434:
    case 7435:
    case 7436:
    case 7437:
    case 7438:
    case 7439:
    case 7440:
    case 7441:
    case 7443:
    case 7444:
    case 7445:
    case 7448:
    case 7449:
    case 7450:
    case 7451:
    case 7452:
    case 7453:
    case 7454:
    case 7455:
    case 7456:
    case 7457:
    case 7458:
    case 7459:
    case 7460:
    case 7461:
    case 7462:
    case 7463:
    case 7464:
    case 7465:
    case 7466:
    case 7467:
    case 7468:
    case 7469:
    case 7470:
    case 7471:
    case 7472:
    case 7473:
    case 7474:
    case 7475:
    case 7476:
    case 7477:
    case 7478:
    case 7480:
    case 7481:
    case 7482:
    case 7483:
    case 7484:
    case 7485:
    case 7486:
    case 7487:
    case 7488:
    case 7489:
    case 7490:
    case 7491:
    case 7492:
    case 7493:
    case 7494:
    case 7495:
    case 7496:
    case 7497:
    case 7499:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7531:
    case 7532:
    case 7533:
    case 7534:
    case 7535:
    case 7536:
    case 7537:
    case 7538:
    case 7539:
    case 7540:
    case 7542:
    case 7543:
    case 7544:
    case 7545:
    case 7546:
    case 7547:
    case 7548:
    case 7549:
    case 7551:
    case 7552:
    case 7553:
    case 7554:
    case 7555:
    case 7556:
    case 7557:
    case 7558:
    case 7559:
    case 7560:
    case 7561:
    case 7562:
    case 7563:
    case 7564:
    case 7565:
    case 7566:
    case 7567:
    case 7569:
    case 7572:
    case 7573:
    case 7574:
    case 7576:
    case 7577:
    case 7578:
    case 7579:
    case 7580:
    case 7581:
    case 7582:
    case 7583:
    case 7584:
    case 7585:
    case 7586:
    case 7587:
    case 7588:
    case 7589:
    case 7590:
    case 7592:
    case 7593:
    case 7594:
    case 7595:
    case 7596:
    case 7597:
    case 7598:
    case 7599:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7608:
    case 7609:
    case 7610:
    case 7611:
    case 7612:
    case 8001:
    case 8004:
    case 8006:
    case 8007:
    case 8008:
    case 8009:
    case 8010:
    case 8011:
    case 8012:
    case 8013:
    case 8014:
    case 8015:
    case 8016:
    case 8017:
    case 8018:
    case 8019:
    case 8020:
    case 8021:
    case 8022:
    case 8023:
    case 8024:
    case 8025:
    case 8026:
    case 8027:
    case 8028:
    case 8029:
    case 8030:
    case 8031:
    case 8032:
    case 8033:
    case 8034:
    case 8035:
    case 8036:
    case 8037:
    case 8040:
    case 8041:
    case 8042:
    case 8045:
    case 8046:
    case 8047:
    case 8048:
    case 8049:
    case 8050:
    case 8051:
    case 8052:
    case 8053:
    case 8054:
    case 8055:
    case 8057:
    case 8058:
    case 8059:
    case 8060:
    case 8061:
    case 8062:
    case 8063:
    case 8064:
    case 8065:
    case 8066:
    case 8067:
    case 8068:
    case 8069:
    case 8070:
    case 8071:
    case 8072:
    case 8073:
    case 8074:
    case 8075:
    case 8076:
    case 8077:
    case 8078:
    case 8079:
    case 8080:
    case 8081:
    case 8082:
    case 8083:
    case 8084:
    case 8088:
    case 8089:
    case 8090:
    case 8091:
    case 8092:
    case 8093:
    case 8095:
    case 8096:
    case 8097:
    case 8098:
    case 8099:
    case 8100:
    case 8101:
    case 8102:
    case 8103:
    case 8104:
    case 8106:
    case 8107:
    case 8108:
    case 8109:
    case 8110:
    case 8111:
    case 8112:
    case 8113:
    case 8114:
    case 8115:
    case 8116:
    case 8117:
    case 8118:
    case 8119:
    case 8120:
    case 8121:
    case 8124:
    case 8125:
    case 8126:
    case 8127:
    case 8128:
    case 8129:
    case 8130:
    case 8131:
    case 8132:
    case 8133:
    case 8134:
    case 8135:
    case 8136:
    case 8137:
    case 8138:
    case 8139:
    case 8140:
    case 8141:
    case 8142:
    case 8143:
    case 8144:
    case 8145:
    case 8146:
    case 8147:
    case 8148:
    case 8149:
    case 8150:
    case 8151:
    case 8152:
    case 8153:
    case 8154:
    case 8155:
    case 8156:
    case 8157:
    case 8158:
    case 8159:
    case 8160:
    case 8161:
    case 8162:
    case 8163:
    case 8164:
    case 8165:
    case 8166:
    case 8167:
    case 8168:
    case 8169:
    case 8170:
    case 8171:
    case 8172:
    case 8173:
    case 8174:
    case 8175:
    case 8176:
    case 8177:
    case 8178:
    case 8179:
    case 8180:
    case 8181:
    case 8182:
    case 8183:
    case 8184:
    case 8185:
    case 8186:
    case 8187:
    case 8188:
    case 8189:
    case 8190:
    case 8191:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8203:
    case 8204:
    case 8205:
    case 8206:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
