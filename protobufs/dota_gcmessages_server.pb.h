// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_server.proto

#ifndef PROTOBUF_dota_5fgcmessages_5fserver_2eproto__INCLUDED
#define PROTOBUF_dota_5fgcmessages_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "dota_gcmessages_common.pb.h"
#include "econ_gcmessages.pb.h"
#include "network_connection.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

class CMsgConnectedPlayers;
class CMsgConnectedPlayers_Player;
class CMsgDOTAAwardEventPoints;
class CMsgDOTAAwardEventPoints_AwardPoints;
class CMsgDOTACNY2015EventPointUsage;
class CMsgDOTACNY2015EventPointUsage_PointUsage;
class CMsgDOTADiretidePrizesRewardedResponse;
class CMsgDOTAFantasyMatch;
class CMsgDOTAFantasyPlayerStats;
class CMsgDOTAFrostivusTimeElapsed;
class CMsgDOTAFrostivusTimeElapsed_User;
class CMsgDOTAGenerateDiretidePrizeList;
class CMsgDOTAGenerateDiretidePrizeListResponse;
class CMsgDOTALiveScoreboardUpdate;
class CMsgDOTALiveScoreboardUpdate_Team;
class CMsgDOTALiveScoreboardUpdate_Team_Player;
class CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility;
class CMsgDOTAPlayerFailedToConnect;
class CMsgDOTARequestBatchPlayerResources;
class CMsgDOTARequestBatchPlayerResourcesResponse;
class CMsgDOTARequestBatchPlayerResourcesResponse_Result;
class CMsgDOTARequestPlayerResources;
class CMsgDOTARequestPlayerResourcesResponse;
class CMsgDOTARewardDiretidePrizes;
class CMsgDOTAUpdateTI4HeroQuest;
class CMsgDOTAUpdateTI4HeroQuest_Player;
class CMsgDismissLootGreevil;
class CMsgDismissLootGreevilResponse;
class CMsgGCBanStatusRequest;
class CMsgGCBanStatusResponse;
class CMsgGCGCToLANServerRelayConnect;
class CMsgGCToRelayConnect;
class CMsgGCToRelayConnectResponse;
class CMsgGCToServerConsoleCommand;
class CMsgGCToServerIngameEventDataOraclePA;
class CMsgGCToServerPingRequest;
class CMsgGCToServerPingResponse;
class CMsgGCToServerPredictionResult;
class CMsgGCToServerPredictionResult_Prediction;
class CMsgGCToServerRealtimeStatsStartStop;
class CMsgGCToServerUpdateBroadcastCheers;
class CMsgGameChatLog;
class CMsgGameChatLog_CChatLine;
class CMsgGameMatchSignOut;
class CMsgGameMatchSignOutPermissionRequest;
class CMsgGameMatchSignOutPermissionResponse;
class CMsgGameMatchSignOut_CAdditionalSignoutMsg;
class CMsgGameMatchSignOut_CCustomGameData;
class CMsgGameMatchSignOut_CSocialFeedMatchEvent;
class CMsgGameMatchSignOut_CTeam;
class CMsgGameMatchSignOut_CTeam_CPlayer;
class CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData;
class CMsgGameMatchSignoutResponse;
class CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg;
class CMsgGameServerGetLoadGame;
class CMsgGameServerGetLoadGameResult;
class CMsgGameServerInfo;
class CMsgGameServerSaveGameResult;
class CMsgGameServerUploadSaveGame;
class CMsgGameserverCrash;
class CMsgLeaverDetected;
class CMsgLeaverDetectedResponse;
class CMsgPoorNetworkConditions;
class CMsgPoorNetworkConditions_Player;
class CMsgResponseTeamFanfare;
class CMsgServerGCUpdateSpectatorCount;
class CMsgServerGetEventPoints;
class CMsgServerGetEventPointsResponse;
class CMsgServerGetEventPointsResponse_Points;
class CMsgServerGrantSurveyPermission;
class CMsgServerGrantSurveyPermissionResponse;
class CMsgServerGrantSurveyPermission_Survey;
class CMsgServerToGCGetAdditionalEquips;
class CMsgServerToGCGetAdditionalEquipsResponse;
class CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips;
class CMsgServerToGCGetIngameEventData;
class CMsgServerToGCGetProfileCard;
class CMsgServerToGCGetProfileCardResponse;
class CMsgServerToGCHoldEventPoints;
class CMsgServerToGCHoldEventPoints_HoldRequest;
class CMsgServerToGCKillSummaries;
class CMsgServerToGCKillSummaries_KillSummary;
class CMsgServerToGCLockCharmTrading;
class CMsgServerToGCMatchConnectionStats;
class CMsgServerToGCMatchConnectionStats_Player;
class CMsgServerToGCRealtimeStats;
class CMsgServerToGCRequestStatus;
class CMsgServerToGCRequestStatus_Response;
class CMsgServerToGCRerollPlayerChallenge;
class CMsgServerToGCSignoutAwardAdditionalDrops;
class CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops;
class CMsgServerToGCVictoryPredictions;
class CMsgServerToGCVictoryPredictions_Record;
class CMsgSignOutAssassinMiniGameInfo;
class CMsgSignOutBotInfo;
class CMsgSignOutBotInfo_CMsgBotSlotDifficulty;
class CMsgSignOutCommunicationSummary;
class CMsgSignOutCommunicationSummary_PlayerCommunication;
class CMsgSignOutDraftInfo;
class CMsgSignOutPlayerStats;
class CMsgSignOutReleaseEventPointHolds;
class CMsgSignOutUpdatePlayerChallenge;
class CMsgSignOutUpdatePlayerChallenge_Challenge;
class CMsgSignOutWagerStats;
class CMsgSignOutWagerStats_Player;
class CMsgSpawnLootGreevil;
class CMsgSuspiciousActivity;
class CMsgTeamFanfare;
class CMsgTournamentItemEvent;
class CMsgTournamentItemEventResponse;
class CSerializedCombatLog;
class CSerializedCombatLog_Dictionary;
class CSerializedCombatLog_Dictionary_DictString;

enum CMsgConnectedPlayers_SendReason {
  CMsgConnectedPlayers_SendReason_INVALID = 0,
  CMsgConnectedPlayers_SendReason_HEARTBEAT = 1,
  CMsgConnectedPlayers_SendReason_GAME_STATE = 2,
  CMsgConnectedPlayers_SendReason_FIRST_BLOOD = 3,
  CMsgConnectedPlayers_SendReason_PLAYER_CONNECTED = 4,
  CMsgConnectedPlayers_SendReason_PLAYER_HERO = 5,
  CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_CONSEQUENCES = 6,
  CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_NOCONSEQUENCES = 7,
  CMsgConnectedPlayers_SendReason_TOWER_STATE = 9,
  CMsgConnectedPlayers_SendReason_GAMESTATE_TIMEOUT = 10,
  CMsgConnectedPlayers_SendReason_MASS_DISCONNECT = 11,
  CMsgConnectedPlayers_SendReason_BARRACKS_STATE = 12,
  CMsgConnectedPlayers_SendReason_KILLS = 13
};
bool CMsgConnectedPlayers_SendReason_IsValid(int value);
const CMsgConnectedPlayers_SendReason CMsgConnectedPlayers_SendReason_SendReason_MIN = CMsgConnectedPlayers_SendReason_INVALID;
const CMsgConnectedPlayers_SendReason CMsgConnectedPlayers_SendReason_SendReason_MAX = CMsgConnectedPlayers_SendReason_KILLS;
const int CMsgConnectedPlayers_SendReason_SendReason_ARRAYSIZE = CMsgConnectedPlayers_SendReason_SendReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgConnectedPlayers_SendReason_descriptor();
inline const ::std::string& CMsgConnectedPlayers_SendReason_Name(CMsgConnectedPlayers_SendReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgConnectedPlayers_SendReason_descriptor(), value);
}
inline bool CMsgConnectedPlayers_SendReason_Parse(
    const ::std::string& name, CMsgConnectedPlayers_SendReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgConnectedPlayers_SendReason>(
    CMsgConnectedPlayers_SendReason_descriptor(), name, value);
}
enum CMsgGameServerInfo_ServerType {
  CMsgGameServerInfo_ServerType_UNSPECIFIED = 0,
  CMsgGameServerInfo_ServerType_GAME = 1,
  CMsgGameServerInfo_ServerType_PROXY = 2
};
bool CMsgGameServerInfo_ServerType_IsValid(int value);
const CMsgGameServerInfo_ServerType CMsgGameServerInfo_ServerType_ServerType_MIN = CMsgGameServerInfo_ServerType_UNSPECIFIED;
const CMsgGameServerInfo_ServerType CMsgGameServerInfo_ServerType_ServerType_MAX = CMsgGameServerInfo_ServerType_PROXY;
const int CMsgGameServerInfo_ServerType_ServerType_ARRAYSIZE = CMsgGameServerInfo_ServerType_ServerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerInfo_ServerType_descriptor();
inline const ::std::string& CMsgGameServerInfo_ServerType_Name(CMsgGameServerInfo_ServerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerInfo_ServerType_descriptor(), value);
}
inline bool CMsgGameServerInfo_ServerType_Parse(
    const ::std::string& name, CMsgGameServerInfo_ServerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerInfo_ServerType>(
    CMsgGameServerInfo_ServerType_descriptor(), name, value);
}
enum CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState {
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNotLearned = 0,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateCooldown = 1,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNeedsMana = 2,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateReady = 3
};
bool CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_IsValid(int value);
const CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MIN = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNotLearned;
const CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MAX = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateReady;
const int CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_ARRAYSIZE = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor();
inline const ::std::string& CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Name(CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor(), value);
}
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Parse(
    const ::std::string& name, CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState>(
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor(), name, value);
}
enum CMsgGameServerSaveGameResult_Result {
  CMsgGameServerSaveGameResult_Result_SaveSuccessful = 0,
  CMsgGameServerSaveGameResult_Result_SessionNotFound = 1,
  CMsgGameServerSaveGameResult_Result_DatabaseError = 2,
  CMsgGameServerSaveGameResult_Result_TooBig = 3
};
bool CMsgGameServerSaveGameResult_Result_IsValid(int value);
const CMsgGameServerSaveGameResult_Result CMsgGameServerSaveGameResult_Result_Result_MIN = CMsgGameServerSaveGameResult_Result_SaveSuccessful;
const CMsgGameServerSaveGameResult_Result CMsgGameServerSaveGameResult_Result_Result_MAX = CMsgGameServerSaveGameResult_Result_TooBig;
const int CMsgGameServerSaveGameResult_Result_Result_ARRAYSIZE = CMsgGameServerSaveGameResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerSaveGameResult_Result_descriptor();
inline const ::std::string& CMsgGameServerSaveGameResult_Result_Name(CMsgGameServerSaveGameResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerSaveGameResult_Result_descriptor(), value);
}
inline bool CMsgGameServerSaveGameResult_Result_Parse(
    const ::std::string& name, CMsgGameServerSaveGameResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerSaveGameResult_Result>(
    CMsgGameServerSaveGameResult_Result_descriptor(), name, value);
}
enum CMsgGCToServerPredictionResult_Prediction_EResult {
  CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_ItemGranted = 1,
  CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_Destroyed = 2
};
bool CMsgGCToServerPredictionResult_Prediction_EResult_IsValid(int value);
const CMsgGCToServerPredictionResult_Prediction_EResult CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MIN = CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_ItemGranted;
const CMsgGCToServerPredictionResult_Prediction_EResult CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MAX = CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_Destroyed;
const int CMsgGCToServerPredictionResult_Prediction_EResult_EResult_ARRAYSIZE = CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCToServerPredictionResult_Prediction_EResult_descriptor();
inline const ::std::string& CMsgGCToServerPredictionResult_Prediction_EResult_Name(CMsgGCToServerPredictionResult_Prediction_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCToServerPredictionResult_Prediction_EResult_descriptor(), value);
}
inline bool CMsgGCToServerPredictionResult_Prediction_EResult_Parse(
    const ::std::string& name, CMsgGCToServerPredictionResult_Prediction_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCToServerPredictionResult_Prediction_EResult>(
    CMsgGCToServerPredictionResult_Prediction_EResult_descriptor(), name, value);
}
enum EPoorNetworkConditionsType {
  k_EPoorNetworkConditions_None = 0,
  k_EPoorNetworkConditions_Unknown = 1,
  k_EPoorNetworkConditions_MassDisconnect = 2,
  k_EPoorNetworkConditions_ExcessBadQosIntervals = 3
};
bool EPoorNetworkConditionsType_IsValid(int value);
const EPoorNetworkConditionsType EPoorNetworkConditionsType_MIN = k_EPoorNetworkConditions_None;
const EPoorNetworkConditionsType EPoorNetworkConditionsType_MAX = k_EPoorNetworkConditions_ExcessBadQosIntervals;
const int EPoorNetworkConditionsType_ARRAYSIZE = EPoorNetworkConditionsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPoorNetworkConditionsType_descriptor();
inline const ::std::string& EPoorNetworkConditionsType_Name(EPoorNetworkConditionsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPoorNetworkConditionsType_descriptor(), value);
}
inline bool EPoorNetworkConditionsType_Parse(
    const ::std::string& name, EPoorNetworkConditionsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPoorNetworkConditionsType>(
    EPoorNetworkConditionsType_descriptor(), name, value);
}
enum EAbilityAbuseType {
  k_EAbilityAbuseType_None = 0,
  k_EAbilityAbuseType_Io_Relocate = 1,
  k_EAbilityAbuseType_Chen_Test_Of_Faith = 2,
  k_EAbilityAbuseType_Bane_Nightmare = 3,
  k_EAbilityAbuseType_Bloodseeker_Bloodrage = 4,
  k_EAbilityAbuseType_Outworld_Astral_Imprisonment = 5,
  k_EAbilityAbuseType_Shadow_Demon_Disruption = 6
};
bool EAbilityAbuseType_IsValid(int value);
const EAbilityAbuseType EAbilityAbuseType_MIN = k_EAbilityAbuseType_None;
const EAbilityAbuseType EAbilityAbuseType_MAX = k_EAbilityAbuseType_Shadow_Demon_Disruption;
const int EAbilityAbuseType_ARRAYSIZE = EAbilityAbuseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAbilityAbuseType_descriptor();
inline const ::std::string& EAbilityAbuseType_Name(EAbilityAbuseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAbilityAbuseType_descriptor(), value);
}
inline bool EAbilityAbuseType_Parse(
    const ::std::string& name, EAbilityAbuseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAbilityAbuseType>(
    EAbilityAbuseType_descriptor(), name, value);
}
enum EIntentionalFeedingType {
  k_EIntentionalFeedingType_None = 0,
  k_EIntentionalFeedingType_ExcessiveDeaths = 1,
  k_EIntentionalFeedingType_MultipleCourierPurchases = 2,
  k_EIntentionalFeedingType_MultipleCourierDeaths = 4,
  k_EIntentionalFeedingType_LowActivity = 8,
  k_EIntentionalFeedingType_LowDamage = 16,
  k_EIntentionalFeedingType_HighUnspentGold = 32,
  k_EIntentionalFeedingType_SoldTooMuchItemValue = 64,
  k_EIntentionalFeedingType_TooManyDroppedItems = 128,
  k_EIntentionalFeedingType_ExcessiveTowerDamage = 256
};
bool EIntentionalFeedingType_IsValid(int value);
const EIntentionalFeedingType EIntentionalFeedingType_MIN = k_EIntentionalFeedingType_None;
const EIntentionalFeedingType EIntentionalFeedingType_MAX = k_EIntentionalFeedingType_ExcessiveTowerDamage;
const int EIntentionalFeedingType_ARRAYSIZE = EIntentionalFeedingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EIntentionalFeedingType_descriptor();
inline const ::std::string& EIntentionalFeedingType_Name(EIntentionalFeedingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EIntentionalFeedingType_descriptor(), value);
}
inline bool EIntentionalFeedingType_Parse(
    const ::std::string& name, EIntentionalFeedingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EIntentionalFeedingType>(
    EIntentionalFeedingType_descriptor(), name, value);
}
enum ESuspiciousActivity {
  k_ESuspiciousActivity_VAC_MultipleInstances = 1,
  k_ESuspiciousActivity_IntentionalFeeding = 100,
  k_ESuspiciousActivity_SuspectedBotFarming = 101
};
bool ESuspiciousActivity_IsValid(int value);
const ESuspiciousActivity ESuspiciousActivity_MIN = k_ESuspiciousActivity_VAC_MultipleInstances;
const ESuspiciousActivity ESuspiciousActivity_MAX = k_ESuspiciousActivity_SuspectedBotFarming;
const int ESuspiciousActivity_ARRAYSIZE = ESuspiciousActivity_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESuspiciousActivity_descriptor();
inline const ::std::string& ESuspiciousActivity_Name(ESuspiciousActivity value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESuspiciousActivity_descriptor(), value);
}
inline bool ESuspiciousActivity_Parse(
    const ::std::string& name, ESuspiciousActivity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESuspiciousActivity>(
    ESuspiciousActivity_descriptor(), name, value);
}
enum ESuspiciousBuildType {
  k_ESuspiciousBuildType_None = 0,
  k_ESuspiciousBuildType_NoGoldSpent = 1,
  k_ESuspiciousBuildType_NoItems = 2,
  k_ESuspiciousBuildType_NoSignificantItems = 3,
  k_ESuspiciousBuildType_TooManyBoots = 4,
  k_ESuspiciousBuildType_Bot1 = 101,
  k_ESuspiciousBuildType_Bot2 = 102,
  k_ESuspiciousBuildType_Bot3 = 103,
  k_ESuspiciousBuildType_Bot4 = 104,
  k_ESuspiciousBuildType_Bot5 = 105
};
bool ESuspiciousBuildType_IsValid(int value);
const ESuspiciousBuildType ESuspiciousBuildType_MIN = k_ESuspiciousBuildType_None;
const ESuspiciousBuildType ESuspiciousBuildType_MAX = k_ESuspiciousBuildType_Bot5;
const int ESuspiciousBuildType_ARRAYSIZE = ESuspiciousBuildType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESuspiciousBuildType_descriptor();
inline const ::std::string& ESuspiciousBuildType_Name(ESuspiciousBuildType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESuspiciousBuildType_descriptor(), value);
}
inline bool ESuspiciousBuildType_Parse(
    const ::std::string& name, ESuspiciousBuildType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESuspiciousBuildType>(
    ESuspiciousBuildType_descriptor(), name, value);
}
// ===================================================================

class CMsgSpawnLootGreevil : public ::google::protobuf::Message {
 public:
  CMsgSpawnLootGreevil();
  virtual ~CMsgSpawnLootGreevil();

  CMsgSpawnLootGreevil(const CMsgSpawnLootGreevil& from);

  inline CMsgSpawnLootGreevil& operator=(const CMsgSpawnLootGreevil& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSpawnLootGreevil& default_instance();

  void Swap(CMsgSpawnLootGreevil* other);

  // implements Message ----------------------------------------------

  inline CMsgSpawnLootGreevil* New() const { return New(NULL); }

  CMsgSpawnLootGreevil* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSpawnLootGreevil& from);
  void MergeFrom(const CMsgSpawnLootGreevil& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSpawnLootGreevil* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool rare = 1;
  bool has_rare() const;
  void clear_rare();
  static const int kRareFieldNumber = 1;
  bool rare() const;
  void set_rare(bool value);

  // @@protoc_insertion_point(class_scope:CMsgSpawnLootGreevil)
 private:
  inline void set_has_rare();
  inline void clear_has_rare();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool rare_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSpawnLootGreevil* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDismissLootGreevil : public ::google::protobuf::Message {
 public:
  CMsgDismissLootGreevil();
  virtual ~CMsgDismissLootGreevil();

  CMsgDismissLootGreevil(const CMsgDismissLootGreevil& from);

  inline CMsgDismissLootGreevil& operator=(const CMsgDismissLootGreevil& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDismissLootGreevil& default_instance();

  void Swap(CMsgDismissLootGreevil* other);

  // implements Message ----------------------------------------------

  inline CMsgDismissLootGreevil* New() const { return New(NULL); }

  CMsgDismissLootGreevil* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDismissLootGreevil& from);
  void MergeFrom(const CMsgDismissLootGreevil& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDismissLootGreevil* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool killed = 2;
  bool has_killed() const;
  void clear_killed();
  static const int kKilledFieldNumber = 2;
  bool killed() const;
  void set_killed(bool value);

  // optional bool rare = 3;
  bool has_rare() const;
  void clear_rare();
  static const int kRareFieldNumber = 3;
  bool rare() const;
  void set_rare(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDismissLootGreevil)
 private:
  inline void set_has_killed();
  inline void clear_has_killed();
  inline void set_has_rare();
  inline void clear_has_rare();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool killed_;
  bool rare_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDismissLootGreevil* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDismissLootGreevilResponse : public ::google::protobuf::Message {
 public:
  CMsgDismissLootGreevilResponse();
  virtual ~CMsgDismissLootGreevilResponse();

  CMsgDismissLootGreevilResponse(const CMsgDismissLootGreevilResponse& from);

  inline CMsgDismissLootGreevilResponse& operator=(const CMsgDismissLootGreevilResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDismissLootGreevilResponse& default_instance();

  void Swap(CMsgDismissLootGreevilResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDismissLootGreevilResponse* New() const { return New(NULL); }

  CMsgDismissLootGreevilResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDismissLootGreevilResponse& from);
  void MergeFrom(const CMsgDismissLootGreevilResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDismissLootGreevilResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgDismissLootGreevilResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDismissLootGreevilResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPoorNetworkConditions_Player : public ::google::protobuf::Message {
 public:
  CMsgPoorNetworkConditions_Player();
  virtual ~CMsgPoorNetworkConditions_Player();

  CMsgPoorNetworkConditions_Player(const CMsgPoorNetworkConditions_Player& from);

  inline CMsgPoorNetworkConditions_Player& operator=(const CMsgPoorNetworkConditions_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPoorNetworkConditions_Player& default_instance();

  void Swap(CMsgPoorNetworkConditions_Player* other);

  // implements Message ----------------------------------------------

  inline CMsgPoorNetworkConditions_Player* New() const { return New(NULL); }

  CMsgPoorNetworkConditions_Player* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPoorNetworkConditions_Player& from);
  void MergeFrom(const CMsgPoorNetworkConditions_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPoorNetworkConditions_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional .ENetworkDisconnectionReason disconnect_reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  bool has_disconnect_reason() const;
  void clear_disconnect_reason();
  static const int kDisconnectReasonFieldNumber = 2;
  ::ENetworkDisconnectionReason disconnect_reason() const;
  void set_disconnect_reason(::ENetworkDisconnectionReason value);

  // optional uint32 num_bad_intervals = 3;
  bool has_num_bad_intervals() const;
  void clear_num_bad_intervals();
  static const int kNumBadIntervalsFieldNumber = 3;
  ::google::protobuf::uint32 num_bad_intervals() const;
  void set_num_bad_intervals(::google::protobuf::uint32 value);

  // optional uint32 peak_loss_pct = 4;
  bool has_peak_loss_pct() const;
  void clear_peak_loss_pct();
  static const int kPeakLossPctFieldNumber = 4;
  ::google::protobuf::uint32 peak_loss_pct() const;
  void set_peak_loss_pct(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPoorNetworkConditions.Player)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_disconnect_reason();
  inline void clear_has_disconnect_reason();
  inline void set_has_num_bad_intervals();
  inline void clear_has_num_bad_intervals();
  inline void set_has_peak_loss_pct();
  inline void clear_has_peak_loss_pct();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  int disconnect_reason_;
  ::google::protobuf::uint32 num_bad_intervals_;
  ::google::protobuf::uint32 peak_loss_pct_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgPoorNetworkConditions_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPoorNetworkConditions : public ::google::protobuf::Message {
 public:
  CMsgPoorNetworkConditions();
  virtual ~CMsgPoorNetworkConditions();

  CMsgPoorNetworkConditions(const CMsgPoorNetworkConditions& from);

  inline CMsgPoorNetworkConditions& operator=(const CMsgPoorNetworkConditions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPoorNetworkConditions& default_instance();

  void Swap(CMsgPoorNetworkConditions* other);

  // implements Message ----------------------------------------------

  inline CMsgPoorNetworkConditions* New() const { return New(NULL); }

  CMsgPoorNetworkConditions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPoorNetworkConditions& from);
  void MergeFrom(const CMsgPoorNetworkConditions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPoorNetworkConditions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPoorNetworkConditions_Player Player;

  // accessors -------------------------------------------------------

  // optional .EPoorNetworkConditionsType detection_type = 1 [default = k_EPoorNetworkConditions_None];
  bool has_detection_type() const;
  void clear_detection_type();
  static const int kDetectionTypeFieldNumber = 1;
  ::EPoorNetworkConditionsType detection_type() const;
  void set_detection_type(::EPoorNetworkConditionsType value);

  // repeated .CMsgPoorNetworkConditions.Player players = 2;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  const ::CMsgPoorNetworkConditions_Player& players(int index) const;
  ::CMsgPoorNetworkConditions_Player* mutable_players(int index);
  ::CMsgPoorNetworkConditions_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgPoorNetworkConditions_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgPoorNetworkConditions_Player >&
      players() const;

  // @@protoc_insertion_point(class_scope:CMsgPoorNetworkConditions)
 private:
  inline void set_has_detection_type();
  inline void clear_has_detection_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgPoorNetworkConditions_Player > players_;
  int detection_type_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgPoorNetworkConditions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameserverCrash : public ::google::protobuf::Message {
 public:
  CMsgGameserverCrash();
  virtual ~CMsgGameserverCrash();

  CMsgGameserverCrash(const CMsgGameserverCrash& from);

  inline CMsgGameserverCrash& operator=(const CMsgGameserverCrash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameserverCrash& default_instance();

  void Swap(CMsgGameserverCrash* other);

  // implements Message ----------------------------------------------

  inline CMsgGameserverCrash* New() const { return New(NULL); }

  CMsgGameserverCrash* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameserverCrash& from);
  void MergeFrom(const CMsgGameserverCrash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameserverCrash* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional fixed64 lobby_id = 2;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 2;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional .DOTA_GameState game_state = 3 [default = DOTA_GAMERULES_STATE_INIT];
  bool has_game_state() const;
  void clear_game_state();
  static const int kGameStateFieldNumber = 3;
  ::DOTA_GameState game_state() const;
  void set_game_state(::DOTA_GameState value);

  // optional fixed32 sentinel_save_time = 4;
  bool has_sentinel_save_time() const;
  void clear_sentinel_save_time();
  static const int kSentinelSaveTimeFieldNumber = 4;
  ::google::protobuf::uint32 sentinel_save_time() const;
  void set_sentinel_save_time(::google::protobuf::uint32 value);

  // optional fixed64 custom_game_id = 11;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 11;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional fixed64 server_steam_id = 5;
  bool has_server_steam_id() const;
  void clear_server_steam_id();
  static const int kServerSteamIdFieldNumber = 5;
  ::google::protobuf::uint64 server_steam_id() const;
  void set_server_steam_id(::google::protobuf::uint64 value);

  // optional fixed32 server_public_ip_addr = 6;
  bool has_server_public_ip_addr() const;
  void clear_server_public_ip_addr();
  static const int kServerPublicIpAddrFieldNumber = 6;
  ::google::protobuf::uint32 server_public_ip_addr() const;
  void set_server_public_ip_addr(::google::protobuf::uint32 value);

  // optional uint32 server_port = 7;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 7;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 server_cluster = 8;
  bool has_server_cluster() const;
  void clear_server_cluster();
  static const int kServerClusterFieldNumber = 8;
  ::google::protobuf::uint32 server_cluster() const;
  void set_server_cluster(::google::protobuf::uint32 value);

  // optional uint32 pid = 9;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 9;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 engine = 10;
  bool has_engine() const;
  void clear_engine();
  static const int kEngineFieldNumber = 10;
  ::google::protobuf::uint32 engine() const;
  void set_engine(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameserverCrash)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_game_state();
  inline void clear_has_game_state();
  inline void set_has_sentinel_save_time();
  inline void clear_has_sentinel_save_time();
  inline void set_has_custom_game_id();
  inline void clear_has_custom_game_id();
  inline void set_has_server_steam_id();
  inline void clear_has_server_steam_id();
  inline void set_has_server_public_ip_addr();
  inline void clear_has_server_public_ip_addr();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_server_cluster();
  inline void clear_has_server_cluster();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_engine();
  inline void clear_has_engine();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint64 lobby_id_;
  int game_state_;
  ::google::protobuf::uint32 sentinel_save_time_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint64 server_steam_id_;
  ::google::protobuf::uint32 server_public_ip_addr_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 server_cluster_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 engine_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameserverCrash* default_instance_;
};
// -------------------------------------------------------------------

class CMsgConnectedPlayers_Player : public ::google::protobuf::Message {
 public:
  CMsgConnectedPlayers_Player();
  virtual ~CMsgConnectedPlayers_Player();

  CMsgConnectedPlayers_Player(const CMsgConnectedPlayers_Player& from);

  inline CMsgConnectedPlayers_Player& operator=(const CMsgConnectedPlayers_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgConnectedPlayers_Player& default_instance();

  void Swap(CMsgConnectedPlayers_Player* other);

  // implements Message ----------------------------------------------

  inline CMsgConnectedPlayers_Player* New() const { return New(NULL); }

  CMsgConnectedPlayers_Player* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgConnectedPlayers_Player& from);
  void MergeFrom(const CMsgConnectedPlayers_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgConnectedPlayers_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional .CMsgLeaverState leaver_state = 3;
  bool has_leaver_state() const;
  void clear_leaver_state();
  static const int kLeaverStateFieldNumber = 3;
  const ::CMsgLeaverState& leaver_state() const;
  ::CMsgLeaverState* mutable_leaver_state();
  ::CMsgLeaverState* release_leaver_state();
  void set_allocated_leaver_state(::CMsgLeaverState* leaver_state);

  // optional .ENetworkDisconnectionReason disconnect_reason = 4 [default = NETWORK_DISCONNECT_INVALID];
  bool has_disconnect_reason() const;
  void clear_disconnect_reason();
  static const int kDisconnectReasonFieldNumber = 4;
  ::ENetworkDisconnectionReason disconnect_reason() const;
  void set_disconnect_reason(::ENetworkDisconnectionReason value);

  // @@protoc_insertion_point(class_scope:CMsgConnectedPlayers.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_leaver_state();
  inline void clear_has_leaver_state();
  inline void set_has_disconnect_reason();
  inline void clear_has_disconnect_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::CMsgLeaverState* leaver_state_;
  ::google::protobuf::uint32 hero_id_;
  int disconnect_reason_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgConnectedPlayers_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgConnectedPlayers : public ::google::protobuf::Message {
 public:
  CMsgConnectedPlayers();
  virtual ~CMsgConnectedPlayers();

  CMsgConnectedPlayers(const CMsgConnectedPlayers& from);

  inline CMsgConnectedPlayers& operator=(const CMsgConnectedPlayers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgConnectedPlayers& default_instance();

  void Swap(CMsgConnectedPlayers* other);

  // implements Message ----------------------------------------------

  inline CMsgConnectedPlayers* New() const { return New(NULL); }

  CMsgConnectedPlayers* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgConnectedPlayers& from);
  void MergeFrom(const CMsgConnectedPlayers& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgConnectedPlayers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgConnectedPlayers_Player Player;

  typedef CMsgConnectedPlayers_SendReason SendReason;
  static const SendReason INVALID = CMsgConnectedPlayers_SendReason_INVALID;
  static const SendReason HEARTBEAT = CMsgConnectedPlayers_SendReason_HEARTBEAT;
  static const SendReason GAME_STATE = CMsgConnectedPlayers_SendReason_GAME_STATE;
  static const SendReason FIRST_BLOOD = CMsgConnectedPlayers_SendReason_FIRST_BLOOD;
  static const SendReason PLAYER_CONNECTED = CMsgConnectedPlayers_SendReason_PLAYER_CONNECTED;
  static const SendReason PLAYER_HERO = CMsgConnectedPlayers_SendReason_PLAYER_HERO;
  static const SendReason PLAYER_DISCONNECTED_CONSEQUENCES = CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_CONSEQUENCES;
  static const SendReason PLAYER_DISCONNECTED_NOCONSEQUENCES = CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_NOCONSEQUENCES;
  static const SendReason TOWER_STATE = CMsgConnectedPlayers_SendReason_TOWER_STATE;
  static const SendReason GAMESTATE_TIMEOUT = CMsgConnectedPlayers_SendReason_GAMESTATE_TIMEOUT;
  static const SendReason MASS_DISCONNECT = CMsgConnectedPlayers_SendReason_MASS_DISCONNECT;
  static const SendReason BARRACKS_STATE = CMsgConnectedPlayers_SendReason_BARRACKS_STATE;
  static const SendReason KILLS = CMsgConnectedPlayers_SendReason_KILLS;
  static inline bool SendReason_IsValid(int value) {
    return CMsgConnectedPlayers_SendReason_IsValid(value);
  }
  static const SendReason SendReason_MIN =
    CMsgConnectedPlayers_SendReason_SendReason_MIN;
  static const SendReason SendReason_MAX =
    CMsgConnectedPlayers_SendReason_SendReason_MAX;
  static const int SendReason_ARRAYSIZE =
    CMsgConnectedPlayers_SendReason_SendReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SendReason_descriptor() {
    return CMsgConnectedPlayers_SendReason_descriptor();
  }
  static inline const ::std::string& SendReason_Name(SendReason value) {
    return CMsgConnectedPlayers_SendReason_Name(value);
  }
  static inline bool SendReason_Parse(const ::std::string& name,
      SendReason* value) {
    return CMsgConnectedPlayers_SendReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgConnectedPlayers.Player connected_players = 1;
  int connected_players_size() const;
  void clear_connected_players();
  static const int kConnectedPlayersFieldNumber = 1;
  const ::CMsgConnectedPlayers_Player& connected_players(int index) const;
  ::CMsgConnectedPlayers_Player* mutable_connected_players(int index);
  ::CMsgConnectedPlayers_Player* add_connected_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >*
      mutable_connected_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >&
      connected_players() const;

  // repeated .CMsgConnectedPlayers.Player disconnected_players = 7;
  int disconnected_players_size() const;
  void clear_disconnected_players();
  static const int kDisconnectedPlayersFieldNumber = 7;
  const ::CMsgConnectedPlayers_Player& disconnected_players(int index) const;
  ::CMsgConnectedPlayers_Player* mutable_disconnected_players(int index);
  ::CMsgConnectedPlayers_Player* add_disconnected_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >*
      mutable_disconnected_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >&
      disconnected_players() const;

  // optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];
  bool has_game_state() const;
  void clear_game_state();
  static const int kGameStateFieldNumber = 2;
  ::DOTA_GameState game_state() const;
  void set_game_state(::DOTA_GameState value);

  // optional uint32 tower_state = 4;
  bool has_tower_state() const;
  void clear_tower_state();
  static const int kTowerStateFieldNumber = 4;
  ::google::protobuf::uint32 tower_state() const;
  void set_tower_state(::google::protobuf::uint32 value);

  // optional bool first_blood_happened = 6;
  bool has_first_blood_happened() const;
  void clear_first_blood_happened();
  static const int kFirstBloodHappenedFieldNumber = 6;
  bool first_blood_happened() const;
  void set_first_blood_happened(bool value);

  // optional bool legacy_mass_disconnect = 9;
  bool has_legacy_mass_disconnect() const;
  void clear_legacy_mass_disconnect();
  static const int kLegacyMassDisconnectFieldNumber = 9;
  bool legacy_mass_disconnect() const;
  void set_legacy_mass_disconnect(bool value);

  // optional .CMsgPoorNetworkConditions poor_network_conditions = 10;
  bool has_poor_network_conditions() const;
  void clear_poor_network_conditions();
  static const int kPoorNetworkConditionsFieldNumber = 10;
  const ::CMsgPoorNetworkConditions& poor_network_conditions() const;
  ::CMsgPoorNetworkConditions* mutable_poor_network_conditions();
  ::CMsgPoorNetworkConditions* release_poor_network_conditions();
  void set_allocated_poor_network_conditions(::CMsgPoorNetworkConditions* poor_network_conditions);

  // optional .CMsgConnectedPlayers.SendReason send_reason = 8 [default = INVALID];
  bool has_send_reason() const;
  void clear_send_reason();
  static const int kSendReasonFieldNumber = 8;
  ::CMsgConnectedPlayers_SendReason send_reason() const;
  void set_send_reason(::CMsgConnectedPlayers_SendReason value);

  // optional uint32 radiant_kills = 11;
  bool has_radiant_kills() const;
  void clear_radiant_kills();
  static const int kRadiantKillsFieldNumber = 11;
  ::google::protobuf::uint32 radiant_kills() const;
  void set_radiant_kills(::google::protobuf::uint32 value);

  // optional uint32 dire_kills = 12;
  bool has_dire_kills() const;
  void clear_dire_kills();
  static const int kDireKillsFieldNumber = 12;
  ::google::protobuf::uint32 dire_kills() const;
  void set_dire_kills(::google::protobuf::uint32 value);

  // optional uint32 barracks_state = 13;
  bool has_barracks_state() const;
  void clear_barracks_state();
  static const int kBarracksStateFieldNumber = 13;
  ::google::protobuf::uint32 barracks_state() const;
  void set_barracks_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgConnectedPlayers)
 private:
  inline void set_has_game_state();
  inline void clear_has_game_state();
  inline void set_has_tower_state();
  inline void clear_has_tower_state();
  inline void set_has_first_blood_happened();
  inline void clear_has_first_blood_happened();
  inline void set_has_legacy_mass_disconnect();
  inline void clear_has_legacy_mass_disconnect();
  inline void set_has_poor_network_conditions();
  inline void clear_has_poor_network_conditions();
  inline void set_has_send_reason();
  inline void clear_has_send_reason();
  inline void set_has_radiant_kills();
  inline void clear_has_radiant_kills();
  inline void set_has_dire_kills();
  inline void clear_has_dire_kills();
  inline void set_has_barracks_state();
  inline void clear_has_barracks_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player > connected_players_;
  ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player > disconnected_players_;
  int game_state_;
  ::google::protobuf::uint32 tower_state_;
  bool first_blood_happened_;
  bool legacy_mass_disconnect_;
  int send_reason_;
  ::CMsgPoorNetworkConditions* poor_network_conditions_;
  ::google::protobuf::uint32 radiant_kills_;
  ::google::protobuf::uint32 dire_kills_;
  ::google::protobuf::uint32 barracks_state_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgConnectedPlayers* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerInfo : public ::google::protobuf::Message {
 public:
  CMsgGameServerInfo();
  virtual ~CMsgGameServerInfo();

  CMsgGameServerInfo(const CMsgGameServerInfo& from);

  inline CMsgGameServerInfo& operator=(const CMsgGameServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerInfo& default_instance();

  void Swap(CMsgGameServerInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgGameServerInfo* New() const { return New(NULL); }

  CMsgGameServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerInfo& from);
  void MergeFrom(const CMsgGameServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameServerInfo_ServerType ServerType;
  static const ServerType UNSPECIFIED = CMsgGameServerInfo_ServerType_UNSPECIFIED;
  static const ServerType GAME = CMsgGameServerInfo_ServerType_GAME;
  static const ServerType PROXY = CMsgGameServerInfo_ServerType_PROXY;
  static inline bool ServerType_IsValid(int value) {
    return CMsgGameServerInfo_ServerType_IsValid(value);
  }
  static const ServerType ServerType_MIN =
    CMsgGameServerInfo_ServerType_ServerType_MIN;
  static const ServerType ServerType_MAX =
    CMsgGameServerInfo_ServerType_ServerType_MAX;
  static const int ServerType_ARRAYSIZE =
    CMsgGameServerInfo_ServerType_ServerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ServerType_descriptor() {
    return CMsgGameServerInfo_ServerType_descriptor();
  }
  static inline const ::std::string& ServerType_Name(ServerType value) {
    return CMsgGameServerInfo_ServerType_Name(value);
  }
  static inline bool ServerType_Parse(const ::std::string& name,
      ServerType* value) {
    return CMsgGameServerInfo_ServerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional fixed32 server_public_ip_addr = 1;
  bool has_server_public_ip_addr() const;
  void clear_server_public_ip_addr();
  static const int kServerPublicIpAddrFieldNumber = 1;
  ::google::protobuf::uint32 server_public_ip_addr() const;
  void set_server_public_ip_addr(::google::protobuf::uint32 value);

  // optional fixed32 server_private_ip_addr = 2;
  bool has_server_private_ip_addr() const;
  void clear_server_private_ip_addr();
  static const int kServerPrivateIpAddrFieldNumber = 2;
  ::google::protobuf::uint32 server_private_ip_addr() const;
  void set_server_private_ip_addr(::google::protobuf::uint32 value);

  // optional uint32 server_port = 3;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 server_tv_port = 4;
  bool has_server_tv_port() const;
  void clear_server_tv_port();
  static const int kServerTvPortFieldNumber = 4;
  ::google::protobuf::uint32 server_tv_port() const;
  void set_server_tv_port(::google::protobuf::uint32 value);

  // optional uint32 assigned_server_tv_port = 22;
  bool has_assigned_server_tv_port() const;
  void clear_assigned_server_tv_port();
  static const int kAssignedServerTvPortFieldNumber = 22;
  ::google::protobuf::uint32 assigned_server_tv_port() const;
  void set_assigned_server_tv_port(::google::protobuf::uint32 value);

  // optional uint32 server_steamdatagram_port = 21;
  bool has_server_steamdatagram_port() const;
  void clear_server_steamdatagram_port();
  static const int kServerSteamdatagramPortFieldNumber = 21;
  ::google::protobuf::uint32 server_steamdatagram_port() const;
  void set_server_steamdatagram_port(::google::protobuf::uint32 value);

  // optional string server_key = 5;
  bool has_server_key() const;
  void clear_server_key();
  static const int kServerKeyFieldNumber = 5;
  const ::std::string& server_key() const;
  void set_server_key(const ::std::string& value);
  void set_server_key(const char* value);
  void set_server_key(const char* value, size_t size);
  ::std::string* mutable_server_key();
  ::std::string* release_server_key();
  void set_allocated_server_key(::std::string* server_key);

  // optional bool server_hibernation = 6;
  bool has_server_hibernation() const;
  void clear_server_hibernation();
  static const int kServerHibernationFieldNumber = 6;
  bool server_hibernation() const;
  void set_server_hibernation(bool value);

  // optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
  bool has_server_type() const;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 7;
  ::CMsgGameServerInfo_ServerType server_type() const;
  void set_server_type(::CMsgGameServerInfo_ServerType value);

  // optional uint32 server_region = 8;
  bool has_server_region() const;
  void clear_server_region();
  static const int kServerRegionFieldNumber = 8;
  ::google::protobuf::uint32 server_region() const;
  void set_server_region(::google::protobuf::uint32 value);

  // optional float server_loadavg = 9;
  bool has_server_loadavg() const;
  void clear_server_loadavg();
  static const int kServerLoadavgFieldNumber = 9;
  float server_loadavg() const;
  void set_server_loadavg(float value);

  // optional float server_tv_broadcast_time = 10;
  bool has_server_tv_broadcast_time() const;
  void clear_server_tv_broadcast_time();
  static const int kServerTvBroadcastTimeFieldNumber = 10;
  float server_tv_broadcast_time() const;
  void set_server_tv_broadcast_time(float value);

  // optional float server_game_time = 11;
  bool has_server_game_time() const;
  void clear_server_game_time();
  static const int kServerGameTimeFieldNumber = 11;
  float server_game_time() const;
  void set_server_game_time(float value);

  // optional fixed64 server_relay_connected_steam_id = 12;
  bool has_server_relay_connected_steam_id() const;
  void clear_server_relay_connected_steam_id();
  static const int kServerRelayConnectedSteamIdFieldNumber = 12;
  ::google::protobuf::uint64 server_relay_connected_steam_id() const;
  void set_server_relay_connected_steam_id(::google::protobuf::uint64 value);

  // optional uint32 relay_slots_max = 13;
  bool has_relay_slots_max() const;
  void clear_relay_slots_max();
  static const int kRelaySlotsMaxFieldNumber = 13;
  ::google::protobuf::uint32 relay_slots_max() const;
  void set_relay_slots_max(::google::protobuf::uint32 value);

  // optional int32 relays_connected = 14;
  bool has_relays_connected() const;
  void clear_relays_connected();
  static const int kRelaysConnectedFieldNumber = 14;
  ::google::protobuf::int32 relays_connected() const;
  void set_relays_connected(::google::protobuf::int32 value);

  // optional int32 relay_clients_connected = 15;
  bool has_relay_clients_connected() const;
  void clear_relay_clients_connected();
  static const int kRelayClientsConnectedFieldNumber = 15;
  ::google::protobuf::int32 relay_clients_connected() const;
  void set_relay_clients_connected(::google::protobuf::int32 value);

  // optional fixed64 relayed_game_server_steam_id = 16;
  bool has_relayed_game_server_steam_id() const;
  void clear_relayed_game_server_steam_id();
  static const int kRelayedGameServerSteamIdFieldNumber = 16;
  ::google::protobuf::uint64 relayed_game_server_steam_id() const;
  void set_relayed_game_server_steam_id(::google::protobuf::uint64 value);

  // optional uint32 parent_relay_count = 17;
  bool has_parent_relay_count() const;
  void clear_parent_relay_count();
  static const int kParentRelayCountFieldNumber = 17;
  ::google::protobuf::uint32 parent_relay_count() const;
  void set_parent_relay_count(::google::protobuf::uint32 value);

  // optional fixed64 tv_secret_code = 18;
  bool has_tv_secret_code() const;
  void clear_tv_secret_code();
  static const int kTvSecretCodeFieldNumber = 18;
  ::google::protobuf::uint64 tv_secret_code() const;
  void set_tv_secret_code(::google::protobuf::uint64 value);

  // optional uint32 server_version = 19;
  bool has_server_version() const;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 19;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // optional uint32 server_cluster = 20;
  bool has_server_cluster() const;
  void clear_server_cluster();
  static const int kServerClusterFieldNumber = 20;
  ::google::protobuf::uint32 server_cluster() const;
  void set_server_cluster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerInfo)
 private:
  inline void set_has_server_public_ip_addr();
  inline void clear_has_server_public_ip_addr();
  inline void set_has_server_private_ip_addr();
  inline void clear_has_server_private_ip_addr();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_server_tv_port();
  inline void clear_has_server_tv_port();
  inline void set_has_assigned_server_tv_port();
  inline void clear_has_assigned_server_tv_port();
  inline void set_has_server_steamdatagram_port();
  inline void clear_has_server_steamdatagram_port();
  inline void set_has_server_key();
  inline void clear_has_server_key();
  inline void set_has_server_hibernation();
  inline void clear_has_server_hibernation();
  inline void set_has_server_type();
  inline void clear_has_server_type();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_server_loadavg();
  inline void clear_has_server_loadavg();
  inline void set_has_server_tv_broadcast_time();
  inline void clear_has_server_tv_broadcast_time();
  inline void set_has_server_game_time();
  inline void clear_has_server_game_time();
  inline void set_has_server_relay_connected_steam_id();
  inline void clear_has_server_relay_connected_steam_id();
  inline void set_has_relay_slots_max();
  inline void clear_has_relay_slots_max();
  inline void set_has_relays_connected();
  inline void clear_has_relays_connected();
  inline void set_has_relay_clients_connected();
  inline void clear_has_relay_clients_connected();
  inline void set_has_relayed_game_server_steam_id();
  inline void clear_has_relayed_game_server_steam_id();
  inline void set_has_parent_relay_count();
  inline void clear_has_parent_relay_count();
  inline void set_has_tv_secret_code();
  inline void clear_has_tv_secret_code();
  inline void set_has_server_version();
  inline void clear_has_server_version();
  inline void set_has_server_cluster();
  inline void clear_has_server_cluster();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_public_ip_addr_;
  ::google::protobuf::uint32 server_private_ip_addr_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 server_tv_port_;
  ::google::protobuf::uint32 assigned_server_tv_port_;
  ::google::protobuf::uint32 server_steamdatagram_port_;
  ::google::protobuf::internal::ArenaStringPtr server_key_;
  bool server_hibernation_;
  int server_type_;
  ::google::protobuf::uint32 server_region_;
  float server_loadavg_;
  float server_tv_broadcast_time_;
  float server_game_time_;
  ::google::protobuf::uint64 server_relay_connected_steam_id_;
  ::google::protobuf::uint32 relay_slots_max_;
  ::google::protobuf::int32 relays_connected_;
  ::google::protobuf::uint64 relayed_game_server_steam_id_;
  ::google::protobuf::int32 relay_clients_connected_;
  ::google::protobuf::uint32 parent_relay_count_;
  ::google::protobuf::uint64 tv_secret_code_;
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::uint32 server_cluster_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaverDetected : public ::google::protobuf::Message {
 public:
  CMsgLeaverDetected();
  virtual ~CMsgLeaverDetected();

  CMsgLeaverDetected(const CMsgLeaverDetected& from);

  inline CMsgLeaverDetected& operator=(const CMsgLeaverDetected& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaverDetected& default_instance();

  void Swap(CMsgLeaverDetected* other);

  // implements Message ----------------------------------------------

  inline CMsgLeaverDetected* New() const { return New(NULL); }

  CMsgLeaverDetected* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaverDetected& from);
  void MergeFrom(const CMsgLeaverDetected& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgLeaverDetected* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional .DOTALeaverStatus_t leaver_status = 2 [default = DOTA_LEAVER_NONE];
  bool has_leaver_status() const;
  void clear_leaver_status();
  static const int kLeaverStatusFieldNumber = 2;
  ::DOTALeaverStatus_t leaver_status() const;
  void set_leaver_status(::DOTALeaverStatus_t value);

  // optional .CMsgLeaverState leaver_state = 4;
  bool has_leaver_state() const;
  void clear_leaver_state();
  static const int kLeaverStateFieldNumber = 4;
  const ::CMsgLeaverState& leaver_state() const;
  ::CMsgLeaverState* mutable_leaver_state();
  ::CMsgLeaverState* release_leaver_state();
  void set_allocated_leaver_state(::CMsgLeaverState* leaver_state);

  // optional uint32 server_cluster = 5;
  bool has_server_cluster() const;
  void clear_server_cluster();
  static const int kServerClusterFieldNumber = 5;
  ::google::protobuf::uint32 server_cluster() const;
  void set_server_cluster(::google::protobuf::uint32 value);

  // optional .ENetworkDisconnectionReason disconnect_reason = 6 [default = NETWORK_DISCONNECT_INVALID];
  bool has_disconnect_reason() const;
  void clear_disconnect_reason();
  static const int kDisconnectReasonFieldNumber = 6;
  ::ENetworkDisconnectionReason disconnect_reason() const;
  void set_disconnect_reason(::ENetworkDisconnectionReason value);

  // optional .CMsgPoorNetworkConditions poor_network_conditions = 7;
  bool has_poor_network_conditions() const;
  void clear_poor_network_conditions();
  static const int kPoorNetworkConditionsFieldNumber = 7;
  const ::CMsgPoorNetworkConditions& poor_network_conditions() const;
  ::CMsgPoorNetworkConditions* mutable_poor_network_conditions();
  ::CMsgPoorNetworkConditions* release_poor_network_conditions();
  void set_allocated_poor_network_conditions(::CMsgPoorNetworkConditions* poor_network_conditions);

  // @@protoc_insertion_point(class_scope:CMsgLeaverDetected)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_leaver_status();
  inline void clear_has_leaver_status();
  inline void set_has_leaver_state();
  inline void clear_has_leaver_state();
  inline void set_has_server_cluster();
  inline void clear_has_server_cluster();
  inline void set_has_disconnect_reason();
  inline void clear_has_disconnect_reason();
  inline void set_has_poor_network_conditions();
  inline void clear_has_poor_network_conditions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::CMsgLeaverState* leaver_state_;
  int leaver_status_;
  ::google::protobuf::uint32 server_cluster_;
  ::CMsgPoorNetworkConditions* poor_network_conditions_;
  int disconnect_reason_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaverDetected* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaverDetectedResponse : public ::google::protobuf::Message {
 public:
  CMsgLeaverDetectedResponse();
  virtual ~CMsgLeaverDetectedResponse();

  CMsgLeaverDetectedResponse(const CMsgLeaverDetectedResponse& from);

  inline CMsgLeaverDetectedResponse& operator=(const CMsgLeaverDetectedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaverDetectedResponse& default_instance();

  void Swap(CMsgLeaverDetectedResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgLeaverDetectedResponse* New() const { return New(NULL); }

  CMsgLeaverDetectedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaverDetectedResponse& from);
  void MergeFrom(const CMsgLeaverDetectedResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgLeaverDetectedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgLeaverDetectedResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaverDetectedResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFantasyPlayerStats : public ::google::protobuf::Message {
 public:
  CMsgDOTAFantasyPlayerStats();
  virtual ~CMsgDOTAFantasyPlayerStats();

  CMsgDOTAFantasyPlayerStats(const CMsgDOTAFantasyPlayerStats& from);

  inline CMsgDOTAFantasyPlayerStats& operator=(const CMsgDOTAFantasyPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFantasyPlayerStats& default_instance();

  void Swap(CMsgDOTAFantasyPlayerStats* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFantasyPlayerStats* New() const { return New(NULL); }

  CMsgDOTAFantasyPlayerStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFantasyPlayerStats& from);
  void MergeFrom(const CMsgDOTAFantasyPlayerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAFantasyPlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_account_id = 1;
  bool has_player_account_id() const;
  void clear_player_account_id();
  static const int kPlayerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 player_account_id() const;
  void set_player_account_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional bool match_completed = 3;
  bool has_match_completed() const;
  void clear_match_completed();
  static const int kMatchCompletedFieldNumber = 3;
  bool match_completed() const;
  void set_match_completed(bool value);

  // optional uint32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 kills = 5;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 5;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 6;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 6;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 7;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 7;
  ::google::protobuf::uint32 assists() const;
  void set_assists(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 8;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 8;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 9;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 9;
  ::google::protobuf::uint32 denies() const;
  void set_denies(::google::protobuf::uint32 value);

  // optional float gpm = 10;
  bool has_gpm() const;
  void clear_gpm();
  static const int kGpmFieldNumber = 10;
  float gpm() const;
  void set_gpm(float value);

  // optional float xppm = 11;
  bool has_xppm() const;
  void clear_xppm();
  static const int kXppmFieldNumber = 11;
  float xppm() const;
  void set_xppm(float value);

  // optional float stuns = 12;
  bool has_stuns() const;
  void clear_stuns();
  static const int kStunsFieldNumber = 12;
  float stuns() const;
  void set_stuns(float value);

  // optional float healing = 13;
  bool has_healing() const;
  void clear_healing();
  static const int kHealingFieldNumber = 13;
  float healing() const;
  void set_healing(float value);

  // optional uint32 tower_kills = 14;
  bool has_tower_kills() const;
  void clear_tower_kills();
  static const int kTowerKillsFieldNumber = 14;
  ::google::protobuf::uint32 tower_kills() const;
  void set_tower_kills(::google::protobuf::uint32 value);

  // optional uint32 roshan_kills = 15;
  bool has_roshan_kills() const;
  void clear_roshan_kills();
  static const int kRoshanKillsFieldNumber = 15;
  ::google::protobuf::uint32 roshan_kills() const;
  void set_roshan_kills(::google::protobuf::uint32 value);

  // optional uint32 team_id = 16;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 16;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 17;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 17;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 delay = 18;
  bool has_delay() const;
  void clear_delay();
  static const int kDelayFieldNumber = 18;
  ::google::protobuf::uint32 delay() const;
  void set_delay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerStats)
 private:
  inline void set_has_player_account_id();
  inline void clear_has_player_account_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_match_completed();
  inline void clear_has_match_completed();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_assists();
  inline void clear_has_assists();
  inline void set_has_last_hits();
  inline void clear_has_last_hits();
  inline void set_has_denies();
  inline void clear_has_denies();
  inline void set_has_gpm();
  inline void clear_has_gpm();
  inline void set_has_xppm();
  inline void clear_has_xppm();
  inline void set_has_stuns();
  inline void clear_has_stuns();
  inline void set_has_healing();
  inline void clear_has_healing();
  inline void set_has_tower_kills();
  inline void clear_has_tower_kills();
  inline void set_has_roshan_kills();
  inline void clear_has_roshan_kills();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_delay();
  inline void clear_has_delay();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 player_account_id_;
  bool match_completed_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  float gpm_;
  float xppm_;
  float stuns_;
  float healing_;
  ::google::protobuf::uint32 tower_kills_;
  ::google::protobuf::uint32 roshan_kills_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 delay_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFantasyPlayerStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFantasyMatch : public ::google::protobuf::Message {
 public:
  CMsgDOTAFantasyMatch();
  virtual ~CMsgDOTAFantasyMatch();

  CMsgDOTAFantasyMatch(const CMsgDOTAFantasyMatch& from);

  inline CMsgDOTAFantasyMatch& operator=(const CMsgDOTAFantasyMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFantasyMatch& default_instance();

  void Swap(CMsgDOTAFantasyMatch* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFantasyMatch* New() const { return New(NULL); }

  CMsgDOTAFantasyMatch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFantasyMatch& from);
  void MergeFrom(const CMsgDOTAFantasyMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAFantasyMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 2;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 series_id = 3;
  bool has_series_id() const;
  void clear_series_id();
  static const int kSeriesIdFieldNumber = 3;
  ::google::protobuf::uint32 series_id() const;
  void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 series_type = 5;
  bool has_series_type() const;
  void clear_series_type();
  static const int kSeriesTypeFieldNumber = 5;
  ::google::protobuf::uint32 series_type() const;
  void set_series_type(::google::protobuf::uint32 value);

  // optional uint32 team_1 = 6;
  bool has_team_1() const;
  void clear_team_1();
  static const int kTeam1FieldNumber = 6;
  ::google::protobuf::uint32 team_1() const;
  void set_team_1(::google::protobuf::uint32 value);

  // optional uint32 team_2 = 7;
  bool has_team_2() const;
  void clear_team_2();
  static const int kTeam2FieldNumber = 7;
  ::google::protobuf::uint32 team_2() const;
  void set_team_2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMatch)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_series_type();
  inline void clear_has_series_type();
  inline void set_has_team_1();
  inline void clear_has_team_1();
  inline void set_has_team_2();
  inline void clear_has_team_2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 series_type_;
  ::google::protobuf::uint32 team_1_;
  ::google::protobuf::uint32 team_2_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFantasyMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCRealtimeStats : public ::google::protobuf::Message {
 public:
  CMsgServerToGCRealtimeStats();
  virtual ~CMsgServerToGCRealtimeStats();

  CMsgServerToGCRealtimeStats(const CMsgServerToGCRealtimeStats& from);

  inline CMsgServerToGCRealtimeStats& operator=(const CMsgServerToGCRealtimeStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCRealtimeStats& default_instance();

  void Swap(CMsgServerToGCRealtimeStats* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRealtimeStats* New() const { return New(NULL); }

  CMsgServerToGCRealtimeStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCRealtimeStats& from);
  void MergeFrom(const CMsgServerToGCRealtimeStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCRealtimeStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgDOTARealtimeGameStatsTerse delayed = 1;
  bool has_delayed() const;
  void clear_delayed();
  static const int kDelayedFieldNumber = 1;
  const ::CMsgDOTARealtimeGameStatsTerse& delayed() const;
  ::CMsgDOTARealtimeGameStatsTerse* mutable_delayed();
  ::CMsgDOTARealtimeGameStatsTerse* release_delayed();
  void set_allocated_delayed(::CMsgDOTARealtimeGameStatsTerse* delayed);

  // optional .CMsgDOTARealtimeGameStats current = 2;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 2;
  const ::CMsgDOTARealtimeGameStats& current() const;
  ::CMsgDOTARealtimeGameStats* mutable_current();
  ::CMsgDOTARealtimeGameStats* release_current();
  void set_allocated_current(::CMsgDOTARealtimeGameStats* current);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCRealtimeStats)
 private:
  inline void set_has_delayed();
  inline void clear_has_delayed();
  inline void set_has_current();
  inline void clear_has_current();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTARealtimeGameStatsTerse* delayed_;
  ::CMsgDOTARealtimeGameStats* current_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCRealtimeStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerRealtimeStatsStartStop : public ::google::protobuf::Message {
 public:
  CMsgGCToServerRealtimeStatsStartStop();
  virtual ~CMsgGCToServerRealtimeStatsStartStop();

  CMsgGCToServerRealtimeStatsStartStop(const CMsgGCToServerRealtimeStatsStartStop& from);

  inline CMsgGCToServerRealtimeStatsStartStop& operator=(const CMsgGCToServerRealtimeStatsStartStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerRealtimeStatsStartStop& default_instance();

  void Swap(CMsgGCToServerRealtimeStatsStartStop* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerRealtimeStatsStartStop* New() const { return New(NULL); }

  CMsgGCToServerRealtimeStatsStartStop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerRealtimeStatsStartStop& from);
  void MergeFrom(const CMsgGCToServerRealtimeStatsStartStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerRealtimeStatsStartStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool delayed = 1;
  bool has_delayed() const;
  void clear_delayed();
  static const int kDelayedFieldNumber = 1;
  bool delayed() const;
  void set_delayed(bool value);

  // optional bool current = 2;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 2;
  bool current() const;
  void set_current(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCToServerRealtimeStatsStartStop)
 private:
  inline void set_has_delayed();
  inline void clear_has_delayed();
  inline void set_has_current();
  inline void clear_has_current();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool delayed_;
  bool current_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerRealtimeStatsStartStop* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData();
  virtual ~CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData();

  CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from);

  inline CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& operator=(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& default_instance();

  void Swap(CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* New() const { return New(NULL); }

  CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from);
  void MergeFrom(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dota_team = 1;
  bool has_dota_team() const;
  void clear_dota_team();
  static const int kDotaTeamFieldNumber = 1;
  ::google::protobuf::uint32 dota_team() const;
  void set_dota_team(::google::protobuf::uint32 value);

  // optional bool winner = 2;
  bool has_winner() const;
  void clear_winner();
  static const int kWinnerFieldNumber = 2;
  bool winner() const;
  void set_winner(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData)
 private:
  inline void set_has_dota_team();
  inline void clear_has_dota_team();
  inline void set_has_winner();
  inline void clear_has_winner();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dota_team_;
  bool winner_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CTeam_CPlayer : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut_CTeam_CPlayer();
  virtual ~CMsgGameMatchSignOut_CTeam_CPlayer();

  CMsgGameMatchSignOut_CTeam_CPlayer(const CMsgGameMatchSignOut_CTeam_CPlayer& from);

  inline CMsgGameMatchSignOut_CTeam_CPlayer& operator=(const CMsgGameMatchSignOut_CTeam_CPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut_CTeam_CPlayer& default_instance();

  void Swap(CMsgGameMatchSignOut_CTeam_CPlayer* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CTeam_CPlayer* New() const { return New(NULL); }

  CMsgGameMatchSignOut_CTeam_CPlayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut_CTeam_CPlayer& from);
  void MergeFrom(const CMsgGameMatchSignOut_CTeam_CPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOut_CTeam_CPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData CCustomGameData;

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // repeated uint32 items = 4;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 4;
  ::google::protobuf::uint32 items(int index) const;
  void set_items(int index, ::google::protobuf::uint32 value);
  void add_items(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      items() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_items();

  // optional uint32 gold = 5;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 5;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 kills = 6;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 6;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 7;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 7;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 8;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 8;
  ::google::protobuf::uint32 assists() const;
  void set_assists(::google::protobuf::uint32 value);

  // optional uint32 leaver_status = 9;
  bool has_leaver_status() const;
  void clear_leaver_status();
  static const int kLeaverStatusFieldNumber = 9;
  ::google::protobuf::uint32 leaver_status() const;
  void set_leaver_status(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 10;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 10;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 11;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 11;
  ::google::protobuf::uint32 denies() const;
  void set_denies(::google::protobuf::uint32 value);

  // optional uint32 gold_per_min = 12;
  bool has_gold_per_min() const;
  void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 12;
  ::google::protobuf::uint32 gold_per_min() const;
  void set_gold_per_min(::google::protobuf::uint32 value);

  // optional uint32 xp_per_minute = 13;
  bool has_xp_per_minute() const;
  void clear_xp_per_minute();
  static const int kXpPerMinuteFieldNumber = 13;
  ::google::protobuf::uint32 xp_per_minute() const;
  void set_xp_per_minute(::google::protobuf::uint32 value);

  // optional uint32 gold_spent = 14;
  bool has_gold_spent() const;
  void clear_gold_spent();
  static const int kGoldSpentFieldNumber = 14;
  ::google::protobuf::uint32 gold_spent() const;
  void set_gold_spent(::google::protobuf::uint32 value);

  // optional uint32 level = 15;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 15;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 hero_damage = 16;
  bool has_hero_damage() const;
  void clear_hero_damage();
  static const int kHeroDamageFieldNumber = 16;
  ::google::protobuf::uint32 hero_damage() const;
  void set_hero_damage(::google::protobuf::uint32 value);

  // optional uint32 tower_damage = 17;
  bool has_tower_damage() const;
  void clear_tower_damage();
  static const int kTowerDamageFieldNumber = 17;
  ::google::protobuf::uint32 tower_damage() const;
  void set_tower_damage(::google::protobuf::uint32 value);

  // optional uint32 hero_healing = 18;
  bool has_hero_healing() const;
  void clear_hero_healing();
  static const int kHeroHealingFieldNumber = 18;
  ::google::protobuf::uint32 hero_healing() const;
  void set_hero_healing(::google::protobuf::uint32 value);

  // optional uint32 time_last_seen = 19;
  bool has_time_last_seen() const;
  void clear_time_last_seen();
  static const int kTimeLastSeenFieldNumber = 19;
  ::google::protobuf::uint32 time_last_seen() const;
  void set_time_last_seen(::google::protobuf::uint32 value);

  // optional uint32 support_ability_value = 20;
  bool has_support_ability_value() const;
  void clear_support_ability_value();
  static const int kSupportAbilityValueFieldNumber = 20;
  ::google::protobuf::uint32 support_ability_value() const;
  void set_support_ability_value(::google::protobuf::uint32 value);

  // optional uint64 party_id = 21;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 21;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional float scaled_kills = 24;
  bool has_scaled_kills() const;
  void clear_scaled_kills();
  static const int kScaledKillsFieldNumber = 24;
  float scaled_kills() const;
  void set_scaled_kills(float value);

  // optional float scaled_deaths = 25;
  bool has_scaled_deaths() const;
  void clear_scaled_deaths();
  static const int kScaledDeathsFieldNumber = 25;
  float scaled_deaths() const;
  void set_scaled_deaths(float value);

  // optional float scaled_assists = 26;
  bool has_scaled_assists() const;
  void clear_scaled_assists();
  static const int kScaledAssistsFieldNumber = 26;
  float scaled_assists() const;
  void set_scaled_assists(float value);

  // optional uint32 claimed_farm_gold = 27;
  bool has_claimed_farm_gold() const;
  void clear_claimed_farm_gold();
  static const int kClaimedFarmGoldFieldNumber = 27;
  ::google::protobuf::uint32 claimed_farm_gold() const;
  void set_claimed_farm_gold(::google::protobuf::uint32 value);

  // optional uint32 support_gold = 28;
  bool has_support_gold() const;
  void clear_support_gold();
  static const int kSupportGoldFieldNumber = 28;
  ::google::protobuf::uint32 support_gold() const;
  void set_support_gold(::google::protobuf::uint32 value);

  // optional uint32 claimed_denies = 29;
  bool has_claimed_denies() const;
  void clear_claimed_denies();
  static const int kClaimedDeniesFieldNumber = 29;
  ::google::protobuf::uint32 claimed_denies() const;
  void set_claimed_denies(::google::protobuf::uint32 value);

  // optional uint32 claimed_misses = 30;
  bool has_claimed_misses() const;
  void clear_claimed_misses();
  static const int kClaimedMissesFieldNumber = 30;
  ::google::protobuf::uint32 claimed_misses() const;
  void set_claimed_misses(::google::protobuf::uint32 value);

  // optional uint32 misses = 31;
  bool has_misses() const;
  void clear_misses();
  static const int kMissesFieldNumber = 31;
  ::google::protobuf::uint32 misses() const;
  void set_misses(::google::protobuf::uint32 value);

  // repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 32;
  int ability_upgrades_size() const;
  void clear_ability_upgrades();
  static const int kAbilityUpgradesFieldNumber = 32;
  const ::CMatchPlayerAbilityUpgrade& ability_upgrades(int index) const;
  ::CMatchPlayerAbilityUpgrade* mutable_ability_upgrades(int index);
  ::CMatchPlayerAbilityUpgrade* add_ability_upgrades();
  ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >*
      mutable_ability_upgrades();
  const ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >&
      ability_upgrades() const;

  // repeated .CMatchAdditionalUnitInventory additional_units_inventory = 33;
  int additional_units_inventory_size() const;
  void clear_additional_units_inventory();
  static const int kAdditionalUnitsInventoryFieldNumber = 33;
  const ::CMatchAdditionalUnitInventory& additional_units_inventory(int index) const;
  ::CMatchAdditionalUnitInventory* mutable_additional_units_inventory(int index);
  ::CMatchAdditionalUnitInventory* add_additional_units_inventory();
  ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >*
      mutable_additional_units_inventory();
  const ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >&
      additional_units_inventory() const;

  // optional uint32 net_worth = 34;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 34;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // optional .CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData custom_game_data = 35;
  bool has_custom_game_data() const;
  void clear_custom_game_data();
  static const int kCustomGameDataFieldNumber = 35;
  const ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& custom_game_data() const;
  ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* mutable_custom_game_data();
  ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* release_custom_game_data();
  void set_allocated_custom_game_data(::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* custom_game_data);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut.CTeam.CPlayer)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_assists();
  inline void clear_has_assists();
  inline void set_has_leaver_status();
  inline void clear_has_leaver_status();
  inline void set_has_last_hits();
  inline void clear_has_last_hits();
  inline void set_has_denies();
  inline void clear_has_denies();
  inline void set_has_gold_per_min();
  inline void clear_has_gold_per_min();
  inline void set_has_xp_per_minute();
  inline void clear_has_xp_per_minute();
  inline void set_has_gold_spent();
  inline void clear_has_gold_spent();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hero_damage();
  inline void clear_has_hero_damage();
  inline void set_has_tower_damage();
  inline void clear_has_tower_damage();
  inline void set_has_hero_healing();
  inline void clear_has_hero_healing();
  inline void set_has_time_last_seen();
  inline void clear_has_time_last_seen();
  inline void set_has_support_ability_value();
  inline void clear_has_support_ability_value();
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_scaled_kills();
  inline void clear_has_scaled_kills();
  inline void set_has_scaled_deaths();
  inline void clear_has_scaled_deaths();
  inline void set_has_scaled_assists();
  inline void clear_has_scaled_assists();
  inline void set_has_claimed_farm_gold();
  inline void clear_has_claimed_farm_gold();
  inline void set_has_support_gold();
  inline void clear_has_support_gold();
  inline void set_has_claimed_denies();
  inline void clear_has_claimed_denies();
  inline void set_has_claimed_misses();
  inline void clear_has_claimed_misses();
  inline void set_has_misses();
  inline void clear_has_misses();
  inline void set_has_net_worth();
  inline void clear_has_net_worth();
  inline void set_has_custom_game_data();
  inline void clear_has_custom_game_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > items_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 leaver_status_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  ::google::protobuf::uint32 gold_per_min_;
  ::google::protobuf::uint32 xp_per_minute_;
  ::google::protobuf::uint32 gold_spent_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hero_damage_;
  ::google::protobuf::uint32 tower_damage_;
  ::google::protobuf::uint32 hero_healing_;
  ::google::protobuf::uint32 time_last_seen_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint32 support_ability_value_;
  float scaled_kills_;
  float scaled_deaths_;
  float scaled_assists_;
  ::google::protobuf::uint32 claimed_farm_gold_;
  ::google::protobuf::uint32 support_gold_;
  ::google::protobuf::uint32 claimed_denies_;
  ::google::protobuf::uint32 claimed_misses_;
  ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade > ability_upgrades_;
  ::google::protobuf::uint32 misses_;
  ::google::protobuf::uint32 net_worth_;
  ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory > additional_units_inventory_;
  ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* custom_game_data_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut_CTeam_CPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CTeam : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut_CTeam();
  virtual ~CMsgGameMatchSignOut_CTeam();

  CMsgGameMatchSignOut_CTeam(const CMsgGameMatchSignOut_CTeam& from);

  inline CMsgGameMatchSignOut_CTeam& operator=(const CMsgGameMatchSignOut_CTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut_CTeam& default_instance();

  void Swap(CMsgGameMatchSignOut_CTeam* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CTeam* New() const { return New(NULL); }

  CMsgGameMatchSignOut_CTeam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut_CTeam& from);
  void MergeFrom(const CMsgGameMatchSignOut_CTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOut_CTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignOut_CTeam_CPlayer CPlayer;

  // accessors -------------------------------------------------------

  // repeated .CMsgGameMatchSignOut.CTeam.CPlayer players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::CMsgGameMatchSignOut_CTeam_CPlayer& players(int index) const;
  ::CMsgGameMatchSignOut_CTeam_CPlayer* mutable_players(int index);
  ::CMsgGameMatchSignOut_CTeam_CPlayer* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam_CPlayer >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam_CPlayer >&
      players() const;

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut.CTeam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam_CPlayer > players_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut_CTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CAdditionalSignoutMsg : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut_CAdditionalSignoutMsg();
  virtual ~CMsgGameMatchSignOut_CAdditionalSignoutMsg();

  CMsgGameMatchSignOut_CAdditionalSignoutMsg(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from);

  inline CMsgGameMatchSignOut_CAdditionalSignoutMsg& operator=(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut_CAdditionalSignoutMsg& default_instance();

  void Swap(CMsgGameMatchSignOut_CAdditionalSignoutMsg* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CAdditionalSignoutMsg* New() const { return New(NULL); }

  CMsgGameMatchSignOut_CAdditionalSignoutMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from);
  void MergeFrom(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOut_CAdditionalSignoutMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional bytes contents = 2;
  bool has_contents() const;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut.CAdditionalSignoutMsg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_contents();
  inline void clear_has_contents();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut_CAdditionalSignoutMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CSocialFeedMatchEvent : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut_CSocialFeedMatchEvent();
  virtual ~CMsgGameMatchSignOut_CSocialFeedMatchEvent();

  CMsgGameMatchSignOut_CSocialFeedMatchEvent(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from);

  inline CMsgGameMatchSignOut_CSocialFeedMatchEvent& operator=(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut_CSocialFeedMatchEvent& default_instance();

  void Swap(CMsgGameMatchSignOut_CSocialFeedMatchEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CSocialFeedMatchEvent* New() const { return New(NULL); }

  CMsgGameMatchSignOut_CSocialFeedMatchEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from);
  void MergeFrom(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOut_CSocialFeedMatchEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 event_type = 3;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 3;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // optional int32 game_time = 4;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 4;
  ::google::protobuf::int32 game_time() const;
  void set_game_time(::google::protobuf::int32 value);

  // optional uint32 replay_time = 5;
  bool has_replay_time() const;
  void clear_replay_time();
  static const int kReplayTimeFieldNumber = 5;
  ::google::protobuf::uint32 replay_time() const;
  void set_replay_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut.CSocialFeedMatchEvent)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_game_time();
  inline void clear_has_game_time();
  inline void set_has_replay_time();
  inline void clear_has_replay_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::int32 game_time_;
  ::google::protobuf::uint32 replay_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut_CSocialFeedMatchEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CCustomGameData : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut_CCustomGameData();
  virtual ~CMsgGameMatchSignOut_CCustomGameData();

  CMsgGameMatchSignOut_CCustomGameData(const CMsgGameMatchSignOut_CCustomGameData& from);

  inline CMsgGameMatchSignOut_CCustomGameData& operator=(const CMsgGameMatchSignOut_CCustomGameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut_CCustomGameData& default_instance();

  void Swap(CMsgGameMatchSignOut_CCustomGameData* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CCustomGameData* New() const { return New(NULL); }

  CMsgGameMatchSignOut_CCustomGameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut_CCustomGameData& from);
  void MergeFrom(const CMsgGameMatchSignOut_CCustomGameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOut_CCustomGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 publish_timestamp = 1;
  bool has_publish_timestamp() const;
  void clear_publish_timestamp();
  static const int kPublishTimestampFieldNumber = 1;
  ::google::protobuf::uint32 publish_timestamp() const;
  void set_publish_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut.CCustomGameData)
 private:
  inline void set_has_publish_timestamp();
  inline void clear_has_publish_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 publish_timestamp_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut_CCustomGameData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut();
  virtual ~CMsgGameMatchSignOut();

  CMsgGameMatchSignOut(const CMsgGameMatchSignOut& from);

  inline CMsgGameMatchSignOut& operator=(const CMsgGameMatchSignOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut& default_instance();

  void Swap(CMsgGameMatchSignOut* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut* New() const { return New(NULL); }

  CMsgGameMatchSignOut* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut& from);
  void MergeFrom(const CMsgGameMatchSignOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignOut_CTeam CTeam;
  typedef CMsgGameMatchSignOut_CAdditionalSignoutMsg CAdditionalSignoutMsg;
  typedef CMsgGameMatchSignOut_CSocialFeedMatchEvent CSocialFeedMatchEvent;
  typedef CMsgGameMatchSignOut_CCustomGameData CCustomGameData;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // optional bool good_guys_win = 3;
  bool has_good_guys_win() const;
  void clear_good_guys_win();
  static const int kGoodGuysWinFieldNumber = 3;
  bool good_guys_win() const;
  void set_good_guys_win(bool value);

  // optional fixed32 date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // repeated uint32 num_players = 5;
  int num_players_size() const;
  void clear_num_players();
  static const int kNumPlayersFieldNumber = 5;
  ::google::protobuf::uint32 num_players(int index) const;
  void set_num_players(int index, ::google::protobuf::uint32 value);
  void add_num_players(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      num_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_num_players();

  // repeated .CMsgGameMatchSignOut.CTeam teams = 6;
  int teams_size() const;
  void clear_teams();
  static const int kTeamsFieldNumber = 6;
  const ::CMsgGameMatchSignOut_CTeam& teams(int index) const;
  ::CMsgGameMatchSignOut_CTeam* mutable_teams(int index);
  ::CMsgGameMatchSignOut_CTeam* add_teams();
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam >*
      mutable_teams();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam >&
      teams() const;

  // repeated uint32 tower_status = 8;
  int tower_status_size() const;
  void clear_tower_status();
  static const int kTowerStatusFieldNumber = 8;
  ::google::protobuf::uint32 tower_status(int index) const;
  void set_tower_status(int index, ::google::protobuf::uint32 value);
  void add_tower_status(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tower_status() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tower_status();

  // repeated uint32 barracks_status = 9;
  int barracks_status_size() const;
  void clear_barracks_status();
  static const int kBarracksStatusFieldNumber = 9;
  ::google::protobuf::uint32 barracks_status(int index) const;
  void set_barracks_status(int index, ::google::protobuf::uint32 value);
  void add_barracks_status(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      barracks_status() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_barracks_status();

  // optional uint32 cluster = 10;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 10;
  ::google::protobuf::uint32 cluster() const;
  void set_cluster(::google::protobuf::uint32 value);

  // optional string server_addr = 11;
  bool has_server_addr() const;
  void clear_server_addr();
  static const int kServerAddrFieldNumber = 11;
  const ::std::string& server_addr() const;
  void set_server_addr(const ::std::string& value);
  void set_server_addr(const char* value);
  void set_server_addr(const char* value, size_t size);
  ::std::string* mutable_server_addr();
  ::std::string* release_server_addr();
  void set_allocated_server_addr(::std::string* server_addr);

  // optional uint32 first_blood_time = 12;
  bool has_first_blood_time() const;
  void clear_first_blood_time();
  static const int kFirstBloodTimeFieldNumber = 12;
  ::google::protobuf::uint32 first_blood_time() const;
  void set_first_blood_time(::google::protobuf::uint32 value);

  // optional float game_balance = 13;
  bool has_game_balance() const;
  void clear_game_balance();
  static const int kGameBalanceFieldNumber = 13;
  float game_balance() const;
  void set_game_balance(float value);

  // optional uint32 event_score = 14;
  bool has_event_score() const;
  void clear_event_score();
  static const int kEventScoreFieldNumber = 14;
  ::google::protobuf::uint32 event_score() const;
  void set_event_score(::google::protobuf::uint32 value);

  // repeated .CMatchHeroSelectEvent picks_bans = 15;
  int picks_bans_size() const;
  void clear_picks_bans();
  static const int kPicksBansFieldNumber = 15;
  const ::CMatchHeroSelectEvent& picks_bans(int index) const;
  ::CMatchHeroSelectEvent* mutable_picks_bans(int index);
  ::CMatchHeroSelectEvent* add_picks_bans();
  ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >*
      mutable_picks_bans();
  const ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >&
      picks_bans() const;

  // repeated .CMsgDOTAFantasyPlayerStats fantasy_stats = 16;
  int fantasy_stats_size() const;
  void clear_fantasy_stats();
  static const int kFantasyStatsFieldNumber = 16;
  const ::CMsgDOTAFantasyPlayerStats& fantasy_stats(int index) const;
  ::CMsgDOTAFantasyPlayerStats* mutable_fantasy_stats(int index);
  ::CMsgDOTAFantasyPlayerStats* add_fantasy_stats();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFantasyPlayerStats >*
      mutable_fantasy_stats();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFantasyPlayerStats >&
      fantasy_stats() const;

  // repeated .CMsgEconPlayerStrangeCountAdjustment player_strange_count_adjustments = 17;
  int player_strange_count_adjustments_size() const;
  void clear_player_strange_count_adjustments();
  static const int kPlayerStrangeCountAdjustmentsFieldNumber = 17;
  const ::CMsgEconPlayerStrangeCountAdjustment& player_strange_count_adjustments(int index) const;
  ::CMsgEconPlayerStrangeCountAdjustment* mutable_player_strange_count_adjustments(int index);
  ::CMsgEconPlayerStrangeCountAdjustment* add_player_strange_count_adjustments();
  ::google::protobuf::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment >*
      mutable_player_strange_count_adjustments();
  const ::google::protobuf::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment >&
      player_strange_count_adjustments() const;

  // optional bool automatic_surrender = 18;
  bool has_automatic_surrender() const;
  void clear_automatic_surrender();
  static const int kAutomaticSurrenderFieldNumber = 18;
  bool automatic_surrender() const;
  void set_automatic_surrender(bool value);

  // optional uint32 server_version = 19;
  bool has_server_version() const;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 19;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // optional bool legacy_mass_disconnect = 21;
  bool has_legacy_mass_disconnect() const;
  void clear_legacy_mass_disconnect();
  static const int kLegacyMassDisconnectFieldNumber = 21;
  bool legacy_mass_disconnect() const;
  void set_legacy_mass_disconnect(bool value);

  // optional .CMsgPoorNetworkConditions poor_network_conditions = 35;
  bool has_poor_network_conditions() const;
  void clear_poor_network_conditions();
  static const int kPoorNetworkConditionsFieldNumber = 35;
  const ::CMsgPoorNetworkConditions& poor_network_conditions() const;
  ::CMsgPoorNetworkConditions* mutable_poor_network_conditions();
  ::CMsgPoorNetworkConditions* release_poor_network_conditions();
  void set_allocated_poor_network_conditions(::CMsgPoorNetworkConditions* poor_network_conditions);

  // repeated .CMsgGameMatchSignOut.CAdditionalSignoutMsg additional_msgs = 20;
  int additional_msgs_size() const;
  void clear_additional_msgs();
  static const int kAdditionalMsgsFieldNumber = 20;
  const ::CMsgGameMatchSignOut_CAdditionalSignoutMsg& additional_msgs(int index) const;
  ::CMsgGameMatchSignOut_CAdditionalSignoutMsg* mutable_additional_msgs(int index);
  ::CMsgGameMatchSignOut_CAdditionalSignoutMsg* add_additional_msgs();
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CAdditionalSignoutMsg >*
      mutable_additional_msgs();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CAdditionalSignoutMsg >&
      additional_msgs() const;

  // repeated .CMsgGameMatchSignOut.CSocialFeedMatchEvent social_feed_events = 36;
  int social_feed_events_size() const;
  void clear_social_feed_events();
  static const int kSocialFeedEventsFieldNumber = 36;
  const ::CMsgGameMatchSignOut_CSocialFeedMatchEvent& social_feed_events(int index) const;
  ::CMsgGameMatchSignOut_CSocialFeedMatchEvent* mutable_social_feed_events(int index);
  ::CMsgGameMatchSignOut_CSocialFeedMatchEvent* add_social_feed_events();
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CSocialFeedMatchEvent >*
      mutable_social_feed_events();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CSocialFeedMatchEvent >&
      social_feed_events() const;

  // optional sint32 average_networth_delta = 22;
  bool has_average_networth_delta() const;
  void clear_average_networth_delta();
  static const int kAverageNetworthDeltaFieldNumber = 22;
  ::google::protobuf::int32 average_networth_delta() const;
  void set_average_networth_delta(::google::protobuf::int32 value);

  // optional sint32 networth_delta_min10 = 23;
  bool has_networth_delta_min10() const;
  void clear_networth_delta_min10();
  static const int kNetworthDeltaMin10FieldNumber = 23;
  ::google::protobuf::int32 networth_delta_min10() const;
  void set_networth_delta_min10(::google::protobuf::int32 value);

  // optional sint32 networth_delta_min20 = 24;
  bool has_networth_delta_min20() const;
  void clear_networth_delta_min20();
  static const int kNetworthDeltaMin20FieldNumber = 24;
  ::google::protobuf::int32 networth_delta_min20() const;
  void set_networth_delta_min20(::google::protobuf::int32 value);

  // optional sint32 maximum_losing_networth_lead = 25;
  bool has_maximum_losing_networth_lead() const;
  void clear_maximum_losing_networth_lead();
  static const int kMaximumLosingNetworthLeadFieldNumber = 25;
  ::google::protobuf::int32 maximum_losing_networth_lead() const;
  void set_maximum_losing_networth_lead(::google::protobuf::int32 value);

  // optional sint32 average_experience_delta = 26;
  bool has_average_experience_delta() const;
  void clear_average_experience_delta();
  static const int kAverageExperienceDeltaFieldNumber = 26;
  ::google::protobuf::int32 average_experience_delta() const;
  void set_average_experience_delta(::google::protobuf::int32 value);

  // optional sint32 experience_delta_min10 = 27;
  bool has_experience_delta_min10() const;
  void clear_experience_delta_min10();
  static const int kExperienceDeltaMin10FieldNumber = 27;
  ::google::protobuf::int32 experience_delta_min10() const;
  void set_experience_delta_min10(::google::protobuf::int32 value);

  // optional sint32 experience_delta_min20 = 28;
  bool has_experience_delta_min20() const;
  void clear_experience_delta_min20();
  static const int kExperienceDeltaMin20FieldNumber = 28;
  ::google::protobuf::int32 experience_delta_min20() const;
  void set_experience_delta_min20(::google::protobuf::int32 value);

  // optional sint32 bonus_gold_winner_min10 = 29;
  bool has_bonus_gold_winner_min10() const;
  void clear_bonus_gold_winner_min10();
  static const int kBonusGoldWinnerMin10FieldNumber = 29;
  ::google::protobuf::int32 bonus_gold_winner_min10() const;
  void set_bonus_gold_winner_min10(::google::protobuf::int32 value);

  // optional sint32 bonus_gold_winner_min20 = 30;
  bool has_bonus_gold_winner_min20() const;
  void clear_bonus_gold_winner_min20();
  static const int kBonusGoldWinnerMin20FieldNumber = 30;
  ::google::protobuf::int32 bonus_gold_winner_min20() const;
  void set_bonus_gold_winner_min20(::google::protobuf::int32 value);

  // optional uint32 bonus_gold_winner_total = 31;
  bool has_bonus_gold_winner_total() const;
  void clear_bonus_gold_winner_total();
  static const int kBonusGoldWinnerTotalFieldNumber = 31;
  ::google::protobuf::uint32 bonus_gold_winner_total() const;
  void set_bonus_gold_winner_total(::google::protobuf::uint32 value);

  // optional sint32 bonus_gold_loser_min10 = 32;
  bool has_bonus_gold_loser_min10() const;
  void clear_bonus_gold_loser_min10();
  static const int kBonusGoldLoserMin10FieldNumber = 32;
  ::google::protobuf::int32 bonus_gold_loser_min10() const;
  void set_bonus_gold_loser_min10(::google::protobuf::int32 value);

  // optional sint32 bonus_gold_loser_min20 = 33;
  bool has_bonus_gold_loser_min20() const;
  void clear_bonus_gold_loser_min20();
  static const int kBonusGoldLoserMin20FieldNumber = 33;
  ::google::protobuf::int32 bonus_gold_loser_min20() const;
  void set_bonus_gold_loser_min20(::google::protobuf::int32 value);

  // optional uint32 bonus_gold_loser_total = 34;
  bool has_bonus_gold_loser_total() const;
  void clear_bonus_gold_loser_total();
  static const int kBonusGoldLoserTotalFieldNumber = 34;
  ::google::protobuf::uint32 bonus_gold_loser_total() const;
  void set_bonus_gold_loser_total(::google::protobuf::uint32 value);

  // optional .CMsgGameMatchSignOut.CCustomGameData custom_game_data = 37;
  bool has_custom_game_data() const;
  void clear_custom_game_data();
  static const int kCustomGameDataFieldNumber = 37;
  const ::CMsgGameMatchSignOut_CCustomGameData& custom_game_data() const;
  ::CMsgGameMatchSignOut_CCustomGameData* mutable_custom_game_data();
  ::CMsgGameMatchSignOut_CCustomGameData* release_custom_game_data();
  void set_allocated_custom_game_data(::CMsgGameMatchSignOut_CCustomGameData* custom_game_data);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_good_guys_win();
  inline void clear_has_good_guys_win();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_cluster();
  inline void clear_has_cluster();
  inline void set_has_server_addr();
  inline void clear_has_server_addr();
  inline void set_has_first_blood_time();
  inline void clear_has_first_blood_time();
  inline void set_has_game_balance();
  inline void clear_has_game_balance();
  inline void set_has_event_score();
  inline void clear_has_event_score();
  inline void set_has_automatic_surrender();
  inline void clear_has_automatic_surrender();
  inline void set_has_server_version();
  inline void clear_has_server_version();
  inline void set_has_legacy_mass_disconnect();
  inline void clear_has_legacy_mass_disconnect();
  inline void set_has_poor_network_conditions();
  inline void clear_has_poor_network_conditions();
  inline void set_has_average_networth_delta();
  inline void clear_has_average_networth_delta();
  inline void set_has_networth_delta_min10();
  inline void clear_has_networth_delta_min10();
  inline void set_has_networth_delta_min20();
  inline void clear_has_networth_delta_min20();
  inline void set_has_maximum_losing_networth_lead();
  inline void clear_has_maximum_losing_networth_lead();
  inline void set_has_average_experience_delta();
  inline void clear_has_average_experience_delta();
  inline void set_has_experience_delta_min10();
  inline void clear_has_experience_delta_min10();
  inline void set_has_experience_delta_min20();
  inline void clear_has_experience_delta_min20();
  inline void set_has_bonus_gold_winner_min10();
  inline void clear_has_bonus_gold_winner_min10();
  inline void set_has_bonus_gold_winner_min20();
  inline void clear_has_bonus_gold_winner_min20();
  inline void set_has_bonus_gold_winner_total();
  inline void clear_has_bonus_gold_winner_total();
  inline void set_has_bonus_gold_loser_min10();
  inline void clear_has_bonus_gold_loser_min10();
  inline void set_has_bonus_gold_loser_min20();
  inline void clear_has_bonus_gold_loser_min20();
  inline void set_has_bonus_gold_loser_total();
  inline void clear_has_bonus_gold_loser_total();
  inline void set_has_custom_game_data();
  inline void clear_has_custom_game_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 date_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > num_players_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam > teams_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tower_status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > barracks_status_;
  ::google::protobuf::internal::ArenaStringPtr server_addr_;
  ::google::protobuf::uint32 cluster_;
  ::google::protobuf::uint32 first_blood_time_;
  float game_balance_;
  ::google::protobuf::uint32 event_score_;
  ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent > picks_bans_;
  bool good_guys_win_;
  bool automatic_surrender_;
  bool legacy_mass_disconnect_;
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFantasyPlayerStats > fantasy_stats_;
  ::google::protobuf::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment > player_strange_count_adjustments_;
  ::CMsgPoorNetworkConditions* poor_network_conditions_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CAdditionalSignoutMsg > additional_msgs_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CSocialFeedMatchEvent > social_feed_events_;
  ::google::protobuf::int32 average_networth_delta_;
  ::google::protobuf::int32 networth_delta_min10_;
  ::google::protobuf::int32 networth_delta_min20_;
  ::google::protobuf::int32 maximum_losing_networth_lead_;
  ::google::protobuf::int32 average_experience_delta_;
  ::google::protobuf::int32 experience_delta_min10_;
  ::google::protobuf::int32 experience_delta_min20_;
  ::google::protobuf::int32 bonus_gold_winner_min10_;
  ::google::protobuf::int32 bonus_gold_winner_min20_;
  ::google::protobuf::uint32 bonus_gold_winner_total_;
  ::google::protobuf::int32 bonus_gold_loser_min10_;
  ::google::protobuf::int32 bonus_gold_loser_min20_;
  ::CMsgGameMatchSignOut_CCustomGameData* custom_game_data_;
  ::google::protobuf::uint32 bonus_gold_loser_total_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutDraftInfo : public ::google::protobuf::Message {
 public:
  CMsgSignOutDraftInfo();
  virtual ~CMsgSignOutDraftInfo();

  CMsgSignOutDraftInfo(const CMsgSignOutDraftInfo& from);

  inline CMsgSignOutDraftInfo& operator=(const CMsgSignOutDraftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutDraftInfo& default_instance();

  void Swap(CMsgSignOutDraftInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutDraftInfo* New() const { return New(NULL); }

  CMsgSignOutDraftInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutDraftInfo& from);
  void MergeFrom(const CMsgSignOutDraftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutDraftInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 radiant_captain_account_id = 1;
  bool has_radiant_captain_account_id() const;
  void clear_radiant_captain_account_id();
  static const int kRadiantCaptainAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 radiant_captain_account_id() const;
  void set_radiant_captain_account_id(::google::protobuf::uint32 value);

  // optional uint32 dire_captain_account_id = 2;
  bool has_dire_captain_account_id() const;
  void clear_dire_captain_account_id();
  static const int kDireCaptainAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 dire_captain_account_id() const;
  void set_dire_captain_account_id(::google::protobuf::uint32 value);

  // repeated .CMatchHeroSelectEvent picks_bans = 3;
  int picks_bans_size() const;
  void clear_picks_bans();
  static const int kPicksBansFieldNumber = 3;
  const ::CMatchHeroSelectEvent& picks_bans(int index) const;
  ::CMatchHeroSelectEvent* mutable_picks_bans(int index);
  ::CMatchHeroSelectEvent* add_picks_bans();
  ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >*
      mutable_picks_bans();
  const ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >&
      picks_bans() const;

  // @@protoc_insertion_point(class_scope:CMsgSignOutDraftInfo)
 private:
  inline void set_has_radiant_captain_account_id();
  inline void clear_has_radiant_captain_account_id();
  inline void set_has_dire_captain_account_id();
  inline void clear_has_dire_captain_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 radiant_captain_account_id_;
  ::google::protobuf::uint32 dire_captain_account_id_;
  ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent > picks_bans_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutDraftInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutBotInfo_CMsgBotSlotDifficulty : public ::google::protobuf::Message {
 public:
  CMsgSignOutBotInfo_CMsgBotSlotDifficulty();
  virtual ~CMsgSignOutBotInfo_CMsgBotSlotDifficulty();

  CMsgSignOutBotInfo_CMsgBotSlotDifficulty(const CMsgSignOutBotInfo_CMsgBotSlotDifficulty& from);

  inline CMsgSignOutBotInfo_CMsgBotSlotDifficulty& operator=(const CMsgSignOutBotInfo_CMsgBotSlotDifficulty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutBotInfo_CMsgBotSlotDifficulty& default_instance();

  void Swap(CMsgSignOutBotInfo_CMsgBotSlotDifficulty* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutBotInfo_CMsgBotSlotDifficulty* New() const { return New(NULL); }

  CMsgSignOutBotInfo_CMsgBotSlotDifficulty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutBotInfo_CMsgBotSlotDifficulty& from);
  void MergeFrom(const CMsgSignOutBotInfo_CMsgBotSlotDifficulty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutBotInfo_CMsgBotSlotDifficulty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot = 1;
  bool has_slot() const;
  void clear_slot();
  static const int kSlotFieldNumber = 1;
  ::google::protobuf::uint32 slot() const;
  void set_slot(::google::protobuf::uint32 value);

  // optional .DOTABotDifficulty bot_difficulty = 2 [default = BOT_DIFFICULTY_PASSIVE];
  bool has_bot_difficulty() const;
  void clear_bot_difficulty();
  static const int kBotDifficultyFieldNumber = 2;
  ::DOTABotDifficulty bot_difficulty() const;
  void set_bot_difficulty(::DOTABotDifficulty value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutBotInfo.CMsgBotSlotDifficulty)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_bot_difficulty();
  inline void clear_has_bot_difficulty();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_;
  int bot_difficulty_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutBotInfo_CMsgBotSlotDifficulty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutBotInfo : public ::google::protobuf::Message {
 public:
  CMsgSignOutBotInfo();
  virtual ~CMsgSignOutBotInfo();

  CMsgSignOutBotInfo(const CMsgSignOutBotInfo& from);

  inline CMsgSignOutBotInfo& operator=(const CMsgSignOutBotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutBotInfo& default_instance();

  void Swap(CMsgSignOutBotInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutBotInfo* New() const { return New(NULL); }

  CMsgSignOutBotInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutBotInfo& from);
  void MergeFrom(const CMsgSignOutBotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutBotInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutBotInfo_CMsgBotSlotDifficulty CMsgBotSlotDifficulty;

  // accessors -------------------------------------------------------

  // optional bool allow_cheats = 1;
  bool has_allow_cheats() const;
  void clear_allow_cheats();
  static const int kAllowCheatsFieldNumber = 1;
  bool allow_cheats() const;
  void set_allow_cheats(bool value);

  // optional .DOTABotDifficulty bot_difficulty = 2 [default = BOT_DIFFICULTY_PASSIVE];
  bool has_bot_difficulty() const;
  void clear_bot_difficulty();
  static const int kBotDifficultyFieldNumber = 2;
  ::DOTABotDifficulty bot_difficulty() const;
  void set_bot_difficulty(::DOTABotDifficulty value);

  // optional bool created_lobby = 3;
  bool has_created_lobby() const;
  void clear_created_lobby();
  static const int kCreatedLobbyFieldNumber = 3;
  bool created_lobby() const;
  void set_created_lobby(bool value);

  // repeated .CMsgSignOutBotInfo.CMsgBotSlotDifficulty bot_slot_difficulties = 4;
  int bot_slot_difficulties_size() const;
  void clear_bot_slot_difficulties();
  static const int kBotSlotDifficultiesFieldNumber = 4;
  const ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty& bot_slot_difficulties(int index) const;
  ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty* mutable_bot_slot_difficulties(int index);
  ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty* add_bot_slot_difficulties();
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty >*
      mutable_bot_slot_difficulties();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty >&
      bot_slot_difficulties() const;

  // @@protoc_insertion_point(class_scope:CMsgSignOutBotInfo)
 private:
  inline void set_has_allow_cheats();
  inline void clear_has_allow_cheats();
  inline void set_has_bot_difficulty();
  inline void clear_has_bot_difficulty();
  inline void set_has_created_lobby();
  inline void clear_has_created_lobby();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int bot_difficulty_;
  bool allow_cheats_;
  bool created_lobby_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty > bot_slot_difficulties_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutBotInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutPlayerStats : public ::google::protobuf::Message {
 public:
  CMsgSignOutPlayerStats();
  virtual ~CMsgSignOutPlayerStats();

  CMsgSignOutPlayerStats(const CMsgSignOutPlayerStats& from);

  inline CMsgSignOutPlayerStats& operator=(const CMsgSignOutPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutPlayerStats& default_instance();

  void Swap(CMsgSignOutPlayerStats* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutPlayerStats* New() const { return New(NULL); }

  CMsgSignOutPlayerStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutPlayerStats& from);
  void MergeFrom(const CMsgSignOutPlayerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutPlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::int32 account_id() const;
  void set_account_id(::google::protobuf::int32 value);

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 rampages = 5;
  bool has_rampages() const;
  void clear_rampages();
  static const int kRampagesFieldNumber = 5;
  ::google::protobuf::uint32 rampages() const;
  void set_rampages(::google::protobuf::uint32 value);

  // optional uint32 triple_kills = 6;
  bool has_triple_kills() const;
  void clear_triple_kills();
  static const int kTripleKillsFieldNumber = 6;
  ::google::protobuf::uint32 triple_kills() const;
  void set_triple_kills(::google::protobuf::uint32 value);

  // optional uint32 first_blood_claimed = 7;
  bool has_first_blood_claimed() const;
  void clear_first_blood_claimed();
  static const int kFirstBloodClaimedFieldNumber = 7;
  ::google::protobuf::uint32 first_blood_claimed() const;
  void set_first_blood_claimed(::google::protobuf::uint32 value);

  // optional uint32 first_blood_given = 8;
  bool has_first_blood_given() const;
  void clear_first_blood_given();
  static const int kFirstBloodGivenFieldNumber = 8;
  ::google::protobuf::uint32 first_blood_given() const;
  void set_first_blood_given(::google::protobuf::uint32 value);

  // optional uint32 couriers_killed = 9;
  bool has_couriers_killed() const;
  void clear_couriers_killed();
  static const int kCouriersKilledFieldNumber = 9;
  ::google::protobuf::uint32 couriers_killed() const;
  void set_couriers_killed(::google::protobuf::uint32 value);

  // optional uint32 aegises_snatched = 10;
  bool has_aegises_snatched() const;
  void clear_aegises_snatched();
  static const int kAegisesSnatchedFieldNumber = 10;
  ::google::protobuf::uint32 aegises_snatched() const;
  void set_aegises_snatched(::google::protobuf::uint32 value);

  // optional uint32 cheeses_eaten = 11;
  bool has_cheeses_eaten() const;
  void clear_cheeses_eaten();
  static const int kCheesesEatenFieldNumber = 11;
  ::google::protobuf::uint32 cheeses_eaten() const;
  void set_cheeses_eaten(::google::protobuf::uint32 value);

  // optional uint32 creeps_stacked = 12;
  bool has_creeps_stacked() const;
  void clear_creeps_stacked();
  static const int kCreepsStackedFieldNumber = 12;
  ::google::protobuf::uint32 creeps_stacked() const;
  void set_creeps_stacked(::google::protobuf::uint32 value);

  // optional float fight_score = 13;
  bool has_fight_score() const;
  void clear_fight_score();
  static const int kFightScoreFieldNumber = 13;
  float fight_score() const;
  void set_fight_score(float value);

  // optional float farm_score = 14;
  bool has_farm_score() const;
  void clear_farm_score();
  static const int kFarmScoreFieldNumber = 14;
  float farm_score() const;
  void set_farm_score(float value);

  // optional float support_score = 15;
  bool has_support_score() const;
  void clear_support_score();
  static const int kSupportScoreFieldNumber = 15;
  float support_score() const;
  void set_support_score(float value);

  // optional float push_score = 16;
  bool has_push_score() const;
  void clear_push_score();
  static const int kPushScoreFieldNumber = 16;
  float push_score() const;
  void set_push_score(float value);

  // optional uint32 kills = 17;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 17;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 18;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 18;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 19;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 19;
  ::google::protobuf::uint32 assists() const;
  void set_assists(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 20;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 20;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 21;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 21;
  ::google::protobuf::uint32 denies() const;
  void set_denies(::google::protobuf::uint32 value);

  // optional float gpm = 22;
  bool has_gpm() const;
  void clear_gpm();
  static const int kGpmFieldNumber = 22;
  float gpm() const;
  void set_gpm(float value);

  // optional float xppm = 23;
  bool has_xppm() const;
  void clear_xppm();
  static const int kXppmFieldNumber = 23;
  float xppm() const;
  void set_xppm(float value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutPlayerStats)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_rampages();
  inline void clear_has_rampages();
  inline void set_has_triple_kills();
  inline void clear_has_triple_kills();
  inline void set_has_first_blood_claimed();
  inline void clear_has_first_blood_claimed();
  inline void set_has_first_blood_given();
  inline void clear_has_first_blood_given();
  inline void set_has_couriers_killed();
  inline void clear_has_couriers_killed();
  inline void set_has_aegises_snatched();
  inline void clear_has_aegises_snatched();
  inline void set_has_cheeses_eaten();
  inline void clear_has_cheeses_eaten();
  inline void set_has_creeps_stacked();
  inline void clear_has_creeps_stacked();
  inline void set_has_fight_score();
  inline void clear_has_fight_score();
  inline void set_has_farm_score();
  inline void clear_has_farm_score();
  inline void set_has_support_score();
  inline void clear_has_support_score();
  inline void set_has_push_score();
  inline void clear_has_push_score();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_assists();
  inline void clear_has_assists();
  inline void set_has_last_hits();
  inline void clear_has_last_hits();
  inline void set_has_denies();
  inline void clear_has_denies();
  inline void set_has_gpm();
  inline void clear_has_gpm();
  inline void set_has_xppm();
  inline void clear_has_xppm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::int32 account_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 rampages_;
  ::google::protobuf::uint32 triple_kills_;
  ::google::protobuf::uint32 first_blood_claimed_;
  ::google::protobuf::uint32 first_blood_given_;
  ::google::protobuf::uint32 couriers_killed_;
  ::google::protobuf::uint32 aegises_snatched_;
  ::google::protobuf::uint32 cheeses_eaten_;
  ::google::protobuf::uint32 creeps_stacked_;
  float fight_score_;
  float farm_score_;
  float support_score_;
  float push_score_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  float gpm_;
  float xppm_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutPlayerStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutCommunicationSummary_PlayerCommunication : public ::google::protobuf::Message {
 public:
  CMsgSignOutCommunicationSummary_PlayerCommunication();
  virtual ~CMsgSignOutCommunicationSummary_PlayerCommunication();

  CMsgSignOutCommunicationSummary_PlayerCommunication(const CMsgSignOutCommunicationSummary_PlayerCommunication& from);

  inline CMsgSignOutCommunicationSummary_PlayerCommunication& operator=(const CMsgSignOutCommunicationSummary_PlayerCommunication& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutCommunicationSummary_PlayerCommunication& default_instance();

  void Swap(CMsgSignOutCommunicationSummary_PlayerCommunication* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutCommunicationSummary_PlayerCommunication* New() const { return New(NULL); }

  CMsgSignOutCommunicationSummary_PlayerCommunication* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutCommunicationSummary_PlayerCommunication& from);
  void MergeFrom(const CMsgSignOutCommunicationSummary_PlayerCommunication& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutCommunicationSummary_PlayerCommunication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 pings = 2;
  bool has_pings() const;
  void clear_pings();
  static const int kPingsFieldNumber = 2;
  ::google::protobuf::uint32 pings() const;
  void set_pings(::google::protobuf::uint32 value);

  // optional uint32 max_pings_per_interval = 3;
  bool has_max_pings_per_interval() const;
  void clear_max_pings_per_interval();
  static const int kMaxPingsPerIntervalFieldNumber = 3;
  ::google::protobuf::uint32 max_pings_per_interval() const;
  void set_max_pings_per_interval(::google::protobuf::uint32 value);

  // optional uint32 teammate_pings = 4;
  bool has_teammate_pings() const;
  void clear_teammate_pings();
  static const int kTeammatePingsFieldNumber = 4;
  ::google::protobuf::uint32 teammate_pings() const;
  void set_teammate_pings(::google::protobuf::uint32 value);

  // optional uint32 max_teammate_pings_per_interval = 5;
  bool has_max_teammate_pings_per_interval() const;
  void clear_max_teammate_pings_per_interval();
  static const int kMaxTeammatePingsPerIntervalFieldNumber = 5;
  ::google::protobuf::uint32 max_teammate_pings_per_interval() const;
  void set_max_teammate_pings_per_interval(::google::protobuf::uint32 value);

  // optional uint32 team_chat_messages = 6;
  bool has_team_chat_messages() const;
  void clear_team_chat_messages();
  static const int kTeamChatMessagesFieldNumber = 6;
  ::google::protobuf::uint32 team_chat_messages() const;
  void set_team_chat_messages(::google::protobuf::uint32 value);

  // optional uint32 all_chat_messages = 7;
  bool has_all_chat_messages() const;
  void clear_all_chat_messages();
  static const int kAllChatMessagesFieldNumber = 7;
  ::google::protobuf::uint32 all_chat_messages() const;
  void set_all_chat_messages(::google::protobuf::uint32 value);

  // optional uint32 chat_wheel_messages = 8;
  bool has_chat_wheel_messages() const;
  void clear_chat_wheel_messages();
  static const int kChatWheelMessagesFieldNumber = 8;
  ::google::protobuf::uint32 chat_wheel_messages() const;
  void set_chat_wheel_messages(::google::protobuf::uint32 value);

  // optional uint32 pauses = 9;
  bool has_pauses() const;
  void clear_pauses();
  static const int kPausesFieldNumber = 9;
  ::google::protobuf::uint32 pauses() const;
  void set_pauses(::google::protobuf::uint32 value);

  // optional uint32 unpauses = 10;
  bool has_unpauses() const;
  void clear_unpauses();
  static const int kUnpausesFieldNumber = 10;
  ::google::protobuf::uint32 unpauses() const;
  void set_unpauses(::google::protobuf::uint32 value);

  // optional uint32 lines_drawn = 11;
  bool has_lines_drawn() const;
  void clear_lines_drawn();
  static const int kLinesDrawnFieldNumber = 11;
  ::google::protobuf::uint32 lines_drawn() const;
  void set_lines_drawn(::google::protobuf::uint32 value);

  // optional uint32 voice_chat_seconds = 12;
  bool has_voice_chat_seconds() const;
  void clear_voice_chat_seconds();
  static const int kVoiceChatSecondsFieldNumber = 12;
  ::google::protobuf::uint32 voice_chat_seconds() const;
  void set_voice_chat_seconds(::google::protobuf::uint32 value);

  // optional uint32 chat_mutes = 13;
  bool has_chat_mutes() const;
  void clear_chat_mutes();
  static const int kChatMutesFieldNumber = 13;
  ::google::protobuf::uint32 chat_mutes() const;
  void set_chat_mutes(::google::protobuf::uint32 value);

  // optional uint32 voice_mutes = 14;
  bool has_voice_mutes() const;
  void clear_voice_mutes();
  static const int kVoiceMutesFieldNumber = 14;
  ::google::protobuf::uint32 voice_mutes() const;
  void set_voice_mutes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutCommunicationSummary.PlayerCommunication)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_pings();
  inline void clear_has_pings();
  inline void set_has_max_pings_per_interval();
  inline void clear_has_max_pings_per_interval();
  inline void set_has_teammate_pings();
  inline void clear_has_teammate_pings();
  inline void set_has_max_teammate_pings_per_interval();
  inline void clear_has_max_teammate_pings_per_interval();
  inline void set_has_team_chat_messages();
  inline void clear_has_team_chat_messages();
  inline void set_has_all_chat_messages();
  inline void clear_has_all_chat_messages();
  inline void set_has_chat_wheel_messages();
  inline void clear_has_chat_wheel_messages();
  inline void set_has_pauses();
  inline void clear_has_pauses();
  inline void set_has_unpauses();
  inline void clear_has_unpauses();
  inline void set_has_lines_drawn();
  inline void clear_has_lines_drawn();
  inline void set_has_voice_chat_seconds();
  inline void clear_has_voice_chat_seconds();
  inline void set_has_chat_mutes();
  inline void clear_has_chat_mutes();
  inline void set_has_voice_mutes();
  inline void clear_has_voice_mutes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 pings_;
  ::google::protobuf::uint32 max_pings_per_interval_;
  ::google::protobuf::uint32 teammate_pings_;
  ::google::protobuf::uint32 max_teammate_pings_per_interval_;
  ::google::protobuf::uint32 team_chat_messages_;
  ::google::protobuf::uint32 all_chat_messages_;
  ::google::protobuf::uint32 chat_wheel_messages_;
  ::google::protobuf::uint32 pauses_;
  ::google::protobuf::uint32 unpauses_;
  ::google::protobuf::uint32 lines_drawn_;
  ::google::protobuf::uint32 voice_chat_seconds_;
  ::google::protobuf::uint32 chat_mutes_;
  ::google::protobuf::uint32 voice_mutes_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutCommunicationSummary_PlayerCommunication* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutCommunicationSummary : public ::google::protobuf::Message {
 public:
  CMsgSignOutCommunicationSummary();
  virtual ~CMsgSignOutCommunicationSummary();

  CMsgSignOutCommunicationSummary(const CMsgSignOutCommunicationSummary& from);

  inline CMsgSignOutCommunicationSummary& operator=(const CMsgSignOutCommunicationSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutCommunicationSummary& default_instance();

  void Swap(CMsgSignOutCommunicationSummary* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutCommunicationSummary* New() const { return New(NULL); }

  CMsgSignOutCommunicationSummary* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutCommunicationSummary& from);
  void MergeFrom(const CMsgSignOutCommunicationSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutCommunicationSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutCommunicationSummary_PlayerCommunication PlayerCommunication;

  // accessors -------------------------------------------------------

  // repeated .CMsgSignOutCommunicationSummary.PlayerCommunication players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::CMsgSignOutCommunicationSummary_PlayerCommunication& players(int index) const;
  ::CMsgSignOutCommunicationSummary_PlayerCommunication* mutable_players(int index);
  ::CMsgSignOutCommunicationSummary_PlayerCommunication* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutCommunicationSummary_PlayerCommunication >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutCommunicationSummary_PlayerCommunication >&
      players() const;

  // @@protoc_insertion_point(class_scope:CMsgSignOutCommunicationSummary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutCommunicationSummary_PlayerCommunication > players_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutCommunicationSummary* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg();
  virtual ~CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg();

  CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg(const CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& from);

  inline CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& operator=(const CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& default_instance();

  void Swap(CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* New() const { return New(NULL); }

  CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& from);
  void MergeFrom(const CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional bytes contents = 2;
  bool has_contents() const;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_contents();
  inline void clear_has_contents();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignoutResponse : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignoutResponse();
  virtual ~CMsgGameMatchSignoutResponse();

  CMsgGameMatchSignoutResponse(const CMsgGameMatchSignoutResponse& from);

  inline CMsgGameMatchSignoutResponse& operator=(const CMsgGameMatchSignoutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignoutResponse& default_instance();

  void Swap(CMsgGameMatchSignoutResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignoutResponse* New() const { return New(NULL); }

  CMsgGameMatchSignoutResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignoutResponse& from);
  void MergeFrom(const CMsgGameMatchSignoutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignoutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg CAdditionalSignoutMsg;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional fixed32 replay_salt = 2;
  bool has_replay_salt() const;
  void clear_replay_salt();
  static const int kReplaySaltFieldNumber = 2;
  ::google::protobuf::uint32 replay_salt() const;
  void set_replay_salt(::google::protobuf::uint32 value);

  // repeated .CLobbyTimedRewardDetails timed_reward_details = 3;
  int timed_reward_details_size() const;
  void clear_timed_reward_details();
  static const int kTimedRewardDetailsFieldNumber = 3;
  const ::CLobbyTimedRewardDetails& timed_reward_details(int index) const;
  ::CLobbyTimedRewardDetails* mutable_timed_reward_details(int index);
  ::CLobbyTimedRewardDetails* add_timed_reward_details();
  ::google::protobuf::RepeatedPtrField< ::CLobbyTimedRewardDetails >*
      mutable_timed_reward_details();
  const ::google::protobuf::RepeatedPtrField< ::CLobbyTimedRewardDetails >&
      timed_reward_details() const;

  // repeated .CDOTALobbyMember xp_reward_details = 4;
  int xp_reward_details_size() const;
  void clear_xp_reward_details();
  static const int kXpRewardDetailsFieldNumber = 4;
  const ::CDOTALobbyMember& xp_reward_details(int index) const;
  ::CDOTALobbyMember* mutable_xp_reward_details(int index);
  ::CDOTALobbyMember* add_xp_reward_details();
  ::google::protobuf::RepeatedPtrField< ::CDOTALobbyMember >*
      mutable_xp_reward_details();
  const ::google::protobuf::RepeatedPtrField< ::CDOTALobbyMember >&
      xp_reward_details() const;

  // optional uint32 leagueid = 5;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 5;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // repeated .CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg additional_msgs = 6;
  int additional_msgs_size() const;
  void clear_additional_msgs();
  static const int kAdditionalMsgsFieldNumber = 6;
  const ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& additional_msgs(int index) const;
  ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* mutable_additional_msgs(int index);
  ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* add_additional_msgs();
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg >*
      mutable_additional_msgs();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg >&
      additional_msgs() const;

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignoutResponse)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_replay_salt();
  inline void clear_has_replay_salt();
  inline void set_has_leagueid();
  inline void clear_has_leagueid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::RepeatedPtrField< ::CLobbyTimedRewardDetails > timed_reward_details_;
  ::google::protobuf::uint32 replay_salt_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::RepeatedPtrField< ::CDOTALobbyMember > xp_reward_details_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg > additional_msgs_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignoutResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOutPermissionRequest : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOutPermissionRequest();
  virtual ~CMsgGameMatchSignOutPermissionRequest();

  CMsgGameMatchSignOutPermissionRequest(const CMsgGameMatchSignOutPermissionRequest& from);

  inline CMsgGameMatchSignOutPermissionRequest& operator=(const CMsgGameMatchSignOutPermissionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOutPermissionRequest& default_instance();

  void Swap(CMsgGameMatchSignOutPermissionRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOutPermissionRequest* New() const { return New(NULL); }

  CMsgGameMatchSignOutPermissionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOutPermissionRequest& from);
  void MergeFrom(const CMsgGameMatchSignOutPermissionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOutPermissionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_version = 1;
  bool has_server_version() const;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 1;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // optional uint32 local_attempt = 2;
  bool has_local_attempt() const;
  void clear_local_attempt();
  static const int kLocalAttemptFieldNumber = 2;
  ::google::protobuf::uint32 local_attempt() const;
  void set_local_attempt(::google::protobuf::uint32 value);

  // optional uint32 total_attempt = 3;
  bool has_total_attempt() const;
  void clear_total_attempt();
  static const int kTotalAttemptFieldNumber = 3;
  ::google::protobuf::uint32 total_attempt() const;
  void set_total_attempt(::google::protobuf::uint32 value);

  // optional uint32 seconds_waited = 4;
  bool has_seconds_waited() const;
  void clear_seconds_waited();
  static const int kSecondsWaitedFieldNumber = 4;
  ::google::protobuf::uint32 seconds_waited() const;
  void set_seconds_waited(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOutPermissionRequest)
 private:
  inline void set_has_server_version();
  inline void clear_has_server_version();
  inline void set_has_local_attempt();
  inline void clear_has_local_attempt();
  inline void set_has_total_attempt();
  inline void clear_has_total_attempt();
  inline void set_has_seconds_waited();
  inline void clear_has_seconds_waited();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::uint32 local_attempt_;
  ::google::protobuf::uint32 total_attempt_;
  ::google::protobuf::uint32 seconds_waited_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOutPermissionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOutPermissionResponse : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOutPermissionResponse();
  virtual ~CMsgGameMatchSignOutPermissionResponse();

  CMsgGameMatchSignOutPermissionResponse(const CMsgGameMatchSignOutPermissionResponse& from);

  inline CMsgGameMatchSignOutPermissionResponse& operator=(const CMsgGameMatchSignOutPermissionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOutPermissionResponse& default_instance();

  void Swap(CMsgGameMatchSignOutPermissionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOutPermissionResponse* New() const { return New(NULL); }

  CMsgGameMatchSignOutPermissionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOutPermissionResponse& from);
  void MergeFrom(const CMsgGameMatchSignOutPermissionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameMatchSignOutPermissionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool permission_granted = 1 [default = false];
  bool has_permission_granted() const;
  void clear_permission_granted();
  static const int kPermissionGrantedFieldNumber = 1;
  bool permission_granted() const;
  void set_permission_granted(bool value);

  // optional bool abandon_signout = 2 [default = false];
  bool has_abandon_signout() const;
  void clear_abandon_signout();
  static const int kAbandonSignoutFieldNumber = 2;
  bool abandon_signout() const;
  void set_abandon_signout(bool value);

  // optional uint32 retry_delay_seconds = 3 [default = 0];
  bool has_retry_delay_seconds() const;
  void clear_retry_delay_seconds();
  static const int kRetryDelaySecondsFieldNumber = 3;
  ::google::protobuf::uint32 retry_delay_seconds() const;
  void set_retry_delay_seconds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOutPermissionResponse)
 private:
  inline void set_has_permission_granted();
  inline void clear_has_permission_granted();
  inline void set_has_abandon_signout();
  inline void clear_has_abandon_signout();
  inline void set_has_retry_delay_seconds();
  inline void clear_has_retry_delay_seconds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool permission_granted_;
  bool abandon_signout_;
  ::google::protobuf::uint32 retry_delay_seconds_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOutPermissionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameChatLog_CChatLine : public ::google::protobuf::Message {
 public:
  CMsgGameChatLog_CChatLine();
  virtual ~CMsgGameChatLog_CChatLine();

  CMsgGameChatLog_CChatLine(const CMsgGameChatLog_CChatLine& from);

  inline CMsgGameChatLog_CChatLine& operator=(const CMsgGameChatLog_CChatLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameChatLog_CChatLine& default_instance();

  void Swap(CMsgGameChatLog_CChatLine* other);

  // implements Message ----------------------------------------------

  inline CMsgGameChatLog_CChatLine* New() const { return New(NULL); }

  CMsgGameChatLog_CChatLine* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameChatLog_CChatLine& from);
  void MergeFrom(const CMsgGameChatLog_CChatLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameChatLog_CChatLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 team_only = 2;
  bool has_team_only() const;
  void clear_team_only();
  static const int kTeamOnlyFieldNumber = 2;
  ::google::protobuf::uint32 team_only() const;
  void set_team_only(::google::protobuf::uint32 value);

  // optional string text = 3;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional uint32 game_time = 4;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 4;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameChatLog.CChatLine)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_team_only();
  inline void clear_has_team_only();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_game_time();
  inline void clear_has_game_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 team_only_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 game_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameChatLog_CChatLine* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameChatLog : public ::google::protobuf::Message {
 public:
  CMsgGameChatLog();
  virtual ~CMsgGameChatLog();

  CMsgGameChatLog(const CMsgGameChatLog& from);

  inline CMsgGameChatLog& operator=(const CMsgGameChatLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameChatLog& default_instance();

  void Swap(CMsgGameChatLog* other);

  // implements Message ----------------------------------------------

  inline CMsgGameChatLog* New() const { return New(NULL); }

  CMsgGameChatLog* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameChatLog& from);
  void MergeFrom(const CMsgGameChatLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameChatLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameChatLog_CChatLine CChatLine;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // repeated .CMsgGameChatLog.CChatLine lines = 2;
  int lines_size() const;
  void clear_lines();
  static const int kLinesFieldNumber = 2;
  const ::CMsgGameChatLog_CChatLine& lines(int index) const;
  ::CMsgGameChatLog_CChatLine* mutable_lines(int index);
  ::CMsgGameChatLog_CChatLine* add_lines();
  ::google::protobuf::RepeatedPtrField< ::CMsgGameChatLog_CChatLine >*
      mutable_lines();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGameChatLog_CChatLine >&
      lines() const;

  // @@protoc_insertion_point(class_scope:CMsgGameChatLog)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameChatLog_CChatLine > lines_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameChatLog* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility : public ::google::protobuf::Message {
 public:
  CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility();
  virtual ~CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility();

  CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from);

  inline CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& operator=(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& default_instance();

  void Swap(CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* New() const { return New(NULL); }

  CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // optional uint32 ability_level = 2;
  bool has_ability_level() const;
  void clear_ability_level();
  static const int kAbilityLevelFieldNumber = 2;
  ::google::protobuf::uint32 ability_level() const;
  void set_ability_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility)
 private:
  inline void set_has_ability_id();
  inline void clear_has_ability_id();
  inline void set_has_ability_level();
  inline void clear_has_ability_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ability_id_;
  ::google::protobuf::uint32 ability_level_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate_Team_Player : public ::google::protobuf::Message {
 public:
  CMsgDOTALiveScoreboardUpdate_Team_Player();
  virtual ~CMsgDOTALiveScoreboardUpdate_Team_Player();

  CMsgDOTALiveScoreboardUpdate_Team_Player(const CMsgDOTALiveScoreboardUpdate_Team_Player& from);

  inline CMsgDOTALiveScoreboardUpdate_Team_Player& operator=(const CMsgDOTALiveScoreboardUpdate_Team_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALiveScoreboardUpdate_Team_Player& default_instance();

  void Swap(CMsgDOTALiveScoreboardUpdate_Team_Player* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate_Team_Player* New() const { return New(NULL); }

  CMsgDOTALiveScoreboardUpdate_Team_Player* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate_Team_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility HeroAbility;

  typedef CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState DOTAUltimateState;
  static const DOTAUltimateState k_EDOTAUltimateStateNotLearned = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNotLearned;
  static const DOTAUltimateState k_EDOTAUltimateStateCooldown = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateCooldown;
  static const DOTAUltimateState k_EDOTAUltimateStateNeedsMana = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNeedsMana;
  static const DOTAUltimateState k_EDOTAUltimateStateReady = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateReady;
  static inline bool DOTAUltimateState_IsValid(int value) {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_IsValid(value);
  }
  static const DOTAUltimateState DOTAUltimateState_MIN =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MIN;
  static const DOTAUltimateState DOTAUltimateState_MAX =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MAX;
  static const int DOTAUltimateState_ARRAYSIZE =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DOTAUltimateState_descriptor() {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor();
  }
  static inline const ::std::string& DOTAUltimateState_Name(DOTAUltimateState value) {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Name(value);
  }
  static inline bool DOTAUltimateState_Parse(const ::std::string& name,
      DOTAUltimateState* value) {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 player_slot = 1;
  bool has_player_slot() const;
  void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 1;
  ::google::protobuf::uint32 player_slot() const;
  void set_player_slot(::google::protobuf::uint32 value);

  // optional string player_name = 2;
  bool has_player_name() const;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // optional string hero_name = 3;
  bool has_hero_name() const;
  void clear_hero_name();
  static const int kHeroNameFieldNumber = 3;
  const ::std::string& hero_name() const;
  void set_hero_name(const ::std::string& value);
  void set_hero_name(const char* value);
  void set_hero_name(const char* value, size_t size);
  ::std::string* mutable_hero_name();
  ::std::string* release_hero_name();
  void set_allocated_hero_name(::std::string* hero_name);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 kills = 5;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 5;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 6;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 6;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 7;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 7;
  ::google::protobuf::uint32 assists() const;
  void set_assists(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 8;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 8;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 9;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 9;
  ::google::protobuf::uint32 denies() const;
  void set_denies(::google::protobuf::uint32 value);

  // optional uint32 gold = 10;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 10;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 level = 11;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 11;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional float gold_per_min = 12;
  bool has_gold_per_min() const;
  void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 12;
  float gold_per_min() const;
  void set_gold_per_min(float value);

  // optional float xp_per_min = 13;
  bool has_xp_per_min() const;
  void clear_xp_per_min();
  static const int kXpPerMinFieldNumber = 13;
  float xp_per_min() const;
  void set_xp_per_min(float value);

  // optional .CMsgDOTALiveScoreboardUpdate.Team.Player.DOTAUltimateState ultimate_state = 14 [default = k_EDOTAUltimateStateNotLearned];
  bool has_ultimate_state() const;
  void clear_ultimate_state();
  static const int kUltimateStateFieldNumber = 14;
  ::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState ultimate_state() const;
  void set_ultimate_state(::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState value);

  // optional float ultimate_cooldown = 15;
  bool has_ultimate_cooldown() const;
  void clear_ultimate_cooldown();
  static const int kUltimateCooldownFieldNumber = 15;
  float ultimate_cooldown() const;
  void set_ultimate_cooldown(float value);

  // optional uint32 item0 = 16;
  bool has_item0() const;
  void clear_item0();
  static const int kItem0FieldNumber = 16;
  ::google::protobuf::uint32 item0() const;
  void set_item0(::google::protobuf::uint32 value);

  // optional uint32 item1 = 17;
  bool has_item1() const;
  void clear_item1();
  static const int kItem1FieldNumber = 17;
  ::google::protobuf::uint32 item1() const;
  void set_item1(::google::protobuf::uint32 value);

  // optional uint32 item2 = 18;
  bool has_item2() const;
  void clear_item2();
  static const int kItem2FieldNumber = 18;
  ::google::protobuf::uint32 item2() const;
  void set_item2(::google::protobuf::uint32 value);

  // optional uint32 item3 = 19;
  bool has_item3() const;
  void clear_item3();
  static const int kItem3FieldNumber = 19;
  ::google::protobuf::uint32 item3() const;
  void set_item3(::google::protobuf::uint32 value);

  // optional uint32 item4 = 20;
  bool has_item4() const;
  void clear_item4();
  static const int kItem4FieldNumber = 20;
  ::google::protobuf::uint32 item4() const;
  void set_item4(::google::protobuf::uint32 value);

  // optional uint32 item5 = 21;
  bool has_item5() const;
  void clear_item5();
  static const int kItem5FieldNumber = 21;
  ::google::protobuf::uint32 item5() const;
  void set_item5(::google::protobuf::uint32 value);

  // optional uint32 respawn_timer = 22;
  bool has_respawn_timer() const;
  void clear_respawn_timer();
  static const int kRespawnTimerFieldNumber = 22;
  ::google::protobuf::uint32 respawn_timer() const;
  void set_respawn_timer(::google::protobuf::uint32 value);

  // optional uint32 account_id = 23;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 23;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional float position_x = 24;
  bool has_position_x() const;
  void clear_position_x();
  static const int kPositionXFieldNumber = 24;
  float position_x() const;
  void set_position_x(float value);

  // optional float position_y = 25;
  bool has_position_y() const;
  void clear_position_y();
  static const int kPositionYFieldNumber = 25;
  float position_y() const;
  void set_position_y(float value);

  // optional uint32 net_worth = 26;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 26;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // repeated .CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility abilities = 27;
  int abilities_size() const;
  void clear_abilities();
  static const int kAbilitiesFieldNumber = 27;
  const ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& abilities(int index) const;
  ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* mutable_abilities(int index);
  ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* add_abilities();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >*
      mutable_abilities();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >&
      abilities() const;

  // @@protoc_insertion_point(class_scope:CMsgDOTALiveScoreboardUpdate.Team.Player)
 private:
  inline void set_has_player_slot();
  inline void clear_has_player_slot();
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_hero_name();
  inline void clear_has_hero_name();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_assists();
  inline void clear_has_assists();
  inline void set_has_last_hits();
  inline void clear_has_last_hits();
  inline void set_has_denies();
  inline void clear_has_denies();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_gold_per_min();
  inline void clear_has_gold_per_min();
  inline void set_has_xp_per_min();
  inline void clear_has_xp_per_min();
  inline void set_has_ultimate_state();
  inline void clear_has_ultimate_state();
  inline void set_has_ultimate_cooldown();
  inline void clear_has_ultimate_cooldown();
  inline void set_has_item0();
  inline void clear_has_item0();
  inline void set_has_item1();
  inline void clear_has_item1();
  inline void set_has_item2();
  inline void clear_has_item2();
  inline void set_has_item3();
  inline void clear_has_item3();
  inline void set_has_item4();
  inline void clear_has_item4();
  inline void set_has_item5();
  inline void clear_has_item5();
  inline void set_has_respawn_timer();
  inline void clear_has_respawn_timer();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_position_x();
  inline void clear_has_position_x();
  inline void set_has_position_y();
  inline void clear_has_position_y();
  inline void set_has_net_worth();
  inline void clear_has_net_worth();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint32 player_slot_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::internal::ArenaStringPtr hero_name_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 level_;
  float gold_per_min_;
  float xp_per_min_;
  int ultimate_state_;
  float ultimate_cooldown_;
  ::google::protobuf::uint32 item0_;
  ::google::protobuf::uint32 item1_;
  ::google::protobuf::uint32 item2_;
  ::google::protobuf::uint32 item3_;
  ::google::protobuf::uint32 item4_;
  ::google::protobuf::uint32 item5_;
  ::google::protobuf::uint32 respawn_timer_;
  ::google::protobuf::uint32 account_id_;
  float position_x_;
  float position_y_;
  ::google::protobuf::uint32 net_worth_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility > abilities_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALiveScoreboardUpdate_Team_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate_Team : public ::google::protobuf::Message {
 public:
  CMsgDOTALiveScoreboardUpdate_Team();
  virtual ~CMsgDOTALiveScoreboardUpdate_Team();

  CMsgDOTALiveScoreboardUpdate_Team(const CMsgDOTALiveScoreboardUpdate_Team& from);

  inline CMsgDOTALiveScoreboardUpdate_Team& operator=(const CMsgDOTALiveScoreboardUpdate_Team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALiveScoreboardUpdate_Team& default_instance();

  void Swap(CMsgDOTALiveScoreboardUpdate_Team* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate_Team* New() const { return New(NULL); }

  CMsgDOTALiveScoreboardUpdate_Team* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate_Team& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate_Team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate_Team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTALiveScoreboardUpdate_Team_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTALiveScoreboardUpdate.Team.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::CMsgDOTALiveScoreboardUpdate_Team_Player& players(int index) const;
  ::CMsgDOTALiveScoreboardUpdate_Team_Player* mutable_players(int index);
  ::CMsgDOTALiveScoreboardUpdate_Team_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player >&
      players() const;

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 tower_state = 3;
  bool has_tower_state() const;
  void clear_tower_state();
  static const int kTowerStateFieldNumber = 3;
  ::google::protobuf::uint32 tower_state() const;
  void set_tower_state(::google::protobuf::uint32 value);

  // optional uint32 barracks_state = 4;
  bool has_barracks_state() const;
  void clear_barracks_state();
  static const int kBarracksStateFieldNumber = 4;
  ::google::protobuf::uint32 barracks_state() const;
  void set_barracks_state(::google::protobuf::uint32 value);

  // repeated uint32 hero_picks = 5;
  int hero_picks_size() const;
  void clear_hero_picks();
  static const int kHeroPicksFieldNumber = 5;
  ::google::protobuf::uint32 hero_picks(int index) const;
  void set_hero_picks(int index, ::google::protobuf::uint32 value);
  void add_hero_picks(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_picks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_picks();

  // repeated uint32 hero_bans = 6;
  int hero_bans_size() const;
  void clear_hero_bans();
  static const int kHeroBansFieldNumber = 6;
  ::google::protobuf::uint32 hero_bans(int index) const;
  void set_hero_bans(int index, ::google::protobuf::uint32 value);
  void add_hero_bans(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_bans() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_bans();

  // @@protoc_insertion_point(class_scope:CMsgDOTALiveScoreboardUpdate.Team)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_tower_state();
  inline void clear_has_tower_state();
  inline void set_has_barracks_state();
  inline void clear_has_barracks_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player > players_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 tower_state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_picks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_bans_;
  ::google::protobuf::uint32 barracks_state_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALiveScoreboardUpdate_Team* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate : public ::google::protobuf::Message {
 public:
  CMsgDOTALiveScoreboardUpdate();
  virtual ~CMsgDOTALiveScoreboardUpdate();

  CMsgDOTALiveScoreboardUpdate(const CMsgDOTALiveScoreboardUpdate& from);

  inline CMsgDOTALiveScoreboardUpdate& operator=(const CMsgDOTALiveScoreboardUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALiveScoreboardUpdate& default_instance();

  void Swap(CMsgDOTALiveScoreboardUpdate* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate* New() const { return New(NULL); }

  CMsgDOTALiveScoreboardUpdate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTALiveScoreboardUpdate_Team Team;

  // accessors -------------------------------------------------------

  // optional uint32 tournament_id = 1;
  bool has_tournament_id() const;
  void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 1;
  ::google::protobuf::uint32 tournament_id() const;
  void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 tournament_game_id = 2;
  bool has_tournament_game_id() const;
  void clear_tournament_game_id();
  static const int kTournamentGameIdFieldNumber = 2;
  ::google::protobuf::uint32 tournament_game_id() const;
  void set_tournament_game_id(::google::protobuf::uint32 value);

  // optional float duration = 3;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  float duration() const;
  void set_duration(float value);

  // optional int32 hltv_delay = 4;
  bool has_hltv_delay() const;
  void clear_hltv_delay();
  static const int kHltvDelayFieldNumber = 4;
  ::google::protobuf::int32 hltv_delay() const;
  void set_hltv_delay(::google::protobuf::int32 value);

  // optional .CMsgDOTALiveScoreboardUpdate.Team team_good = 5;
  bool has_team_good() const;
  void clear_team_good();
  static const int kTeamGoodFieldNumber = 5;
  const ::CMsgDOTALiveScoreboardUpdate_Team& team_good() const;
  ::CMsgDOTALiveScoreboardUpdate_Team* mutable_team_good();
  ::CMsgDOTALiveScoreboardUpdate_Team* release_team_good();
  void set_allocated_team_good(::CMsgDOTALiveScoreboardUpdate_Team* team_good);

  // optional .CMsgDOTALiveScoreboardUpdate.Team team_bad = 6;
  bool has_team_bad() const;
  void clear_team_bad();
  static const int kTeamBadFieldNumber = 6;
  const ::CMsgDOTALiveScoreboardUpdate_Team& team_bad() const;
  ::CMsgDOTALiveScoreboardUpdate_Team* mutable_team_bad();
  ::CMsgDOTALiveScoreboardUpdate_Team* release_team_bad();
  void set_allocated_team_bad(::CMsgDOTALiveScoreboardUpdate_Team* team_bad);

  // optional uint32 roshan_respawn_timer = 7;
  bool has_roshan_respawn_timer() const;
  void clear_roshan_respawn_timer();
  static const int kRoshanRespawnTimerFieldNumber = 7;
  ::google::protobuf::uint32 roshan_respawn_timer() const;
  void set_roshan_respawn_timer(::google::protobuf::uint32 value);

  // optional uint32 league_id = 8;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 8;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 9;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 9;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTALiveScoreboardUpdate)
 private:
  inline void set_has_tournament_id();
  inline void clear_has_tournament_id();
  inline void set_has_tournament_game_id();
  inline void clear_has_tournament_game_id();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_hltv_delay();
  inline void clear_has_hltv_delay();
  inline void set_has_team_good();
  inline void clear_has_team_good();
  inline void set_has_team_bad();
  inline void clear_has_team_bad();
  inline void set_has_roshan_respawn_timer();
  inline void clear_has_roshan_respawn_timer();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 tournament_game_id_;
  float duration_;
  ::google::protobuf::int32 hltv_delay_;
  ::CMsgDOTALiveScoreboardUpdate_Team* team_good_;
  ::CMsgDOTALiveScoreboardUpdate_Team* team_bad_;
  ::google::protobuf::uint32 roshan_respawn_timer_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTALiveScoreboardUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestPlayerResources : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestPlayerResources();
  virtual ~CMsgDOTARequestPlayerResources();

  CMsgDOTARequestPlayerResources(const CMsgDOTARequestPlayerResources& from);

  inline CMsgDOTARequestPlayerResources& operator=(const CMsgDOTARequestPlayerResources& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestPlayerResources& default_instance();

  void Swap(CMsgDOTARequestPlayerResources* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestPlayerResources* New() const { return New(NULL); }

  CMsgDOTARequestPlayerResources* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestPlayerResources& from);
  void MergeFrom(const CMsgDOTARequestPlayerResources& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTARequestPlayerResources* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 player_id = 2;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestPlayerResources)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 player_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestPlayerResources* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestPlayerResourcesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestPlayerResourcesResponse();
  virtual ~CMsgDOTARequestPlayerResourcesResponse();

  CMsgDOTARequestPlayerResourcesResponse(const CMsgDOTARequestPlayerResourcesResponse& from);

  inline CMsgDOTARequestPlayerResourcesResponse& operator=(const CMsgDOTARequestPlayerResourcesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestPlayerResourcesResponse& default_instance();

  void Swap(CMsgDOTARequestPlayerResourcesResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestPlayerResourcesResponse* New() const { return New(NULL); }

  CMsgDOTARequestPlayerResourcesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestPlayerResourcesResponse& from);
  void MergeFrom(const CMsgDOTARequestPlayerResourcesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTARequestPlayerResourcesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 rank = 2;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 player_id = 3;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional bool prevent_text_chat = 4;
  bool has_prevent_text_chat() const;
  void clear_prevent_text_chat();
  static const int kPreventTextChatFieldNumber = 4;
  bool prevent_text_chat() const;
  void set_prevent_text_chat(bool value);

  // optional bool prevent_voice_chat = 5;
  bool has_prevent_voice_chat() const;
  void clear_prevent_voice_chat();
  static const int kPreventVoiceChatFieldNumber = 5;
  bool prevent_voice_chat() const;
  void set_prevent_voice_chat(bool value);

  // optional bool low_priority = 6;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 6;
  bool low_priority() const;
  void set_low_priority(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestPlayerResourcesResponse)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_prevent_text_chat();
  inline void clear_has_prevent_text_chat();
  inline void set_has_prevent_voice_chat();
  inline void clear_has_prevent_voice_chat();
  inline void set_has_low_priority();
  inline void clear_has_low_priority();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 player_id_;
  bool prevent_text_chat_;
  bool prevent_voice_chat_;
  bool low_priority_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestPlayerResourcesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestBatchPlayerResources : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestBatchPlayerResources();
  virtual ~CMsgDOTARequestBatchPlayerResources();

  CMsgDOTARequestBatchPlayerResources(const CMsgDOTARequestBatchPlayerResources& from);

  inline CMsgDOTARequestBatchPlayerResources& operator=(const CMsgDOTARequestBatchPlayerResources& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestBatchPlayerResources& default_instance();

  void Swap(CMsgDOTARequestBatchPlayerResources* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestBatchPlayerResources* New() const { return New(NULL); }

  CMsgDOTARequestBatchPlayerResources* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestBatchPlayerResources& from);
  void MergeFrom(const CMsgDOTARequestBatchPlayerResources& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTARequestBatchPlayerResources* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1 [packed = true];
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // repeated uint32 rank_types = 4 [packed = true];
  int rank_types_size() const;
  void clear_rank_types();
  static const int kRankTypesFieldNumber = 4;
  ::google::protobuf::uint32 rank_types(int index) const;
  void set_rank_types(int index, ::google::protobuf::uint32 value);
  void add_rank_types(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rank_types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rank_types();

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestBatchPlayerResources)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  mutable int _account_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rank_types_;
  mutable int _rank_types_cached_byte_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestBatchPlayerResources* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestBatchPlayerResourcesResponse_Result : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestBatchPlayerResourcesResponse_Result();
  virtual ~CMsgDOTARequestBatchPlayerResourcesResponse_Result();

  CMsgDOTARequestBatchPlayerResourcesResponse_Result(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from);

  inline CMsgDOTARequestBatchPlayerResourcesResponse_Result& operator=(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestBatchPlayerResourcesResponse_Result& default_instance();

  void Swap(CMsgDOTARequestBatchPlayerResourcesResponse_Result* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestBatchPlayerResourcesResponse_Result* New() const { return New(NULL); }

  CMsgDOTARequestBatchPlayerResourcesResponse_Result* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from);
  void MergeFrom(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTARequestBatchPlayerResourcesResponse_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool prevent_text_chat = 2;
  bool has_prevent_text_chat() const;
  void clear_prevent_text_chat();
  static const int kPreventTextChatFieldNumber = 2;
  bool prevent_text_chat() const;
  void set_prevent_text_chat(bool value);

  // optional bool prevent_voice_chat = 3;
  bool has_prevent_voice_chat() const;
  void clear_prevent_voice_chat();
  static const int kPreventVoiceChatFieldNumber = 3;
  bool prevent_voice_chat() const;
  void set_prevent_voice_chat(bool value);

  // optional uint32 rank = 4;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 4;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional bool rank_calibrated = 5;
  bool has_rank_calibrated() const;
  void clear_rank_calibrated();
  static const int kRankCalibratedFieldNumber = 5;
  bool rank_calibrated() const;
  void set_rank_calibrated(bool value);

  // optional bool low_priority = 6;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 6;
  bool low_priority() const;
  void set_low_priority(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestBatchPlayerResourcesResponse.Result)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_prevent_text_chat();
  inline void clear_has_prevent_text_chat();
  inline void set_has_prevent_voice_chat();
  inline void clear_has_prevent_voice_chat();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_rank_calibrated();
  inline void clear_has_rank_calibrated();
  inline void set_has_low_priority();
  inline void clear_has_low_priority();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 rank_;
  bool prevent_text_chat_;
  bool prevent_voice_chat_;
  bool rank_calibrated_;
  bool low_priority_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestBatchPlayerResourcesResponse_Result* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARequestBatchPlayerResourcesResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTARequestBatchPlayerResourcesResponse();
  virtual ~CMsgDOTARequestBatchPlayerResourcesResponse();

  CMsgDOTARequestBatchPlayerResourcesResponse(const CMsgDOTARequestBatchPlayerResourcesResponse& from);

  inline CMsgDOTARequestBatchPlayerResourcesResponse& operator=(const CMsgDOTARequestBatchPlayerResourcesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestBatchPlayerResourcesResponse& default_instance();

  void Swap(CMsgDOTARequestBatchPlayerResourcesResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestBatchPlayerResourcesResponse* New() const { return New(NULL); }

  CMsgDOTARequestBatchPlayerResourcesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARequestBatchPlayerResourcesResponse& from);
  void MergeFrom(const CMsgDOTARequestBatchPlayerResourcesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTARequestBatchPlayerResourcesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestBatchPlayerResourcesResponse_Result Result;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTARequestBatchPlayerResourcesResponse.Result results = 6;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 6;
  const ::CMsgDOTARequestBatchPlayerResourcesResponse_Result& results(int index) const;
  ::CMsgDOTARequestBatchPlayerResourcesResponse_Result* mutable_results(int index);
  ::CMsgDOTARequestBatchPlayerResourcesResponse_Result* add_results();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestBatchPlayerResourcesResponse_Result >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestBatchPlayerResourcesResponse_Result >&
      results() const;

  // @@protoc_insertion_point(class_scope:CMsgDOTARequestBatchPlayerResourcesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestBatchPlayerResourcesResponse_Result > results_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARequestBatchPlayerResourcesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAPlayerFailedToConnect : public ::google::protobuf::Message {
 public:
  CMsgDOTAPlayerFailedToConnect();
  virtual ~CMsgDOTAPlayerFailedToConnect();

  CMsgDOTAPlayerFailedToConnect(const CMsgDOTAPlayerFailedToConnect& from);

  inline CMsgDOTAPlayerFailedToConnect& operator=(const CMsgDOTAPlayerFailedToConnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPlayerFailedToConnect& default_instance();

  void Swap(CMsgDOTAPlayerFailedToConnect* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPlayerFailedToConnect* New() const { return New(NULL); }

  CMsgDOTAPlayerFailedToConnect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAPlayerFailedToConnect& from);
  void MergeFrom(const CMsgDOTAPlayerFailedToConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAPlayerFailedToConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 failed_loaders = 1;
  int failed_loaders_size() const;
  void clear_failed_loaders();
  static const int kFailedLoadersFieldNumber = 1;
  ::google::protobuf::uint64 failed_loaders(int index) const;
  void set_failed_loaders(int index, ::google::protobuf::uint64 value);
  void add_failed_loaders(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      failed_loaders() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_failed_loaders();

  // repeated fixed64 abandoned_loaders = 2;
  int abandoned_loaders_size() const;
  void clear_abandoned_loaders();
  static const int kAbandonedLoadersFieldNumber = 2;
  ::google::protobuf::uint64 abandoned_loaders(int index) const;
  void set_abandoned_loaders(int index, ::google::protobuf::uint64 value);
  void add_abandoned_loaders(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      abandoned_loaders() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_abandoned_loaders();

  // @@protoc_insertion_point(class_scope:CMsgDOTAPlayerFailedToConnect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > failed_loaders_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > abandoned_loaders_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAPlayerFailedToConnect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToRelayConnect : public ::google::protobuf::Message {
 public:
  CMsgGCToRelayConnect();
  virtual ~CMsgGCToRelayConnect();

  CMsgGCToRelayConnect(const CMsgGCToRelayConnect& from);

  inline CMsgGCToRelayConnect& operator=(const CMsgGCToRelayConnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToRelayConnect& default_instance();

  void Swap(CMsgGCToRelayConnect* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToRelayConnect* New() const { return New(NULL); }

  CMsgGCToRelayConnect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToRelayConnect& from);
  void MergeFrom(const CMsgGCToRelayConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToRelayConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 source_tv_public_addr = 1;
  bool has_source_tv_public_addr() const;
  void clear_source_tv_public_addr();
  static const int kSourceTvPublicAddrFieldNumber = 1;
  ::google::protobuf::uint32 source_tv_public_addr() const;
  void set_source_tv_public_addr(::google::protobuf::uint32 value);

  // optional uint32 source_tv_private_addr = 2;
  bool has_source_tv_private_addr() const;
  void clear_source_tv_private_addr();
  static const int kSourceTvPrivateAddrFieldNumber = 2;
  ::google::protobuf::uint32 source_tv_private_addr() const;
  void set_source_tv_private_addr(::google::protobuf::uint32 value);

  // optional uint32 source_tv_port = 3;
  bool has_source_tv_port() const;
  void clear_source_tv_port();
  static const int kSourceTvPortFieldNumber = 3;
  ::google::protobuf::uint32 source_tv_port() const;
  void set_source_tv_port(::google::protobuf::uint32 value);

  // optional uint64 game_server_steam_id = 4;
  bool has_game_server_steam_id() const;
  void clear_game_server_steam_id();
  static const int kGameServerSteamIdFieldNumber = 4;
  ::google::protobuf::uint64 game_server_steam_id() const;
  void set_game_server_steam_id(::google::protobuf::uint64 value);

  // optional uint32 parent_count = 5;
  bool has_parent_count() const;
  void clear_parent_count();
  static const int kParentCountFieldNumber = 5;
  ::google::protobuf::uint32 parent_count() const;
  void set_parent_count(::google::protobuf::uint32 value);

  // optional fixed64 tv_unique_secret_code = 6;
  bool has_tv_unique_secret_code() const;
  void clear_tv_unique_secret_code();
  static const int kTvUniqueSecretCodeFieldNumber = 6;
  ::google::protobuf::uint64 tv_unique_secret_code() const;
  void set_tv_unique_secret_code(::google::protobuf::uint64 value);

  // optional fixed64 source_tv_steamid = 7;
  bool has_source_tv_steamid() const;
  void clear_source_tv_steamid();
  static const int kSourceTvSteamidFieldNumber = 7;
  ::google::protobuf::uint64 source_tv_steamid() const;
  void set_source_tv_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToRelayConnect)
 private:
  inline void set_has_source_tv_public_addr();
  inline void clear_has_source_tv_public_addr();
  inline void set_has_source_tv_private_addr();
  inline void clear_has_source_tv_private_addr();
  inline void set_has_source_tv_port();
  inline void clear_has_source_tv_port();
  inline void set_has_game_server_steam_id();
  inline void clear_has_game_server_steam_id();
  inline void set_has_parent_count();
  inline void clear_has_parent_count();
  inline void set_has_tv_unique_secret_code();
  inline void clear_has_tv_unique_secret_code();
  inline void set_has_source_tv_steamid();
  inline void clear_has_source_tv_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 source_tv_public_addr_;
  ::google::protobuf::uint32 source_tv_private_addr_;
  ::google::protobuf::uint64 game_server_steam_id_;
  ::google::protobuf::uint32 source_tv_port_;
  ::google::protobuf::uint32 parent_count_;
  ::google::protobuf::uint64 tv_unique_secret_code_;
  ::google::protobuf::uint64 source_tv_steamid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToRelayConnect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGCToLANServerRelayConnect : public ::google::protobuf::Message {
 public:
  CMsgGCGCToLANServerRelayConnect();
  virtual ~CMsgGCGCToLANServerRelayConnect();

  CMsgGCGCToLANServerRelayConnect(const CMsgGCGCToLANServerRelayConnect& from);

  inline CMsgGCGCToLANServerRelayConnect& operator=(const CMsgGCGCToLANServerRelayConnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGCToLANServerRelayConnect& default_instance();

  void Swap(CMsgGCGCToLANServerRelayConnect* other);

  // implements Message ----------------------------------------------

  inline CMsgGCGCToLANServerRelayConnect* New() const { return New(NULL); }

  CMsgGCGCToLANServerRelayConnect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGCToLANServerRelayConnect& from);
  void MergeFrom(const CMsgGCGCToLANServerRelayConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCGCToLANServerRelayConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 relay_steamid = 1;
  bool has_relay_steamid() const;
  void clear_relay_steamid();
  static const int kRelaySteamidFieldNumber = 1;
  ::google::protobuf::uint64 relay_steamid() const;
  void set_relay_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCGCToLANServerRelayConnect)
 private:
  inline void set_has_relay_steamid();
  inline void clear_has_relay_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 relay_steamid_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGCToLANServerRelayConnect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToRelayConnectResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToRelayConnectResponse();
  virtual ~CMsgGCToRelayConnectResponse();

  CMsgGCToRelayConnectResponse(const CMsgGCToRelayConnectResponse& from);

  inline CMsgGCToRelayConnectResponse& operator=(const CMsgGCToRelayConnectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToRelayConnectResponse& default_instance();

  void Swap(CMsgGCToRelayConnectResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToRelayConnectResponse* New() const { return New(NULL); }

  CMsgGCToRelayConnectResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToRelayConnectResponse& from);
  void MergeFrom(const CMsgGCToRelayConnectResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToRelayConnectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToRelayConnectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToRelayConnectResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCBanStatusRequest : public ::google::protobuf::Message {
 public:
  CMsgGCBanStatusRequest();
  virtual ~CMsgGCBanStatusRequest();

  CMsgGCBanStatusRequest(const CMsgGCBanStatusRequest& from);

  inline CMsgGCBanStatusRequest& operator=(const CMsgGCBanStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCBanStatusRequest& default_instance();

  void Swap(CMsgGCBanStatusRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCBanStatusRequest* New() const { return New(NULL); }

  CMsgGCBanStatusRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCBanStatusRequest& from);
  void MergeFrom(const CMsgGCBanStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCBanStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCBanStatusRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCBanStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCBanStatusResponse : public ::google::protobuf::Message {
 public:
  CMsgGCBanStatusResponse();
  virtual ~CMsgGCBanStatusResponse();

  CMsgGCBanStatusResponse(const CMsgGCBanStatusResponse& from);

  inline CMsgGCBanStatusResponse& operator=(const CMsgGCBanStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCBanStatusResponse& default_instance();

  void Swap(CMsgGCBanStatusResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCBanStatusResponse* New() const { return New(NULL); }

  CMsgGCBanStatusResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCBanStatusResponse& from);
  void MergeFrom(const CMsgGCBanStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCBanStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional bool low_priority = 2;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 2;
  bool low_priority() const;
  void set_low_priority(bool value);

  // optional bool text_chat_banned = 3;
  bool has_text_chat_banned() const;
  void clear_text_chat_banned();
  static const int kTextChatBannedFieldNumber = 3;
  bool text_chat_banned() const;
  void set_text_chat_banned(bool value);

  // optional bool voice_chat_banned = 4;
  bool has_voice_chat_banned() const;
  void clear_voice_chat_banned();
  static const int kVoiceChatBannedFieldNumber = 4;
  bool voice_chat_banned() const;
  void set_voice_chat_banned(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCBanStatusResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_low_priority();
  inline void clear_has_low_priority();
  inline void set_has_text_chat_banned();
  inline void clear_has_text_chat_banned();
  inline void set_has_voice_chat_banned();
  inline void clear_has_voice_chat_banned();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  bool low_priority_;
  bool text_chat_banned_;
  bool voice_chat_banned_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCBanStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTournamentItemEvent : public ::google::protobuf::Message {
 public:
  CMsgTournamentItemEvent();
  virtual ~CMsgTournamentItemEvent();

  CMsgTournamentItemEvent(const CMsgTournamentItemEvent& from);

  inline CMsgTournamentItemEvent& operator=(const CMsgTournamentItemEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTournamentItemEvent& default_instance();

  void Swap(CMsgTournamentItemEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgTournamentItemEvent* New() const { return New(NULL); }

  CMsgTournamentItemEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTournamentItemEvent& from);
  void MergeFrom(const CMsgTournamentItemEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTournamentItemEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 killer_account_id = 1;
  bool has_killer_account_id() const;
  void clear_killer_account_id();
  static const int kKillerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 killer_account_id() const;
  void set_killer_account_id(::google::protobuf::uint32 value);

  // optional fixed32 victim_account_id = 2;
  bool has_victim_account_id() const;
  void clear_victim_account_id();
  static const int kVictimAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 victim_account_id() const;
  void set_victim_account_id(::google::protobuf::uint32 value);

  // optional .DOTA_TournamentEvents event_type = 3 [default = TE_FIRST_BLOOD];
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 3;
  ::DOTA_TournamentEvents event_type() const;
  void set_event_type(::DOTA_TournamentEvents value);

  // optional int32 tv_delay = 4;
  bool has_tv_delay() const;
  void clear_tv_delay();
  static const int kTvDelayFieldNumber = 4;
  ::google::protobuf::int32 tv_delay() const;
  void set_tv_delay(::google::protobuf::int32 value);

  // optional int32 dota_time = 5;
  bool has_dota_time() const;
  void clear_dota_time();
  static const int kDotaTimeFieldNumber = 5;
  ::google::protobuf::int32 dota_time() const;
  void set_dota_time(::google::protobuf::int32 value);

  // optional float replay_time = 6;
  bool has_replay_time() const;
  void clear_replay_time();
  static const int kReplayTimeFieldNumber = 6;
  float replay_time() const;
  void set_replay_time(float value);

  // optional string loot_list = 7;
  bool has_loot_list() const;
  void clear_loot_list();
  static const int kLootListFieldNumber = 7;
  const ::std::string& loot_list() const;
  void set_loot_list(const ::std::string& value);
  void set_loot_list(const char* value);
  void set_loot_list(const char* value, size_t size);
  ::std::string* mutable_loot_list();
  ::std::string* release_loot_list();
  void set_allocated_loot_list(::std::string* loot_list);

  // optional uint32 event_team = 8;
  bool has_event_team() const;
  void clear_event_team();
  static const int kEventTeamFieldNumber = 8;
  ::google::protobuf::uint32 event_team() const;
  void set_event_team(::google::protobuf::uint32 value);

  // optional uint32 multi_kill_count = 9;
  bool has_multi_kill_count() const;
  void clear_multi_kill_count();
  static const int kMultiKillCountFieldNumber = 9;
  ::google::protobuf::uint32 multi_kill_count() const;
  void set_multi_kill_count(::google::protobuf::uint32 value);

  // optional uint32 winner_score = 10;
  bool has_winner_score() const;
  void clear_winner_score();
  static const int kWinnerScoreFieldNumber = 10;
  ::google::protobuf::uint32 winner_score() const;
  void set_winner_score(::google::protobuf::uint32 value);

  // optional uint32 loser_score = 11;
  bool has_loser_score() const;
  void clear_loser_score();
  static const int kLoserScoreFieldNumber = 11;
  ::google::protobuf::uint32 loser_score() const;
  void set_loser_score(::google::protobuf::uint32 value);

  // repeated .CProtoItemHeroStatue hero_statues = 12;
  int hero_statues_size() const;
  void clear_hero_statues();
  static const int kHeroStatuesFieldNumber = 12;
  const ::CProtoItemHeroStatue& hero_statues(int index) const;
  ::CProtoItemHeroStatue* mutable_hero_statues(int index);
  ::CProtoItemHeroStatue* add_hero_statues();
  ::google::protobuf::RepeatedPtrField< ::CProtoItemHeroStatue >*
      mutable_hero_statues();
  const ::google::protobuf::RepeatedPtrField< ::CProtoItemHeroStatue >&
      hero_statues() const;

  // @@protoc_insertion_point(class_scope:CMsgTournamentItemEvent)
 private:
  inline void set_has_killer_account_id();
  inline void clear_has_killer_account_id();
  inline void set_has_victim_account_id();
  inline void clear_has_victim_account_id();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_tv_delay();
  inline void clear_has_tv_delay();
  inline void set_has_dota_time();
  inline void clear_has_dota_time();
  inline void set_has_replay_time();
  inline void clear_has_replay_time();
  inline void set_has_loot_list();
  inline void clear_has_loot_list();
  inline void set_has_event_team();
  inline void clear_has_event_team();
  inline void set_has_multi_kill_count();
  inline void clear_has_multi_kill_count();
  inline void set_has_winner_score();
  inline void clear_has_winner_score();
  inline void set_has_loser_score();
  inline void clear_has_loser_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 killer_account_id_;
  ::google::protobuf::uint32 victim_account_id_;
  int event_type_;
  ::google::protobuf::int32 tv_delay_;
  ::google::protobuf::int32 dota_time_;
  float replay_time_;
  ::google::protobuf::internal::ArenaStringPtr loot_list_;
  ::google::protobuf::uint32 event_team_;
  ::google::protobuf::uint32 multi_kill_count_;
  ::google::protobuf::uint32 winner_score_;
  ::google::protobuf::uint32 loser_score_;
  ::google::protobuf::RepeatedPtrField< ::CProtoItemHeroStatue > hero_statues_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgTournamentItemEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTournamentItemEventResponse : public ::google::protobuf::Message {
 public:
  CMsgTournamentItemEventResponse();
  virtual ~CMsgTournamentItemEventResponse();

  CMsgTournamentItemEventResponse(const CMsgTournamentItemEventResponse& from);

  inline CMsgTournamentItemEventResponse& operator=(const CMsgTournamentItemEventResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTournamentItemEventResponse& default_instance();

  void Swap(CMsgTournamentItemEventResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgTournamentItemEventResponse* New() const { return New(NULL); }

  CMsgTournamentItemEventResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTournamentItemEventResponse& from);
  void MergeFrom(const CMsgTournamentItemEventResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTournamentItemEventResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DOTA_TournamentEvents event_type = 1 [default = TE_FIRST_BLOOD];
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::DOTA_TournamentEvents event_type() const;
  void set_event_type(::DOTA_TournamentEvents value);

  // optional uint32 viewers_granted = 6;
  bool has_viewers_granted() const;
  void clear_viewers_granted();
  static const int kViewersGrantedFieldNumber = 6;
  ::google::protobuf::uint32 viewers_granted() const;
  void set_viewers_granted(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTournamentItemEventResponse)
 private:
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_viewers_granted();
  inline void clear_has_viewers_granted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int event_type_;
  ::google::protobuf::uint32 viewers_granted_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgTournamentItemEventResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTeamFanfare : public ::google::protobuf::Message {
 public:
  CMsgTeamFanfare();
  virtual ~CMsgTeamFanfare();

  CMsgTeamFanfare(const CMsgTeamFanfare& from);

  inline CMsgTeamFanfare& operator=(const CMsgTeamFanfare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTeamFanfare& default_instance();

  void Swap(CMsgTeamFanfare* other);

  // implements Message ----------------------------------------------

  inline CMsgTeamFanfare* New() const { return New(NULL); }

  CMsgTeamFanfare* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTeamFanfare& from);
  void MergeFrom(const CMsgTeamFanfare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgTeamFanfare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTeamFanfare)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgTeamFanfare* default_instance_;
};
// -------------------------------------------------------------------

class CMsgResponseTeamFanfare : public ::google::protobuf::Message {
 public:
  CMsgResponseTeamFanfare();
  virtual ~CMsgResponseTeamFanfare();

  CMsgResponseTeamFanfare(const CMsgResponseTeamFanfare& from);

  inline CMsgResponseTeamFanfare& operator=(const CMsgResponseTeamFanfare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResponseTeamFanfare& default_instance();

  void Swap(CMsgResponseTeamFanfare* other);

  // implements Message ----------------------------------------------

  inline CMsgResponseTeamFanfare* New() const { return New(NULL); }

  CMsgResponseTeamFanfare* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgResponseTeamFanfare& from);
  void MergeFrom(const CMsgResponseTeamFanfare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgResponseTeamFanfare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fanfare_goodguys = 1;
  bool has_fanfare_goodguys() const;
  void clear_fanfare_goodguys();
  static const int kFanfareGoodguysFieldNumber = 1;
  ::google::protobuf::uint32 fanfare_goodguys() const;
  void set_fanfare_goodguys(::google::protobuf::uint32 value);

  // optional uint32 fanfare_badguys = 2;
  bool has_fanfare_badguys() const;
  void clear_fanfare_badguys();
  static const int kFanfareBadguysFieldNumber = 2;
  ::google::protobuf::uint32 fanfare_badguys() const;
  void set_fanfare_badguys(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgResponseTeamFanfare)
 private:
  inline void set_has_fanfare_goodguys();
  inline void clear_has_fanfare_goodguys();
  inline void set_has_fanfare_badguys();
  inline void clear_has_fanfare_badguys();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 fanfare_goodguys_;
  ::google::protobuf::uint32 fanfare_badguys_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgResponseTeamFanfare* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerUploadSaveGame : public ::google::protobuf::Message {
 public:
  CMsgGameServerUploadSaveGame();
  virtual ~CMsgGameServerUploadSaveGame();

  CMsgGameServerUploadSaveGame(const CMsgGameServerUploadSaveGame& from);

  inline CMsgGameServerUploadSaveGame& operator=(const CMsgGameServerUploadSaveGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerUploadSaveGame& default_instance();

  void Swap(CMsgGameServerUploadSaveGame* other);

  // implements Message ----------------------------------------------

  inline CMsgGameServerUploadSaveGame* New() const { return New(NULL); }

  CMsgGameServerUploadSaveGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerUploadSaveGame& from);
  void MergeFrom(const CMsgGameServerUploadSaveGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameServerUploadSaveGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_time = 1;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 1;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // optional bytes save_game_data = 2;
  bool has_save_game_data() const;
  void clear_save_game_data();
  static const int kSaveGameDataFieldNumber = 2;
  const ::std::string& save_game_data() const;
  void set_save_game_data(const ::std::string& value);
  void set_save_game_data(const char* value);
  void set_save_game_data(const void* value, size_t size);
  ::std::string* mutable_save_game_data();
  ::std::string* release_save_game_data();
  void set_allocated_save_game_data(::std::string* save_game_data);

  // optional uint64 lobby_id = 3;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // repeated uint64 player_steam_ids = 4;
  int player_steam_ids_size() const;
  void clear_player_steam_ids();
  static const int kPlayerSteamIdsFieldNumber = 4;
  ::google::protobuf::uint64 player_steam_ids(int index) const;
  void set_player_steam_ids(int index, ::google::protobuf::uint64 value);
  void add_player_steam_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_steam_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_steam_ids();

  // @@protoc_insertion_point(class_scope:CMsgGameServerUploadSaveGame)
 private:
  inline void set_has_game_time();
  inline void clear_has_game_time();
  inline void set_has_save_game_data();
  inline void clear_has_save_game_data();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr save_game_data_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_steam_ids_;
  ::google::protobuf::uint32 game_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerUploadSaveGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerSaveGameResult : public ::google::protobuf::Message {
 public:
  CMsgGameServerSaveGameResult();
  virtual ~CMsgGameServerSaveGameResult();

  CMsgGameServerSaveGameResult(const CMsgGameServerSaveGameResult& from);

  inline CMsgGameServerSaveGameResult& operator=(const CMsgGameServerSaveGameResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerSaveGameResult& default_instance();

  void Swap(CMsgGameServerSaveGameResult* other);

  // implements Message ----------------------------------------------

  inline CMsgGameServerSaveGameResult* New() const { return New(NULL); }

  CMsgGameServerSaveGameResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerSaveGameResult& from);
  void MergeFrom(const CMsgGameServerSaveGameResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameServerSaveGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameServerSaveGameResult_Result Result;
  static const Result SaveSuccessful = CMsgGameServerSaveGameResult_Result_SaveSuccessful;
  static const Result SessionNotFound = CMsgGameServerSaveGameResult_Result_SessionNotFound;
  static const Result DatabaseError = CMsgGameServerSaveGameResult_Result_DatabaseError;
  static const Result TooBig = CMsgGameServerSaveGameResult_Result_TooBig;
  static inline bool Result_IsValid(int value) {
    return CMsgGameServerSaveGameResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgGameServerSaveGameResult_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgGameServerSaveGameResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgGameServerSaveGameResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgGameServerSaveGameResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgGameServerSaveGameResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgGameServerSaveGameResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGameServerSaveGameResult.Result result = 1 [default = SaveSuccessful];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::CMsgGameServerSaveGameResult_Result result() const;
  void set_result(::CMsgGameServerSaveGameResult_Result value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerSaveGameResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerSaveGameResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerGetLoadGame : public ::google::protobuf::Message {
 public:
  CMsgGameServerGetLoadGame();
  virtual ~CMsgGameServerGetLoadGame();

  CMsgGameServerGetLoadGame(const CMsgGameServerGetLoadGame& from);

  inline CMsgGameServerGetLoadGame& operator=(const CMsgGameServerGetLoadGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerGetLoadGame& default_instance();

  void Swap(CMsgGameServerGetLoadGame* other);

  // implements Message ----------------------------------------------

  inline CMsgGameServerGetLoadGame* New() const { return New(NULL); }

  CMsgGameServerGetLoadGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerGetLoadGame& from);
  void MergeFrom(const CMsgGameServerGetLoadGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameServerGetLoadGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 save_id = 1;
  bool has_save_id() const;
  void clear_save_id();
  static const int kSaveIdFieldNumber = 1;
  ::google::protobuf::uint32 save_id() const;
  void set_save_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerGetLoadGame)
 private:
  inline void set_has_save_id();
  inline void clear_has_save_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 save_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerGetLoadGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerGetLoadGameResult : public ::google::protobuf::Message {
 public:
  CMsgGameServerGetLoadGameResult();
  virtual ~CMsgGameServerGetLoadGameResult();

  CMsgGameServerGetLoadGameResult(const CMsgGameServerGetLoadGameResult& from);

  inline CMsgGameServerGetLoadGameResult& operator=(const CMsgGameServerGetLoadGameResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerGetLoadGameResult& default_instance();

  void Swap(CMsgGameServerGetLoadGameResult* other);

  // implements Message ----------------------------------------------

  inline CMsgGameServerGetLoadGameResult* New() const { return New(NULL); }

  CMsgGameServerGetLoadGameResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerGetLoadGameResult& from);
  void MergeFrom(const CMsgGameServerGetLoadGameResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGameServerGetLoadGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes save_game_data = 1;
  bool has_save_game_data() const;
  void clear_save_game_data();
  static const int kSaveGameDataFieldNumber = 1;
  const ::std::string& save_game_data() const;
  void set_save_game_data(const ::std::string& value);
  void set_save_game_data(const char* value);
  void set_save_game_data(const void* value, size_t size);
  ::std::string* mutable_save_game_data();
  ::std::string* release_save_game_data();
  void set_allocated_save_game_data(::std::string* save_game_data);

  // @@protoc_insertion_point(class_scope:CMsgGameServerGetLoadGameResult)
 private:
  inline void set_has_save_game_data();
  inline void clear_has_save_game_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr save_game_data_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerGetLoadGameResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGenerateDiretidePrizeList : public ::google::protobuf::Message {
 public:
  CMsgDOTAGenerateDiretidePrizeList();
  virtual ~CMsgDOTAGenerateDiretidePrizeList();

  CMsgDOTAGenerateDiretidePrizeList(const CMsgDOTAGenerateDiretidePrizeList& from);

  inline CMsgDOTAGenerateDiretidePrizeList& operator=(const CMsgDOTAGenerateDiretidePrizeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGenerateDiretidePrizeList& default_instance();

  void Swap(CMsgDOTAGenerateDiretidePrizeList* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGenerateDiretidePrizeList* New() const { return New(NULL); }

  CMsgDOTAGenerateDiretidePrizeList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGenerateDiretidePrizeList& from);
  void MergeFrom(const CMsgDOTAGenerateDiretidePrizeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAGenerateDiretidePrizeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_list = 1;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 1;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // optional uint32 highest_roshan_level = 2;
  bool has_highest_roshan_level() const;
  void clear_highest_roshan_level();
  static const int kHighestRoshanLevelFieldNumber = 2;
  ::google::protobuf::uint32 highest_roshan_level() const;
  void set_highest_roshan_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGenerateDiretidePrizeList)
 private:
  inline void set_has_prize_list();
  inline void clear_has_prize_list();
  inline void set_has_highest_roshan_level();
  inline void clear_has_highest_roshan_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prize_list_;
  ::google::protobuf::uint32 highest_roshan_level_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGenerateDiretidePrizeList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAGenerateDiretidePrizeListResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTAGenerateDiretidePrizeListResponse();
  virtual ~CMsgDOTAGenerateDiretidePrizeListResponse();

  CMsgDOTAGenerateDiretidePrizeListResponse(const CMsgDOTAGenerateDiretidePrizeListResponse& from);

  inline CMsgDOTAGenerateDiretidePrizeListResponse& operator=(const CMsgDOTAGenerateDiretidePrizeListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGenerateDiretidePrizeListResponse& default_instance();

  void Swap(CMsgDOTAGenerateDiretidePrizeListResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGenerateDiretidePrizeListResponse* New() const { return New(NULL); }

  CMsgDOTAGenerateDiretidePrizeListResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAGenerateDiretidePrizeListResponse& from);
  void MergeFrom(const CMsgDOTAGenerateDiretidePrizeListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAGenerateDiretidePrizeListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 item_defs = 1;
  int item_defs_size() const;
  void clear_item_defs();
  static const int kItemDefsFieldNumber = 1;
  ::google::protobuf::uint32 item_defs(int index) const;
  void set_item_defs(int index, ::google::protobuf::uint32 value);
  void add_item_defs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_defs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_defs();

  // repeated fixed64 steam_ids = 2;
  int steam_ids_size() const;
  void clear_steam_ids();
  static const int kSteamIdsFieldNumber = 2;
  ::google::protobuf::uint64 steam_ids(int index) const;
  void set_steam_ids(int index, ::google::protobuf::uint64 value);
  void add_steam_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steam_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steam_ids();

  // optional uint32 prize_list = 3;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 3;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAGenerateDiretidePrizeListResponse)
 private:
  inline void set_has_prize_list();
  inline void clear_has_prize_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_defs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steam_ids_;
  ::google::protobuf::uint32 prize_list_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAGenerateDiretidePrizeListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTARewardDiretidePrizes : public ::google::protobuf::Message {
 public:
  CMsgDOTARewardDiretidePrizes();
  virtual ~CMsgDOTARewardDiretidePrizes();

  CMsgDOTARewardDiretidePrizes(const CMsgDOTARewardDiretidePrizes& from);

  inline CMsgDOTARewardDiretidePrizes& operator=(const CMsgDOTARewardDiretidePrizes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARewardDiretidePrizes& default_instance();

  void Swap(CMsgDOTARewardDiretidePrizes* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARewardDiretidePrizes* New() const { return New(NULL); }

  CMsgDOTARewardDiretidePrizes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTARewardDiretidePrizes& from);
  void MergeFrom(const CMsgDOTARewardDiretidePrizes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTARewardDiretidePrizes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // optional uint32 prize_list = 2;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 2;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTARewardDiretidePrizes)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_prize_list();
  inline void clear_has_prize_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 prize_list_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTARewardDiretidePrizes* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTADiretidePrizesRewardedResponse : public ::google::protobuf::Message {
 public:
  CMsgDOTADiretidePrizesRewardedResponse();
  virtual ~CMsgDOTADiretidePrizesRewardedResponse();

  CMsgDOTADiretidePrizesRewardedResponse(const CMsgDOTADiretidePrizesRewardedResponse& from);

  inline CMsgDOTADiretidePrizesRewardedResponse& operator=(const CMsgDOTADiretidePrizesRewardedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTADiretidePrizesRewardedResponse& default_instance();

  void Swap(CMsgDOTADiretidePrizesRewardedResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTADiretidePrizesRewardedResponse* New() const { return New(NULL); }

  CMsgDOTADiretidePrizesRewardedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTADiretidePrizesRewardedResponse& from);
  void MergeFrom(const CMsgDOTADiretidePrizesRewardedResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTADiretidePrizesRewardedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_list = 1;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 1;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTADiretidePrizesRewardedResponse)
 private:
  inline void set_has_prize_list();
  inline void clear_has_prize_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prize_list_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTADiretidePrizesRewardedResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAAwardEventPoints_AwardPoints : public ::google::protobuf::Message {
 public:
  CMsgDOTAAwardEventPoints_AwardPoints();
  virtual ~CMsgDOTAAwardEventPoints_AwardPoints();

  CMsgDOTAAwardEventPoints_AwardPoints(const CMsgDOTAAwardEventPoints_AwardPoints& from);

  inline CMsgDOTAAwardEventPoints_AwardPoints& operator=(const CMsgDOTAAwardEventPoints_AwardPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAAwardEventPoints_AwardPoints& default_instance();

  void Swap(CMsgDOTAAwardEventPoints_AwardPoints* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAAwardEventPoints_AwardPoints* New() const { return New(NULL); }

  CMsgDOTAAwardEventPoints_AwardPoints* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAAwardEventPoints_AwardPoints& from);
  void MergeFrom(const CMsgDOTAAwardEventPoints_AwardPoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAAwardEventPoints_AwardPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional int32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::int32 points() const;
  void set_points(::google::protobuf::int32 value);

  // optional int32 premium_points = 3;
  bool has_premium_points() const;
  void clear_premium_points();
  static const int kPremiumPointsFieldNumber = 3;
  ::google::protobuf::int32 premium_points() const;
  void set_premium_points(::google::protobuf::int32 value);

  // optional uint32 trade_ban_time = 5;
  bool has_trade_ban_time() const;
  void clear_trade_ban_time();
  static const int kTradeBanTimeFieldNumber = 5;
  ::google::protobuf::uint32 trade_ban_time() const;
  void set_trade_ban_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAAwardEventPoints.AwardPoints)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_points();
  inline void clear_has_points();
  inline void set_has_premium_points();
  inline void clear_has_premium_points();
  inline void set_has_trade_ban_time();
  inline void clear_has_trade_ban_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 points_;
  ::google::protobuf::int32 premium_points_;
  ::google::protobuf::uint32 trade_ban_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAAwardEventPoints_AwardPoints* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAAwardEventPoints : public ::google::protobuf::Message {
 public:
  CMsgDOTAAwardEventPoints();
  virtual ~CMsgDOTAAwardEventPoints();

  CMsgDOTAAwardEventPoints(const CMsgDOTAAwardEventPoints& from);

  inline CMsgDOTAAwardEventPoints& operator=(const CMsgDOTAAwardEventPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAAwardEventPoints& default_instance();

  void Swap(CMsgDOTAAwardEventPoints* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAAwardEventPoints* New() const { return New(NULL); }

  CMsgDOTAAwardEventPoints* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAAwardEventPoints& from);
  void MergeFrom(const CMsgDOTAAwardEventPoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAAwardEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAAwardEventPoints_AwardPoints AwardPoints;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAAwardEventPoints.AwardPoints award_points = 1;
  int award_points_size() const;
  void clear_award_points();
  static const int kAwardPointsFieldNumber = 1;
  const ::CMsgDOTAAwardEventPoints_AwardPoints& award_points(int index) const;
  ::CMsgDOTAAwardEventPoints_AwardPoints* mutable_award_points(int index);
  ::CMsgDOTAAwardEventPoints_AwardPoints* add_award_points();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAwardEventPoints_AwardPoints >*
      mutable_award_points();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAwardEventPoints_AwardPoints >&
      award_points() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 event_id = 4;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 4;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAAwardEventPoints)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAwardEventPoints_AwardPoints > award_points_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAAwardEventPoints* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops : public ::google::protobuf::Message {
 public:
  CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops();
  virtual ~CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops();

  CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from);

  inline CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& operator=(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& default_instance();

  void Swap(CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* New() const { return New(NULL); }

  CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from);
  void MergeFrom(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string loot_list = 1;
  bool has_loot_list() const;
  void clear_loot_list();
  static const int kLootListFieldNumber = 1;
  const ::std::string& loot_list() const;
  void set_loot_list(const ::std::string& value);
  void set_loot_list(const char* value);
  void set_loot_list(const char* value, size_t size);
  ::std::string* mutable_loot_list();
  ::std::string* release_loot_list();
  void set_allocated_loot_list(::std::string* loot_list);

  // repeated uint32 player_account_ids = 2;
  int player_account_ids_size() const;
  void clear_player_account_ids();
  static const int kPlayerAccountIdsFieldNumber = 2;
  ::google::protobuf::uint32 player_account_ids(int index) const;
  void set_player_account_ids(int index, ::google::protobuf::uint32 value);
  void add_player_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_account_ids();

  // optional bool no_trade = 3;
  bool has_no_trade() const;
  void clear_no_trade();
  static const int kNoTradeFieldNumber = 3;
  bool no_trade() const;
  void set_no_trade(bool value);

  // optional bool randomize_reward = 4;
  bool has_randomize_reward() const;
  void clear_randomize_reward();
  static const int kRandomizeRewardFieldNumber = 4;
  bool randomize_reward() const;
  void set_randomize_reward(bool value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops)
 private:
  inline void set_has_loot_list();
  inline void clear_has_loot_list();
  inline void set_has_no_trade();
  inline void clear_has_no_trade();
  inline void set_has_randomize_reward();
  inline void clear_has_randomize_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr loot_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_account_ids_;
  bool no_trade_;
  bool randomize_reward_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCSignoutAwardAdditionalDrops : public ::google::protobuf::Message {
 public:
  CMsgServerToGCSignoutAwardAdditionalDrops();
  virtual ~CMsgServerToGCSignoutAwardAdditionalDrops();

  CMsgServerToGCSignoutAwardAdditionalDrops(const CMsgServerToGCSignoutAwardAdditionalDrops& from);

  inline CMsgServerToGCSignoutAwardAdditionalDrops& operator=(const CMsgServerToGCSignoutAwardAdditionalDrops& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCSignoutAwardAdditionalDrops& default_instance();

  void Swap(CMsgServerToGCSignoutAwardAdditionalDrops* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCSignoutAwardAdditionalDrops* New() const { return New(NULL); }

  CMsgServerToGCSignoutAwardAdditionalDrops* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCSignoutAwardAdditionalDrops& from);
  void MergeFrom(const CMsgServerToGCSignoutAwardAdditionalDrops& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCSignoutAwardAdditionalDrops* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops AdditionalDrops;

  // accessors -------------------------------------------------------

  // repeated .CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops drops = 1;
  int drops_size() const;
  void clear_drops();
  static const int kDropsFieldNumber = 1;
  const ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& drops(int index) const;
  ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* mutable_drops(int index);
  ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* add_drops();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >*
      mutable_drops();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >&
      drops() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCSignoutAwardAdditionalDrops)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops > drops_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCSignoutAwardAdditionalDrops* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateTI4HeroQuest_Player : public ::google::protobuf::Message {
 public:
  CMsgDOTAUpdateTI4HeroQuest_Player();
  virtual ~CMsgDOTAUpdateTI4HeroQuest_Player();

  CMsgDOTAUpdateTI4HeroQuest_Player(const CMsgDOTAUpdateTI4HeroQuest_Player& from);

  inline CMsgDOTAUpdateTI4HeroQuest_Player& operator=(const CMsgDOTAUpdateTI4HeroQuest_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUpdateTI4HeroQuest_Player& default_instance();

  void Swap(CMsgDOTAUpdateTI4HeroQuest_Player* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAUpdateTI4HeroQuest_Player* New() const { return New(NULL); }

  CMsgDOTAUpdateTI4HeroQuest_Player* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAUpdateTI4HeroQuest_Player& from);
  void MergeFrom(const CMsgDOTAUpdateTI4HeroQuest_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAUpdateTI4HeroQuest_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAUpdateTI4HeroQuest.Player)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAUpdateTI4HeroQuest_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateTI4HeroQuest : public ::google::protobuf::Message {
 public:
  CMsgDOTAUpdateTI4HeroQuest();
  virtual ~CMsgDOTAUpdateTI4HeroQuest();

  CMsgDOTAUpdateTI4HeroQuest(const CMsgDOTAUpdateTI4HeroQuest& from);

  inline CMsgDOTAUpdateTI4HeroQuest& operator=(const CMsgDOTAUpdateTI4HeroQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUpdateTI4HeroQuest& default_instance();

  void Swap(CMsgDOTAUpdateTI4HeroQuest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAUpdateTI4HeroQuest* New() const { return New(NULL); }

  CMsgDOTAUpdateTI4HeroQuest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAUpdateTI4HeroQuest& from);
  void MergeFrom(const CMsgDOTAUpdateTI4HeroQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAUpdateTI4HeroQuest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAUpdateTI4HeroQuest_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAUpdateTI4HeroQuest.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::CMsgDOTAUpdateTI4HeroQuest_Player& players(int index) const;
  ::CMsgDOTAUpdateTI4HeroQuest_Player* mutable_players(int index);
  ::CMsgDOTAUpdateTI4HeroQuest_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAUpdateTI4HeroQuest_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAUpdateTI4HeroQuest_Player >&
      players() const;

  // optional fixed32 match_start_time = 2;
  bool has_match_start_time() const;
  void clear_match_start_time();
  static const int kMatchStartTimeFieldNumber = 2;
  ::google::protobuf::uint32 match_start_time() const;
  void set_match_start_time(::google::protobuf::uint32 value);

  // optional uint64 match_id = 3;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 3;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAUpdateTI4HeroQuest)
 private:
  inline void set_has_match_start_time();
  inline void clear_has_match_start_time();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAUpdateTI4HeroQuest_Player > players_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 match_start_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAUpdateTI4HeroQuest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFrostivusTimeElapsed_User : public ::google::protobuf::Message {
 public:
  CMsgDOTAFrostivusTimeElapsed_User();
  virtual ~CMsgDOTAFrostivusTimeElapsed_User();

  CMsgDOTAFrostivusTimeElapsed_User(const CMsgDOTAFrostivusTimeElapsed_User& from);

  inline CMsgDOTAFrostivusTimeElapsed_User& operator=(const CMsgDOTAFrostivusTimeElapsed_User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFrostivusTimeElapsed_User& default_instance();

  void Swap(CMsgDOTAFrostivusTimeElapsed_User* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFrostivusTimeElapsed_User* New() const { return New(NULL); }

  CMsgDOTAFrostivusTimeElapsed_User* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFrostivusTimeElapsed_User& from);
  void MergeFrom(const CMsgDOTAFrostivusTimeElapsed_User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAFrostivusTimeElapsed_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 time_elapsed_s = 2;
  bool has_time_elapsed_s() const;
  void clear_time_elapsed_s();
  static const int kTimeElapsedSFieldNumber = 2;
  ::google::protobuf::uint32 time_elapsed_s() const;
  void set_time_elapsed_s(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFrostivusTimeElapsed.User)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_time_elapsed_s();
  inline void clear_has_time_elapsed_s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 time_elapsed_s_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFrostivusTimeElapsed_User* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTAFrostivusTimeElapsed : public ::google::protobuf::Message {
 public:
  CMsgDOTAFrostivusTimeElapsed();
  virtual ~CMsgDOTAFrostivusTimeElapsed();

  CMsgDOTAFrostivusTimeElapsed(const CMsgDOTAFrostivusTimeElapsed& from);

  inline CMsgDOTAFrostivusTimeElapsed& operator=(const CMsgDOTAFrostivusTimeElapsed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFrostivusTimeElapsed& default_instance();

  void Swap(CMsgDOTAFrostivusTimeElapsed* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFrostivusTimeElapsed* New() const { return New(NULL); }

  CMsgDOTAFrostivusTimeElapsed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTAFrostivusTimeElapsed& from);
  void MergeFrom(const CMsgDOTAFrostivusTimeElapsed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTAFrostivusTimeElapsed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAFrostivusTimeElapsed_User User;

  // accessors -------------------------------------------------------

  // optional uint32 seconds = 1;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 1;
  ::google::protobuf::uint32 seconds() const;
  void set_seconds(::google::protobuf::uint32 value);

  // repeated .CMsgDOTAFrostivusTimeElapsed.User users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  const ::CMsgDOTAFrostivusTimeElapsed_User& users(int index) const;
  ::CMsgDOTAFrostivusTimeElapsed_User* mutable_users(int index);
  ::CMsgDOTAFrostivusTimeElapsed_User* add_users();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFrostivusTimeElapsed_User >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFrostivusTimeElapsed_User >&
      users() const;

  // optional uint64 match_id = 3;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 3;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDOTAFrostivusTimeElapsed)
 private:
  inline void set_has_seconds();
  inline void clear_has_seconds();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFrostivusTimeElapsed_User > users_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 seconds_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTAFrostivusTimeElapsed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerPingRequest : public ::google::protobuf::Message {
 public:
  CMsgGCToServerPingRequest();
  virtual ~CMsgGCToServerPingRequest();

  CMsgGCToServerPingRequest(const CMsgGCToServerPingRequest& from);

  inline CMsgGCToServerPingRequest& operator=(const CMsgGCToServerPingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerPingRequest& default_instance();

  void Swap(CMsgGCToServerPingRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPingRequest* New() const { return New(NULL); }

  CMsgGCToServerPingRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerPingRequest& from);
  void MergeFrom(const CMsgGCToServerPingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerPingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 request_id = 1;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional uint64 request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  ::google::protobuf::uint64 request_time() const;
  void set_request_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToServerPingRequest)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_request_time();
  inline void clear_has_request_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 request_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerPingRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerPingResponse : public ::google::protobuf::Message {
 public:
  CMsgGCToServerPingResponse();
  virtual ~CMsgGCToServerPingResponse();

  CMsgGCToServerPingResponse(const CMsgGCToServerPingResponse& from);

  inline CMsgGCToServerPingResponse& operator=(const CMsgGCToServerPingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerPingResponse& default_instance();

  void Swap(CMsgGCToServerPingResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPingResponse* New() const { return New(NULL); }

  CMsgGCToServerPingResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerPingResponse& from);
  void MergeFrom(const CMsgGCToServerPingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerPingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 request_id = 1;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional uint64 request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  ::google::protobuf::uint64 request_time() const;
  void set_request_time(::google::protobuf::uint64 value);

  // optional uint32 cluster = 3;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 3;
  ::google::protobuf::uint32 cluster() const;
  void set_cluster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToServerPingResponse)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_request_time();
  inline void clear_has_request_time();
  inline void set_has_cluster();
  inline void clear_has_cluster();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 request_time_;
  ::google::protobuf::uint32 cluster_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerPingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerConsoleCommand : public ::google::protobuf::Message {
 public:
  CMsgGCToServerConsoleCommand();
  virtual ~CMsgGCToServerConsoleCommand();

  CMsgGCToServerConsoleCommand(const CMsgGCToServerConsoleCommand& from);

  inline CMsgGCToServerConsoleCommand& operator=(const CMsgGCToServerConsoleCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerConsoleCommand& default_instance();

  void Swap(CMsgGCToServerConsoleCommand* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerConsoleCommand* New() const { return New(NULL); }

  CMsgGCToServerConsoleCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerConsoleCommand& from);
  void MergeFrom(const CMsgGCToServerConsoleCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerConsoleCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string console_command = 1;
  bool has_console_command() const;
  void clear_console_command();
  static const int kConsoleCommandFieldNumber = 1;
  const ::std::string& console_command() const;
  void set_console_command(const ::std::string& value);
  void set_console_command(const char* value);
  void set_console_command(const char* value, size_t size);
  ::std::string* mutable_console_command();
  ::std::string* release_console_command();
  void set_allocated_console_command(::std::string* console_command);

  // @@protoc_insertion_point(class_scope:CMsgGCToServerConsoleCommand)
 private:
  inline void set_has_console_command();
  inline void clear_has_console_command();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr console_command_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerConsoleCommand* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerGetEventPoints : public ::google::protobuf::Message {
 public:
  CMsgServerGetEventPoints();
  virtual ~CMsgServerGetEventPoints();

  CMsgServerGetEventPoints(const CMsgServerGetEventPoints& from);

  inline CMsgServerGetEventPoints& operator=(const CMsgServerGetEventPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerGetEventPoints& default_instance();

  void Swap(CMsgServerGetEventPoints* other);

  // implements Message ----------------------------------------------

  inline CMsgServerGetEventPoints* New() const { return New(NULL); }

  CMsgServerGetEventPoints* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerGetEventPoints& from);
  void MergeFrom(const CMsgServerGetEventPoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerGetEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // repeated uint32 account_id = 2;
  int account_id_size() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id(int index) const;
  void set_account_id(int index, ::google::protobuf::uint32 value);
  void add_account_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_id();

  // @@protoc_insertion_point(class_scope:CMsgServerGetEventPoints)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_id_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerGetEventPoints* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerGetEventPointsResponse_Points : public ::google::protobuf::Message {
 public:
  CMsgServerGetEventPointsResponse_Points();
  virtual ~CMsgServerGetEventPointsResponse_Points();

  CMsgServerGetEventPointsResponse_Points(const CMsgServerGetEventPointsResponse_Points& from);

  inline CMsgServerGetEventPointsResponse_Points& operator=(const CMsgServerGetEventPointsResponse_Points& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerGetEventPointsResponse_Points& default_instance();

  void Swap(CMsgServerGetEventPointsResponse_Points* other);

  // implements Message ----------------------------------------------

  inline CMsgServerGetEventPointsResponse_Points* New() const { return New(NULL); }

  CMsgServerGetEventPointsResponse_Points* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerGetEventPointsResponse_Points& from);
  void MergeFrom(const CMsgServerGetEventPointsResponse_Points& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerGetEventPointsResponse_Points* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 points_total = 2;
  bool has_points_total() const;
  void clear_points_total();
  static const int kPointsTotalFieldNumber = 2;
  ::google::protobuf::uint32 points_total() const;
  void set_points_total(::google::protobuf::uint32 value);

  // optional bool owned = 4;
  bool has_owned() const;
  void clear_owned();
  static const int kOwnedFieldNumber = 4;
  bool owned() const;
  void set_owned(bool value);

  // @@protoc_insertion_point(class_scope:CMsgServerGetEventPointsResponse.Points)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_points_total();
  inline void clear_has_points_total();
  inline void set_has_owned();
  inline void clear_has_owned();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 points_total_;
  bool owned_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerGetEventPointsResponse_Points* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerGetEventPointsResponse : public ::google::protobuf::Message {
 public:
  CMsgServerGetEventPointsResponse();
  virtual ~CMsgServerGetEventPointsResponse();

  CMsgServerGetEventPointsResponse(const CMsgServerGetEventPointsResponse& from);

  inline CMsgServerGetEventPointsResponse& operator=(const CMsgServerGetEventPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerGetEventPointsResponse& default_instance();

  void Swap(CMsgServerGetEventPointsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgServerGetEventPointsResponse* New() const { return New(NULL); }

  CMsgServerGetEventPointsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerGetEventPointsResponse& from);
  void MergeFrom(const CMsgServerGetEventPointsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerGetEventPointsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerGetEventPointsResponse_Points Points;

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // repeated .CMsgServerGetEventPointsResponse.Points points = 2;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  const ::CMsgServerGetEventPointsResponse_Points& points(int index) const;
  ::CMsgServerGetEventPointsResponse_Points* mutable_points(int index);
  ::CMsgServerGetEventPointsResponse_Points* add_points();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerGetEventPointsResponse_Points >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerGetEventPointsResponse_Points >&
      points() const;

  // @@protoc_insertion_point(class_scope:CMsgServerGetEventPointsResponse)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerGetEventPointsResponse_Points > points_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerGetEventPointsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerGrantSurveyPermission_Survey : public ::google::protobuf::Message {
 public:
  CMsgServerGrantSurveyPermission_Survey();
  virtual ~CMsgServerGrantSurveyPermission_Survey();

  CMsgServerGrantSurveyPermission_Survey(const CMsgServerGrantSurveyPermission_Survey& from);

  inline CMsgServerGrantSurveyPermission_Survey& operator=(const CMsgServerGrantSurveyPermission_Survey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerGrantSurveyPermission_Survey& default_instance();

  void Swap(CMsgServerGrantSurveyPermission_Survey* other);

  // implements Message ----------------------------------------------

  inline CMsgServerGrantSurveyPermission_Survey* New() const { return New(NULL); }

  CMsgServerGrantSurveyPermission_Survey* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerGrantSurveyPermission_Survey& from);
  void MergeFrom(const CMsgServerGrantSurveyPermission_Survey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerGrantSurveyPermission_Survey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 question_id = 2;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 2;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional uint32 expire_time = 3;
  bool has_expire_time() const;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 3;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // optional uint64 survey_key = 4;
  bool has_survey_key() const;
  void clear_survey_key();
  static const int kSurveyKeyFieldNumber = 4;
  ::google::protobuf::uint64 survey_key() const;
  void set_survey_key(::google::protobuf::uint64 value);

  // optional uint64 extra_data = 5;
  bool has_extra_data() const;
  void clear_extra_data();
  static const int kExtraDataFieldNumber = 5;
  ::google::protobuf::uint64 extra_data() const;
  void set_extra_data(::google::protobuf::uint64 value);

  // optional uint64 extra_data_32 = 6;
  bool has_extra_data_32() const;
  void clear_extra_data_32();
  static const int kExtraData32FieldNumber = 6;
  ::google::protobuf::uint64 extra_data_32() const;
  void set_extra_data_32(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgServerGrantSurveyPermission.Survey)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_question_id();
  inline void clear_has_question_id();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  inline void set_has_survey_key();
  inline void clear_has_survey_key();
  inline void set_has_extra_data();
  inline void clear_has_extra_data();
  inline void set_has_extra_data_32();
  inline void clear_has_extra_data_32();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint64 survey_key_;
  ::google::protobuf::uint64 extra_data_;
  ::google::protobuf::uint64 extra_data_32_;
  ::google::protobuf::uint32 expire_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerGrantSurveyPermission_Survey* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerGrantSurveyPermission : public ::google::protobuf::Message {
 public:
  CMsgServerGrantSurveyPermission();
  virtual ~CMsgServerGrantSurveyPermission();

  CMsgServerGrantSurveyPermission(const CMsgServerGrantSurveyPermission& from);

  inline CMsgServerGrantSurveyPermission& operator=(const CMsgServerGrantSurveyPermission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerGrantSurveyPermission& default_instance();

  void Swap(CMsgServerGrantSurveyPermission* other);

  // implements Message ----------------------------------------------

  inline CMsgServerGrantSurveyPermission* New() const { return New(NULL); }

  CMsgServerGrantSurveyPermission* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerGrantSurveyPermission& from);
  void MergeFrom(const CMsgServerGrantSurveyPermission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerGrantSurveyPermission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerGrantSurveyPermission_Survey Survey;

  // accessors -------------------------------------------------------

  // repeated .CMsgServerGrantSurveyPermission.Survey surveys = 1;
  int surveys_size() const;
  void clear_surveys();
  static const int kSurveysFieldNumber = 1;
  const ::CMsgServerGrantSurveyPermission_Survey& surveys(int index) const;
  ::CMsgServerGrantSurveyPermission_Survey* mutable_surveys(int index);
  ::CMsgServerGrantSurveyPermission_Survey* add_surveys();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerGrantSurveyPermission_Survey >*
      mutable_surveys();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerGrantSurveyPermission_Survey >&
      surveys() const;

  // @@protoc_insertion_point(class_scope:CMsgServerGrantSurveyPermission)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerGrantSurveyPermission_Survey > surveys_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerGrantSurveyPermission* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerGrantSurveyPermissionResponse : public ::google::protobuf::Message {
 public:
  CMsgServerGrantSurveyPermissionResponse();
  virtual ~CMsgServerGrantSurveyPermissionResponse();

  CMsgServerGrantSurveyPermissionResponse(const CMsgServerGrantSurveyPermissionResponse& from);

  inline CMsgServerGrantSurveyPermissionResponse& operator=(const CMsgServerGrantSurveyPermissionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerGrantSurveyPermissionResponse& default_instance();

  void Swap(CMsgServerGrantSurveyPermissionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgServerGrantSurveyPermissionResponse* New() const { return New(NULL); }

  CMsgServerGrantSurveyPermissionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerGrantSurveyPermissionResponse& from);
  void MergeFrom(const CMsgServerGrantSurveyPermissionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerGrantSurveyPermissionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerGrantSurveyPermissionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerGrantSurveyPermissionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchConnectionStats_Player : public ::google::protobuf::Message {
 public:
  CMsgServerToGCMatchConnectionStats_Player();
  virtual ~CMsgServerToGCMatchConnectionStats_Player();

  CMsgServerToGCMatchConnectionStats_Player(const CMsgServerToGCMatchConnectionStats_Player& from);

  inline CMsgServerToGCMatchConnectionStats_Player& operator=(const CMsgServerToGCMatchConnectionStats_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCMatchConnectionStats_Player& default_instance();

  void Swap(CMsgServerToGCMatchConnectionStats_Player* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchConnectionStats_Player* New() const { return New(NULL); }

  CMsgServerToGCMatchConnectionStats_Player* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCMatchConnectionStats_Player& from);
  void MergeFrom(const CMsgServerToGCMatchConnectionStats_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCMatchConnectionStats_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional fixed32 ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional uint32 avg_ping_ms = 3;
  bool has_avg_ping_ms() const;
  void clear_avg_ping_ms();
  static const int kAvgPingMsFieldNumber = 3;
  ::google::protobuf::uint32 avg_ping_ms() const;
  void set_avg_ping_ms(::google::protobuf::uint32 value);

  // optional float packet_loss = 5;
  bool has_packet_loss() const;
  void clear_packet_loss();
  static const int kPacketLossFieldNumber = 5;
  float packet_loss() const;
  void set_packet_loss(float value);

  // optional float ping_deviation = 6;
  bool has_ping_deviation() const;
  void clear_ping_deviation();
  static const int kPingDeviationFieldNumber = 6;
  float ping_deviation() const;
  void set_ping_deviation(float value);

  // optional uint32 full_resends = 7;
  bool has_full_resends() const;
  void clear_full_resends();
  static const int kFullResendsFieldNumber = 7;
  ::google::protobuf::uint32 full_resends() const;
  void set_full_resends(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCMatchConnectionStats.Player)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_avg_ping_ms();
  inline void clear_has_avg_ping_ms();
  inline void set_has_packet_loss();
  inline void clear_has_packet_loss();
  inline void set_has_ping_deviation();
  inline void clear_has_ping_deviation();
  inline void set_has_full_resends();
  inline void clear_has_full_resends();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 avg_ping_ms_;
  float packet_loss_;
  float ping_deviation_;
  ::google::protobuf::uint32 full_resends_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCMatchConnectionStats_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchConnectionStats : public ::google::protobuf::Message {
 public:
  CMsgServerToGCMatchConnectionStats();
  virtual ~CMsgServerToGCMatchConnectionStats();

  CMsgServerToGCMatchConnectionStats(const CMsgServerToGCMatchConnectionStats& from);

  inline CMsgServerToGCMatchConnectionStats& operator=(const CMsgServerToGCMatchConnectionStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCMatchConnectionStats& default_instance();

  void Swap(CMsgServerToGCMatchConnectionStats* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchConnectionStats* New() const { return New(NULL); }

  CMsgServerToGCMatchConnectionStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCMatchConnectionStats& from);
  void MergeFrom(const CMsgServerToGCMatchConnectionStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCMatchConnectionStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCMatchConnectionStats_Player Player;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 region_id = 2;
  bool has_region_id() const;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::uint32 region_id() const;
  void set_region_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 3;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 3;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // repeated .CMsgServerToGCMatchConnectionStats.Player players = 4;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 4;
  const ::CMsgServerToGCMatchConnectionStats_Player& players(int index) const;
  ::CMsgServerToGCMatchConnectionStats_Player* mutable_players(int index);
  ::CMsgServerToGCMatchConnectionStats_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCMatchConnectionStats_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCMatchConnectionStats_Player >&
      players() const;

  // optional uint32 cluster_id = 5;
  bool has_cluster_id() const;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 5;
  ::google::protobuf::uint32 cluster_id() const;
  void set_cluster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCMatchConnectionStats)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_region_id();
  inline void clear_has_region_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_cluster_id();
  inline void clear_has_cluster_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 region_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCMatchConnectionStats_Player > players_;
  ::google::protobuf::uint32 cluster_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCMatchConnectionStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerGCUpdateSpectatorCount : public ::google::protobuf::Message {
 public:
  CMsgServerGCUpdateSpectatorCount();
  virtual ~CMsgServerGCUpdateSpectatorCount();

  CMsgServerGCUpdateSpectatorCount(const CMsgServerGCUpdateSpectatorCount& from);

  inline CMsgServerGCUpdateSpectatorCount& operator=(const CMsgServerGCUpdateSpectatorCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerGCUpdateSpectatorCount& default_instance();

  void Swap(CMsgServerGCUpdateSpectatorCount* other);

  // implements Message ----------------------------------------------

  inline CMsgServerGCUpdateSpectatorCount* New() const { return New(NULL); }

  CMsgServerGCUpdateSpectatorCount* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerGCUpdateSpectatorCount& from);
  void MergeFrom(const CMsgServerGCUpdateSpectatorCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerGCUpdateSpectatorCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 spectator_count = 1;
  bool has_spectator_count() const;
  void clear_spectator_count();
  static const int kSpectatorCountFieldNumber = 1;
  ::google::protobuf::uint32 spectator_count() const;
  void set_spectator_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerGCUpdateSpectatorCount)
 private:
  inline void set_has_spectator_count();
  inline void clear_has_spectator_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 spectator_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerGCUpdateSpectatorCount* default_instance_;
};
// -------------------------------------------------------------------

class CSerializedCombatLog_Dictionary_DictString : public ::google::protobuf::Message {
 public:
  CSerializedCombatLog_Dictionary_DictString();
  virtual ~CSerializedCombatLog_Dictionary_DictString();

  CSerializedCombatLog_Dictionary_DictString(const CSerializedCombatLog_Dictionary_DictString& from);

  inline CSerializedCombatLog_Dictionary_DictString& operator=(const CSerializedCombatLog_Dictionary_DictString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSerializedCombatLog_Dictionary_DictString& default_instance();

  void Swap(CSerializedCombatLog_Dictionary_DictString* other);

  // implements Message ----------------------------------------------

  inline CSerializedCombatLog_Dictionary_DictString* New() const { return New(NULL); }

  CSerializedCombatLog_Dictionary_DictString* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSerializedCombatLog_Dictionary_DictString& from);
  void MergeFrom(const CSerializedCombatLog_Dictionary_DictString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSerializedCombatLog_Dictionary_DictString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CSerializedCombatLog.Dictionary.DictString)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CSerializedCombatLog_Dictionary_DictString* default_instance_;
};
// -------------------------------------------------------------------

class CSerializedCombatLog_Dictionary : public ::google::protobuf::Message {
 public:
  CSerializedCombatLog_Dictionary();
  virtual ~CSerializedCombatLog_Dictionary();

  CSerializedCombatLog_Dictionary(const CSerializedCombatLog_Dictionary& from);

  inline CSerializedCombatLog_Dictionary& operator=(const CSerializedCombatLog_Dictionary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSerializedCombatLog_Dictionary& default_instance();

  void Swap(CSerializedCombatLog_Dictionary* other);

  // implements Message ----------------------------------------------

  inline CSerializedCombatLog_Dictionary* New() const { return New(NULL); }

  CSerializedCombatLog_Dictionary* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSerializedCombatLog_Dictionary& from);
  void MergeFrom(const CSerializedCombatLog_Dictionary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSerializedCombatLog_Dictionary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSerializedCombatLog_Dictionary_DictString DictString;

  // accessors -------------------------------------------------------

  // repeated .CSerializedCombatLog.Dictionary.DictString strings = 1;
  int strings_size() const;
  void clear_strings();
  static const int kStringsFieldNumber = 1;
  const ::CSerializedCombatLog_Dictionary_DictString& strings(int index) const;
  ::CSerializedCombatLog_Dictionary_DictString* mutable_strings(int index);
  ::CSerializedCombatLog_Dictionary_DictString* add_strings();
  ::google::protobuf::RepeatedPtrField< ::CSerializedCombatLog_Dictionary_DictString >*
      mutable_strings();
  const ::google::protobuf::RepeatedPtrField< ::CSerializedCombatLog_Dictionary_DictString >&
      strings() const;

  // @@protoc_insertion_point(class_scope:CSerializedCombatLog.Dictionary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSerializedCombatLog_Dictionary_DictString > strings_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CSerializedCombatLog_Dictionary* default_instance_;
};
// -------------------------------------------------------------------

class CSerializedCombatLog : public ::google::protobuf::Message {
 public:
  CSerializedCombatLog();
  virtual ~CSerializedCombatLog();

  CSerializedCombatLog(const CSerializedCombatLog& from);

  inline CSerializedCombatLog& operator=(const CSerializedCombatLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSerializedCombatLog& default_instance();

  void Swap(CSerializedCombatLog* other);

  // implements Message ----------------------------------------------

  inline CSerializedCombatLog* New() const { return New(NULL); }

  CSerializedCombatLog* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSerializedCombatLog& from);
  void MergeFrom(const CSerializedCombatLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSerializedCombatLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSerializedCombatLog_Dictionary Dictionary;

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional .CSerializedCombatLog.Dictionary dictionary = 2;
  bool has_dictionary() const;
  void clear_dictionary();
  static const int kDictionaryFieldNumber = 2;
  const ::CSerializedCombatLog_Dictionary& dictionary() const;
  ::CSerializedCombatLog_Dictionary* mutable_dictionary();
  ::CSerializedCombatLog_Dictionary* release_dictionary();
  void set_allocated_dictionary(::CSerializedCombatLog_Dictionary* dictionary);

  // repeated .CMsgDOTACombatLogEntry entries = 3;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 3;
  const ::CMsgDOTACombatLogEntry& entries(int index) const;
  ::CMsgDOTACombatLogEntry* mutable_entries(int index);
  ::CMsgDOTACombatLogEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTACombatLogEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACombatLogEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:CSerializedCombatLog)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_dictionary();
  inline void clear_has_dictionary();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CSerializedCombatLog_Dictionary* dictionary_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTACombatLogEntry > entries_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CSerializedCombatLog* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetAdditionalEquips : public ::google::protobuf::Message {
 public:
  CMsgServerToGCGetAdditionalEquips();
  virtual ~CMsgServerToGCGetAdditionalEquips();

  CMsgServerToGCGetAdditionalEquips(const CMsgServerToGCGetAdditionalEquips& from);

  inline CMsgServerToGCGetAdditionalEquips& operator=(const CMsgServerToGCGetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCGetAdditionalEquips& default_instance();

  void Swap(CMsgServerToGCGetAdditionalEquips* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetAdditionalEquips* New() const { return New(NULL); }

  CMsgServerToGCGetAdditionalEquips* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCGetAdditionalEquips& from);
  void MergeFrom(const CMsgServerToGCGetAdditionalEquips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCGetAdditionalEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgServerToGCGetAdditionalEquips)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCGetAdditionalEquips* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips : public ::google::protobuf::Message {
 public:
  CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips();
  virtual ~CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips();

  CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from);

  inline CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& operator=(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& default_instance();

  void Swap(CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* New() const { return New(NULL); }

  CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from);
  void MergeFrom(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // repeated .CAdditionalEquipSlot equips = 2;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 2;
  const ::CAdditionalEquipSlot& equips(int index) const;
  ::CAdditionalEquipSlot* mutable_equips(int index);
  ::CAdditionalEquipSlot* add_equips();
  ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
      mutable_equips();
  const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
      equips() const;

  // @@protoc_insertion_point(class_scope:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot > equips_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetAdditionalEquipsResponse : public ::google::protobuf::Message {
 public:
  CMsgServerToGCGetAdditionalEquipsResponse();
  virtual ~CMsgServerToGCGetAdditionalEquipsResponse();

  CMsgServerToGCGetAdditionalEquipsResponse(const CMsgServerToGCGetAdditionalEquipsResponse& from);

  inline CMsgServerToGCGetAdditionalEquipsResponse& operator=(const CMsgServerToGCGetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCGetAdditionalEquipsResponse& default_instance();

  void Swap(CMsgServerToGCGetAdditionalEquipsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetAdditionalEquipsResponse* New() const { return New(NULL); }

  CMsgServerToGCGetAdditionalEquipsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCGetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgServerToGCGetAdditionalEquipsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCGetAdditionalEquipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips CUserEquips;

  // accessors -------------------------------------------------------

  // repeated .CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  const ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& equips(int index) const;
  ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* mutable_equips(int index);
  ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* add_equips();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >*
      mutable_equips();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >&
      equips() const;

  // @@protoc_insertion_point(class_scope:CMsgServerToGCGetAdditionalEquipsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips > equips_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCGetAdditionalEquipsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetProfileCard : public ::google::protobuf::Message {
 public:
  CMsgServerToGCGetProfileCard();
  virtual ~CMsgServerToGCGetProfileCard();

  CMsgServerToGCGetProfileCard(const CMsgServerToGCGetProfileCard& from);

  inline CMsgServerToGCGetProfileCard& operator=(const CMsgServerToGCGetProfileCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCGetProfileCard& default_instance();

  void Swap(CMsgServerToGCGetProfileCard* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetProfileCard* New() const { return New(NULL); }

  CMsgServerToGCGetProfileCard* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCGetProfileCard& from);
  void MergeFrom(const CMsgServerToGCGetProfileCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCGetProfileCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgServerToGCGetProfileCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCGetProfileCard* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetProfileCardResponse : public ::google::protobuf::Message {
 public:
  CMsgServerToGCGetProfileCardResponse();
  virtual ~CMsgServerToGCGetProfileCardResponse();

  CMsgServerToGCGetProfileCardResponse(const CMsgServerToGCGetProfileCardResponse& from);

  inline CMsgServerToGCGetProfileCardResponse& operator=(const CMsgServerToGCGetProfileCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCGetProfileCardResponse& default_instance();

  void Swap(CMsgServerToGCGetProfileCardResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetProfileCardResponse* New() const { return New(NULL); }

  CMsgServerToGCGetProfileCardResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCGetProfileCardResponse& from);
  void MergeFrom(const CMsgServerToGCGetProfileCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCGetProfileCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgDOTAProfileCard cards = 1;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 1;
  const ::CMsgDOTAProfileCard& cards(int index) const;
  ::CMsgDOTAProfileCard* mutable_cards(int index);
  ::CMsgDOTAProfileCard* add_cards();
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileCard >*
      mutable_cards();
  const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileCard >&
      cards() const;

  // @@protoc_insertion_point(class_scope:CMsgServerToGCGetProfileCardResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileCard > cards_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCGetProfileCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCVictoryPredictions_Record : public ::google::protobuf::Message {
 public:
  CMsgServerToGCVictoryPredictions_Record();
  virtual ~CMsgServerToGCVictoryPredictions_Record();

  CMsgServerToGCVictoryPredictions_Record(const CMsgServerToGCVictoryPredictions_Record& from);

  inline CMsgServerToGCVictoryPredictions_Record& operator=(const CMsgServerToGCVictoryPredictions_Record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCVictoryPredictions_Record& default_instance();

  void Swap(CMsgServerToGCVictoryPredictions_Record* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCVictoryPredictions_Record* New() const { return New(NULL); }

  CMsgServerToGCVictoryPredictions_Record* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCVictoryPredictions_Record& from);
  void MergeFrom(const CMsgServerToGCVictoryPredictions_Record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCVictoryPredictions_Record* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // repeated uint64 item_ids = 5;
  int item_ids_size() const;
  void clear_item_ids();
  static const int kItemIdsFieldNumber = 5;
  ::google::protobuf::uint64 item_ids(int index) const;
  void set_item_ids(int index, ::google::protobuf::uint64 value);
  void add_item_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_ids();

  // @@protoc_insertion_point(class_scope:CMsgServerToGCVictoryPredictions.Record)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_ids_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCVictoryPredictions_Record* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCVictoryPredictions : public ::google::protobuf::Message {
 public:
  CMsgServerToGCVictoryPredictions();
  virtual ~CMsgServerToGCVictoryPredictions();

  CMsgServerToGCVictoryPredictions(const CMsgServerToGCVictoryPredictions& from);

  inline CMsgServerToGCVictoryPredictions& operator=(const CMsgServerToGCVictoryPredictions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCVictoryPredictions& default_instance();

  void Swap(CMsgServerToGCVictoryPredictions* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCVictoryPredictions* New() const { return New(NULL); }

  CMsgServerToGCVictoryPredictions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCVictoryPredictions& from);
  void MergeFrom(const CMsgServerToGCVictoryPredictions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCVictoryPredictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCVictoryPredictions_Record Record;

  // accessors -------------------------------------------------------

  // repeated .CMsgServerToGCVictoryPredictions.Record records = 1;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 1;
  const ::CMsgServerToGCVictoryPredictions_Record& records(int index) const;
  ::CMsgServerToGCVictoryPredictions_Record* mutable_records(int index);
  ::CMsgServerToGCVictoryPredictions_Record* add_records();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCVictoryPredictions_Record >*
      mutable_records();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCVictoryPredictions_Record >&
      records() const;

  // @@protoc_insertion_point(class_scope:CMsgServerToGCVictoryPredictions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCVictoryPredictions_Record > records_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCVictoryPredictions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSuspiciousActivity : public ::google::protobuf::Message {
 public:
  CMsgSuspiciousActivity();
  virtual ~CMsgSuspiciousActivity();

  CMsgSuspiciousActivity(const CMsgSuspiciousActivity& from);

  inline CMsgSuspiciousActivity& operator=(const CMsgSuspiciousActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSuspiciousActivity& default_instance();

  void Swap(CMsgSuspiciousActivity* other);

  // implements Message ----------------------------------------------

  inline CMsgSuspiciousActivity* New() const { return New(NULL); }

  CMsgSuspiciousActivity* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSuspiciousActivity& from);
  void MergeFrom(const CMsgSuspiciousActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSuspiciousActivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional .ESuspiciousActivity activity = 2 [default = k_ESuspiciousActivity_VAC_MultipleInstances];
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 2;
  ::ESuspiciousActivity activity() const;
  void set_activity(::ESuspiciousActivity value);

  // optional sint32 intdata1 = 3;
  bool has_intdata1() const;
  void clear_intdata1();
  static const int kIntdata1FieldNumber = 3;
  ::google::protobuf::int32 intdata1() const;
  void set_intdata1(::google::protobuf::int32 value);

  // optional sint32 intdata2 = 4;
  bool has_intdata2() const;
  void clear_intdata2();
  static const int kIntdata2FieldNumber = 4;
  ::google::protobuf::int32 intdata2() const;
  void set_intdata2(::google::protobuf::int32 value);

  // optional uint32 time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSuspiciousActivity)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_intdata1();
  inline void clear_has_intdata1();
  inline void set_has_intdata2();
  inline void clear_has_intdata2();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  int activity_;
  ::google::protobuf::int32 intdata1_;
  ::google::protobuf::int32 intdata2_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSuspiciousActivity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCRequestStatus : public ::google::protobuf::Message {
 public:
  CMsgServerToGCRequestStatus();
  virtual ~CMsgServerToGCRequestStatus();

  CMsgServerToGCRequestStatus(const CMsgServerToGCRequestStatus& from);

  inline CMsgServerToGCRequestStatus& operator=(const CMsgServerToGCRequestStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCRequestStatus& default_instance();

  void Swap(CMsgServerToGCRequestStatus* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRequestStatus* New() const { return New(NULL); }

  CMsgServerToGCRequestStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCRequestStatus& from);
  void MergeFrom(const CMsgServerToGCRequestStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCRequestStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgServerToGCRequestStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCRequestStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCRequestStatus_Response : public ::google::protobuf::Message {
 public:
  CMsgServerToGCRequestStatus_Response();
  virtual ~CMsgServerToGCRequestStatus_Response();

  CMsgServerToGCRequestStatus_Response(const CMsgServerToGCRequestStatus_Response& from);

  inline CMsgServerToGCRequestStatus_Response& operator=(const CMsgServerToGCRequestStatus_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCRequestStatus_Response& default_instance();

  void Swap(CMsgServerToGCRequestStatus_Response* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRequestStatus_Response* New() const { return New(NULL); }

  CMsgServerToGCRequestStatus_Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCRequestStatus_Response& from);
  void MergeFrom(const CMsgServerToGCRequestStatus_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCRequestStatus_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response = 1;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 1;
  ::google::protobuf::uint32 response() const;
  void set_response(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCRequestStatus_Response)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 response_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCRequestStatus_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutAssassinMiniGameInfo : public ::google::protobuf::Message {
 public:
  CMsgSignOutAssassinMiniGameInfo();
  virtual ~CMsgSignOutAssassinMiniGameInfo();

  CMsgSignOutAssassinMiniGameInfo(const CMsgSignOutAssassinMiniGameInfo& from);

  inline CMsgSignOutAssassinMiniGameInfo& operator=(const CMsgSignOutAssassinMiniGameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutAssassinMiniGameInfo& default_instance();

  void Swap(CMsgSignOutAssassinMiniGameInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutAssassinMiniGameInfo* New() const { return New(NULL); }

  CMsgSignOutAssassinMiniGameInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutAssassinMiniGameInfo& from);
  void MergeFrom(const CMsgSignOutAssassinMiniGameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutAssassinMiniGameInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 winning_players = 1;
  int winning_players_size() const;
  void clear_winning_players();
  static const int kWinningPlayersFieldNumber = 1;
  ::google::protobuf::uint64 winning_players(int index) const;
  void set_winning_players(int index, ::google::protobuf::uint64 value);
  void add_winning_players(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      winning_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_winning_players();

  // repeated fixed64 losing_players = 2;
  int losing_players_size() const;
  void clear_losing_players();
  static const int kLosingPlayersFieldNumber = 2;
  ::google::protobuf::uint64 losing_players(int index) const;
  void set_losing_players(int index, ::google::protobuf::uint64 value);
  void add_losing_players(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      losing_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_losing_players();

  // repeated fixed64 arcana_owners = 3;
  int arcana_owners_size() const;
  void clear_arcana_owners();
  static const int kArcanaOwnersFieldNumber = 3;
  ::google::protobuf::uint64 arcana_owners(int index) const;
  void set_arcana_owners(int index, ::google::protobuf::uint64 value);
  void add_arcana_owners(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      arcana_owners() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_arcana_owners();

  // optional bool assassin_won = 4;
  bool has_assassin_won() const;
  void clear_assassin_won();
  static const int kAssassinWonFieldNumber = 4;
  bool assassin_won() const;
  void set_assassin_won(bool value);

  // optional uint32 target_hero_id = 5;
  bool has_target_hero_id() const;
  void clear_target_hero_id();
  static const int kTargetHeroIdFieldNumber = 5;
  ::google::protobuf::uint32 target_hero_id() const;
  void set_target_hero_id(::google::protobuf::uint32 value);

  // optional bool contract_completed = 6;
  bool has_contract_completed() const;
  void clear_contract_completed();
  static const int kContractCompletedFieldNumber = 6;
  bool contract_completed() const;
  void set_contract_completed(bool value);

  // optional float contract_complete_time = 7;
  bool has_contract_complete_time() const;
  void clear_contract_complete_time();
  static const int kContractCompleteTimeFieldNumber = 7;
  float contract_complete_time() const;
  void set_contract_complete_time(float value);

  // optional bool pa_is_radiant = 8;
  bool has_pa_is_radiant() const;
  void clear_pa_is_radiant();
  static const int kPaIsRadiantFieldNumber = 8;
  bool pa_is_radiant() const;
  void set_pa_is_radiant(bool value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutAssassinMiniGameInfo)
 private:
  inline void set_has_assassin_won();
  inline void clear_has_assassin_won();
  inline void set_has_target_hero_id();
  inline void clear_has_target_hero_id();
  inline void set_has_contract_completed();
  inline void clear_has_contract_completed();
  inline void set_has_contract_complete_time();
  inline void clear_has_contract_complete_time();
  inline void set_has_pa_is_radiant();
  inline void clear_has_pa_is_radiant();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > winning_players_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > losing_players_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > arcana_owners_;
  ::google::protobuf::uint32 target_hero_id_;
  bool assassin_won_;
  bool contract_completed_;
  bool pa_is_radiant_;
  float contract_complete_time_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutAssassinMiniGameInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetIngameEventData : public ::google::protobuf::Message {
 public:
  CMsgServerToGCGetIngameEventData();
  virtual ~CMsgServerToGCGetIngameEventData();

  CMsgServerToGCGetIngameEventData(const CMsgServerToGCGetIngameEventData& from);

  inline CMsgServerToGCGetIngameEventData& operator=(const CMsgServerToGCGetIngameEventData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCGetIngameEventData& default_instance();

  void Swap(CMsgServerToGCGetIngameEventData* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetIngameEventData* New() const { return New(NULL); }

  CMsgServerToGCGetIngameEventData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCGetIngameEventData& from);
  void MergeFrom(const CMsgServerToGCGetIngameEventData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCGetIngameEventData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EEvent event = 1 [default = EVENT_ID_NONE];
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::EEvent event() const;
  void set_event(::EEvent value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCGetIngameEventData)
 private:
  inline void set_has_event();
  inline void clear_has_event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int event_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCGetIngameEventData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerIngameEventDataOraclePA : public ::google::protobuf::Message {
 public:
  CMsgGCToServerIngameEventDataOraclePA();
  virtual ~CMsgGCToServerIngameEventDataOraclePA();

  CMsgGCToServerIngameEventDataOraclePA(const CMsgGCToServerIngameEventDataOraclePA& from);

  inline CMsgGCToServerIngameEventDataOraclePA& operator=(const CMsgGCToServerIngameEventDataOraclePA& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerIngameEventDataOraclePA& default_instance();

  void Swap(CMsgGCToServerIngameEventDataOraclePA* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerIngameEventDataOraclePA* New() const { return New(NULL); }

  CMsgGCToServerIngameEventDataOraclePA* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerIngameEventDataOraclePA& from);
  void MergeFrom(const CMsgGCToServerIngameEventDataOraclePA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerIngameEventDataOraclePA* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 target_hero_ids = 1;
  int target_hero_ids_size() const;
  void clear_target_hero_ids();
  static const int kTargetHeroIdsFieldNumber = 1;
  ::google::protobuf::uint32 target_hero_ids(int index) const;
  void set_target_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_target_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      target_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_target_hero_ids();

  // @@protoc_insertion_point(class_scope:CMsgGCToServerIngameEventDataOraclePA)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > target_hero_ids_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerIngameEventDataOraclePA* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCKillSummaries_KillSummary : public ::google::protobuf::Message {
 public:
  CMsgServerToGCKillSummaries_KillSummary();
  virtual ~CMsgServerToGCKillSummaries_KillSummary();

  CMsgServerToGCKillSummaries_KillSummary(const CMsgServerToGCKillSummaries_KillSummary& from);

  inline CMsgServerToGCKillSummaries_KillSummary& operator=(const CMsgServerToGCKillSummaries_KillSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCKillSummaries_KillSummary& default_instance();

  void Swap(CMsgServerToGCKillSummaries_KillSummary* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCKillSummaries_KillSummary* New() const { return New(NULL); }

  CMsgServerToGCKillSummaries_KillSummary* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCKillSummaries_KillSummary& from);
  void MergeFrom(const CMsgServerToGCKillSummaries_KillSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCKillSummaries_KillSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 killer_hero_id = 1;
  bool has_killer_hero_id() const;
  void clear_killer_hero_id();
  static const int kKillerHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 killer_hero_id() const;
  void set_killer_hero_id(::google::protobuf::uint32 value);

  // optional uint32 victim_hero_id = 2;
  bool has_victim_hero_id() const;
  void clear_victim_hero_id();
  static const int kVictimHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 victim_hero_id() const;
  void set_victim_hero_id(::google::protobuf::uint32 value);

  // optional uint32 kill_count = 3;
  bool has_kill_count() const;
  void clear_kill_count();
  static const int kKillCountFieldNumber = 3;
  ::google::protobuf::uint32 kill_count() const;
  void set_kill_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCKillSummaries.KillSummary)
 private:
  inline void set_has_killer_hero_id();
  inline void clear_has_killer_hero_id();
  inline void set_has_victim_hero_id();
  inline void clear_has_victim_hero_id();
  inline void set_has_kill_count();
  inline void clear_has_kill_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 killer_hero_id_;
  ::google::protobuf::uint32 victim_hero_id_;
  ::google::protobuf::uint32 kill_count_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCKillSummaries_KillSummary* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCKillSummaries : public ::google::protobuf::Message {
 public:
  CMsgServerToGCKillSummaries();
  virtual ~CMsgServerToGCKillSummaries();

  CMsgServerToGCKillSummaries(const CMsgServerToGCKillSummaries& from);

  inline CMsgServerToGCKillSummaries& operator=(const CMsgServerToGCKillSummaries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCKillSummaries& default_instance();

  void Swap(CMsgServerToGCKillSummaries* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCKillSummaries* New() const { return New(NULL); }

  CMsgServerToGCKillSummaries* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCKillSummaries& from);
  void MergeFrom(const CMsgServerToGCKillSummaries& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCKillSummaries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCKillSummaries_KillSummary KillSummary;

  // accessors -------------------------------------------------------

  // optional uint32 ingameevent_id = 1;
  bool has_ingameevent_id() const;
  void clear_ingameevent_id();
  static const int kIngameeventIdFieldNumber = 1;
  ::google::protobuf::uint32 ingameevent_id() const;
  void set_ingameevent_id(::google::protobuf::uint32 value);

  // repeated .CMsgServerToGCKillSummaries.KillSummary summaries = 2;
  int summaries_size() const;
  void clear_summaries();
  static const int kSummariesFieldNumber = 2;
  const ::CMsgServerToGCKillSummaries_KillSummary& summaries(int index) const;
  ::CMsgServerToGCKillSummaries_KillSummary* mutable_summaries(int index);
  ::CMsgServerToGCKillSummaries_KillSummary* add_summaries();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCKillSummaries_KillSummary >*
      mutable_summaries();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCKillSummaries_KillSummary >&
      summaries() const;

  // @@protoc_insertion_point(class_scope:CMsgServerToGCKillSummaries)
 private:
  inline void set_has_ingameevent_id();
  inline void clear_has_ingameevent_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCKillSummaries_KillSummary > summaries_;
  ::google::protobuf::uint32 ingameevent_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCKillSummaries* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerPredictionResult_Prediction : public ::google::protobuf::Message {
 public:
  CMsgGCToServerPredictionResult_Prediction();
  virtual ~CMsgGCToServerPredictionResult_Prediction();

  CMsgGCToServerPredictionResult_Prediction(const CMsgGCToServerPredictionResult_Prediction& from);

  inline CMsgGCToServerPredictionResult_Prediction& operator=(const CMsgGCToServerPredictionResult_Prediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerPredictionResult_Prediction& default_instance();

  void Swap(CMsgGCToServerPredictionResult_Prediction* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPredictionResult_Prediction* New() const { return New(NULL); }

  CMsgGCToServerPredictionResult_Prediction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerPredictionResult_Prediction& from);
  void MergeFrom(const CMsgGCToServerPredictionResult_Prediction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerPredictionResult_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToServerPredictionResult_Prediction_EResult EResult;
  static const EResult k_eResult_ItemGranted = CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_ItemGranted;
  static const EResult k_eResult_Destroyed = CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_Destroyed;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCToServerPredictionResult_Prediction_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCToServerPredictionResult_Prediction_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCToServerPredictionResult_Prediction_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCToServerPredictionResult_Prediction_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCToServerPredictionResult_Prediction_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 num_correct = 2;
  bool has_num_correct() const;
  void clear_num_correct();
  static const int kNumCorrectFieldNumber = 2;
  ::google::protobuf::uint32 num_correct() const;
  void set_num_correct(::google::protobuf::uint32 value);

  // optional uint32 num_fails = 3;
  bool has_num_fails() const;
  void clear_num_fails();
  static const int kNumFailsFieldNumber = 3;
  ::google::protobuf::uint32 num_fails() const;
  void set_num_fails(::google::protobuf::uint32 value);

  // optional .CMsgGCToServerPredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::CMsgGCToServerPredictionResult_Prediction_EResult result() const;
  void set_result(::CMsgGCToServerPredictionResult_Prediction_EResult value);

  // repeated uint32 granted_item_defs = 6;
  int granted_item_defs_size() const;
  void clear_granted_item_defs();
  static const int kGrantedItemDefsFieldNumber = 6;
  ::google::protobuf::uint32 granted_item_defs(int index) const;
  void set_granted_item_defs(int index, ::google::protobuf::uint32 value);
  void add_granted_item_defs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      granted_item_defs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_granted_item_defs();

  // @@protoc_insertion_point(class_scope:CMsgGCToServerPredictionResult.Prediction)
 private:
  inline void set_has_item_def();
  inline void clear_has_item_def();
  inline void set_has_num_correct();
  inline void clear_has_num_correct();
  inline void set_has_num_fails();
  inline void clear_has_num_fails();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 num_correct_;
  ::google::protobuf::uint32 num_fails_;
  int result_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > granted_item_defs_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerPredictionResult_Prediction* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerPredictionResult : public ::google::protobuf::Message {
 public:
  CMsgGCToServerPredictionResult();
  virtual ~CMsgGCToServerPredictionResult();

  CMsgGCToServerPredictionResult(const CMsgGCToServerPredictionResult& from);

  inline CMsgGCToServerPredictionResult& operator=(const CMsgGCToServerPredictionResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerPredictionResult& default_instance();

  void Swap(CMsgGCToServerPredictionResult* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPredictionResult* New() const { return New(NULL); }

  CMsgGCToServerPredictionResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerPredictionResult& from);
  void MergeFrom(const CMsgGCToServerPredictionResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerPredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCToServerPredictionResult_Prediction Prediction;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional bool correct = 3;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 3;
  bool correct() const;
  void set_correct(bool value);

  // repeated .CMsgGCToServerPredictionResult.Prediction predictions = 4;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 4;
  const ::CMsgGCToServerPredictionResult_Prediction& predictions(int index) const;
  ::CMsgGCToServerPredictionResult_Prediction* mutable_predictions(int index);
  ::CMsgGCToServerPredictionResult_Prediction* add_predictions();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToServerPredictionResult_Prediction >*
      mutable_predictions();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCToServerPredictionResult_Prediction >&
      predictions() const;

  // @@protoc_insertion_point(class_scope:CMsgGCToServerPredictionResult)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_correct();
  inline void clear_has_correct();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  bool correct_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToServerPredictionResult_Prediction > predictions_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerPredictionResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCLockCharmTrading : public ::google::protobuf::Message {
 public:
  CMsgServerToGCLockCharmTrading();
  virtual ~CMsgServerToGCLockCharmTrading();

  CMsgServerToGCLockCharmTrading(const CMsgServerToGCLockCharmTrading& from);

  inline CMsgServerToGCLockCharmTrading& operator=(const CMsgServerToGCLockCharmTrading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCLockCharmTrading& default_instance();

  void Swap(CMsgServerToGCLockCharmTrading* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCLockCharmTrading* New() const { return New(NULL); }

  CMsgServerToGCLockCharmTrading* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCLockCharmTrading& from);
  void MergeFrom(const CMsgServerToGCLockCharmTrading& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCLockCharmTrading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCLockCharmTrading)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCLockCharmTrading* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACNY2015EventPointUsage_PointUsage : public ::google::protobuf::Message {
 public:
  CMsgDOTACNY2015EventPointUsage_PointUsage();
  virtual ~CMsgDOTACNY2015EventPointUsage_PointUsage();

  CMsgDOTACNY2015EventPointUsage_PointUsage(const CMsgDOTACNY2015EventPointUsage_PointUsage& from);

  inline CMsgDOTACNY2015EventPointUsage_PointUsage& operator=(const CMsgDOTACNY2015EventPointUsage_PointUsage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACNY2015EventPointUsage_PointUsage& default_instance();

  void Swap(CMsgDOTACNY2015EventPointUsage_PointUsage* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACNY2015EventPointUsage_PointUsage* New() const { return New(NULL); }

  CMsgDOTACNY2015EventPointUsage_PointUsage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACNY2015EventPointUsage_PointUsage& from);
  void MergeFrom(const CMsgDOTACNY2015EventPointUsage_PointUsage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTACNY2015EventPointUsage_PointUsage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 path = 1;
  int path_size() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  ::google::protobuf::uint32 path(int index) const;
  void set_path(int index, ::google::protobuf::uint32 value);
  void add_path(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      path() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_path();

  // repeated uint32 path_level = 2;
  int path_level_size() const;
  void clear_path_level();
  static const int kPathLevelFieldNumber = 2;
  ::google::protobuf::uint32 path_level(int index) const;
  void set_path_level(int index, ::google::protobuf::uint32 value);
  void add_path_level(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      path_level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_path_level();

  // repeated uint32 ability_points_spent = 3;
  int ability_points_spent_size() const;
  void clear_ability_points_spent();
  static const int kAbilityPointsSpentFieldNumber = 3;
  ::google::protobuf::uint32 ability_points_spent(int index) const;
  void set_ability_points_spent(int index, ::google::protobuf::uint32 value);
  void add_ability_points_spent(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ability_points_spent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ability_points_spent();

  // @@protoc_insertion_point(class_scope:CMsgDOTACNY2015EventPointUsage.PointUsage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > path_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > path_level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ability_points_spent_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACNY2015EventPointUsage_PointUsage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDOTACNY2015EventPointUsage : public ::google::protobuf::Message {
 public:
  CMsgDOTACNY2015EventPointUsage();
  virtual ~CMsgDOTACNY2015EventPointUsage();

  CMsgDOTACNY2015EventPointUsage(const CMsgDOTACNY2015EventPointUsage& from);

  inline CMsgDOTACNY2015EventPointUsage& operator=(const CMsgDOTACNY2015EventPointUsage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACNY2015EventPointUsage& default_instance();

  void Swap(CMsgDOTACNY2015EventPointUsage* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACNY2015EventPointUsage* New() const { return New(NULL); }

  CMsgDOTACNY2015EventPointUsage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDOTACNY2015EventPointUsage& from);
  void MergeFrom(const CMsgDOTACNY2015EventPointUsage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgDOTACNY2015EventPointUsage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDOTACNY2015EventPointUsage_PointUsage PointUsage;

  // accessors -------------------------------------------------------

  // optional .CMsgDOTACNY2015EventPointUsage.PointUsage winning_team_usage = 1;
  bool has_winning_team_usage() const;
  void clear_winning_team_usage();
  static const int kWinningTeamUsageFieldNumber = 1;
  const ::CMsgDOTACNY2015EventPointUsage_PointUsage& winning_team_usage() const;
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* mutable_winning_team_usage();
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* release_winning_team_usage();
  void set_allocated_winning_team_usage(::CMsgDOTACNY2015EventPointUsage_PointUsage* winning_team_usage);

  // optional .CMsgDOTACNY2015EventPointUsage.PointUsage losing_team_usage = 2;
  bool has_losing_team_usage() const;
  void clear_losing_team_usage();
  static const int kLosingTeamUsageFieldNumber = 2;
  const ::CMsgDOTACNY2015EventPointUsage_PointUsage& losing_team_usage() const;
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* mutable_losing_team_usage();
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* release_losing_team_usage();
  void set_allocated_losing_team_usage(::CMsgDOTACNY2015EventPointUsage_PointUsage* losing_team_usage);

  // @@protoc_insertion_point(class_scope:CMsgDOTACNY2015EventPointUsage)
 private:
  inline void set_has_winning_team_usage();
  inline void clear_has_winning_team_usage();
  inline void set_has_losing_team_usage();
  inline void clear_has_losing_team_usage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* winning_team_usage_;
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* losing_team_usage_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgDOTACNY2015EventPointUsage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutUpdatePlayerChallenge_Challenge : public ::google::protobuf::Message {
 public:
  CMsgSignOutUpdatePlayerChallenge_Challenge();
  virtual ~CMsgSignOutUpdatePlayerChallenge_Challenge();

  CMsgSignOutUpdatePlayerChallenge_Challenge(const CMsgSignOutUpdatePlayerChallenge_Challenge& from);

  inline CMsgSignOutUpdatePlayerChallenge_Challenge& operator=(const CMsgSignOutUpdatePlayerChallenge_Challenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutUpdatePlayerChallenge_Challenge& default_instance();

  void Swap(CMsgSignOutUpdatePlayerChallenge_Challenge* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutUpdatePlayerChallenge_Challenge* New() const { return New(NULL); }

  CMsgSignOutUpdatePlayerChallenge_Challenge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutUpdatePlayerChallenge_Challenge& from);
  void MergeFrom(const CMsgSignOutUpdatePlayerChallenge_Challenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutUpdatePlayerChallenge_Challenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 sequence_id = 3;
  bool has_sequence_id() const;
  void clear_sequence_id();
  static const int kSequenceIdFieldNumber = 3;
  ::google::protobuf::uint32 sequence_id() const;
  void set_sequence_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutUpdatePlayerChallenge.Challenge)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_sequence_id();
  inline void clear_has_sequence_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 sequence_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutUpdatePlayerChallenge_Challenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutUpdatePlayerChallenge : public ::google::protobuf::Message {
 public:
  CMsgSignOutUpdatePlayerChallenge();
  virtual ~CMsgSignOutUpdatePlayerChallenge();

  CMsgSignOutUpdatePlayerChallenge(const CMsgSignOutUpdatePlayerChallenge& from);

  inline CMsgSignOutUpdatePlayerChallenge& operator=(const CMsgSignOutUpdatePlayerChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutUpdatePlayerChallenge& default_instance();

  void Swap(CMsgSignOutUpdatePlayerChallenge* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutUpdatePlayerChallenge* New() const { return New(NULL); }

  CMsgSignOutUpdatePlayerChallenge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutUpdatePlayerChallenge& from);
  void MergeFrom(const CMsgSignOutUpdatePlayerChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutUpdatePlayerChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutUpdatePlayerChallenge_Challenge Challenge;

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // repeated .CMsgSignOutUpdatePlayerChallenge.Challenge completed = 2;
  int completed_size() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 2;
  const ::CMsgSignOutUpdatePlayerChallenge_Challenge& completed(int index) const;
  ::CMsgSignOutUpdatePlayerChallenge_Challenge* mutable_completed(int index);
  ::CMsgSignOutUpdatePlayerChallenge_Challenge* add_completed();
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >*
      mutable_completed();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >&
      completed() const;

  // repeated .CMsgSignOutUpdatePlayerChallenge.Challenge rerolled = 3;
  int rerolled_size() const;
  void clear_rerolled();
  static const int kRerolledFieldNumber = 3;
  const ::CMsgSignOutUpdatePlayerChallenge_Challenge& rerolled(int index) const;
  ::CMsgSignOutUpdatePlayerChallenge_Challenge* mutable_rerolled(int index);
  ::CMsgSignOutUpdatePlayerChallenge_Challenge* add_rerolled();
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >*
      mutable_rerolled();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >&
      rerolled() const;

  // optional uint64 match_id = 4;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutUpdatePlayerChallenge)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge > completed_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge > rerolled_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutUpdatePlayerChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCRerollPlayerChallenge : public ::google::protobuf::Message {
 public:
  CMsgServerToGCRerollPlayerChallenge();
  virtual ~CMsgServerToGCRerollPlayerChallenge();

  CMsgServerToGCRerollPlayerChallenge(const CMsgServerToGCRerollPlayerChallenge& from);

  inline CMsgServerToGCRerollPlayerChallenge& operator=(const CMsgServerToGCRerollPlayerChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCRerollPlayerChallenge& default_instance();

  void Swap(CMsgServerToGCRerollPlayerChallenge* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRerollPlayerChallenge* New() const { return New(NULL); }

  CMsgServerToGCRerollPlayerChallenge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCRerollPlayerChallenge& from);
  void MergeFrom(const CMsgServerToGCRerollPlayerChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCRerollPlayerChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional .CMsgClientToGCRerollPlayerChallenge reroll_msg = 2;
  bool has_reroll_msg() const;
  void clear_reroll_msg();
  static const int kRerollMsgFieldNumber = 2;
  const ::CMsgClientToGCRerollPlayerChallenge& reroll_msg() const;
  ::CMsgClientToGCRerollPlayerChallenge* mutable_reroll_msg();
  ::CMsgClientToGCRerollPlayerChallenge* release_reroll_msg();
  void set_allocated_reroll_msg(::CMsgClientToGCRerollPlayerChallenge* reroll_msg);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCRerollPlayerChallenge)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_reroll_msg();
  inline void clear_has_reroll_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgClientToGCRerollPlayerChallenge* reroll_msg_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCRerollPlayerChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCHoldEventPoints_HoldRequest : public ::google::protobuf::Message {
 public:
  CMsgServerToGCHoldEventPoints_HoldRequest();
  virtual ~CMsgServerToGCHoldEventPoints_HoldRequest();

  CMsgServerToGCHoldEventPoints_HoldRequest(const CMsgServerToGCHoldEventPoints_HoldRequest& from);

  inline CMsgServerToGCHoldEventPoints_HoldRequest& operator=(const CMsgServerToGCHoldEventPoints_HoldRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCHoldEventPoints_HoldRequest& default_instance();

  void Swap(CMsgServerToGCHoldEventPoints_HoldRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCHoldEventPoints_HoldRequest* New() const { return New(NULL); }

  CMsgServerToGCHoldEventPoints_HoldRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCHoldEventPoints_HoldRequest& from);
  void MergeFrom(const CMsgServerToGCHoldEventPoints_HoldRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCHoldEventPoints_HoldRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 points_held = 2;
  bool has_points_held() const;
  void clear_points_held();
  static const int kPointsHeldFieldNumber = 2;
  ::google::protobuf::uint32 points_held() const;
  void set_points_held(::google::protobuf::uint32 value);

  // optional uint32 premium_held = 3;
  bool has_premium_held() const;
  void clear_premium_held();
  static const int kPremiumHeldFieldNumber = 3;
  ::google::protobuf::uint32 premium_held() const;
  void set_premium_held(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCHoldEventPoints.HoldRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_points_held();
  inline void clear_has_points_held();
  inline void set_has_premium_held();
  inline void clear_has_premium_held();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 points_held_;
  ::google::protobuf::uint32 premium_held_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCHoldEventPoints_HoldRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerToGCHoldEventPoints : public ::google::protobuf::Message {
 public:
  CMsgServerToGCHoldEventPoints();
  virtual ~CMsgServerToGCHoldEventPoints();

  CMsgServerToGCHoldEventPoints(const CMsgServerToGCHoldEventPoints& from);

  inline CMsgServerToGCHoldEventPoints& operator=(const CMsgServerToGCHoldEventPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCHoldEventPoints& default_instance();

  void Swap(CMsgServerToGCHoldEventPoints* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCHoldEventPoints* New() const { return New(NULL); }

  CMsgServerToGCHoldEventPoints* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerToGCHoldEventPoints& from);
  void MergeFrom(const CMsgServerToGCHoldEventPoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgServerToGCHoldEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCHoldEventPoints_HoldRequest HoldRequest;

  // accessors -------------------------------------------------------

  // repeated .CMsgServerToGCHoldEventPoints.HoldRequest holds = 1;
  int holds_size() const;
  void clear_holds();
  static const int kHoldsFieldNumber = 1;
  const ::CMsgServerToGCHoldEventPoints_HoldRequest& holds(int index) const;
  ::CMsgServerToGCHoldEventPoints_HoldRequest* mutable_holds(int index);
  ::CMsgServerToGCHoldEventPoints_HoldRequest* add_holds();
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCHoldEventPoints_HoldRequest >*
      mutable_holds();
  const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCHoldEventPoints_HoldRequest >&
      holds() const;

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint64 hold_key = 3;
  bool has_hold_key() const;
  void clear_hold_key();
  static const int kHoldKeyFieldNumber = 3;
  ::google::protobuf::uint64 hold_key() const;
  void set_hold_key(::google::protobuf::uint64 value);

  // optional uint32 hold_until = 4;
  bool has_hold_until() const;
  void clear_hold_until();
  static const int kHoldUntilFieldNumber = 4;
  ::google::protobuf::uint32 hold_until() const;
  void set_hold_until(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgServerToGCHoldEventPoints)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_hold_key();
  inline void clear_has_hold_key();
  inline void set_has_hold_until();
  inline void clear_has_hold_until();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCHoldEventPoints_HoldRequest > holds_;
  ::google::protobuf::uint64 hold_key_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 hold_until_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerToGCHoldEventPoints* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutReleaseEventPointHolds : public ::google::protobuf::Message {
 public:
  CMsgSignOutReleaseEventPointHolds();
  virtual ~CMsgSignOutReleaseEventPointHolds();

  CMsgSignOutReleaseEventPointHolds(const CMsgSignOutReleaseEventPointHolds& from);

  inline CMsgSignOutReleaseEventPointHolds& operator=(const CMsgSignOutReleaseEventPointHolds& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutReleaseEventPointHolds& default_instance();

  void Swap(CMsgSignOutReleaseEventPointHolds* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutReleaseEventPointHolds* New() const { return New(NULL); }

  CMsgSignOutReleaseEventPointHolds* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutReleaseEventPointHolds& from);
  void MergeFrom(const CMsgSignOutReleaseEventPointHolds& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutReleaseEventPointHolds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint64 hold_key = 3;
  bool has_hold_key() const;
  void clear_hold_key();
  static const int kHoldKeyFieldNumber = 3;
  ::google::protobuf::uint64 hold_key() const;
  void set_hold_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutReleaseEventPointHolds)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_hold_key();
  inline void clear_has_hold_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  ::google::protobuf::uint64 hold_key_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutReleaseEventPointHolds* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToServerUpdateBroadcastCheers : public ::google::protobuf::Message {
 public:
  CMsgGCToServerUpdateBroadcastCheers();
  virtual ~CMsgGCToServerUpdateBroadcastCheers();

  CMsgGCToServerUpdateBroadcastCheers(const CMsgGCToServerUpdateBroadcastCheers& from);

  inline CMsgGCToServerUpdateBroadcastCheers& operator=(const CMsgGCToServerUpdateBroadcastCheers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerUpdateBroadcastCheers& default_instance();

  void Swap(CMsgGCToServerUpdateBroadcastCheers* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerUpdateBroadcastCheers* New() const { return New(NULL); }

  CMsgGCToServerUpdateBroadcastCheers* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToServerUpdateBroadcastCheers& from);
  void MergeFrom(const CMsgGCToServerUpdateBroadcastCheers& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgGCToServerUpdateBroadcastCheers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_stamp = 1;
  bool has_time_stamp() const;
  void clear_time_stamp();
  static const int kTimeStampFieldNumber = 1;
  ::google::protobuf::uint32 time_stamp() const;
  void set_time_stamp(::google::protobuf::uint32 value);

  // optional uint32 team_1_cheers = 2;
  bool has_team_1_cheers() const;
  void clear_team_1_cheers();
  static const int kTeam1CheersFieldNumber = 2;
  ::google::protobuf::uint32 team_1_cheers() const;
  void set_team_1_cheers(::google::protobuf::uint32 value);

  // optional uint32 team_2_cheers = 3;
  bool has_team_2_cheers() const;
  void clear_team_2_cheers();
  static const int kTeam2CheersFieldNumber = 3;
  ::google::protobuf::uint32 team_2_cheers() const;
  void set_team_2_cheers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToServerUpdateBroadcastCheers)
 private:
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_team_1_cheers();
  inline void clear_has_team_1_cheers();
  inline void set_has_team_2_cheers();
  inline void clear_has_team_2_cheers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_stamp_;
  ::google::protobuf::uint32 team_1_cheers_;
  ::google::protobuf::uint32 team_2_cheers_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToServerUpdateBroadcastCheers* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutWagerStats_Player : public ::google::protobuf::Message {
 public:
  CMsgSignOutWagerStats_Player();
  virtual ~CMsgSignOutWagerStats_Player();

  CMsgSignOutWagerStats_Player(const CMsgSignOutWagerStats_Player& from);

  inline CMsgSignOutWagerStats_Player& operator=(const CMsgSignOutWagerStats_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutWagerStats_Player& default_instance();

  void Swap(CMsgSignOutWagerStats_Player* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutWagerStats_Player* New() const { return New(NULL); }

  CMsgSignOutWagerStats_Player* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutWagerStats_Player& from);
  void MergeFrom(const CMsgSignOutWagerStats_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutWagerStats_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional sint32 winnings = 2;
  bool has_winnings() const;
  void clear_winnings();
  static const int kWinningsFieldNumber = 2;
  ::google::protobuf::int32 winnings() const;
  void set_winnings(::google::protobuf::int32 value);

  // optional uint32 max_wager = 3;
  bool has_max_wager() const;
  void clear_max_wager();
  static const int kMaxWagerFieldNumber = 3;
  ::google::protobuf::uint32 max_wager() const;
  void set_max_wager(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutWagerStats.Player)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_winnings();
  inline void clear_has_winnings();
  inline void set_has_max_wager();
  inline void clear_has_max_wager();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 winnings_;
  ::google::protobuf::uint32 max_wager_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutWagerStats_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSignOutWagerStats : public ::google::protobuf::Message {
 public:
  CMsgSignOutWagerStats();
  virtual ~CMsgSignOutWagerStats();

  CMsgSignOutWagerStats(const CMsgSignOutWagerStats& from);

  inline CMsgSignOutWagerStats& operator=(const CMsgSignOutWagerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSignOutWagerStats& default_instance();

  void Swap(CMsgSignOutWagerStats* other);

  // implements Message ----------------------------------------------

  inline CMsgSignOutWagerStats* New() const { return New(NULL); }

  CMsgSignOutWagerStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSignOutWagerStats& from);
  void MergeFrom(const CMsgSignOutWagerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgSignOutWagerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutWagerStats_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgSignOutWagerStats.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::CMsgSignOutWagerStats_Player& players(int index) const;
  ::CMsgSignOutWagerStats_Player* mutable_players(int index);
  ::CMsgSignOutWagerStats_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutWagerStats_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutWagerStats_Player >&
      players() const;

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSignOutWagerStats)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSignOutWagerStats_Player > players_;
  ::google::protobuf::uint32 event_id_;
  friend void  protobuf_AddDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_AssignDesc_dota_5fgcmessages_5fserver_2eproto();
  friend void protobuf_ShutdownFile_dota_5fgcmessages_5fserver_2eproto();

  void InitAsDefaultInstance();
  static CMsgSignOutWagerStats* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSpawnLootGreevil

// optional bool rare = 1;
inline bool CMsgSpawnLootGreevil::has_rare() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSpawnLootGreevil::set_has_rare() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSpawnLootGreevil::clear_has_rare() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSpawnLootGreevil::clear_rare() {
  rare_ = false;
  clear_has_rare();
}
inline bool CMsgSpawnLootGreevil::rare() const {
  // @@protoc_insertion_point(field_get:CMsgSpawnLootGreevil.rare)
  return rare_;
}
inline void CMsgSpawnLootGreevil::set_rare(bool value) {
  set_has_rare();
  rare_ = value;
  // @@protoc_insertion_point(field_set:CMsgSpawnLootGreevil.rare)
}

// -------------------------------------------------------------------

// CMsgDismissLootGreevil

// optional bool killed = 2;
inline bool CMsgDismissLootGreevil::has_killed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDismissLootGreevil::set_has_killed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDismissLootGreevil::clear_has_killed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDismissLootGreevil::clear_killed() {
  killed_ = false;
  clear_has_killed();
}
inline bool CMsgDismissLootGreevil::killed() const {
  // @@protoc_insertion_point(field_get:CMsgDismissLootGreevil.killed)
  return killed_;
}
inline void CMsgDismissLootGreevil::set_killed(bool value) {
  set_has_killed();
  killed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDismissLootGreevil.killed)
}

// optional bool rare = 3;
inline bool CMsgDismissLootGreevil::has_rare() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDismissLootGreevil::set_has_rare() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDismissLootGreevil::clear_has_rare() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDismissLootGreevil::clear_rare() {
  rare_ = false;
  clear_has_rare();
}
inline bool CMsgDismissLootGreevil::rare() const {
  // @@protoc_insertion_point(field_get:CMsgDismissLootGreevil.rare)
  return rare_;
}
inline void CMsgDismissLootGreevil::set_rare(bool value) {
  set_has_rare();
  rare_ = value;
  // @@protoc_insertion_point(field_set:CMsgDismissLootGreevil.rare)
}

// -------------------------------------------------------------------

// CMsgDismissLootGreevilResponse

// -------------------------------------------------------------------

// CMsgPoorNetworkConditions_Player

// optional uint32 account_id = 1;
inline bool CMsgPoorNetworkConditions_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPoorNetworkConditions_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPoorNetworkConditions_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPoorNetworkConditions_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPoorNetworkConditions.Player.account_id)
  return account_id_;
}
inline void CMsgPoorNetworkConditions_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoorNetworkConditions.Player.account_id)
}

// optional .ENetworkDisconnectionReason disconnect_reason = 2 [default = NETWORK_DISCONNECT_INVALID];
inline bool CMsgPoorNetworkConditions_Player::has_disconnect_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::set_has_disconnect_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPoorNetworkConditions_Player::clear_has_disconnect_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPoorNetworkConditions_Player::clear_disconnect_reason() {
  disconnect_reason_ = 0;
  clear_has_disconnect_reason();
}
inline ::ENetworkDisconnectionReason CMsgPoorNetworkConditions_Player::disconnect_reason() const {
  // @@protoc_insertion_point(field_get:CMsgPoorNetworkConditions.Player.disconnect_reason)
  return static_cast< ::ENetworkDisconnectionReason >(disconnect_reason_);
}
inline void CMsgPoorNetworkConditions_Player::set_disconnect_reason(::ENetworkDisconnectionReason value) {
  assert(::ENetworkDisconnectionReason_IsValid(value));
  set_has_disconnect_reason();
  disconnect_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoorNetworkConditions.Player.disconnect_reason)
}

// optional uint32 num_bad_intervals = 3;
inline bool CMsgPoorNetworkConditions_Player::has_num_bad_intervals() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::set_has_num_bad_intervals() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPoorNetworkConditions_Player::clear_has_num_bad_intervals() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPoorNetworkConditions_Player::clear_num_bad_intervals() {
  num_bad_intervals_ = 0u;
  clear_has_num_bad_intervals();
}
inline ::google::protobuf::uint32 CMsgPoorNetworkConditions_Player::num_bad_intervals() const {
  // @@protoc_insertion_point(field_get:CMsgPoorNetworkConditions.Player.num_bad_intervals)
  return num_bad_intervals_;
}
inline void CMsgPoorNetworkConditions_Player::set_num_bad_intervals(::google::protobuf::uint32 value) {
  set_has_num_bad_intervals();
  num_bad_intervals_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoorNetworkConditions.Player.num_bad_intervals)
}

// optional uint32 peak_loss_pct = 4;
inline bool CMsgPoorNetworkConditions_Player::has_peak_loss_pct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::set_has_peak_loss_pct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPoorNetworkConditions_Player::clear_has_peak_loss_pct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPoorNetworkConditions_Player::clear_peak_loss_pct() {
  peak_loss_pct_ = 0u;
  clear_has_peak_loss_pct();
}
inline ::google::protobuf::uint32 CMsgPoorNetworkConditions_Player::peak_loss_pct() const {
  // @@protoc_insertion_point(field_get:CMsgPoorNetworkConditions.Player.peak_loss_pct)
  return peak_loss_pct_;
}
inline void CMsgPoorNetworkConditions_Player::set_peak_loss_pct(::google::protobuf::uint32 value) {
  set_has_peak_loss_pct();
  peak_loss_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoorNetworkConditions.Player.peak_loss_pct)
}

// -------------------------------------------------------------------

// CMsgPoorNetworkConditions

// optional .EPoorNetworkConditionsType detection_type = 1 [default = k_EPoorNetworkConditions_None];
inline bool CMsgPoorNetworkConditions::has_detection_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPoorNetworkConditions::set_has_detection_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPoorNetworkConditions::clear_has_detection_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPoorNetworkConditions::clear_detection_type() {
  detection_type_ = 0;
  clear_has_detection_type();
}
inline ::EPoorNetworkConditionsType CMsgPoorNetworkConditions::detection_type() const {
  // @@protoc_insertion_point(field_get:CMsgPoorNetworkConditions.detection_type)
  return static_cast< ::EPoorNetworkConditionsType >(detection_type_);
}
inline void CMsgPoorNetworkConditions::set_detection_type(::EPoorNetworkConditionsType value) {
  assert(::EPoorNetworkConditionsType_IsValid(value));
  set_has_detection_type();
  detection_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgPoorNetworkConditions.detection_type)
}

// repeated .CMsgPoorNetworkConditions.Player players = 2;
inline int CMsgPoorNetworkConditions::players_size() const {
  return players_.size();
}
inline void CMsgPoorNetworkConditions::clear_players() {
  players_.Clear();
}
inline const ::CMsgPoorNetworkConditions_Player& CMsgPoorNetworkConditions::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPoorNetworkConditions.players)
  return players_.Get(index);
}
inline ::CMsgPoorNetworkConditions_Player* CMsgPoorNetworkConditions::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPoorNetworkConditions.players)
  return players_.Mutable(index);
}
inline ::CMsgPoorNetworkConditions_Player* CMsgPoorNetworkConditions::add_players() {
  // @@protoc_insertion_point(field_add:CMsgPoorNetworkConditions.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPoorNetworkConditions_Player >*
CMsgPoorNetworkConditions::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPoorNetworkConditions.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPoorNetworkConditions_Player >&
CMsgPoorNetworkConditions::players() const {
  // @@protoc_insertion_point(field_list:CMsgPoorNetworkConditions.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgGameserverCrash

// optional uint64 match_id = 1;
inline bool CMsgGameserverCrash::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameserverCrash::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameserverCrash::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameserverCrash::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.match_id)
  return match_id_;
}
inline void CMsgGameserverCrash::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.match_id)
}

// optional fixed64 lobby_id = 2;
inline bool CMsgGameserverCrash::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameserverCrash::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameserverCrash::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameserverCrash::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.lobby_id)
  return lobby_id_;
}
inline void CMsgGameserverCrash::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.lobby_id)
}

// optional .DOTA_GameState game_state = 3 [default = DOTA_GAMERULES_STATE_INIT];
inline bool CMsgGameserverCrash::has_game_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameserverCrash::set_has_game_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameserverCrash::clear_has_game_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameserverCrash::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::DOTA_GameState CMsgGameserverCrash::game_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.game_state)
  return static_cast< ::DOTA_GameState >(game_state_);
}
inline void CMsgGameserverCrash::set_game_state(::DOTA_GameState value) {
  assert(::DOTA_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.game_state)
}

// optional fixed32 sentinel_save_time = 4;
inline bool CMsgGameserverCrash::has_sentinel_save_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameserverCrash::set_has_sentinel_save_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameserverCrash::clear_has_sentinel_save_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameserverCrash::clear_sentinel_save_time() {
  sentinel_save_time_ = 0u;
  clear_has_sentinel_save_time();
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::sentinel_save_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.sentinel_save_time)
  return sentinel_save_time_;
}
inline void CMsgGameserverCrash::set_sentinel_save_time(::google::protobuf::uint32 value) {
  set_has_sentinel_save_time();
  sentinel_save_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.sentinel_save_time)
}

// optional fixed64 custom_game_id = 11;
inline bool CMsgGameserverCrash::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameserverCrash::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameserverCrash::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameserverCrash::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::custom_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGameserverCrash::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.custom_game_id)
}

// optional fixed64 server_steam_id = 5;
inline bool CMsgGameserverCrash::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameserverCrash::set_has_server_steam_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGameserverCrash::clear_has_server_steam_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGameserverCrash::clear_server_steam_id() {
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steam_id();
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::server_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.server_steam_id)
  return server_steam_id_;
}
inline void CMsgGameserverCrash::set_server_steam_id(::google::protobuf::uint64 value) {
  set_has_server_steam_id();
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.server_steam_id)
}

// optional fixed32 server_public_ip_addr = 6;
inline bool CMsgGameserverCrash::has_server_public_ip_addr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameserverCrash::set_has_server_public_ip_addr() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGameserverCrash::clear_has_server_public_ip_addr() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGameserverCrash::clear_server_public_ip_addr() {
  server_public_ip_addr_ = 0u;
  clear_has_server_public_ip_addr();
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::server_public_ip_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.server_public_ip_addr)
  return server_public_ip_addr_;
}
inline void CMsgGameserverCrash::set_server_public_ip_addr(::google::protobuf::uint32 value) {
  set_has_server_public_ip_addr();
  server_public_ip_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.server_public_ip_addr)
}

// optional uint32 server_port = 7;
inline bool CMsgGameserverCrash::has_server_port() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameserverCrash::set_has_server_port() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGameserverCrash::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGameserverCrash::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.server_port)
  return server_port_;
}
inline void CMsgGameserverCrash::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.server_port)
}

// optional uint32 server_cluster = 8;
inline bool CMsgGameserverCrash::has_server_cluster() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameserverCrash::set_has_server_cluster() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameserverCrash::clear_has_server_cluster() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameserverCrash::clear_server_cluster() {
  server_cluster_ = 0u;
  clear_has_server_cluster();
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::server_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.server_cluster)
  return server_cluster_;
}
inline void CMsgGameserverCrash::set_server_cluster(::google::protobuf::uint32 value) {
  set_has_server_cluster();
  server_cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.server_cluster)
}

// optional uint32 pid = 9;
inline bool CMsgGameserverCrash::has_pid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameserverCrash::set_has_pid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGameserverCrash::clear_has_pid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGameserverCrash::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::pid() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.pid)
  return pid_;
}
inline void CMsgGameserverCrash::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.pid)
}

// optional uint32 engine = 10;
inline bool CMsgGameserverCrash::has_engine() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameserverCrash::set_has_engine() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGameserverCrash::clear_has_engine() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGameserverCrash::clear_engine() {
  engine_ = 0u;
  clear_has_engine();
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::engine() const {
  // @@protoc_insertion_point(field_get:CMsgGameserverCrash.engine)
  return engine_;
}
inline void CMsgGameserverCrash::set_engine(::google::protobuf::uint32 value) {
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameserverCrash.engine)
}

// -------------------------------------------------------------------

// CMsgConnectedPlayers_Player

// optional fixed64 steam_id = 1;
inline bool CMsgConnectedPlayers_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgConnectedPlayers_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgConnectedPlayers_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgConnectedPlayers_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgConnectedPlayers_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.Player.steam_id)
  return steam_id_;
}
inline void CMsgConnectedPlayers_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.Player.steam_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgConnectedPlayers_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgConnectedPlayers_Player::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgConnectedPlayers_Player::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgConnectedPlayers_Player::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.Player.hero_id)
  return hero_id_;
}
inline void CMsgConnectedPlayers_Player::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.Player.hero_id)
}

// optional .CMsgLeaverState leaver_state = 3;
inline bool CMsgConnectedPlayers_Player::has_leaver_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgConnectedPlayers_Player::set_has_leaver_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgConnectedPlayers_Player::clear_has_leaver_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgConnectedPlayers_Player::clear_leaver_state() {
  if (leaver_state_ != NULL) leaver_state_->::CMsgLeaverState::Clear();
  clear_has_leaver_state();
}
inline const ::CMsgLeaverState& CMsgConnectedPlayers_Player::leaver_state() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.Player.leaver_state)
  return leaver_state_ != NULL ? *leaver_state_ : *default_instance_->leaver_state_;
}
inline ::CMsgLeaverState* CMsgConnectedPlayers_Player::mutable_leaver_state() {
  set_has_leaver_state();
  if (leaver_state_ == NULL) {
    leaver_state_ = new ::CMsgLeaverState;
  }
  // @@protoc_insertion_point(field_mutable:CMsgConnectedPlayers.Player.leaver_state)
  return leaver_state_;
}
inline ::CMsgLeaverState* CMsgConnectedPlayers_Player::release_leaver_state() {
  clear_has_leaver_state();
  ::CMsgLeaverState* temp = leaver_state_;
  leaver_state_ = NULL;
  return temp;
}
inline void CMsgConnectedPlayers_Player::set_allocated_leaver_state(::CMsgLeaverState* leaver_state) {
  delete leaver_state_;
  leaver_state_ = leaver_state;
  if (leaver_state) {
    set_has_leaver_state();
  } else {
    clear_has_leaver_state();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgConnectedPlayers.Player.leaver_state)
}

// optional .ENetworkDisconnectionReason disconnect_reason = 4 [default = NETWORK_DISCONNECT_INVALID];
inline bool CMsgConnectedPlayers_Player::has_disconnect_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgConnectedPlayers_Player::set_has_disconnect_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgConnectedPlayers_Player::clear_has_disconnect_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgConnectedPlayers_Player::clear_disconnect_reason() {
  disconnect_reason_ = 0;
  clear_has_disconnect_reason();
}
inline ::ENetworkDisconnectionReason CMsgConnectedPlayers_Player::disconnect_reason() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.Player.disconnect_reason)
  return static_cast< ::ENetworkDisconnectionReason >(disconnect_reason_);
}
inline void CMsgConnectedPlayers_Player::set_disconnect_reason(::ENetworkDisconnectionReason value) {
  assert(::ENetworkDisconnectionReason_IsValid(value));
  set_has_disconnect_reason();
  disconnect_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.Player.disconnect_reason)
}

// -------------------------------------------------------------------

// CMsgConnectedPlayers

// repeated .CMsgConnectedPlayers.Player connected_players = 1;
inline int CMsgConnectedPlayers::connected_players_size() const {
  return connected_players_.size();
}
inline void CMsgConnectedPlayers::clear_connected_players() {
  connected_players_.Clear();
}
inline const ::CMsgConnectedPlayers_Player& CMsgConnectedPlayers::connected_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.connected_players)
  return connected_players_.Get(index);
}
inline ::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::mutable_connected_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgConnectedPlayers.connected_players)
  return connected_players_.Mutable(index);
}
inline ::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::add_connected_players() {
  // @@protoc_insertion_point(field_add:CMsgConnectedPlayers.connected_players)
  return connected_players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >*
CMsgConnectedPlayers::mutable_connected_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgConnectedPlayers.connected_players)
  return &connected_players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >&
CMsgConnectedPlayers::connected_players() const {
  // @@protoc_insertion_point(field_list:CMsgConnectedPlayers.connected_players)
  return connected_players_;
}

// repeated .CMsgConnectedPlayers.Player disconnected_players = 7;
inline int CMsgConnectedPlayers::disconnected_players_size() const {
  return disconnected_players_.size();
}
inline void CMsgConnectedPlayers::clear_disconnected_players() {
  disconnected_players_.Clear();
}
inline const ::CMsgConnectedPlayers_Player& CMsgConnectedPlayers::disconnected_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_.Get(index);
}
inline ::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::mutable_disconnected_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_.Mutable(index);
}
inline ::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::add_disconnected_players() {
  // @@protoc_insertion_point(field_add:CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >*
CMsgConnectedPlayers::mutable_disconnected_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgConnectedPlayers.disconnected_players)
  return &disconnected_players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgConnectedPlayers_Player >&
CMsgConnectedPlayers::disconnected_players() const {
  // @@protoc_insertion_point(field_list:CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_;
}

// optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];
inline bool CMsgConnectedPlayers::has_game_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgConnectedPlayers::set_has_game_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgConnectedPlayers::clear_has_game_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgConnectedPlayers::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::DOTA_GameState CMsgConnectedPlayers::game_state() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.game_state)
  return static_cast< ::DOTA_GameState >(game_state_);
}
inline void CMsgConnectedPlayers::set_game_state(::DOTA_GameState value) {
  assert(::DOTA_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.game_state)
}

// optional uint32 tower_state = 4;
inline bool CMsgConnectedPlayers::has_tower_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgConnectedPlayers::set_has_tower_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgConnectedPlayers::clear_has_tower_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgConnectedPlayers::clear_tower_state() {
  tower_state_ = 0u;
  clear_has_tower_state();
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers::tower_state() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.tower_state)
  return tower_state_;
}
inline void CMsgConnectedPlayers::set_tower_state(::google::protobuf::uint32 value) {
  set_has_tower_state();
  tower_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.tower_state)
}

// optional bool first_blood_happened = 6;
inline bool CMsgConnectedPlayers::has_first_blood_happened() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgConnectedPlayers::set_has_first_blood_happened() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgConnectedPlayers::clear_has_first_blood_happened() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgConnectedPlayers::clear_first_blood_happened() {
  first_blood_happened_ = false;
  clear_has_first_blood_happened();
}
inline bool CMsgConnectedPlayers::first_blood_happened() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.first_blood_happened)
  return first_blood_happened_;
}
inline void CMsgConnectedPlayers::set_first_blood_happened(bool value) {
  set_has_first_blood_happened();
  first_blood_happened_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.first_blood_happened)
}

// optional bool legacy_mass_disconnect = 9;
inline bool CMsgConnectedPlayers::has_legacy_mass_disconnect() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgConnectedPlayers::set_has_legacy_mass_disconnect() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgConnectedPlayers::clear_has_legacy_mass_disconnect() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgConnectedPlayers::clear_legacy_mass_disconnect() {
  legacy_mass_disconnect_ = false;
  clear_has_legacy_mass_disconnect();
}
inline bool CMsgConnectedPlayers::legacy_mass_disconnect() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.legacy_mass_disconnect)
  return legacy_mass_disconnect_;
}
inline void CMsgConnectedPlayers::set_legacy_mass_disconnect(bool value) {
  set_has_legacy_mass_disconnect();
  legacy_mass_disconnect_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.legacy_mass_disconnect)
}

// optional .CMsgPoorNetworkConditions poor_network_conditions = 10;
inline bool CMsgConnectedPlayers::has_poor_network_conditions() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgConnectedPlayers::set_has_poor_network_conditions() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgConnectedPlayers::clear_has_poor_network_conditions() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgConnectedPlayers::clear_poor_network_conditions() {
  if (poor_network_conditions_ != NULL) poor_network_conditions_->::CMsgPoorNetworkConditions::Clear();
  clear_has_poor_network_conditions();
}
inline const ::CMsgPoorNetworkConditions& CMsgConnectedPlayers::poor_network_conditions() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.poor_network_conditions)
  return poor_network_conditions_ != NULL ? *poor_network_conditions_ : *default_instance_->poor_network_conditions_;
}
inline ::CMsgPoorNetworkConditions* CMsgConnectedPlayers::mutable_poor_network_conditions() {
  set_has_poor_network_conditions();
  if (poor_network_conditions_ == NULL) {
    poor_network_conditions_ = new ::CMsgPoorNetworkConditions;
  }
  // @@protoc_insertion_point(field_mutable:CMsgConnectedPlayers.poor_network_conditions)
  return poor_network_conditions_;
}
inline ::CMsgPoorNetworkConditions* CMsgConnectedPlayers::release_poor_network_conditions() {
  clear_has_poor_network_conditions();
  ::CMsgPoorNetworkConditions* temp = poor_network_conditions_;
  poor_network_conditions_ = NULL;
  return temp;
}
inline void CMsgConnectedPlayers::set_allocated_poor_network_conditions(::CMsgPoorNetworkConditions* poor_network_conditions) {
  delete poor_network_conditions_;
  poor_network_conditions_ = poor_network_conditions;
  if (poor_network_conditions) {
    set_has_poor_network_conditions();
  } else {
    clear_has_poor_network_conditions();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgConnectedPlayers.poor_network_conditions)
}

// optional .CMsgConnectedPlayers.SendReason send_reason = 8 [default = INVALID];
inline bool CMsgConnectedPlayers::has_send_reason() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgConnectedPlayers::set_has_send_reason() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgConnectedPlayers::clear_has_send_reason() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgConnectedPlayers::clear_send_reason() {
  send_reason_ = 0;
  clear_has_send_reason();
}
inline ::CMsgConnectedPlayers_SendReason CMsgConnectedPlayers::send_reason() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.send_reason)
  return static_cast< ::CMsgConnectedPlayers_SendReason >(send_reason_);
}
inline void CMsgConnectedPlayers::set_send_reason(::CMsgConnectedPlayers_SendReason value) {
  assert(::CMsgConnectedPlayers_SendReason_IsValid(value));
  set_has_send_reason();
  send_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.send_reason)
}

// optional uint32 radiant_kills = 11;
inline bool CMsgConnectedPlayers::has_radiant_kills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgConnectedPlayers::set_has_radiant_kills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgConnectedPlayers::clear_has_radiant_kills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgConnectedPlayers::clear_radiant_kills() {
  radiant_kills_ = 0u;
  clear_has_radiant_kills();
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers::radiant_kills() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.radiant_kills)
  return radiant_kills_;
}
inline void CMsgConnectedPlayers::set_radiant_kills(::google::protobuf::uint32 value) {
  set_has_radiant_kills();
  radiant_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.radiant_kills)
}

// optional uint32 dire_kills = 12;
inline bool CMsgConnectedPlayers::has_dire_kills() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgConnectedPlayers::set_has_dire_kills() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgConnectedPlayers::clear_has_dire_kills() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgConnectedPlayers::clear_dire_kills() {
  dire_kills_ = 0u;
  clear_has_dire_kills();
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers::dire_kills() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.dire_kills)
  return dire_kills_;
}
inline void CMsgConnectedPlayers::set_dire_kills(::google::protobuf::uint32 value) {
  set_has_dire_kills();
  dire_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.dire_kills)
}

// optional uint32 barracks_state = 13;
inline bool CMsgConnectedPlayers::has_barracks_state() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgConnectedPlayers::set_has_barracks_state() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgConnectedPlayers::clear_has_barracks_state() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgConnectedPlayers::clear_barracks_state() {
  barracks_state_ = 0u;
  clear_has_barracks_state();
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers::barracks_state() const {
  // @@protoc_insertion_point(field_get:CMsgConnectedPlayers.barracks_state)
  return barracks_state_;
}
inline void CMsgConnectedPlayers::set_barracks_state(::google::protobuf::uint32 value) {
  set_has_barracks_state();
  barracks_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectedPlayers.barracks_state)
}

// -------------------------------------------------------------------

// CMsgGameServerInfo

// optional fixed32 server_public_ip_addr = 1;
inline bool CMsgGameServerInfo::has_server_public_ip_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_public_ip_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerInfo::clear_has_server_public_ip_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerInfo::clear_server_public_ip_addr() {
  server_public_ip_addr_ = 0u;
  clear_has_server_public_ip_addr();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_public_ip_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_public_ip_addr)
  return server_public_ip_addr_;
}
inline void CMsgGameServerInfo::set_server_public_ip_addr(::google::protobuf::uint32 value) {
  set_has_server_public_ip_addr();
  server_public_ip_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_public_ip_addr)
}

// optional fixed32 server_private_ip_addr = 2;
inline bool CMsgGameServerInfo::has_server_private_ip_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_private_ip_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerInfo::clear_has_server_private_ip_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerInfo::clear_server_private_ip_addr() {
  server_private_ip_addr_ = 0u;
  clear_has_server_private_ip_addr();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_private_ip_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_private_ip_addr)
  return server_private_ip_addr_;
}
inline void CMsgGameServerInfo::set_server_private_ip_addr(::google::protobuf::uint32 value) {
  set_has_server_private_ip_addr();
  server_private_ip_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_private_ip_addr)
}

// optional uint32 server_port = 3;
inline bool CMsgGameServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_port)
  return server_port_;
}
inline void CMsgGameServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_port)
}

// optional uint32 server_tv_port = 4;
inline bool CMsgGameServerInfo::has_server_tv_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_tv_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameServerInfo::clear_has_server_tv_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameServerInfo::clear_server_tv_port() {
  server_tv_port_ = 0u;
  clear_has_server_tv_port();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_tv_port() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_tv_port)
  return server_tv_port_;
}
inline void CMsgGameServerInfo::set_server_tv_port(::google::protobuf::uint32 value) {
  set_has_server_tv_port();
  server_tv_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_tv_port)
}

// optional uint32 assigned_server_tv_port = 22;
inline bool CMsgGameServerInfo::has_assigned_server_tv_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameServerInfo::set_has_assigned_server_tv_port() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameServerInfo::clear_has_assigned_server_tv_port() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameServerInfo::clear_assigned_server_tv_port() {
  assigned_server_tv_port_ = 0u;
  clear_has_assigned_server_tv_port();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::assigned_server_tv_port() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.assigned_server_tv_port)
  return assigned_server_tv_port_;
}
inline void CMsgGameServerInfo::set_assigned_server_tv_port(::google::protobuf::uint32 value) {
  set_has_assigned_server_tv_port();
  assigned_server_tv_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.assigned_server_tv_port)
}

// optional uint32 server_steamdatagram_port = 21;
inline bool CMsgGameServerInfo::has_server_steamdatagram_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_steamdatagram_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGameServerInfo::clear_has_server_steamdatagram_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGameServerInfo::clear_server_steamdatagram_port() {
  server_steamdatagram_port_ = 0u;
  clear_has_server_steamdatagram_port();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_steamdatagram_port() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_steamdatagram_port)
  return server_steamdatagram_port_;
}
inline void CMsgGameServerInfo::set_server_steamdatagram_port(::google::protobuf::uint32 value) {
  set_has_server_steamdatagram_port();
  server_steamdatagram_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_steamdatagram_port)
}

// optional string server_key = 5;
inline bool CMsgGameServerInfo::has_server_key() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_key() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGameServerInfo::clear_has_server_key() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGameServerInfo::clear_server_key() {
  server_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_key();
}
inline const ::std::string& CMsgGameServerInfo::server_key() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_key)
  return server_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerInfo::set_server_key(const ::std::string& value) {
  set_has_server_key();
  server_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_key)
}
inline void CMsgGameServerInfo::set_server_key(const char* value) {
  set_has_server_key();
  server_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameServerInfo.server_key)
}
inline void CMsgGameServerInfo::set_server_key(const char* value, size_t size) {
  set_has_server_key();
  server_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerInfo.server_key)
}
inline ::std::string* CMsgGameServerInfo::mutable_server_key() {
  set_has_server_key();
  // @@protoc_insertion_point(field_mutable:CMsgGameServerInfo.server_key)
  return server_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerInfo::release_server_key() {
  clear_has_server_key();
  return server_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerInfo::set_allocated_server_key(::std::string* server_key) {
  if (server_key != NULL) {
    set_has_server_key();
  } else {
    clear_has_server_key();
  }
  server_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_key);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerInfo.server_key)
}

// optional bool server_hibernation = 6;
inline bool CMsgGameServerInfo::has_server_hibernation() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_hibernation() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGameServerInfo::clear_has_server_hibernation() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGameServerInfo::clear_server_hibernation() {
  server_hibernation_ = false;
  clear_has_server_hibernation();
}
inline bool CMsgGameServerInfo::server_hibernation() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_hibernation)
  return server_hibernation_;
}
inline void CMsgGameServerInfo::set_server_hibernation(bool value) {
  set_has_server_hibernation();
  server_hibernation_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_hibernation)
}

// optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
inline bool CMsgGameServerInfo::has_server_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameServerInfo::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameServerInfo::clear_server_type() {
  server_type_ = 0;
  clear_has_server_type();
}
inline ::CMsgGameServerInfo_ServerType CMsgGameServerInfo::server_type() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_type)
  return static_cast< ::CMsgGameServerInfo_ServerType >(server_type_);
}
inline void CMsgGameServerInfo::set_server_type(::CMsgGameServerInfo_ServerType value) {
  assert(::CMsgGameServerInfo_ServerType_IsValid(value));
  set_has_server_type();
  server_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_type)
}

// optional uint32 server_region = 8;
inline bool CMsgGameServerInfo::has_server_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_region() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGameServerInfo::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGameServerInfo::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_region)
  return server_region_;
}
inline void CMsgGameServerInfo::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_region)
}

// optional float server_loadavg = 9;
inline bool CMsgGameServerInfo::has_server_loadavg() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_loadavg() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGameServerInfo::clear_has_server_loadavg() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGameServerInfo::clear_server_loadavg() {
  server_loadavg_ = 0;
  clear_has_server_loadavg();
}
inline float CMsgGameServerInfo::server_loadavg() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_loadavg)
  return server_loadavg_;
}
inline void CMsgGameServerInfo::set_server_loadavg(float value) {
  set_has_server_loadavg();
  server_loadavg_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_loadavg)
}

// optional float server_tv_broadcast_time = 10;
inline bool CMsgGameServerInfo::has_server_tv_broadcast_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_tv_broadcast_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGameServerInfo::clear_has_server_tv_broadcast_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGameServerInfo::clear_server_tv_broadcast_time() {
  server_tv_broadcast_time_ = 0;
  clear_has_server_tv_broadcast_time();
}
inline float CMsgGameServerInfo::server_tv_broadcast_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_tv_broadcast_time)
  return server_tv_broadcast_time_;
}
inline void CMsgGameServerInfo::set_server_tv_broadcast_time(float value) {
  set_has_server_tv_broadcast_time();
  server_tv_broadcast_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_tv_broadcast_time)
}

// optional float server_game_time = 11;
inline bool CMsgGameServerInfo::has_server_game_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_game_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGameServerInfo::clear_has_server_game_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGameServerInfo::clear_server_game_time() {
  server_game_time_ = 0;
  clear_has_server_game_time();
}
inline float CMsgGameServerInfo::server_game_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_game_time)
  return server_game_time_;
}
inline void CMsgGameServerInfo::set_server_game_time(float value) {
  set_has_server_game_time();
  server_game_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_game_time)
}

// optional fixed64 server_relay_connected_steam_id = 12;
inline bool CMsgGameServerInfo::has_server_relay_connected_steam_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_relay_connected_steam_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGameServerInfo::clear_has_server_relay_connected_steam_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGameServerInfo::clear_server_relay_connected_steam_id() {
  server_relay_connected_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_relay_connected_steam_id();
}
inline ::google::protobuf::uint64 CMsgGameServerInfo::server_relay_connected_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_relay_connected_steam_id)
  return server_relay_connected_steam_id_;
}
inline void CMsgGameServerInfo::set_server_relay_connected_steam_id(::google::protobuf::uint64 value) {
  set_has_server_relay_connected_steam_id();
  server_relay_connected_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_relay_connected_steam_id)
}

// optional uint32 relay_slots_max = 13;
inline bool CMsgGameServerInfo::has_relay_slots_max() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGameServerInfo::set_has_relay_slots_max() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGameServerInfo::clear_has_relay_slots_max() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGameServerInfo::clear_relay_slots_max() {
  relay_slots_max_ = 0u;
  clear_has_relay_slots_max();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::relay_slots_max() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.relay_slots_max)
  return relay_slots_max_;
}
inline void CMsgGameServerInfo::set_relay_slots_max(::google::protobuf::uint32 value) {
  set_has_relay_slots_max();
  relay_slots_max_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.relay_slots_max)
}

// optional int32 relays_connected = 14;
inline bool CMsgGameServerInfo::has_relays_connected() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameServerInfo::set_has_relays_connected() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGameServerInfo::clear_has_relays_connected() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGameServerInfo::clear_relays_connected() {
  relays_connected_ = 0;
  clear_has_relays_connected();
}
inline ::google::protobuf::int32 CMsgGameServerInfo::relays_connected() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.relays_connected)
  return relays_connected_;
}
inline void CMsgGameServerInfo::set_relays_connected(::google::protobuf::int32 value) {
  set_has_relays_connected();
  relays_connected_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.relays_connected)
}

// optional int32 relay_clients_connected = 15;
inline bool CMsgGameServerInfo::has_relay_clients_connected() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameServerInfo::set_has_relay_clients_connected() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGameServerInfo::clear_has_relay_clients_connected() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGameServerInfo::clear_relay_clients_connected() {
  relay_clients_connected_ = 0;
  clear_has_relay_clients_connected();
}
inline ::google::protobuf::int32 CMsgGameServerInfo::relay_clients_connected() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.relay_clients_connected)
  return relay_clients_connected_;
}
inline void CMsgGameServerInfo::set_relay_clients_connected(::google::protobuf::int32 value) {
  set_has_relay_clients_connected();
  relay_clients_connected_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.relay_clients_connected)
}

// optional fixed64 relayed_game_server_steam_id = 16;
inline bool CMsgGameServerInfo::has_relayed_game_server_steam_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameServerInfo::set_has_relayed_game_server_steam_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGameServerInfo::clear_has_relayed_game_server_steam_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGameServerInfo::clear_relayed_game_server_steam_id() {
  relayed_game_server_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_relayed_game_server_steam_id();
}
inline ::google::protobuf::uint64 CMsgGameServerInfo::relayed_game_server_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.relayed_game_server_steam_id)
  return relayed_game_server_steam_id_;
}
inline void CMsgGameServerInfo::set_relayed_game_server_steam_id(::google::protobuf::uint64 value) {
  set_has_relayed_game_server_steam_id();
  relayed_game_server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.relayed_game_server_steam_id)
}

// optional uint32 parent_relay_count = 17;
inline bool CMsgGameServerInfo::has_parent_relay_count() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameServerInfo::set_has_parent_relay_count() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGameServerInfo::clear_has_parent_relay_count() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGameServerInfo::clear_parent_relay_count() {
  parent_relay_count_ = 0u;
  clear_has_parent_relay_count();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::parent_relay_count() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.parent_relay_count)
  return parent_relay_count_;
}
inline void CMsgGameServerInfo::set_parent_relay_count(::google::protobuf::uint32 value) {
  set_has_parent_relay_count();
  parent_relay_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.parent_relay_count)
}

// optional fixed64 tv_secret_code = 18;
inline bool CMsgGameServerInfo::has_tv_secret_code() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameServerInfo::set_has_tv_secret_code() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGameServerInfo::clear_has_tv_secret_code() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGameServerInfo::clear_tv_secret_code() {
  tv_secret_code_ = GOOGLE_ULONGLONG(0);
  clear_has_tv_secret_code();
}
inline ::google::protobuf::uint64 CMsgGameServerInfo::tv_secret_code() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.tv_secret_code)
  return tv_secret_code_;
}
inline void CMsgGameServerInfo::set_tv_secret_code(::google::protobuf::uint64 value) {
  set_has_tv_secret_code();
  tv_secret_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.tv_secret_code)
}

// optional uint32 server_version = 19;
inline bool CMsgGameServerInfo::has_server_version() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_version() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgGameServerInfo::clear_has_server_version() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgGameServerInfo::clear_server_version() {
  server_version_ = 0u;
  clear_has_server_version();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_version)
  return server_version_;
}
inline void CMsgGameServerInfo::set_server_version(::google::protobuf::uint32 value) {
  set_has_server_version();
  server_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_version)
}

// optional uint32 server_cluster = 20;
inline bool CMsgGameServerInfo::has_server_cluster() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_cluster() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgGameServerInfo::clear_has_server_cluster() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgGameServerInfo::clear_server_cluster() {
  server_cluster_ = 0u;
  clear_has_server_cluster();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerInfo.server_cluster)
  return server_cluster_;
}
inline void CMsgGameServerInfo::set_server_cluster(::google::protobuf::uint32 value) {
  set_has_server_cluster();
  server_cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerInfo.server_cluster)
}

// -------------------------------------------------------------------

// CMsgLeaverDetected

// optional fixed64 steam_id = 1;
inline bool CMsgLeaverDetected::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaverDetected::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaverDetected::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaverDetected::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgLeaverDetected::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeaverDetected.steam_id)
  return steam_id_;
}
inline void CMsgLeaverDetected::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaverDetected.steam_id)
}

// optional .DOTALeaverStatus_t leaver_status = 2 [default = DOTA_LEAVER_NONE];
inline bool CMsgLeaverDetected::has_leaver_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeaverDetected::set_has_leaver_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeaverDetected::clear_has_leaver_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeaverDetected::clear_leaver_status() {
  leaver_status_ = 0;
  clear_has_leaver_status();
}
inline ::DOTALeaverStatus_t CMsgLeaverDetected::leaver_status() const {
  // @@protoc_insertion_point(field_get:CMsgLeaverDetected.leaver_status)
  return static_cast< ::DOTALeaverStatus_t >(leaver_status_);
}
inline void CMsgLeaverDetected::set_leaver_status(::DOTALeaverStatus_t value) {
  assert(::DOTALeaverStatus_t_IsValid(value));
  set_has_leaver_status();
  leaver_status_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaverDetected.leaver_status)
}

// optional .CMsgLeaverState leaver_state = 4;
inline bool CMsgLeaverDetected::has_leaver_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeaverDetected::set_has_leaver_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLeaverDetected::clear_has_leaver_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLeaverDetected::clear_leaver_state() {
  if (leaver_state_ != NULL) leaver_state_->::CMsgLeaverState::Clear();
  clear_has_leaver_state();
}
inline const ::CMsgLeaverState& CMsgLeaverDetected::leaver_state() const {
  // @@protoc_insertion_point(field_get:CMsgLeaverDetected.leaver_state)
  return leaver_state_ != NULL ? *leaver_state_ : *default_instance_->leaver_state_;
}
inline ::CMsgLeaverState* CMsgLeaverDetected::mutable_leaver_state() {
  set_has_leaver_state();
  if (leaver_state_ == NULL) {
    leaver_state_ = new ::CMsgLeaverState;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLeaverDetected.leaver_state)
  return leaver_state_;
}
inline ::CMsgLeaverState* CMsgLeaverDetected::release_leaver_state() {
  clear_has_leaver_state();
  ::CMsgLeaverState* temp = leaver_state_;
  leaver_state_ = NULL;
  return temp;
}
inline void CMsgLeaverDetected::set_allocated_leaver_state(::CMsgLeaverState* leaver_state) {
  delete leaver_state_;
  leaver_state_ = leaver_state;
  if (leaver_state) {
    set_has_leaver_state();
  } else {
    clear_has_leaver_state();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLeaverDetected.leaver_state)
}

// optional uint32 server_cluster = 5;
inline bool CMsgLeaverDetected::has_server_cluster() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLeaverDetected::set_has_server_cluster() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLeaverDetected::clear_has_server_cluster() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLeaverDetected::clear_server_cluster() {
  server_cluster_ = 0u;
  clear_has_server_cluster();
}
inline ::google::protobuf::uint32 CMsgLeaverDetected::server_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgLeaverDetected.server_cluster)
  return server_cluster_;
}
inline void CMsgLeaverDetected::set_server_cluster(::google::protobuf::uint32 value) {
  set_has_server_cluster();
  server_cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaverDetected.server_cluster)
}

// optional .ENetworkDisconnectionReason disconnect_reason = 6 [default = NETWORK_DISCONNECT_INVALID];
inline bool CMsgLeaverDetected::has_disconnect_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgLeaverDetected::set_has_disconnect_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgLeaverDetected::clear_has_disconnect_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgLeaverDetected::clear_disconnect_reason() {
  disconnect_reason_ = 0;
  clear_has_disconnect_reason();
}
inline ::ENetworkDisconnectionReason CMsgLeaverDetected::disconnect_reason() const {
  // @@protoc_insertion_point(field_get:CMsgLeaverDetected.disconnect_reason)
  return static_cast< ::ENetworkDisconnectionReason >(disconnect_reason_);
}
inline void CMsgLeaverDetected::set_disconnect_reason(::ENetworkDisconnectionReason value) {
  assert(::ENetworkDisconnectionReason_IsValid(value));
  set_has_disconnect_reason();
  disconnect_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaverDetected.disconnect_reason)
}

// optional .CMsgPoorNetworkConditions poor_network_conditions = 7;
inline bool CMsgLeaverDetected::has_poor_network_conditions() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgLeaverDetected::set_has_poor_network_conditions() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgLeaverDetected::clear_has_poor_network_conditions() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgLeaverDetected::clear_poor_network_conditions() {
  if (poor_network_conditions_ != NULL) poor_network_conditions_->::CMsgPoorNetworkConditions::Clear();
  clear_has_poor_network_conditions();
}
inline const ::CMsgPoorNetworkConditions& CMsgLeaverDetected::poor_network_conditions() const {
  // @@protoc_insertion_point(field_get:CMsgLeaverDetected.poor_network_conditions)
  return poor_network_conditions_ != NULL ? *poor_network_conditions_ : *default_instance_->poor_network_conditions_;
}
inline ::CMsgPoorNetworkConditions* CMsgLeaverDetected::mutable_poor_network_conditions() {
  set_has_poor_network_conditions();
  if (poor_network_conditions_ == NULL) {
    poor_network_conditions_ = new ::CMsgPoorNetworkConditions;
  }
  // @@protoc_insertion_point(field_mutable:CMsgLeaverDetected.poor_network_conditions)
  return poor_network_conditions_;
}
inline ::CMsgPoorNetworkConditions* CMsgLeaverDetected::release_poor_network_conditions() {
  clear_has_poor_network_conditions();
  ::CMsgPoorNetworkConditions* temp = poor_network_conditions_;
  poor_network_conditions_ = NULL;
  return temp;
}
inline void CMsgLeaverDetected::set_allocated_poor_network_conditions(::CMsgPoorNetworkConditions* poor_network_conditions) {
  delete poor_network_conditions_;
  poor_network_conditions_ = poor_network_conditions;
  if (poor_network_conditions) {
    set_has_poor_network_conditions();
  } else {
    clear_has_poor_network_conditions();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgLeaverDetected.poor_network_conditions)
}

// -------------------------------------------------------------------

// CMsgLeaverDetectedResponse

// optional uint32 result = 1;
inline bool CMsgLeaverDetectedResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaverDetectedResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaverDetectedResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaverDetectedResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgLeaverDetectedResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgLeaverDetectedResponse.result)
  return result_;
}
inline void CMsgLeaverDetectedResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaverDetectedResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAFantasyPlayerStats

// optional uint32 player_account_id = 1;
inline bool CMsgDOTAFantasyPlayerStats::has_player_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_player_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_player_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_player_account_id() {
  player_account_id_ = 0u;
  clear_has_player_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::player_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.player_account_id)
  return player_account_id_;
}
inline void CMsgDOTAFantasyPlayerStats::set_player_account_id(::google::protobuf::uint32 value) {
  set_has_player_account_id();
  player_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.player_account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgDOTAFantasyPlayerStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAFantasyPlayerStats::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.match_id)
  return match_id_;
}
inline void CMsgDOTAFantasyPlayerStats::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.match_id)
}

// optional bool match_completed = 3;
inline bool CMsgDOTAFantasyPlayerStats::has_match_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_match_completed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_match_completed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_match_completed() {
  match_completed_ = false;
  clear_has_match_completed();
}
inline bool CMsgDOTAFantasyPlayerStats::match_completed() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.match_completed)
  return match_completed_;
}
inline void CMsgDOTAFantasyPlayerStats::set_match_completed(bool value) {
  set_has_match_completed();
  match_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.match_completed)
}

// optional uint32 level = 4;
inline bool CMsgDOTAFantasyPlayerStats::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.level)
  return level_;
}
inline void CMsgDOTAFantasyPlayerStats::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.level)
}

// optional uint32 kills = 5;
inline bool CMsgDOTAFantasyPlayerStats::has_kills() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_kills() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_kills() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.kills)
  return kills_;
}
inline void CMsgDOTAFantasyPlayerStats::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.kills)
}

// optional uint32 deaths = 6;
inline bool CMsgDOTAFantasyPlayerStats::has_deaths() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_deaths() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.deaths)
  return deaths_;
}
inline void CMsgDOTAFantasyPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.deaths)
}

// optional uint32 assists = 7;
inline bool CMsgDOTAFantasyPlayerStats::has_assists() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_assists() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_assists() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_assists() {
  assists_ = 0u;
  clear_has_assists();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::assists() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.assists)
  return assists_;
}
inline void CMsgDOTAFantasyPlayerStats::set_assists(::google::protobuf::uint32 value) {
  set_has_assists();
  assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.assists)
}

// optional uint32 last_hits = 8;
inline bool CMsgDOTAFantasyPlayerStats::has_last_hits() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_last_hits() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_last_hits() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_last_hits() {
  last_hits_ = 0u;
  clear_has_last_hits();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.last_hits)
  return last_hits_;
}
inline void CMsgDOTAFantasyPlayerStats::set_last_hits(::google::protobuf::uint32 value) {
  set_has_last_hits();
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.last_hits)
}

// optional uint32 denies = 9;
inline bool CMsgDOTAFantasyPlayerStats::has_denies() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_denies() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_denies() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_denies() {
  denies_ = 0u;
  clear_has_denies();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::denies() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.denies)
  return denies_;
}
inline void CMsgDOTAFantasyPlayerStats::set_denies(::google::protobuf::uint32 value) {
  set_has_denies();
  denies_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.denies)
}

// optional float gpm = 10;
inline bool CMsgDOTAFantasyPlayerStats::has_gpm() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_gpm() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_gpm() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_gpm() {
  gpm_ = 0;
  clear_has_gpm();
}
inline float CMsgDOTAFantasyPlayerStats::gpm() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.gpm)
  return gpm_;
}
inline void CMsgDOTAFantasyPlayerStats::set_gpm(float value) {
  set_has_gpm();
  gpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.gpm)
}

// optional float xppm = 11;
inline bool CMsgDOTAFantasyPlayerStats::has_xppm() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_xppm() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_xppm() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_xppm() {
  xppm_ = 0;
  clear_has_xppm();
}
inline float CMsgDOTAFantasyPlayerStats::xppm() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.xppm)
  return xppm_;
}
inline void CMsgDOTAFantasyPlayerStats::set_xppm(float value) {
  set_has_xppm();
  xppm_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.xppm)
}

// optional float stuns = 12;
inline bool CMsgDOTAFantasyPlayerStats::has_stuns() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_stuns() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_stuns() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_stuns() {
  stuns_ = 0;
  clear_has_stuns();
}
inline float CMsgDOTAFantasyPlayerStats::stuns() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.stuns)
  return stuns_;
}
inline void CMsgDOTAFantasyPlayerStats::set_stuns(float value) {
  set_has_stuns();
  stuns_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.stuns)
}

// optional float healing = 13;
inline bool CMsgDOTAFantasyPlayerStats::has_healing() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_healing() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_healing() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_healing() {
  healing_ = 0;
  clear_has_healing();
}
inline float CMsgDOTAFantasyPlayerStats::healing() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.healing)
  return healing_;
}
inline void CMsgDOTAFantasyPlayerStats::set_healing(float value) {
  set_has_healing();
  healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.healing)
}

// optional uint32 tower_kills = 14;
inline bool CMsgDOTAFantasyPlayerStats::has_tower_kills() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_tower_kills() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_tower_kills() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_tower_kills() {
  tower_kills_ = 0u;
  clear_has_tower_kills();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::tower_kills() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.tower_kills)
  return tower_kills_;
}
inline void CMsgDOTAFantasyPlayerStats::set_tower_kills(::google::protobuf::uint32 value) {
  set_has_tower_kills();
  tower_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.tower_kills)
}

// optional uint32 roshan_kills = 15;
inline bool CMsgDOTAFantasyPlayerStats::has_roshan_kills() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_roshan_kills() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_roshan_kills() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_roshan_kills() {
  roshan_kills_ = 0u;
  clear_has_roshan_kills();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::roshan_kills() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.roshan_kills)
  return roshan_kills_;
}
inline void CMsgDOTAFantasyPlayerStats::set_roshan_kills(::google::protobuf::uint32 value) {
  set_has_roshan_kills();
  roshan_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.roshan_kills)
}

// optional uint32 team_id = 16;
inline bool CMsgDOTAFantasyPlayerStats::has_team_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_team_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_team_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.team_id)
  return team_id_;
}
inline void CMsgDOTAFantasyPlayerStats::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.team_id)
}

// optional uint32 league_id = 17;
inline bool CMsgDOTAFantasyPlayerStats::has_league_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_league_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_league_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.league_id)
  return league_id_;
}
inline void CMsgDOTAFantasyPlayerStats::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.league_id)
}

// optional uint32 delay = 18;
inline bool CMsgDOTAFantasyPlayerStats::has_delay() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAFantasyPlayerStats::set_has_delay() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_has_delay() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAFantasyPlayerStats::clear_delay() {
  delay_ = 0u;
  clear_has_delay();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyPlayerStats::delay() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyPlayerStats.delay)
  return delay_;
}
inline void CMsgDOTAFantasyPlayerStats::set_delay(::google::protobuf::uint32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyPlayerStats.delay)
}

// -------------------------------------------------------------------

// CMsgDOTAFantasyMatch

// optional uint64 match_id = 1;
inline bool CMsgDOTAFantasyMatch::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFantasyMatch::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFantasyMatch::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFantasyMatch::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAFantasyMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyMatch.match_id)
  return match_id_;
}
inline void CMsgDOTAFantasyMatch::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyMatch.match_id)
}

// optional uint32 league_id = 2;
inline bool CMsgDOTAFantasyMatch::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFantasyMatch::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFantasyMatch::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFantasyMatch::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyMatch.league_id)
  return league_id_;
}
inline void CMsgDOTAFantasyMatch::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyMatch.league_id)
}

// optional uint32 series_id = 3;
inline bool CMsgDOTAFantasyMatch::has_series_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFantasyMatch::set_has_series_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAFantasyMatch::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAFantasyMatch::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::series_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyMatch.series_id)
  return series_id_;
}
inline void CMsgDOTAFantasyMatch::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyMatch.series_id)
}

// optional uint32 start_time = 4;
inline bool CMsgDOTAFantasyMatch::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAFantasyMatch::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAFantasyMatch::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAFantasyMatch::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyMatch.start_time)
  return start_time_;
}
inline void CMsgDOTAFantasyMatch::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyMatch.start_time)
}

// optional uint32 series_type = 5;
inline bool CMsgDOTAFantasyMatch::has_series_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAFantasyMatch::set_has_series_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAFantasyMatch::clear_has_series_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAFantasyMatch::clear_series_type() {
  series_type_ = 0u;
  clear_has_series_type();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::series_type() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyMatch.series_type)
  return series_type_;
}
inline void CMsgDOTAFantasyMatch::set_series_type(::google::protobuf::uint32 value) {
  set_has_series_type();
  series_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyMatch.series_type)
}

// optional uint32 team_1 = 6;
inline bool CMsgDOTAFantasyMatch::has_team_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAFantasyMatch::set_has_team_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAFantasyMatch::clear_has_team_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAFantasyMatch::clear_team_1() {
  team_1_ = 0u;
  clear_has_team_1();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::team_1() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyMatch.team_1)
  return team_1_;
}
inline void CMsgDOTAFantasyMatch::set_team_1(::google::protobuf::uint32 value) {
  set_has_team_1();
  team_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyMatch.team_1)
}

// optional uint32 team_2 = 7;
inline bool CMsgDOTAFantasyMatch::has_team_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAFantasyMatch::set_has_team_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAFantasyMatch::clear_has_team_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAFantasyMatch::clear_team_2() {
  team_2_ = 0u;
  clear_has_team_2();
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::team_2() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFantasyMatch.team_2)
  return team_2_;
}
inline void CMsgDOTAFantasyMatch::set_team_2(::google::protobuf::uint32 value) {
  set_has_team_2();
  team_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFantasyMatch.team_2)
}

// -------------------------------------------------------------------

// CMsgServerToGCRealtimeStats

// optional .CMsgDOTARealtimeGameStatsTerse delayed = 1;
inline bool CMsgServerToGCRealtimeStats::has_delayed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCRealtimeStats::set_has_delayed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCRealtimeStats::clear_has_delayed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCRealtimeStats::clear_delayed() {
  if (delayed_ != NULL) delayed_->::CMsgDOTARealtimeGameStatsTerse::Clear();
  clear_has_delayed();
}
inline const ::CMsgDOTARealtimeGameStatsTerse& CMsgServerToGCRealtimeStats::delayed() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCRealtimeStats.delayed)
  return delayed_ != NULL ? *delayed_ : *default_instance_->delayed_;
}
inline ::CMsgDOTARealtimeGameStatsTerse* CMsgServerToGCRealtimeStats::mutable_delayed() {
  set_has_delayed();
  if (delayed_ == NULL) {
    delayed_ = new ::CMsgDOTARealtimeGameStatsTerse;
  }
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCRealtimeStats.delayed)
  return delayed_;
}
inline ::CMsgDOTARealtimeGameStatsTerse* CMsgServerToGCRealtimeStats::release_delayed() {
  clear_has_delayed();
  ::CMsgDOTARealtimeGameStatsTerse* temp = delayed_;
  delayed_ = NULL;
  return temp;
}
inline void CMsgServerToGCRealtimeStats::set_allocated_delayed(::CMsgDOTARealtimeGameStatsTerse* delayed) {
  delete delayed_;
  delayed_ = delayed;
  if (delayed) {
    set_has_delayed();
  } else {
    clear_has_delayed();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgServerToGCRealtimeStats.delayed)
}

// optional .CMsgDOTARealtimeGameStats current = 2;
inline bool CMsgServerToGCRealtimeStats::has_current() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCRealtimeStats::set_has_current() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCRealtimeStats::clear_has_current() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCRealtimeStats::clear_current() {
  if (current_ != NULL) current_->::CMsgDOTARealtimeGameStats::Clear();
  clear_has_current();
}
inline const ::CMsgDOTARealtimeGameStats& CMsgServerToGCRealtimeStats::current() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCRealtimeStats.current)
  return current_ != NULL ? *current_ : *default_instance_->current_;
}
inline ::CMsgDOTARealtimeGameStats* CMsgServerToGCRealtimeStats::mutable_current() {
  set_has_current();
  if (current_ == NULL) {
    current_ = new ::CMsgDOTARealtimeGameStats;
  }
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCRealtimeStats.current)
  return current_;
}
inline ::CMsgDOTARealtimeGameStats* CMsgServerToGCRealtimeStats::release_current() {
  clear_has_current();
  ::CMsgDOTARealtimeGameStats* temp = current_;
  current_ = NULL;
  return temp;
}
inline void CMsgServerToGCRealtimeStats::set_allocated_current(::CMsgDOTARealtimeGameStats* current) {
  delete current_;
  current_ = current;
  if (current) {
    set_has_current();
  } else {
    clear_has_current();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgServerToGCRealtimeStats.current)
}

// -------------------------------------------------------------------

// CMsgGCToServerRealtimeStatsStartStop

// optional bool delayed = 1;
inline bool CMsgGCToServerRealtimeStatsStartStop::has_delayed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerRealtimeStatsStartStop::set_has_delayed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToServerRealtimeStatsStartStop::clear_has_delayed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToServerRealtimeStatsStartStop::clear_delayed() {
  delayed_ = false;
  clear_has_delayed();
}
inline bool CMsgGCToServerRealtimeStatsStartStop::delayed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerRealtimeStatsStartStop.delayed)
  return delayed_;
}
inline void CMsgGCToServerRealtimeStatsStartStop::set_delayed(bool value) {
  set_has_delayed();
  delayed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerRealtimeStatsStartStop.delayed)
}

// optional bool current = 2;
inline bool CMsgGCToServerRealtimeStatsStartStop::has_current() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerRealtimeStatsStartStop::set_has_current() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToServerRealtimeStatsStartStop::clear_has_current() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToServerRealtimeStatsStartStop::clear_current() {
  current_ = false;
  clear_has_current();
}
inline bool CMsgGCToServerRealtimeStatsStartStop::current() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerRealtimeStatsStartStop.current)
  return current_;
}
inline void CMsgGCToServerRealtimeStatsStartStop::set_current(bool value) {
  set_has_current();
  current_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerRealtimeStatsStartStop.current)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData

// optional uint32 dota_team = 1;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::has_dota_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::set_has_dota_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::clear_has_dota_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::clear_dota_team() {
  dota_team_ = 0u;
  clear_has_dota_team();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::dota_team() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.dota_team)
  return dota_team_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::set_dota_team(::google::protobuf::uint32 value) {
  set_has_dota_team();
  dota_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.dota_team)
}

// optional bool winner = 2;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::has_winner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::set_has_winner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::clear_has_winner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::clear_winner() {
  winner_ = false;
  clear_has_winner();
}
inline bool CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::winner() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.winner)
  return winner_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::set_winner(bool value) {
  set_has_winner();
  winner_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.winner)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CTeam_CPlayer

// optional fixed64 steam_id = 1;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGameMatchSignOut_CTeam_CPlayer::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.steam_id)
  return steam_id_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.steam_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.hero_id)
  return hero_id_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.hero_id)
}

// repeated uint32 items = 4;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::items_size() const {
  return items_.size();
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_items() {
  items_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.items)
  return items_.Get(index);
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_items(int index, ::google::protobuf::uint32 value) {
  items_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.items)
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::add_items(::google::protobuf::uint32 value) {
  items_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.CTeam.CPlayer.items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut_CTeam_CPlayer::items() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.CTeam.CPlayer.items)
  return items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.CTeam.CPlayer.items)
  return &items_;
}

// optional uint32 gold = 5;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::gold() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.gold)
  return gold_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.gold)
}

// optional uint32 kills = 6;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_kills() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_kills() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_kills() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::kills() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.kills)
  return kills_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.kills)
}

// optional uint32 deaths = 7;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_deaths() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_deaths() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.deaths)
  return deaths_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.deaths)
}

// optional uint32 assists = 8;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_assists() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_assists() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_assists() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_assists() {
  assists_ = 0u;
  clear_has_assists();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::assists() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.assists)
  return assists_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_assists(::google::protobuf::uint32 value) {
  set_has_assists();
  assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.assists)
}

// optional uint32 leaver_status = 9;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_leaver_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_leaver_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_leaver_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_leaver_status() {
  leaver_status_ = 0u;
  clear_has_leaver_status();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::leaver_status() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.leaver_status)
  return leaver_status_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_leaver_status(::google::protobuf::uint32 value) {
  set_has_leaver_status();
  leaver_status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.leaver_status)
}

// optional uint32 last_hits = 10;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_last_hits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_last_hits() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_last_hits() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_last_hits() {
  last_hits_ = 0u;
  clear_has_last_hits();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.last_hits)
  return last_hits_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_last_hits(::google::protobuf::uint32 value) {
  set_has_last_hits();
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.last_hits)
}

// optional uint32 denies = 11;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_denies() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_denies() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_denies() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_denies() {
  denies_ = 0u;
  clear_has_denies();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::denies() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.denies)
  return denies_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_denies(::google::protobuf::uint32 value) {
  set_has_denies();
  denies_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.denies)
}

// optional uint32 gold_per_min = 12;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_gold_per_min() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_gold_per_min() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_gold_per_min() {
  gold_per_min_ = 0u;
  clear_has_gold_per_min();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::gold_per_min() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.gold_per_min)
  return gold_per_min_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_gold_per_min(::google::protobuf::uint32 value) {
  set_has_gold_per_min();
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.gold_per_min)
}

// optional uint32 xp_per_minute = 13;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_xp_per_minute() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_xp_per_minute() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_xp_per_minute() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_xp_per_minute() {
  xp_per_minute_ = 0u;
  clear_has_xp_per_minute();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::xp_per_minute() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.xp_per_minute)
  return xp_per_minute_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_xp_per_minute(::google::protobuf::uint32 value) {
  set_has_xp_per_minute();
  xp_per_minute_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.xp_per_minute)
}

// optional uint32 gold_spent = 14;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_gold_spent() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_gold_spent() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_gold_spent() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_gold_spent() {
  gold_spent_ = 0u;
  clear_has_gold_spent();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::gold_spent() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.gold_spent)
  return gold_spent_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_gold_spent(::google::protobuf::uint32 value) {
  set_has_gold_spent();
  gold_spent_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.gold_spent)
}

// optional uint32 level = 15;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::level() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.level)
  return level_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.level)
}

// optional uint32 hero_damage = 16;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_damage() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_hero_damage() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_hero_damage() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_damage() {
  hero_damage_ = 0u;
  clear_has_hero_damage();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_damage() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage)
  return hero_damage_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_damage(::google::protobuf::uint32 value) {
  set_has_hero_damage();
  hero_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage)
}

// optional uint32 tower_damage = 17;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_tower_damage() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_tower_damage() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_tower_damage() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_tower_damage() {
  tower_damage_ = 0u;
  clear_has_tower_damage();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::tower_damage() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.tower_damage)
  return tower_damage_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_tower_damage(::google::protobuf::uint32 value) {
  set_has_tower_damage();
  tower_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.tower_damage)
}

// optional uint32 hero_healing = 18;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_healing() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_hero_healing() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_hero_healing() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_healing() {
  hero_healing_ = 0u;
  clear_has_hero_healing();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_healing() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.hero_healing)
  return hero_healing_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_healing(::google::protobuf::uint32 value) {
  set_has_hero_healing();
  hero_healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.hero_healing)
}

// optional uint32 time_last_seen = 19;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_time_last_seen() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_time_last_seen() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_time_last_seen() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_time_last_seen() {
  time_last_seen_ = 0u;
  clear_has_time_last_seen();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::time_last_seen() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.time_last_seen)
  return time_last_seen_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_time_last_seen(::google::protobuf::uint32 value) {
  set_has_time_last_seen();
  time_last_seen_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.time_last_seen)
}

// optional uint32 support_ability_value = 20;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_support_ability_value() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_support_ability_value() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_support_ability_value() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_support_ability_value() {
  support_ability_value_ = 0u;
  clear_has_support_ability_value();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::support_ability_value() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.support_ability_value)
  return support_ability_value_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_support_ability_value(::google::protobuf::uint32 value) {
  set_has_support_ability_value();
  support_ability_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.support_ability_value)
}

// optional uint64 party_id = 21;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_party_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_party_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_party_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgGameMatchSignOut_CTeam_CPlayer::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.party_id)
  return party_id_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.party_id)
}

// optional float scaled_kills = 24;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_kills() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_scaled_kills() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_scaled_kills() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_kills() {
  scaled_kills_ = 0;
  clear_has_scaled_kills();
}
inline float CMsgGameMatchSignOut_CTeam_CPlayer::scaled_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.scaled_kills)
  return scaled_kills_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_kills(float value) {
  set_has_scaled_kills();
  scaled_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.scaled_kills)
}

// optional float scaled_deaths = 25;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_deaths() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_scaled_deaths() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_scaled_deaths() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_deaths() {
  scaled_deaths_ = 0;
  clear_has_scaled_deaths();
}
inline float CMsgGameMatchSignOut_CTeam_CPlayer::scaled_deaths() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.scaled_deaths)
  return scaled_deaths_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_deaths(float value) {
  set_has_scaled_deaths();
  scaled_deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.scaled_deaths)
}

// optional float scaled_assists = 26;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_assists() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_scaled_assists() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_scaled_assists() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_assists() {
  scaled_assists_ = 0;
  clear_has_scaled_assists();
}
inline float CMsgGameMatchSignOut_CTeam_CPlayer::scaled_assists() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.scaled_assists)
  return scaled_assists_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_assists(float value) {
  set_has_scaled_assists();
  scaled_assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.scaled_assists)
}

// optional uint32 claimed_farm_gold = 27;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_claimed_farm_gold() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_claimed_farm_gold() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_claimed_farm_gold() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_claimed_farm_gold() {
  claimed_farm_gold_ = 0u;
  clear_has_claimed_farm_gold();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::claimed_farm_gold() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.claimed_farm_gold)
  return claimed_farm_gold_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_claimed_farm_gold(::google::protobuf::uint32 value) {
  set_has_claimed_farm_gold();
  claimed_farm_gold_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.claimed_farm_gold)
}

// optional uint32 support_gold = 28;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_support_gold() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_support_gold() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_support_gold() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_support_gold() {
  support_gold_ = 0u;
  clear_has_support_gold();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::support_gold() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.support_gold)
  return support_gold_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_support_gold(::google::protobuf::uint32 value) {
  set_has_support_gold();
  support_gold_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.support_gold)
}

// optional uint32 claimed_denies = 29;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_claimed_denies() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_claimed_denies() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_claimed_denies() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_claimed_denies() {
  claimed_denies_ = 0u;
  clear_has_claimed_denies();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::claimed_denies() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.claimed_denies)
  return claimed_denies_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_claimed_denies(::google::protobuf::uint32 value) {
  set_has_claimed_denies();
  claimed_denies_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.claimed_denies)
}

// optional uint32 claimed_misses = 30;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_claimed_misses() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_claimed_misses() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_claimed_misses() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_claimed_misses() {
  claimed_misses_ = 0u;
  clear_has_claimed_misses();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::claimed_misses() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.claimed_misses)
  return claimed_misses_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_claimed_misses(::google::protobuf::uint32 value) {
  set_has_claimed_misses();
  claimed_misses_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.claimed_misses)
}

// optional uint32 misses = 31;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_misses() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_misses() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_misses() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_misses() {
  misses_ = 0u;
  clear_has_misses();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::misses() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.misses)
  return misses_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_misses(::google::protobuf::uint32 value) {
  set_has_misses();
  misses_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.misses)
}

// repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 32;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::ability_upgrades_size() const {
  return ability_upgrades_.size();
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_ability_upgrades() {
  ability_upgrades_.Clear();
}
inline const ::CMatchPlayerAbilityUpgrade& CMsgGameMatchSignOut_CTeam_CPlayer::ability_upgrades(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_.Get(index);
}
inline ::CMatchPlayerAbilityUpgrade* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_ability_upgrades(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_.Mutable(index);
}
inline ::CMatchPlayerAbilityUpgrade* CMsgGameMatchSignOut_CTeam_CPlayer::add_ability_upgrades() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_ability_upgrades() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return &ability_upgrades_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMatchPlayerAbilityUpgrade >&
CMsgGameMatchSignOut_CTeam_CPlayer::ability_upgrades() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_;
}

// repeated .CMatchAdditionalUnitInventory additional_units_inventory = 33;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::additional_units_inventory_size() const {
  return additional_units_inventory_.size();
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_additional_units_inventory() {
  additional_units_inventory_.Clear();
}
inline const ::CMatchAdditionalUnitInventory& CMsgGameMatchSignOut_CTeam_CPlayer::additional_units_inventory(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_.Get(index);
}
inline ::CMatchAdditionalUnitInventory* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_additional_units_inventory(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_.Mutable(index);
}
inline ::CMatchAdditionalUnitInventory* CMsgGameMatchSignOut_CTeam_CPlayer::add_additional_units_inventory() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_additional_units_inventory() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return &additional_units_inventory_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMatchAdditionalUnitInventory >&
CMsgGameMatchSignOut_CTeam_CPlayer::additional_units_inventory() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_;
}

// optional uint32 net_worth = 34;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_net_worth() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_net_worth() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_net_worth() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_net_worth() {
  net_worth_ = 0u;
  clear_has_net_worth();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::net_worth() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.net_worth)
  return net_worth_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_net_worth(::google::protobuf::uint32 value) {
  set_has_net_worth();
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CTeam.CPlayer.net_worth)
}

// optional .CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData custom_game_data = 35;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_custom_game_data() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_has_custom_game_data() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_has_custom_game_data() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_custom_game_data() {
  if (custom_game_data_ != NULL) custom_game_data_->::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::Clear();
  clear_has_custom_game_data();
}
inline const ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& CMsgGameMatchSignOut_CTeam_CPlayer::custom_game_data() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.CPlayer.custom_game_data)
  return custom_game_data_ != NULL ? *custom_game_data_ : *default_instance_->custom_game_data_;
}
inline ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_custom_game_data() {
  set_has_custom_game_data();
  if (custom_game_data_ == NULL) {
    custom_game_data_ = new ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.CTeam.CPlayer.custom_game_data)
  return custom_game_data_;
}
inline ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* CMsgGameMatchSignOut_CTeam_CPlayer::release_custom_game_data() {
  clear_has_custom_game_data();
  ::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* temp = custom_game_data_;
  custom_game_data_ = NULL;
  return temp;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_allocated_custom_game_data(::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* custom_game_data) {
  delete custom_game_data_;
  custom_game_data_ = custom_game_data;
  if (custom_game_data) {
    set_has_custom_game_data();
  } else {
    clear_has_custom_game_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameMatchSignOut.CTeam.CPlayer.custom_game_data)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CTeam

// repeated .CMsgGameMatchSignOut.CTeam.CPlayer players = 1;
inline int CMsgGameMatchSignOut_CTeam::players_size() const {
  return players_.size();
}
inline void CMsgGameMatchSignOut_CTeam::clear_players() {
  players_.Clear();
}
inline const ::CMsgGameMatchSignOut_CTeam_CPlayer& CMsgGameMatchSignOut_CTeam::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CTeam.players)
  return players_.Get(index);
}
inline ::CMsgGameMatchSignOut_CTeam_CPlayer* CMsgGameMatchSignOut_CTeam::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.CTeam.players)
  return players_.Mutable(index);
}
inline ::CMsgGameMatchSignOut_CTeam_CPlayer* CMsgGameMatchSignOut_CTeam::add_players() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.CTeam.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam_CPlayer >*
CMsgGameMatchSignOut_CTeam::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.CTeam.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam_CPlayer >&
CMsgGameMatchSignOut_CTeam::players() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.CTeam.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CAdditionalSignoutMsg

// optional uint32 id = 1;
inline bool CMsgGameMatchSignOut_CAdditionalSignoutMsg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CAdditionalSignoutMsg::id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CAdditionalSignoutMsg.id)
  return id_;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CAdditionalSignoutMsg.id)
}

// optional bytes contents = 2;
inline bool CMsgGameMatchSignOut_CAdditionalSignoutMsg::has_contents() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_has_contents() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::clear_has_contents() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_contents();
}
inline const ::std::string& CMsgGameMatchSignOut_CAdditionalSignoutMsg::contents() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
  return contents_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_contents(const ::std::string& value) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_contents(const char* value) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_contents(const void* value, size_t size) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}
inline ::std::string* CMsgGameMatchSignOut_CAdditionalSignoutMsg::mutable_contents() {
  set_has_contents();
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOut_CAdditionalSignoutMsg::release_contents() {
  clear_has_contents();
  return contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_allocated_contents(::std::string* contents) {
  if (contents != NULL) {
    set_has_contents();
  } else {
    clear_has_contents();
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CSocialFeedMatchEvent

// optional uint32 account_id = 1;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CSocialFeedMatchEvent.account_id)
  return account_id_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CSocialFeedMatchEvent.account_id)
}

// optional uint32 timestamp = 2;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CSocialFeedMatchEvent.timestamp)
  return timestamp_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CSocialFeedMatchEvent.timestamp)
}

// optional uint32 event_type = 3;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CSocialFeedMatchEvent.event_type)
  return event_type_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CSocialFeedMatchEvent.event_type)
}

// optional int32 game_time = 4;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_game_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_has_game_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_has_game_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_game_time() {
  game_time_ = 0;
  clear_has_game_time();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::game_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CSocialFeedMatchEvent.game_time)
  return game_time_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_game_time(::google::protobuf::int32 value) {
  set_has_game_time();
  game_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CSocialFeedMatchEvent.game_time)
}

// optional uint32 replay_time = 5;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_replay_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_has_replay_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_has_replay_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_replay_time() {
  replay_time_ = 0u;
  clear_has_replay_time();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::replay_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CSocialFeedMatchEvent.replay_time)
  return replay_time_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_replay_time(::google::protobuf::uint32 value) {
  set_has_replay_time();
  replay_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CSocialFeedMatchEvent.replay_time)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CCustomGameData

// optional uint32 publish_timestamp = 1;
inline bool CMsgGameMatchSignOut_CCustomGameData::has_publish_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CCustomGameData::set_has_publish_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOut_CCustomGameData::clear_has_publish_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOut_CCustomGameData::clear_publish_timestamp() {
  publish_timestamp_ = 0u;
  clear_has_publish_timestamp();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CCustomGameData::publish_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.CCustomGameData.publish_timestamp)
  return publish_timestamp_;
}
inline void CMsgGameMatchSignOut_CCustomGameData::set_publish_timestamp(::google::protobuf::uint32 value) {
  set_has_publish_timestamp();
  publish_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.CCustomGameData.publish_timestamp)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut

// optional uint64 match_id = 1;
inline bool CMsgGameMatchSignOut::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOut::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOut::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGameMatchSignOut::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.match_id)
  return match_id_;
}
inline void CMsgGameMatchSignOut::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.match_id)
}

// optional uint32 duration = 2;
inline bool CMsgGameMatchSignOut::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignOut::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOut::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::duration() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.duration)
  return duration_;
}
inline void CMsgGameMatchSignOut::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.duration)
}

// optional bool good_guys_win = 3;
inline bool CMsgGameMatchSignOut::has_good_guys_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_good_guys_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameMatchSignOut::clear_has_good_guys_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameMatchSignOut::clear_good_guys_win() {
  good_guys_win_ = false;
  clear_has_good_guys_win();
}
inline bool CMsgGameMatchSignOut::good_guys_win() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.good_guys_win)
  return good_guys_win_;
}
inline void CMsgGameMatchSignOut::set_good_guys_win(bool value) {
  set_has_good_guys_win();
  good_guys_win_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.good_guys_win)
}

// optional fixed32 date = 4;
inline bool CMsgGameMatchSignOut::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameMatchSignOut::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameMatchSignOut::clear_date() {
  date_ = 0u;
  clear_has_date();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::date() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.date)
  return date_;
}
inline void CMsgGameMatchSignOut::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.date)
}

// repeated uint32 num_players = 5;
inline int CMsgGameMatchSignOut::num_players_size() const {
  return num_players_.size();
}
inline void CMsgGameMatchSignOut::clear_num_players() {
  num_players_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::num_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.num_players)
  return num_players_.Get(index);
}
inline void CMsgGameMatchSignOut::set_num_players(int index, ::google::protobuf::uint32 value) {
  num_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.num_players)
}
inline void CMsgGameMatchSignOut::add_num_players(::google::protobuf::uint32 value) {
  num_players_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.num_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut::num_players() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.num_players)
  return num_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut::mutable_num_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.num_players)
  return &num_players_;
}

// repeated .CMsgGameMatchSignOut.CTeam teams = 6;
inline int CMsgGameMatchSignOut::teams_size() const {
  return teams_.size();
}
inline void CMsgGameMatchSignOut::clear_teams() {
  teams_.Clear();
}
inline const ::CMsgGameMatchSignOut_CTeam& CMsgGameMatchSignOut::teams(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.teams)
  return teams_.Get(index);
}
inline ::CMsgGameMatchSignOut_CTeam* CMsgGameMatchSignOut::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.teams)
  return teams_.Mutable(index);
}
inline ::CMsgGameMatchSignOut_CTeam* CMsgGameMatchSignOut::add_teams() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.teams)
  return teams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam >*
CMsgGameMatchSignOut::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.teams)
  return &teams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CTeam >&
CMsgGameMatchSignOut::teams() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.teams)
  return teams_;
}

// repeated uint32 tower_status = 8;
inline int CMsgGameMatchSignOut::tower_status_size() const {
  return tower_status_.size();
}
inline void CMsgGameMatchSignOut::clear_tower_status() {
  tower_status_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::tower_status(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.tower_status)
  return tower_status_.Get(index);
}
inline void CMsgGameMatchSignOut::set_tower_status(int index, ::google::protobuf::uint32 value) {
  tower_status_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.tower_status)
}
inline void CMsgGameMatchSignOut::add_tower_status(::google::protobuf::uint32 value) {
  tower_status_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.tower_status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut::tower_status() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.tower_status)
  return tower_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut::mutable_tower_status() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.tower_status)
  return &tower_status_;
}

// repeated uint32 barracks_status = 9;
inline int CMsgGameMatchSignOut::barracks_status_size() const {
  return barracks_status_.size();
}
inline void CMsgGameMatchSignOut::clear_barracks_status() {
  barracks_status_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::barracks_status(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.barracks_status)
  return barracks_status_.Get(index);
}
inline void CMsgGameMatchSignOut::set_barracks_status(int index, ::google::protobuf::uint32 value) {
  barracks_status_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.barracks_status)
}
inline void CMsgGameMatchSignOut::add_barracks_status(::google::protobuf::uint32 value) {
  barracks_status_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.barracks_status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut::barracks_status() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.barracks_status)
  return barracks_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut::mutable_barracks_status() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.barracks_status)
  return &barracks_status_;
}

// optional uint32 cluster = 10;
inline bool CMsgGameMatchSignOut::has_cluster() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_cluster() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameMatchSignOut::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameMatchSignOut::clear_cluster() {
  cluster_ = 0u;
  clear_has_cluster();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::cluster() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.cluster)
  return cluster_;
}
inline void CMsgGameMatchSignOut::set_cluster(::google::protobuf::uint32 value) {
  set_has_cluster();
  cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.cluster)
}

// optional string server_addr = 11;
inline bool CMsgGameMatchSignOut::has_server_addr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_server_addr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGameMatchSignOut::clear_has_server_addr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGameMatchSignOut::clear_server_addr() {
  server_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_addr();
}
inline const ::std::string& CMsgGameMatchSignOut::server_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.server_addr)
  return server_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOut::set_server_addr(const ::std::string& value) {
  set_has_server_addr();
  server_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.server_addr)
}
inline void CMsgGameMatchSignOut::set_server_addr(const char* value) {
  set_has_server_addr();
  server_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameMatchSignOut.server_addr)
}
inline void CMsgGameMatchSignOut::set_server_addr(const char* value, size_t size) {
  set_has_server_addr();
  server_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameMatchSignOut.server_addr)
}
inline ::std::string* CMsgGameMatchSignOut::mutable_server_addr() {
  set_has_server_addr();
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.server_addr)
  return server_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOut::release_server_addr() {
  clear_has_server_addr();
  return server_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOut::set_allocated_server_addr(::std::string* server_addr) {
  if (server_addr != NULL) {
    set_has_server_addr();
  } else {
    clear_has_server_addr();
  }
  server_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_addr);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameMatchSignOut.server_addr)
}

// optional uint32 first_blood_time = 12;
inline bool CMsgGameMatchSignOut::has_first_blood_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_first_blood_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGameMatchSignOut::clear_has_first_blood_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGameMatchSignOut::clear_first_blood_time() {
  first_blood_time_ = 0u;
  clear_has_first_blood_time();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::first_blood_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.first_blood_time)
  return first_blood_time_;
}
inline void CMsgGameMatchSignOut::set_first_blood_time(::google::protobuf::uint32 value) {
  set_has_first_blood_time();
  first_blood_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.first_blood_time)
}

// optional float game_balance = 13;
inline bool CMsgGameMatchSignOut::has_game_balance() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_game_balance() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGameMatchSignOut::clear_has_game_balance() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGameMatchSignOut::clear_game_balance() {
  game_balance_ = 0;
  clear_has_game_balance();
}
inline float CMsgGameMatchSignOut::game_balance() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.game_balance)
  return game_balance_;
}
inline void CMsgGameMatchSignOut::set_game_balance(float value) {
  set_has_game_balance();
  game_balance_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.game_balance)
}

// optional uint32 event_score = 14;
inline bool CMsgGameMatchSignOut::has_event_score() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_event_score() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGameMatchSignOut::clear_has_event_score() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGameMatchSignOut::clear_event_score() {
  event_score_ = 0u;
  clear_has_event_score();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::event_score() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.event_score)
  return event_score_;
}
inline void CMsgGameMatchSignOut::set_event_score(::google::protobuf::uint32 value) {
  set_has_event_score();
  event_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.event_score)
}

// repeated .CMatchHeroSelectEvent picks_bans = 15;
inline int CMsgGameMatchSignOut::picks_bans_size() const {
  return picks_bans_.size();
}
inline void CMsgGameMatchSignOut::clear_picks_bans() {
  picks_bans_.Clear();
}
inline const ::CMatchHeroSelectEvent& CMsgGameMatchSignOut::picks_bans(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.picks_bans)
  return picks_bans_.Get(index);
}
inline ::CMatchHeroSelectEvent* CMsgGameMatchSignOut::mutable_picks_bans(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.picks_bans)
  return picks_bans_.Mutable(index);
}
inline ::CMatchHeroSelectEvent* CMsgGameMatchSignOut::add_picks_bans() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.picks_bans)
  return picks_bans_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >*
CMsgGameMatchSignOut::mutable_picks_bans() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.picks_bans)
  return &picks_bans_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >&
CMsgGameMatchSignOut::picks_bans() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.picks_bans)
  return picks_bans_;
}

// repeated .CMsgDOTAFantasyPlayerStats fantasy_stats = 16;
inline int CMsgGameMatchSignOut::fantasy_stats_size() const {
  return fantasy_stats_.size();
}
inline void CMsgGameMatchSignOut::clear_fantasy_stats() {
  fantasy_stats_.Clear();
}
inline const ::CMsgDOTAFantasyPlayerStats& CMsgGameMatchSignOut::fantasy_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_.Get(index);
}
inline ::CMsgDOTAFantasyPlayerStats* CMsgGameMatchSignOut::mutable_fantasy_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_.Mutable(index);
}
inline ::CMsgDOTAFantasyPlayerStats* CMsgGameMatchSignOut::add_fantasy_stats() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFantasyPlayerStats >*
CMsgGameMatchSignOut::mutable_fantasy_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.fantasy_stats)
  return &fantasy_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFantasyPlayerStats >&
CMsgGameMatchSignOut::fantasy_stats() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_;
}

// repeated .CMsgEconPlayerStrangeCountAdjustment player_strange_count_adjustments = 17;
inline int CMsgGameMatchSignOut::player_strange_count_adjustments_size() const {
  return player_strange_count_adjustments_.size();
}
inline void CMsgGameMatchSignOut::clear_player_strange_count_adjustments() {
  player_strange_count_adjustments_.Clear();
}
inline const ::CMsgEconPlayerStrangeCountAdjustment& CMsgGameMatchSignOut::player_strange_count_adjustments(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_.Get(index);
}
inline ::CMsgEconPlayerStrangeCountAdjustment* CMsgGameMatchSignOut::mutable_player_strange_count_adjustments(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_.Mutable(index);
}
inline ::CMsgEconPlayerStrangeCountAdjustment* CMsgGameMatchSignOut::add_player_strange_count_adjustments() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment >*
CMsgGameMatchSignOut::mutable_player_strange_count_adjustments() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.player_strange_count_adjustments)
  return &player_strange_count_adjustments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment >&
CMsgGameMatchSignOut::player_strange_count_adjustments() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_;
}

// optional bool automatic_surrender = 18;
inline bool CMsgGameMatchSignOut::has_automatic_surrender() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_automatic_surrender() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGameMatchSignOut::clear_has_automatic_surrender() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGameMatchSignOut::clear_automatic_surrender() {
  automatic_surrender_ = false;
  clear_has_automatic_surrender();
}
inline bool CMsgGameMatchSignOut::automatic_surrender() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.automatic_surrender)
  return automatic_surrender_;
}
inline void CMsgGameMatchSignOut::set_automatic_surrender(bool value) {
  set_has_automatic_surrender();
  automatic_surrender_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.automatic_surrender)
}

// optional uint32 server_version = 19;
inline bool CMsgGameMatchSignOut::has_server_version() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_server_version() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGameMatchSignOut::clear_has_server_version() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGameMatchSignOut::clear_server_version() {
  server_version_ = 0u;
  clear_has_server_version();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::server_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.server_version)
  return server_version_;
}
inline void CMsgGameMatchSignOut::set_server_version(::google::protobuf::uint32 value) {
  set_has_server_version();
  server_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.server_version)
}

// optional bool legacy_mass_disconnect = 21;
inline bool CMsgGameMatchSignOut::has_legacy_mass_disconnect() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_legacy_mass_disconnect() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGameMatchSignOut::clear_has_legacy_mass_disconnect() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGameMatchSignOut::clear_legacy_mass_disconnect() {
  legacy_mass_disconnect_ = false;
  clear_has_legacy_mass_disconnect();
}
inline bool CMsgGameMatchSignOut::legacy_mass_disconnect() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.legacy_mass_disconnect)
  return legacy_mass_disconnect_;
}
inline void CMsgGameMatchSignOut::set_legacy_mass_disconnect(bool value) {
  set_has_legacy_mass_disconnect();
  legacy_mass_disconnect_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.legacy_mass_disconnect)
}

// optional .CMsgPoorNetworkConditions poor_network_conditions = 35;
inline bool CMsgGameMatchSignOut::has_poor_network_conditions() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_poor_network_conditions() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGameMatchSignOut::clear_has_poor_network_conditions() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGameMatchSignOut::clear_poor_network_conditions() {
  if (poor_network_conditions_ != NULL) poor_network_conditions_->::CMsgPoorNetworkConditions::Clear();
  clear_has_poor_network_conditions();
}
inline const ::CMsgPoorNetworkConditions& CMsgGameMatchSignOut::poor_network_conditions() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.poor_network_conditions)
  return poor_network_conditions_ != NULL ? *poor_network_conditions_ : *default_instance_->poor_network_conditions_;
}
inline ::CMsgPoorNetworkConditions* CMsgGameMatchSignOut::mutable_poor_network_conditions() {
  set_has_poor_network_conditions();
  if (poor_network_conditions_ == NULL) {
    poor_network_conditions_ = new ::CMsgPoorNetworkConditions;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.poor_network_conditions)
  return poor_network_conditions_;
}
inline ::CMsgPoorNetworkConditions* CMsgGameMatchSignOut::release_poor_network_conditions() {
  clear_has_poor_network_conditions();
  ::CMsgPoorNetworkConditions* temp = poor_network_conditions_;
  poor_network_conditions_ = NULL;
  return temp;
}
inline void CMsgGameMatchSignOut::set_allocated_poor_network_conditions(::CMsgPoorNetworkConditions* poor_network_conditions) {
  delete poor_network_conditions_;
  poor_network_conditions_ = poor_network_conditions;
  if (poor_network_conditions) {
    set_has_poor_network_conditions();
  } else {
    clear_has_poor_network_conditions();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameMatchSignOut.poor_network_conditions)
}

// repeated .CMsgGameMatchSignOut.CAdditionalSignoutMsg additional_msgs = 20;
inline int CMsgGameMatchSignOut::additional_msgs_size() const {
  return additional_msgs_.size();
}
inline void CMsgGameMatchSignOut::clear_additional_msgs() {
  additional_msgs_.Clear();
}
inline const ::CMsgGameMatchSignOut_CAdditionalSignoutMsg& CMsgGameMatchSignOut::additional_msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_.Get(index);
}
inline ::CMsgGameMatchSignOut_CAdditionalSignoutMsg* CMsgGameMatchSignOut::mutable_additional_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_.Mutable(index);
}
inline ::CMsgGameMatchSignOut_CAdditionalSignoutMsg* CMsgGameMatchSignOut::add_additional_msgs() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CAdditionalSignoutMsg >*
CMsgGameMatchSignOut::mutable_additional_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.additional_msgs)
  return &additional_msgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CAdditionalSignoutMsg >&
CMsgGameMatchSignOut::additional_msgs() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_;
}

// repeated .CMsgGameMatchSignOut.CSocialFeedMatchEvent social_feed_events = 36;
inline int CMsgGameMatchSignOut::social_feed_events_size() const {
  return social_feed_events_.size();
}
inline void CMsgGameMatchSignOut::clear_social_feed_events() {
  social_feed_events_.Clear();
}
inline const ::CMsgGameMatchSignOut_CSocialFeedMatchEvent& CMsgGameMatchSignOut::social_feed_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_.Get(index);
}
inline ::CMsgGameMatchSignOut_CSocialFeedMatchEvent* CMsgGameMatchSignOut::mutable_social_feed_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_.Mutable(index);
}
inline ::CMsgGameMatchSignOut_CSocialFeedMatchEvent* CMsgGameMatchSignOut::add_social_feed_events() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CSocialFeedMatchEvent >*
CMsgGameMatchSignOut::mutable_social_feed_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignOut.social_feed_events)
  return &social_feed_events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignOut_CSocialFeedMatchEvent >&
CMsgGameMatchSignOut::social_feed_events() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_;
}

// optional sint32 average_networth_delta = 22;
inline bool CMsgGameMatchSignOut::has_average_networth_delta() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_average_networth_delta() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgGameMatchSignOut::clear_has_average_networth_delta() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgGameMatchSignOut::clear_average_networth_delta() {
  average_networth_delta_ = 0;
  clear_has_average_networth_delta();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::average_networth_delta() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.average_networth_delta)
  return average_networth_delta_;
}
inline void CMsgGameMatchSignOut::set_average_networth_delta(::google::protobuf::int32 value) {
  set_has_average_networth_delta();
  average_networth_delta_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.average_networth_delta)
}

// optional sint32 networth_delta_min10 = 23;
inline bool CMsgGameMatchSignOut::has_networth_delta_min10() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_networth_delta_min10() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgGameMatchSignOut::clear_has_networth_delta_min10() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgGameMatchSignOut::clear_networth_delta_min10() {
  networth_delta_min10_ = 0;
  clear_has_networth_delta_min10();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::networth_delta_min10() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.networth_delta_min10)
  return networth_delta_min10_;
}
inline void CMsgGameMatchSignOut::set_networth_delta_min10(::google::protobuf::int32 value) {
  set_has_networth_delta_min10();
  networth_delta_min10_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.networth_delta_min10)
}

// optional sint32 networth_delta_min20 = 24;
inline bool CMsgGameMatchSignOut::has_networth_delta_min20() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_networth_delta_min20() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgGameMatchSignOut::clear_has_networth_delta_min20() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgGameMatchSignOut::clear_networth_delta_min20() {
  networth_delta_min20_ = 0;
  clear_has_networth_delta_min20();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::networth_delta_min20() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.networth_delta_min20)
  return networth_delta_min20_;
}
inline void CMsgGameMatchSignOut::set_networth_delta_min20(::google::protobuf::int32 value) {
  set_has_networth_delta_min20();
  networth_delta_min20_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.networth_delta_min20)
}

// optional sint32 maximum_losing_networth_lead = 25;
inline bool CMsgGameMatchSignOut::has_maximum_losing_networth_lead() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_maximum_losing_networth_lead() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgGameMatchSignOut::clear_has_maximum_losing_networth_lead() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgGameMatchSignOut::clear_maximum_losing_networth_lead() {
  maximum_losing_networth_lead_ = 0;
  clear_has_maximum_losing_networth_lead();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::maximum_losing_networth_lead() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.maximum_losing_networth_lead)
  return maximum_losing_networth_lead_;
}
inline void CMsgGameMatchSignOut::set_maximum_losing_networth_lead(::google::protobuf::int32 value) {
  set_has_maximum_losing_networth_lead();
  maximum_losing_networth_lead_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.maximum_losing_networth_lead)
}

// optional sint32 average_experience_delta = 26;
inline bool CMsgGameMatchSignOut::has_average_experience_delta() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_average_experience_delta() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgGameMatchSignOut::clear_has_average_experience_delta() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgGameMatchSignOut::clear_average_experience_delta() {
  average_experience_delta_ = 0;
  clear_has_average_experience_delta();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::average_experience_delta() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.average_experience_delta)
  return average_experience_delta_;
}
inline void CMsgGameMatchSignOut::set_average_experience_delta(::google::protobuf::int32 value) {
  set_has_average_experience_delta();
  average_experience_delta_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.average_experience_delta)
}

// optional sint32 experience_delta_min10 = 27;
inline bool CMsgGameMatchSignOut::has_experience_delta_min10() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_experience_delta_min10() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgGameMatchSignOut::clear_has_experience_delta_min10() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgGameMatchSignOut::clear_experience_delta_min10() {
  experience_delta_min10_ = 0;
  clear_has_experience_delta_min10();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::experience_delta_min10() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.experience_delta_min10)
  return experience_delta_min10_;
}
inline void CMsgGameMatchSignOut::set_experience_delta_min10(::google::protobuf::int32 value) {
  set_has_experience_delta_min10();
  experience_delta_min10_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.experience_delta_min10)
}

// optional sint32 experience_delta_min20 = 28;
inline bool CMsgGameMatchSignOut::has_experience_delta_min20() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_experience_delta_min20() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgGameMatchSignOut::clear_has_experience_delta_min20() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgGameMatchSignOut::clear_experience_delta_min20() {
  experience_delta_min20_ = 0;
  clear_has_experience_delta_min20();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::experience_delta_min20() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.experience_delta_min20)
  return experience_delta_min20_;
}
inline void CMsgGameMatchSignOut::set_experience_delta_min20(::google::protobuf::int32 value) {
  set_has_experience_delta_min20();
  experience_delta_min20_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.experience_delta_min20)
}

// optional sint32 bonus_gold_winner_min10 = 29;
inline bool CMsgGameMatchSignOut::has_bonus_gold_winner_min10() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_bonus_gold_winner_min10() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgGameMatchSignOut::clear_has_bonus_gold_winner_min10() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_winner_min10() {
  bonus_gold_winner_min10_ = 0;
  clear_has_bonus_gold_winner_min10();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_winner_min10() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.bonus_gold_winner_min10)
  return bonus_gold_winner_min10_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_winner_min10(::google::protobuf::int32 value) {
  set_has_bonus_gold_winner_min10();
  bonus_gold_winner_min10_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.bonus_gold_winner_min10)
}

// optional sint32 bonus_gold_winner_min20 = 30;
inline bool CMsgGameMatchSignOut::has_bonus_gold_winner_min20() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_bonus_gold_winner_min20() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CMsgGameMatchSignOut::clear_has_bonus_gold_winner_min20() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_winner_min20() {
  bonus_gold_winner_min20_ = 0;
  clear_has_bonus_gold_winner_min20();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_winner_min20() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.bonus_gold_winner_min20)
  return bonus_gold_winner_min20_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_winner_min20(::google::protobuf::int32 value) {
  set_has_bonus_gold_winner_min20();
  bonus_gold_winner_min20_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.bonus_gold_winner_min20)
}

// optional uint32 bonus_gold_winner_total = 31;
inline bool CMsgGameMatchSignOut::has_bonus_gold_winner_total() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_bonus_gold_winner_total() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CMsgGameMatchSignOut::clear_has_bonus_gold_winner_total() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_winner_total() {
  bonus_gold_winner_total_ = 0u;
  clear_has_bonus_gold_winner_total();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::bonus_gold_winner_total() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.bonus_gold_winner_total)
  return bonus_gold_winner_total_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_winner_total(::google::protobuf::uint32 value) {
  set_has_bonus_gold_winner_total();
  bonus_gold_winner_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.bonus_gold_winner_total)
}

// optional sint32 bonus_gold_loser_min10 = 32;
inline bool CMsgGameMatchSignOut::has_bonus_gold_loser_min10() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_bonus_gold_loser_min10() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CMsgGameMatchSignOut::clear_has_bonus_gold_loser_min10() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_loser_min10() {
  bonus_gold_loser_min10_ = 0;
  clear_has_bonus_gold_loser_min10();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_loser_min10() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.bonus_gold_loser_min10)
  return bonus_gold_loser_min10_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_loser_min10(::google::protobuf::int32 value) {
  set_has_bonus_gold_loser_min10();
  bonus_gold_loser_min10_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.bonus_gold_loser_min10)
}

// optional sint32 bonus_gold_loser_min20 = 33;
inline bool CMsgGameMatchSignOut::has_bonus_gold_loser_min20() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_bonus_gold_loser_min20() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CMsgGameMatchSignOut::clear_has_bonus_gold_loser_min20() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_loser_min20() {
  bonus_gold_loser_min20_ = 0;
  clear_has_bonus_gold_loser_min20();
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_loser_min20() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.bonus_gold_loser_min20)
  return bonus_gold_loser_min20_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_loser_min20(::google::protobuf::int32 value) {
  set_has_bonus_gold_loser_min20();
  bonus_gold_loser_min20_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.bonus_gold_loser_min20)
}

// optional uint32 bonus_gold_loser_total = 34;
inline bool CMsgGameMatchSignOut::has_bonus_gold_loser_total() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_bonus_gold_loser_total() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CMsgGameMatchSignOut::clear_has_bonus_gold_loser_total() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_loser_total() {
  bonus_gold_loser_total_ = 0u;
  clear_has_bonus_gold_loser_total();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::bonus_gold_loser_total() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.bonus_gold_loser_total)
  return bonus_gold_loser_total_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_loser_total(::google::protobuf::uint32 value) {
  set_has_bonus_gold_loser_total();
  bonus_gold_loser_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOut.bonus_gold_loser_total)
}

// optional .CMsgGameMatchSignOut.CCustomGameData custom_game_data = 37;
inline bool CMsgGameMatchSignOut::has_custom_game_data() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut::set_has_custom_game_data() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CMsgGameMatchSignOut::clear_has_custom_game_data() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CMsgGameMatchSignOut::clear_custom_game_data() {
  if (custom_game_data_ != NULL) custom_game_data_->::CMsgGameMatchSignOut_CCustomGameData::Clear();
  clear_has_custom_game_data();
}
inline const ::CMsgGameMatchSignOut_CCustomGameData& CMsgGameMatchSignOut::custom_game_data() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOut.custom_game_data)
  return custom_game_data_ != NULL ? *custom_game_data_ : *default_instance_->custom_game_data_;
}
inline ::CMsgGameMatchSignOut_CCustomGameData* CMsgGameMatchSignOut::mutable_custom_game_data() {
  set_has_custom_game_data();
  if (custom_game_data_ == NULL) {
    custom_game_data_ = new ::CMsgGameMatchSignOut_CCustomGameData;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignOut.custom_game_data)
  return custom_game_data_;
}
inline ::CMsgGameMatchSignOut_CCustomGameData* CMsgGameMatchSignOut::release_custom_game_data() {
  clear_has_custom_game_data();
  ::CMsgGameMatchSignOut_CCustomGameData* temp = custom_game_data_;
  custom_game_data_ = NULL;
  return temp;
}
inline void CMsgGameMatchSignOut::set_allocated_custom_game_data(::CMsgGameMatchSignOut_CCustomGameData* custom_game_data) {
  delete custom_game_data_;
  custom_game_data_ = custom_game_data;
  if (custom_game_data) {
    set_has_custom_game_data();
  } else {
    clear_has_custom_game_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameMatchSignOut.custom_game_data)
}

// -------------------------------------------------------------------

// CMsgSignOutDraftInfo

// optional uint32 radiant_captain_account_id = 1;
inline bool CMsgSignOutDraftInfo::has_radiant_captain_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutDraftInfo::set_has_radiant_captain_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutDraftInfo::clear_has_radiant_captain_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutDraftInfo::clear_radiant_captain_account_id() {
  radiant_captain_account_id_ = 0u;
  clear_has_radiant_captain_account_id();
}
inline ::google::protobuf::uint32 CMsgSignOutDraftInfo::radiant_captain_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutDraftInfo.radiant_captain_account_id)
  return radiant_captain_account_id_;
}
inline void CMsgSignOutDraftInfo::set_radiant_captain_account_id(::google::protobuf::uint32 value) {
  set_has_radiant_captain_account_id();
  radiant_captain_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutDraftInfo.radiant_captain_account_id)
}

// optional uint32 dire_captain_account_id = 2;
inline bool CMsgSignOutDraftInfo::has_dire_captain_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutDraftInfo::set_has_dire_captain_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutDraftInfo::clear_has_dire_captain_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutDraftInfo::clear_dire_captain_account_id() {
  dire_captain_account_id_ = 0u;
  clear_has_dire_captain_account_id();
}
inline ::google::protobuf::uint32 CMsgSignOutDraftInfo::dire_captain_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutDraftInfo.dire_captain_account_id)
  return dire_captain_account_id_;
}
inline void CMsgSignOutDraftInfo::set_dire_captain_account_id(::google::protobuf::uint32 value) {
  set_has_dire_captain_account_id();
  dire_captain_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutDraftInfo.dire_captain_account_id)
}

// repeated .CMatchHeroSelectEvent picks_bans = 3;
inline int CMsgSignOutDraftInfo::picks_bans_size() const {
  return picks_bans_.size();
}
inline void CMsgSignOutDraftInfo::clear_picks_bans() {
  picks_bans_.Clear();
}
inline const ::CMatchHeroSelectEvent& CMsgSignOutDraftInfo::picks_bans(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_.Get(index);
}
inline ::CMatchHeroSelectEvent* CMsgSignOutDraftInfo::mutable_picks_bans(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_.Mutable(index);
}
inline ::CMatchHeroSelectEvent* CMsgSignOutDraftInfo::add_picks_bans() {
  // @@protoc_insertion_point(field_add:CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >*
CMsgSignOutDraftInfo::mutable_picks_bans() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutDraftInfo.picks_bans)
  return &picks_bans_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMatchHeroSelectEvent >&
CMsgSignOutDraftInfo::picks_bans() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_;
}

// -------------------------------------------------------------------

// CMsgSignOutBotInfo_CMsgBotSlotDifficulty

// optional uint32 slot = 1;
inline bool CMsgSignOutBotInfo_CMsgBotSlotDifficulty::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 CMsgSignOutBotInfo_CMsgBotSlotDifficulty::slot() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutBotInfo.CMsgBotSlotDifficulty.slot)
  return slot_;
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutBotInfo.CMsgBotSlotDifficulty.slot)
}

// optional .DOTABotDifficulty bot_difficulty = 2 [default = BOT_DIFFICULTY_PASSIVE];
inline bool CMsgSignOutBotInfo_CMsgBotSlotDifficulty::has_bot_difficulty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::set_has_bot_difficulty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::clear_has_bot_difficulty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::clear_bot_difficulty() {
  bot_difficulty_ = 0;
  clear_has_bot_difficulty();
}
inline ::DOTABotDifficulty CMsgSignOutBotInfo_CMsgBotSlotDifficulty::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutBotInfo.CMsgBotSlotDifficulty.bot_difficulty)
  return static_cast< ::DOTABotDifficulty >(bot_difficulty_);
}
inline void CMsgSignOutBotInfo_CMsgBotSlotDifficulty::set_bot_difficulty(::DOTABotDifficulty value) {
  assert(::DOTABotDifficulty_IsValid(value));
  set_has_bot_difficulty();
  bot_difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutBotInfo.CMsgBotSlotDifficulty.bot_difficulty)
}

// -------------------------------------------------------------------

// CMsgSignOutBotInfo

// optional bool allow_cheats = 1;
inline bool CMsgSignOutBotInfo::has_allow_cheats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutBotInfo::set_has_allow_cheats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutBotInfo::clear_has_allow_cheats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutBotInfo::clear_allow_cheats() {
  allow_cheats_ = false;
  clear_has_allow_cheats();
}
inline bool CMsgSignOutBotInfo::allow_cheats() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutBotInfo.allow_cheats)
  return allow_cheats_;
}
inline void CMsgSignOutBotInfo::set_allow_cheats(bool value) {
  set_has_allow_cheats();
  allow_cheats_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutBotInfo.allow_cheats)
}

// optional .DOTABotDifficulty bot_difficulty = 2 [default = BOT_DIFFICULTY_PASSIVE];
inline bool CMsgSignOutBotInfo::has_bot_difficulty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutBotInfo::set_has_bot_difficulty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutBotInfo::clear_has_bot_difficulty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutBotInfo::clear_bot_difficulty() {
  bot_difficulty_ = 0;
  clear_has_bot_difficulty();
}
inline ::DOTABotDifficulty CMsgSignOutBotInfo::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutBotInfo.bot_difficulty)
  return static_cast< ::DOTABotDifficulty >(bot_difficulty_);
}
inline void CMsgSignOutBotInfo::set_bot_difficulty(::DOTABotDifficulty value) {
  assert(::DOTABotDifficulty_IsValid(value));
  set_has_bot_difficulty();
  bot_difficulty_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutBotInfo.bot_difficulty)
}

// optional bool created_lobby = 3;
inline bool CMsgSignOutBotInfo::has_created_lobby() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutBotInfo::set_has_created_lobby() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSignOutBotInfo::clear_has_created_lobby() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSignOutBotInfo::clear_created_lobby() {
  created_lobby_ = false;
  clear_has_created_lobby();
}
inline bool CMsgSignOutBotInfo::created_lobby() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutBotInfo.created_lobby)
  return created_lobby_;
}
inline void CMsgSignOutBotInfo::set_created_lobby(bool value) {
  set_has_created_lobby();
  created_lobby_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutBotInfo.created_lobby)
}

// repeated .CMsgSignOutBotInfo.CMsgBotSlotDifficulty bot_slot_difficulties = 4;
inline int CMsgSignOutBotInfo::bot_slot_difficulties_size() const {
  return bot_slot_difficulties_.size();
}
inline void CMsgSignOutBotInfo::clear_bot_slot_difficulties() {
  bot_slot_difficulties_.Clear();
}
inline const ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty& CMsgSignOutBotInfo::bot_slot_difficulties(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutBotInfo.bot_slot_difficulties)
  return bot_slot_difficulties_.Get(index);
}
inline ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty* CMsgSignOutBotInfo::mutable_bot_slot_difficulties(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSignOutBotInfo.bot_slot_difficulties)
  return bot_slot_difficulties_.Mutable(index);
}
inline ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty* CMsgSignOutBotInfo::add_bot_slot_difficulties() {
  // @@protoc_insertion_point(field_add:CMsgSignOutBotInfo.bot_slot_difficulties)
  return bot_slot_difficulties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty >*
CMsgSignOutBotInfo::mutable_bot_slot_difficulties() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutBotInfo.bot_slot_difficulties)
  return &bot_slot_difficulties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutBotInfo_CMsgBotSlotDifficulty >&
CMsgSignOutBotInfo::bot_slot_difficulties() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutBotInfo.bot_slot_difficulties)
  return bot_slot_difficulties_;
}

// -------------------------------------------------------------------

// CMsgSignOutPlayerStats

// optional int32 account_id = 1;
inline bool CMsgSignOutPlayerStats::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutPlayerStats::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutPlayerStats::clear_account_id() {
  account_id_ = 0;
  clear_has_account_id();
}
inline ::google::protobuf::int32 CMsgSignOutPlayerStats::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.account_id)
  return account_id_;
}
inline void CMsgSignOutPlayerStats::set_account_id(::google::protobuf::int32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgSignOutPlayerStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutPlayerStats::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutPlayerStats::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgSignOutPlayerStats::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.match_id)
  return match_id_;
}
inline void CMsgSignOutPlayerStats::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.match_id)
}

// optional uint32 rank = 3;
inline bool CMsgSignOutPlayerStats::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSignOutPlayerStats::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSignOutPlayerStats::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::rank() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.rank)
  return rank_;
}
inline void CMsgSignOutPlayerStats::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.rank)
}

// optional uint32 hero_id = 4;
inline bool CMsgSignOutPlayerStats::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSignOutPlayerStats::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSignOutPlayerStats::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.hero_id)
  return hero_id_;
}
inline void CMsgSignOutPlayerStats::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.hero_id)
}

// optional uint32 rampages = 5;
inline bool CMsgSignOutPlayerStats::has_rampages() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_rampages() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSignOutPlayerStats::clear_has_rampages() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSignOutPlayerStats::clear_rampages() {
  rampages_ = 0u;
  clear_has_rampages();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::rampages() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.rampages)
  return rampages_;
}
inline void CMsgSignOutPlayerStats::set_rampages(::google::protobuf::uint32 value) {
  set_has_rampages();
  rampages_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.rampages)
}

// optional uint32 triple_kills = 6;
inline bool CMsgSignOutPlayerStats::has_triple_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_triple_kills() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSignOutPlayerStats::clear_has_triple_kills() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSignOutPlayerStats::clear_triple_kills() {
  triple_kills_ = 0u;
  clear_has_triple_kills();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::triple_kills() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.triple_kills)
  return triple_kills_;
}
inline void CMsgSignOutPlayerStats::set_triple_kills(::google::protobuf::uint32 value) {
  set_has_triple_kills();
  triple_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.triple_kills)
}

// optional uint32 first_blood_claimed = 7;
inline bool CMsgSignOutPlayerStats::has_first_blood_claimed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_first_blood_claimed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSignOutPlayerStats::clear_has_first_blood_claimed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSignOutPlayerStats::clear_first_blood_claimed() {
  first_blood_claimed_ = 0u;
  clear_has_first_blood_claimed();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::first_blood_claimed() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.first_blood_claimed)
  return first_blood_claimed_;
}
inline void CMsgSignOutPlayerStats::set_first_blood_claimed(::google::protobuf::uint32 value) {
  set_has_first_blood_claimed();
  first_blood_claimed_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.first_blood_claimed)
}

// optional uint32 first_blood_given = 8;
inline bool CMsgSignOutPlayerStats::has_first_blood_given() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_first_blood_given() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSignOutPlayerStats::clear_has_first_blood_given() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSignOutPlayerStats::clear_first_blood_given() {
  first_blood_given_ = 0u;
  clear_has_first_blood_given();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::first_blood_given() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.first_blood_given)
  return first_blood_given_;
}
inline void CMsgSignOutPlayerStats::set_first_blood_given(::google::protobuf::uint32 value) {
  set_has_first_blood_given();
  first_blood_given_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.first_blood_given)
}

// optional uint32 couriers_killed = 9;
inline bool CMsgSignOutPlayerStats::has_couriers_killed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_couriers_killed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSignOutPlayerStats::clear_has_couriers_killed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSignOutPlayerStats::clear_couriers_killed() {
  couriers_killed_ = 0u;
  clear_has_couriers_killed();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::couriers_killed() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.couriers_killed)
  return couriers_killed_;
}
inline void CMsgSignOutPlayerStats::set_couriers_killed(::google::protobuf::uint32 value) {
  set_has_couriers_killed();
  couriers_killed_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.couriers_killed)
}

// optional uint32 aegises_snatched = 10;
inline bool CMsgSignOutPlayerStats::has_aegises_snatched() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_aegises_snatched() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgSignOutPlayerStats::clear_has_aegises_snatched() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgSignOutPlayerStats::clear_aegises_snatched() {
  aegises_snatched_ = 0u;
  clear_has_aegises_snatched();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::aegises_snatched() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.aegises_snatched)
  return aegises_snatched_;
}
inline void CMsgSignOutPlayerStats::set_aegises_snatched(::google::protobuf::uint32 value) {
  set_has_aegises_snatched();
  aegises_snatched_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.aegises_snatched)
}

// optional uint32 cheeses_eaten = 11;
inline bool CMsgSignOutPlayerStats::has_cheeses_eaten() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_cheeses_eaten() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgSignOutPlayerStats::clear_has_cheeses_eaten() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgSignOutPlayerStats::clear_cheeses_eaten() {
  cheeses_eaten_ = 0u;
  clear_has_cheeses_eaten();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::cheeses_eaten() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.cheeses_eaten)
  return cheeses_eaten_;
}
inline void CMsgSignOutPlayerStats::set_cheeses_eaten(::google::protobuf::uint32 value) {
  set_has_cheeses_eaten();
  cheeses_eaten_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.cheeses_eaten)
}

// optional uint32 creeps_stacked = 12;
inline bool CMsgSignOutPlayerStats::has_creeps_stacked() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_creeps_stacked() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgSignOutPlayerStats::clear_has_creeps_stacked() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgSignOutPlayerStats::clear_creeps_stacked() {
  creeps_stacked_ = 0u;
  clear_has_creeps_stacked();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::creeps_stacked() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.creeps_stacked)
  return creeps_stacked_;
}
inline void CMsgSignOutPlayerStats::set_creeps_stacked(::google::protobuf::uint32 value) {
  set_has_creeps_stacked();
  creeps_stacked_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.creeps_stacked)
}

// optional float fight_score = 13;
inline bool CMsgSignOutPlayerStats::has_fight_score() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_fight_score() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgSignOutPlayerStats::clear_has_fight_score() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgSignOutPlayerStats::clear_fight_score() {
  fight_score_ = 0;
  clear_has_fight_score();
}
inline float CMsgSignOutPlayerStats::fight_score() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.fight_score)
  return fight_score_;
}
inline void CMsgSignOutPlayerStats::set_fight_score(float value) {
  set_has_fight_score();
  fight_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.fight_score)
}

// optional float farm_score = 14;
inline bool CMsgSignOutPlayerStats::has_farm_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_farm_score() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgSignOutPlayerStats::clear_has_farm_score() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgSignOutPlayerStats::clear_farm_score() {
  farm_score_ = 0;
  clear_has_farm_score();
}
inline float CMsgSignOutPlayerStats::farm_score() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.farm_score)
  return farm_score_;
}
inline void CMsgSignOutPlayerStats::set_farm_score(float value) {
  set_has_farm_score();
  farm_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.farm_score)
}

// optional float support_score = 15;
inline bool CMsgSignOutPlayerStats::has_support_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_support_score() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgSignOutPlayerStats::clear_has_support_score() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgSignOutPlayerStats::clear_support_score() {
  support_score_ = 0;
  clear_has_support_score();
}
inline float CMsgSignOutPlayerStats::support_score() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.support_score)
  return support_score_;
}
inline void CMsgSignOutPlayerStats::set_support_score(float value) {
  set_has_support_score();
  support_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.support_score)
}

// optional float push_score = 16;
inline bool CMsgSignOutPlayerStats::has_push_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_push_score() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgSignOutPlayerStats::clear_has_push_score() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgSignOutPlayerStats::clear_push_score() {
  push_score_ = 0;
  clear_has_push_score();
}
inline float CMsgSignOutPlayerStats::push_score() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.push_score)
  return push_score_;
}
inline void CMsgSignOutPlayerStats::set_push_score(float value) {
  set_has_push_score();
  push_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.push_score)
}

// optional uint32 kills = 17;
inline bool CMsgSignOutPlayerStats::has_kills() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_kills() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgSignOutPlayerStats::clear_has_kills() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgSignOutPlayerStats::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.kills)
  return kills_;
}
inline void CMsgSignOutPlayerStats::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.kills)
}

// optional uint32 deaths = 18;
inline bool CMsgSignOutPlayerStats::has_deaths() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_deaths() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgSignOutPlayerStats::clear_has_deaths() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgSignOutPlayerStats::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.deaths)
  return deaths_;
}
inline void CMsgSignOutPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.deaths)
}

// optional uint32 assists = 19;
inline bool CMsgSignOutPlayerStats::has_assists() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_assists() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgSignOutPlayerStats::clear_has_assists() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgSignOutPlayerStats::clear_assists() {
  assists_ = 0u;
  clear_has_assists();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::assists() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.assists)
  return assists_;
}
inline void CMsgSignOutPlayerStats::set_assists(::google::protobuf::uint32 value) {
  set_has_assists();
  assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.assists)
}

// optional uint32 last_hits = 20;
inline bool CMsgSignOutPlayerStats::has_last_hits() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_last_hits() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgSignOutPlayerStats::clear_has_last_hits() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgSignOutPlayerStats::clear_last_hits() {
  last_hits_ = 0u;
  clear_has_last_hits();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.last_hits)
  return last_hits_;
}
inline void CMsgSignOutPlayerStats::set_last_hits(::google::protobuf::uint32 value) {
  set_has_last_hits();
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.last_hits)
}

// optional uint32 denies = 21;
inline bool CMsgSignOutPlayerStats::has_denies() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_denies() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgSignOutPlayerStats::clear_has_denies() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgSignOutPlayerStats::clear_denies() {
  denies_ = 0u;
  clear_has_denies();
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::denies() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.denies)
  return denies_;
}
inline void CMsgSignOutPlayerStats::set_denies(::google::protobuf::uint32 value) {
  set_has_denies();
  denies_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.denies)
}

// optional float gpm = 22;
inline bool CMsgSignOutPlayerStats::has_gpm() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_gpm() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgSignOutPlayerStats::clear_has_gpm() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgSignOutPlayerStats::clear_gpm() {
  gpm_ = 0;
  clear_has_gpm();
}
inline float CMsgSignOutPlayerStats::gpm() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.gpm)
  return gpm_;
}
inline void CMsgSignOutPlayerStats::set_gpm(float value) {
  set_has_gpm();
  gpm_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.gpm)
}

// optional float xppm = 23;
inline bool CMsgSignOutPlayerStats::has_xppm() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgSignOutPlayerStats::set_has_xppm() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgSignOutPlayerStats::clear_has_xppm() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgSignOutPlayerStats::clear_xppm() {
  xppm_ = 0;
  clear_has_xppm();
}
inline float CMsgSignOutPlayerStats::xppm() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutPlayerStats.xppm)
  return xppm_;
}
inline void CMsgSignOutPlayerStats::set_xppm(float value) {
  set_has_xppm();
  xppm_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutPlayerStats.xppm)
}

// -------------------------------------------------------------------

// CMsgSignOutCommunicationSummary_PlayerCommunication

// optional uint32 account_id = 1;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.account_id)
  return account_id_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.account_id)
}

// optional uint32 pings = 2;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_pings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_pings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_pings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_pings() {
  pings_ = 0u;
  clear_has_pings();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::pings() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.pings)
  return pings_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_pings(::google::protobuf::uint32 value) {
  set_has_pings();
  pings_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.pings)
}

// optional uint32 max_pings_per_interval = 3;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_max_pings_per_interval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_max_pings_per_interval() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_max_pings_per_interval() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_max_pings_per_interval() {
  max_pings_per_interval_ = 0u;
  clear_has_max_pings_per_interval();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::max_pings_per_interval() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.max_pings_per_interval)
  return max_pings_per_interval_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_max_pings_per_interval(::google::protobuf::uint32 value) {
  set_has_max_pings_per_interval();
  max_pings_per_interval_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.max_pings_per_interval)
}

// optional uint32 teammate_pings = 4;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_teammate_pings() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_teammate_pings() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_teammate_pings() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_teammate_pings() {
  teammate_pings_ = 0u;
  clear_has_teammate_pings();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::teammate_pings() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.teammate_pings)
  return teammate_pings_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_teammate_pings(::google::protobuf::uint32 value) {
  set_has_teammate_pings();
  teammate_pings_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.teammate_pings)
}

// optional uint32 max_teammate_pings_per_interval = 5;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_max_teammate_pings_per_interval() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_max_teammate_pings_per_interval() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_max_teammate_pings_per_interval() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_max_teammate_pings_per_interval() {
  max_teammate_pings_per_interval_ = 0u;
  clear_has_max_teammate_pings_per_interval();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::max_teammate_pings_per_interval() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.max_teammate_pings_per_interval)
  return max_teammate_pings_per_interval_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_max_teammate_pings_per_interval(::google::protobuf::uint32 value) {
  set_has_max_teammate_pings_per_interval();
  max_teammate_pings_per_interval_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.max_teammate_pings_per_interval)
}

// optional uint32 team_chat_messages = 6;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_team_chat_messages() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_team_chat_messages() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_team_chat_messages() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_team_chat_messages() {
  team_chat_messages_ = 0u;
  clear_has_team_chat_messages();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::team_chat_messages() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.team_chat_messages)
  return team_chat_messages_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_team_chat_messages(::google::protobuf::uint32 value) {
  set_has_team_chat_messages();
  team_chat_messages_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.team_chat_messages)
}

// optional uint32 all_chat_messages = 7;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_all_chat_messages() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_all_chat_messages() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_all_chat_messages() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_all_chat_messages() {
  all_chat_messages_ = 0u;
  clear_has_all_chat_messages();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::all_chat_messages() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.all_chat_messages)
  return all_chat_messages_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_all_chat_messages(::google::protobuf::uint32 value) {
  set_has_all_chat_messages();
  all_chat_messages_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.all_chat_messages)
}

// optional uint32 chat_wheel_messages = 8;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_chat_wheel_messages() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_chat_wheel_messages() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_chat_wheel_messages() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_chat_wheel_messages() {
  chat_wheel_messages_ = 0u;
  clear_has_chat_wheel_messages();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::chat_wheel_messages() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.chat_wheel_messages)
  return chat_wheel_messages_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_chat_wheel_messages(::google::protobuf::uint32 value) {
  set_has_chat_wheel_messages();
  chat_wheel_messages_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.chat_wheel_messages)
}

// optional uint32 pauses = 9;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_pauses() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_pauses() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_pauses() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_pauses() {
  pauses_ = 0u;
  clear_has_pauses();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::pauses() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.pauses)
  return pauses_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_pauses(::google::protobuf::uint32 value) {
  set_has_pauses();
  pauses_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.pauses)
}

// optional uint32 unpauses = 10;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_unpauses() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_unpauses() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_unpauses() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_unpauses() {
  unpauses_ = 0u;
  clear_has_unpauses();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::unpauses() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.unpauses)
  return unpauses_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_unpauses(::google::protobuf::uint32 value) {
  set_has_unpauses();
  unpauses_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.unpauses)
}

// optional uint32 lines_drawn = 11;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_lines_drawn() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_lines_drawn() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_lines_drawn() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_lines_drawn() {
  lines_drawn_ = 0u;
  clear_has_lines_drawn();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::lines_drawn() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.lines_drawn)
  return lines_drawn_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_lines_drawn(::google::protobuf::uint32 value) {
  set_has_lines_drawn();
  lines_drawn_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.lines_drawn)
}

// optional uint32 voice_chat_seconds = 12;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_voice_chat_seconds() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_voice_chat_seconds() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_voice_chat_seconds() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_voice_chat_seconds() {
  voice_chat_seconds_ = 0u;
  clear_has_voice_chat_seconds();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::voice_chat_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.voice_chat_seconds)
  return voice_chat_seconds_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_voice_chat_seconds(::google::protobuf::uint32 value) {
  set_has_voice_chat_seconds();
  voice_chat_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.voice_chat_seconds)
}

// optional uint32 chat_mutes = 13;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_chat_mutes() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_chat_mutes() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_chat_mutes() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_chat_mutes() {
  chat_mutes_ = 0u;
  clear_has_chat_mutes();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::chat_mutes() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.chat_mutes)
  return chat_mutes_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_chat_mutes(::google::protobuf::uint32 value) {
  set_has_chat_mutes();
  chat_mutes_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.chat_mutes)
}

// optional uint32 voice_mutes = 14;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_voice_mutes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_has_voice_mutes() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_has_voice_mutes() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_voice_mutes() {
  voice_mutes_ = 0u;
  clear_has_voice_mutes();
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::voice_mutes() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.PlayerCommunication.voice_mutes)
  return voice_mutes_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_voice_mutes(::google::protobuf::uint32 value) {
  set_has_voice_mutes();
  voice_mutes_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutCommunicationSummary.PlayerCommunication.voice_mutes)
}

// -------------------------------------------------------------------

// CMsgSignOutCommunicationSummary

// repeated .CMsgSignOutCommunicationSummary.PlayerCommunication players = 1;
inline int CMsgSignOutCommunicationSummary::players_size() const {
  return players_.size();
}
inline void CMsgSignOutCommunicationSummary::clear_players() {
  players_.Clear();
}
inline const ::CMsgSignOutCommunicationSummary_PlayerCommunication& CMsgSignOutCommunicationSummary::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutCommunicationSummary.players)
  return players_.Get(index);
}
inline ::CMsgSignOutCommunicationSummary_PlayerCommunication* CMsgSignOutCommunicationSummary::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSignOutCommunicationSummary.players)
  return players_.Mutable(index);
}
inline ::CMsgSignOutCommunicationSummary_PlayerCommunication* CMsgSignOutCommunicationSummary::add_players() {
  // @@protoc_insertion_point(field_add:CMsgSignOutCommunicationSummary.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSignOutCommunicationSummary_PlayerCommunication >*
CMsgSignOutCommunicationSummary::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutCommunicationSummary.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutCommunicationSummary_PlayerCommunication >&
CMsgSignOutCommunicationSummary::players() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutCommunicationSummary.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg

// optional uint32 id = 1;
inline bool CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.id)
  return id_;
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.id)
}

// optional bytes contents = 2;
inline bool CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::has_contents() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::set_has_contents() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::clear_has_contents() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_contents();
}
inline const ::std::string& CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::contents() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.contents)
  return contents_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::set_contents(const ::std::string& value) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.contents)
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::set_contents(const char* value) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.contents)
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::set_contents(const void* value, size_t size) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.contents)
}
inline ::std::string* CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::mutable_contents() {
  set_has_contents();
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::release_contents() {
  clear_has_contents();
  return contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg::set_allocated_contents(::std::string* contents) {
  if (contents != NULL) {
    set_has_contents();
  } else {
    clear_has_contents();
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg.contents)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignoutResponse

// optional uint64 match_id = 1;
inline bool CMsgGameMatchSignoutResponse::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignoutResponse::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignoutResponse::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignoutResponse::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGameMatchSignoutResponse::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.match_id)
  return match_id_;
}
inline void CMsgGameMatchSignoutResponse::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignoutResponse.match_id)
}

// optional fixed32 replay_salt = 2;
inline bool CMsgGameMatchSignoutResponse::has_replay_salt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignoutResponse::set_has_replay_salt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignoutResponse::clear_has_replay_salt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignoutResponse::clear_replay_salt() {
  replay_salt_ = 0u;
  clear_has_replay_salt();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse::replay_salt() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.replay_salt)
  return replay_salt_;
}
inline void CMsgGameMatchSignoutResponse::set_replay_salt(::google::protobuf::uint32 value) {
  set_has_replay_salt();
  replay_salt_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignoutResponse.replay_salt)
}

// repeated .CLobbyTimedRewardDetails timed_reward_details = 3;
inline int CMsgGameMatchSignoutResponse::timed_reward_details_size() const {
  return timed_reward_details_.size();
}
inline void CMsgGameMatchSignoutResponse::clear_timed_reward_details() {
  timed_reward_details_.Clear();
}
inline const ::CLobbyTimedRewardDetails& CMsgGameMatchSignoutResponse::timed_reward_details(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_.Get(index);
}
inline ::CLobbyTimedRewardDetails* CMsgGameMatchSignoutResponse::mutable_timed_reward_details(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_.Mutable(index);
}
inline ::CLobbyTimedRewardDetails* CMsgGameMatchSignoutResponse::add_timed_reward_details() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CLobbyTimedRewardDetails >*
CMsgGameMatchSignoutResponse::mutable_timed_reward_details() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignoutResponse.timed_reward_details)
  return &timed_reward_details_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CLobbyTimedRewardDetails >&
CMsgGameMatchSignoutResponse::timed_reward_details() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_;
}

// repeated .CDOTALobbyMember xp_reward_details = 4;
inline int CMsgGameMatchSignoutResponse::xp_reward_details_size() const {
  return xp_reward_details_.size();
}
inline void CMsgGameMatchSignoutResponse::clear_xp_reward_details() {
  xp_reward_details_.Clear();
}
inline const ::CDOTALobbyMember& CMsgGameMatchSignoutResponse::xp_reward_details(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_.Get(index);
}
inline ::CDOTALobbyMember* CMsgGameMatchSignoutResponse::mutable_xp_reward_details(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_.Mutable(index);
}
inline ::CDOTALobbyMember* CMsgGameMatchSignoutResponse::add_xp_reward_details() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CDOTALobbyMember >*
CMsgGameMatchSignoutResponse::mutable_xp_reward_details() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignoutResponse.xp_reward_details)
  return &xp_reward_details_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CDOTALobbyMember >&
CMsgGameMatchSignoutResponse::xp_reward_details() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_;
}

// optional uint32 leagueid = 5;
inline bool CMsgGameMatchSignoutResponse::has_leagueid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignoutResponse::set_has_leagueid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameMatchSignoutResponse::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameMatchSignoutResponse::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse::leagueid() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.leagueid)
  return leagueid_;
}
inline void CMsgGameMatchSignoutResponse::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignoutResponse.leagueid)
}

// repeated .CMsgGameMatchSignoutResponse.CAdditionalSignoutMsg additional_msgs = 6;
inline int CMsgGameMatchSignoutResponse::additional_msgs_size() const {
  return additional_msgs_.size();
}
inline void CMsgGameMatchSignoutResponse::clear_additional_msgs() {
  additional_msgs_.Clear();
}
inline const ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg& CMsgGameMatchSignoutResponse::additional_msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignoutResponse.additional_msgs)
  return additional_msgs_.Get(index);
}
inline ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* CMsgGameMatchSignoutResponse::mutable_additional_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameMatchSignoutResponse.additional_msgs)
  return additional_msgs_.Mutable(index);
}
inline ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg* CMsgGameMatchSignoutResponse::add_additional_msgs() {
  // @@protoc_insertion_point(field_add:CMsgGameMatchSignoutResponse.additional_msgs)
  return additional_msgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg >*
CMsgGameMatchSignoutResponse::mutable_additional_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameMatchSignoutResponse.additional_msgs)
  return &additional_msgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameMatchSignoutResponse_CAdditionalSignoutMsg >&
CMsgGameMatchSignoutResponse::additional_msgs() const {
  // @@protoc_insertion_point(field_list:CMsgGameMatchSignoutResponse.additional_msgs)
  return additional_msgs_;
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOutPermissionRequest

// optional uint32 server_version = 1;
inline bool CMsgGameMatchSignOutPermissionRequest::has_server_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_has_server_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_has_server_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_server_version() {
  server_version_ = 0u;
  clear_has_server_version();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::server_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOutPermissionRequest.server_version)
  return server_version_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_server_version(::google::protobuf::uint32 value) {
  set_has_server_version();
  server_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOutPermissionRequest.server_version)
}

// optional uint32 local_attempt = 2;
inline bool CMsgGameMatchSignOutPermissionRequest::has_local_attempt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_has_local_attempt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_has_local_attempt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_local_attempt() {
  local_attempt_ = 0u;
  clear_has_local_attempt();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::local_attempt() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOutPermissionRequest.local_attempt)
  return local_attempt_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_local_attempt(::google::protobuf::uint32 value) {
  set_has_local_attempt();
  local_attempt_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOutPermissionRequest.local_attempt)
}

// optional uint32 total_attempt = 3;
inline bool CMsgGameMatchSignOutPermissionRequest::has_total_attempt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_has_total_attempt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_has_total_attempt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_total_attempt() {
  total_attempt_ = 0u;
  clear_has_total_attempt();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::total_attempt() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOutPermissionRequest.total_attempt)
  return total_attempt_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_total_attempt(::google::protobuf::uint32 value) {
  set_has_total_attempt();
  total_attempt_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOutPermissionRequest.total_attempt)
}

// optional uint32 seconds_waited = 4;
inline bool CMsgGameMatchSignOutPermissionRequest::has_seconds_waited() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_has_seconds_waited() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_has_seconds_waited() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_seconds_waited() {
  seconds_waited_ = 0u;
  clear_has_seconds_waited();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::seconds_waited() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOutPermissionRequest.seconds_waited)
  return seconds_waited_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_seconds_waited(::google::protobuf::uint32 value) {
  set_has_seconds_waited();
  seconds_waited_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOutPermissionRequest.seconds_waited)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOutPermissionResponse

// optional bool permission_granted = 1 [default = false];
inline bool CMsgGameMatchSignOutPermissionResponse::has_permission_granted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_has_permission_granted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_has_permission_granted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_permission_granted() {
  permission_granted_ = false;
  clear_has_permission_granted();
}
inline bool CMsgGameMatchSignOutPermissionResponse::permission_granted() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOutPermissionResponse.permission_granted)
  return permission_granted_;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_permission_granted(bool value) {
  set_has_permission_granted();
  permission_granted_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOutPermissionResponse.permission_granted)
}

// optional bool abandon_signout = 2 [default = false];
inline bool CMsgGameMatchSignOutPermissionResponse::has_abandon_signout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_has_abandon_signout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_has_abandon_signout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_abandon_signout() {
  abandon_signout_ = false;
  clear_has_abandon_signout();
}
inline bool CMsgGameMatchSignOutPermissionResponse::abandon_signout() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOutPermissionResponse.abandon_signout)
  return abandon_signout_;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_abandon_signout(bool value) {
  set_has_abandon_signout();
  abandon_signout_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOutPermissionResponse.abandon_signout)
}

// optional uint32 retry_delay_seconds = 3 [default = 0];
inline bool CMsgGameMatchSignOutPermissionResponse::has_retry_delay_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_has_retry_delay_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_has_retry_delay_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_retry_delay_seconds() {
  retry_delay_seconds_ = 0u;
  clear_has_retry_delay_seconds();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionResponse::retry_delay_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgGameMatchSignOutPermissionResponse.retry_delay_seconds)
  return retry_delay_seconds_;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_retry_delay_seconds(::google::protobuf::uint32 value) {
  set_has_retry_delay_seconds();
  retry_delay_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameMatchSignOutPermissionResponse.retry_delay_seconds)
}

// -------------------------------------------------------------------

// CMsgGameChatLog_CChatLine

// optional uint32 account_id = 1;
inline bool CMsgGameChatLog_CChatLine::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameChatLog_CChatLine::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameChatLog_CChatLine::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameChatLog_CChatLine::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGameChatLog_CChatLine::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameChatLog.CChatLine.account_id)
  return account_id_;
}
inline void CMsgGameChatLog_CChatLine::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameChatLog.CChatLine.account_id)
}

// optional uint32 team_only = 2;
inline bool CMsgGameChatLog_CChatLine::has_team_only() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameChatLog_CChatLine::set_has_team_only() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameChatLog_CChatLine::clear_has_team_only() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameChatLog_CChatLine::clear_team_only() {
  team_only_ = 0u;
  clear_has_team_only();
}
inline ::google::protobuf::uint32 CMsgGameChatLog_CChatLine::team_only() const {
  // @@protoc_insertion_point(field_get:CMsgGameChatLog.CChatLine.team_only)
  return team_only_;
}
inline void CMsgGameChatLog_CChatLine::set_team_only(::google::protobuf::uint32 value) {
  set_has_team_only();
  team_only_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameChatLog.CChatLine.team_only)
}

// optional string text = 3;
inline bool CMsgGameChatLog_CChatLine::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameChatLog_CChatLine::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameChatLog_CChatLine::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameChatLog_CChatLine::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CMsgGameChatLog_CChatLine::text() const {
  // @@protoc_insertion_point(field_get:CMsgGameChatLog.CChatLine.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameChatLog_CChatLine::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameChatLog.CChatLine.text)
}
inline void CMsgGameChatLog_CChatLine::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameChatLog.CChatLine.text)
}
inline void CMsgGameChatLog_CChatLine::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameChatLog.CChatLine.text)
}
inline ::std::string* CMsgGameChatLog_CChatLine::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CMsgGameChatLog.CChatLine.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameChatLog_CChatLine::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameChatLog_CChatLine::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameChatLog.CChatLine.text)
}

// optional uint32 game_time = 4;
inline bool CMsgGameChatLog_CChatLine::has_game_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameChatLog_CChatLine::set_has_game_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameChatLog_CChatLine::clear_has_game_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameChatLog_CChatLine::clear_game_time() {
  game_time_ = 0u;
  clear_has_game_time();
}
inline ::google::protobuf::uint32 CMsgGameChatLog_CChatLine::game_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameChatLog.CChatLine.game_time)
  return game_time_;
}
inline void CMsgGameChatLog_CChatLine::set_game_time(::google::protobuf::uint32 value) {
  set_has_game_time();
  game_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameChatLog.CChatLine.game_time)
}

// -------------------------------------------------------------------

// CMsgGameChatLog

// optional uint64 match_id = 1;
inline bool CMsgGameChatLog::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameChatLog::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameChatLog::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameChatLog::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGameChatLog::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameChatLog.match_id)
  return match_id_;
}
inline void CMsgGameChatLog::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameChatLog.match_id)
}

// repeated .CMsgGameChatLog.CChatLine lines = 2;
inline int CMsgGameChatLog::lines_size() const {
  return lines_.size();
}
inline void CMsgGameChatLog::clear_lines() {
  lines_.Clear();
}
inline const ::CMsgGameChatLog_CChatLine& CMsgGameChatLog::lines(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameChatLog.lines)
  return lines_.Get(index);
}
inline ::CMsgGameChatLog_CChatLine* CMsgGameChatLog::mutable_lines(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameChatLog.lines)
  return lines_.Mutable(index);
}
inline ::CMsgGameChatLog_CChatLine* CMsgGameChatLog::add_lines() {
  // @@protoc_insertion_point(field_add:CMsgGameChatLog.lines)
  return lines_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameChatLog_CChatLine >*
CMsgGameChatLog::mutable_lines() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameChatLog.lines)
  return &lines_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameChatLog_CChatLine >&
CMsgGameChatLog::lines() const {
  // @@protoc_insertion_point(field_list:CMsgGameChatLog.lines)
  return lines_;
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility

// optional uint32 ability_id = 1;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::has_ability_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::set_has_ability_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::clear_has_ability_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::clear_ability_id() {
  ability_id_ = 0u;
  clear_has_ability_id();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_id)
  return ability_id_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::set_ability_id(::google::protobuf::uint32 value) {
  set_has_ability_id();
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_id)
}

// optional uint32 ability_level = 2;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::has_ability_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::set_has_ability_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::clear_has_ability_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::clear_ability_level() {
  ability_level_ = 0u;
  clear_has_ability_level();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::ability_level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_level)
  return ability_level_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::set_ability_level(::google::protobuf::uint32 value) {
  set_has_ability_level();
  ability_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_level)
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate_Team_Player

// optional uint32 player_slot = 1;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_player_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_player_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_player_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_player_slot() {
  player_slot_ = 0u;
  clear_has_player_slot();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.player_slot)
  return player_slot_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_slot(::google::protobuf::uint32 value) {
  set_has_player_slot();
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.player_slot)
}

// optional string player_name = 2;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_player_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_player_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_player_name();
}
inline const ::std::string& CMsgDOTALiveScoreboardUpdate_Team_Player::player_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
  return player_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_name(const ::std::string& value) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_name(const char* value) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_player_name() {
  set_has_player_name();
  // @@protoc_insertion_point(field_mutable:CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::release_player_name() {
  clear_has_player_name();
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_allocated_player_name(::std::string* player_name) {
  if (player_name != NULL) {
    set_has_player_name();
  } else {
    clear_has_player_name();
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}

// optional string hero_name = 3;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_hero_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_hero_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_hero_name() {
  hero_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hero_name();
}
inline const ::std::string& CMsgDOTALiveScoreboardUpdate_Team_Player::hero_name() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
  return hero_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_name(const char* value) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_hero_name() {
  set_has_hero_name();
  // @@protoc_insertion_point(field_mutable:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
  return hero_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::release_hero_name() {
  clear_has_hero_name();
  return hero_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name != NULL) {
    set_has_hero_name();
  } else {
    clear_has_hero_name();
  }
  hero_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}

// optional uint32 hero_id = 4;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_id)
  return hero_id_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.hero_id)
}

// optional uint32 kills = 5;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_kills() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_kills() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_kills() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::kills() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.kills)
  return kills_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.kills)
}

// optional uint32 deaths = 6;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_deaths() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_deaths() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.deaths)
  return deaths_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.deaths)
}

// optional uint32 assists = 7;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_assists() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_assists() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_assists() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_assists() {
  assists_ = 0u;
  clear_has_assists();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::assists() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.assists)
  return assists_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_assists(::google::protobuf::uint32 value) {
  set_has_assists();
  assists_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.assists)
}

// optional uint32 last_hits = 8;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_last_hits() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_last_hits() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_last_hits() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_last_hits() {
  last_hits_ = 0u;
  clear_has_last_hits();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.last_hits)
  return last_hits_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_last_hits(::google::protobuf::uint32 value) {
  set_has_last_hits();
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.last_hits)
}

// optional uint32 denies = 9;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_denies() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_denies() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_denies() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_denies() {
  denies_ = 0u;
  clear_has_denies();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::denies() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.denies)
  return denies_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_denies(::google::protobuf::uint32 value) {
  set_has_denies();
  denies_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.denies)
}

// optional uint32 gold = 10;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_gold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_gold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_gold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::gold() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.gold)
  return gold_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.gold)
}

// optional uint32 level = 11;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.level)
  return level_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.level)
}

// optional float gold_per_min = 12;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_gold_per_min() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_gold_per_min() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_gold_per_min() {
  gold_per_min_ = 0;
  clear_has_gold_per_min();
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::gold_per_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.gold_per_min)
  return gold_per_min_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_gold_per_min(float value) {
  set_has_gold_per_min();
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.gold_per_min)
}

// optional float xp_per_min = 13;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_xp_per_min() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_xp_per_min() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_xp_per_min() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_xp_per_min() {
  xp_per_min_ = 0;
  clear_has_xp_per_min();
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::xp_per_min() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.xp_per_min)
  return xp_per_min_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_xp_per_min(float value) {
  set_has_xp_per_min();
  xp_per_min_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.xp_per_min)
}

// optional .CMsgDOTALiveScoreboardUpdate.Team.Player.DOTAUltimateState ultimate_state = 14 [default = k_EDOTAUltimateStateNotLearned];
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_ultimate_state() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_ultimate_state() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_ultimate_state() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_ultimate_state() {
  ultimate_state_ = 0;
  clear_has_ultimate_state();
}
inline ::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState CMsgDOTALiveScoreboardUpdate_Team_Player::ultimate_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_state)
  return static_cast< ::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState >(ultimate_state_);
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_ultimate_state(::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState value) {
  assert(::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_IsValid(value));
  set_has_ultimate_state();
  ultimate_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_state)
}

// optional float ultimate_cooldown = 15;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_ultimate_cooldown() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_ultimate_cooldown() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_ultimate_cooldown() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_ultimate_cooldown() {
  ultimate_cooldown_ = 0;
  clear_has_ultimate_cooldown();
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::ultimate_cooldown() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_cooldown)
  return ultimate_cooldown_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_ultimate_cooldown(float value) {
  set_has_ultimate_cooldown();
  ultimate_cooldown_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_cooldown)
}

// optional uint32 item0 = 16;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item0() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_item0() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_item0() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item0() {
  item0_ = 0u;
  clear_has_item0();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item0() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.item0)
  return item0_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item0(::google::protobuf::uint32 value) {
  set_has_item0();
  item0_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.item0)
}

// optional uint32 item1 = 17;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item1() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_item1() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_item1() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item1() {
  item1_ = 0u;
  clear_has_item1();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item1() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.item1)
  return item1_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item1(::google::protobuf::uint32 value) {
  set_has_item1();
  item1_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.item1)
}

// optional uint32 item2 = 18;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item2() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_item2() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_item2() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item2() {
  item2_ = 0u;
  clear_has_item2();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item2() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.item2)
  return item2_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item2(::google::protobuf::uint32 value) {
  set_has_item2();
  item2_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.item2)
}

// optional uint32 item3 = 19;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item3() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_item3() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_item3() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item3() {
  item3_ = 0u;
  clear_has_item3();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item3() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.item3)
  return item3_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item3(::google::protobuf::uint32 value) {
  set_has_item3();
  item3_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.item3)
}

// optional uint32 item4 = 20;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item4() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_item4() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_item4() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item4() {
  item4_ = 0u;
  clear_has_item4();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item4() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.item4)
  return item4_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item4(::google::protobuf::uint32 value) {
  set_has_item4();
  item4_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.item4)
}

// optional uint32 item5 = 21;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item5() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_item5() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_item5() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item5() {
  item5_ = 0u;
  clear_has_item5();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item5() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.item5)
  return item5_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item5(::google::protobuf::uint32 value) {
  set_has_item5();
  item5_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.item5)
}

// optional uint32 respawn_timer = 22;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_respawn_timer() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_respawn_timer() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_respawn_timer() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_respawn_timer() {
  respawn_timer_ = 0u;
  clear_has_respawn_timer();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::respawn_timer() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.respawn_timer)
  return respawn_timer_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_respawn_timer(::google::protobuf::uint32 value) {
  set_has_respawn_timer();
  respawn_timer_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.respawn_timer)
}

// optional uint32 account_id = 23;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.account_id)
  return account_id_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.account_id)
}

// optional float position_x = 24;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_position_x() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_position_x() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_position_x() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_position_x() {
  position_x_ = 0;
  clear_has_position_x();
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::position_x() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.position_x)
  return position_x_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_position_x(float value) {
  set_has_position_x();
  position_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.position_x)
}

// optional float position_y = 25;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_position_y() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_position_y() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_position_y() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_position_y() {
  position_y_ = 0;
  clear_has_position_y();
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::position_y() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.position_y)
  return position_y_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_position_y(float value) {
  set_has_position_y();
  position_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.position_y)
}

// optional uint32 net_worth = 26;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_net_worth() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_has_net_worth() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_has_net_worth() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_net_worth() {
  net_worth_ = 0u;
  clear_has_net_worth();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::net_worth() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.net_worth)
  return net_worth_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_net_worth(::google::protobuf::uint32 value) {
  set_has_net_worth();
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.Player.net_worth)
}

// repeated .CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility abilities = 27;
inline int CMsgDOTALiveScoreboardUpdate_Team_Player::abilities_size() const {
  return abilities_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_abilities() {
  abilities_.Clear();
}
inline const ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& CMsgDOTALiveScoreboardUpdate_Team_Player::abilities(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_.Get(index);
}
inline ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_.Mutable(index);
}
inline ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* CMsgDOTALiveScoreboardUpdate_Team_Player::add_abilities() {
  // @@protoc_insertion_point(field_add:CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >*
CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return &abilities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >&
CMsgDOTALiveScoreboardUpdate_Team_Player::abilities() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_;
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate_Team

// repeated .CMsgDOTALiveScoreboardUpdate.Team.Player players = 1;
inline int CMsgDOTALiveScoreboardUpdate_Team::players_size() const {
  return players_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_players() {
  players_.Clear();
}
inline const ::CMsgDOTALiveScoreboardUpdate_Team_Player& CMsgDOTALiveScoreboardUpdate_Team::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_.Get(index);
}
inline ::CMsgDOTALiveScoreboardUpdate_Team_Player* CMsgDOTALiveScoreboardUpdate_Team::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_.Mutable(index);
}
inline ::CMsgDOTALiveScoreboardUpdate_Team_Player* CMsgDOTALiveScoreboardUpdate_Team::add_players() {
  // @@protoc_insertion_point(field_add:CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player >*
CMsgDOTALiveScoreboardUpdate_Team::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALiveScoreboardUpdate.Team.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTALiveScoreboardUpdate_Team_Player >&
CMsgDOTALiveScoreboardUpdate_Team::players() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_;
}

// optional uint32 score = 2;
inline bool CMsgDOTALiveScoreboardUpdate_Team::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::score() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.score)
  return score_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.score)
}

// optional uint32 tower_state = 3;
inline bool CMsgDOTALiveScoreboardUpdate_Team::has_tower_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_has_tower_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_has_tower_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_tower_state() {
  tower_state_ = 0u;
  clear_has_tower_state();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::tower_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.tower_state)
  return tower_state_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_tower_state(::google::protobuf::uint32 value) {
  set_has_tower_state();
  tower_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.tower_state)
}

// optional uint32 barracks_state = 4;
inline bool CMsgDOTALiveScoreboardUpdate_Team::has_barracks_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_has_barracks_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_has_barracks_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_barracks_state() {
  barracks_state_ = 0u;
  clear_has_barracks_state();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::barracks_state() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.barracks_state)
  return barracks_state_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_barracks_state(::google::protobuf::uint32 value) {
  set_has_barracks_state();
  barracks_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.barracks_state)
}

// repeated uint32 hero_picks = 5;
inline int CMsgDOTALiveScoreboardUpdate_Team::hero_picks_size() const {
  return hero_picks_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_hero_picks() {
  hero_picks_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::hero_picks(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
  return hero_picks_.Get(index);
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_hero_picks(int index, ::google::protobuf::uint32 value) {
  hero_picks_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
}
inline void CMsgDOTALiveScoreboardUpdate_Team::add_hero_picks(::google::protobuf::uint32 value) {
  hero_picks_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTALiveScoreboardUpdate_Team::hero_picks() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
  return hero_picks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTALiveScoreboardUpdate_Team::mutable_hero_picks() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
  return &hero_picks_;
}

// repeated uint32 hero_bans = 6;
inline int CMsgDOTALiveScoreboardUpdate_Team::hero_bans_size() const {
  return hero_bans_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_hero_bans() {
  hero_bans_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::hero_bans(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
  return hero_bans_.Get(index);
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_hero_bans(int index, ::google::protobuf::uint32 value) {
  hero_bans_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
}
inline void CMsgDOTALiveScoreboardUpdate_Team::add_hero_bans(::google::protobuf::uint32 value) {
  hero_bans_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTALiveScoreboardUpdate_Team::hero_bans() const {
  // @@protoc_insertion_point(field_list:CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
  return hero_bans_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTALiveScoreboardUpdate_Team::mutable_hero_bans() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
  return &hero_bans_;
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate

// optional uint32 tournament_id = 1;
inline bool CMsgDOTALiveScoreboardUpdate::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_tournament_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_tournament_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_tournament_id() {
  tournament_id_ = 0u;
  clear_has_tournament_id();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::tournament_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.tournament_id)
  return tournament_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_tournament_id(::google::protobuf::uint32 value) {
  set_has_tournament_id();
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.tournament_id)
}

// optional uint32 tournament_game_id = 2;
inline bool CMsgDOTALiveScoreboardUpdate::has_tournament_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_tournament_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_tournament_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_tournament_game_id() {
  tournament_game_id_ = 0u;
  clear_has_tournament_game_id();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::tournament_game_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.tournament_game_id)
  return tournament_game_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_tournament_game_id(::google::protobuf::uint32 value) {
  set_has_tournament_game_id();
  tournament_game_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.tournament_game_id)
}

// optional float duration = 3;
inline bool CMsgDOTALiveScoreboardUpdate::has_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CMsgDOTALiveScoreboardUpdate::duration() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.duration)
  return duration_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.duration)
}

// optional int32 hltv_delay = 4;
inline bool CMsgDOTALiveScoreboardUpdate::has_hltv_delay() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_hltv_delay() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_hltv_delay() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_hltv_delay() {
  hltv_delay_ = 0;
  clear_has_hltv_delay();
}
inline ::google::protobuf::int32 CMsgDOTALiveScoreboardUpdate::hltv_delay() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.hltv_delay)
  return hltv_delay_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_hltv_delay(::google::protobuf::int32 value) {
  set_has_hltv_delay();
  hltv_delay_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.hltv_delay)
}

// optional .CMsgDOTALiveScoreboardUpdate.Team team_good = 5;
inline bool CMsgDOTALiveScoreboardUpdate::has_team_good() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_team_good() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_team_good() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_team_good() {
  if (team_good_ != NULL) team_good_->::CMsgDOTALiveScoreboardUpdate_Team::Clear();
  clear_has_team_good();
}
inline const ::CMsgDOTALiveScoreboardUpdate_Team& CMsgDOTALiveScoreboardUpdate::team_good() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.team_good)
  return team_good_ != NULL ? *team_good_ : *default_instance_->team_good_;
}
inline ::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::mutable_team_good() {
  set_has_team_good();
  if (team_good_ == NULL) {
    team_good_ = new ::CMsgDOTALiveScoreboardUpdate_Team;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTALiveScoreboardUpdate.team_good)
  return team_good_;
}
inline ::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::release_team_good() {
  clear_has_team_good();
  ::CMsgDOTALiveScoreboardUpdate_Team* temp = team_good_;
  team_good_ = NULL;
  return temp;
}
inline void CMsgDOTALiveScoreboardUpdate::set_allocated_team_good(::CMsgDOTALiveScoreboardUpdate_Team* team_good) {
  delete team_good_;
  team_good_ = team_good;
  if (team_good) {
    set_has_team_good();
  } else {
    clear_has_team_good();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALiveScoreboardUpdate.team_good)
}

// optional .CMsgDOTALiveScoreboardUpdate.Team team_bad = 6;
inline bool CMsgDOTALiveScoreboardUpdate::has_team_bad() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_team_bad() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_team_bad() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_team_bad() {
  if (team_bad_ != NULL) team_bad_->::CMsgDOTALiveScoreboardUpdate_Team::Clear();
  clear_has_team_bad();
}
inline const ::CMsgDOTALiveScoreboardUpdate_Team& CMsgDOTALiveScoreboardUpdate::team_bad() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.team_bad)
  return team_bad_ != NULL ? *team_bad_ : *default_instance_->team_bad_;
}
inline ::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::mutable_team_bad() {
  set_has_team_bad();
  if (team_bad_ == NULL) {
    team_bad_ = new ::CMsgDOTALiveScoreboardUpdate_Team;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTALiveScoreboardUpdate.team_bad)
  return team_bad_;
}
inline ::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::release_team_bad() {
  clear_has_team_bad();
  ::CMsgDOTALiveScoreboardUpdate_Team* temp = team_bad_;
  team_bad_ = NULL;
  return temp;
}
inline void CMsgDOTALiveScoreboardUpdate::set_allocated_team_bad(::CMsgDOTALiveScoreboardUpdate_Team* team_bad) {
  delete team_bad_;
  team_bad_ = team_bad;
  if (team_bad) {
    set_has_team_bad();
  } else {
    clear_has_team_bad();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTALiveScoreboardUpdate.team_bad)
}

// optional uint32 roshan_respawn_timer = 7;
inline bool CMsgDOTALiveScoreboardUpdate::has_roshan_respawn_timer() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_roshan_respawn_timer() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_roshan_respawn_timer() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_roshan_respawn_timer() {
  roshan_respawn_timer_ = 0u;
  clear_has_roshan_respawn_timer();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::roshan_respawn_timer() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.roshan_respawn_timer)
  return roshan_respawn_timer_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_roshan_respawn_timer(::google::protobuf::uint32 value) {
  set_has_roshan_respawn_timer();
  roshan_respawn_timer_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.roshan_respawn_timer)
}

// optional uint32 league_id = 8;
inline bool CMsgDOTALiveScoreboardUpdate::has_league_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_league_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.league_id)
  return league_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.league_id)
}

// optional uint64 match_id = 9;
inline bool CMsgDOTALiveScoreboardUpdate::has_match_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::set_has_match_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTALiveScoreboardUpdate::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTALiveScoreboardUpdate.match_id)
  return match_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTALiveScoreboardUpdate.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestPlayerResources

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestPlayerResources::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestPlayerResources::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestPlayerResources::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestPlayerResources::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestPlayerResources::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResources.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestPlayerResources::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResources.steam_id)
}

// optional uint32 player_id = 2;
inline bool CMsgDOTARequestPlayerResources::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestPlayerResources::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestPlayerResources::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestPlayerResources::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestPlayerResources::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResources.player_id)
  return player_id_;
}
inline void CMsgDOTARequestPlayerResources::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResources.player_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestPlayerResourcesResponse

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestPlayerResourcesResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResourcesResponse.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResourcesResponse.steam_id)
}

// optional uint32 rank = 2;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgDOTARequestPlayerResourcesResponse::rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResourcesResponse.rank)
  return rank_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResourcesResponse.rank)
}

// optional uint32 player_id = 3;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestPlayerResourcesResponse::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResourcesResponse.player_id)
  return player_id_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResourcesResponse.player_id)
}

// optional bool prevent_text_chat = 4;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_prevent_text_chat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_has_prevent_text_chat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_has_prevent_text_chat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_prevent_text_chat() {
  prevent_text_chat_ = false;
  clear_has_prevent_text_chat();
}
inline bool CMsgDOTARequestPlayerResourcesResponse::prevent_text_chat() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResourcesResponse.prevent_text_chat)
  return prevent_text_chat_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_prevent_text_chat(bool value) {
  set_has_prevent_text_chat();
  prevent_text_chat_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResourcesResponse.prevent_text_chat)
}

// optional bool prevent_voice_chat = 5;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_prevent_voice_chat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_has_prevent_voice_chat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_has_prevent_voice_chat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_prevent_voice_chat() {
  prevent_voice_chat_ = false;
  clear_has_prevent_voice_chat();
}
inline bool CMsgDOTARequestPlayerResourcesResponse::prevent_voice_chat() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResourcesResponse.prevent_voice_chat)
  return prevent_voice_chat_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_prevent_voice_chat(bool value) {
  set_has_prevent_voice_chat();
  prevent_voice_chat_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResourcesResponse.prevent_voice_chat)
}

// optional bool low_priority = 6;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_low_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_has_low_priority() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CMsgDOTARequestPlayerResourcesResponse::low_priority() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestPlayerResourcesResponse.low_priority)
  return low_priority_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestPlayerResourcesResponse.low_priority)
}

// -------------------------------------------------------------------

// CMsgDOTARequestBatchPlayerResources

// repeated uint32 account_ids = 1 [packed = true];
inline int CMsgDOTARequestBatchPlayerResources::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgDOTARequestBatchPlayerResources::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResources::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResources.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgDOTARequestBatchPlayerResources::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResources.account_ids)
}
inline void CMsgDOTARequestBatchPlayerResources::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTARequestBatchPlayerResources.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTARequestBatchPlayerResources::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestBatchPlayerResources.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTARequestBatchPlayerResources::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestBatchPlayerResources.account_ids)
  return &account_ids_;
}

// repeated uint32 rank_types = 4 [packed = true];
inline int CMsgDOTARequestBatchPlayerResources::rank_types_size() const {
  return rank_types_.size();
}
inline void CMsgDOTARequestBatchPlayerResources::clear_rank_types() {
  rank_types_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResources::rank_types(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResources.rank_types)
  return rank_types_.Get(index);
}
inline void CMsgDOTARequestBatchPlayerResources::set_rank_types(int index, ::google::protobuf::uint32 value) {
  rank_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResources.rank_types)
}
inline void CMsgDOTARequestBatchPlayerResources::add_rank_types(::google::protobuf::uint32 value) {
  rank_types_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTARequestBatchPlayerResources.rank_types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTARequestBatchPlayerResources::rank_types() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestBatchPlayerResources.rank_types)
  return rank_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTARequestBatchPlayerResources::mutable_rank_types() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestBatchPlayerResources.rank_types)
  return &rank_types_;
}

// -------------------------------------------------------------------

// CMsgDOTARequestBatchPlayerResourcesResponse_Result

// optional uint32 account_id = 1;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResourcesResponse_Result::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResourcesResponse.Result.account_id)
  return account_id_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResourcesResponse.Result.account_id)
}

// optional bool prevent_text_chat = 2;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_prevent_text_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_has_prevent_text_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_has_prevent_text_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_prevent_text_chat() {
  prevent_text_chat_ = false;
  clear_has_prevent_text_chat();
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::prevent_text_chat() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_text_chat)
  return prevent_text_chat_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_prevent_text_chat(bool value) {
  set_has_prevent_text_chat();
  prevent_text_chat_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_text_chat)
}

// optional bool prevent_voice_chat = 3;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_prevent_voice_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_has_prevent_voice_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_has_prevent_voice_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_prevent_voice_chat() {
  prevent_voice_chat_ = false;
  clear_has_prevent_voice_chat();
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::prevent_voice_chat() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_voice_chat)
  return prevent_voice_chat_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_prevent_voice_chat(bool value) {
  set_has_prevent_voice_chat();
  prevent_voice_chat_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_voice_chat)
}

// optional uint32 rank = 4;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResourcesResponse_Result::rank() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank)
  return rank_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank)
}

// optional bool rank_calibrated = 5;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_rank_calibrated() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_has_rank_calibrated() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_has_rank_calibrated() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_rank_calibrated() {
  rank_calibrated_ = false;
  clear_has_rank_calibrated();
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::rank_calibrated() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank_calibrated)
  return rank_calibrated_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_rank_calibrated(bool value) {
  set_has_rank_calibrated();
  rank_calibrated_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank_calibrated)
}

// optional bool low_priority = 6;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_low_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_has_low_priority() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::low_priority() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResourcesResponse.Result.low_priority)
  return low_priority_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARequestBatchPlayerResourcesResponse.Result.low_priority)
}

// -------------------------------------------------------------------

// CMsgDOTARequestBatchPlayerResourcesResponse

// repeated .CMsgDOTARequestBatchPlayerResourcesResponse.Result results = 6;
inline int CMsgDOTARequestBatchPlayerResourcesResponse::results_size() const {
  return results_.size();
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse::clear_results() {
  results_.Clear();
}
inline const ::CMsgDOTARequestBatchPlayerResourcesResponse_Result& CMsgDOTARequestBatchPlayerResourcesResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_.Get(index);
}
inline ::CMsgDOTARequestBatchPlayerResourcesResponse_Result* CMsgDOTARequestBatchPlayerResourcesResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_.Mutable(index);
}
inline ::CMsgDOTARequestBatchPlayerResourcesResponse_Result* CMsgDOTARequestBatchPlayerResourcesResponse::add_results() {
  // @@protoc_insertion_point(field_add:CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestBatchPlayerResourcesResponse_Result >*
CMsgDOTARequestBatchPlayerResourcesResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTARequestBatchPlayerResourcesResponse_Result >&
CMsgDOTARequestBatchPlayerResourcesResponse::results() const {
  // @@protoc_insertion_point(field_list:CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_;
}

// -------------------------------------------------------------------

// CMsgDOTAPlayerFailedToConnect

// repeated fixed64 failed_loaders = 1;
inline int CMsgDOTAPlayerFailedToConnect::failed_loaders_size() const {
  return failed_loaders_.size();
}
inline void CMsgDOTAPlayerFailedToConnect::clear_failed_loaders() {
  failed_loaders_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerFailedToConnect::failed_loaders(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPlayerFailedToConnect.failed_loaders)
  return failed_loaders_.Get(index);
}
inline void CMsgDOTAPlayerFailedToConnect::set_failed_loaders(int index, ::google::protobuf::uint64 value) {
  failed_loaders_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPlayerFailedToConnect.failed_loaders)
}
inline void CMsgDOTAPlayerFailedToConnect::add_failed_loaders(::google::protobuf::uint64 value) {
  failed_loaders_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAPlayerFailedToConnect.failed_loaders)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerFailedToConnect::failed_loaders() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPlayerFailedToConnect.failed_loaders)
  return failed_loaders_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerFailedToConnect::mutable_failed_loaders() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPlayerFailedToConnect.failed_loaders)
  return &failed_loaders_;
}

// repeated fixed64 abandoned_loaders = 2;
inline int CMsgDOTAPlayerFailedToConnect::abandoned_loaders_size() const {
  return abandoned_loaders_.size();
}
inline void CMsgDOTAPlayerFailedToConnect::clear_abandoned_loaders() {
  abandoned_loaders_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerFailedToConnect::abandoned_loaders(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
  return abandoned_loaders_.Get(index);
}
inline void CMsgDOTAPlayerFailedToConnect::set_abandoned_loaders(int index, ::google::protobuf::uint64 value) {
  abandoned_loaders_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
}
inline void CMsgDOTAPlayerFailedToConnect::add_abandoned_loaders(::google::protobuf::uint64 value) {
  abandoned_loaders_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerFailedToConnect::abandoned_loaders() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
  return abandoned_loaders_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerFailedToConnect::mutable_abandoned_loaders() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
  return &abandoned_loaders_;
}

// -------------------------------------------------------------------

// CMsgGCToRelayConnect

// optional uint32 source_tv_public_addr = 1;
inline bool CMsgGCToRelayConnect::has_source_tv_public_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToRelayConnect::set_has_source_tv_public_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToRelayConnect::clear_has_source_tv_public_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToRelayConnect::clear_source_tv_public_addr() {
  source_tv_public_addr_ = 0u;
  clear_has_source_tv_public_addr();
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::source_tv_public_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGCToRelayConnect.source_tv_public_addr)
  return source_tv_public_addr_;
}
inline void CMsgGCToRelayConnect::set_source_tv_public_addr(::google::protobuf::uint32 value) {
  set_has_source_tv_public_addr();
  source_tv_public_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToRelayConnect.source_tv_public_addr)
}

// optional uint32 source_tv_private_addr = 2;
inline bool CMsgGCToRelayConnect::has_source_tv_private_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToRelayConnect::set_has_source_tv_private_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToRelayConnect::clear_has_source_tv_private_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToRelayConnect::clear_source_tv_private_addr() {
  source_tv_private_addr_ = 0u;
  clear_has_source_tv_private_addr();
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::source_tv_private_addr() const {
  // @@protoc_insertion_point(field_get:CMsgGCToRelayConnect.source_tv_private_addr)
  return source_tv_private_addr_;
}
inline void CMsgGCToRelayConnect::set_source_tv_private_addr(::google::protobuf::uint32 value) {
  set_has_source_tv_private_addr();
  source_tv_private_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToRelayConnect.source_tv_private_addr)
}

// optional uint32 source_tv_port = 3;
inline bool CMsgGCToRelayConnect::has_source_tv_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToRelayConnect::set_has_source_tv_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToRelayConnect::clear_has_source_tv_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToRelayConnect::clear_source_tv_port() {
  source_tv_port_ = 0u;
  clear_has_source_tv_port();
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::source_tv_port() const {
  // @@protoc_insertion_point(field_get:CMsgGCToRelayConnect.source_tv_port)
  return source_tv_port_;
}
inline void CMsgGCToRelayConnect::set_source_tv_port(::google::protobuf::uint32 value) {
  set_has_source_tv_port();
  source_tv_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToRelayConnect.source_tv_port)
}

// optional uint64 game_server_steam_id = 4;
inline bool CMsgGCToRelayConnect::has_game_server_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToRelayConnect::set_has_game_server_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToRelayConnect::clear_has_game_server_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToRelayConnect::clear_game_server_steam_id() {
  game_server_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_server_steam_id();
}
inline ::google::protobuf::uint64 CMsgGCToRelayConnect::game_server_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToRelayConnect.game_server_steam_id)
  return game_server_steam_id_;
}
inline void CMsgGCToRelayConnect::set_game_server_steam_id(::google::protobuf::uint64 value) {
  set_has_game_server_steam_id();
  game_server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToRelayConnect.game_server_steam_id)
}

// optional uint32 parent_count = 5;
inline bool CMsgGCToRelayConnect::has_parent_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToRelayConnect::set_has_parent_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToRelayConnect::clear_has_parent_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToRelayConnect::clear_parent_count() {
  parent_count_ = 0u;
  clear_has_parent_count();
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::parent_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToRelayConnect.parent_count)
  return parent_count_;
}
inline void CMsgGCToRelayConnect::set_parent_count(::google::protobuf::uint32 value) {
  set_has_parent_count();
  parent_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToRelayConnect.parent_count)
}

// optional fixed64 tv_unique_secret_code = 6;
inline bool CMsgGCToRelayConnect::has_tv_unique_secret_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToRelayConnect::set_has_tv_unique_secret_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToRelayConnect::clear_has_tv_unique_secret_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToRelayConnect::clear_tv_unique_secret_code() {
  tv_unique_secret_code_ = GOOGLE_ULONGLONG(0);
  clear_has_tv_unique_secret_code();
}
inline ::google::protobuf::uint64 CMsgGCToRelayConnect::tv_unique_secret_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCToRelayConnect.tv_unique_secret_code)
  return tv_unique_secret_code_;
}
inline void CMsgGCToRelayConnect::set_tv_unique_secret_code(::google::protobuf::uint64 value) {
  set_has_tv_unique_secret_code();
  tv_unique_secret_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToRelayConnect.tv_unique_secret_code)
}

// optional fixed64 source_tv_steamid = 7;
inline bool CMsgGCToRelayConnect::has_source_tv_steamid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToRelayConnect::set_has_source_tv_steamid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToRelayConnect::clear_has_source_tv_steamid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToRelayConnect::clear_source_tv_steamid() {
  source_tv_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_tv_steamid();
}
inline ::google::protobuf::uint64 CMsgGCToRelayConnect::source_tv_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCToRelayConnect.source_tv_steamid)
  return source_tv_steamid_;
}
inline void CMsgGCToRelayConnect::set_source_tv_steamid(::google::protobuf::uint64 value) {
  set_has_source_tv_steamid();
  source_tv_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToRelayConnect.source_tv_steamid)
}

// -------------------------------------------------------------------

// CMsgGCGCToLANServerRelayConnect

// optional fixed64 relay_steamid = 1;
inline bool CMsgGCGCToLANServerRelayConnect::has_relay_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGCToLANServerRelayConnect::set_has_relay_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGCToLANServerRelayConnect::clear_has_relay_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGCToLANServerRelayConnect::clear_relay_steamid() {
  relay_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_relay_steamid();
}
inline ::google::protobuf::uint64 CMsgGCGCToLANServerRelayConnect::relay_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCGCToLANServerRelayConnect.relay_steamid)
  return relay_steamid_;
}
inline void CMsgGCGCToLANServerRelayConnect::set_relay_steamid(::google::protobuf::uint64 value) {
  set_has_relay_steamid();
  relay_steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCGCToLANServerRelayConnect.relay_steamid)
}

// -------------------------------------------------------------------

// CMsgGCToRelayConnectResponse

// -------------------------------------------------------------------

// CMsgGCBanStatusRequest

// optional uint32 account_id = 1;
inline bool CMsgGCBanStatusRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCBanStatusRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCBanStatusRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCBanStatusRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCBanStatusRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCBanStatusRequest.account_id)
  return account_id_;
}
inline void CMsgGCBanStatusRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCBanStatusRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCBanStatusResponse

// optional uint32 result = 1;
inline bool CMsgGCBanStatusResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCBanStatusResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCBanStatusResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCBanStatusResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCBanStatusResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCBanStatusResponse.result)
  return result_;
}
inline void CMsgGCBanStatusResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCBanStatusResponse.result)
}

// optional bool low_priority = 2;
inline bool CMsgGCBanStatusResponse::has_low_priority() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCBanStatusResponse::set_has_low_priority() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCBanStatusResponse::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCBanStatusResponse::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CMsgGCBanStatusResponse::low_priority() const {
  // @@protoc_insertion_point(field_get:CMsgGCBanStatusResponse.low_priority)
  return low_priority_;
}
inline void CMsgGCBanStatusResponse::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCBanStatusResponse.low_priority)
}

// optional bool text_chat_banned = 3;
inline bool CMsgGCBanStatusResponse::has_text_chat_banned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCBanStatusResponse::set_has_text_chat_banned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCBanStatusResponse::clear_has_text_chat_banned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCBanStatusResponse::clear_text_chat_banned() {
  text_chat_banned_ = false;
  clear_has_text_chat_banned();
}
inline bool CMsgGCBanStatusResponse::text_chat_banned() const {
  // @@protoc_insertion_point(field_get:CMsgGCBanStatusResponse.text_chat_banned)
  return text_chat_banned_;
}
inline void CMsgGCBanStatusResponse::set_text_chat_banned(bool value) {
  set_has_text_chat_banned();
  text_chat_banned_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCBanStatusResponse.text_chat_banned)
}

// optional bool voice_chat_banned = 4;
inline bool CMsgGCBanStatusResponse::has_voice_chat_banned() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCBanStatusResponse::set_has_voice_chat_banned() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCBanStatusResponse::clear_has_voice_chat_banned() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCBanStatusResponse::clear_voice_chat_banned() {
  voice_chat_banned_ = false;
  clear_has_voice_chat_banned();
}
inline bool CMsgGCBanStatusResponse::voice_chat_banned() const {
  // @@protoc_insertion_point(field_get:CMsgGCBanStatusResponse.voice_chat_banned)
  return voice_chat_banned_;
}
inline void CMsgGCBanStatusResponse::set_voice_chat_banned(bool value) {
  set_has_voice_chat_banned();
  voice_chat_banned_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCBanStatusResponse.voice_chat_banned)
}

// -------------------------------------------------------------------

// CMsgTournamentItemEvent

// optional fixed32 killer_account_id = 1;
inline bool CMsgTournamentItemEvent::has_killer_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_killer_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTournamentItemEvent::clear_has_killer_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTournamentItemEvent::clear_killer_account_id() {
  killer_account_id_ = 0u;
  clear_has_killer_account_id();
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::killer_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.killer_account_id)
  return killer_account_id_;
}
inline void CMsgTournamentItemEvent::set_killer_account_id(::google::protobuf::uint32 value) {
  set_has_killer_account_id();
  killer_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.killer_account_id)
}

// optional fixed32 victim_account_id = 2;
inline bool CMsgTournamentItemEvent::has_victim_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_victim_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTournamentItemEvent::clear_has_victim_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTournamentItemEvent::clear_victim_account_id() {
  victim_account_id_ = 0u;
  clear_has_victim_account_id();
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::victim_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.victim_account_id)
  return victim_account_id_;
}
inline void CMsgTournamentItemEvent::set_victim_account_id(::google::protobuf::uint32 value) {
  set_has_victim_account_id();
  victim_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.victim_account_id)
}

// optional .DOTA_TournamentEvents event_type = 3 [default = TE_FIRST_BLOOD];
inline bool CMsgTournamentItemEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTournamentItemEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTournamentItemEvent::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::DOTA_TournamentEvents CMsgTournamentItemEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.event_type)
  return static_cast< ::DOTA_TournamentEvents >(event_type_);
}
inline void CMsgTournamentItemEvent::set_event_type(::DOTA_TournamentEvents value) {
  assert(::DOTA_TournamentEvents_IsValid(value));
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.event_type)
}

// optional int32 tv_delay = 4;
inline bool CMsgTournamentItemEvent::has_tv_delay() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_tv_delay() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTournamentItemEvent::clear_has_tv_delay() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTournamentItemEvent::clear_tv_delay() {
  tv_delay_ = 0;
  clear_has_tv_delay();
}
inline ::google::protobuf::int32 CMsgTournamentItemEvent::tv_delay() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.tv_delay)
  return tv_delay_;
}
inline void CMsgTournamentItemEvent::set_tv_delay(::google::protobuf::int32 value) {
  set_has_tv_delay();
  tv_delay_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.tv_delay)
}

// optional int32 dota_time = 5;
inline bool CMsgTournamentItemEvent::has_dota_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_dota_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTournamentItemEvent::clear_has_dota_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTournamentItemEvent::clear_dota_time() {
  dota_time_ = 0;
  clear_has_dota_time();
}
inline ::google::protobuf::int32 CMsgTournamentItemEvent::dota_time() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.dota_time)
  return dota_time_;
}
inline void CMsgTournamentItemEvent::set_dota_time(::google::protobuf::int32 value) {
  set_has_dota_time();
  dota_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.dota_time)
}

// optional float replay_time = 6;
inline bool CMsgTournamentItemEvent::has_replay_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_replay_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTournamentItemEvent::clear_has_replay_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTournamentItemEvent::clear_replay_time() {
  replay_time_ = 0;
  clear_has_replay_time();
}
inline float CMsgTournamentItemEvent::replay_time() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.replay_time)
  return replay_time_;
}
inline void CMsgTournamentItemEvent::set_replay_time(float value) {
  set_has_replay_time();
  replay_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.replay_time)
}

// optional string loot_list = 7;
inline bool CMsgTournamentItemEvent::has_loot_list() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_loot_list() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgTournamentItemEvent::clear_has_loot_list() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgTournamentItemEvent::clear_loot_list() {
  loot_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loot_list();
}
inline const ::std::string& CMsgTournamentItemEvent::loot_list() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.loot_list)
  return loot_list_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTournamentItemEvent::set_loot_list(const ::std::string& value) {
  set_has_loot_list();
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.loot_list)
}
inline void CMsgTournamentItemEvent::set_loot_list(const char* value) {
  set_has_loot_list();
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTournamentItemEvent.loot_list)
}
inline void CMsgTournamentItemEvent::set_loot_list(const char* value, size_t size) {
  set_has_loot_list();
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTournamentItemEvent.loot_list)
}
inline ::std::string* CMsgTournamentItemEvent::mutable_loot_list() {
  set_has_loot_list();
  // @@protoc_insertion_point(field_mutable:CMsgTournamentItemEvent.loot_list)
  return loot_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTournamentItemEvent::release_loot_list() {
  clear_has_loot_list();
  return loot_list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTournamentItemEvent::set_allocated_loot_list(::std::string* loot_list) {
  if (loot_list != NULL) {
    set_has_loot_list();
  } else {
    clear_has_loot_list();
  }
  loot_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loot_list);
  // @@protoc_insertion_point(field_set_allocated:CMsgTournamentItemEvent.loot_list)
}

// optional uint32 event_team = 8;
inline bool CMsgTournamentItemEvent::has_event_team() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_event_team() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgTournamentItemEvent::clear_has_event_team() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgTournamentItemEvent::clear_event_team() {
  event_team_ = 0u;
  clear_has_event_team();
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::event_team() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.event_team)
  return event_team_;
}
inline void CMsgTournamentItemEvent::set_event_team(::google::protobuf::uint32 value) {
  set_has_event_team();
  event_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.event_team)
}

// optional uint32 multi_kill_count = 9;
inline bool CMsgTournamentItemEvent::has_multi_kill_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_multi_kill_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgTournamentItemEvent::clear_has_multi_kill_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgTournamentItemEvent::clear_multi_kill_count() {
  multi_kill_count_ = 0u;
  clear_has_multi_kill_count();
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::multi_kill_count() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.multi_kill_count)
  return multi_kill_count_;
}
inline void CMsgTournamentItemEvent::set_multi_kill_count(::google::protobuf::uint32 value) {
  set_has_multi_kill_count();
  multi_kill_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.multi_kill_count)
}

// optional uint32 winner_score = 10;
inline bool CMsgTournamentItemEvent::has_winner_score() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_winner_score() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgTournamentItemEvent::clear_has_winner_score() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgTournamentItemEvent::clear_winner_score() {
  winner_score_ = 0u;
  clear_has_winner_score();
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::winner_score() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.winner_score)
  return winner_score_;
}
inline void CMsgTournamentItemEvent::set_winner_score(::google::protobuf::uint32 value) {
  set_has_winner_score();
  winner_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.winner_score)
}

// optional uint32 loser_score = 11;
inline bool CMsgTournamentItemEvent::has_loser_score() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgTournamentItemEvent::set_has_loser_score() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgTournamentItemEvent::clear_has_loser_score() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgTournamentItemEvent::clear_loser_score() {
  loser_score_ = 0u;
  clear_has_loser_score();
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::loser_score() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.loser_score)
  return loser_score_;
}
inline void CMsgTournamentItemEvent::set_loser_score(::google::protobuf::uint32 value) {
  set_has_loser_score();
  loser_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEvent.loser_score)
}

// repeated .CProtoItemHeroStatue hero_statues = 12;
inline int CMsgTournamentItemEvent::hero_statues_size() const {
  return hero_statues_.size();
}
inline void CMsgTournamentItemEvent::clear_hero_statues() {
  hero_statues_.Clear();
}
inline const ::CProtoItemHeroStatue& CMsgTournamentItemEvent::hero_statues(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEvent.hero_statues)
  return hero_statues_.Get(index);
}
inline ::CProtoItemHeroStatue* CMsgTournamentItemEvent::mutable_hero_statues(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTournamentItemEvent.hero_statues)
  return hero_statues_.Mutable(index);
}
inline ::CProtoItemHeroStatue* CMsgTournamentItemEvent::add_hero_statues() {
  // @@protoc_insertion_point(field_add:CMsgTournamentItemEvent.hero_statues)
  return hero_statues_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CProtoItemHeroStatue >*
CMsgTournamentItemEvent::mutable_hero_statues() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTournamentItemEvent.hero_statues)
  return &hero_statues_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CProtoItemHeroStatue >&
CMsgTournamentItemEvent::hero_statues() const {
  // @@protoc_insertion_point(field_list:CMsgTournamentItemEvent.hero_statues)
  return hero_statues_;
}

// -------------------------------------------------------------------

// CMsgTournamentItemEventResponse

// optional .DOTA_TournamentEvents event_type = 1 [default = TE_FIRST_BLOOD];
inline bool CMsgTournamentItemEventResponse::has_event_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTournamentItemEventResponse::set_has_event_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTournamentItemEventResponse::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTournamentItemEventResponse::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::DOTA_TournamentEvents CMsgTournamentItemEventResponse::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEventResponse.event_type)
  return static_cast< ::DOTA_TournamentEvents >(event_type_);
}
inline void CMsgTournamentItemEventResponse::set_event_type(::DOTA_TournamentEvents value) {
  assert(::DOTA_TournamentEvents_IsValid(value));
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEventResponse.event_type)
}

// optional uint32 viewers_granted = 6;
inline bool CMsgTournamentItemEventResponse::has_viewers_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTournamentItemEventResponse::set_has_viewers_granted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTournamentItemEventResponse::clear_has_viewers_granted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTournamentItemEventResponse::clear_viewers_granted() {
  viewers_granted_ = 0u;
  clear_has_viewers_granted();
}
inline ::google::protobuf::uint32 CMsgTournamentItemEventResponse::viewers_granted() const {
  // @@protoc_insertion_point(field_get:CMsgTournamentItemEventResponse.viewers_granted)
  return viewers_granted_;
}
inline void CMsgTournamentItemEventResponse::set_viewers_granted(::google::protobuf::uint32 value) {
  set_has_viewers_granted();
  viewers_granted_ = value;
  // @@protoc_insertion_point(field_set:CMsgTournamentItemEventResponse.viewers_granted)
}

// -------------------------------------------------------------------

// CMsgTeamFanfare

// optional uint64 match_id = 1;
inline bool CMsgTeamFanfare::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTeamFanfare::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTeamFanfare::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTeamFanfare::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgTeamFanfare::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgTeamFanfare.match_id)
  return match_id_;
}
inline void CMsgTeamFanfare::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTeamFanfare.match_id)
}

// -------------------------------------------------------------------

// CMsgResponseTeamFanfare

// optional uint32 fanfare_goodguys = 1;
inline bool CMsgResponseTeamFanfare::has_fanfare_goodguys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgResponseTeamFanfare::set_has_fanfare_goodguys() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgResponseTeamFanfare::clear_has_fanfare_goodguys() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgResponseTeamFanfare::clear_fanfare_goodguys() {
  fanfare_goodguys_ = 0u;
  clear_has_fanfare_goodguys();
}
inline ::google::protobuf::uint32 CMsgResponseTeamFanfare::fanfare_goodguys() const {
  // @@protoc_insertion_point(field_get:CMsgResponseTeamFanfare.fanfare_goodguys)
  return fanfare_goodguys_;
}
inline void CMsgResponseTeamFanfare::set_fanfare_goodguys(::google::protobuf::uint32 value) {
  set_has_fanfare_goodguys();
  fanfare_goodguys_ = value;
  // @@protoc_insertion_point(field_set:CMsgResponseTeamFanfare.fanfare_goodguys)
}

// optional uint32 fanfare_badguys = 2;
inline bool CMsgResponseTeamFanfare::has_fanfare_badguys() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgResponseTeamFanfare::set_has_fanfare_badguys() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgResponseTeamFanfare::clear_has_fanfare_badguys() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgResponseTeamFanfare::clear_fanfare_badguys() {
  fanfare_badguys_ = 0u;
  clear_has_fanfare_badguys();
}
inline ::google::protobuf::uint32 CMsgResponseTeamFanfare::fanfare_badguys() const {
  // @@protoc_insertion_point(field_get:CMsgResponseTeamFanfare.fanfare_badguys)
  return fanfare_badguys_;
}
inline void CMsgResponseTeamFanfare::set_fanfare_badguys(::google::protobuf::uint32 value) {
  set_has_fanfare_badguys();
  fanfare_badguys_ = value;
  // @@protoc_insertion_point(field_set:CMsgResponseTeamFanfare.fanfare_badguys)
}

// -------------------------------------------------------------------

// CMsgGameServerUploadSaveGame

// optional uint32 game_time = 1;
inline bool CMsgGameServerUploadSaveGame::has_game_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerUploadSaveGame::set_has_game_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerUploadSaveGame::clear_has_game_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerUploadSaveGame::clear_game_time() {
  game_time_ = 0u;
  clear_has_game_time();
}
inline ::google::protobuf::uint32 CMsgGameServerUploadSaveGame::game_time() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerUploadSaveGame.game_time)
  return game_time_;
}
inline void CMsgGameServerUploadSaveGame::set_game_time(::google::protobuf::uint32 value) {
  set_has_game_time();
  game_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerUploadSaveGame.game_time)
}

// optional bytes save_game_data = 2;
inline bool CMsgGameServerUploadSaveGame::has_save_game_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerUploadSaveGame::set_has_save_game_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerUploadSaveGame::clear_has_save_game_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerUploadSaveGame::clear_save_game_data() {
  save_game_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_save_game_data();
}
inline const ::std::string& CMsgGameServerUploadSaveGame::save_game_data() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerUploadSaveGame.save_game_data)
  return save_game_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerUploadSaveGame::set_save_game_data(const ::std::string& value) {
  set_has_save_game_data();
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameServerUploadSaveGame.save_game_data)
}
inline void CMsgGameServerUploadSaveGame::set_save_game_data(const char* value) {
  set_has_save_game_data();
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameServerUploadSaveGame.save_game_data)
}
inline void CMsgGameServerUploadSaveGame::set_save_game_data(const void* value, size_t size) {
  set_has_save_game_data();
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerUploadSaveGame.save_game_data)
}
inline ::std::string* CMsgGameServerUploadSaveGame::mutable_save_game_data() {
  set_has_save_game_data();
  // @@protoc_insertion_point(field_mutable:CMsgGameServerUploadSaveGame.save_game_data)
  return save_game_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerUploadSaveGame::release_save_game_data() {
  clear_has_save_game_data();
  return save_game_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerUploadSaveGame::set_allocated_save_game_data(::std::string* save_game_data) {
  if (save_game_data != NULL) {
    set_has_save_game_data();
  } else {
    clear_has_save_game_data();
  }
  save_game_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_game_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerUploadSaveGame.save_game_data)
}

// optional uint64 lobby_id = 3;
inline bool CMsgGameServerUploadSaveGame::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerUploadSaveGame::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameServerUploadSaveGame::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameServerUploadSaveGame::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGameServerUploadSaveGame::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerUploadSaveGame.lobby_id)
  return lobby_id_;
}
inline void CMsgGameServerUploadSaveGame::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerUploadSaveGame.lobby_id)
}

// repeated uint64 player_steam_ids = 4;
inline int CMsgGameServerUploadSaveGame::player_steam_ids_size() const {
  return player_steam_ids_.size();
}
inline void CMsgGameServerUploadSaveGame::clear_player_steam_ids() {
  player_steam_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGameServerUploadSaveGame::player_steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameServerUploadSaveGame.player_steam_ids)
  return player_steam_ids_.Get(index);
}
inline void CMsgGameServerUploadSaveGame::set_player_steam_ids(int index, ::google::protobuf::uint64 value) {
  player_steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGameServerUploadSaveGame.player_steam_ids)
}
inline void CMsgGameServerUploadSaveGame::add_player_steam_ids(::google::protobuf::uint64 value) {
  player_steam_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGameServerUploadSaveGame.player_steam_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGameServerUploadSaveGame::player_steam_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGameServerUploadSaveGame.player_steam_ids)
  return player_steam_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGameServerUploadSaveGame::mutable_player_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameServerUploadSaveGame.player_steam_ids)
  return &player_steam_ids_;
}

// -------------------------------------------------------------------

// CMsgGameServerSaveGameResult

// optional .CMsgGameServerSaveGameResult.Result result = 1 [default = SaveSuccessful];
inline bool CMsgGameServerSaveGameResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerSaveGameResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerSaveGameResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerSaveGameResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::CMsgGameServerSaveGameResult_Result CMsgGameServerSaveGameResult::result() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerSaveGameResult.result)
  return static_cast< ::CMsgGameServerSaveGameResult_Result >(result_);
}
inline void CMsgGameServerSaveGameResult::set_result(::CMsgGameServerSaveGameResult_Result value) {
  assert(::CMsgGameServerSaveGameResult_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerSaveGameResult.result)
}

// -------------------------------------------------------------------

// CMsgGameServerGetLoadGame

// optional uint32 save_id = 1;
inline bool CMsgGameServerGetLoadGame::has_save_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerGetLoadGame::set_has_save_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerGetLoadGame::clear_has_save_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerGetLoadGame::clear_save_id() {
  save_id_ = 0u;
  clear_has_save_id();
}
inline ::google::protobuf::uint32 CMsgGameServerGetLoadGame::save_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerGetLoadGame.save_id)
  return save_id_;
}
inline void CMsgGameServerGetLoadGame::set_save_id(::google::protobuf::uint32 value) {
  set_has_save_id();
  save_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerGetLoadGame.save_id)
}

// -------------------------------------------------------------------

// CMsgGameServerGetLoadGameResult

// optional bytes save_game_data = 1;
inline bool CMsgGameServerGetLoadGameResult::has_save_game_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerGetLoadGameResult::set_has_save_game_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerGetLoadGameResult::clear_has_save_game_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerGetLoadGameResult::clear_save_game_data() {
  save_game_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_save_game_data();
}
inline const ::std::string& CMsgGameServerGetLoadGameResult::save_game_data() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerGetLoadGameResult.save_game_data)
  return save_game_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerGetLoadGameResult::set_save_game_data(const ::std::string& value) {
  set_has_save_game_data();
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameServerGetLoadGameResult.save_game_data)
}
inline void CMsgGameServerGetLoadGameResult::set_save_game_data(const char* value) {
  set_has_save_game_data();
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameServerGetLoadGameResult.save_game_data)
}
inline void CMsgGameServerGetLoadGameResult::set_save_game_data(const void* value, size_t size) {
  set_has_save_game_data();
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerGetLoadGameResult.save_game_data)
}
inline ::std::string* CMsgGameServerGetLoadGameResult::mutable_save_game_data() {
  set_has_save_game_data();
  // @@protoc_insertion_point(field_mutable:CMsgGameServerGetLoadGameResult.save_game_data)
  return save_game_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerGetLoadGameResult::release_save_game_data() {
  clear_has_save_game_data();
  return save_game_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerGetLoadGameResult::set_allocated_save_game_data(::std::string* save_game_data) {
  if (save_game_data != NULL) {
    set_has_save_game_data();
  } else {
    clear_has_save_game_data();
  }
  save_game_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_game_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerGetLoadGameResult.save_game_data)
}

// -------------------------------------------------------------------

// CMsgDOTAGenerateDiretidePrizeList

// optional uint32 prize_list = 1;
inline bool CMsgDOTAGenerateDiretidePrizeList::has_prize_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGenerateDiretidePrizeList::set_has_prize_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGenerateDiretidePrizeList::clear_has_prize_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGenerateDiretidePrizeList::clear_prize_list() {
  prize_list_ = 0u;
  clear_has_prize_list();
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeList::prize_list() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGenerateDiretidePrizeList.prize_list)
  return prize_list_;
}
inline void CMsgDOTAGenerateDiretidePrizeList::set_prize_list(::google::protobuf::uint32 value) {
  set_has_prize_list();
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGenerateDiretidePrizeList.prize_list)
}

// optional uint32 highest_roshan_level = 2;
inline bool CMsgDOTAGenerateDiretidePrizeList::has_highest_roshan_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGenerateDiretidePrizeList::set_has_highest_roshan_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGenerateDiretidePrizeList::clear_has_highest_roshan_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGenerateDiretidePrizeList::clear_highest_roshan_level() {
  highest_roshan_level_ = 0u;
  clear_has_highest_roshan_level();
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeList::highest_roshan_level() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGenerateDiretidePrizeList.highest_roshan_level)
  return highest_roshan_level_;
}
inline void CMsgDOTAGenerateDiretidePrizeList::set_highest_roshan_level(::google::protobuf::uint32 value) {
  set_has_highest_roshan_level();
  highest_roshan_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGenerateDiretidePrizeList.highest_roshan_level)
}

// -------------------------------------------------------------------

// CMsgDOTAGenerateDiretidePrizeListResponse

// repeated uint32 item_defs = 1;
inline int CMsgDOTAGenerateDiretidePrizeListResponse::item_defs_size() const {
  return item_defs_.size();
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::clear_item_defs() {
  item_defs_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeListResponse::item_defs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
  return item_defs_.Get(index);
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::set_item_defs(int index, ::google::protobuf::uint32 value) {
  item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::add_item_defs(::google::protobuf::uint32 value) {
  item_defs_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAGenerateDiretidePrizeListResponse::item_defs() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
  return item_defs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAGenerateDiretidePrizeListResponse::mutable_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
  return &item_defs_;
}

// repeated fixed64 steam_ids = 2;
inline int CMsgDOTAGenerateDiretidePrizeListResponse::steam_ids_size() const {
  return steam_ids_.size();
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::clear_steam_ids() {
  steam_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAGenerateDiretidePrizeListResponse::steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
  return steam_ids_.Get(index);
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::set_steam_ids(int index, ::google::protobuf::uint64 value) {
  steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::add_steam_ids(::google::protobuf::uint64 value) {
  steam_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAGenerateDiretidePrizeListResponse::steam_ids() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
  return steam_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAGenerateDiretidePrizeListResponse::mutable_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
  return &steam_ids_;
}

// optional uint32 prize_list = 3;
inline bool CMsgDOTAGenerateDiretidePrizeListResponse::has_prize_list() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::set_has_prize_list() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::clear_has_prize_list() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::clear_prize_list() {
  prize_list_ = 0u;
  clear_has_prize_list();
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeListResponse::prize_list() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAGenerateDiretidePrizeListResponse.prize_list)
  return prize_list_;
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::set_prize_list(::google::protobuf::uint32 value) {
  set_has_prize_list();
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAGenerateDiretidePrizeListResponse.prize_list)
}

// -------------------------------------------------------------------

// CMsgDOTARewardDiretidePrizes

// optional uint32 team = 1;
inline bool CMsgDOTARewardDiretidePrizes::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARewardDiretidePrizes::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARewardDiretidePrizes::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARewardDiretidePrizes::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CMsgDOTARewardDiretidePrizes::team() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARewardDiretidePrizes.team)
  return team_;
}
inline void CMsgDOTARewardDiretidePrizes::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARewardDiretidePrizes.team)
}

// optional uint32 prize_list = 2;
inline bool CMsgDOTARewardDiretidePrizes::has_prize_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARewardDiretidePrizes::set_has_prize_list() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARewardDiretidePrizes::clear_has_prize_list() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARewardDiretidePrizes::clear_prize_list() {
  prize_list_ = 0u;
  clear_has_prize_list();
}
inline ::google::protobuf::uint32 CMsgDOTARewardDiretidePrizes::prize_list() const {
  // @@protoc_insertion_point(field_get:CMsgDOTARewardDiretidePrizes.prize_list)
  return prize_list_;
}
inline void CMsgDOTARewardDiretidePrizes::set_prize_list(::google::protobuf::uint32 value) {
  set_has_prize_list();
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTARewardDiretidePrizes.prize_list)
}

// -------------------------------------------------------------------

// CMsgDOTADiretidePrizesRewardedResponse

// optional uint32 prize_list = 1;
inline bool CMsgDOTADiretidePrizesRewardedResponse::has_prize_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTADiretidePrizesRewardedResponse::set_has_prize_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTADiretidePrizesRewardedResponse::clear_has_prize_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTADiretidePrizesRewardedResponse::clear_prize_list() {
  prize_list_ = 0u;
  clear_has_prize_list();
}
inline ::google::protobuf::uint32 CMsgDOTADiretidePrizesRewardedResponse::prize_list() const {
  // @@protoc_insertion_point(field_get:CMsgDOTADiretidePrizesRewardedResponse.prize_list)
  return prize_list_;
}
inline void CMsgDOTADiretidePrizesRewardedResponse::set_prize_list(::google::protobuf::uint32 value) {
  set_has_prize_list();
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTADiretidePrizesRewardedResponse.prize_list)
}

// -------------------------------------------------------------------

// CMsgDOTAAwardEventPoints_AwardPoints

// optional uint32 account_id = 1;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAAwardEventPoints_AwardPoints::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAwardEventPoints.AwardPoints.account_id)
  return account_id_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAwardEventPoints.AwardPoints.account_id)
}

// optional int32 points = 2;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_has_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_has_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_points() {
  points_ = 0;
  clear_has_points();
}
inline ::google::protobuf::int32 CMsgDOTAAwardEventPoints_AwardPoints::points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAwardEventPoints.AwardPoints.points)
  return points_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_points(::google::protobuf::int32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAwardEventPoints.AwardPoints.points)
}

// optional int32 premium_points = 3;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_premium_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_has_premium_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_has_premium_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_premium_points() {
  premium_points_ = 0;
  clear_has_premium_points();
}
inline ::google::protobuf::int32 CMsgDOTAAwardEventPoints_AwardPoints::premium_points() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAwardEventPoints.AwardPoints.premium_points)
  return premium_points_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_premium_points(::google::protobuf::int32 value) {
  set_has_premium_points();
  premium_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAwardEventPoints.AwardPoints.premium_points)
}

// optional uint32 trade_ban_time = 5;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_trade_ban_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_has_trade_ban_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_has_trade_ban_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_trade_ban_time() {
  trade_ban_time_ = 0u;
  clear_has_trade_ban_time();
}
inline ::google::protobuf::uint32 CMsgDOTAAwardEventPoints_AwardPoints::trade_ban_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAwardEventPoints.AwardPoints.trade_ban_time)
  return trade_ban_time_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_trade_ban_time(::google::protobuf::uint32 value) {
  set_has_trade_ban_time();
  trade_ban_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAwardEventPoints.AwardPoints.trade_ban_time)
}

// -------------------------------------------------------------------

// CMsgDOTAAwardEventPoints

// repeated .CMsgDOTAAwardEventPoints.AwardPoints award_points = 1;
inline int CMsgDOTAAwardEventPoints::award_points_size() const {
  return award_points_.size();
}
inline void CMsgDOTAAwardEventPoints::clear_award_points() {
  award_points_.Clear();
}
inline const ::CMsgDOTAAwardEventPoints_AwardPoints& CMsgDOTAAwardEventPoints::award_points(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAwardEventPoints.award_points)
  return award_points_.Get(index);
}
inline ::CMsgDOTAAwardEventPoints_AwardPoints* CMsgDOTAAwardEventPoints::mutable_award_points(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAAwardEventPoints.award_points)
  return award_points_.Mutable(index);
}
inline ::CMsgDOTAAwardEventPoints_AwardPoints* CMsgDOTAAwardEventPoints::add_award_points() {
  // @@protoc_insertion_point(field_add:CMsgDOTAAwardEventPoints.award_points)
  return award_points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAwardEventPoints_AwardPoints >*
CMsgDOTAAwardEventPoints::mutable_award_points() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAAwardEventPoints.award_points)
  return &award_points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAAwardEventPoints_AwardPoints >&
CMsgDOTAAwardEventPoints::award_points() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAAwardEventPoints.award_points)
  return award_points_;
}

// optional uint64 match_id = 2;
inline bool CMsgDOTAAwardEventPoints::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAAwardEventPoints::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAAwardEventPoints::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAAwardEventPoints::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAAwardEventPoints::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAwardEventPoints.match_id)
  return match_id_;
}
inline void CMsgDOTAAwardEventPoints::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAwardEventPoints.match_id)
}

// optional uint32 event_id = 4;
inline bool CMsgDOTAAwardEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAAwardEventPoints::set_has_event_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAAwardEventPoints::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAAwardEventPoints::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAAwardEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAAwardEventPoints.event_id)
  return event_id_;
}
inline void CMsgDOTAAwardEventPoints::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAAwardEventPoints.event_id)
}

// -------------------------------------------------------------------

// CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops

// optional string loot_list = 1;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::has_loot_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_has_loot_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_has_loot_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_loot_list() {
  loot_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loot_list();
}
inline const ::std::string& CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::loot_list() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
  return loot_list_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_loot_list(const ::std::string& value) {
  set_has_loot_list();
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_loot_list(const char* value) {
  set_has_loot_list();
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_loot_list(const char* value, size_t size) {
  set_has_loot_list();
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}
inline ::std::string* CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::mutable_loot_list() {
  set_has_loot_list();
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
  return loot_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::release_loot_list() {
  clear_has_loot_list();
  return loot_list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_allocated_loot_list(::std::string* loot_list) {
  if (loot_list != NULL) {
    set_has_loot_list();
  } else {
    clear_has_loot_list();
  }
  loot_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loot_list);
  // @@protoc_insertion_point(field_set_allocated:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}

// repeated uint32 player_account_ids = 2;
inline int CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::player_account_ids_size() const {
  return player_account_ids_.size();
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_player_account_ids() {
  player_account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::player_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
  return player_account_ids_.Get(index);
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_player_account_ids(int index, ::google::protobuf::uint32 value) {
  player_account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::add_player_account_ids(::google::protobuf::uint32 value) {
  player_account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::player_account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
  return player_account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::mutable_player_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
  return &player_account_ids_;
}

// optional bool no_trade = 3;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::has_no_trade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_has_no_trade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_has_no_trade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_no_trade() {
  no_trade_ = false;
  clear_has_no_trade();
}
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::no_trade() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.no_trade)
  return no_trade_;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_no_trade(bool value) {
  set_has_no_trade();
  no_trade_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.no_trade)
}

// optional bool randomize_reward = 4;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::has_randomize_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_has_randomize_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_has_randomize_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_randomize_reward() {
  randomize_reward_ = false;
  clear_has_randomize_reward();
}
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::randomize_reward() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.randomize_reward)
  return randomize_reward_;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_randomize_reward(bool value) {
  set_has_randomize_reward();
  randomize_reward_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.randomize_reward)
}

// -------------------------------------------------------------------

// CMsgServerToGCSignoutAwardAdditionalDrops

// repeated .CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops drops = 1;
inline int CMsgServerToGCSignoutAwardAdditionalDrops::drops_size() const {
  return drops_.size();
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::clear_drops() {
  drops_.Clear();
}
inline const ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& CMsgServerToGCSignoutAwardAdditionalDrops::drops(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_.Get(index);
}
inline ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* CMsgServerToGCSignoutAwardAdditionalDrops::mutable_drops(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_.Mutable(index);
}
inline ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* CMsgServerToGCSignoutAwardAdditionalDrops::add_drops() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >*
CMsgServerToGCSignoutAwardAdditionalDrops::mutable_drops() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return &drops_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >&
CMsgServerToGCSignoutAwardAdditionalDrops::drops() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_;
}

// optional uint64 match_id = 2;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgServerToGCSignoutAwardAdditionalDrops::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCSignoutAwardAdditionalDrops.match_id)
  return match_id_;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCSignoutAwardAdditionalDrops.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateTI4HeroQuest_Player

// optional uint32 account_id = 1;
inline bool CMsgDOTAUpdateTI4HeroQuest_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAUpdateTI4HeroQuest_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAUpdateTI4HeroQuest.Player.account_id)
  return account_id_;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAUpdateTI4HeroQuest.Player.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAUpdateTI4HeroQuest_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAUpdateTI4HeroQuest_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAUpdateTI4HeroQuest.Player.hero_id)
  return hero_id_;
}
inline void CMsgDOTAUpdateTI4HeroQuest_Player::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAUpdateTI4HeroQuest.Player.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateTI4HeroQuest

// repeated .CMsgDOTAUpdateTI4HeroQuest.Player players = 1;
inline int CMsgDOTAUpdateTI4HeroQuest::players_size() const {
  return players_.size();
}
inline void CMsgDOTAUpdateTI4HeroQuest::clear_players() {
  players_.Clear();
}
inline const ::CMsgDOTAUpdateTI4HeroQuest_Player& CMsgDOTAUpdateTI4HeroQuest::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAUpdateTI4HeroQuest.players)
  return players_.Get(index);
}
inline ::CMsgDOTAUpdateTI4HeroQuest_Player* CMsgDOTAUpdateTI4HeroQuest::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAUpdateTI4HeroQuest.players)
  return players_.Mutable(index);
}
inline ::CMsgDOTAUpdateTI4HeroQuest_Player* CMsgDOTAUpdateTI4HeroQuest::add_players() {
  // @@protoc_insertion_point(field_add:CMsgDOTAUpdateTI4HeroQuest.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAUpdateTI4HeroQuest_Player >*
CMsgDOTAUpdateTI4HeroQuest::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAUpdateTI4HeroQuest.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAUpdateTI4HeroQuest_Player >&
CMsgDOTAUpdateTI4HeroQuest::players() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAUpdateTI4HeroQuest.players)
  return players_;
}

// optional fixed32 match_start_time = 2;
inline bool CMsgDOTAUpdateTI4HeroQuest::has_match_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAUpdateTI4HeroQuest::set_has_match_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAUpdateTI4HeroQuest::clear_has_match_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAUpdateTI4HeroQuest::clear_match_start_time() {
  match_start_time_ = 0u;
  clear_has_match_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTAUpdateTI4HeroQuest::match_start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAUpdateTI4HeroQuest.match_start_time)
  return match_start_time_;
}
inline void CMsgDOTAUpdateTI4HeroQuest::set_match_start_time(::google::protobuf::uint32 value) {
  set_has_match_start_time();
  match_start_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAUpdateTI4HeroQuest.match_start_time)
}

// optional uint64 match_id = 3;
inline bool CMsgDOTAUpdateTI4HeroQuest::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAUpdateTI4HeroQuest::set_has_match_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAUpdateTI4HeroQuest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAUpdateTI4HeroQuest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAUpdateTI4HeroQuest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAUpdateTI4HeroQuest.match_id)
  return match_id_;
}
inline void CMsgDOTAUpdateTI4HeroQuest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAUpdateTI4HeroQuest.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTAFrostivusTimeElapsed_User

// optional uint32 account_id = 1;
inline bool CMsgDOTAFrostivusTimeElapsed_User::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFrostivusTimeElapsed_User::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFrostivusTimeElapsed.User.account_id)
  return account_id_;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFrostivusTimeElapsed.User.account_id)
}

// optional uint32 time_elapsed_s = 2;
inline bool CMsgDOTAFrostivusTimeElapsed_User::has_time_elapsed_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::set_has_time_elapsed_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::clear_has_time_elapsed_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::clear_time_elapsed_s() {
  time_elapsed_s_ = 0u;
  clear_has_time_elapsed_s();
}
inline ::google::protobuf::uint32 CMsgDOTAFrostivusTimeElapsed_User::time_elapsed_s() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFrostivusTimeElapsed.User.time_elapsed_s)
  return time_elapsed_s_;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::set_time_elapsed_s(::google::protobuf::uint32 value) {
  set_has_time_elapsed_s();
  time_elapsed_s_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFrostivusTimeElapsed.User.time_elapsed_s)
}

// -------------------------------------------------------------------

// CMsgDOTAFrostivusTimeElapsed

// optional uint32 seconds = 1;
inline bool CMsgDOTAFrostivusTimeElapsed::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_seconds() {
  seconds_ = 0u;
  clear_has_seconds();
}
inline ::google::protobuf::uint32 CMsgDOTAFrostivusTimeElapsed::seconds() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFrostivusTimeElapsed.seconds)
  return seconds_;
}
inline void CMsgDOTAFrostivusTimeElapsed::set_seconds(::google::protobuf::uint32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFrostivusTimeElapsed.seconds)
}

// repeated .CMsgDOTAFrostivusTimeElapsed.User users = 2;
inline int CMsgDOTAFrostivusTimeElapsed::users_size() const {
  return users_.size();
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_users() {
  users_.Clear();
}
inline const ::CMsgDOTAFrostivusTimeElapsed_User& CMsgDOTAFrostivusTimeElapsed::users(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFrostivusTimeElapsed.users)
  return users_.Get(index);
}
inline ::CMsgDOTAFrostivusTimeElapsed_User* CMsgDOTAFrostivusTimeElapsed::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDOTAFrostivusTimeElapsed.users)
  return users_.Mutable(index);
}
inline ::CMsgDOTAFrostivusTimeElapsed_User* CMsgDOTAFrostivusTimeElapsed::add_users() {
  // @@protoc_insertion_point(field_add:CMsgDOTAFrostivusTimeElapsed.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFrostivusTimeElapsed_User >*
CMsgDOTAFrostivusTimeElapsed::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTAFrostivusTimeElapsed.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAFrostivusTimeElapsed_User >&
CMsgDOTAFrostivusTimeElapsed::users() const {
  // @@protoc_insertion_point(field_list:CMsgDOTAFrostivusTimeElapsed.users)
  return users_;
}

// optional uint64 match_id = 3;
inline bool CMsgDOTAFrostivusTimeElapsed::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed::set_has_match_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAFrostivusTimeElapsed::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDOTAFrostivusTimeElapsed.match_id)
  return match_id_;
}
inline void CMsgDOTAFrostivusTimeElapsed::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgDOTAFrostivusTimeElapsed.match_id)
}

// -------------------------------------------------------------------

// CMsgGCToServerPingRequest

// optional fixed64 request_id = 1;
inline bool CMsgGCToServerPingRequest::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPingRequest::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToServerPingRequest::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToServerPingRequest::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::uint64 CMsgGCToServerPingRequest::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPingRequest.request_id)
  return request_id_;
}
inline void CMsgGCToServerPingRequest::set_request_id(::google::protobuf::uint64 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPingRequest.request_id)
}

// optional uint64 request_time = 2;
inline bool CMsgGCToServerPingRequest::has_request_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPingRequest::set_has_request_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToServerPingRequest::clear_has_request_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToServerPingRequest::clear_request_time() {
  request_time_ = GOOGLE_ULONGLONG(0);
  clear_has_request_time();
}
inline ::google::protobuf::uint64 CMsgGCToServerPingRequest::request_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPingRequest.request_time)
  return request_time_;
}
inline void CMsgGCToServerPingRequest::set_request_time(::google::protobuf::uint64 value) {
  set_has_request_time();
  request_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPingRequest.request_time)
}

// -------------------------------------------------------------------

// CMsgGCToServerPingResponse

// optional fixed64 request_id = 1;
inline bool CMsgGCToServerPingResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPingResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToServerPingResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToServerPingResponse::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::uint64 CMsgGCToServerPingResponse::request_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPingResponse.request_id)
  return request_id_;
}
inline void CMsgGCToServerPingResponse::set_request_id(::google::protobuf::uint64 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPingResponse.request_id)
}

// optional uint64 request_time = 2;
inline bool CMsgGCToServerPingResponse::has_request_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPingResponse::set_has_request_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToServerPingResponse::clear_has_request_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToServerPingResponse::clear_request_time() {
  request_time_ = GOOGLE_ULONGLONG(0);
  clear_has_request_time();
}
inline ::google::protobuf::uint64 CMsgGCToServerPingResponse::request_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPingResponse.request_time)
  return request_time_;
}
inline void CMsgGCToServerPingResponse::set_request_time(::google::protobuf::uint64 value) {
  set_has_request_time();
  request_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPingResponse.request_time)
}

// optional uint32 cluster = 3;
inline bool CMsgGCToServerPingResponse::has_cluster() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToServerPingResponse::set_has_cluster() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToServerPingResponse::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToServerPingResponse::clear_cluster() {
  cluster_ = 0u;
  clear_has_cluster();
}
inline ::google::protobuf::uint32 CMsgGCToServerPingResponse::cluster() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPingResponse.cluster)
  return cluster_;
}
inline void CMsgGCToServerPingResponse::set_cluster(::google::protobuf::uint32 value) {
  set_has_cluster();
  cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPingResponse.cluster)
}

// -------------------------------------------------------------------

// CMsgGCToServerConsoleCommand

// optional string console_command = 1;
inline bool CMsgGCToServerConsoleCommand::has_console_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerConsoleCommand::set_has_console_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToServerConsoleCommand::clear_has_console_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToServerConsoleCommand::clear_console_command() {
  console_command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_console_command();
}
inline const ::std::string& CMsgGCToServerConsoleCommand::console_command() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerConsoleCommand.console_command)
  return console_command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToServerConsoleCommand::set_console_command(const ::std::string& value) {
  set_has_console_command();
  console_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCToServerConsoleCommand.console_command)
}
inline void CMsgGCToServerConsoleCommand::set_console_command(const char* value) {
  set_has_console_command();
  console_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCToServerConsoleCommand.console_command)
}
inline void CMsgGCToServerConsoleCommand::set_console_command(const char* value, size_t size) {
  set_has_console_command();
  console_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToServerConsoleCommand.console_command)
}
inline ::std::string* CMsgGCToServerConsoleCommand::mutable_console_command() {
  set_has_console_command();
  // @@protoc_insertion_point(field_mutable:CMsgGCToServerConsoleCommand.console_command)
  return console_command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToServerConsoleCommand::release_console_command() {
  clear_has_console_command();
  return console_command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToServerConsoleCommand::set_allocated_console_command(::std::string* console_command) {
  if (console_command != NULL) {
    set_has_console_command();
  } else {
    clear_has_console_command();
  }
  console_command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), console_command);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToServerConsoleCommand.console_command)
}

// -------------------------------------------------------------------

// CMsgServerGetEventPoints

// optional uint32 event_id = 1;
inline bool CMsgServerGetEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGetEventPoints::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerGetEventPoints::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerGetEventPoints::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgServerGetEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerGetEventPoints.event_id)
  return event_id_;
}
inline void CMsgServerGetEventPoints::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGetEventPoints.event_id)
}

// repeated uint32 account_id = 2;
inline int CMsgServerGetEventPoints::account_id_size() const {
  return account_id_.size();
}
inline void CMsgServerGetEventPoints::clear_account_id() {
  account_id_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerGetEventPoints::account_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerGetEventPoints.account_id)
  return account_id_.Get(index);
}
inline void CMsgServerGetEventPoints::set_account_id(int index, ::google::protobuf::uint32 value) {
  account_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgServerGetEventPoints.account_id)
}
inline void CMsgServerGetEventPoints::add_account_id(::google::protobuf::uint32 value) {
  account_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgServerGetEventPoints.account_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerGetEventPoints::account_id() const {
  // @@protoc_insertion_point(field_list:CMsgServerGetEventPoints.account_id)
  return account_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerGetEventPoints::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerGetEventPoints.account_id)
  return &account_id_;
}

// -------------------------------------------------------------------

// CMsgServerGetEventPointsResponse_Points

// optional uint32 account_id = 1;
inline bool CMsgServerGetEventPointsResponse_Points::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGetEventPointsResponse_Points::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerGetEventPointsResponse_Points::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerGetEventPointsResponse.Points.account_id)
  return account_id_;
}
inline void CMsgServerGetEventPointsResponse_Points::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGetEventPointsResponse.Points.account_id)
}

// optional uint32 points_total = 2;
inline bool CMsgServerGetEventPointsResponse_Points::has_points_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerGetEventPointsResponse_Points::set_has_points_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_has_points_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_points_total() {
  points_total_ = 0u;
  clear_has_points_total();
}
inline ::google::protobuf::uint32 CMsgServerGetEventPointsResponse_Points::points_total() const {
  // @@protoc_insertion_point(field_get:CMsgServerGetEventPointsResponse.Points.points_total)
  return points_total_;
}
inline void CMsgServerGetEventPointsResponse_Points::set_points_total(::google::protobuf::uint32 value) {
  set_has_points_total();
  points_total_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGetEventPointsResponse.Points.points_total)
}

// optional bool owned = 4;
inline bool CMsgServerGetEventPointsResponse_Points::has_owned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerGetEventPointsResponse_Points::set_has_owned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_has_owned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_owned() {
  owned_ = false;
  clear_has_owned();
}
inline bool CMsgServerGetEventPointsResponse_Points::owned() const {
  // @@protoc_insertion_point(field_get:CMsgServerGetEventPointsResponse.Points.owned)
  return owned_;
}
inline void CMsgServerGetEventPointsResponse_Points::set_owned(bool value) {
  set_has_owned();
  owned_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGetEventPointsResponse.Points.owned)
}

// -------------------------------------------------------------------

// CMsgServerGetEventPointsResponse

// optional uint32 event_id = 1;
inline bool CMsgServerGetEventPointsResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGetEventPointsResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerGetEventPointsResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerGetEventPointsResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgServerGetEventPointsResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerGetEventPointsResponse.event_id)
  return event_id_;
}
inline void CMsgServerGetEventPointsResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGetEventPointsResponse.event_id)
}

// repeated .CMsgServerGetEventPointsResponse.Points points = 2;
inline int CMsgServerGetEventPointsResponse::points_size() const {
  return points_.size();
}
inline void CMsgServerGetEventPointsResponse::clear_points() {
  points_.Clear();
}
inline const ::CMsgServerGetEventPointsResponse_Points& CMsgServerGetEventPointsResponse::points(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerGetEventPointsResponse.points)
  return points_.Get(index);
}
inline ::CMsgServerGetEventPointsResponse_Points* CMsgServerGetEventPointsResponse::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerGetEventPointsResponse.points)
  return points_.Mutable(index);
}
inline ::CMsgServerGetEventPointsResponse_Points* CMsgServerGetEventPointsResponse::add_points() {
  // @@protoc_insertion_point(field_add:CMsgServerGetEventPointsResponse.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerGetEventPointsResponse_Points >*
CMsgServerGetEventPointsResponse::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerGetEventPointsResponse.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerGetEventPointsResponse_Points >&
CMsgServerGetEventPointsResponse::points() const {
  // @@protoc_insertion_point(field_list:CMsgServerGetEventPointsResponse.points)
  return points_;
}

// -------------------------------------------------------------------

// CMsgServerGrantSurveyPermission_Survey

// optional uint32 account_id = 1;
inline bool CMsgServerGrantSurveyPermission_Survey::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermission_Survey::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermission.Survey.account_id)
  return account_id_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGrantSurveyPermission.Survey.account_id)
}

// optional uint32 question_id = 2;
inline bool CMsgServerGrantSurveyPermission_Survey::has_question_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_has_question_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_has_question_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_question_id() {
  question_id_ = 0u;
  clear_has_question_id();
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermission_Survey::question_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermission.Survey.question_id)
  return question_id_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_question_id(::google::protobuf::uint32 value) {
  set_has_question_id();
  question_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGrantSurveyPermission.Survey.question_id)
}

// optional uint32 expire_time = 3;
inline bool CMsgServerGrantSurveyPermission_Survey::has_expire_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_has_expire_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_expire_time() {
  expire_time_ = 0u;
  clear_has_expire_time();
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermission_Survey::expire_time() const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermission.Survey.expire_time)
  return expire_time_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_expire_time(::google::protobuf::uint32 value) {
  set_has_expire_time();
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGrantSurveyPermission.Survey.expire_time)
}

// optional uint64 survey_key = 4;
inline bool CMsgServerGrantSurveyPermission_Survey::has_survey_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_has_survey_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_has_survey_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_survey_key() {
  survey_key_ = GOOGLE_ULONGLONG(0);
  clear_has_survey_key();
}
inline ::google::protobuf::uint64 CMsgServerGrantSurveyPermission_Survey::survey_key() const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermission.Survey.survey_key)
  return survey_key_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_survey_key(::google::protobuf::uint64 value) {
  set_has_survey_key();
  survey_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGrantSurveyPermission.Survey.survey_key)
}

// optional uint64 extra_data = 5;
inline bool CMsgServerGrantSurveyPermission_Survey::has_extra_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_has_extra_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_has_extra_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_extra_data() {
  extra_data_ = GOOGLE_ULONGLONG(0);
  clear_has_extra_data();
}
inline ::google::protobuf::uint64 CMsgServerGrantSurveyPermission_Survey::extra_data() const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermission.Survey.extra_data)
  return extra_data_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_extra_data(::google::protobuf::uint64 value) {
  set_has_extra_data();
  extra_data_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGrantSurveyPermission.Survey.extra_data)
}

// optional uint64 extra_data_32 = 6;
inline bool CMsgServerGrantSurveyPermission_Survey::has_extra_data_32() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_has_extra_data_32() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_has_extra_data_32() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_extra_data_32() {
  extra_data_32_ = GOOGLE_ULONGLONG(0);
  clear_has_extra_data_32();
}
inline ::google::protobuf::uint64 CMsgServerGrantSurveyPermission_Survey::extra_data_32() const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermission.Survey.extra_data_32)
  return extra_data_32_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_extra_data_32(::google::protobuf::uint64 value) {
  set_has_extra_data_32();
  extra_data_32_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGrantSurveyPermission.Survey.extra_data_32)
}

// -------------------------------------------------------------------

// CMsgServerGrantSurveyPermission

// repeated .CMsgServerGrantSurveyPermission.Survey surveys = 1;
inline int CMsgServerGrantSurveyPermission::surveys_size() const {
  return surveys_.size();
}
inline void CMsgServerGrantSurveyPermission::clear_surveys() {
  surveys_.Clear();
}
inline const ::CMsgServerGrantSurveyPermission_Survey& CMsgServerGrantSurveyPermission::surveys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermission.surveys)
  return surveys_.Get(index);
}
inline ::CMsgServerGrantSurveyPermission_Survey* CMsgServerGrantSurveyPermission::mutable_surveys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerGrantSurveyPermission.surveys)
  return surveys_.Mutable(index);
}
inline ::CMsgServerGrantSurveyPermission_Survey* CMsgServerGrantSurveyPermission::add_surveys() {
  // @@protoc_insertion_point(field_add:CMsgServerGrantSurveyPermission.surveys)
  return surveys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerGrantSurveyPermission_Survey >*
CMsgServerGrantSurveyPermission::mutable_surveys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerGrantSurveyPermission.surveys)
  return &surveys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerGrantSurveyPermission_Survey >&
CMsgServerGrantSurveyPermission::surveys() const {
  // @@protoc_insertion_point(field_list:CMsgServerGrantSurveyPermission.surveys)
  return surveys_;
}

// -------------------------------------------------------------------

// CMsgServerGrantSurveyPermissionResponse

// optional uint32 result = 1;
inline bool CMsgServerGrantSurveyPermissionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGrantSurveyPermissionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerGrantSurveyPermissionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerGrantSurveyPermissionResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermissionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgServerGrantSurveyPermissionResponse.result)
  return result_;
}
inline void CMsgServerGrantSurveyPermissionResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGrantSurveyPermissionResponse.result)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchConnectionStats_Player

// optional uint32 account_id = 1;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.Player.account_id)
  return account_id_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.Player.account_id)
}

// optional fixed32 ip = 2;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::ip() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.Player.ip)
  return ip_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.Player.ip)
}

// optional uint32 avg_ping_ms = 3;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_avg_ping_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_has_avg_ping_ms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_has_avg_ping_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_avg_ping_ms() {
  avg_ping_ms_ = 0u;
  clear_has_avg_ping_ms();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::avg_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.Player.avg_ping_ms)
  return avg_ping_ms_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_avg_ping_ms(::google::protobuf::uint32 value) {
  set_has_avg_ping_ms();
  avg_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.Player.avg_ping_ms)
}

// optional float packet_loss = 5;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_packet_loss() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_has_packet_loss() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_has_packet_loss() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_packet_loss() {
  packet_loss_ = 0;
  clear_has_packet_loss();
}
inline float CMsgServerToGCMatchConnectionStats_Player::packet_loss() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.Player.packet_loss)
  return packet_loss_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_packet_loss(float value) {
  set_has_packet_loss();
  packet_loss_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.Player.packet_loss)
}

// optional float ping_deviation = 6;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_ping_deviation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_has_ping_deviation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_has_ping_deviation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_ping_deviation() {
  ping_deviation_ = 0;
  clear_has_ping_deviation();
}
inline float CMsgServerToGCMatchConnectionStats_Player::ping_deviation() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.Player.ping_deviation)
  return ping_deviation_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_ping_deviation(float value) {
  set_has_ping_deviation();
  ping_deviation_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.Player.ping_deviation)
}

// optional uint32 full_resends = 7;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_full_resends() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_has_full_resends() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_has_full_resends() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_full_resends() {
  full_resends_ = 0u;
  clear_has_full_resends();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::full_resends() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.Player.full_resends)
  return full_resends_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_full_resends(::google::protobuf::uint32 value) {
  set_has_full_resends();
  full_resends_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.Player.full_resends)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchConnectionStats

// optional uint64 match_id = 1;
inline bool CMsgServerToGCMatchConnectionStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgServerToGCMatchConnectionStats::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.match_id)
  return match_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.match_id)
}

// optional uint32 region_id = 2;
inline bool CMsgServerToGCMatchConnectionStats::has_region_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::set_has_region_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_region_id() {
  region_id_ = 0u;
  clear_has_region_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats::region_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.region_id)
  return region_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_region_id(::google::protobuf::uint32 value) {
  set_has_region_id();
  region_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.region_id)
}

// optional uint32 league_id = 3;
inline bool CMsgServerToGCMatchConnectionStats::has_league_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::set_has_league_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats::league_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.league_id)
  return league_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.league_id)
}

// repeated .CMsgServerToGCMatchConnectionStats.Player players = 4;
inline int CMsgServerToGCMatchConnectionStats::players_size() const {
  return players_.size();
}
inline void CMsgServerToGCMatchConnectionStats::clear_players() {
  players_.Clear();
}
inline const ::CMsgServerToGCMatchConnectionStats_Player& CMsgServerToGCMatchConnectionStats::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.players)
  return players_.Get(index);
}
inline ::CMsgServerToGCMatchConnectionStats_Player* CMsgServerToGCMatchConnectionStats::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCMatchConnectionStats.players)
  return players_.Mutable(index);
}
inline ::CMsgServerToGCMatchConnectionStats_Player* CMsgServerToGCMatchConnectionStats::add_players() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCMatchConnectionStats.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCMatchConnectionStats_Player >*
CMsgServerToGCMatchConnectionStats::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCMatchConnectionStats.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCMatchConnectionStats_Player >&
CMsgServerToGCMatchConnectionStats::players() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCMatchConnectionStats.players)
  return players_;
}

// optional uint32 cluster_id = 5;
inline bool CMsgServerToGCMatchConnectionStats::has_cluster_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::set_has_cluster_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_has_cluster_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgServerToGCMatchConnectionStats::clear_cluster_id() {
  cluster_id_ = 0u;
  clear_has_cluster_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats::cluster_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCMatchConnectionStats.cluster_id)
  return cluster_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_cluster_id(::google::protobuf::uint32 value) {
  set_has_cluster_id();
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCMatchConnectionStats.cluster_id)
}

// -------------------------------------------------------------------

// CMsgServerGCUpdateSpectatorCount

// optional uint32 spectator_count = 1;
inline bool CMsgServerGCUpdateSpectatorCount::has_spectator_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGCUpdateSpectatorCount::set_has_spectator_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerGCUpdateSpectatorCount::clear_has_spectator_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerGCUpdateSpectatorCount::clear_spectator_count() {
  spectator_count_ = 0u;
  clear_has_spectator_count();
}
inline ::google::protobuf::uint32 CMsgServerGCUpdateSpectatorCount::spectator_count() const {
  // @@protoc_insertion_point(field_get:CMsgServerGCUpdateSpectatorCount.spectator_count)
  return spectator_count_;
}
inline void CMsgServerGCUpdateSpectatorCount::set_spectator_count(::google::protobuf::uint32 value) {
  set_has_spectator_count();
  spectator_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerGCUpdateSpectatorCount.spectator_count)
}

// -------------------------------------------------------------------

// CSerializedCombatLog_Dictionary_DictString

// required uint32 id = 1;
inline bool CSerializedCombatLog_Dictionary_DictString::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSerializedCombatLog_Dictionary_DictString::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSerializedCombatLog_Dictionary_DictString::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSerializedCombatLog_Dictionary_DictString::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSerializedCombatLog_Dictionary_DictString::id() const {
  // @@protoc_insertion_point(field_get:CSerializedCombatLog.Dictionary.DictString.id)
  return id_;
}
inline void CSerializedCombatLog_Dictionary_DictString::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CSerializedCombatLog.Dictionary.DictString.id)
}

// required string value = 2;
inline bool CSerializedCombatLog_Dictionary_DictString::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSerializedCombatLog_Dictionary_DictString::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSerializedCombatLog_Dictionary_DictString::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSerializedCombatLog_Dictionary_DictString::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CSerializedCombatLog_Dictionary_DictString::value() const {
  // @@protoc_insertion_point(field_get:CSerializedCombatLog.Dictionary.DictString.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSerializedCombatLog_Dictionary_DictString::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSerializedCombatLog.Dictionary.DictString.value)
}
inline void CSerializedCombatLog_Dictionary_DictString::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSerializedCombatLog.Dictionary.DictString.value)
}
inline void CSerializedCombatLog_Dictionary_DictString::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSerializedCombatLog.Dictionary.DictString.value)
}
inline ::std::string* CSerializedCombatLog_Dictionary_DictString::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CSerializedCombatLog.Dictionary.DictString.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSerializedCombatLog_Dictionary_DictString::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSerializedCombatLog_Dictionary_DictString::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CSerializedCombatLog.Dictionary.DictString.value)
}

// -------------------------------------------------------------------

// CSerializedCombatLog_Dictionary

// repeated .CSerializedCombatLog.Dictionary.DictString strings = 1;
inline int CSerializedCombatLog_Dictionary::strings_size() const {
  return strings_.size();
}
inline void CSerializedCombatLog_Dictionary::clear_strings() {
  strings_.Clear();
}
inline const ::CSerializedCombatLog_Dictionary_DictString& CSerializedCombatLog_Dictionary::strings(int index) const {
  // @@protoc_insertion_point(field_get:CSerializedCombatLog.Dictionary.strings)
  return strings_.Get(index);
}
inline ::CSerializedCombatLog_Dictionary_DictString* CSerializedCombatLog_Dictionary::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:CSerializedCombatLog.Dictionary.strings)
  return strings_.Mutable(index);
}
inline ::CSerializedCombatLog_Dictionary_DictString* CSerializedCombatLog_Dictionary::add_strings() {
  // @@protoc_insertion_point(field_add:CSerializedCombatLog.Dictionary.strings)
  return strings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSerializedCombatLog_Dictionary_DictString >*
CSerializedCombatLog_Dictionary::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:CSerializedCombatLog.Dictionary.strings)
  return &strings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSerializedCombatLog_Dictionary_DictString >&
CSerializedCombatLog_Dictionary::strings() const {
  // @@protoc_insertion_point(field_list:CSerializedCombatLog.Dictionary.strings)
  return strings_;
}

// -------------------------------------------------------------------

// CSerializedCombatLog

// optional uint32 version = 1;
inline bool CSerializedCombatLog::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSerializedCombatLog::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSerializedCombatLog::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSerializedCombatLog::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CSerializedCombatLog::version() const {
  // @@protoc_insertion_point(field_get:CSerializedCombatLog.version)
  return version_;
}
inline void CSerializedCombatLog::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CSerializedCombatLog.version)
}

// optional .CSerializedCombatLog.Dictionary dictionary = 2;
inline bool CSerializedCombatLog::has_dictionary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSerializedCombatLog::set_has_dictionary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSerializedCombatLog::clear_has_dictionary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSerializedCombatLog::clear_dictionary() {
  if (dictionary_ != NULL) dictionary_->::CSerializedCombatLog_Dictionary::Clear();
  clear_has_dictionary();
}
inline const ::CSerializedCombatLog_Dictionary& CSerializedCombatLog::dictionary() const {
  // @@protoc_insertion_point(field_get:CSerializedCombatLog.dictionary)
  return dictionary_ != NULL ? *dictionary_ : *default_instance_->dictionary_;
}
inline ::CSerializedCombatLog_Dictionary* CSerializedCombatLog::mutable_dictionary() {
  set_has_dictionary();
  if (dictionary_ == NULL) {
    dictionary_ = new ::CSerializedCombatLog_Dictionary;
  }
  // @@protoc_insertion_point(field_mutable:CSerializedCombatLog.dictionary)
  return dictionary_;
}
inline ::CSerializedCombatLog_Dictionary* CSerializedCombatLog::release_dictionary() {
  clear_has_dictionary();
  ::CSerializedCombatLog_Dictionary* temp = dictionary_;
  dictionary_ = NULL;
  return temp;
}
inline void CSerializedCombatLog::set_allocated_dictionary(::CSerializedCombatLog_Dictionary* dictionary) {
  delete dictionary_;
  dictionary_ = dictionary;
  if (dictionary) {
    set_has_dictionary();
  } else {
    clear_has_dictionary();
  }
  // @@protoc_insertion_point(field_set_allocated:CSerializedCombatLog.dictionary)
}

// repeated .CMsgDOTACombatLogEntry entries = 3;
inline int CSerializedCombatLog::entries_size() const {
  return entries_.size();
}
inline void CSerializedCombatLog::clear_entries() {
  entries_.Clear();
}
inline const ::CMsgDOTACombatLogEntry& CSerializedCombatLog::entries(int index) const {
  // @@protoc_insertion_point(field_get:CSerializedCombatLog.entries)
  return entries_.Get(index);
}
inline ::CMsgDOTACombatLogEntry* CSerializedCombatLog::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CSerializedCombatLog.entries)
  return entries_.Mutable(index);
}
inline ::CMsgDOTACombatLogEntry* CSerializedCombatLog::add_entries() {
  // @@protoc_insertion_point(field_add:CSerializedCombatLog.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTACombatLogEntry >*
CSerializedCombatLog::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CSerializedCombatLog.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTACombatLogEntry >&
CSerializedCombatLog::entries() const {
  // @@protoc_insertion_point(field_list:CSerializedCombatLog.entries)
  return entries_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetAdditionalEquips

// repeated uint32 account_ids = 1;
inline int CMsgServerToGCGetAdditionalEquips::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgServerToGCGetAdditionalEquips::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCGetAdditionalEquips::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCGetAdditionalEquips.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgServerToGCGetAdditionalEquips::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgServerToGCGetAdditionalEquips.account_ids)
}
inline void CMsgServerToGCGetAdditionalEquips::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgServerToGCGetAdditionalEquips.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCGetAdditionalEquips::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCGetAdditionalEquips.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCGetAdditionalEquips::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCGetAdditionalEquips.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips

// optional uint32 account_id = 1;
inline bool CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.account_id)
  return account_id_;
}
inline void CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.account_id)
}

// repeated .CAdditionalEquipSlot equips = 2;
inline int CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::equips_size() const {
  return equips_.size();
}
inline void CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::clear_equips() {
  equips_.Clear();
}
inline const ::CAdditionalEquipSlot& CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::equips(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_.Get(index);
}
inline ::CAdditionalEquipSlot* CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_.Mutable(index);
}
inline ::CAdditionalEquipSlot* CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::add_equips() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >*
CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return &equips_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CAdditionalEquipSlot >&
CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::equips() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetAdditionalEquipsResponse

// repeated .CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips equips = 1;
inline int CMsgServerToGCGetAdditionalEquipsResponse::equips_size() const {
  return equips_.size();
}
inline void CMsgServerToGCGetAdditionalEquipsResponse::clear_equips() {
  equips_.Clear();
}
inline const ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& CMsgServerToGCGetAdditionalEquipsResponse::equips(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_.Get(index);
}
inline ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* CMsgServerToGCGetAdditionalEquipsResponse::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_.Mutable(index);
}
inline ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* CMsgServerToGCGetAdditionalEquipsResponse::add_equips() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >*
CMsgServerToGCGetAdditionalEquipsResponse::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return &equips_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >&
CMsgServerToGCGetAdditionalEquipsResponse::equips() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetProfileCard

// repeated uint32 account_ids = 1;
inline int CMsgServerToGCGetProfileCard::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgServerToGCGetProfileCard::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCGetProfileCard::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCGetProfileCard.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgServerToGCGetProfileCard::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgServerToGCGetProfileCard.account_ids)
}
inline void CMsgServerToGCGetProfileCard::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgServerToGCGetProfileCard.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCGetProfileCard::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCGetProfileCard.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCGetProfileCard::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCGetProfileCard.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetProfileCardResponse

// repeated .CMsgDOTAProfileCard cards = 1;
inline int CMsgServerToGCGetProfileCardResponse::cards_size() const {
  return cards_.size();
}
inline void CMsgServerToGCGetProfileCardResponse::clear_cards() {
  cards_.Clear();
}
inline const ::CMsgDOTAProfileCard& CMsgServerToGCGetProfileCardResponse::cards(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCGetProfileCardResponse.cards)
  return cards_.Get(index);
}
inline ::CMsgDOTAProfileCard* CMsgServerToGCGetProfileCardResponse::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCGetProfileCardResponse.cards)
  return cards_.Mutable(index);
}
inline ::CMsgDOTAProfileCard* CMsgServerToGCGetProfileCardResponse::add_cards() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCGetProfileCardResponse.cards)
  return cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileCard >*
CMsgServerToGCGetProfileCardResponse::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCGetProfileCardResponse.cards)
  return &cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDOTAProfileCard >&
CMsgServerToGCGetProfileCardResponse::cards() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCGetProfileCardResponse.cards)
  return cards_;
}

// -------------------------------------------------------------------

// CMsgServerToGCVictoryPredictions_Record

// optional uint32 account_id = 1;
inline bool CMsgServerToGCVictoryPredictions_Record::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCVictoryPredictions_Record::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCVictoryPredictions_Record::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCVictoryPredictions.Record.account_id)
  return account_id_;
}
inline void CMsgServerToGCVictoryPredictions_Record::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCVictoryPredictions.Record.account_id)
}

// optional uint64 item_id = 2;
inline bool CMsgServerToGCVictoryPredictions_Record::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCVictoryPredictions_Record::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgServerToGCVictoryPredictions_Record::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCVictoryPredictions.Record.item_id)
  return item_id_;
}
inline void CMsgServerToGCVictoryPredictions_Record::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCVictoryPredictions.Record.item_id)
}

// repeated uint64 item_ids = 5;
inline int CMsgServerToGCVictoryPredictions_Record::item_ids_size() const {
  return item_ids_.size();
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_item_ids() {
  item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgServerToGCVictoryPredictions_Record::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCVictoryPredictions.Record.item_ids)
  return item_ids_.Get(index);
}
inline void CMsgServerToGCVictoryPredictions_Record::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgServerToGCVictoryPredictions.Record.item_ids)
}
inline void CMsgServerToGCVictoryPredictions_Record::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgServerToGCVictoryPredictions.Record.item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgServerToGCVictoryPredictions_Record::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCVictoryPredictions.Record.item_ids)
  return item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgServerToGCVictoryPredictions_Record::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCVictoryPredictions.Record.item_ids)
  return &item_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCVictoryPredictions

// repeated .CMsgServerToGCVictoryPredictions.Record records = 1;
inline int CMsgServerToGCVictoryPredictions::records_size() const {
  return records_.size();
}
inline void CMsgServerToGCVictoryPredictions::clear_records() {
  records_.Clear();
}
inline const ::CMsgServerToGCVictoryPredictions_Record& CMsgServerToGCVictoryPredictions::records(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCVictoryPredictions.records)
  return records_.Get(index);
}
inline ::CMsgServerToGCVictoryPredictions_Record* CMsgServerToGCVictoryPredictions::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCVictoryPredictions.records)
  return records_.Mutable(index);
}
inline ::CMsgServerToGCVictoryPredictions_Record* CMsgServerToGCVictoryPredictions::add_records() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCVictoryPredictions.records)
  return records_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCVictoryPredictions_Record >*
CMsgServerToGCVictoryPredictions::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCVictoryPredictions.records)
  return &records_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCVictoryPredictions_Record >&
CMsgServerToGCVictoryPredictions::records() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCVictoryPredictions.records)
  return records_;
}

// -------------------------------------------------------------------

// CMsgSuspiciousActivity

// optional uint32 account_id = 1;
inline bool CMsgSuspiciousActivity::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSuspiciousActivity::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSuspiciousActivity::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSuspiciousActivity::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgSuspiciousActivity::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSuspiciousActivity.account_id)
  return account_id_;
}
inline void CMsgSuspiciousActivity::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSuspiciousActivity.account_id)
}

// optional .ESuspiciousActivity activity = 2 [default = k_ESuspiciousActivity_VAC_MultipleInstances];
inline bool CMsgSuspiciousActivity::has_activity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSuspiciousActivity::set_has_activity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSuspiciousActivity::clear_has_activity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSuspiciousActivity::clear_activity() {
  activity_ = 1;
  clear_has_activity();
}
inline ::ESuspiciousActivity CMsgSuspiciousActivity::activity() const {
  // @@protoc_insertion_point(field_get:CMsgSuspiciousActivity.activity)
  return static_cast< ::ESuspiciousActivity >(activity_);
}
inline void CMsgSuspiciousActivity::set_activity(::ESuspiciousActivity value) {
  assert(::ESuspiciousActivity_IsValid(value));
  set_has_activity();
  activity_ = value;
  // @@protoc_insertion_point(field_set:CMsgSuspiciousActivity.activity)
}

// optional sint32 intdata1 = 3;
inline bool CMsgSuspiciousActivity::has_intdata1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSuspiciousActivity::set_has_intdata1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSuspiciousActivity::clear_has_intdata1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSuspiciousActivity::clear_intdata1() {
  intdata1_ = 0;
  clear_has_intdata1();
}
inline ::google::protobuf::int32 CMsgSuspiciousActivity::intdata1() const {
  // @@protoc_insertion_point(field_get:CMsgSuspiciousActivity.intdata1)
  return intdata1_;
}
inline void CMsgSuspiciousActivity::set_intdata1(::google::protobuf::int32 value) {
  set_has_intdata1();
  intdata1_ = value;
  // @@protoc_insertion_point(field_set:CMsgSuspiciousActivity.intdata1)
}

// optional sint32 intdata2 = 4;
inline bool CMsgSuspiciousActivity::has_intdata2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSuspiciousActivity::set_has_intdata2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSuspiciousActivity::clear_has_intdata2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSuspiciousActivity::clear_intdata2() {
  intdata2_ = 0;
  clear_has_intdata2();
}
inline ::google::protobuf::int32 CMsgSuspiciousActivity::intdata2() const {
  // @@protoc_insertion_point(field_get:CMsgSuspiciousActivity.intdata2)
  return intdata2_;
}
inline void CMsgSuspiciousActivity::set_intdata2(::google::protobuf::int32 value) {
  set_has_intdata2();
  intdata2_ = value;
  // @@protoc_insertion_point(field_set:CMsgSuspiciousActivity.intdata2)
}

// optional uint32 time = 5;
inline bool CMsgSuspiciousActivity::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSuspiciousActivity::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSuspiciousActivity::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSuspiciousActivity::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CMsgSuspiciousActivity::time() const {
  // @@protoc_insertion_point(field_get:CMsgSuspiciousActivity.time)
  return time_;
}
inline void CMsgSuspiciousActivity::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSuspiciousActivity.time)
}

// -------------------------------------------------------------------

// CMsgServerToGCRequestStatus

// -------------------------------------------------------------------

// CMsgServerToGCRequestStatus_Response

// optional uint32 response = 1;
inline bool CMsgServerToGCRequestStatus_Response::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCRequestStatus_Response::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCRequestStatus_Response::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCRequestStatus_Response::clear_response() {
  response_ = 0u;
  clear_has_response();
}
inline ::google::protobuf::uint32 CMsgServerToGCRequestStatus_Response::response() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCRequestStatus_Response.response)
  return response_;
}
inline void CMsgServerToGCRequestStatus_Response::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCRequestStatus_Response.response)
}

// -------------------------------------------------------------------

// CMsgSignOutAssassinMiniGameInfo

// repeated fixed64 winning_players = 1;
inline int CMsgSignOutAssassinMiniGameInfo::winning_players_size() const {
  return winning_players_.size();
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_winning_players() {
  winning_players_.Clear();
}
inline ::google::protobuf::uint64 CMsgSignOutAssassinMiniGameInfo::winning_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.winning_players)
  return winning_players_.Get(index);
}
inline void CMsgSignOutAssassinMiniGameInfo::set_winning_players(int index, ::google::protobuf::uint64 value) {
  winning_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.winning_players)
}
inline void CMsgSignOutAssassinMiniGameInfo::add_winning_players(::google::protobuf::uint64 value) {
  winning_players_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSignOutAssassinMiniGameInfo.winning_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSignOutAssassinMiniGameInfo::winning_players() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutAssassinMiniGameInfo.winning_players)
  return winning_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSignOutAssassinMiniGameInfo::mutable_winning_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutAssassinMiniGameInfo.winning_players)
  return &winning_players_;
}

// repeated fixed64 losing_players = 2;
inline int CMsgSignOutAssassinMiniGameInfo::losing_players_size() const {
  return losing_players_.size();
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_losing_players() {
  losing_players_.Clear();
}
inline ::google::protobuf::uint64 CMsgSignOutAssassinMiniGameInfo::losing_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.losing_players)
  return losing_players_.Get(index);
}
inline void CMsgSignOutAssassinMiniGameInfo::set_losing_players(int index, ::google::protobuf::uint64 value) {
  losing_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.losing_players)
}
inline void CMsgSignOutAssassinMiniGameInfo::add_losing_players(::google::protobuf::uint64 value) {
  losing_players_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSignOutAssassinMiniGameInfo.losing_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSignOutAssassinMiniGameInfo::losing_players() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutAssassinMiniGameInfo.losing_players)
  return losing_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSignOutAssassinMiniGameInfo::mutable_losing_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutAssassinMiniGameInfo.losing_players)
  return &losing_players_;
}

// repeated fixed64 arcana_owners = 3;
inline int CMsgSignOutAssassinMiniGameInfo::arcana_owners_size() const {
  return arcana_owners_.size();
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_arcana_owners() {
  arcana_owners_.Clear();
}
inline ::google::protobuf::uint64 CMsgSignOutAssassinMiniGameInfo::arcana_owners(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.arcana_owners)
  return arcana_owners_.Get(index);
}
inline void CMsgSignOutAssassinMiniGameInfo::set_arcana_owners(int index, ::google::protobuf::uint64 value) {
  arcana_owners_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.arcana_owners)
}
inline void CMsgSignOutAssassinMiniGameInfo::add_arcana_owners(::google::protobuf::uint64 value) {
  arcana_owners_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSignOutAssassinMiniGameInfo.arcana_owners)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSignOutAssassinMiniGameInfo::arcana_owners() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutAssassinMiniGameInfo.arcana_owners)
  return arcana_owners_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSignOutAssassinMiniGameInfo::mutable_arcana_owners() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutAssassinMiniGameInfo.arcana_owners)
  return &arcana_owners_;
}

// optional bool assassin_won = 4;
inline bool CMsgSignOutAssassinMiniGameInfo::has_assassin_won() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_has_assassin_won() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_has_assassin_won() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_assassin_won() {
  assassin_won_ = false;
  clear_has_assassin_won();
}
inline bool CMsgSignOutAssassinMiniGameInfo::assassin_won() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.assassin_won)
  return assassin_won_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_assassin_won(bool value) {
  set_has_assassin_won();
  assassin_won_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.assassin_won)
}

// optional uint32 target_hero_id = 5;
inline bool CMsgSignOutAssassinMiniGameInfo::has_target_hero_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_has_target_hero_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_has_target_hero_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_target_hero_id() {
  target_hero_id_ = 0u;
  clear_has_target_hero_id();
}
inline ::google::protobuf::uint32 CMsgSignOutAssassinMiniGameInfo::target_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.target_hero_id)
  return target_hero_id_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_target_hero_id(::google::protobuf::uint32 value) {
  set_has_target_hero_id();
  target_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.target_hero_id)
}

// optional bool contract_completed = 6;
inline bool CMsgSignOutAssassinMiniGameInfo::has_contract_completed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_has_contract_completed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_has_contract_completed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_contract_completed() {
  contract_completed_ = false;
  clear_has_contract_completed();
}
inline bool CMsgSignOutAssassinMiniGameInfo::contract_completed() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.contract_completed)
  return contract_completed_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_contract_completed(bool value) {
  set_has_contract_completed();
  contract_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.contract_completed)
}

// optional float contract_complete_time = 7;
inline bool CMsgSignOutAssassinMiniGameInfo::has_contract_complete_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_has_contract_complete_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_has_contract_complete_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_contract_complete_time() {
  contract_complete_time_ = 0;
  clear_has_contract_complete_time();
}
inline float CMsgSignOutAssassinMiniGameInfo::contract_complete_time() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.contract_complete_time)
  return contract_complete_time_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_contract_complete_time(float value) {
  set_has_contract_complete_time();
  contract_complete_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.contract_complete_time)
}

// optional bool pa_is_radiant = 8;
inline bool CMsgSignOutAssassinMiniGameInfo::has_pa_is_radiant() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_has_pa_is_radiant() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_has_pa_is_radiant() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_pa_is_radiant() {
  pa_is_radiant_ = false;
  clear_has_pa_is_radiant();
}
inline bool CMsgSignOutAssassinMiniGameInfo::pa_is_radiant() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutAssassinMiniGameInfo.pa_is_radiant)
  return pa_is_radiant_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_pa_is_radiant(bool value) {
  set_has_pa_is_radiant();
  pa_is_radiant_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutAssassinMiniGameInfo.pa_is_radiant)
}

// -------------------------------------------------------------------

// CMsgServerToGCGetIngameEventData

// optional .EEvent event = 1 [default = EVENT_ID_NONE];
inline bool CMsgServerToGCGetIngameEventData::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCGetIngameEventData::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCGetIngameEventData::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCGetIngameEventData::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::EEvent CMsgServerToGCGetIngameEventData::event() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCGetIngameEventData.event)
  return static_cast< ::EEvent >(event_);
}
inline void CMsgServerToGCGetIngameEventData::set_event(::EEvent value) {
  assert(::EEvent_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCGetIngameEventData.event)
}

// -------------------------------------------------------------------

// CMsgGCToServerIngameEventDataOraclePA

// repeated uint32 target_hero_ids = 1;
inline int CMsgGCToServerIngameEventDataOraclePA::target_hero_ids_size() const {
  return target_hero_ids_.size();
}
inline void CMsgGCToServerIngameEventDataOraclePA::clear_target_hero_ids() {
  target_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToServerIngameEventDataOraclePA::target_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
  return target_hero_ids_.Get(index);
}
inline void CMsgGCToServerIngameEventDataOraclePA::set_target_hero_ids(int index, ::google::protobuf::uint32 value) {
  target_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
}
inline void CMsgGCToServerIngameEventDataOraclePA::add_target_hero_ids(::google::protobuf::uint32 value) {
  target_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToServerIngameEventDataOraclePA::target_hero_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
  return target_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToServerIngameEventDataOraclePA::mutable_target_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
  return &target_hero_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCKillSummaries_KillSummary

// optional uint32 killer_hero_id = 1;
inline bool CMsgServerToGCKillSummaries_KillSummary::has_killer_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_has_killer_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_has_killer_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_killer_hero_id() {
  killer_hero_id_ = 0u;
  clear_has_killer_hero_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries_KillSummary::killer_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCKillSummaries.KillSummary.killer_hero_id)
  return killer_hero_id_;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_killer_hero_id(::google::protobuf::uint32 value) {
  set_has_killer_hero_id();
  killer_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCKillSummaries.KillSummary.killer_hero_id)
}

// optional uint32 victim_hero_id = 2;
inline bool CMsgServerToGCKillSummaries_KillSummary::has_victim_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_has_victim_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_has_victim_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_victim_hero_id() {
  victim_hero_id_ = 0u;
  clear_has_victim_hero_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries_KillSummary::victim_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCKillSummaries.KillSummary.victim_hero_id)
  return victim_hero_id_;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_victim_hero_id(::google::protobuf::uint32 value) {
  set_has_victim_hero_id();
  victim_hero_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCKillSummaries.KillSummary.victim_hero_id)
}

// optional uint32 kill_count = 3;
inline bool CMsgServerToGCKillSummaries_KillSummary::has_kill_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_has_kill_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_has_kill_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_kill_count() {
  kill_count_ = 0u;
  clear_has_kill_count();
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries_KillSummary::kill_count() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCKillSummaries.KillSummary.kill_count)
  return kill_count_;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_kill_count(::google::protobuf::uint32 value) {
  set_has_kill_count();
  kill_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCKillSummaries.KillSummary.kill_count)
}

// -------------------------------------------------------------------

// CMsgServerToGCKillSummaries

// optional uint32 ingameevent_id = 1;
inline bool CMsgServerToGCKillSummaries::has_ingameevent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCKillSummaries::set_has_ingameevent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCKillSummaries::clear_has_ingameevent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCKillSummaries::clear_ingameevent_id() {
  ingameevent_id_ = 0u;
  clear_has_ingameevent_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries::ingameevent_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCKillSummaries.ingameevent_id)
  return ingameevent_id_;
}
inline void CMsgServerToGCKillSummaries::set_ingameevent_id(::google::protobuf::uint32 value) {
  set_has_ingameevent_id();
  ingameevent_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCKillSummaries.ingameevent_id)
}

// repeated .CMsgServerToGCKillSummaries.KillSummary summaries = 2;
inline int CMsgServerToGCKillSummaries::summaries_size() const {
  return summaries_.size();
}
inline void CMsgServerToGCKillSummaries::clear_summaries() {
  summaries_.Clear();
}
inline const ::CMsgServerToGCKillSummaries_KillSummary& CMsgServerToGCKillSummaries::summaries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCKillSummaries.summaries)
  return summaries_.Get(index);
}
inline ::CMsgServerToGCKillSummaries_KillSummary* CMsgServerToGCKillSummaries::mutable_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCKillSummaries.summaries)
  return summaries_.Mutable(index);
}
inline ::CMsgServerToGCKillSummaries_KillSummary* CMsgServerToGCKillSummaries::add_summaries() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCKillSummaries.summaries)
  return summaries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCKillSummaries_KillSummary >*
CMsgServerToGCKillSummaries::mutable_summaries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCKillSummaries.summaries)
  return &summaries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCKillSummaries_KillSummary >&
CMsgServerToGCKillSummaries::summaries() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCKillSummaries.summaries)
  return summaries_;
}

// -------------------------------------------------------------------

// CMsgGCToServerPredictionResult_Prediction

// optional uint32 item_def = 1;
inline bool CMsgGCToServerPredictionResult_Prediction::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.Prediction.item_def)
  return item_def_;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.Prediction.item_def)
}

// optional uint32 num_correct = 2;
inline bool CMsgGCToServerPredictionResult_Prediction::has_num_correct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_has_num_correct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_has_num_correct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_num_correct() {
  num_correct_ = 0u;
  clear_has_num_correct();
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::num_correct() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.Prediction.num_correct)
  return num_correct_;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_num_correct(::google::protobuf::uint32 value) {
  set_has_num_correct();
  num_correct_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.Prediction.num_correct)
}

// optional uint32 num_fails = 3;
inline bool CMsgGCToServerPredictionResult_Prediction::has_num_fails() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_has_num_fails() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_has_num_fails() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_num_fails() {
  num_fails_ = 0u;
  clear_has_num_fails();
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::num_fails() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.Prediction.num_fails)
  return num_fails_;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_num_fails(::google::protobuf::uint32 value) {
  set_has_num_fails();
  num_fails_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.Prediction.num_fails)
}

// optional .CMsgGCToServerPredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
inline bool CMsgGCToServerPredictionResult_Prediction::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::CMsgGCToServerPredictionResult_Prediction_EResult CMsgGCToServerPredictionResult_Prediction::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.Prediction.result)
  return static_cast< ::CMsgGCToServerPredictionResult_Prediction_EResult >(result_);
}
inline void CMsgGCToServerPredictionResult_Prediction::set_result(::CMsgGCToServerPredictionResult_Prediction_EResult value) {
  assert(::CMsgGCToServerPredictionResult_Prediction_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.Prediction.result)
}

// repeated uint32 granted_item_defs = 6;
inline int CMsgGCToServerPredictionResult_Prediction::granted_item_defs_size() const {
  return granted_item_defs_.size();
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_granted_item_defs() {
  granted_item_defs_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::granted_item_defs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
  return granted_item_defs_.Get(index);
}
inline void CMsgGCToServerPredictionResult_Prediction::set_granted_item_defs(int index, ::google::protobuf::uint32 value) {
  granted_item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
}
inline void CMsgGCToServerPredictionResult_Prediction::add_granted_item_defs(::google::protobuf::uint32 value) {
  granted_item_defs_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToServerPredictionResult_Prediction::granted_item_defs() const {
  // @@protoc_insertion_point(field_list:CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
  return granted_item_defs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToServerPredictionResult_Prediction::mutable_granted_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
  return &granted_item_defs_;
}

// -------------------------------------------------------------------

// CMsgGCToServerPredictionResult

// optional uint32 account_id = 1;
inline bool CMsgGCToServerPredictionResult::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPredictionResult::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToServerPredictionResult::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToServerPredictionResult::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.account_id)
  return account_id_;
}
inline void CMsgGCToServerPredictionResult::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgGCToServerPredictionResult::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPredictionResult::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToServerPredictionResult::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToServerPredictionResult::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCToServerPredictionResult::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.match_id)
  return match_id_;
}
inline void CMsgGCToServerPredictionResult::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.match_id)
}

// optional bool correct = 3;
inline bool CMsgGCToServerPredictionResult::has_correct() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToServerPredictionResult::set_has_correct() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToServerPredictionResult::clear_has_correct() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToServerPredictionResult::clear_correct() {
  correct_ = false;
  clear_has_correct();
}
inline bool CMsgGCToServerPredictionResult::correct() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.correct)
  return correct_;
}
inline void CMsgGCToServerPredictionResult::set_correct(bool value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerPredictionResult.correct)
}

// repeated .CMsgGCToServerPredictionResult.Prediction predictions = 4;
inline int CMsgGCToServerPredictionResult::predictions_size() const {
  return predictions_.size();
}
inline void CMsgGCToServerPredictionResult::clear_predictions() {
  predictions_.Clear();
}
inline const ::CMsgGCToServerPredictionResult_Prediction& CMsgGCToServerPredictionResult::predictions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerPredictionResult.predictions)
  return predictions_.Get(index);
}
inline ::CMsgGCToServerPredictionResult_Prediction* CMsgGCToServerPredictionResult::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToServerPredictionResult.predictions)
  return predictions_.Mutable(index);
}
inline ::CMsgGCToServerPredictionResult_Prediction* CMsgGCToServerPredictionResult::add_predictions() {
  // @@protoc_insertion_point(field_add:CMsgGCToServerPredictionResult.predictions)
  return predictions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToServerPredictionResult_Prediction >*
CMsgGCToServerPredictionResult::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToServerPredictionResult.predictions)
  return &predictions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToServerPredictionResult_Prediction >&
CMsgGCToServerPredictionResult::predictions() const {
  // @@protoc_insertion_point(field_list:CMsgGCToServerPredictionResult.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// CMsgServerToGCLockCharmTrading

// optional uint32 account_id = 1;
inline bool CMsgServerToGCLockCharmTrading::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCLockCharmTrading::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCLockCharmTrading::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCLockCharmTrading::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCLockCharmTrading::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCLockCharmTrading.account_id)
  return account_id_;
}
inline void CMsgServerToGCLockCharmTrading::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCLockCharmTrading.account_id)
}

// optional uint64 item_id = 2;
inline bool CMsgServerToGCLockCharmTrading::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCLockCharmTrading::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCLockCharmTrading::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCLockCharmTrading::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgServerToGCLockCharmTrading::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCLockCharmTrading.item_id)
  return item_id_;
}
inline void CMsgServerToGCLockCharmTrading::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCLockCharmTrading.item_id)
}

// -------------------------------------------------------------------

// CMsgDOTACNY2015EventPointUsage_PointUsage

// repeated uint32 path = 1;
inline int CMsgDOTACNY2015EventPointUsage_PointUsage::path_size() const {
  return path_.size();
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::clear_path() {
  path_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTACNY2015EventPointUsage_PointUsage::path(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACNY2015EventPointUsage.PointUsage.path)
  return path_.Get(index);
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::set_path(int index, ::google::protobuf::uint32 value) {
  path_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACNY2015EventPointUsage.PointUsage.path)
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::add_path(::google::protobuf::uint32 value) {
  path_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACNY2015EventPointUsage.PointUsage.path)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTACNY2015EventPointUsage_PointUsage::path() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACNY2015EventPointUsage.PointUsage.path)
  return path_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTACNY2015EventPointUsage_PointUsage::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACNY2015EventPointUsage.PointUsage.path)
  return &path_;
}

// repeated uint32 path_level = 2;
inline int CMsgDOTACNY2015EventPointUsage_PointUsage::path_level_size() const {
  return path_level_.size();
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::clear_path_level() {
  path_level_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTACNY2015EventPointUsage_PointUsage::path_level(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACNY2015EventPointUsage.PointUsage.path_level)
  return path_level_.Get(index);
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::set_path_level(int index, ::google::protobuf::uint32 value) {
  path_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACNY2015EventPointUsage.PointUsage.path_level)
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::add_path_level(::google::protobuf::uint32 value) {
  path_level_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACNY2015EventPointUsage.PointUsage.path_level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTACNY2015EventPointUsage_PointUsage::path_level() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACNY2015EventPointUsage.PointUsage.path_level)
  return path_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTACNY2015EventPointUsage_PointUsage::mutable_path_level() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACNY2015EventPointUsage.PointUsage.path_level)
  return &path_level_;
}

// repeated uint32 ability_points_spent = 3;
inline int CMsgDOTACNY2015EventPointUsage_PointUsage::ability_points_spent_size() const {
  return ability_points_spent_.size();
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::clear_ability_points_spent() {
  ability_points_spent_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTACNY2015EventPointUsage_PointUsage::ability_points_spent(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDOTACNY2015EventPointUsage.PointUsage.ability_points_spent)
  return ability_points_spent_.Get(index);
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::set_ability_points_spent(int index, ::google::protobuf::uint32 value) {
  ability_points_spent_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgDOTACNY2015EventPointUsage.PointUsage.ability_points_spent)
}
inline void CMsgDOTACNY2015EventPointUsage_PointUsage::add_ability_points_spent(::google::protobuf::uint32 value) {
  ability_points_spent_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgDOTACNY2015EventPointUsage.PointUsage.ability_points_spent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTACNY2015EventPointUsage_PointUsage::ability_points_spent() const {
  // @@protoc_insertion_point(field_list:CMsgDOTACNY2015EventPointUsage.PointUsage.ability_points_spent)
  return ability_points_spent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTACNY2015EventPointUsage_PointUsage::mutable_ability_points_spent() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDOTACNY2015EventPointUsage.PointUsage.ability_points_spent)
  return &ability_points_spent_;
}

// -------------------------------------------------------------------

// CMsgDOTACNY2015EventPointUsage

// optional .CMsgDOTACNY2015EventPointUsage.PointUsage winning_team_usage = 1;
inline bool CMsgDOTACNY2015EventPointUsage::has_winning_team_usage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACNY2015EventPointUsage::set_has_winning_team_usage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACNY2015EventPointUsage::clear_has_winning_team_usage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACNY2015EventPointUsage::clear_winning_team_usage() {
  if (winning_team_usage_ != NULL) winning_team_usage_->::CMsgDOTACNY2015EventPointUsage_PointUsage::Clear();
  clear_has_winning_team_usage();
}
inline const ::CMsgDOTACNY2015EventPointUsage_PointUsage& CMsgDOTACNY2015EventPointUsage::winning_team_usage() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACNY2015EventPointUsage.winning_team_usage)
  return winning_team_usage_ != NULL ? *winning_team_usage_ : *default_instance_->winning_team_usage_;
}
inline ::CMsgDOTACNY2015EventPointUsage_PointUsage* CMsgDOTACNY2015EventPointUsage::mutable_winning_team_usage() {
  set_has_winning_team_usage();
  if (winning_team_usage_ == NULL) {
    winning_team_usage_ = new ::CMsgDOTACNY2015EventPointUsage_PointUsage;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACNY2015EventPointUsage.winning_team_usage)
  return winning_team_usage_;
}
inline ::CMsgDOTACNY2015EventPointUsage_PointUsage* CMsgDOTACNY2015EventPointUsage::release_winning_team_usage() {
  clear_has_winning_team_usage();
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* temp = winning_team_usage_;
  winning_team_usage_ = NULL;
  return temp;
}
inline void CMsgDOTACNY2015EventPointUsage::set_allocated_winning_team_usage(::CMsgDOTACNY2015EventPointUsage_PointUsage* winning_team_usage) {
  delete winning_team_usage_;
  winning_team_usage_ = winning_team_usage;
  if (winning_team_usage) {
    set_has_winning_team_usage();
  } else {
    clear_has_winning_team_usage();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACNY2015EventPointUsage.winning_team_usage)
}

// optional .CMsgDOTACNY2015EventPointUsage.PointUsage losing_team_usage = 2;
inline bool CMsgDOTACNY2015EventPointUsage::has_losing_team_usage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACNY2015EventPointUsage::set_has_losing_team_usage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACNY2015EventPointUsage::clear_has_losing_team_usage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACNY2015EventPointUsage::clear_losing_team_usage() {
  if (losing_team_usage_ != NULL) losing_team_usage_->::CMsgDOTACNY2015EventPointUsage_PointUsage::Clear();
  clear_has_losing_team_usage();
}
inline const ::CMsgDOTACNY2015EventPointUsage_PointUsage& CMsgDOTACNY2015EventPointUsage::losing_team_usage() const {
  // @@protoc_insertion_point(field_get:CMsgDOTACNY2015EventPointUsage.losing_team_usage)
  return losing_team_usage_ != NULL ? *losing_team_usage_ : *default_instance_->losing_team_usage_;
}
inline ::CMsgDOTACNY2015EventPointUsage_PointUsage* CMsgDOTACNY2015EventPointUsage::mutable_losing_team_usage() {
  set_has_losing_team_usage();
  if (losing_team_usage_ == NULL) {
    losing_team_usage_ = new ::CMsgDOTACNY2015EventPointUsage_PointUsage;
  }
  // @@protoc_insertion_point(field_mutable:CMsgDOTACNY2015EventPointUsage.losing_team_usage)
  return losing_team_usage_;
}
inline ::CMsgDOTACNY2015EventPointUsage_PointUsage* CMsgDOTACNY2015EventPointUsage::release_losing_team_usage() {
  clear_has_losing_team_usage();
  ::CMsgDOTACNY2015EventPointUsage_PointUsage* temp = losing_team_usage_;
  losing_team_usage_ = NULL;
  return temp;
}
inline void CMsgDOTACNY2015EventPointUsage::set_allocated_losing_team_usage(::CMsgDOTACNY2015EventPointUsage_PointUsage* losing_team_usage) {
  delete losing_team_usage_;
  losing_team_usage_ = losing_team_usage;
  if (losing_team_usage) {
    set_has_losing_team_usage();
  } else {
    clear_has_losing_team_usage();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgDOTACNY2015EventPointUsage.losing_team_usage)
}

// -------------------------------------------------------------------

// CMsgSignOutUpdatePlayerChallenge_Challenge

// optional uint32 event_id = 1;
inline bool CMsgSignOutUpdatePlayerChallenge_Challenge::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge_Challenge::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutUpdatePlayerChallenge.Challenge.event_id)
  return event_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutUpdatePlayerChallenge.Challenge.event_id)
}

// optional uint32 sequence_id = 3;
inline bool CMsgSignOutUpdatePlayerChallenge_Challenge::has_sequence_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_has_sequence_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_has_sequence_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_sequence_id() {
  sequence_id_ = 0u;
  clear_has_sequence_id();
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge_Challenge::sequence_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutUpdatePlayerChallenge.Challenge.sequence_id)
  return sequence_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_sequence_id(::google::protobuf::uint32 value) {
  set_has_sequence_id();
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutUpdatePlayerChallenge.Challenge.sequence_id)
}

// -------------------------------------------------------------------

// CMsgSignOutUpdatePlayerChallenge

// optional uint32 account_id = 1;
inline bool CMsgSignOutUpdatePlayerChallenge::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutUpdatePlayerChallenge.account_id)
  return account_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutUpdatePlayerChallenge.account_id)
}

// repeated .CMsgSignOutUpdatePlayerChallenge.Challenge completed = 2;
inline int CMsgSignOutUpdatePlayerChallenge::completed_size() const {
  return completed_.size();
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_completed() {
  completed_.Clear();
}
inline const ::CMsgSignOutUpdatePlayerChallenge_Challenge& CMsgSignOutUpdatePlayerChallenge::completed(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_.Get(index);
}
inline ::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::mutable_completed(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_.Mutable(index);
}
inline ::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::add_completed() {
  // @@protoc_insertion_point(field_add:CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >*
CMsgSignOutUpdatePlayerChallenge::mutable_completed() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutUpdatePlayerChallenge.completed)
  return &completed_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >&
CMsgSignOutUpdatePlayerChallenge::completed() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_;
}

// repeated .CMsgSignOutUpdatePlayerChallenge.Challenge rerolled = 3;
inline int CMsgSignOutUpdatePlayerChallenge::rerolled_size() const {
  return rerolled_.size();
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_rerolled() {
  rerolled_.Clear();
}
inline const ::CMsgSignOutUpdatePlayerChallenge_Challenge& CMsgSignOutUpdatePlayerChallenge::rerolled(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_.Get(index);
}
inline ::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::mutable_rerolled(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_.Mutable(index);
}
inline ::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::add_rerolled() {
  // @@protoc_insertion_point(field_add:CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >*
CMsgSignOutUpdatePlayerChallenge::mutable_rerolled() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutUpdatePlayerChallenge.rerolled)
  return &rerolled_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutUpdatePlayerChallenge_Challenge >&
CMsgSignOutUpdatePlayerChallenge::rerolled() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_;
}

// optional uint64 match_id = 4;
inline bool CMsgSignOutUpdatePlayerChallenge::has_match_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge::set_has_match_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgSignOutUpdatePlayerChallenge::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutUpdatePlayerChallenge.match_id)
  return match_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutUpdatePlayerChallenge.match_id)
}

// -------------------------------------------------------------------

// CMsgServerToGCRerollPlayerChallenge

// optional uint32 account_id = 1;
inline bool CMsgServerToGCRerollPlayerChallenge::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCRerollPlayerChallenge::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCRerollPlayerChallenge::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCRerollPlayerChallenge::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCRerollPlayerChallenge::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCRerollPlayerChallenge.account_id)
  return account_id_;
}
inline void CMsgServerToGCRerollPlayerChallenge::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCRerollPlayerChallenge.account_id)
}

// optional .CMsgClientToGCRerollPlayerChallenge reroll_msg = 2;
inline bool CMsgServerToGCRerollPlayerChallenge::has_reroll_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCRerollPlayerChallenge::set_has_reroll_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCRerollPlayerChallenge::clear_has_reroll_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCRerollPlayerChallenge::clear_reroll_msg() {
  if (reroll_msg_ != NULL) reroll_msg_->::CMsgClientToGCRerollPlayerChallenge::Clear();
  clear_has_reroll_msg();
}
inline const ::CMsgClientToGCRerollPlayerChallenge& CMsgServerToGCRerollPlayerChallenge::reroll_msg() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCRerollPlayerChallenge.reroll_msg)
  return reroll_msg_ != NULL ? *reroll_msg_ : *default_instance_->reroll_msg_;
}
inline ::CMsgClientToGCRerollPlayerChallenge* CMsgServerToGCRerollPlayerChallenge::mutable_reroll_msg() {
  set_has_reroll_msg();
  if (reroll_msg_ == NULL) {
    reroll_msg_ = new ::CMsgClientToGCRerollPlayerChallenge;
  }
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCRerollPlayerChallenge.reroll_msg)
  return reroll_msg_;
}
inline ::CMsgClientToGCRerollPlayerChallenge* CMsgServerToGCRerollPlayerChallenge::release_reroll_msg() {
  clear_has_reroll_msg();
  ::CMsgClientToGCRerollPlayerChallenge* temp = reroll_msg_;
  reroll_msg_ = NULL;
  return temp;
}
inline void CMsgServerToGCRerollPlayerChallenge::set_allocated_reroll_msg(::CMsgClientToGCRerollPlayerChallenge* reroll_msg) {
  delete reroll_msg_;
  reroll_msg_ = reroll_msg;
  if (reroll_msg) {
    set_has_reroll_msg();
  } else {
    clear_has_reroll_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgServerToGCRerollPlayerChallenge.reroll_msg)
}

// -------------------------------------------------------------------

// CMsgServerToGCHoldEventPoints_HoldRequest

// optional uint32 account_id = 1;
inline bool CMsgServerToGCHoldEventPoints_HoldRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints_HoldRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCHoldEventPoints.HoldRequest.account_id)
  return account_id_;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCHoldEventPoints.HoldRequest.account_id)
}

// optional uint32 points_held = 2;
inline bool CMsgServerToGCHoldEventPoints_HoldRequest::has_points_held() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_has_points_held() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_has_points_held() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_points_held() {
  points_held_ = 0u;
  clear_has_points_held();
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints_HoldRequest::points_held() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCHoldEventPoints.HoldRequest.points_held)
  return points_held_;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_points_held(::google::protobuf::uint32 value) {
  set_has_points_held();
  points_held_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCHoldEventPoints.HoldRequest.points_held)
}

// optional uint32 premium_held = 3;
inline bool CMsgServerToGCHoldEventPoints_HoldRequest::has_premium_held() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_has_premium_held() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_has_premium_held() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_premium_held() {
  premium_held_ = 0u;
  clear_has_premium_held();
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints_HoldRequest::premium_held() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCHoldEventPoints.HoldRequest.premium_held)
  return premium_held_;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_premium_held(::google::protobuf::uint32 value) {
  set_has_premium_held();
  premium_held_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCHoldEventPoints.HoldRequest.premium_held)
}

// -------------------------------------------------------------------

// CMsgServerToGCHoldEventPoints

// repeated .CMsgServerToGCHoldEventPoints.HoldRequest holds = 1;
inline int CMsgServerToGCHoldEventPoints::holds_size() const {
  return holds_.size();
}
inline void CMsgServerToGCHoldEventPoints::clear_holds() {
  holds_.Clear();
}
inline const ::CMsgServerToGCHoldEventPoints_HoldRequest& CMsgServerToGCHoldEventPoints::holds(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCHoldEventPoints.holds)
  return holds_.Get(index);
}
inline ::CMsgServerToGCHoldEventPoints_HoldRequest* CMsgServerToGCHoldEventPoints::mutable_holds(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerToGCHoldEventPoints.holds)
  return holds_.Mutable(index);
}
inline ::CMsgServerToGCHoldEventPoints_HoldRequest* CMsgServerToGCHoldEventPoints::add_holds() {
  // @@protoc_insertion_point(field_add:CMsgServerToGCHoldEventPoints.holds)
  return holds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCHoldEventPoints_HoldRequest >*
CMsgServerToGCHoldEventPoints::mutable_holds() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerToGCHoldEventPoints.holds)
  return &holds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerToGCHoldEventPoints_HoldRequest >&
CMsgServerToGCHoldEventPoints::holds() const {
  // @@protoc_insertion_point(field_list:CMsgServerToGCHoldEventPoints.holds)
  return holds_;
}

// optional uint32 event_id = 2;
inline bool CMsgServerToGCHoldEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCHoldEventPoints::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerToGCHoldEventPoints::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerToGCHoldEventPoints::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCHoldEventPoints.event_id)
  return event_id_;
}
inline void CMsgServerToGCHoldEventPoints::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCHoldEventPoints.event_id)
}

// optional uint64 hold_key = 3;
inline bool CMsgServerToGCHoldEventPoints::has_hold_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCHoldEventPoints::set_has_hold_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerToGCHoldEventPoints::clear_has_hold_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerToGCHoldEventPoints::clear_hold_key() {
  hold_key_ = GOOGLE_ULONGLONG(0);
  clear_has_hold_key();
}
inline ::google::protobuf::uint64 CMsgServerToGCHoldEventPoints::hold_key() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCHoldEventPoints.hold_key)
  return hold_key_;
}
inline void CMsgServerToGCHoldEventPoints::set_hold_key(::google::protobuf::uint64 value) {
  set_has_hold_key();
  hold_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCHoldEventPoints.hold_key)
}

// optional uint32 hold_until = 4;
inline bool CMsgServerToGCHoldEventPoints::has_hold_until() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCHoldEventPoints::set_has_hold_until() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgServerToGCHoldEventPoints::clear_has_hold_until() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgServerToGCHoldEventPoints::clear_hold_until() {
  hold_until_ = 0u;
  clear_has_hold_until();
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints::hold_until() const {
  // @@protoc_insertion_point(field_get:CMsgServerToGCHoldEventPoints.hold_until)
  return hold_until_;
}
inline void CMsgServerToGCHoldEventPoints::set_hold_until(::google::protobuf::uint32 value) {
  set_has_hold_until();
  hold_until_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerToGCHoldEventPoints.hold_until)
}

// -------------------------------------------------------------------

// CMsgSignOutReleaseEventPointHolds

// repeated uint32 account_ids = 1;
inline int CMsgSignOutReleaseEventPointHolds::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgSignOutReleaseEventPointHolds::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgSignOutReleaseEventPointHolds::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutReleaseEventPointHolds.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgSignOutReleaseEventPointHolds::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSignOutReleaseEventPointHolds.account_ids)
}
inline void CMsgSignOutReleaseEventPointHolds::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSignOutReleaseEventPointHolds.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSignOutReleaseEventPointHolds::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutReleaseEventPointHolds.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSignOutReleaseEventPointHolds::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutReleaseEventPointHolds.account_ids)
  return &account_ids_;
}

// optional uint32 event_id = 2;
inline bool CMsgSignOutReleaseEventPointHolds::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutReleaseEventPointHolds::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutReleaseEventPointHolds::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutReleaseEventPointHolds::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgSignOutReleaseEventPointHolds::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutReleaseEventPointHolds.event_id)
  return event_id_;
}
inline void CMsgSignOutReleaseEventPointHolds::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutReleaseEventPointHolds.event_id)
}

// optional uint64 hold_key = 3;
inline bool CMsgSignOutReleaseEventPointHolds::has_hold_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutReleaseEventPointHolds::set_has_hold_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSignOutReleaseEventPointHolds::clear_has_hold_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSignOutReleaseEventPointHolds::clear_hold_key() {
  hold_key_ = GOOGLE_ULONGLONG(0);
  clear_has_hold_key();
}
inline ::google::protobuf::uint64 CMsgSignOutReleaseEventPointHolds::hold_key() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutReleaseEventPointHolds.hold_key)
  return hold_key_;
}
inline void CMsgSignOutReleaseEventPointHolds::set_hold_key(::google::protobuf::uint64 value) {
  set_has_hold_key();
  hold_key_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutReleaseEventPointHolds.hold_key)
}

// -------------------------------------------------------------------

// CMsgGCToServerUpdateBroadcastCheers

// optional uint32 time_stamp = 1;
inline bool CMsgGCToServerUpdateBroadcastCheers::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerUpdateBroadcastCheers::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToServerUpdateBroadcastCheers::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToServerUpdateBroadcastCheers::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 CMsgGCToServerUpdateBroadcastCheers::time_stamp() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerUpdateBroadcastCheers.time_stamp)
  return time_stamp_;
}
inline void CMsgGCToServerUpdateBroadcastCheers::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerUpdateBroadcastCheers.time_stamp)
}

// optional uint32 team_1_cheers = 2;
inline bool CMsgGCToServerUpdateBroadcastCheers::has_team_1_cheers() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerUpdateBroadcastCheers::set_has_team_1_cheers() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToServerUpdateBroadcastCheers::clear_has_team_1_cheers() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToServerUpdateBroadcastCheers::clear_team_1_cheers() {
  team_1_cheers_ = 0u;
  clear_has_team_1_cheers();
}
inline ::google::protobuf::uint32 CMsgGCToServerUpdateBroadcastCheers::team_1_cheers() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerUpdateBroadcastCheers.team_1_cheers)
  return team_1_cheers_;
}
inline void CMsgGCToServerUpdateBroadcastCheers::set_team_1_cheers(::google::protobuf::uint32 value) {
  set_has_team_1_cheers();
  team_1_cheers_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerUpdateBroadcastCheers.team_1_cheers)
}

// optional uint32 team_2_cheers = 3;
inline bool CMsgGCToServerUpdateBroadcastCheers::has_team_2_cheers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToServerUpdateBroadcastCheers::set_has_team_2_cheers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToServerUpdateBroadcastCheers::clear_has_team_2_cheers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToServerUpdateBroadcastCheers::clear_team_2_cheers() {
  team_2_cheers_ = 0u;
  clear_has_team_2_cheers();
}
inline ::google::protobuf::uint32 CMsgGCToServerUpdateBroadcastCheers::team_2_cheers() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerUpdateBroadcastCheers.team_2_cheers)
  return team_2_cheers_;
}
inline void CMsgGCToServerUpdateBroadcastCheers::set_team_2_cheers(::google::protobuf::uint32 value) {
  set_has_team_2_cheers();
  team_2_cheers_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToServerUpdateBroadcastCheers.team_2_cheers)
}

// -------------------------------------------------------------------

// CMsgSignOutWagerStats_Player

// optional uint32 account_id = 1;
inline bool CMsgSignOutWagerStats_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutWagerStats_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSignOutWagerStats_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSignOutWagerStats_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgSignOutWagerStats_Player::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutWagerStats.Player.account_id)
  return account_id_;
}
inline void CMsgSignOutWagerStats_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutWagerStats.Player.account_id)
}

// optional sint32 winnings = 2;
inline bool CMsgSignOutWagerStats_Player::has_winnings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutWagerStats_Player::set_has_winnings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutWagerStats_Player::clear_has_winnings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutWagerStats_Player::clear_winnings() {
  winnings_ = 0;
  clear_has_winnings();
}
inline ::google::protobuf::int32 CMsgSignOutWagerStats_Player::winnings() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutWagerStats.Player.winnings)
  return winnings_;
}
inline void CMsgSignOutWagerStats_Player::set_winnings(::google::protobuf::int32 value) {
  set_has_winnings();
  winnings_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutWagerStats.Player.winnings)
}

// optional uint32 max_wager = 3;
inline bool CMsgSignOutWagerStats_Player::has_max_wager() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutWagerStats_Player::set_has_max_wager() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSignOutWagerStats_Player::clear_has_max_wager() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSignOutWagerStats_Player::clear_max_wager() {
  max_wager_ = 0u;
  clear_has_max_wager();
}
inline ::google::protobuf::uint32 CMsgSignOutWagerStats_Player::max_wager() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutWagerStats.Player.max_wager)
  return max_wager_;
}
inline void CMsgSignOutWagerStats_Player::set_max_wager(::google::protobuf::uint32 value) {
  set_has_max_wager();
  max_wager_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutWagerStats.Player.max_wager)
}

// -------------------------------------------------------------------

// CMsgSignOutWagerStats

// repeated .CMsgSignOutWagerStats.Player players = 1;
inline int CMsgSignOutWagerStats::players_size() const {
  return players_.size();
}
inline void CMsgSignOutWagerStats::clear_players() {
  players_.Clear();
}
inline const ::CMsgSignOutWagerStats_Player& CMsgSignOutWagerStats::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSignOutWagerStats.players)
  return players_.Get(index);
}
inline ::CMsgSignOutWagerStats_Player* CMsgSignOutWagerStats::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSignOutWagerStats.players)
  return players_.Mutable(index);
}
inline ::CMsgSignOutWagerStats_Player* CMsgSignOutWagerStats::add_players() {
  // @@protoc_insertion_point(field_add:CMsgSignOutWagerStats.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSignOutWagerStats_Player >*
CMsgSignOutWagerStats::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSignOutWagerStats.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSignOutWagerStats_Player >&
CMsgSignOutWagerStats::players() const {
  // @@protoc_insertion_point(field_list:CMsgSignOutWagerStats.players)
  return players_;
}

// optional uint32 event_id = 2;
inline bool CMsgSignOutWagerStats::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutWagerStats::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSignOutWagerStats::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSignOutWagerStats::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgSignOutWagerStats::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgSignOutWagerStats.event_id)
  return event_id_;
}
inline void CMsgSignOutWagerStats::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSignOutWagerStats.event_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgConnectedPlayers_SendReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgConnectedPlayers_SendReason>() {
  return ::CMsgConnectedPlayers_SendReason_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerInfo_ServerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerInfo_ServerType>() {
  return ::CMsgGameServerInfo_ServerType_descriptor();
}
template <> struct is_proto_enum< ::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState>() {
  return ::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerSaveGameResult_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerSaveGameResult_Result>() {
  return ::CMsgGameServerSaveGameResult_Result_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCToServerPredictionResult_Prediction_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCToServerPredictionResult_Prediction_EResult>() {
  return ::CMsgGCToServerPredictionResult_Prediction_EResult_descriptor();
}
template <> struct is_proto_enum< ::EPoorNetworkConditionsType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EPoorNetworkConditionsType>() {
  return ::EPoorNetworkConditionsType_descriptor();
}
template <> struct is_proto_enum< ::EAbilityAbuseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EAbilityAbuseType>() {
  return ::EAbilityAbuseType_descriptor();
}
template <> struct is_proto_enum< ::EIntentionalFeedingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EIntentionalFeedingType>() {
  return ::EIntentionalFeedingType_descriptor();
}
template <> struct is_proto_enum< ::ESuspiciousActivity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESuspiciousActivity>() {
  return ::ESuspiciousActivity_descriptor();
}
template <> struct is_proto_enum< ::ESuspiciousBuildType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESuspiciousBuildType>() {
  return ::ESuspiciousBuildType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dota_5fgcmessages_5fserver_2eproto__INCLUDED
