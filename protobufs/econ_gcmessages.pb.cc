// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "econ_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgApplyAutograph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgApplyAutograph_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAdjustItemEquippedState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAdjustItemEquippedState_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgEconPlayerStrangeCountAdjustment_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_FinalizePurchase_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_RefundPurchase_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgCraftingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgCraftingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesDataResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse_Price_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesDataResponse_Price_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCPingRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCPingRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCPingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCPingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserSessionServer_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserSessionServerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembers_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserServerMembers_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserServerMembersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNames_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLookupMultipleAccountNames_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLookupMultipleAccountNamesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse_Account_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLookupMultipleAccountNamesResponse_Account_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserPCBangNo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserPCBangNoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestCrateItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestCrateItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestCrateItemsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestCrateItemsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCCanUseDropRateBonus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCCanUseDropRateBonus_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSQLAddDropRateBonus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSQLAddDropRateBonus_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSQLUpgradeBattleBooster_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSQLUpgradeBattleBooster_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCRefreshSOCache_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCRefreshSOCache_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCCheckAccountTradeStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCCheckAccountTradeStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantSelfMadeItemToAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgUseItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgUseItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgServerUseItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgServerUseItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerBalanceRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerBalanceResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerRechargeRedirectURLRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerRechargeRedirectURLResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgCraftStatue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgCraftStatue_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRedeemCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRedeemCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRedeemCodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRedeemCodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgDevNewItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDevNewItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgDevNewItemRequestResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDevNewItemRequestResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCAddGiftItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCAddGiftItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCWrapAndDeliverGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCWrapAndDeliverGiftResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnwrapGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnwrapGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToClientBundleUnpacked_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToClientBundleUnpacked_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToClientStoreTransactionCompleted_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToClientStoreTransactionCompleted_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCEquipItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItemsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCEquipItemsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockItemStyle_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockItemStyleResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemInventoryCategory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCSetItemInventoryCategory_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockCrate_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockCrateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockCrateResponse_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRemoveItemAttributeMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRemoveItemAttributeMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCNameItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCNameItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCSetItemPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCSetItemPosition_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCMsgResponse_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Finalize_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Refund_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCPartnerRequestResponse_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCMsgInitiateTradeResponse_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_econ_5fgcmessages_2eproto() {
  protobuf_AddDesc_econ_5fgcmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "econ_gcmessages.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgApplyAutograph_descriptor_ = file->message_type(0);
  static const int CMsgApplyAutograph_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, autograph_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, item_item_id_),
  };
  CMsgApplyAutograph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgApplyAutograph_descriptor_,
      CMsgApplyAutograph::default_instance_,
      CMsgApplyAutograph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgApplyAutograph));
  CMsgAdjustItemEquippedState_descriptor_ = file->message_type(1);
  static const int CMsgAdjustItemEquippedState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, new_class_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, new_slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, style_index_),
  };
  CMsgAdjustItemEquippedState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgAdjustItemEquippedState_descriptor_,
      CMsgAdjustItemEquippedState::default_instance_,
      CMsgAdjustItemEquippedState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgAdjustItemEquippedState));
  CMsgEconPlayerStrangeCountAdjustment_descriptor_ = file->message_type(2);
  static const int CMsgEconPlayerStrangeCountAdjustment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, strange_count_adjustments_),
  };
  CMsgEconPlayerStrangeCountAdjustment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgEconPlayerStrangeCountAdjustment_descriptor_,
      CMsgEconPlayerStrangeCountAdjustment::default_instance_,
      CMsgEconPlayerStrangeCountAdjustment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgEconPlayerStrangeCountAdjustment));
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_ = CMsgEconPlayerStrangeCountAdjustment_descriptor_->nested_type(0);
  static const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, event_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, adjustment_),
  };
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_,
      CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_,
      CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment));
  CMsgRequestItemPurgatory_FinalizePurchase_descriptor_ = file->message_type(3);
  static const int CMsgRequestItemPurgatory_FinalizePurchase_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, item_ids_),
  };
  CMsgRequestItemPurgatory_FinalizePurchase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_FinalizePurchase_descriptor_,
      CMsgRequestItemPurgatory_FinalizePurchase::default_instance_,
      CMsgRequestItemPurgatory_FinalizePurchase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_FinalizePurchase));
  CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_ = file->message_type(4);
  static const int CMsgRequestItemPurgatory_FinalizePurchaseResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, result_),
  };
  CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_,
      CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_,
      CMsgRequestItemPurgatory_FinalizePurchaseResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_FinalizePurchaseResponse));
  CMsgRequestItemPurgatory_RefundPurchase_descriptor_ = file->message_type(5);
  static const int CMsgRequestItemPurgatory_RefundPurchase_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, item_id_),
  };
  CMsgRequestItemPurgatory_RefundPurchase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_RefundPurchase_descriptor_,
      CMsgRequestItemPurgatory_RefundPurchase::default_instance_,
      CMsgRequestItemPurgatory_RefundPurchase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_RefundPurchase));
  CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_ = file->message_type(6);
  static const int CMsgRequestItemPurgatory_RefundPurchaseResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, result_),
  };
  CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_,
      CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_,
      CMsgRequestItemPurgatory_RefundPurchaseResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_RefundPurchaseResponse));
  CMsgCraftingResponse_descriptor_ = file->message_type(7);
  static const int CMsgCraftingResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, item_ids_),
  };
  CMsgCraftingResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgCraftingResponse_descriptor_,
      CMsgCraftingResponse::default_instance_,
      CMsgCraftingResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgCraftingResponse));
  CMsgGCRequestStoreSalesData_descriptor_ = file->message_type(8);
  static const int CMsgGCRequestStoreSalesData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, currency_),
  };
  CMsgGCRequestStoreSalesData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesData_descriptor_,
      CMsgGCRequestStoreSalesData::default_instance_,
      CMsgGCRequestStoreSalesData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesData));
  CMsgGCRequestStoreSalesDataResponse_descriptor_ = file->message_type(9);
  static const int CMsgGCRequestStoreSalesDataResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, sale_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, expiration_time_),
  };
  CMsgGCRequestStoreSalesDataResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesDataResponse_descriptor_,
      CMsgGCRequestStoreSalesDataResponse::default_instance_,
      CMsgGCRequestStoreSalesDataResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesDataResponse));
  CMsgGCRequestStoreSalesDataResponse_Price_descriptor_ = CMsgGCRequestStoreSalesDataResponse_descriptor_->nested_type(0);
  static const int CMsgGCRequestStoreSalesDataResponse_Price_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, price_),
  };
  CMsgGCRequestStoreSalesDataResponse_Price_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesDataResponse_Price_descriptor_,
      CMsgGCRequestStoreSalesDataResponse_Price::default_instance_,
      CMsgGCRequestStoreSalesDataResponse_Price_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesDataResponse_Price));
  CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_ = file->message_type(10);
  static const int CMsgGCRequestStoreSalesDataUpToDateResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, expiration_time_),
  };
  CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_,
      CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_,
      CMsgGCRequestStoreSalesDataUpToDateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesDataUpToDateResponse));
  CMsgGCToGCPingRequest_descriptor_ = file->message_type(11);
  static const int CMsgGCToGCPingRequest_offsets_[1] = {
  };
  CMsgGCToGCPingRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCPingRequest_descriptor_,
      CMsgGCToGCPingRequest::default_instance_,
      CMsgGCToGCPingRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCPingRequest));
  CMsgGCToGCPingResponse_descriptor_ = file->message_type(12);
  static const int CMsgGCToGCPingResponse_offsets_[1] = {
  };
  CMsgGCToGCPingResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCPingResponse_descriptor_,
      CMsgGCToGCPingResponse::default_instance_,
      CMsgGCToGCPingResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCPingResponse));
  CMsgGCToGCGetUserSessionServer_descriptor_ = file->message_type(13);
  static const int CMsgGCToGCGetUserSessionServer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, account_id_),
  };
  CMsgGCToGCGetUserSessionServer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserSessionServer_descriptor_,
      CMsgGCToGCGetUserSessionServer::default_instance_,
      CMsgGCToGCGetUserSessionServer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserSessionServer));
  CMsgGCToGCGetUserSessionServerResponse_descriptor_ = file->message_type(14);
  static const int CMsgGCToGCGetUserSessionServerResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, server_steam_id_),
  };
  CMsgGCToGCGetUserSessionServerResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserSessionServerResponse_descriptor_,
      CMsgGCToGCGetUserSessionServerResponse::default_instance_,
      CMsgGCToGCGetUserSessionServerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserSessionServerResponse));
  CMsgGCToGCGetUserServerMembers_descriptor_ = file->message_type(15);
  static const int CMsgGCToGCGetUserServerMembers_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, max_spectators_),
  };
  CMsgGCToGCGetUserServerMembers_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserServerMembers_descriptor_,
      CMsgGCToGCGetUserServerMembers::default_instance_,
      CMsgGCToGCGetUserServerMembers_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserServerMembers));
  CMsgGCToGCGetUserServerMembersResponse_descriptor_ = file->message_type(16);
  static const int CMsgGCToGCGetUserServerMembersResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, member_account_id_),
  };
  CMsgGCToGCGetUserServerMembersResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserServerMembersResponse_descriptor_,
      CMsgGCToGCGetUserServerMembersResponse::default_instance_,
      CMsgGCToGCGetUserServerMembersResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserServerMembersResponse));
  CMsgLookupMultipleAccountNames_descriptor_ = file->message_type(17);
  static const int CMsgLookupMultipleAccountNames_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, accountids_),
  };
  CMsgLookupMultipleAccountNames_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLookupMultipleAccountNames_descriptor_,
      CMsgLookupMultipleAccountNames::default_instance_,
      CMsgLookupMultipleAccountNames_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLookupMultipleAccountNames));
  CMsgLookupMultipleAccountNamesResponse_descriptor_ = file->message_type(18);
  static const int CMsgLookupMultipleAccountNamesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, accounts_),
  };
  CMsgLookupMultipleAccountNamesResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLookupMultipleAccountNamesResponse_descriptor_,
      CMsgLookupMultipleAccountNamesResponse::default_instance_,
      CMsgLookupMultipleAccountNamesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLookupMultipleAccountNamesResponse));
  CMsgLookupMultipleAccountNamesResponse_Account_descriptor_ = CMsgLookupMultipleAccountNamesResponse_descriptor_->nested_type(0);
  static const int CMsgLookupMultipleAccountNamesResponse_Account_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, persona_),
  };
  CMsgLookupMultipleAccountNamesResponse_Account_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLookupMultipleAccountNamesResponse_Account_descriptor_,
      CMsgLookupMultipleAccountNamesResponse_Account::default_instance_,
      CMsgLookupMultipleAccountNamesResponse_Account_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLookupMultipleAccountNamesResponse_Account));
  CMsgGCToGCGetUserPCBangNo_descriptor_ = file->message_type(19);
  static const int CMsgGCToGCGetUserPCBangNo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, account_id_),
  };
  CMsgGCToGCGetUserPCBangNo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserPCBangNo_descriptor_,
      CMsgGCToGCGetUserPCBangNo::default_instance_,
      CMsgGCToGCGetUserPCBangNo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserPCBangNo));
  CMsgGCToGCGetUserPCBangNoResponse_descriptor_ = file->message_type(20);
  static const int CMsgGCToGCGetUserPCBangNoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, pc_bang_no_),
  };
  CMsgGCToGCGetUserPCBangNoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserPCBangNoResponse_descriptor_,
      CMsgGCToGCGetUserPCBangNoResponse::default_instance_,
      CMsgGCToGCGetUserPCBangNoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserPCBangNoResponse));
  CMsgRequestCrateItems_descriptor_ = file->message_type(21);
  static const int CMsgRequestCrateItems_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, crate_item_def_),
  };
  CMsgRequestCrateItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestCrateItems_descriptor_,
      CMsgRequestCrateItems::default_instance_,
      CMsgRequestCrateItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestCrateItems));
  CMsgRequestCrateItemsResponse_descriptor_ = file->message_type(22);
  static const int CMsgRequestCrateItemsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, crate_item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, item_defs_),
  };
  CMsgRequestCrateItemsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestCrateItemsResponse_descriptor_,
      CMsgRequestCrateItemsResponse::default_instance_,
      CMsgRequestCrateItemsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestCrateItemsResponse));
  CMsgGCToGCCanUseDropRateBonus_descriptor_ = file->message_type(23);
  static const int CMsgGCToGCCanUseDropRateBonus_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, drop_rate_bonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, booster_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, exclusive_item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, allow_equal_rate_),
  };
  CMsgGCToGCCanUseDropRateBonus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCCanUseDropRateBonus_descriptor_,
      CMsgGCToGCCanUseDropRateBonus::default_instance_,
      CMsgGCToGCCanUseDropRateBonus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCCanUseDropRateBonus));
  CMsgSQLAddDropRateBonus_descriptor_ = file->message_type(24);
  static const int CMsgSQLAddDropRateBonus_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, drop_rate_bonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, booster_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, seconds_duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, end_time_stamp_),
  };
  CMsgSQLAddDropRateBonus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSQLAddDropRateBonus_descriptor_,
      CMsgSQLAddDropRateBonus::default_instance_,
      CMsgSQLAddDropRateBonus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSQLAddDropRateBonus));
  CMsgSQLUpgradeBattleBooster_descriptor_ = file->message_type(25);
  static const int CMsgSQLUpgradeBattleBooster_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, bonus_to_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, booster_type_),
  };
  CMsgSQLUpgradeBattleBooster_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSQLUpgradeBattleBooster_descriptor_,
      CMsgSQLUpgradeBattleBooster::default_instance_,
      CMsgSQLUpgradeBattleBooster_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSQLUpgradeBattleBooster));
  CMsgGCToGCRefreshSOCache_descriptor_ = file->message_type(26);
  static const int CMsgGCToGCRefreshSOCache_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, reload_),
  };
  CMsgGCToGCRefreshSOCache_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCRefreshSOCache_descriptor_,
      CMsgGCToGCRefreshSOCache::default_instance_,
      CMsgGCToGCRefreshSOCache_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCRefreshSOCache));
  CMsgGCToGCCheckAccountTradeStatus_descriptor_ = file->message_type(27);
  static const int CMsgGCToGCCheckAccountTradeStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, initiator_),
  };
  CMsgGCToGCCheckAccountTradeStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCCheckAccountTradeStatus_descriptor_,
      CMsgGCToGCCheckAccountTradeStatus::default_instance_,
      CMsgGCToGCCheckAccountTradeStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCCheckAccountTradeStatus));
  CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_ = file->message_type(28);
  static const int CMsgGCToGCCheckAccountTradeStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, can_trade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, error_code_),
  };
  CMsgGCToGCCheckAccountTradeStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_,
      CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_,
      CMsgGCToGCCheckAccountTradeStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCCheckAccountTradeStatusResponse));
  CMsgGCToGCGrantAccountRolledItems_descriptor_ = file->message_type(29);
  static const int CMsgGCToGCGrantAccountRolledItems_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, audit_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, audit_data_),
  };
  CMsgGCToGCGrantAccountRolledItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_descriptor_,
      CMsgGCToGCGrantAccountRolledItems::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems));
  CMsgGCToGCGrantAccountRolledItems_Item_descriptor_ = CMsgGCToGCGrantAccountRolledItems_descriptor_->nested_type(0);
  static const int CMsgGCToGCGrantAccountRolledItems_Item_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, loot_lists_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, ignore_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, dynamic_attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, additional_audit_entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, inventory_token_),
  };
  CMsgGCToGCGrantAccountRolledItems_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_Item_descriptor_,
      CMsgGCToGCGrantAccountRolledItems_Item::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems_Item));
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_ = CMsgGCToGCGrantAccountRolledItems_Item_descriptor_->nested_type(0);
  static const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_float_),
  };
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_,
      CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute));
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_ = CMsgGCToGCGrantAccountRolledItems_Item_descriptor_->nested_type(1);
  static const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, owner_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_data_),
  };
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_,
      CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry));
  CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_ = file->message_type(30);
  static const int CMsgGCToGCGrantSelfMadeItemToAccount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, item_def_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, accountid_),
  };
  CMsgGCToGCGrantSelfMadeItemToAccount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_,
      CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_,
      CMsgGCToGCGrantSelfMadeItemToAccount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantSelfMadeItemToAccount));
  CMsgUseItem_descriptor_ = file->message_type(31);
  static const int CMsgUseItem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, target_steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, gift__potential_targets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, duel__class_lock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, initiator_steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, itempack__ack_immediately_),
  };
  CMsgUseItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgUseItem_descriptor_,
      CMsgUseItem::default_instance_,
      CMsgUseItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgUseItem));
  CMsgServerUseItem_descriptor_ = file->message_type(32);
  static const int CMsgServerUseItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, initiator_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, use_item_msg_),
  };
  CMsgServerUseItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgServerUseItem_descriptor_,
      CMsgServerUseItem::default_instance_,
      CMsgServerUseItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgServerUseItem));
  CMsgGCPartnerBalanceRequest_descriptor_ = file->message_type(33);
  static const int CMsgGCPartnerBalanceRequest_offsets_[1] = {
  };
  CMsgGCPartnerBalanceRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerBalanceRequest_descriptor_,
      CMsgGCPartnerBalanceRequest::default_instance_,
      CMsgGCPartnerBalanceRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerBalanceRequest));
  CMsgGCPartnerBalanceResponse_descriptor_ = file->message_type(34);
  static const int CMsgGCPartnerBalanceResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, balance_),
  };
  CMsgGCPartnerBalanceResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerBalanceResponse_descriptor_,
      CMsgGCPartnerBalanceResponse::default_instance_,
      CMsgGCPartnerBalanceResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerBalanceResponse));
  CMsgGCPartnerRechargeRedirectURLRequest_descriptor_ = file->message_type(35);
  static const int CMsgGCPartnerRechargeRedirectURLRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, def_index_),
  };
  CMsgGCPartnerRechargeRedirectURLRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerRechargeRedirectURLRequest_descriptor_,
      CMsgGCPartnerRechargeRedirectURLRequest::default_instance_,
      CMsgGCPartnerRechargeRedirectURLRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerRechargeRedirectURLRequest));
  CMsgGCPartnerRechargeRedirectURLResponse_descriptor_ = file->message_type(36);
  static const int CMsgGCPartnerRechargeRedirectURLResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, url_),
  };
  CMsgGCPartnerRechargeRedirectURLResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerRechargeRedirectURLResponse_descriptor_,
      CMsgGCPartnerRechargeRedirectURLResponse::default_instance_,
      CMsgGCPartnerRechargeRedirectURLResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerRechargeRedirectURLResponse));
  CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_ = file->message_type(37);
  static const int CMsgGCEconSQLWorkItemEmbeddedRollbackData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, deleted_item_id_),
  };
  CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_,
      CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_,
      CMsgGCEconSQLWorkItemEmbeddedRollbackData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCEconSQLWorkItemEmbeddedRollbackData));
  CMsgCraftStatue_descriptor_ = file->message_type(38);
  static const int CMsgCraftStatue_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, sequencename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, cycle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, pedestal_itemdef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, toolid_),
  };
  CMsgCraftStatue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgCraftStatue_descriptor_,
      CMsgCraftStatue::default_instance_,
      CMsgCraftStatue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgCraftStatue));
  CMsgRedeemCode_descriptor_ = file->message_type(39);
  static const int CMsgRedeemCode_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, code_),
  };
  CMsgRedeemCode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRedeemCode_descriptor_,
      CMsgRedeemCode::default_instance_,
      CMsgRedeemCode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRedeemCode));
  CMsgRedeemCodeResponse_descriptor_ = file->message_type(40);
  static const int CMsgRedeemCodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, response_),
  };
  CMsgRedeemCodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRedeemCodeResponse_descriptor_,
      CMsgRedeemCodeResponse::default_instance_,
      CMsgRedeemCodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRedeemCodeResponse));
  CMsgDevNewItemRequest_descriptor_ = file->message_type(41);
  static const int CMsgDevNewItemRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, item_def_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, loot_list_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, attr_def_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, attr_value_),
  };
  CMsgDevNewItemRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgDevNewItemRequest_descriptor_,
      CMsgDevNewItemRequest::default_instance_,
      CMsgDevNewItemRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgDevNewItemRequest));
  CMsgDevNewItemRequestResponse_descriptor_ = file->message_type(42);
  static const int CMsgDevNewItemRequestResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, success_),
  };
  CMsgDevNewItemRequestResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgDevNewItemRequestResponse_descriptor_,
      CMsgDevNewItemRequestResponse::default_instance_,
      CMsgDevNewItemRequestResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgDevNewItemRequestResponse));
  CMsgGCAddGiftItem_descriptor_ = file->message_type(43);
  static const int CMsgGCAddGiftItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, item_id_),
  };
  CMsgGCAddGiftItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCAddGiftItem_descriptor_,
      CMsgGCAddGiftItem::default_instance_,
      CMsgGCAddGiftItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCAddGiftItem));
  CMsgClientToGCWrapAndDeliverGift_descriptor_ = file->message_type(44);
  static const int CMsgClientToGCWrapAndDeliverGift_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, give_to_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, gift_message_),
  };
  CMsgClientToGCWrapAndDeliverGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCWrapAndDeliverGift_descriptor_,
      CMsgClientToGCWrapAndDeliverGift::default_instance_,
      CMsgClientToGCWrapAndDeliverGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCWrapAndDeliverGift));
  CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_ = file->message_type(45);
  static const int CMsgClientToGCWrapAndDeliverGiftResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_uses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_uses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_window_hours_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, trade_restriction_),
  };
  CMsgClientToGCWrapAndDeliverGiftResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_,
      CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_,
      CMsgClientToGCWrapAndDeliverGiftResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCWrapAndDeliverGiftResponse));
  CMsgClientToGCUnwrapGift_descriptor_ = file->message_type(46);
  static const int CMsgClientToGCUnwrapGift_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, item_id_),
  };
  CMsgClientToGCUnwrapGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnwrapGift_descriptor_,
      CMsgClientToGCUnwrapGift::default_instance_,
      CMsgClientToGCUnwrapGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnwrapGift));
  CMsgGCToClientBundleUnpacked_descriptor_ = file->message_type(47);
  static const int CMsgGCToClientBundleUnpacked_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientBundleUnpacked, bundle_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientBundleUnpacked, item_ids_),
  };
  CMsgGCToClientBundleUnpacked_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToClientBundleUnpacked_descriptor_,
      CMsgGCToClientBundleUnpacked::default_instance_,
      CMsgGCToClientBundleUnpacked_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientBundleUnpacked, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientBundleUnpacked, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToClientBundleUnpacked));
  CMsgGCToClientStoreTransactionCompleted_descriptor_ = file->message_type(48);
  static const int CMsgGCToClientStoreTransactionCompleted_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, txn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, item_ids_),
  };
  CMsgGCToClientStoreTransactionCompleted_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToClientStoreTransactionCompleted_descriptor_,
      CMsgGCToClientStoreTransactionCompleted::default_instance_,
      CMsgGCToClientStoreTransactionCompleted_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToClientStoreTransactionCompleted));
  CMsgClientToGCEquipItems_descriptor_ = file->message_type(49);
  static const int CMsgClientToGCEquipItems_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, equips_),
  };
  CMsgClientToGCEquipItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCEquipItems_descriptor_,
      CMsgClientToGCEquipItems::default_instance_,
      CMsgClientToGCEquipItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCEquipItems));
  CMsgClientToGCEquipItemsResponse_descriptor_ = file->message_type(50);
  static const int CMsgClientToGCEquipItemsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, so_cache_version_id_),
  };
  CMsgClientToGCEquipItemsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCEquipItemsResponse_descriptor_,
      CMsgClientToGCEquipItemsResponse::default_instance_,
      CMsgClientToGCEquipItemsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCEquipItemsResponse));
  CMsgClientToGCUnlockItemStyle_descriptor_ = file->message_type(51);
  static const int CMsgClientToGCUnlockItemStyle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, item_to_unlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, style_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, consumable_item_ids_),
  };
  CMsgClientToGCUnlockItemStyle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockItemStyle_descriptor_,
      CMsgClientToGCUnlockItemStyle::default_instance_,
      CMsgClientToGCUnlockItemStyle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockItemStyle));
  CMsgClientToGCUnlockItemStyleResponse_descriptor_ = file->message_type(52);
  static const int CMsgClientToGCUnlockItemStyleResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, style_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, style_prereq_),
  };
  CMsgClientToGCUnlockItemStyleResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockItemStyleResponse_descriptor_,
      CMsgClientToGCUnlockItemStyleResponse::default_instance_,
      CMsgClientToGCUnlockItemStyleResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockItemStyleResponse));
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor_ = CMsgClientToGCUnlockItemStyleResponse_descriptor_->enum_type(0);
  CMsgClientToGCSetItemInventoryCategory_descriptor_ = file->message_type(53);
  static const int CMsgClientToGCSetItemInventoryCategory_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, item_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, set_to_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, remove_categories_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, add_categories_),
  };
  CMsgClientToGCSetItemInventoryCategory_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCSetItemInventoryCategory_descriptor_,
      CMsgClientToGCSetItemInventoryCategory::default_instance_,
      CMsgClientToGCSetItemInventoryCategory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCSetItemInventoryCategory));
  CMsgClientToGCUnlockCrate_descriptor_ = file->message_type(54);
  static const int CMsgClientToGCUnlockCrate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, crate_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, key_item_id_),
  };
  CMsgClientToGCUnlockCrate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockCrate_descriptor_,
      CMsgClientToGCUnlockCrate::default_instance_,
      CMsgClientToGCUnlockCrate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockCrate));
  CMsgClientToGCUnlockCrateResponse_descriptor_ = file->message_type(55);
  static const int CMsgClientToGCUnlockCrateResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, granted_items_),
  };
  CMsgClientToGCUnlockCrateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockCrateResponse_descriptor_,
      CMsgClientToGCUnlockCrateResponse::default_instance_,
      CMsgClientToGCUnlockCrateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockCrateResponse));
  CMsgClientToGCUnlockCrateResponse_Item_descriptor_ = CMsgClientToGCUnlockCrateResponse_descriptor_->nested_type(0);
  static const int CMsgClientToGCUnlockCrateResponse_Item_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, def_index_),
  };
  CMsgClientToGCUnlockCrateResponse_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockCrateResponse_Item_descriptor_,
      CMsgClientToGCUnlockCrateResponse_Item::default_instance_,
      CMsgClientToGCUnlockCrateResponse_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockCrateResponse_Item));
  CMsgGCRemoveItemAttributeMsg_descriptor_ = file->message_type(56);
  static const int CMsgGCRemoveItemAttributeMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRemoveItemAttributeMsg, item_id_),
  };
  CMsgGCRemoveItemAttributeMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRemoveItemAttributeMsg_descriptor_,
      CMsgGCRemoveItemAttributeMsg::default_instance_,
      CMsgGCRemoveItemAttributeMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRemoveItemAttributeMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRemoveItemAttributeMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRemoveItemAttributeMsg));
  CMsgGCNameItem_descriptor_ = file->message_type(57);
  static const int CMsgGCNameItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCNameItem, subject_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCNameItem, tool_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCNameItem, name_),
  };
  CMsgGCNameItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCNameItem_descriptor_,
      CMsgGCNameItem::default_instance_,
      CMsgGCNameItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCNameItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCNameItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCNameItem));
  CMsgGCSetItemPosition_descriptor_ = file->message_type(58);
  static const int CMsgGCSetItemPosition_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, new_position_),
  };
  CMsgGCSetItemPosition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCSetItemPosition_descriptor_,
      CMsgGCSetItemPosition::default_instance_,
      CMsgGCSetItemPosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCSetItemPosition));
  EGCItemMsg_descriptor_ = file->enum_type(0);
  EGCMsgResponse_descriptor_ = file->enum_type(1);
  EItemPurgatoryResponse_Finalize_descriptor_ = file->enum_type(2);
  EItemPurgatoryResponse_Refund_descriptor_ = file->enum_type(3);
  EGCPartnerRequestResponse_descriptor_ = file->enum_type(4);
  EGCMsgInitiateTradeResponse_descriptor_ = file->enum_type(5);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_econ_5fgcmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgApplyAutograph_descriptor_, &CMsgApplyAutograph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgAdjustItemEquippedState_descriptor_, &CMsgAdjustItemEquippedState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgEconPlayerStrangeCountAdjustment_descriptor_, &CMsgEconPlayerStrangeCountAdjustment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_, &CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_FinalizePurchase_descriptor_, &CMsgRequestItemPurgatory_FinalizePurchase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_, &CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_RefundPurchase_descriptor_, &CMsgRequestItemPurgatory_RefundPurchase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_, &CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgCraftingResponse_descriptor_, &CMsgCraftingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesData_descriptor_, &CMsgGCRequestStoreSalesData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesDataResponse_descriptor_, &CMsgGCRequestStoreSalesDataResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesDataResponse_Price_descriptor_, &CMsgGCRequestStoreSalesDataResponse_Price::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_, &CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCPingRequest_descriptor_, &CMsgGCToGCPingRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCPingResponse_descriptor_, &CMsgGCToGCPingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserSessionServer_descriptor_, &CMsgGCToGCGetUserSessionServer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserSessionServerResponse_descriptor_, &CMsgGCToGCGetUserSessionServerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserServerMembers_descriptor_, &CMsgGCToGCGetUserServerMembers::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserServerMembersResponse_descriptor_, &CMsgGCToGCGetUserServerMembersResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLookupMultipleAccountNames_descriptor_, &CMsgLookupMultipleAccountNames::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLookupMultipleAccountNamesResponse_descriptor_, &CMsgLookupMultipleAccountNamesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLookupMultipleAccountNamesResponse_Account_descriptor_, &CMsgLookupMultipleAccountNamesResponse_Account::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserPCBangNo_descriptor_, &CMsgGCToGCGetUserPCBangNo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserPCBangNoResponse_descriptor_, &CMsgGCToGCGetUserPCBangNoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestCrateItems_descriptor_, &CMsgRequestCrateItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestCrateItemsResponse_descriptor_, &CMsgRequestCrateItemsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCCanUseDropRateBonus_descriptor_, &CMsgGCToGCCanUseDropRateBonus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSQLAddDropRateBonus_descriptor_, &CMsgSQLAddDropRateBonus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSQLUpgradeBattleBooster_descriptor_, &CMsgSQLUpgradeBattleBooster::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCRefreshSOCache_descriptor_, &CMsgGCToGCRefreshSOCache::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCCheckAccountTradeStatus_descriptor_, &CMsgGCToGCCheckAccountTradeStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_, &CMsgGCToGCCheckAccountTradeStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_descriptor_, &CMsgGCToGCGrantAccountRolledItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_Item_descriptor_, &CMsgGCToGCGrantAccountRolledItems_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_, &CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_, &CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_, &CMsgGCToGCGrantSelfMadeItemToAccount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgUseItem_descriptor_, &CMsgUseItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgServerUseItem_descriptor_, &CMsgServerUseItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerBalanceRequest_descriptor_, &CMsgGCPartnerBalanceRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerBalanceResponse_descriptor_, &CMsgGCPartnerBalanceResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerRechargeRedirectURLRequest_descriptor_, &CMsgGCPartnerRechargeRedirectURLRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerRechargeRedirectURLResponse_descriptor_, &CMsgGCPartnerRechargeRedirectURLResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_, &CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgCraftStatue_descriptor_, &CMsgCraftStatue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRedeemCode_descriptor_, &CMsgRedeemCode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRedeemCodeResponse_descriptor_, &CMsgRedeemCodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgDevNewItemRequest_descriptor_, &CMsgDevNewItemRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgDevNewItemRequestResponse_descriptor_, &CMsgDevNewItemRequestResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCAddGiftItem_descriptor_, &CMsgGCAddGiftItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCWrapAndDeliverGift_descriptor_, &CMsgClientToGCWrapAndDeliverGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_, &CMsgClientToGCWrapAndDeliverGiftResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnwrapGift_descriptor_, &CMsgClientToGCUnwrapGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToClientBundleUnpacked_descriptor_, &CMsgGCToClientBundleUnpacked::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToClientStoreTransactionCompleted_descriptor_, &CMsgGCToClientStoreTransactionCompleted::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCEquipItems_descriptor_, &CMsgClientToGCEquipItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCEquipItemsResponse_descriptor_, &CMsgClientToGCEquipItemsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockItemStyle_descriptor_, &CMsgClientToGCUnlockItemStyle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockItemStyleResponse_descriptor_, &CMsgClientToGCUnlockItemStyleResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCSetItemInventoryCategory_descriptor_, &CMsgClientToGCSetItemInventoryCategory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockCrate_descriptor_, &CMsgClientToGCUnlockCrate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockCrateResponse_descriptor_, &CMsgClientToGCUnlockCrateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockCrateResponse_Item_descriptor_, &CMsgClientToGCUnlockCrateResponse_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRemoveItemAttributeMsg_descriptor_, &CMsgGCRemoveItemAttributeMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCNameItem_descriptor_, &CMsgGCNameItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCSetItemPosition_descriptor_, &CMsgGCSetItemPosition::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_econ_5fgcmessages_2eproto() {
  delete CMsgApplyAutograph::default_instance_;
  delete CMsgApplyAutograph_reflection_;
  delete CMsgAdjustItemEquippedState::default_instance_;
  delete CMsgAdjustItemEquippedState_reflection_;
  delete CMsgEconPlayerStrangeCountAdjustment::default_instance_;
  delete CMsgEconPlayerStrangeCountAdjustment_reflection_;
  delete CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_;
  delete CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_;
  delete CMsgRequestItemPurgatory_FinalizePurchase::default_instance_;
  delete CMsgRequestItemPurgatory_FinalizePurchase_reflection_;
  delete CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_;
  delete CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_;
  delete CMsgRequestItemPurgatory_RefundPurchase::default_instance_;
  delete CMsgRequestItemPurgatory_RefundPurchase_reflection_;
  delete CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_;
  delete CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_;
  delete CMsgCraftingResponse::default_instance_;
  delete CMsgCraftingResponse_reflection_;
  delete CMsgGCRequestStoreSalesData::default_instance_;
  delete CMsgGCRequestStoreSalesData_reflection_;
  delete CMsgGCRequestStoreSalesDataResponse::default_instance_;
  delete CMsgGCRequestStoreSalesDataResponse_reflection_;
  delete CMsgGCRequestStoreSalesDataResponse_Price::default_instance_;
  delete CMsgGCRequestStoreSalesDataResponse_Price_reflection_;
  delete CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_;
  delete CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_;
  delete CMsgGCToGCPingRequest::default_instance_;
  delete CMsgGCToGCPingRequest_reflection_;
  delete CMsgGCToGCPingResponse::default_instance_;
  delete CMsgGCToGCPingResponse_reflection_;
  delete CMsgGCToGCGetUserSessionServer::default_instance_;
  delete CMsgGCToGCGetUserSessionServer_reflection_;
  delete CMsgGCToGCGetUserSessionServerResponse::default_instance_;
  delete CMsgGCToGCGetUserSessionServerResponse_reflection_;
  delete CMsgGCToGCGetUserServerMembers::default_instance_;
  delete CMsgGCToGCGetUserServerMembers_reflection_;
  delete CMsgGCToGCGetUserServerMembersResponse::default_instance_;
  delete CMsgGCToGCGetUserServerMembersResponse_reflection_;
  delete CMsgLookupMultipleAccountNames::default_instance_;
  delete CMsgLookupMultipleAccountNames_reflection_;
  delete CMsgLookupMultipleAccountNamesResponse::default_instance_;
  delete CMsgLookupMultipleAccountNamesResponse_reflection_;
  delete CMsgLookupMultipleAccountNamesResponse_Account::default_instance_;
  delete CMsgLookupMultipleAccountNamesResponse_Account_reflection_;
  delete CMsgGCToGCGetUserPCBangNo::default_instance_;
  delete CMsgGCToGCGetUserPCBangNo_reflection_;
  delete CMsgGCToGCGetUserPCBangNoResponse::default_instance_;
  delete CMsgGCToGCGetUserPCBangNoResponse_reflection_;
  delete CMsgRequestCrateItems::default_instance_;
  delete CMsgRequestCrateItems_reflection_;
  delete CMsgRequestCrateItemsResponse::default_instance_;
  delete CMsgRequestCrateItemsResponse_reflection_;
  delete CMsgGCToGCCanUseDropRateBonus::default_instance_;
  delete CMsgGCToGCCanUseDropRateBonus_reflection_;
  delete CMsgSQLAddDropRateBonus::default_instance_;
  delete CMsgSQLAddDropRateBonus_reflection_;
  delete CMsgSQLUpgradeBattleBooster::default_instance_;
  delete CMsgSQLUpgradeBattleBooster_reflection_;
  delete CMsgGCToGCRefreshSOCache::default_instance_;
  delete CMsgGCToGCRefreshSOCache_reflection_;
  delete CMsgGCToGCCheckAccountTradeStatus::default_instance_;
  delete CMsgGCToGCCheckAccountTradeStatus_reflection_;
  delete CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_;
  delete CMsgGCToGCCheckAccountTradeStatusResponse_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems_Item::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_;
  delete CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_;
  delete CMsgGCToGCGrantSelfMadeItemToAccount_reflection_;
  delete CMsgUseItem::default_instance_;
  delete CMsgUseItem_reflection_;
  delete CMsgServerUseItem::default_instance_;
  delete CMsgServerUseItem_reflection_;
  delete CMsgGCPartnerBalanceRequest::default_instance_;
  delete CMsgGCPartnerBalanceRequest_reflection_;
  delete CMsgGCPartnerBalanceResponse::default_instance_;
  delete CMsgGCPartnerBalanceResponse_reflection_;
  delete CMsgGCPartnerRechargeRedirectURLRequest::default_instance_;
  delete CMsgGCPartnerRechargeRedirectURLRequest_reflection_;
  delete CMsgGCPartnerRechargeRedirectURLResponse::default_instance_;
  delete CMsgGCPartnerRechargeRedirectURLResponse_reflection_;
  delete CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_;
  delete CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_;
  delete CMsgCraftStatue::default_instance_;
  delete CMsgCraftStatue_reflection_;
  delete CMsgRedeemCode::default_instance_;
  delete CMsgRedeemCode_reflection_;
  delete CMsgRedeemCodeResponse::default_instance_;
  delete CMsgRedeemCodeResponse_reflection_;
  delete CMsgDevNewItemRequest::default_instance_;
  delete CMsgDevNewItemRequest_reflection_;
  delete CMsgDevNewItemRequestResponse::default_instance_;
  delete CMsgDevNewItemRequestResponse_reflection_;
  delete CMsgGCAddGiftItem::default_instance_;
  delete CMsgGCAddGiftItem_reflection_;
  delete CMsgClientToGCWrapAndDeliverGift::default_instance_;
  delete CMsgClientToGCWrapAndDeliverGift_reflection_;
  delete CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_;
  delete CMsgClientToGCWrapAndDeliverGiftResponse_reflection_;
  delete CMsgClientToGCUnwrapGift::default_instance_;
  delete CMsgClientToGCUnwrapGift_reflection_;
  delete CMsgGCToClientBundleUnpacked::default_instance_;
  delete CMsgGCToClientBundleUnpacked_reflection_;
  delete CMsgGCToClientStoreTransactionCompleted::default_instance_;
  delete CMsgGCToClientStoreTransactionCompleted_reflection_;
  delete CMsgClientToGCEquipItems::default_instance_;
  delete CMsgClientToGCEquipItems_reflection_;
  delete CMsgClientToGCEquipItemsResponse::default_instance_;
  delete CMsgClientToGCEquipItemsResponse_reflection_;
  delete CMsgClientToGCUnlockItemStyle::default_instance_;
  delete CMsgClientToGCUnlockItemStyle_reflection_;
  delete CMsgClientToGCUnlockItemStyleResponse::default_instance_;
  delete CMsgClientToGCUnlockItemStyleResponse_reflection_;
  delete CMsgClientToGCSetItemInventoryCategory::default_instance_;
  delete CMsgClientToGCSetItemInventoryCategory_reflection_;
  delete CMsgClientToGCUnlockCrate::default_instance_;
  delete CMsgClientToGCUnlockCrate_reflection_;
  delete CMsgClientToGCUnlockCrateResponse::default_instance_;
  delete CMsgClientToGCUnlockCrateResponse_reflection_;
  delete CMsgClientToGCUnlockCrateResponse_Item::default_instance_;
  delete CMsgClientToGCUnlockCrateResponse_Item_reflection_;
  delete CMsgGCRemoveItemAttributeMsg::default_instance_;
  delete CMsgGCRemoveItemAttributeMsg_reflection_;
  delete CMsgGCNameItem::default_instance_;
  delete CMsgGCNameItem_reflection_;
  delete CMsgGCSetItemPosition::default_instance_;
  delete CMsgGCSetItemPosition_reflection_;
}

void protobuf_AddDesc_econ_5fgcmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_steammessages_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025econ_gcmessages.proto\032\023steammessages.p"
    "roto\"E\n\022CMsgApplyAutograph\022\031\n\021autograph_"
    "item_id\030\001 \001(\004\022\024\n\014item_item_id\030\002 \001(\004\"h\n\033C"
    "MsgAdjustItemEquippedState\022\017\n\007item_id\030\001 "
    "\001(\004\022\021\n\tnew_class\030\002 \001(\r\022\020\n\010new_slot\030\003 \001(\r"
    "\022\023\n\013style_index\030\004 \001(\r\"\360\001\n$CMsgEconPlayer"
    "StrangeCountAdjustment\022\022\n\naccount_id\030\001 \001"
    "(\r\022`\n\031strange_count_adjustments\030\002 \003(\0132=."
    "CMsgEconPlayerStrangeCountAdjustment.CSt"
    "rangeCountAdjustment\032R\n\027CStrangeCountAdj"
    "ustment\022\022\n\nevent_type\030\001 \001(\r\022\017\n\007item_id\030\002"
    " \001(\004\022\022\n\nadjustment\030\003 \001(\r\"=\n)CMsgRequestI"
    "temPurgatory_FinalizePurchase\022\020\n\010item_id"
    "s\030\001 \003(\004\"C\n1CMsgRequestItemPurgatory_Fina"
    "lizePurchaseResponse\022\016\n\006result\030\001 \001(\r\":\n\'"
    "CMsgRequestItemPurgatory_RefundPurchase\022"
    "\017\n\007item_id\030\001 \001(\004\"A\n/CMsgRequestItemPurga"
    "tory_RefundPurchaseResponse\022\016\n\006result\030\001 "
    "\001(\r\"(\n\024CMsgCraftingResponse\022\020\n\010item_ids\030"
    "\001 \003(\004\"@\n\033CMsgGCRequestStoreSalesData\022\017\n\007"
    "version\030\001 \001(\r\022\020\n\010currency\030\002 \001(\r\"\271\001\n#CMsg"
    "GCRequestStoreSalesDataResponse\022>\n\nsale_"
    "price\030\001 \003(\0132*.CMsgGCRequestStoreSalesDat"
    "aResponse.Price\022\017\n\007version\030\002 \001(\r\022\027\n\017expi"
    "ration_time\030\003 \001(\r\032(\n\005Price\022\020\n\010item_def\030\001"
    " \001(\r\022\r\n\005price\030\002 \001(\r\"W\n+CMsgGCRequestStor"
    "eSalesDataUpToDateResponse\022\017\n\007version\030\001 "
    "\001(\r\022\027\n\017expiration_time\030\002 \001(\r\"\027\n\025CMsgGCTo"
    "GCPingRequest\"\030\n\026CMsgGCToGCPingResponse\""
    "4\n\036CMsgGCToGCGetUserSessionServer\022\022\n\nacc"
    "ount_id\030\001 \001(\r\"A\n&CMsgGCToGCGetUserSessio"
    "nServerResponse\022\027\n\017server_steam_id\030\001 \001(\006"
    "\"L\n\036CMsgGCToGCGetUserServerMembers\022\022\n\nac"
    "count_id\030\001 \001(\r\022\026\n\016max_spectators\030\002 \001(\r\"C"
    "\n&CMsgGCToGCGetUserServerMembersResponse"
    "\022\031\n\021member_account_id\030\001 \003(\r\"8\n\036CMsgLooku"
    "pMultipleAccountNames\022\026\n\naccountids\030\001 \003("
    "\rB\002\020\001\"\232\001\n&CMsgLookupMultipleAccountNames"
    "Response\022A\n\010accounts\030\001 \003(\0132/.CMsgLookupM"
    "ultipleAccountNamesResponse.Account\032-\n\007A"
    "ccount\022\021\n\taccountid\030\001 \001(\r\022\017\n\007persona\030\002 \001"
    "(\t\"/\n\031CMsgGCToGCGetUserPCBangNo\022\022\n\naccou"
    "nt_id\030\001 \001(\r\"7\n!CMsgGCToGCGetUserPCBangNo"
    "Response\022\022\n\npc_bang_no\030\001 \001(\r\"/\n\025CMsgRequ"
    "estCrateItems\022\026\n\016crate_item_def\030\001 \001(\r\"J\n"
    "\035CMsgRequestCrateItemsResponse\022\026\n\016crate_"
    "item_def\030\001 \001(\r\022\021\n\titem_defs\030\002 \003(\r\"\230\001\n\035CM"
    "sgGCToGCCanUseDropRateBonus\022\022\n\naccount_i"
    "d\030\001 \001(\r\022\027\n\017drop_rate_bonus\030\002 \001(\002\022\024\n\014boos"
    "ter_type\030\003 \001(\r\022\032\n\022exclusive_item_def\030\004 \001"
    "(\r\022\030\n\020allow_equal_rate\030\005 \001(\010\"\261\001\n\027CMsgSQL"
    "AddDropRateBonus\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007"
    "item_id\030\002 \001(\004\022\020\n\010item_def\030\003 \001(\r\022\027\n\017drop_"
    "rate_bonus\030\004 \001(\002\022\024\n\014booster_type\030\005 \001(\r\022\030"
    "\n\020seconds_duration\030\006 \001(\r\022\026\n\016end_time_sta"
    "mp\030\007 \001(\r\"o\n\033CMsgSQLUpgradeBattleBooster\022"
    "\022\n\naccount_id\030\001 \001(\r\022\020\n\010item_def\030\002 \001(\r\022\024\n"
    "\014bonus_to_add\030\003 \001(\002\022\024\n\014booster_type\030\004 \001("
    "\r\">\n\030CMsgGCToGCRefreshSOCache\022\022\n\naccount"
    "_id\030\001 \001(\r\022\016\n\006reload\030\002 \001(\010\"J\n!CMsgGCToGCC"
    "heckAccountTradeStatus\022\022\n\naccount_id\030\001 \001"
    "(\r\022\021\n\tinitiator\030\002 \001(\010\"R\n)CMsgGCToGCCheck"
    "AccountTradeStatusResponse\022\021\n\tcan_trade\030"
    "\001 \001(\010\022\022\n\nerror_code\030\002 \001(\r\"\346\004\n!CMsgGCToGC"
    "GrantAccountRolledItems\022\022\n\naccount_id\030\001 "
    "\001(\r\0226\n\005items\030\002 \003(\0132\'.CMsgGCToGCGrantAcco"
    "untRolledItems.Item\022\024\n\014audit_action\030\003 \001("
    "\r\022\022\n\naudit_data\030\004 \001(\r\032\312\003\n\004Item\022\020\n\010item_d"
    "ef\030\001 \001(\r\022\022\n\nloot_lists\030\002 \003(\t\022\024\n\014ignore_l"
    "imit\030\003 \001(\010\022\016\n\006origin\030\004 \001(\r\022T\n\022dynamic_at"
    "tributes\030\005 \003(\01328.CMsgGCToGCGrantAccountR"
    "olledItems.Item.DynamicAttribute\022^\n\030addi"
    "tional_audit_entries\030\006 \003(\0132<.CMsgGCToGCG"
    "rantAccountRolledItems.Item.AdditionalAu"
    "ditEntry\022\027\n\017inventory_token\030\007 \001(\r\032K\n\020Dyn"
    "amicAttribute\022\014\n\004name\030\001 \001(\t\022\024\n\014value_uin"
    "t32\030\002 \001(\r\022\023\n\013value_float\030\003 \001(\002\032Z\n\024Additi"
    "onalAuditEntry\022\030\n\020owner_account_id\030\001 \001(\r"
    "\022\024\n\014audit_action\030\002 \001(\r\022\022\n\naudit_data\030\003 \001"
    "(\r\"Q\n$CMsgGCToGCGrantSelfMadeItemToAccou"
    "nt\022\026\n\016item_def_index\030\001 \001(\r\022\021\n\taccountid\030"
    "\002 \001(\r\"\261\001\n\013CMsgUseItem\022\017\n\007item_id\030\001 \001(\004\022\027"
    "\n\017target_steam_id\030\002 \001(\006\022\037\n\027gift__potenti"
    "al_targets\030\003 \003(\r\022\030\n\020duel__class_lock\030\004 \001"
    "(\r\022\032\n\022initiator_steam_id\030\005 \001(\004\022!\n\031itempa"
    "ck__ack_immediately\030\006 \001(\010\"U\n\021CMsgServerU"
    "seItem\022\034\n\024initiator_account_id\030\001 \001(\r\022\"\n\014"
    "use_item_msg\030\002 \001(\0132\014.CMsgUseItem\"\035\n\033CMsg"
    "GCPartnerBalanceRequest\"p\n\034CMsgGCPartner"
    "BalanceResponse\022\?\n\006result\030\001 \001(\0162\032.EGCPar"
    "tnerRequestResponse:\023k_EPartnerRequestOK"
    "\022\017\n\007balance\030\002 \001(\r\"<\n\'CMsgGCPartnerRechar"
    "geRedirectURLRequest\022\021\n\tdef_index\030\001 \001(\r\""
    "x\n(CMsgGCPartnerRechargeRedirectURLRespo"
    "nse\022\?\n\006result\030\001 \001(\0162\032.EGCPartnerRequestR"
    "esponse:\023k_EPartnerRequestOK\022\013\n\003url\030\002 \001("
    "\t\"X\n)CMsgGCEconSQLWorkItemEmbeddedRollba"
    "ckData\022\022\n\naccount_id\030\001 \001(\r\022\027\n\017deleted_it"
    "em_id\030\002 \001(\004\"\205\001\n\017CMsgCraftStatue\022\016\n\006heroi"
    "d\030\001 \001(\r\022\024\n\014sequencename\030\002 \001(\t\022\r\n\005cycle\030\003"
    " \001(\002\022\023\n\013description\030\004 \001(\t\022\030\n\020pedestal_it"
    "emdef\030\005 \001(\r\022\016\n\006toolid\030\006 \001(\004\"\036\n\016CMsgRedee"
    "mCode\022\014\n\004code\030\001 \001(\t\"*\n\026CMsgRedeemCodeRes"
    "ponse\022\020\n\010response\030\001 \001(\r\"q\n\025CMsgDevNewIte"
    "mRequest\022\025\n\ritem_def_name\030\003 \001(\t\022\026\n\016loot_"
    "list_name\030\004 \001(\t\022\025\n\rattr_def_name\030\005 \003(\t\022\022"
    "\n\nattr_value\030\006 \003(\t\"0\n\035CMsgDevNewItemRequ"
    "estResponse\022\017\n\007success\030\001 \001(\010\"8\n\021CMsgGCAd"
    "dGiftItem\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007item_id"
    "\030\002 \001(\004\"e\n CMsgClientToGCWrapAndDeliverGi"
    "ft\022\017\n\007item_id\030\001 \001(\004\022\032\n\022give_to_account_i"
    "d\030\002 \001(\r\022\024\n\014gift_message\030\003 \001(\t\"\304\002\n(CMsgCl"
    "ientToGCWrapAndDeliverGiftResponse\0225\n\010re"
    "sponse\030\001 \001(\0162\017.EGCMsgResponse:\022k_EGCMsgR"
    "esponseOK\022\033\n\023gifting_charge_uses\030\002 \001(\r\022\032"
    "\n\022gifting_charge_max\030\003 \001(\005\022\024\n\014gifting_us"
    "es\030\004 \001(\r\022\023\n\013gifting_max\030\005 \001(\005\022\034\n\024gifting"
    "_window_hours\030\006 \001(\r\022_\n\021trade_restriction"
    "\030\007 \001(\0162\034.EGCMsgInitiateTradeResponse:&k_"
    "EGCMsgInitiateTradeResponse_Accepted\"+\n\030"
    "CMsgClientToGCUnwrapGift\022\017\n\007item_id\030\001 \001("
    "\004\"H\n\034CMsgGCToClientBundleUnpacked\022\026\n\016bun"
    "dle_item_id\030\001 \001(\004\022\020\n\010item_ids\030\002 \003(\004\"K\n\'C"
    "MsgGCToClientStoreTransactionCompleted\022\016"
    "\n\006txn_id\030\001 \001(\004\022\020\n\010item_ids\030\002 \003(\004\"H\n\030CMsg"
    "ClientToGCEquipItems\022,\n\006equips\030\001 \003(\0132\034.C"
    "MsgAdjustItemEquippedState\"\?\n CMsgClient"
    "ToGCEquipItemsResponse\022\033\n\023so_cache_versi"
    "on_id\030\001 \001(\006\"i\n\035CMsgClientToGCUnlockItemS"
    "tyle\022\026\n\016item_to_unlock\030\001 \001(\004\022\023\n\013style_in"
    "dex\030\002 \001(\r\022\033\n\023consumable_item_ids\030\003 \003(\004\"\255"
    "\004\n%CMsgClientToGCUnlockItemStyleResponse"
    "\022^\n\010response\030\001 \001(\01623.CMsgClientToGCUnloc"
    "kItemStyleResponse.EUnlockStyle:\027k_Unloc"
    "kStyle_Succeeded\022\017\n\007item_id\030\002 \001(\004\022\023\n\013sty"
    "le_index\030\003 \001(\r\022\024\n\014style_prereq\030\004 \001(\r\"\347\002\n"
    "\014EUnlockStyle\022\033\n\027k_UnlockStyle_Succeeded"
    "\020\000\022\037\n\033k_UnlockStyle_Failed_PreReq\020\001\022#\n\037k"
    "_UnlockStyle_Failed_CantAfford\020\002\022#\n\037k_Un"
    "lockStyle_Failed_CantCommit\020\003\022&\n\"k_Unloc"
    "kStyle_Failed_CantLockCache\020\004\022)\n%k_Unloc"
    "kStyle_Failed_CantAffordAttrib\020\005\022&\n\"k_Un"
    "lockStyle_Failed_CantAffordGem\020\006\022*\n&k_Un"
    "lockStyle_Failed_NoCompendiumLevel\020\007\022(\n$"
    "k_UnlockStyle_Failed_AlreadyUnlocked\020\010\"\203"
    "\001\n&CMsgClientToGCSetItemInventoryCategor"
    "y\022\020\n\010item_ids\030\001 \003(\004\022\024\n\014set_to_value\030\002 \001("
    "\r\022\031\n\021remove_categories\030\003 \001(\r\022\026\n\016add_cate"
    "gories\030\004 \001(\r\"G\n\031CMsgClientToGCUnlockCrat"
    "e\022\025\n\rcrate_item_id\030\001 \001(\004\022\023\n\013key_item_id\030"
    "\002 \001(\004\"\304\001\n!CMsgClientToGCUnlockCrateRespo"
    "nse\0223\n\006result\030\001 \001(\0162\017.EGCMsgResponse:\022k_"
    "EGCMsgResponseOK\022>\n\rgranted_items\030\002 \003(\0132"
    "\'.CMsgClientToGCUnlockCrateResponse.Item"
    "\032*\n\004Item\022\017\n\007item_id\030\001 \001(\004\022\021\n\tdef_index\030\002"
    " \001(\r\"/\n\034CMsgGCRemoveItemAttributeMsg\022\017\n\007"
    "item_id\030\001 \001(\004\"M\n\016CMsgGCNameItem\022\027\n\017subje"
    "ct_item_id\030\001 \001(\004\022\024\n\014tool_item_id\030\002 \001(\004\022\014"
    "\n\004name\030\003 \001(\t\">\n\025CMsgGCSetItemPosition\022\017\n"
    "\007item_id\030\001 \001(\004\022\024\n\014new_position\030\002 \001(\r*\2032\n"
    "\nEGCItemMsg\022\021\n\014k_EMsgGCBase\020\350\007\022\034\n\027k_EMsg"
    "GCSetItemPosition\020\351\007\022\022\n\rk_EMsgGCCraft\020\352\007"
    "\022\032\n\025k_EMsgGCCraftResponse\020\353\007\022\023\n\016k_EMsgGC"
    "Delete\020\354\007\022$\n\037k_EMsgGCVerifyCacheSubscrip"
    "tion\020\355\007\022\025\n\020k_EMsgGCNameItem\020\356\007\022\030\n\023k_EMsg"
    "GCUnlockCrate\020\357\007\022 \n\033k_EMsgGCUnlockCrateR"
    "esponse\020\360\007\022\026\n\021k_EMsgGCPaintItem\020\361\007\022\036\n\031k_"
    "EMsgGCPaintItemResponse\020\362\007\022\"\n\035k_EMsgGCGo"
    "ldenWrenchBroadcast\020\363\007\022\030\n\023k_EMsgGCMOTDRe"
    "quest\020\364\007\022 \n\033k_EMsgGCMOTDRequestResponse\020"
    "\365\007\022\'\n\"k_EMsgGCAddItemToSocket_DEPRECATED"
    "\020\366\007\022/\n*k_EMsgGCAddItemToSocketResponse_D"
    "EPRECATED\020\367\007\022+\n&k_EMsgGCAddSocketToBaseI"
    "tem_DEPRECATED\020\370\007\022\'\n\"k_EMsgGCAddSocketTo"
    "Item_DEPRECATED\020\371\007\022/\n*k_EMsgGCAddSocketT"
    "oItemResponse_DEPRECATED\020\372\007\022\031\n\024k_EMsgGCN"
    "ameBaseItem\020\373\007\022!\n\034k_EMsgGCNameBaseItemRe"
    "sponse\020\374\007\022(\n#k_EMsgGCRemoveSocketItem_DE"
    "PRECATED\020\375\007\0220\n+k_EMsgGCRemoveSocketItemR"
    "esponse_DEPRECATED\020\376\007\022!\n\034k_EMsgGCCustomi"
    "zeItemTexture\020\377\007\022)\n$k_EMsgGCCustomizeIte"
    "mTextureResponse\020\200\010\022\033\n\026k_EMsgGCUseItemRe"
    "quest\020\201\010\022\034\n\027k_EMsgGCUseItemResponse\020\202\010\022\030"
    "\n\023k_EMsgGCGiftedItems\020\203\010\022\033\n\026k_EMsgGCRemo"
    "veItemName\020\206\010\022\034\n\027k_EMsgGCRemoveItemPaint"
    "\020\207\010\022\036\n\031k_EMsgGCUnwrapGiftRequest\020\215\010\022\037\n\032k"
    "_EMsgGCUnwrapGiftResponse\020\216\010\022\031\n\024k_EMsgGC"
    "SetItemStyle\020\217\010\022\036\n\031k_EMsgGCUsedClaimCode"
    "Item\020\220\010\022\026\n\021k_EMsgGCSortItems\020\221\010\022*\n%k_EMs"
    "gGC_RevolvingLootList_DEPRECATED\020\222\010\022\032\n\025k"
    "_EMsgGCLookupAccount\020\223\010\022\"\n\035k_EMsgGCLooku"
    "pAccountResponse\020\224\010\022\036\n\031k_EMsgGCLookupAcc"
    "ountName\020\225\010\022&\n!k_EMsgGCLookupAccountName"
    "Response\020\226\010\022\035\n\030k_EMsgGCUpdateItemSchema\020"
    "\231\010\022 \n\033k_EMsgGCRemoveCustomTexture\020\233\010\022(\n#"
    "k_EMsgGCRemoveCustomTextureResponse\020\234\010\022\035"
    "\n\030k_EMsgGCRemoveMakersMark\020\235\010\022%\n k_EMsgG"
    "CRemoveMakersMarkResponse\020\236\010\022#\n\036k_EMsgGC"
    "RemoveUniqueCraftIndex\020\237\010\022+\n&k_EMsgGCRem"
    "oveUniqueCraftIndexResponse\020\240\010\022\033\n\026k_EMsg"
    "GCSaxxyBroadcast\020\241\010\022!\n\034k_EMsgGCBackpackS"
    "ortFinished\020\242\010\022$\n\037k_EMsgGCAdjustItemEqui"
    "ppedState\020\243\010\022\030\n\023k_EMsgGCCollectItem\020\245\010\022\035"
    "\n\030k_EMsgGCItemAcknowledged\020\246\010\022)\n$k_EMsgG"
    "CPresets_SelectPresetForClass\020\247\010\022$\n\037k_EM"
    "sgGCPresets_SetItemPosition\020\250\010\022\031\n\024k_EMsg"
    "GC_ReportAbuse\020\251\010\022!\n\034k_EMsgGC_ReportAbus"
    "eResponse\020\252\010\022.\n)k_EMsgGCPresets_SelectPr"
    "esetForClassReply\020\253\010\022!\n\034k_EMsgGCNameItem"
    "Notification\020\254\010\022#\n\036k_EMsgGCApplyConsumab"
    "leEffects\020\255\010\022 \n\033k_EMsgGCConsumableExhaus"
    "ted\020\256\010\022\036\n\031k_EMsgGCShowItemsPickedUp\020\257\010\022&"
    "\n!k_EMsgGCClientDisplayNotification\020\260\010\022\035"
    "\n\030k_EMsgGCApplyStrangePart\020\261\010\022(\n#k_EMsgG"
    "C_IncrementKillCountResponse\020\263\010\022 \n\033k_EMs"
    "gGCApplyPennantUpgrade\020\264\010\022\035\n\030k_EMsgGCSet"
    "ItemPositions\020\265\010\022\034\n\027k_EMsgGCApplyEggEsse"
    "nce\020\266\010\022#\n\036k_EMsgGCNameEggEssenceResponse"
    "\020\267\010\022*\n%k_EMsgGCFulfillDynamicRecipeCompo"
    "nent\020\272\010\0222\n-k_EMsgGCFulfillDynamicRecipeC"
    "omponentResponse\020\273\010\022$\n\037k_EMsgGCClientReq"
    "uestMarketData\020\274\010\022,\n\'k_EMsgGCClientReque"
    "stMarketDataResponse\020\275\010\022\030\n\023k_EMsgGCExtra"
    "ctGems\020\276\010\022\026\n\021k_EMsgGCAddSocket\020\277\010\022\034\n\027k_E"
    "MsgGCAddItemToSocket\020\300\010\022$\n\037k_EMsgGCAddIt"
    "emToSocketResponse\020\301\010\022\036\n\031k_EMsgGCAddSock"
    "etResponse\020\302\010\022!\n\034k_EMsgGCResetStrangeGem"
    "Count\020\303\010\022\036\n\031k_EMsgGCRequestCrateItems\020\304\010"
    "\022&\n!k_EMsgGCRequestCrateItemsResponse\020\305\010"
    "\022!\n\034k_EMsgGCServerUseItemRequest\020\317\010\022\030\n\023k"
    "_EMsgGCAddGiftItem\020\320\010\022\"\n\035k_EMsgGCRemoveI"
    "temGiftMessage\020\321\010\022*\n%k_EMsgGCRemoveItemG"
    "iftMessageResponse\020\322\010\022&\n!k_EMsgGCRemoveI"
    "temGifterAccountId\020\323\010\022.\n)k_EMsgGCRemoveI"
    "temGifterAccountIdResponse\020\324\010\022/\n*k_EMsgC"
    "lientToGCRemoveItemGifterAttributes\020\325\010\022#"
    "\n\036k_EMsgClientToGCRemoveItemName\020\326\010\022*\n%k"
    "_EMsgClientToGCRemoveItemDescription\020\327\010\022"
    "\030\n\023k_EMsgGCTradingBase\020\334\013\022)\n$k_EMsgGCTra"
    "ding_InitiateTradeRequest\020\335\013\022*\n%k_EMsgGC"
    "Trading_InitiateTradeResponse\020\336\013\022!\n\034k_EM"
    "sgGCTrading_StartSession\020\337\013\022\"\n\035k_EMsgGCT"
    "rading_SessionClosed\020\345\013\0221\n,k_EMsgGCTradi"
    "ng_InitiateTradeRequestResponse\020\352\013\022)\n$k_"
    "EMsgGCServerBrowser_FavoriteServer\020\301\014\022*\n"
    "%k_EMsgGCServerBrowser_BlacklistServer\020\302"
    "\014\022\036\n\031k_EMsgGCServerRentalsBase\020\244\r\022#\n\036k_E"
    "MsgGCItemPreviewCheckStatus\020\245\r\022&\n!k_EMsg"
    "GCItemPreviewStatusResponse\020\246\r\022\037\n\032k_EMsg"
    "GCItemPreviewRequest\020\247\r\022\'\n\"k_EMsgGCItemP"
    "reviewRequestResponse\020\250\r\022\036\n\031k_EMsgGCItem"
    "PreviewExpire\020\251\r\022*\n%k_EMsgGCItemPreviewE"
    "xpireNotification\020\252\r\022.\n)k_EMsgGCItemPrev"
    "iewItemBoughtNotification\020\253\r\022\037\n\032k_EMsgGC"
    "Dev_NewItemRequest\020\321\017\022\'\n\"k_EMsgGCDev_New"
    "ItemRequestResponse\020\322\017\022\035\n\030k_EMsgGCStoreG"
    "etUserData\020\304\023\022%\n k_EMsgGCStoreGetUserDat"
    "aResponse\020\305\023\022\"\n\035k_EMsgGCStorePurchaseFin"
    "alize\020\310\023\022*\n%k_EMsgGCStorePurchaseFinaliz"
    "eResponse\020\311\023\022 \n\033k_EMsgGCStorePurchaseCan"
    "cel\020\312\023\022(\n#k_EMsgGCStorePurchaseCancelRes"
    "ponse\020\313\023\022\036\n\031k_EMsgGCStorePurchaseInit\020\316\023"
    "\022&\n!k_EMsgGCStorePurchaseInitResponse\020\317\023"
    "\022\"\n\035k_EMsgGCBannedWordListRequest\020\320\023\022#\n\036"
    "k_EMsgGCBannedWordListResponse\020\321\023\022(\n#k_E"
    "MsgGCToGCBannedWordListBroadcast\020\322\023\022&\n!k"
    "_EMsgGCToGCBannedWordListUpdated\020\323\023\022\036\n\031k"
    "_EMsgGCToGCDirtySDOCache\020\324\023\022&\n!k_EMsgGCT"
    "oGCDirtyMultipleSDOCache\020\325\023\022\"\n\035k_EMsgGCT"
    "oGCUpdateSQLKeyValue\020\326\023\022(\n#k_EMsgGCToGCB"
    "roadcastConsoleCommand\020\331\023\022!\n\034k_EMsgGCSer"
    "verVersionUpdated\020\332\023\022\033\n\026k_EMsgGCApplyAut"
    "ograph\020\333\023\022%\n k_EMsgGCToGCWebAPIAccountCh"
    "anged\020\334\023\022!\n\034k_EMsgGCClientVersionUpdated"
    "\020\340\023\022+\n&k_EMsgGCItemPurgatory_FinalizePur"
    "chase\020\343\023\0223\n.k_EMsgGCItemPurgatory_Finali"
    "zePurchaseResponse\020\344\023\022)\n$k_EMsgGCItemPur"
    "gatory_RefundPurchase\020\345\023\0221\n,k_EMsgGCItem"
    "Purgatory_RefundPurchaseResponse\020\346\023\022.\n)k"
    "_EMsgGCToGCPlayerStrangeCountAdjustments"
    "\020\347\023\022\"\n\035k_EMsgGCRequestStoreSalesData\020\350\023\022"
    "*\n%k_EMsgGCRequestStoreSalesDataResponse"
    "\020\351\023\0222\n-k_EMsgGCRequestStoreSalesDataUpTo"
    "DateResponse\020\352\023\022\034\n\027k_EMsgGCToGCPingReque"
    "st\020\353\023\022\035\n\030k_EMsgGCToGCPingResponse\020\354\023\022%\n "
    "k_EMsgGCToGCGetUserSessionServer\020\355\023\022-\n(k"
    "_EMsgGCToGCGetUserSessionServerResponse\020"
    "\356\023\022%\n k_EMsgGCToGCGetUserServerMembers\020\357"
    "\023\022-\n(k_EMsgGCToGCGetUserServerMembersRes"
    "ponse\020\360\023\022 \n\033k_EMsgGCToGCGetUserPCBangNo\020"
    "\361\023\022(\n#k_EMsgGCToGCGetUserPCBangNoRespons"
    "e\020\362\023\022$\n\037k_EMsgGCToGCCanUseDropRateBonus\020"
    "\363\023\022\036\n\031k_EMsgSQLAddDropRateBonus\020\364\023\022\037\n\032k_"
    "EMsgGCToGCRefreshSOCache\020\365\023\022&\n!k_EMsgGCT"
    "oGCApplyLocalizationDiff\020\366\023\022.\n)k_EMsgGCT"
    "oGCApplyLocalizationDiffResponse\020\367\023\022(\n#k"
    "_EMsgGCToGCCheckAccountTradeStatus\020\370\023\0220\n"
    "+k_EMsgGCToGCCheckAccountTradeStatusResp"
    "onse\020\371\023\022(\n#k_EMsgGCToGCGrantAccountRolle"
    "dItems\020\372\023\022+\n&k_EMsgGCToGCGrantSelfMadeIt"
    "emToAccount\020\373\023\022\"\n\035k_EMsgSQLUpgradeBattle"
    "Booster\020\374\023\022\"\n\035k_EMsgGCPartnerBalanceRequ"
    "est\020\375\023\022#\n\036k_EMsgGCPartnerBalanceResponse"
    "\020\376\023\022.\n)k_EMsgGCPartnerRechargeRedirectUR"
    "LRequest\020\377\023\022/\n*k_EMsgGCPartnerRechargeRe"
    "directURLResponse\020\200\024\022\030\n\023k_EMsgGCStatueCr"
    "aft\020\201\024\022\027\n\022k_EMsgGCRedeemCode\020\202\024\022\037\n\032k_EMs"
    "gGCRedeemCodeResponse\020\203\024\022(\n#k_EMsgGCToGC"
    "ItemConsumptionRollback\020\204\024\022\'\n\"k_EMsgClie"
    "ntToGCWrapAndDeliverGift\020\205\024\022/\n*k_EMsgCli"
    "entToGCWrapAndDeliverGiftResponse\020\206\024\022#\n\036"
    "k_EMsgGCToClientBundleUnpacked\020\207\024\022.\n)k_E"
    "MsgGCToClientStoreTransactionCompleted\020\210"
    "\024\022\037\n\032k_EMsgClientToGCEquipItems\020\211\024\022\'\n\"k_"
    "EMsgClientToGCEquipItemsResponse\020\212\024\022$\n\037k"
    "_EMsgClientToGCUnlockItemStyle\020\213\024\022,\n\'k_E"
    "MsgClientToGCUnlockItemStyleResponse\020\214\024\022"
    "-\n(k_EMsgClientToGCSetItemInventoryCateg"
    "ory\020\215\024\022 \n\033k_EMsgClientToGCUnlockCrate\020\216\024"
    "\022(\n#k_EMsgClientToGCUnlockCrateResponse\020"
    "\217\024*\233\002\n\016EGCMsgResponse\022\026\n\022k_EGCMsgRespons"
    "eOK\020\000\022\032\n\026k_EGCMsgResponseDenied\020\001\022\037\n\033k_E"
    "GCMsgResponseServerError\020\002\022\033\n\027k_EGCMsgRe"
    "sponseTimeout\020\003\022\033\n\027k_EGCMsgResponseInval"
    "id\020\004\022\033\n\027k_EGCMsgResponseNoMatch\020\005\022 \n\034k_E"
    "GCMsgResponseUnknownError\020\006\022\037\n\033k_EGCMsgR"
    "esponseNotLoggedOn\020\007\022\032\n\026k_EGCMsgFailedTo"
    "Create\020\010*\363\002\n\037EItemPurgatoryResponse_Fina"
    "lize\022.\n*k_ItemPurgatoryResponse_Finalize"
    "_Succeeded\020\000\0226\n2k_ItemPurgatoryResponse_"
    "Finalize_Failed_Incomplete\020\001\022\?\n;k_ItemPu"
    "rgatoryResponse_Finalize_Failed_ItemsNot"
    "InPurgatory\020\002\022=\n9k_ItemPurgatoryResponse"
    "_Finalize_Failed_CouldNotFindItems\020\003\0225\n1"
    "k_ItemPurgatoryResponse_Finalize_Failed_"
    "NoSOCache\020\004\0221\n-k_ItemPurgatoryResponse_F"
    "inalize_BackpackFull\020\005*\347\002\n\035EItemPurgator"
    "yResponse_Refund\022,\n(k_ItemPurgatoryRespo"
    "nse_Refund_Succeeded\020\000\022<\n8k_ItemPurgator"
    "yResponse_Refund_Failed_ItemNotInPurgato"
    "ry\020\001\022:\n6k_ItemPurgatoryResponse_Refund_F"
    "ailed_CouldNotFindItem\020\002\0223\n/k_ItemPurgat"
    "oryResponse_Refund_Failed_NoSOCache\020\003\0222\n"
    ".k_ItemPurgatoryResponse_Refund_Failed_N"
    "oDetail\020\004\0225\n1k_ItemPurgatoryResponse_Ref"
    "und_Failed_NexonWebAPI\020\005*\242\001\n\031EGCPartnerR"
    "equestResponse\022\027\n\023k_EPartnerRequestOK\020\001\022"
    "\037\n\033k_EPartnerRequestBadAccount\020\002\022\036\n\032k_EP"
    "artnerRequestNotLinked\020\003\022+\n\'k_EPartnerRe"
    "questUnsupportedPartnerType\020\004*\315\t\n\033EGCMsg"
    "InitiateTradeResponse\022*\n&k_EGCMsgInitiat"
    "eTradeResponse_Accepted\020\000\022*\n&k_EGCMsgIni"
    "tiateTradeResponse_Declined\020\001\0226\n2k_EGCMs"
    "gInitiateTradeResponse_VAC_Banned_Initia"
    "tor\020\002\0223\n/k_EGCMsgInitiateTradeResponse_V"
    "AC_Banned_Target\020\003\0228\n4k_EGCMsgInitiateTr"
    "adeResponse_Target_Already_Trading\020\004\022*\n&"
    "k_EGCMsgInitiateTradeResponse_Disabled\020\005"
    "\022-\n)k_EGCMsgInitiateTradeResponse_NotLog"
    "gedIn\020\006\022(\n$k_EGCMsgInitiateTradeResponse"
    "_Cancel\020\007\022)\n%k_EGCMsgInitiateTradeRespon"
    "se_TooSoon\020\010\0220\n,k_EGCMsgInitiateTradeRes"
    "ponse_TooSoonPenalty\020\t\0228\n4k_EGCMsgInitia"
    "teTradeResponse_Trade_Banned_Initiator\020\n"
    "\0225\n1k_EGCMsgInitiateTradeResponse_Trade_"
    "Banned_Target\020\013\022C\n\?k_EGCMsgInitiateTrade"
    "Response_Free_Account_Initiator_DEPRECAT"
    "ED\020\014\022:\n6k_EGCMsgInitiateTradeResponse_Sh"
    "ared_Account_Initiator\020\r\0225\n1k_EGCMsgInit"
    "iateTradeResponse_Service_Unavailable\020\016\022"
    "0\n,k_EGCMsgInitiateTradeResponse_Target_"
    "Blocked\020\017\0223\n/k_EGCMsgInitiateTradeRespon"
    "se_NeedVerifiedEmail\020\020\0220\n,k_EGCMsgInitia"
    "teTradeResponse_NeedSteamGuard\020\021\0224\n0k_EG"
    "CMsgInitiateTradeResponse_SteamGuardDura"
    "tion\020\022\0221\n-k_EGCMsgInitiateTradeResponse_"
    "TheyCannotTrade\020\023\0227\n3k_EGCMsgInitiateTra"
    "deResponse_Recent_Password_Reset\020\024\0222\n.k_"
    "EGCMsgInitiateTradeResponse_Using_New_De"
    "vice\020\025\0225\n1k_EGCMsgInitiateTradeResponse_"
    "Sent_Invalid_Cookie\020\026B\005H\001\200\001\000", 15228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "econ_gcmessages.proto", &protobuf_RegisterTypes);
  CMsgApplyAutograph::default_instance_ = new CMsgApplyAutograph();
  CMsgAdjustItemEquippedState::default_instance_ = new CMsgAdjustItemEquippedState();
  CMsgEconPlayerStrangeCountAdjustment::default_instance_ = new CMsgEconPlayerStrangeCountAdjustment();
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_ = new CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment();
  CMsgRequestItemPurgatory_FinalizePurchase::default_instance_ = new CMsgRequestItemPurgatory_FinalizePurchase();
  CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_ = new CMsgRequestItemPurgatory_FinalizePurchaseResponse();
  CMsgRequestItemPurgatory_RefundPurchase::default_instance_ = new CMsgRequestItemPurgatory_RefundPurchase();
  CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_ = new CMsgRequestItemPurgatory_RefundPurchaseResponse();
  CMsgCraftingResponse::default_instance_ = new CMsgCraftingResponse();
  CMsgGCRequestStoreSalesData::default_instance_ = new CMsgGCRequestStoreSalesData();
  CMsgGCRequestStoreSalesDataResponse::default_instance_ = new CMsgGCRequestStoreSalesDataResponse();
  CMsgGCRequestStoreSalesDataResponse_Price::default_instance_ = new CMsgGCRequestStoreSalesDataResponse_Price();
  CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_ = new CMsgGCRequestStoreSalesDataUpToDateResponse();
  CMsgGCToGCPingRequest::default_instance_ = new CMsgGCToGCPingRequest();
  CMsgGCToGCPingResponse::default_instance_ = new CMsgGCToGCPingResponse();
  CMsgGCToGCGetUserSessionServer::default_instance_ = new CMsgGCToGCGetUserSessionServer();
  CMsgGCToGCGetUserSessionServerResponse::default_instance_ = new CMsgGCToGCGetUserSessionServerResponse();
  CMsgGCToGCGetUserServerMembers::default_instance_ = new CMsgGCToGCGetUserServerMembers();
  CMsgGCToGCGetUserServerMembersResponse::default_instance_ = new CMsgGCToGCGetUserServerMembersResponse();
  CMsgLookupMultipleAccountNames::default_instance_ = new CMsgLookupMultipleAccountNames();
  CMsgLookupMultipleAccountNamesResponse::default_instance_ = new CMsgLookupMultipleAccountNamesResponse();
  CMsgLookupMultipleAccountNamesResponse_Account::default_instance_ = new CMsgLookupMultipleAccountNamesResponse_Account();
  CMsgGCToGCGetUserPCBangNo::default_instance_ = new CMsgGCToGCGetUserPCBangNo();
  CMsgGCToGCGetUserPCBangNoResponse::default_instance_ = new CMsgGCToGCGetUserPCBangNoResponse();
  CMsgRequestCrateItems::default_instance_ = new CMsgRequestCrateItems();
  CMsgRequestCrateItemsResponse::default_instance_ = new CMsgRequestCrateItemsResponse();
  CMsgGCToGCCanUseDropRateBonus::default_instance_ = new CMsgGCToGCCanUseDropRateBonus();
  CMsgSQLAddDropRateBonus::default_instance_ = new CMsgSQLAddDropRateBonus();
  CMsgSQLUpgradeBattleBooster::default_instance_ = new CMsgSQLUpgradeBattleBooster();
  CMsgGCToGCRefreshSOCache::default_instance_ = new CMsgGCToGCRefreshSOCache();
  CMsgGCToGCCheckAccountTradeStatus::default_instance_ = new CMsgGCToGCCheckAccountTradeStatus();
  CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_ = new CMsgGCToGCCheckAccountTradeStatusResponse();
  CMsgGCToGCGrantAccountRolledItems::default_instance_ = new CMsgGCToGCGrantAccountRolledItems();
  CMsgGCToGCGrantAccountRolledItems_Item::default_instance_ = new CMsgGCToGCGrantAccountRolledItems_Item();
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_ = new CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute();
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_ = new CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry();
  CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_ = new CMsgGCToGCGrantSelfMadeItemToAccount();
  CMsgUseItem::default_instance_ = new CMsgUseItem();
  CMsgServerUseItem::default_instance_ = new CMsgServerUseItem();
  CMsgGCPartnerBalanceRequest::default_instance_ = new CMsgGCPartnerBalanceRequest();
  CMsgGCPartnerBalanceResponse::default_instance_ = new CMsgGCPartnerBalanceResponse();
  CMsgGCPartnerRechargeRedirectURLRequest::default_instance_ = new CMsgGCPartnerRechargeRedirectURLRequest();
  CMsgGCPartnerRechargeRedirectURLResponse::default_instance_ = new CMsgGCPartnerRechargeRedirectURLResponse();
  CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_ = new CMsgGCEconSQLWorkItemEmbeddedRollbackData();
  CMsgCraftStatue::default_instance_ = new CMsgCraftStatue();
  CMsgRedeemCode::default_instance_ = new CMsgRedeemCode();
  CMsgRedeemCodeResponse::default_instance_ = new CMsgRedeemCodeResponse();
  CMsgDevNewItemRequest::default_instance_ = new CMsgDevNewItemRequest();
  CMsgDevNewItemRequestResponse::default_instance_ = new CMsgDevNewItemRequestResponse();
  CMsgGCAddGiftItem::default_instance_ = new CMsgGCAddGiftItem();
  CMsgClientToGCWrapAndDeliverGift::default_instance_ = new CMsgClientToGCWrapAndDeliverGift();
  CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_ = new CMsgClientToGCWrapAndDeliverGiftResponse();
  CMsgClientToGCUnwrapGift::default_instance_ = new CMsgClientToGCUnwrapGift();
  CMsgGCToClientBundleUnpacked::default_instance_ = new CMsgGCToClientBundleUnpacked();
  CMsgGCToClientStoreTransactionCompleted::default_instance_ = new CMsgGCToClientStoreTransactionCompleted();
  CMsgClientToGCEquipItems::default_instance_ = new CMsgClientToGCEquipItems();
  CMsgClientToGCEquipItemsResponse::default_instance_ = new CMsgClientToGCEquipItemsResponse();
  CMsgClientToGCUnlockItemStyle::default_instance_ = new CMsgClientToGCUnlockItemStyle();
  CMsgClientToGCUnlockItemStyleResponse::default_instance_ = new CMsgClientToGCUnlockItemStyleResponse();
  CMsgClientToGCSetItemInventoryCategory::default_instance_ = new CMsgClientToGCSetItemInventoryCategory();
  CMsgClientToGCUnlockCrate::default_instance_ = new CMsgClientToGCUnlockCrate();
  CMsgClientToGCUnlockCrateResponse::default_instance_ = new CMsgClientToGCUnlockCrateResponse();
  CMsgClientToGCUnlockCrateResponse_Item::default_instance_ = new CMsgClientToGCUnlockCrateResponse_Item();
  CMsgGCRemoveItemAttributeMsg::default_instance_ = new CMsgGCRemoveItemAttributeMsg();
  CMsgGCNameItem::default_instance_ = new CMsgGCNameItem();
  CMsgGCSetItemPosition::default_instance_ = new CMsgGCSetItemPosition();
  CMsgApplyAutograph::default_instance_->InitAsDefaultInstance();
  CMsgAdjustItemEquippedState::default_instance_->InitAsDefaultInstance();
  CMsgEconPlayerStrangeCountAdjustment::default_instance_->InitAsDefaultInstance();
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_FinalizePurchase::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_RefundPurchase::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_->InitAsDefaultInstance();
  CMsgCraftingResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesData::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesDataResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesDataResponse_Price::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCPingRequest::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCPingResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserSessionServer::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserSessionServerResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserServerMembers::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserServerMembersResponse::default_instance_->InitAsDefaultInstance();
  CMsgLookupMultipleAccountNames::default_instance_->InitAsDefaultInstance();
  CMsgLookupMultipleAccountNamesResponse::default_instance_->InitAsDefaultInstance();
  CMsgLookupMultipleAccountNamesResponse_Account::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserPCBangNo::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserPCBangNoResponse::default_instance_->InitAsDefaultInstance();
  CMsgRequestCrateItems::default_instance_->InitAsDefaultInstance();
  CMsgRequestCrateItemsResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCCanUseDropRateBonus::default_instance_->InitAsDefaultInstance();
  CMsgSQLAddDropRateBonus::default_instance_->InitAsDefaultInstance();
  CMsgSQLUpgradeBattleBooster::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCRefreshSOCache::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCCheckAccountTradeStatus::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems_Item::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_->InitAsDefaultInstance();
  CMsgUseItem::default_instance_->InitAsDefaultInstance();
  CMsgServerUseItem::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerBalanceRequest::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerBalanceResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerRechargeRedirectURLRequest::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerRechargeRedirectURLResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_->InitAsDefaultInstance();
  CMsgCraftStatue::default_instance_->InitAsDefaultInstance();
  CMsgRedeemCode::default_instance_->InitAsDefaultInstance();
  CMsgRedeemCodeResponse::default_instance_->InitAsDefaultInstance();
  CMsgDevNewItemRequest::default_instance_->InitAsDefaultInstance();
  CMsgDevNewItemRequestResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCAddGiftItem::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCWrapAndDeliverGift::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnwrapGift::default_instance_->InitAsDefaultInstance();
  CMsgGCToClientBundleUnpacked::default_instance_->InitAsDefaultInstance();
  CMsgGCToClientStoreTransactionCompleted::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCEquipItems::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCEquipItemsResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockItemStyle::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockItemStyleResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCSetItemInventoryCategory::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockCrate::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockCrateResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockCrateResponse_Item::default_instance_->InitAsDefaultInstance();
  CMsgGCRemoveItemAttributeMsg::default_instance_->InitAsDefaultInstance();
  CMsgGCNameItem::default_instance_->InitAsDefaultInstance();
  CMsgGCSetItemPosition::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_econ_5fgcmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_econ_5fgcmessages_2eproto {
  StaticDescriptorInitializer_econ_5fgcmessages_2eproto() {
    protobuf_AddDesc_econ_5fgcmessages_2eproto();
  }
} static_descriptor_initializer_econ_5fgcmessages_2eproto_;
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCItemMsg_descriptor_;
}
bool EGCItemMsg_IsValid(int value) {
  switch(value) {
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1030:
    case 1031:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
    case 1049:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1065:
    case 1066:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1509:
    case 1514:
    case 1601:
    case 1602:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 1707:
    case 2001:
    case 2002:
    case 2500:
    case 2501:
    case 2504:
    case 2505:
    case 2506:
    case 2507:
    case 2510:
    case 2511:
    case 2512:
    case 2513:
    case 2514:
    case 2515:
    case 2516:
    case 2517:
    case 2518:
    case 2521:
    case 2522:
    case 2523:
    case 2524:
    case 2528:
    case 2531:
    case 2532:
    case 2533:
    case 2534:
    case 2535:
    case 2536:
    case 2537:
    case 2538:
    case 2539:
    case 2540:
    case 2541:
    case 2542:
    case 2543:
    case 2544:
    case 2545:
    case 2546:
    case 2547:
    case 2548:
    case 2549:
    case 2550:
    case 2551:
    case 2552:
    case 2553:
    case 2554:
    case 2555:
    case 2556:
    case 2557:
    case 2558:
    case 2559:
    case 2560:
    case 2561:
    case 2562:
    case 2563:
    case 2564:
    case 2565:
    case 2566:
    case 2567:
    case 2568:
    case 2569:
    case 2570:
    case 2571:
    case 2572:
    case 2573:
    case 2574:
    case 2575:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCMsgResponse_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCMsgResponse_descriptor_;
}
bool EGCMsgResponse_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Finalize_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EItemPurgatoryResponse_Finalize_descriptor_;
}
bool EItemPurgatoryResponse_Finalize_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Refund_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EItemPurgatoryResponse_Refund_descriptor_;
}
bool EItemPurgatoryResponse_Refund_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCPartnerRequestResponse_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCPartnerRequestResponse_descriptor_;
}
bool EGCPartnerRequestResponse_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCMsgInitiateTradeResponse_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCMsgInitiateTradeResponse_descriptor_;
}
bool EGCMsgInitiateTradeResponse_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgApplyAutograph::kAutographItemIdFieldNumber;
const int CMsgApplyAutograph::kItemItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgApplyAutograph::CMsgApplyAutograph()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgApplyAutograph)
}

void CMsgApplyAutograph::InitAsDefaultInstance() {
}

CMsgApplyAutograph::CMsgApplyAutograph(const CMsgApplyAutograph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgApplyAutograph)
}

void CMsgApplyAutograph::SharedCtor() {
  _cached_size_ = 0;
  autograph_item_id_ = GOOGLE_ULONGLONG(0);
  item_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgApplyAutograph::~CMsgApplyAutograph() {
  // @@protoc_insertion_point(destructor:CMsgApplyAutograph)
  SharedDtor();
}

void CMsgApplyAutograph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgApplyAutograph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyAutograph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgApplyAutograph_descriptor_;
}

const CMsgApplyAutograph& CMsgApplyAutograph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgApplyAutograph* CMsgApplyAutograph::default_instance_ = NULL;

CMsgApplyAutograph* CMsgApplyAutograph::New() const {
  return new CMsgApplyAutograph;
}

void CMsgApplyAutograph::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgApplyAutograph*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(autograph_item_id_, item_item_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgApplyAutograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgApplyAutograph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 autograph_item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &autograph_item_id_)));
          set_has_autograph_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_item_id;
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
          set_has_item_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgApplyAutograph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgApplyAutograph)
  return false;
#undef DO_
}

void CMsgApplyAutograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgApplyAutograph)
  // optional uint64 autograph_item_id = 1;
  if (has_autograph_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->autograph_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgApplyAutograph)
}

::google::protobuf::uint8* CMsgApplyAutograph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplyAutograph)
  // optional uint64 autograph_item_id = 1;
  if (has_autograph_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->autograph_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplyAutograph)
  return target;
}

int CMsgApplyAutograph::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 autograph_item_id = 1;
    if (has_autograph_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->autograph_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (has_item_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyAutograph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgApplyAutograph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgApplyAutograph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgApplyAutograph::MergeFrom(const CMsgApplyAutograph& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_autograph_item_id()) {
      set_autograph_item_id(from.autograph_item_id());
    }
    if (from.has_item_item_id()) {
      set_item_item_id(from.item_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgApplyAutograph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyAutograph::CopyFrom(const CMsgApplyAutograph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyAutograph::IsInitialized() const {

  return true;
}

void CMsgApplyAutograph::Swap(CMsgApplyAutograph* other) {
  if (other != this) {
    std::swap(autograph_item_id_, other->autograph_item_id_);
    std::swap(item_item_id_, other->item_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgApplyAutograph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgApplyAutograph_descriptor_;
  metadata.reflection = CMsgApplyAutograph_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgAdjustItemEquippedState::kItemIdFieldNumber;
const int CMsgAdjustItemEquippedState::kNewClassFieldNumber;
const int CMsgAdjustItemEquippedState::kNewSlotFieldNumber;
const int CMsgAdjustItemEquippedState::kStyleIndexFieldNumber;
#endif  // !_MSC_VER

CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAdjustItemEquippedState)
}

void CMsgAdjustItemEquippedState::InitAsDefaultInstance() {
}

CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAdjustItemEquippedState)
}

void CMsgAdjustItemEquippedState::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  new_class_ = 0u;
  new_slot_ = 0u;
  style_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAdjustItemEquippedState::~CMsgAdjustItemEquippedState() {
  // @@protoc_insertion_point(destructor:CMsgAdjustItemEquippedState)
  SharedDtor();
}

void CMsgAdjustItemEquippedState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAdjustItemEquippedState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAdjustItemEquippedState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAdjustItemEquippedState_descriptor_;
}

const CMsgAdjustItemEquippedState& CMsgAdjustItemEquippedState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgAdjustItemEquippedState* CMsgAdjustItemEquippedState::default_instance_ = NULL;

CMsgAdjustItemEquippedState* CMsgAdjustItemEquippedState::New() const {
  return new CMsgAdjustItemEquippedState;
}

void CMsgAdjustItemEquippedState::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgAdjustItemEquippedState*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, style_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgAdjustItemEquippedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAdjustItemEquippedState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_new_class;
        break;
      }

      // optional uint32 new_class = 2;
      case 2: {
        if (tag == 16) {
         parse_new_class:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_class_)));
          set_has_new_class();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_new_slot;
        break;
      }

      // optional uint32 new_slot = 3;
      case 3: {
        if (tag == 24) {
         parse_new_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_slot_)));
          set_has_new_slot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_style_index;
        break;
      }

      // optional uint32 style_index = 4;
      case 4: {
        if (tag == 32) {
         parse_style_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
          set_has_style_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAdjustItemEquippedState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAdjustItemEquippedState)
  return false;
#undef DO_
}

void CMsgAdjustItemEquippedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAdjustItemEquippedState)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_class = 2;
  if (has_new_class()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_class(), output);
  }

  // optional uint32 new_slot = 3;
  if (has_new_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->new_slot(), output);
  }

  // optional uint32 style_index = 4;
  if (has_style_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAdjustItemEquippedState)
}

::google::protobuf::uint8* CMsgAdjustItemEquippedState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAdjustItemEquippedState)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_class = 2;
  if (has_new_class()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_class(), target);
  }

  // optional uint32 new_slot = 3;
  if (has_new_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->new_slot(), target);
  }

  // optional uint32 style_index = 4;
  if (has_style_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAdjustItemEquippedState)
  return target;
}

int CMsgAdjustItemEquippedState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_class = 2;
    if (has_new_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_class());
    }

    // optional uint32 new_slot = 3;
    if (has_new_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_slot());
    }

    // optional uint32 style_index = 4;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAdjustItemEquippedState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgAdjustItemEquippedState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgAdjustItemEquippedState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAdjustItemEquippedState::MergeFrom(const CMsgAdjustItemEquippedState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_new_class()) {
      set_new_class(from.new_class());
    }
    if (from.has_new_slot()) {
      set_new_slot(from.new_slot());
    }
    if (from.has_style_index()) {
      set_style_index(from.style_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgAdjustItemEquippedState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAdjustItemEquippedState::CopyFrom(const CMsgAdjustItemEquippedState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAdjustItemEquippedState::IsInitialized() const {

  return true;
}

void CMsgAdjustItemEquippedState::Swap(CMsgAdjustItemEquippedState* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(new_class_, other->new_class_);
    std::swap(new_slot_, other->new_slot_);
    std::swap(style_index_, other->style_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgAdjustItemEquippedState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAdjustItemEquippedState_descriptor_;
  metadata.reflection = CMsgAdjustItemEquippedState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kEventTypeFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kItemIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kAdjustmentFieldNumber;
#endif  // !_MSC_VER

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InitAsDefaultInstance() {
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedCtor() {
  _cached_size_ = 0;
  event_type_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  adjustment_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_;
}

const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_ = NULL;

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::New() const {
  return new CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, adjustment_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
          set_has_event_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_adjustment;
        break;
      }

      // optional uint32 adjustment = 3;
      case 3: {
        if (tag == 24) {
         parse_adjustment:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adjustment_)));
          set_has_adjustment();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return false;
#undef DO_
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  // optional uint32 event_type = 1;
  if (has_event_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_type(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 adjustment = 3;
  if (has_adjustment()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->adjustment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  // optional uint32 event_type = 1;
  if (has_event_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_type(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 adjustment = 3;
  if (has_adjustment()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->adjustment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return target;
}

int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 event_type = 1;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_type());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 adjustment = 3;
    if (has_adjustment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adjustment());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_type()) {
      set_event_type(from.event_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_adjustment()) {
      set_adjustment(from.adjustment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::IsInitialized() const {

  return true;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
  if (other != this) {
    std::swap(event_type_, other->event_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(adjustment_, other->adjustment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_;
  metadata.reflection = CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgEconPlayerStrangeCountAdjustment::kAccountIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment::kStrangeCountAdjustmentsFieldNumber;
#endif  // !_MSC_VER

CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgEconPlayerStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment::InitAsDefaultInstance() {
}

CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgEconPlayerStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgEconPlayerStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:CMsgEconPlayerStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgEconPlayerStrangeCountAdjustment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgEconPlayerStrangeCountAdjustment_descriptor_;
}

const CMsgEconPlayerStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgEconPlayerStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::default_instance_ = NULL;

CMsgEconPlayerStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::New() const {
  return new CMsgEconPlayerStrangeCountAdjustment;
}

void CMsgEconPlayerStrangeCountAdjustment::Clear() {
  account_id_ = 0u;
  strange_count_adjustments_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgEconPlayerStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgEconPlayerStrangeCountAdjustment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strange_count_adjustments;
        break;
      }

      // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
      case 2: {
        if (tag == 18) {
         parse_strange_count_adjustments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_strange_count_adjustments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strange_count_adjustments;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgEconPlayerStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgEconPlayerStrangeCountAdjustment)
  return false;
#undef DO_
}

void CMsgEconPlayerStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgEconPlayerStrangeCountAdjustment)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (int i = 0; i < this->strange_count_adjustments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->strange_count_adjustments(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgEconPlayerStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEconPlayerStrangeCountAdjustment)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (int i = 0; i < this->strange_count_adjustments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->strange_count_adjustments(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEconPlayerStrangeCountAdjustment)
  return target;
}

int CMsgEconPlayerStrangeCountAdjustment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  total_size += 1 * this->strange_count_adjustments_size();
  for (int i = 0; i < this->strange_count_adjustments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->strange_count_adjustments(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgEconPlayerStrangeCountAdjustment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
  GOOGLE_CHECK_NE(&from, this);
  strange_count_adjustments_.MergeFrom(from.strange_count_adjustments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment::IsInitialized() const {

  return true;
}

void CMsgEconPlayerStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    strange_count_adjustments_.Swap(&other->strange_count_adjustments_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgEconPlayerStrangeCountAdjustment_descriptor_;
  metadata.reflection = CMsgEconPlayerStrangeCountAdjustment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_FinalizePurchase::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_FinalizePurchase)
}

void CMsgRequestItemPurgatory_FinalizePurchase::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase(const CMsgRequestItemPurgatory_FinalizePurchase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_FinalizePurchase)
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_FinalizePurchase::~CMsgRequestItemPurgatory_FinalizePurchase() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_FinalizePurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_FinalizePurchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_FinalizePurchase_descriptor_;
}

const CMsgRequestItemPurgatory_FinalizePurchase& CMsgRequestItemPurgatory_FinalizePurchase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_FinalizePurchase* CMsgRequestItemPurgatory_FinalizePurchase::default_instance_ = NULL;

CMsgRequestItemPurgatory_FinalizePurchase* CMsgRequestItemPurgatory_FinalizePurchase::New() const {
  return new CMsgRequestItemPurgatory_FinalizePurchase;
}

void CMsgRequestItemPurgatory_FinalizePurchase::Clear() {
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_FinalizePurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_FinalizePurchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_FinalizePurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_FinalizePurchase)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_FinalizePurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_FinalizePurchase)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_FinalizePurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_FinalizePurchase)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_FinalizePurchase)
  return target;
}

int CMsgRequestItemPurgatory_FinalizePurchase::ByteSize() const {
  int total_size = 0;

  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_FinalizePurchase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchase::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchase::Swap(CMsgRequestItemPurgatory_FinalizePurchase* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_FinalizePurchase_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_FinalizePurchase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_FinalizePurchaseResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse::~CMsgRequestItemPurgatory_FinalizePurchaseResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchaseResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_;
}

const CMsgRequestItemPurgatory_FinalizePurchaseResponse& CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse* CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_ = NULL;

CMsgRequestItemPurgatory_FinalizePurchaseResponse* CMsgRequestItemPurgatory_FinalizePurchaseResponse::New() const {
  return new CMsgRequestItemPurgatory_FinalizePurchaseResponse;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchaseResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return target;
}

int CMsgRequestItemPurgatory_FinalizePurchaseResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchaseResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_FinalizePurchaseResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Swap(CMsgRequestItemPurgatory_FinalizePurchaseResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchaseResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_RefundPurchase::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_RefundPurchase)
}

void CMsgRequestItemPurgatory_RefundPurchase::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase(const CMsgRequestItemPurgatory_RefundPurchase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_RefundPurchase)
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_RefundPurchase::~CMsgRequestItemPurgatory_RefundPurchase() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_RefundPurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_RefundPurchase_descriptor_;
}

const CMsgRequestItemPurgatory_RefundPurchase& CMsgRequestItemPurgatory_RefundPurchase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_RefundPurchase* CMsgRequestItemPurgatory_RefundPurchase::default_instance_ = NULL;

CMsgRequestItemPurgatory_RefundPurchase* CMsgRequestItemPurgatory_RefundPurchase::New() const {
  return new CMsgRequestItemPurgatory_RefundPurchase;
}

void CMsgRequestItemPurgatory_RefundPurchase::Clear() {
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_RefundPurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_RefundPurchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_RefundPurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_RefundPurchase)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_RefundPurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_RefundPurchase)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_RefundPurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_RefundPurchase)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_RefundPurchase)
  return target;
}

int CMsgRequestItemPurgatory_RefundPurchase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_RefundPurchase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchase::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_RefundPurchase::Swap(CMsgRequestItemPurgatory_RefundPurchase* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_RefundPurchase_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_RefundPurchase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_RefundPurchaseResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_RefundPurchaseResponse::~CMsgRequestItemPurgatory_RefundPurchaseResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchaseResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_;
}

const CMsgRequestItemPurgatory_RefundPurchaseResponse& CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_RefundPurchaseResponse* CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_ = NULL;

CMsgRequestItemPurgatory_RefundPurchaseResponse* CMsgRequestItemPurgatory_RefundPurchaseResponse::New() const {
  return new CMsgRequestItemPurgatory_RefundPurchaseResponse;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchaseResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return target;
}

int CMsgRequestItemPurgatory_RefundPurchaseResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchaseResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_RefundPurchaseResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Swap(CMsgRequestItemPurgatory_RefundPurchaseResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchaseResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgCraftingResponse::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgCraftingResponse::CMsgCraftingResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCraftingResponse)
}

void CMsgCraftingResponse::InitAsDefaultInstance() {
}

CMsgCraftingResponse::CMsgCraftingResponse(const CMsgCraftingResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgCraftingResponse)
}

void CMsgCraftingResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgCraftingResponse::~CMsgCraftingResponse() {
  // @@protoc_insertion_point(destructor:CMsgCraftingResponse)
  SharedDtor();
}

void CMsgCraftingResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgCraftingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCraftingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgCraftingResponse_descriptor_;
}

const CMsgCraftingResponse& CMsgCraftingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgCraftingResponse* CMsgCraftingResponse::default_instance_ = NULL;

CMsgCraftingResponse* CMsgCraftingResponse::New() const {
  return new CMsgCraftingResponse;
}

void CMsgCraftingResponse::Clear() {
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgCraftingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCraftingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCraftingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCraftingResponse)
  return false;
#undef DO_
}

void CMsgCraftingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCraftingResponse)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCraftingResponse)
}

::google::protobuf::uint8* CMsgCraftingResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftingResponse)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftingResponse)
  return target;
}

int CMsgCraftingResponse::ByteSize() const {
  int total_size = 0;

  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCraftingResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgCraftingResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgCraftingResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgCraftingResponse::MergeFrom(const CMsgCraftingResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgCraftingResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftingResponse::CopyFrom(const CMsgCraftingResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftingResponse::IsInitialized() const {

  return true;
}

void CMsgCraftingResponse::Swap(CMsgCraftingResponse* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgCraftingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgCraftingResponse_descriptor_;
  metadata.reflection = CMsgCraftingResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesData::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesData::kCurrencyFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesData)
}

void CMsgGCRequestStoreSalesData::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData(const CMsgGCRequestStoreSalesData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesData)
}

void CMsgGCRequestStoreSalesData::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  currency_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesData::~CMsgGCRequestStoreSalesData() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesData)
  SharedDtor();
}

void CMsgGCRequestStoreSalesData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesData_descriptor_;
}

const CMsgGCRequestStoreSalesData& CMsgGCRequestStoreSalesData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesData* CMsgGCRequestStoreSalesData::default_instance_ = NULL;

CMsgGCRequestStoreSalesData* CMsgGCRequestStoreSalesData::New() const {
  return new CMsgGCRequestStoreSalesData;
}

void CMsgGCRequestStoreSalesData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(version_, currency_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_currency;
        break;
      }

      // optional uint32 currency = 2;
      case 2: {
        if (tag == 16) {
         parse_currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesData)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesData)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 currency = 2;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currency(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesData)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesData)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 currency = 2;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currency(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesData)
  return target;
}

int CMsgGCRequestStoreSalesData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 currency = 2;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesData::MergeFrom(const CMsgGCRequestStoreSalesData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesData::CopyFrom(const CMsgGCRequestStoreSalesData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesData::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesData::Swap(CMsgGCRequestStoreSalesData* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(currency_, other->currency_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesData_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesDataResponse_Price::kItemDefFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse_Price::kPriceFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesDataResponse.Price)
}

void CMsgGCRequestStoreSalesDataResponse_Price::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price(const CMsgGCRequestStoreSalesDataResponse_Price& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataResponse.Price)
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedCtor() {
  _cached_size_ = 0;
  item_def_ = 0u;
  price_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesDataResponse_Price::~CMsgGCRequestStoreSalesDataResponse_Price() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataResponse.Price)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse_Price::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesDataResponse_Price_descriptor_;
}

const CMsgGCRequestStoreSalesDataResponse_Price& CMsgGCRequestStoreSalesDataResponse_Price::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse_Price::default_instance_ = NULL;

CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse_Price::New() const {
  return new CMsgGCRequestStoreSalesDataResponse_Price;
}

void CMsgGCRequestStoreSalesDataResponse_Price::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesDataResponse_Price*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_def_, price_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesDataResponse_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesDataResponse.Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_price;
        break;
      }

      // optional uint32 price = 2;
      case 2: {
        if (tag == 16) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesDataResponse.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesDataResponse.Price)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataResponse_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesDataResponse.Price)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 price = 2;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesDataResponse.Price)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse_Price::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataResponse.Price)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 price = 2;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataResponse.Price)
  return target;
}

int CMsgGCRequestStoreSalesDataResponse_Price::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 price = 2;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse_Price* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesDataResponse_Price*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse_Price::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesDataResponse_Price::Swap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
  if (other != this) {
    std::swap(item_def_, other->item_def_);
    std::swap(price_, other->price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse_Price::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesDataResponse_Price_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesDataResponse_Price_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesDataResponse::kSalePriceFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kExpirationTimeFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesDataResponse)
}

void CMsgGCRequestStoreSalesDataResponse::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse(const CMsgGCRequestStoreSalesDataResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataResponse)
}

void CMsgGCRequestStoreSalesDataResponse::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  expiration_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesDataResponse::~CMsgGCRequestStoreSalesDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesDataResponse_descriptor_;
}

const CMsgGCRequestStoreSalesDataResponse& CMsgGCRequestStoreSalesDataResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesDataResponse* CMsgGCRequestStoreSalesDataResponse::default_instance_ = NULL;

CMsgGCRequestStoreSalesDataResponse* CMsgGCRequestStoreSalesDataResponse::New() const {
  return new CMsgGCRequestStoreSalesDataResponse;
}

void CMsgGCRequestStoreSalesDataResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesDataResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(version_, expiration_time_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  sale_price_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
      case 1: {
        if (tag == 10) {
         parse_sale_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sale_price()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_sale_price;
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // optional uint32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_expiration_time;
        break;
      }

      // optional uint32 expiration_time = 3;
      case 3: {
        if (tag == 24) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesDataResponse)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesDataResponse)
  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (int i = 0; i < this->sale_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sale_price(i), output);
  }

  // optional uint32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // optional uint32 expiration_time = 3;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiration_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesDataResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataResponse)
  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (int i = 0; i < this->sale_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sale_price(i), target);
  }

  // optional uint32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // optional uint32 expiration_time = 3;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiration_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataResponse)
  return target;
}

int CMsgGCRequestStoreSalesDataResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 3;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  total_size += 1 * this->sale_price_size();
  for (int i = 0; i < this->sale_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sale_price(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesDataResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  sale_price_.MergeFrom(from.sale_price_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesDataResponse::Swap(CMsgGCRequestStoreSalesDataResponse* other) {
  if (other != this) {
    sale_price_.Swap(&other->sale_price_);
    std::swap(version_, other->version_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesDataResponse_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesDataResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kExpirationTimeFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse(const CMsgGCRequestStoreSalesDataUpToDateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  expiration_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesDataUpToDateResponse::~CMsgGCRequestStoreSalesDataUpToDateResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataUpToDateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_;
}

const CMsgGCRequestStoreSalesDataUpToDateResponse& CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesDataUpToDateResponse* CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_ = NULL;

CMsgGCRequestStoreSalesDataUpToDateResponse* CMsgGCRequestStoreSalesDataUpToDateResponse::New() const {
  return new CMsgGCRequestStoreSalesDataUpToDateResponse;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesDataUpToDateResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(version_, expiration_time_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_expiration_time;
        break;
      }

      // optional uint32 expiration_time = 2;
      case 2: {
        if (tag == 16) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesDataUpToDateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesDataUpToDateResponse)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 expiration_time = 2;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->expiration_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesDataUpToDateResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataUpToDateResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 expiration_time = 2;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->expiration_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataUpToDateResponse)
  return target;
}

int CMsgGCRequestStoreSalesDataUpToDateResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 2;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataUpToDateResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesDataUpToDateResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Swap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataUpToDateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGCToGCPingRequest::CMsgGCToGCPingRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCPingRequest)
}

void CMsgGCToGCPingRequest::InitAsDefaultInstance() {
}

CMsgGCToGCPingRequest::CMsgGCToGCPingRequest(const CMsgGCToGCPingRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCPingRequest)
}

void CMsgGCToGCPingRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCPingRequest::~CMsgGCToGCPingRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCPingRequest)
  SharedDtor();
}

void CMsgGCToGCPingRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCPingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCPingRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCPingRequest_descriptor_;
}

const CMsgGCToGCPingRequest& CMsgGCToGCPingRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCPingRequest* CMsgGCToGCPingRequest::default_instance_ = NULL;

CMsgGCToGCPingRequest* CMsgGCToGCPingRequest::New() const {
  return new CMsgGCToGCPingRequest;
}

void CMsgGCToGCPingRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCPingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCPingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCPingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCPingRequest)
  return false;
#undef DO_
}

void CMsgGCToGCPingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCPingRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCPingRequest)
}

::google::protobuf::uint8* CMsgGCToGCPingRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCPingRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCPingRequest)
  return target;
}

int CMsgGCToGCPingRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCPingRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCPingRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCPingRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingRequest::MergeFrom(const CMsgGCToGCPingRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCPingRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingRequest::CopyFrom(const CMsgGCToGCPingRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingRequest::IsInitialized() const {

  return true;
}

void CMsgGCToGCPingRequest::Swap(CMsgGCToGCPingRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCPingRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCPingRequest_descriptor_;
  metadata.reflection = CMsgGCToGCPingRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGCToGCPingResponse::CMsgGCToGCPingResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCPingResponse)
}

void CMsgGCToGCPingResponse::InitAsDefaultInstance() {
}

CMsgGCToGCPingResponse::CMsgGCToGCPingResponse(const CMsgGCToGCPingResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCPingResponse)
}

void CMsgGCToGCPingResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCPingResponse::~CMsgGCToGCPingResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCPingResponse)
  SharedDtor();
}

void CMsgGCToGCPingResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCPingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCPingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCPingResponse_descriptor_;
}

const CMsgGCToGCPingResponse& CMsgGCToGCPingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCPingResponse* CMsgGCToGCPingResponse::default_instance_ = NULL;

CMsgGCToGCPingResponse* CMsgGCToGCPingResponse::New() const {
  return new CMsgGCToGCPingResponse;
}

void CMsgGCToGCPingResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCPingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCPingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCPingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCPingResponse)
  return false;
#undef DO_
}

void CMsgGCToGCPingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCPingResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCPingResponse)
}

::google::protobuf::uint8* CMsgGCToGCPingResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCPingResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCPingResponse)
  return target;
}

int CMsgGCToGCPingResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCPingResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCPingResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCPingResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingResponse::MergeFrom(const CMsgGCToGCPingResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCPingResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingResponse::CopyFrom(const CMsgGCToGCPingResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCPingResponse::Swap(CMsgGCToGCPingResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCPingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCPingResponse_descriptor_;
  metadata.reflection = CMsgGCToGCPingResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserSessionServer::kAccountIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserSessionServer)
}

void CMsgGCToGCGetUserSessionServer::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer(const CMsgGCToGCGetUserSessionServer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserSessionServer)
}

void CMsgGCToGCGetUserSessionServer::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserSessionServer::~CMsgGCToGCGetUserSessionServer() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserSessionServer)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserSessionServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserSessionServer_descriptor_;
}

const CMsgGCToGCGetUserSessionServer& CMsgGCToGCGetUserSessionServer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserSessionServer* CMsgGCToGCGetUserSessionServer::default_instance_ = NULL;

CMsgGCToGCGetUserSessionServer* CMsgGCToGCGetUserSessionServer::New() const {
  return new CMsgGCToGCGetUserSessionServer;
}

void CMsgGCToGCGetUserSessionServer::Clear() {
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserSessionServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserSessionServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserSessionServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserSessionServer)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserSessionServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserSessionServer)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserSessionServer)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserSessionServer)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserSessionServer)
  return target;
}

int CMsgGCToGCGetUserSessionServer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserSessionServer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const CMsgGCToGCGetUserSessionServer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const CMsgGCToGCGetUserSessionServer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServer::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserSessionServer::Swap(CMsgGCToGCGetUserSessionServer* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserSessionServer_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserSessionServer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserSessionServerResponse::kServerSteamIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserSessionServerResponse)
}

void CMsgGCToGCGetUserSessionServerResponse::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse(const CMsgGCToGCGetUserSessionServerResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserSessionServerResponse)
}

void CMsgGCToGCGetUserSessionServerResponse::SharedCtor() {
  _cached_size_ = 0;
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserSessionServerResponse::~CMsgGCToGCGetUserSessionServerResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserSessionServerResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServerResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserSessionServerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserSessionServerResponse_descriptor_;
}

const CMsgGCToGCGetUserSessionServerResponse& CMsgGCToGCGetUserSessionServerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserSessionServerResponse* CMsgGCToGCGetUserSessionServerResponse::default_instance_ = NULL;

CMsgGCToGCGetUserSessionServerResponse* CMsgGCToGCGetUserSessionServerResponse::New() const {
  return new CMsgGCToGCGetUserSessionServerResponse;
}

void CMsgGCToGCGetUserSessionServerResponse::Clear() {
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserSessionServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserSessionServerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 server_steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_steam_id_)));
          set_has_server_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserSessionServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserSessionServerResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserSessionServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserSessionServerResponse)
  // optional fixed64 server_steam_id = 1;
  if (has_server_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->server_steam_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserSessionServerResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServerResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserSessionServerResponse)
  // optional fixed64 server_steam_id = 1;
  if (has_server_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->server_steam_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserSessionServerResponse)
  return target;
}

int CMsgGCToGCGetUserSessionServerResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed64 server_steam_id = 1;
    if (has_server_steam_id()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServerResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserSessionServerResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_steam_id()) {
      set_server_steam_id(from.server_steam_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServerResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserSessionServerResponse::Swap(CMsgGCToGCGetUserSessionServerResponse* other) {
  if (other != this) {
    std::swap(server_steam_id_, other->server_steam_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServerResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserSessionServerResponse_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserSessionServerResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserServerMembers::kAccountIdFieldNumber;
const int CMsgGCToGCGetUserServerMembers::kMaxSpectatorsFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserServerMembers)
}

void CMsgGCToGCGetUserServerMembers::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers(const CMsgGCToGCGetUserServerMembers& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserServerMembers)
}

void CMsgGCToGCGetUserServerMembers::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  max_spectators_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserServerMembers::~CMsgGCToGCGetUserServerMembers() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserServerMembers)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembers::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserServerMembers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembers::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserServerMembers_descriptor_;
}

const CMsgGCToGCGetUserServerMembers& CMsgGCToGCGetUserServerMembers::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserServerMembers* CMsgGCToGCGetUserServerMembers::default_instance_ = NULL;

CMsgGCToGCGetUserServerMembers* CMsgGCToGCGetUserServerMembers::New() const {
  return new CMsgGCToGCGetUserServerMembers;
}

void CMsgGCToGCGetUserServerMembers::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGetUserServerMembers*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, max_spectators_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserServerMembers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserServerMembers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_spectators;
        break;
      }

      // optional uint32 max_spectators = 2;
      case 2: {
        if (tag == 16) {
         parse_max_spectators:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_spectators_)));
          set_has_max_spectators();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserServerMembers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserServerMembers)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserServerMembers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserServerMembers)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 max_spectators = 2;
  if (has_max_spectators()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_spectators(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserServerMembers)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembers::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserServerMembers)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 max_spectators = 2;
  if (has_max_spectators()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_spectators(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserServerMembers)
  return target;
}

int CMsgGCToGCGetUserServerMembers::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 max_spectators = 2;
    if (has_max_spectators()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_spectators());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembers* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserServerMembers*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const CMsgGCToGCGetUserServerMembers& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_max_spectators()) {
      set_max_spectators(from.max_spectators());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const CMsgGCToGCGetUserServerMembers& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembers::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserServerMembers::Swap(CMsgGCToGCGetUserServerMembers* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(max_spectators_, other->max_spectators_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembers::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserServerMembers_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserServerMembers_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserServerMembersResponse::kMemberAccountIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserServerMembersResponse)
}

void CMsgGCToGCGetUserServerMembersResponse::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse(const CMsgGCToGCGetUserServerMembersResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserServerMembersResponse)
}

void CMsgGCToGCGetUserServerMembersResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserServerMembersResponse::~CMsgGCToGCGetUserServerMembersResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserServerMembersResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembersResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserServerMembersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserServerMembersResponse_descriptor_;
}

const CMsgGCToGCGetUserServerMembersResponse& CMsgGCToGCGetUserServerMembersResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserServerMembersResponse* CMsgGCToGCGetUserServerMembersResponse::default_instance_ = NULL;

CMsgGCToGCGetUserServerMembersResponse* CMsgGCToGCGetUserServerMembersResponse::New() const {
  return new CMsgGCToGCGetUserServerMembersResponse;
}

void CMsgGCToGCGetUserServerMembersResponse::Clear() {
  member_account_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserServerMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserServerMembersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 member_account_id = 1;
      case 1: {
        if (tag == 8) {
         parse_member_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_member_account_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_account_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_member_account_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserServerMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserServerMembersResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserServerMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserServerMembersResponse)
  // repeated uint32 member_account_id = 1;
  for (int i = 0; i < this->member_account_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->member_account_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserServerMembersResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembersResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserServerMembersResponse)
  // repeated uint32 member_account_id = 1;
  for (int i = 0; i < this->member_account_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->member_account_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserServerMembersResponse)
  return target;
}

int CMsgGCToGCGetUserServerMembersResponse::ByteSize() const {
  int total_size = 0;

  // repeated uint32 member_account_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->member_account_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->member_account_id(i));
    }
    total_size += 1 * this->member_account_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembersResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserServerMembersResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_account_id_.MergeFrom(from.member_account_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembersResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserServerMembersResponse::Swap(CMsgGCToGCGetUserServerMembersResponse* other) {
  if (other != this) {
    member_account_id_.Swap(&other->member_account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserServerMembersResponse_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserServerMembersResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgLookupMultipleAccountNames::kAccountidsFieldNumber;
#endif  // !_MSC_VER

CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLookupMultipleAccountNames)
}

void CMsgLookupMultipleAccountNames::InitAsDefaultInstance() {
}

CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames(const CMsgLookupMultipleAccountNames& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNames)
}

void CMsgLookupMultipleAccountNames::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLookupMultipleAccountNames::~CMsgLookupMultipleAccountNames() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNames)
  SharedDtor();
}

void CMsgLookupMultipleAccountNames::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgLookupMultipleAccountNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNames::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLookupMultipleAccountNames_descriptor_;
}

const CMsgLookupMultipleAccountNames& CMsgLookupMultipleAccountNames::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgLookupMultipleAccountNames* CMsgLookupMultipleAccountNames::default_instance_ = NULL;

CMsgLookupMultipleAccountNames* CMsgLookupMultipleAccountNames::New() const {
  return new CMsgLookupMultipleAccountNames;
}

void CMsgLookupMultipleAccountNames::Clear() {
  accountids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLookupMultipleAccountNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLookupMultipleAccountNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 accountids = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accountids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_accountids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLookupMultipleAccountNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLookupMultipleAccountNames)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLookupMultipleAccountNames)
  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_accountids_cached_byte_size_);
  }
  for (int i = 0; i < this->accountids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->accountids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLookupMultipleAccountNames)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNames::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNames)
  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _accountids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->accountids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->accountids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNames)
  return target;
}

int CMsgLookupMultipleAccountNames::ByteSize() const {
  int total_size = 0;

  // repeated uint32 accountids = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->accountids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->accountids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _accountids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNames::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNames* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLookupMultipleAccountNames*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNames::MergeFrom(const CMsgLookupMultipleAccountNames& from) {
  GOOGLE_CHECK_NE(&from, this);
  accountids_.MergeFrom(from.accountids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLookupMultipleAccountNames::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const CMsgLookupMultipleAccountNames& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNames::IsInitialized() const {

  return true;
}

void CMsgLookupMultipleAccountNames::Swap(CMsgLookupMultipleAccountNames* other) {
  if (other != this) {
    accountids_.Swap(&other->accountids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNames::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLookupMultipleAccountNames_descriptor_;
  metadata.reflection = CMsgLookupMultipleAccountNames_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgLookupMultipleAccountNamesResponse_Account::kAccountidFieldNumber;
const int CMsgLookupMultipleAccountNamesResponse_Account::kPersonaFieldNumber;
#endif  // !_MSC_VER

CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLookupMultipleAccountNamesResponse.Account)
}

void CMsgLookupMultipleAccountNamesResponse_Account::InitAsDefaultInstance() {
}

CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account(const CMsgLookupMultipleAccountNamesResponse_Account& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNamesResponse.Account)
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = 0u;
  persona_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLookupMultipleAccountNamesResponse_Account::~CMsgLookupMultipleAccountNamesResponse_Account() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNamesResponse.Account)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedDtor() {
  if (persona_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_;
  }
  if (this != default_instance_) {
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse_Account::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLookupMultipleAccountNamesResponse_Account_descriptor_;
}

const CMsgLookupMultipleAccountNamesResponse_Account& CMsgLookupMultipleAccountNamesResponse_Account::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse_Account::default_instance_ = NULL;

CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse_Account::New() const {
  return new CMsgLookupMultipleAccountNamesResponse_Account;
}

void CMsgLookupMultipleAccountNamesResponse_Account::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    accountid_ = 0u;
    if (has_persona()) {
      if (persona_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        persona_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLookupMultipleAccountNamesResponse_Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLookupMultipleAccountNamesResponse.Account)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_persona;
        break;
      }

      // optional string persona = 2;
      case 2: {
        if (tag == 18) {
         parse_persona:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona().data(), this->persona().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "persona");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLookupMultipleAccountNamesResponse.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLookupMultipleAccountNamesResponse.Account)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNamesResponse_Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLookupMultipleAccountNamesResponse.Account)
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional string persona = 2;
  if (has_persona()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), this->persona().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "persona");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLookupMultipleAccountNamesResponse.Account)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse_Account::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNamesResponse.Account)
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional string persona = 2;
  if (has_persona()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), this->persona().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "persona");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNamesResponse.Account)
  return target;
}

int CMsgLookupMultipleAccountNamesResponse_Account::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional string persona = 2;
    if (has_persona()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse_Account* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLookupMultipleAccountNamesResponse_Account*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
    if (from.has_persona()) {
      set_persona(from.persona());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse_Account::IsInitialized() const {

  return true;
}

void CMsgLookupMultipleAccountNamesResponse_Account::Swap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
  if (other != this) {
    std::swap(accountid_, other->accountid_);
    std::swap(persona_, other->persona_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse_Account::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLookupMultipleAccountNamesResponse_Account_descriptor_;
  metadata.reflection = CMsgLookupMultipleAccountNamesResponse_Account_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgLookupMultipleAccountNamesResponse::kAccountsFieldNumber;
#endif  // !_MSC_VER

CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLookupMultipleAccountNamesResponse)
}

void CMsgLookupMultipleAccountNamesResponse::InitAsDefaultInstance() {
}

CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse(const CMsgLookupMultipleAccountNamesResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNamesResponse)
}

void CMsgLookupMultipleAccountNamesResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLookupMultipleAccountNamesResponse::~CMsgLookupMultipleAccountNamesResponse() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNamesResponse)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgLookupMultipleAccountNamesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLookupMultipleAccountNamesResponse_descriptor_;
}

const CMsgLookupMultipleAccountNamesResponse& CMsgLookupMultipleAccountNamesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgLookupMultipleAccountNamesResponse* CMsgLookupMultipleAccountNamesResponse::default_instance_ = NULL;

CMsgLookupMultipleAccountNamesResponse* CMsgLookupMultipleAccountNamesResponse::New() const {
  return new CMsgLookupMultipleAccountNamesResponse;
}

void CMsgLookupMultipleAccountNamesResponse::Clear() {
  accounts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLookupMultipleAccountNamesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLookupMultipleAccountNamesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
      case 1: {
        if (tag == 10) {
         parse_accounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_accounts;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLookupMultipleAccountNamesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLookupMultipleAccountNamesResponse)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNamesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLookupMultipleAccountNamesResponse)
  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (int i = 0; i < this->accounts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accounts(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLookupMultipleAccountNamesResponse)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNamesResponse)
  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (int i = 0; i < this->accounts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->accounts(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNamesResponse)
  return target;
}

int CMsgLookupMultipleAccountNamesResponse::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  total_size += 1 * this->accounts_size();
  for (int i = 0; i < this->accounts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->accounts(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLookupMultipleAccountNamesResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  accounts_.MergeFrom(from.accounts_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse::IsInitialized() const {

  return true;
}

void CMsgLookupMultipleAccountNamesResponse::Swap(CMsgLookupMultipleAccountNamesResponse* other) {
  if (other != this) {
    accounts_.Swap(&other->accounts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLookupMultipleAccountNamesResponse_descriptor_;
  metadata.reflection = CMsgLookupMultipleAccountNamesResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserPCBangNo::kAccountIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserPCBangNo::CMsgGCToGCGetUserPCBangNo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserPCBangNo)
}

void CMsgGCToGCGetUserPCBangNo::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserPCBangNo::CMsgGCToGCGetUserPCBangNo(const CMsgGCToGCGetUserPCBangNo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserPCBangNo)
}

void CMsgGCToGCGetUserPCBangNo::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserPCBangNo::~CMsgGCToGCGetUserPCBangNo() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserPCBangNo)
  SharedDtor();
}

void CMsgGCToGCGetUserPCBangNo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserPCBangNo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserPCBangNo_descriptor_;
}

const CMsgGCToGCGetUserPCBangNo& CMsgGCToGCGetUserPCBangNo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserPCBangNo* CMsgGCToGCGetUserPCBangNo::default_instance_ = NULL;

CMsgGCToGCGetUserPCBangNo* CMsgGCToGCGetUserPCBangNo::New() const {
  return new CMsgGCToGCGetUserPCBangNo;
}

void CMsgGCToGCGetUserPCBangNo::Clear() {
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserPCBangNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserPCBangNo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserPCBangNo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserPCBangNo)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserPCBangNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserPCBangNo)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserPCBangNo)
}

::google::protobuf::uint8* CMsgGCToGCGetUserPCBangNo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserPCBangNo)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserPCBangNo)
  return target;
}

int CMsgGCToGCGetUserPCBangNo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserPCBangNo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserPCBangNo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserPCBangNo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserPCBangNo::MergeFrom(const CMsgGCToGCGetUserPCBangNo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserPCBangNo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserPCBangNo::CopyFrom(const CMsgGCToGCGetUserPCBangNo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserPCBangNo::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserPCBangNo::Swap(CMsgGCToGCGetUserPCBangNo* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserPCBangNo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserPCBangNo_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserPCBangNo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserPCBangNoResponse::kPcBangNoFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserPCBangNoResponse::CMsgGCToGCGetUserPCBangNoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserPCBangNoResponse)
}

void CMsgGCToGCGetUserPCBangNoResponse::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserPCBangNoResponse::CMsgGCToGCGetUserPCBangNoResponse(const CMsgGCToGCGetUserPCBangNoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserPCBangNoResponse)
}

void CMsgGCToGCGetUserPCBangNoResponse::SharedCtor() {
  _cached_size_ = 0;
  pc_bang_no_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserPCBangNoResponse::~CMsgGCToGCGetUserPCBangNoResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserPCBangNoResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserPCBangNoResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserPCBangNoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserPCBangNoResponse_descriptor_;
}

const CMsgGCToGCGetUserPCBangNoResponse& CMsgGCToGCGetUserPCBangNoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserPCBangNoResponse* CMsgGCToGCGetUserPCBangNoResponse::default_instance_ = NULL;

CMsgGCToGCGetUserPCBangNoResponse* CMsgGCToGCGetUserPCBangNoResponse::New() const {
  return new CMsgGCToGCGetUserPCBangNoResponse;
}

void CMsgGCToGCGetUserPCBangNoResponse::Clear() {
  pc_bang_no_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserPCBangNoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserPCBangNoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pc_bang_no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pc_bang_no_)));
          set_has_pc_bang_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserPCBangNoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserPCBangNoResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserPCBangNoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserPCBangNoResponse)
  // optional uint32 pc_bang_no = 1;
  if (has_pc_bang_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pc_bang_no(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserPCBangNoResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserPCBangNoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserPCBangNoResponse)
  // optional uint32 pc_bang_no = 1;
  if (has_pc_bang_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pc_bang_no(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserPCBangNoResponse)
  return target;
}

int CMsgGCToGCGetUserPCBangNoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 pc_bang_no = 1;
    if (has_pc_bang_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pc_bang_no());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserPCBangNoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserPCBangNoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserPCBangNoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserPCBangNoResponse::MergeFrom(const CMsgGCToGCGetUserPCBangNoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pc_bang_no()) {
      set_pc_bang_no(from.pc_bang_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserPCBangNoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserPCBangNoResponse::CopyFrom(const CMsgGCToGCGetUserPCBangNoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserPCBangNoResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserPCBangNoResponse::Swap(CMsgGCToGCGetUserPCBangNoResponse* other) {
  if (other != this) {
    std::swap(pc_bang_no_, other->pc_bang_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserPCBangNoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserPCBangNoResponse_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserPCBangNoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestCrateItems::kCrateItemDefFieldNumber;
#endif  // !_MSC_VER

CMsgRequestCrateItems::CMsgRequestCrateItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestCrateItems)
}

void CMsgRequestCrateItems::InitAsDefaultInstance() {
}

CMsgRequestCrateItems::CMsgRequestCrateItems(const CMsgRequestCrateItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestCrateItems)
}

void CMsgRequestCrateItems::SharedCtor() {
  _cached_size_ = 0;
  crate_item_def_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestCrateItems::~CMsgRequestCrateItems() {
  // @@protoc_insertion_point(destructor:CMsgRequestCrateItems)
  SharedDtor();
}

void CMsgRequestCrateItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestCrateItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestCrateItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestCrateItems_descriptor_;
}

const CMsgRequestCrateItems& CMsgRequestCrateItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestCrateItems* CMsgRequestCrateItems::default_instance_ = NULL;

CMsgRequestCrateItems* CMsgRequestCrateItems::New() const {
  return new CMsgRequestCrateItems;
}

void CMsgRequestCrateItems::Clear() {
  crate_item_def_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestCrateItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestCrateItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crate_item_def_)));
          set_has_crate_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestCrateItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestCrateItems)
  return false;
#undef DO_
}

void CMsgRequestCrateItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestCrateItems)
  // optional uint32 crate_item_def = 1;
  if (has_crate_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->crate_item_def(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestCrateItems)
}

::google::protobuf::uint8* CMsgRequestCrateItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestCrateItems)
  // optional uint32 crate_item_def = 1;
  if (has_crate_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->crate_item_def(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestCrateItems)
  return target;
}

int CMsgRequestCrateItems::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 crate_item_def = 1;
    if (has_crate_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crate_item_def());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestCrateItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestCrateItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestCrateItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItems::MergeFrom(const CMsgRequestCrateItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_crate_item_def()) {
      set_crate_item_def(from.crate_item_def());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestCrateItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItems::CopyFrom(const CMsgRequestCrateItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItems::IsInitialized() const {

  return true;
}

void CMsgRequestCrateItems::Swap(CMsgRequestCrateItems* other) {
  if (other != this) {
    std::swap(crate_item_def_, other->crate_item_def_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestCrateItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestCrateItems_descriptor_;
  metadata.reflection = CMsgRequestCrateItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestCrateItemsResponse::kCrateItemDefFieldNumber;
const int CMsgRequestCrateItemsResponse::kItemDefsFieldNumber;
#endif  // !_MSC_VER

CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestCrateItemsResponse)
}

void CMsgRequestCrateItemsResponse::InitAsDefaultInstance() {
}

CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse(const CMsgRequestCrateItemsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestCrateItemsResponse)
}

void CMsgRequestCrateItemsResponse::SharedCtor() {
  _cached_size_ = 0;
  crate_item_def_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestCrateItemsResponse::~CMsgRequestCrateItemsResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestCrateItemsResponse)
  SharedDtor();
}

void CMsgRequestCrateItemsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestCrateItemsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestCrateItemsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestCrateItemsResponse_descriptor_;
}

const CMsgRequestCrateItemsResponse& CMsgRequestCrateItemsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestCrateItemsResponse* CMsgRequestCrateItemsResponse::default_instance_ = NULL;

CMsgRequestCrateItemsResponse* CMsgRequestCrateItemsResponse::New() const {
  return new CMsgRequestCrateItemsResponse;
}

void CMsgRequestCrateItemsResponse::Clear() {
  crate_item_def_ = 0u;
  item_defs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestCrateItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestCrateItemsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crate_item_def_)));
          set_has_crate_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_defs;
        break;
      }

      // repeated uint32 item_defs = 2;
      case 2: {
        if (tag == 16) {
         parse_item_defs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_item_defs())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_item_defs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_defs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestCrateItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestCrateItemsResponse)
  return false;
#undef DO_
}

void CMsgRequestCrateItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestCrateItemsResponse)
  // optional uint32 crate_item_def = 1;
  if (has_crate_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->crate_item_def(), output);
  }

  // repeated uint32 item_defs = 2;
  for (int i = 0; i < this->item_defs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->item_defs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestCrateItemsResponse)
}

::google::protobuf::uint8* CMsgRequestCrateItemsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestCrateItemsResponse)
  // optional uint32 crate_item_def = 1;
  if (has_crate_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->crate_item_def(), target);
  }

  // repeated uint32 item_defs = 2;
  for (int i = 0; i < this->item_defs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->item_defs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestCrateItemsResponse)
  return target;
}

int CMsgRequestCrateItemsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 crate_item_def = 1;
    if (has_crate_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crate_item_def());
    }

  }
  // repeated uint32 item_defs = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_defs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->item_defs(i));
    }
    total_size += 1 * this->item_defs_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestCrateItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestCrateItemsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestCrateItemsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItemsResponse::MergeFrom(const CMsgRequestCrateItemsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_defs_.MergeFrom(from.item_defs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_crate_item_def()) {
      set_crate_item_def(from.crate_item_def());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestCrateItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItemsResponse::CopyFrom(const CMsgRequestCrateItemsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItemsResponse::IsInitialized() const {

  return true;
}

void CMsgRequestCrateItemsResponse::Swap(CMsgRequestCrateItemsResponse* other) {
  if (other != this) {
    std::swap(crate_item_def_, other->crate_item_def_);
    item_defs_.Swap(&other->item_defs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestCrateItemsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestCrateItemsResponse_descriptor_;
  metadata.reflection = CMsgRequestCrateItemsResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCCanUseDropRateBonus::kAccountIdFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kExclusiveItemDefFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kAllowEqualRateFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCCanUseDropRateBonus)
}

void CMsgGCToGCCanUseDropRateBonus::InitAsDefaultInstance() {
}

CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus(const CMsgGCToGCCanUseDropRateBonus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCCanUseDropRateBonus)
}

void CMsgGCToGCCanUseDropRateBonus::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  drop_rate_bonus_ = 0;
  booster_type_ = 0u;
  exclusive_item_def_ = 0u;
  allow_equal_rate_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCCanUseDropRateBonus::~CMsgGCToGCCanUseDropRateBonus() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCCanUseDropRateBonus)
  SharedDtor();
}

void CMsgGCToGCCanUseDropRateBonus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCCanUseDropRateBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCanUseDropRateBonus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCCanUseDropRateBonus_descriptor_;
}

const CMsgGCToGCCanUseDropRateBonus& CMsgGCToGCCanUseDropRateBonus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCCanUseDropRateBonus* CMsgGCToGCCanUseDropRateBonus::default_instance_ = NULL;

CMsgGCToGCCanUseDropRateBonus* CMsgGCToGCCanUseDropRateBonus::New() const {
  return new CMsgGCToGCCanUseDropRateBonus;
}

void CMsgGCToGCCanUseDropRateBonus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCCanUseDropRateBonus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(account_id_, allow_equal_rate_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCCanUseDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCCanUseDropRateBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_drop_rate_bonus;
        break;
      }

      // optional float drop_rate_bonus = 2;
      case 2: {
        if (tag == 21) {
         parse_drop_rate_bonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
          set_has_drop_rate_bonus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_booster_type;
        break;
      }

      // optional uint32 booster_type = 3;
      case 3: {
        if (tag == 24) {
         parse_booster_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
          set_has_booster_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_exclusive_item_def;
        break;
      }

      // optional uint32 exclusive_item_def = 4;
      case 4: {
        if (tag == 32) {
         parse_exclusive_item_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exclusive_item_def_)));
          set_has_exclusive_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_allow_equal_rate;
        break;
      }

      // optional bool allow_equal_rate = 5;
      case 5: {
        if (tag == 40) {
         parse_allow_equal_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_equal_rate_)));
          set_has_allow_equal_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCCanUseDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCCanUseDropRateBonus)
  return false;
#undef DO_
}

void CMsgGCToGCCanUseDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCCanUseDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional float drop_rate_bonus = 2;
  if (has_drop_rate_bonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 3;
  if (has_booster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->booster_type(), output);
  }

  // optional uint32 exclusive_item_def = 4;
  if (has_exclusive_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exclusive_item_def(), output);
  }

  // optional bool allow_equal_rate = 5;
  if (has_allow_equal_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->allow_equal_rate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCCanUseDropRateBonus)
}

::google::protobuf::uint8* CMsgGCToGCCanUseDropRateBonus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCCanUseDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional float drop_rate_bonus = 2;
  if (has_drop_rate_bonus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 3;
  if (has_booster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->booster_type(), target);
  }

  // optional uint32 exclusive_item_def = 4;
  if (has_exclusive_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exclusive_item_def(), target);
  }

  // optional bool allow_equal_rate = 5;
  if (has_allow_equal_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->allow_equal_rate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCCanUseDropRateBonus)
  return target;
}

int CMsgGCToGCCanUseDropRateBonus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional float drop_rate_bonus = 2;
    if (has_drop_rate_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 3;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 exclusive_item_def = 4;
    if (has_exclusive_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exclusive_item_def());
    }

    // optional bool allow_equal_rate = 5;
    if (has_allow_equal_rate()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCCanUseDropRateBonus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCCanUseDropRateBonus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_drop_rate_bonus()) {
      set_drop_rate_bonus(from.drop_rate_bonus());
    }
    if (from.has_booster_type()) {
      set_booster_type(from.booster_type());
    }
    if (from.has_exclusive_item_def()) {
      set_exclusive_item_def(from.exclusive_item_def());
    }
    if (from.has_allow_equal_rate()) {
      set_allow_equal_rate(from.allow_equal_rate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCanUseDropRateBonus::IsInitialized() const {

  return true;
}

void CMsgGCToGCCanUseDropRateBonus::Swap(CMsgGCToGCCanUseDropRateBonus* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(drop_rate_bonus_, other->drop_rate_bonus_);
    std::swap(booster_type_, other->booster_type_);
    std::swap(exclusive_item_def_, other->exclusive_item_def_);
    std::swap(allow_equal_rate_, other->allow_equal_rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCCanUseDropRateBonus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCCanUseDropRateBonus_descriptor_;
  metadata.reflection = CMsgGCToGCCanUseDropRateBonus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSQLAddDropRateBonus::kAccountIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemDefFieldNumber;
const int CMsgSQLAddDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgSQLAddDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgSQLAddDropRateBonus::kSecondsDurationFieldNumber;
const int CMsgSQLAddDropRateBonus::kEndTimeStampFieldNumber;
#endif  // !_MSC_VER

CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSQLAddDropRateBonus)
}

void CMsgSQLAddDropRateBonus::InitAsDefaultInstance() {
}

CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus(const CMsgSQLAddDropRateBonus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSQLAddDropRateBonus)
}

void CMsgSQLAddDropRateBonus::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  item_def_ = 0u;
  drop_rate_bonus_ = 0;
  booster_type_ = 0u;
  seconds_duration_ = 0u;
  end_time_stamp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSQLAddDropRateBonus::~CMsgSQLAddDropRateBonus() {
  // @@protoc_insertion_point(destructor:CMsgSQLAddDropRateBonus)
  SharedDtor();
}

void CMsgSQLAddDropRateBonus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSQLAddDropRateBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLAddDropRateBonus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSQLAddDropRateBonus_descriptor_;
}

const CMsgSQLAddDropRateBonus& CMsgSQLAddDropRateBonus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgSQLAddDropRateBonus* CMsgSQLAddDropRateBonus::default_instance_ = NULL;

CMsgSQLAddDropRateBonus* CMsgSQLAddDropRateBonus::New() const {
  return new CMsgSQLAddDropRateBonus;
}

void CMsgSQLAddDropRateBonus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSQLAddDropRateBonus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(item_id_, end_time_stamp_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSQLAddDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSQLAddDropRateBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_def;
        break;
      }

      // optional uint32 item_def = 3;
      case 3: {
        if (tag == 24) {
         parse_item_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_drop_rate_bonus;
        break;
      }

      // optional float drop_rate_bonus = 4;
      case 4: {
        if (tag == 37) {
         parse_drop_rate_bonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
          set_has_drop_rate_bonus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_booster_type;
        break;
      }

      // optional uint32 booster_type = 5;
      case 5: {
        if (tag == 40) {
         parse_booster_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
          set_has_booster_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_seconds_duration;
        break;
      }

      // optional uint32 seconds_duration = 6;
      case 6: {
        if (tag == 48) {
         parse_seconds_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_duration_)));
          set_has_seconds_duration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_end_time_stamp;
        break;
      }

      // optional uint32 end_time_stamp = 7;
      case 7: {
        if (tag == 56) {
         parse_end_time_stamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_stamp_)));
          set_has_end_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSQLAddDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSQLAddDropRateBonus)
  return false;
#undef DO_
}

void CMsgSQLAddDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSQLAddDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 item_def = 3;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_def(), output);
  }

  // optional float drop_rate_bonus = 4;
  if (has_drop_rate_bonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 5;
  if (has_booster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->booster_type(), output);
  }

  // optional uint32 seconds_duration = 6;
  if (has_seconds_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->seconds_duration(), output);
  }

  // optional uint32 end_time_stamp = 7;
  if (has_end_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->end_time_stamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSQLAddDropRateBonus)
}

::google::protobuf::uint8* CMsgSQLAddDropRateBonus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSQLAddDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 item_def = 3;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_def(), target);
  }

  // optional float drop_rate_bonus = 4;
  if (has_drop_rate_bonus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 5;
  if (has_booster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->booster_type(), target);
  }

  // optional uint32 seconds_duration = 6;
  if (has_seconds_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->seconds_duration(), target);
  }

  // optional uint32 end_time_stamp = 7;
  if (has_end_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->end_time_stamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSQLAddDropRateBonus)
  return target;
}

int CMsgSQLAddDropRateBonus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 item_def = 3;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float drop_rate_bonus = 4;
    if (has_drop_rate_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 5;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 seconds_duration = 6;
    if (has_seconds_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds_duration());
    }

    // optional uint32 end_time_stamp = 7;
    if (has_end_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->end_time_stamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLAddDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSQLAddDropRateBonus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSQLAddDropRateBonus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSQLAddDropRateBonus::MergeFrom(const CMsgSQLAddDropRateBonus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_drop_rate_bonus()) {
      set_drop_rate_bonus(from.drop_rate_bonus());
    }
    if (from.has_booster_type()) {
      set_booster_type(from.booster_type());
    }
    if (from.has_seconds_duration()) {
      set_seconds_duration(from.seconds_duration());
    }
    if (from.has_end_time_stamp()) {
      set_end_time_stamp(from.end_time_stamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSQLAddDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLAddDropRateBonus::CopyFrom(const CMsgSQLAddDropRateBonus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLAddDropRateBonus::IsInitialized() const {

  return true;
}

void CMsgSQLAddDropRateBonus::Swap(CMsgSQLAddDropRateBonus* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_def_, other->item_def_);
    std::swap(drop_rate_bonus_, other->drop_rate_bonus_);
    std::swap(booster_type_, other->booster_type_);
    std::swap(seconds_duration_, other->seconds_duration_);
    std::swap(end_time_stamp_, other->end_time_stamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSQLAddDropRateBonus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSQLAddDropRateBonus_descriptor_;
  metadata.reflection = CMsgSQLAddDropRateBonus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSQLUpgradeBattleBooster::kAccountIdFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kItemDefFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBonusToAddFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBoosterTypeFieldNumber;
#endif  // !_MSC_VER

CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSQLUpgradeBattleBooster)
}

void CMsgSQLUpgradeBattleBooster::InitAsDefaultInstance() {
}

CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster(const CMsgSQLUpgradeBattleBooster& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSQLUpgradeBattleBooster)
}

void CMsgSQLUpgradeBattleBooster::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  item_def_ = 0u;
  bonus_to_add_ = 0;
  booster_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSQLUpgradeBattleBooster::~CMsgSQLUpgradeBattleBooster() {
  // @@protoc_insertion_point(destructor:CMsgSQLUpgradeBattleBooster)
  SharedDtor();
}

void CMsgSQLUpgradeBattleBooster::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSQLUpgradeBattleBooster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLUpgradeBattleBooster::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSQLUpgradeBattleBooster_descriptor_;
}

const CMsgSQLUpgradeBattleBooster& CMsgSQLUpgradeBattleBooster::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgSQLUpgradeBattleBooster* CMsgSQLUpgradeBattleBooster::default_instance_ = NULL;

CMsgSQLUpgradeBattleBooster* CMsgSQLUpgradeBattleBooster::New() const {
  return new CMsgSQLUpgradeBattleBooster;
}

void CMsgSQLUpgradeBattleBooster::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSQLUpgradeBattleBooster*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, booster_type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSQLUpgradeBattleBooster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSQLUpgradeBattleBooster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_def;
        break;
      }

      // optional uint32 item_def = 2;
      case 2: {
        if (tag == 16) {
         parse_item_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_bonus_to_add;
        break;
      }

      // optional float bonus_to_add = 3;
      case 3: {
        if (tag == 29) {
         parse_bonus_to_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_to_add_)));
          set_has_bonus_to_add();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_booster_type;
        break;
      }

      // optional uint32 booster_type = 4;
      case 4: {
        if (tag == 32) {
         parse_booster_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
          set_has_booster_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSQLUpgradeBattleBooster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSQLUpgradeBattleBooster)
  return false;
#undef DO_
}

void CMsgSQLUpgradeBattleBooster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSQLUpgradeBattleBooster)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 item_def = 2;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_def(), output);
  }

  // optional float bonus_to_add = 3;
  if (has_bonus_to_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bonus_to_add(), output);
  }

  // optional uint32 booster_type = 4;
  if (has_booster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->booster_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSQLUpgradeBattleBooster)
}

::google::protobuf::uint8* CMsgSQLUpgradeBattleBooster::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSQLUpgradeBattleBooster)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 item_def = 2;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_def(), target);
  }

  // optional float bonus_to_add = 3;
  if (has_bonus_to_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bonus_to_add(), target);
  }

  // optional uint32 booster_type = 4;
  if (has_booster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->booster_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSQLUpgradeBattleBooster)
  return target;
}

int CMsgSQLUpgradeBattleBooster::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_def = 2;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float bonus_to_add = 3;
    if (has_bonus_to_add()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 4;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSQLUpgradeBattleBooster* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSQLUpgradeBattleBooster*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const CMsgSQLUpgradeBattleBooster& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_bonus_to_add()) {
      set_bonus_to_add(from.bonus_to_add());
    }
    if (from.has_booster_type()) {
      set_booster_type(from.booster_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const CMsgSQLUpgradeBattleBooster& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLUpgradeBattleBooster::IsInitialized() const {

  return true;
}

void CMsgSQLUpgradeBattleBooster::Swap(CMsgSQLUpgradeBattleBooster* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(item_def_, other->item_def_);
    std::swap(bonus_to_add_, other->bonus_to_add_);
    std::swap(booster_type_, other->booster_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSQLUpgradeBattleBooster::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSQLUpgradeBattleBooster_descriptor_;
  metadata.reflection = CMsgSQLUpgradeBattleBooster_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCRefreshSOCache::kAccountIdFieldNumber;
const int CMsgGCToGCRefreshSOCache::kReloadFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCRefreshSOCache)
}

void CMsgGCToGCRefreshSOCache::InitAsDefaultInstance() {
}

CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache(const CMsgGCToGCRefreshSOCache& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCRefreshSOCache)
}

void CMsgGCToGCRefreshSOCache::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  reload_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCRefreshSOCache::~CMsgGCToGCRefreshSOCache() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCRefreshSOCache)
  SharedDtor();
}

void CMsgGCToGCRefreshSOCache::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCRefreshSOCache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCRefreshSOCache::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCRefreshSOCache_descriptor_;
}

const CMsgGCToGCRefreshSOCache& CMsgGCToGCRefreshSOCache::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCRefreshSOCache* CMsgGCToGCRefreshSOCache::default_instance_ = NULL;

CMsgGCToGCRefreshSOCache* CMsgGCToGCRefreshSOCache::New() const {
  return new CMsgGCToGCRefreshSOCache;
}

void CMsgGCToGCRefreshSOCache::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCRefreshSOCache*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, reload_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCRefreshSOCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCRefreshSOCache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reload;
        break;
      }

      // optional bool reload = 2;
      case 2: {
        if (tag == 16) {
         parse_reload:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reload_)));
          set_has_reload();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCRefreshSOCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCRefreshSOCache)
  return false;
#undef DO_
}

void CMsgGCToGCRefreshSOCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCRefreshSOCache)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool reload = 2;
  if (has_reload()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reload(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCRefreshSOCache)
}

::google::protobuf::uint8* CMsgGCToGCRefreshSOCache::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCRefreshSOCache)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool reload = 2;
  if (has_reload()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reload(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCRefreshSOCache)
  return target;
}

int CMsgGCToGCRefreshSOCache::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool reload = 2;
    if (has_reload()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCRefreshSOCache* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCRefreshSOCache*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const CMsgGCToGCRefreshSOCache& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_reload()) {
      set_reload(from.reload());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const CMsgGCToGCRefreshSOCache& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCRefreshSOCache::IsInitialized() const {

  return true;
}

void CMsgGCToGCRefreshSOCache::Swap(CMsgGCToGCRefreshSOCache* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(reload_, other->reload_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCRefreshSOCache::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCRefreshSOCache_descriptor_;
  metadata.reflection = CMsgGCToGCRefreshSOCache_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCCheckAccountTradeStatus::kAccountIdFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatus::kInitiatorFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCCheckAccountTradeStatus)
}

void CMsgGCToGCCheckAccountTradeStatus::InitAsDefaultInstance() {
}

CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus(const CMsgGCToGCCheckAccountTradeStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCCheckAccountTradeStatus)
}

void CMsgGCToGCCheckAccountTradeStatus::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  initiator_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCCheckAccountTradeStatus::~CMsgGCToGCCheckAccountTradeStatus() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCCheckAccountTradeStatus)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCCheckAccountTradeStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCCheckAccountTradeStatus_descriptor_;
}

const CMsgGCToGCCheckAccountTradeStatus& CMsgGCToGCCheckAccountTradeStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCCheckAccountTradeStatus* CMsgGCToGCCheckAccountTradeStatus::default_instance_ = NULL;

CMsgGCToGCCheckAccountTradeStatus* CMsgGCToGCCheckAccountTradeStatus::New() const {
  return new CMsgGCToGCCheckAccountTradeStatus;
}

void CMsgGCToGCCheckAccountTradeStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCCheckAccountTradeStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, initiator_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCCheckAccountTradeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCCheckAccountTradeStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_initiator;
        break;
      }

      // optional bool initiator = 2;
      case 2: {
        if (tag == 16) {
         parse_initiator:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initiator_)));
          set_has_initiator();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCCheckAccountTradeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCCheckAccountTradeStatus)
  return false;
#undef DO_
}

void CMsgGCToGCCheckAccountTradeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCCheckAccountTradeStatus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool initiator = 2;
  if (has_initiator()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->initiator(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCCheckAccountTradeStatus)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCCheckAccountTradeStatus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool initiator = 2;
  if (has_initiator()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->initiator(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCCheckAccountTradeStatus)
  return target;
}

int CMsgGCToGCCheckAccountTradeStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool initiator = 2;
    if (has_initiator()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCCheckAccountTradeStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_initiator()) {
      set_initiator(from.initiator());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatus::IsInitialized() const {

  return true;
}

void CMsgGCToGCCheckAccountTradeStatus::Swap(CMsgGCToGCCheckAccountTradeStatus* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(initiator_, other->initiator_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCCheckAccountTradeStatus_descriptor_;
  metadata.reflection = CMsgGCToGCCheckAccountTradeStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCCheckAccountTradeStatusResponse::kCanTradeFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatusResponse::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCCheckAccountTradeStatusResponse)
}

void CMsgGCToGCCheckAccountTradeStatusResponse::InitAsDefaultInstance() {
}

CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse(const CMsgGCToGCCheckAccountTradeStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCCheckAccountTradeStatusResponse)
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  can_trade_ = false;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCCheckAccountTradeStatusResponse::~CMsgGCToGCCheckAccountTradeStatusResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCCheckAccountTradeStatusResponse)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_;
}

const CMsgGCToGCCheckAccountTradeStatusResponse& CMsgGCToGCCheckAccountTradeStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCCheckAccountTradeStatusResponse* CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_ = NULL;

CMsgGCToGCCheckAccountTradeStatusResponse* CMsgGCToGCCheckAccountTradeStatusResponse::New() const {
  return new CMsgGCToGCCheckAccountTradeStatusResponse;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCCheckAccountTradeStatusResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(can_trade_, error_code_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCCheckAccountTradeStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCCheckAccountTradeStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool can_trade = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_trade_)));
          set_has_can_trade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }

      // optional uint32 error_code = 2;
      case 2: {
        if (tag == 16) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCCheckAccountTradeStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCCheckAccountTradeStatusResponse)
  return false;
#undef DO_
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCCheckAccountTradeStatusResponse)
  // optional bool can_trade = 1;
  if (has_can_trade()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->can_trade(), output);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCCheckAccountTradeStatusResponse)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCCheckAccountTradeStatusResponse)
  // optional bool can_trade = 1;
  if (has_can_trade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->can_trade(), target);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCCheckAccountTradeStatusResponse)
  return target;
}

int CMsgGCToGCCheckAccountTradeStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool can_trade = 1;
    if (has_can_trade()) {
      total_size += 1 + 1;
    }

    // optional uint32 error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCCheckAccountTradeStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_can_trade()) {
      set_can_trade(from.can_trade());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatusResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::Swap(CMsgGCToGCCheckAccountTradeStatusResponse* other) {
  if (other != this) {
    std::swap(can_trade_, other->can_trade_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_;
  metadata.reflection = CMsgGCToGCCheckAccountTradeStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kNameFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueUint32FieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueFloatFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_uint32_ = 0u;
  value_float_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::~CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::New() const {
  return new CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(value_uint32_, value_float_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value_uint32;
        break;
      }

      // optional uint32 value_uint32 = 2;
      case 2: {
        if (tag == 16) {
         parse_value_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_uint32_)));
          set_has_value_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_value_float;
        break;
      }

      // optional float value_float = 3;
      case 3: {
        if (tag == 29) {
         parse_value_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_float_)));
          set_has_value_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 value_uint32 = 2;
  if (has_value_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value_uint32(), output);
  }

  // optional float value_float = 3;
  if (has_value_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->value_float(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 value_uint32 = 2;
  if (has_value_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value_uint32(), target);
  }

  // optional float value_float = 3;
  if (has_value_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->value_float(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 value_uint32 = 2;
    if (has_value_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value_uint32());
    }

    // optional float value_float = 3;
    if (has_value_float()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_value_uint32()) {
      set_value_uint32(from.value_uint32());
    }
    if (from.has_value_float()) {
      set_value_float(from.value_float());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Swap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(value_uint32_, other->value_uint32_);
    std::swap(value_float_, other->value_float_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kOwnerAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditDataFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedCtor() {
  _cached_size_ = 0;
  owner_account_id_ = 0u;
  audit_action_ = 0u;
  audit_data_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::~CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::New() const {
  return new CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(owner_account_id_, audit_data_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
          set_has_owner_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_audit_action;
        break;
      }

      // optional uint32 audit_action = 2;
      case 2: {
        if (tag == 16) {
         parse_audit_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
          set_has_audit_action();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_audit_data;
        break;
      }

      // optional uint32 audit_data = 3;
      case 3: {
        if (tag == 24) {
         parse_audit_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_data_)));
          set_has_audit_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  // optional uint32 owner_account_id = 1;
  if (has_owner_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_account_id(), output);
  }

  // optional uint32 audit_action = 2;
  if (has_audit_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->audit_action(), output);
  }

  // optional uint32 audit_data = 3;
  if (has_audit_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->audit_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  // optional uint32 owner_account_id = 1;
  if (has_owner_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_account_id(), target);
  }

  // optional uint32 audit_action = 2;
  if (has_audit_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->audit_action(), target);
  }

  // optional uint32 audit_data = 3;
  if (has_audit_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->audit_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 owner_account_id = 1;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional uint32 audit_action = 2;
    if (has_audit_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint32 audit_data = 3;
    if (has_audit_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_owner_account_id()) {
      set_owner_account_id(from.owner_account_id());
    }
    if (from.has_audit_action()) {
      set_audit_action(from.audit_action());
    }
    if (from.has_audit_data()) {
      set_audit_data(from.audit_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Swap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
  if (other != this) {
    std::swap(owner_account_id_, other->owner_account_id_);
    std::swap(audit_action_, other->audit_action_);
    std::swap(audit_data_, other->audit_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems_Item::kItemDefFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kLootListsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kIgnoreLimitFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kOriginFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kDynamicAttributesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kAdditionalAuditEntriesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kInventoryTokenFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems.Item)
}

void CMsgGCToGCGrantAccountRolledItems_Item::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item(const CMsgGCToGCGrantAccountRolledItems_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems.Item)
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_def_ = 0u;
  ignore_limit_ = false;
  origin_ = 0u;
  inventory_token_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems_Item::~CMsgGCToGCGrantAccountRolledItems_Item() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems.Item)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_Item_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems_Item& CMsgGCToGCGrantAccountRolledItems_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems_Item::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems_Item::New() const {
  return new CMsgGCToGCGrantAccountRolledItems_Item;
}

void CMsgGCToGCGrantAccountRolledItems_Item::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems_Item*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_def_, ignore_limit_);
  ZR_(origin_, inventory_token_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  loot_lists_.Clear();
  dynamic_attributes_.Clear();
  additional_audit_entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loot_lists;
        break;
      }

      // repeated string loot_lists = 2;
      case 2: {
        if (tag == 18) {
         parse_loot_lists:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loot_lists()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_lists(this->loot_lists_size() - 1).data(),
            this->loot_lists(this->loot_lists_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loot_lists");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loot_lists;
        if (input->ExpectTag(24)) goto parse_ignore_limit;
        break;
      }

      // optional bool ignore_limit = 3;
      case 3: {
        if (tag == 24) {
         parse_ignore_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_limit_)));
          set_has_ignore_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_origin;
        break;
      }

      // optional uint32 origin = 4;
      case 4: {
        if (tag == 32) {
         parse_origin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_)));
          set_has_origin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dynamic_attributes;
        break;
      }

      // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
      case 5: {
        if (tag == 42) {
         parse_dynamic_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dynamic_attributes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dynamic_attributes;
        if (input->ExpectTag(50)) goto parse_additional_audit_entries;
        break;
      }

      // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
      case 6: {
        if (tag == 50) {
         parse_additional_audit_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additional_audit_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_additional_audit_entries;
        if (input->ExpectTag(56)) goto parse_inventory_token;
        break;
      }

      // optional uint32 inventory_token = 7;
      case 7: {
        if (tag == 56) {
         parse_inventory_token:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inventory_token_)));
          set_has_inventory_token();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems.Item)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems.Item)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // repeated string loot_lists = 2;
  for (int i = 0; i < this->loot_lists_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->loot_lists(i).data(), this->loot_lists(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "loot_lists");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->loot_lists(i), output);
  }

  // optional bool ignore_limit = 3;
  if (has_ignore_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ignore_limit(), output);
  }

  // optional uint32 origin = 4;
  if (has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->origin(), output);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (int i = 0; i < this->dynamic_attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dynamic_attributes(i), output);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (int i = 0; i < this->additional_audit_entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->additional_audit_entries(i), output);
  }

  // optional uint32 inventory_token = 7;
  if (has_inventory_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->inventory_token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems.Item)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems.Item)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // repeated string loot_lists = 2;
  for (int i = 0; i < this->loot_lists_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_lists(i).data(), this->loot_lists(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loot_lists");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->loot_lists(i), target);
  }

  // optional bool ignore_limit = 3;
  if (has_ignore_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ignore_limit(), target);
  }

  // optional uint32 origin = 4;
  if (has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->origin(), target);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (int i = 0; i < this->dynamic_attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->dynamic_attributes(i), target);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (int i = 0; i < this->additional_audit_entries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->additional_audit_entries(i), target);
  }

  // optional uint32 inventory_token = 7;
  if (has_inventory_token()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->inventory_token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems.Item)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional bool ignore_limit = 3;
    if (has_ignore_limit()) {
      total_size += 1 + 1;
    }

    // optional uint32 origin = 4;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin());
    }

    // optional uint32 inventory_token = 7;
    if (has_inventory_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inventory_token());
    }

  }
  // repeated string loot_lists = 2;
  total_size += 1 * this->loot_lists_size();
  for (int i = 0; i < this->loot_lists_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loot_lists(i));
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  total_size += 1 * this->dynamic_attributes_size();
  for (int i = 0; i < this->dynamic_attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dynamic_attributes(i));
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  total_size += 1 * this->additional_audit_entries_size();
  for (int i = 0; i < this->additional_audit_entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additional_audit_entries(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  loot_lists_.MergeFrom(from.loot_lists_);
  dynamic_attributes_.MergeFrom(from.dynamic_attributes_);
  additional_audit_entries_.MergeFrom(from.additional_audit_entries_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_ignore_limit()) {
      set_ignore_limit(from.ignore_limit());
    }
    if (from.has_origin()) {
      set_origin(from.origin());
    }
    if (from.has_inventory_token()) {
      set_inventory_token(from.inventory_token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item::Swap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
  if (other != this) {
    std::swap(item_def_, other->item_def_);
    loot_lists_.Swap(&other->loot_lists_);
    std::swap(ignore_limit_, other->ignore_limit_);
    std::swap(origin_, other->origin_);
    dynamic_attributes_.Swap(&other->dynamic_attributes_);
    additional_audit_entries_.Swap(&other->additional_audit_entries_);
    std::swap(inventory_token_, other->inventory_token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_Item_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems::kAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kItemsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditDataFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems)
}

void CMsgGCToGCGrantAccountRolledItems::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems(const CMsgGCToGCGrantAccountRolledItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems)
}

void CMsgGCToGCGrantAccountRolledItems::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  audit_action_ = 0u;
  audit_data_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems::~CMsgGCToGCGrantAccountRolledItems() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems& CMsgGCToGCGrantAccountRolledItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems* CMsgGCToGCGrantAccountRolledItems::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems* CMsgGCToGCGrantAccountRolledItems::New() const {
  return new CMsgGCToGCGrantAccountRolledItems;
}

void CMsgGCToGCGrantAccountRolledItems::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, audit_data_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }

      // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
      case 2: {
        if (tag == 18) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectTag(24)) goto parse_audit_action;
        break;
      }

      // optional uint32 audit_action = 3;
      case 3: {
        if (tag == 24) {
         parse_audit_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
          set_has_audit_action();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_audit_data;
        break;
      }

      // optional uint32 audit_data = 4;
      case 4: {
        if (tag == 32) {
         parse_audit_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_data_)));
          set_has_audit_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // optional uint32 audit_action = 3;
  if (has_audit_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->audit_action(), output);
  }

  // optional uint32 audit_data = 4;
  if (has_audit_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->audit_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  // optional uint32 audit_action = 3;
  if (has_audit_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->audit_action(), target);
  }

  // optional uint32 audit_data = 4;
  if (has_audit_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->audit_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 audit_action = 3;
    if (has_audit_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint32 audit_data = 4;
    if (has_audit_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_data());
    }

  }
  // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_audit_action()) {
      set_audit_action(from.audit_action());
    }
    if (from.has_audit_data()) {
      set_audit_data(from.audit_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems::Swap(CMsgGCToGCGrantAccountRolledItems* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    items_.Swap(&other->items_);
    std::swap(audit_action_, other->audit_action_);
    std::swap(audit_data_, other->audit_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGrantSelfMadeItemToAccount::kItemDefIndexFieldNumber;
const int CMsgGCToGCGrantSelfMadeItemToAccount::kAccountidFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantSelfMadeItemToAccount)
}

void CMsgGCToGCGrantSelfMadeItemToAccount::InitAsDefaultInstance() {
}

CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount(const CMsgGCToGCGrantSelfMadeItemToAccount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantSelfMadeItemToAccount)
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedCtor() {
  _cached_size_ = 0;
  item_def_index_ = 0u;
  accountid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantSelfMadeItemToAccount::~CMsgGCToGCGrantSelfMadeItemToAccount() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantSelfMadeItemToAccount)
  SharedDtor();
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantSelfMadeItemToAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_;
}

const CMsgGCToGCGrantSelfMadeItemToAccount& CMsgGCToGCGrantSelfMadeItemToAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantSelfMadeItemToAccount* CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_ = NULL;

CMsgGCToGCGrantSelfMadeItemToAccount* CMsgGCToGCGrantSelfMadeItemToAccount::New() const {
  return new CMsgGCToGCGrantSelfMadeItemToAccount;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantSelfMadeItemToAccount*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_def_index_, accountid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
          set_has_item_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_accountid;
        break;
      }

      // optional uint32 accountid = 2;
      case 2: {
        if (tag == 16) {
         parse_accountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantSelfMadeItemToAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantSelfMadeItemToAccount)
  return false;
#undef DO_
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  // optional uint32 item_def_index = 1;
  if (has_item_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  // optional uint32 accountid = 2;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->accountid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantSelfMadeItemToAccount)
}

::google::protobuf::uint8* CMsgGCToGCGrantSelfMadeItemToAccount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  // optional uint32 item_def_index = 1;
  if (has_item_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  // optional uint32 accountid = 2;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->accountid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantSelfMadeItemToAccount)
  return target;
}

int CMsgGCToGCGrantSelfMadeItemToAccount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def_index = 1;
    if (has_item_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

    // optional uint32 accountid = 2;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantSelfMadeItemToAccount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantSelfMadeItemToAccount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def_index()) {
      set_item_def_index(from.item_def_index());
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Swap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
  if (other != this) {
    std::swap(item_def_index_, other->item_def_index_);
    std::swap(accountid_, other->accountid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantSelfMadeItemToAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_;
  metadata.reflection = CMsgGCToGCGrantSelfMadeItemToAccount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgUseItem::kItemIdFieldNumber;
const int CMsgUseItem::kTargetSteamIdFieldNumber;
const int CMsgUseItem::kGiftPotentialTargetsFieldNumber;
const int CMsgUseItem::kDuelClassLockFieldNumber;
const int CMsgUseItem::kInitiatorSteamIdFieldNumber;
const int CMsgUseItem::kItempackAckImmediatelyFieldNumber;
#endif  // !_MSC_VER

CMsgUseItem::CMsgUseItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgUseItem)
}

void CMsgUseItem::InitAsDefaultInstance() {
}

CMsgUseItem::CMsgUseItem(const CMsgUseItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgUseItem)
}

void CMsgUseItem::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  target_steam_id_ = GOOGLE_ULONGLONG(0);
  duel__class_lock_ = 0u;
  initiator_steam_id_ = GOOGLE_ULONGLONG(0);
  itempack__ack_immediately_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgUseItem::~CMsgUseItem() {
  // @@protoc_insertion_point(destructor:CMsgUseItem)
  SharedDtor();
}

void CMsgUseItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgUseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUseItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgUseItem_descriptor_;
}

const CMsgUseItem& CMsgUseItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgUseItem* CMsgUseItem::default_instance_ = NULL;

CMsgUseItem* CMsgUseItem::New() const {
  return new CMsgUseItem;
}

void CMsgUseItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgUseItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 59) {
    ZR_(item_id_, target_steam_id_);
    ZR_(initiator_steam_id_, itempack__ack_immediately_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  gift__potential_targets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgUseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_target_steam_id;
        break;
      }

      // optional fixed64 target_steam_id = 2;
      case 2: {
        if (tag == 17) {
         parse_target_steam_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_steam_id_)));
          set_has_target_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gift__potential_targets;
        break;
      }

      // repeated uint32 gift__potential_targets = 3;
      case 3: {
        if (tag == 24) {
         parse_gift__potential_targets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_gift__potential_targets())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gift__potential_targets())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gift__potential_targets;
        if (input->ExpectTag(32)) goto parse_duel__class_lock;
        break;
      }

      // optional uint32 duel__class_lock = 4;
      case 4: {
        if (tag == 32) {
         parse_duel__class_lock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duel__class_lock_)));
          set_has_duel__class_lock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_initiator_steam_id;
        break;
      }

      // optional uint64 initiator_steam_id = 5;
      case 5: {
        if (tag == 40) {
         parse_initiator_steam_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &initiator_steam_id_)));
          set_has_initiator_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_itempack__ack_immediately;
        break;
      }

      // optional bool itempack__ack_immediately = 6;
      case 6: {
        if (tag == 48) {
         parse_itempack__ack_immediately:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &itempack__ack_immediately_)));
          set_has_itempack__ack_immediately();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgUseItem)
  return false;
#undef DO_
}

void CMsgUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgUseItem)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional fixed64 target_steam_id = 2;
  if (has_target_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->target_steam_id(), output);
  }

  // repeated uint32 gift__potential_targets = 3;
  for (int i = 0; i < this->gift__potential_targets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->gift__potential_targets(i), output);
  }

  // optional uint32 duel__class_lock = 4;
  if (has_duel__class_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->duel__class_lock(), output);
  }

  // optional uint64 initiator_steam_id = 5;
  if (has_initiator_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->initiator_steam_id(), output);
  }

  // optional bool itempack__ack_immediately = 6;
  if (has_itempack__ack_immediately()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->itempack__ack_immediately(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgUseItem)
}

::google::protobuf::uint8* CMsgUseItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgUseItem)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional fixed64 target_steam_id = 2;
  if (has_target_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->target_steam_id(), target);
  }

  // repeated uint32 gift__potential_targets = 3;
  for (int i = 0; i < this->gift__potential_targets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->gift__potential_targets(i), target);
  }

  // optional uint32 duel__class_lock = 4;
  if (has_duel__class_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->duel__class_lock(), target);
  }

  // optional uint64 initiator_steam_id = 5;
  if (has_initiator_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->initiator_steam_id(), target);
  }

  // optional bool itempack__ack_immediately = 6;
  if (has_itempack__ack_immediately()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->itempack__ack_immediately(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgUseItem)
  return target;
}

int CMsgUseItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional fixed64 target_steam_id = 2;
    if (has_target_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 duel__class_lock = 4;
    if (has_duel__class_lock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duel__class_lock());
    }

    // optional uint64 initiator_steam_id = 5;
    if (has_initiator_steam_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->initiator_steam_id());
    }

    // optional bool itempack__ack_immediately = 6;
    if (has_itempack__ack_immediately()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 gift__potential_targets = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->gift__potential_targets_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gift__potential_targets(i));
    }
    total_size += 1 * this->gift__potential_targets_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUseItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgUseItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgUseItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgUseItem::MergeFrom(const CMsgUseItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  gift__potential_targets_.MergeFrom(from.gift__potential_targets_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_target_steam_id()) {
      set_target_steam_id(from.target_steam_id());
    }
    if (from.has_duel__class_lock()) {
      set_duel__class_lock(from.duel__class_lock());
    }
    if (from.has_initiator_steam_id()) {
      set_initiator_steam_id(from.initiator_steam_id());
    }
    if (from.has_itempack__ack_immediately()) {
      set_itempack__ack_immediately(from.itempack__ack_immediately());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgUseItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseItem::CopyFrom(const CMsgUseItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseItem::IsInitialized() const {

  return true;
}

void CMsgUseItem::Swap(CMsgUseItem* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(target_steam_id_, other->target_steam_id_);
    gift__potential_targets_.Swap(&other->gift__potential_targets_);
    std::swap(duel__class_lock_, other->duel__class_lock_);
    std::swap(initiator_steam_id_, other->initiator_steam_id_);
    std::swap(itempack__ack_immediately_, other->itempack__ack_immediately_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgUseItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgUseItem_descriptor_;
  metadata.reflection = CMsgUseItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgServerUseItem::kInitiatorAccountIdFieldNumber;
const int CMsgServerUseItem::kUseItemMsgFieldNumber;
#endif  // !_MSC_VER

CMsgServerUseItem::CMsgServerUseItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerUseItem)
}

void CMsgServerUseItem::InitAsDefaultInstance() {
  use_item_msg_ = const_cast< ::CMsgUseItem*>(&::CMsgUseItem::default_instance());
}

CMsgServerUseItem::CMsgServerUseItem(const CMsgServerUseItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgServerUseItem)
}

void CMsgServerUseItem::SharedCtor() {
  _cached_size_ = 0;
  initiator_account_id_ = 0u;
  use_item_msg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgServerUseItem::~CMsgServerUseItem() {
  // @@protoc_insertion_point(destructor:CMsgServerUseItem)
  SharedDtor();
}

void CMsgServerUseItem::SharedDtor() {
  if (this != default_instance_) {
    delete use_item_msg_;
  }
}

void CMsgServerUseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgServerUseItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgServerUseItem_descriptor_;
}

const CMsgServerUseItem& CMsgServerUseItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgServerUseItem* CMsgServerUseItem::default_instance_ = NULL;

CMsgServerUseItem* CMsgServerUseItem::New() const {
  return new CMsgServerUseItem;
}

void CMsgServerUseItem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    initiator_account_id_ = 0u;
    if (has_use_item_msg()) {
      if (use_item_msg_ != NULL) use_item_msg_->::CMsgUseItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgServerUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerUseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 initiator_account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initiator_account_id_)));
          set_has_initiator_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_use_item_msg;
        break;
      }

      // optional .CMsgUseItem use_item_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_use_item_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_use_item_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerUseItem)
  return false;
#undef DO_
}

void CMsgServerUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerUseItem)
  // optional uint32 initiator_account_id = 1;
  if (has_initiator_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->initiator_account_id(), output);
  }

  // optional .CMsgUseItem use_item_msg = 2;
  if (has_use_item_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->use_item_msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerUseItem)
}

::google::protobuf::uint8* CMsgServerUseItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerUseItem)
  // optional uint32 initiator_account_id = 1;
  if (has_initiator_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->initiator_account_id(), target);
  }

  // optional .CMsgUseItem use_item_msg = 2;
  if (has_use_item_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->use_item_msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerUseItem)
  return target;
}

int CMsgServerUseItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 initiator_account_id = 1;
    if (has_initiator_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initiator_account_id());
    }

    // optional .CMsgUseItem use_item_msg = 2;
    if (has_use_item_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->use_item_msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgServerUseItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgServerUseItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgServerUseItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgServerUseItem::MergeFrom(const CMsgServerUseItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_initiator_account_id()) {
      set_initiator_account_id(from.initiator_account_id());
    }
    if (from.has_use_item_msg()) {
      mutable_use_item_msg()->::CMsgUseItem::MergeFrom(from.use_item_msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgServerUseItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerUseItem::CopyFrom(const CMsgServerUseItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerUseItem::IsInitialized() const {

  return true;
}

void CMsgServerUseItem::Swap(CMsgServerUseItem* other) {
  if (other != this) {
    std::swap(initiator_account_id_, other->initiator_account_id_);
    std::swap(use_item_msg_, other->use_item_msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgServerUseItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgServerUseItem_descriptor_;
  metadata.reflection = CMsgServerUseItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerBalanceRequest)
}

void CMsgGCPartnerBalanceRequest::InitAsDefaultInstance() {
}

CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest(const CMsgGCPartnerBalanceRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerBalanceRequest)
}

void CMsgGCPartnerBalanceRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerBalanceRequest::~CMsgGCPartnerBalanceRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerBalanceRequest)
  SharedDtor();
}

void CMsgGCPartnerBalanceRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerBalanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerBalanceRequest_descriptor_;
}

const CMsgGCPartnerBalanceRequest& CMsgGCPartnerBalanceRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerBalanceRequest* CMsgGCPartnerBalanceRequest::default_instance_ = NULL;

CMsgGCPartnerBalanceRequest* CMsgGCPartnerBalanceRequest::New() const {
  return new CMsgGCPartnerBalanceRequest;
}

void CMsgGCPartnerBalanceRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerBalanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerBalanceRequest)
  return false;
#undef DO_
}

void CMsgGCPartnerBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerBalanceRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerBalanceRequest)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerBalanceRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerBalanceRequest)
  return target;
}

int CMsgGCPartnerBalanceRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerBalanceRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerBalanceRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const CMsgGCPartnerBalanceRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceRequest::CopyFrom(const CMsgGCPartnerBalanceRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceRequest::IsInitialized() const {

  return true;
}

void CMsgGCPartnerBalanceRequest::Swap(CMsgGCPartnerBalanceRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerBalanceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerBalanceRequest_descriptor_;
  metadata.reflection = CMsgGCPartnerBalanceRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCPartnerBalanceResponse::kResultFieldNumber;
const int CMsgGCPartnerBalanceResponse::kBalanceFieldNumber;
#endif  // !_MSC_VER

CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerBalanceResponse)
}

void CMsgGCPartnerBalanceResponse::InitAsDefaultInstance() {
}

CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse(const CMsgGCPartnerBalanceResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerBalanceResponse)
}

void CMsgGCPartnerBalanceResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 1;
  balance_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerBalanceResponse::~CMsgGCPartnerBalanceResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerBalanceResponse)
  SharedDtor();
}

void CMsgGCPartnerBalanceResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerBalanceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerBalanceResponse_descriptor_;
}

const CMsgGCPartnerBalanceResponse& CMsgGCPartnerBalanceResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerBalanceResponse* CMsgGCPartnerBalanceResponse::default_instance_ = NULL;

CMsgGCPartnerBalanceResponse* CMsgGCPartnerBalanceResponse::New() const {
  return new CMsgGCPartnerBalanceResponse;
}

void CMsgGCPartnerBalanceResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 1;
    balance_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerBalanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerBalanceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_balance;
        break;
      }

      // optional uint32 balance = 2;
      case 2: {
        if (tag == 16) {
         parse_balance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_)));
          set_has_balance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerBalanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerBalanceResponse)
  return false;
#undef DO_
}

void CMsgGCPartnerBalanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerBalanceResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional uint32 balance = 2;
  if (has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->balance(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerBalanceResponse)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerBalanceResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional uint32 balance = 2;
  if (has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->balance(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerBalanceResponse)
  return target;
}

int CMsgGCPartnerBalanceResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional uint32 balance = 2;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerBalanceResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerBalanceResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const CMsgGCPartnerBalanceResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_balance()) {
      set_balance(from.balance());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const CMsgGCPartnerBalanceResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceResponse::IsInitialized() const {

  return true;
}

void CMsgGCPartnerBalanceResponse::Swap(CMsgGCPartnerBalanceResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(balance_, other->balance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerBalanceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerBalanceResponse_descriptor_;
  metadata.reflection = CMsgGCPartnerBalanceResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCPartnerRechargeRedirectURLRequest::kDefIndexFieldNumber;
#endif  // !_MSC_VER

CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerRechargeRedirectURLRequest)
}

void CMsgGCPartnerRechargeRedirectURLRequest::InitAsDefaultInstance() {
}

CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest(const CMsgGCPartnerRechargeRedirectURLRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerRechargeRedirectURLRequest)
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedCtor() {
  _cached_size_ = 0;
  def_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerRechargeRedirectURLRequest::~CMsgGCPartnerRechargeRedirectURLRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerRechargeRedirectURLRequest)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerRechargeRedirectURLRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerRechargeRedirectURLRequest_descriptor_;
}

const CMsgGCPartnerRechargeRedirectURLRequest& CMsgGCPartnerRechargeRedirectURLRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerRechargeRedirectURLRequest* CMsgGCPartnerRechargeRedirectURLRequest::default_instance_ = NULL;

CMsgGCPartnerRechargeRedirectURLRequest* CMsgGCPartnerRechargeRedirectURLRequest::New() const {
  return new CMsgGCPartnerRechargeRedirectURLRequest;
}

void CMsgGCPartnerRechargeRedirectURLRequest::Clear() {
  def_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerRechargeRedirectURLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerRechargeRedirectURLRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 def_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
          set_has_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerRechargeRedirectURLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerRechargeRedirectURLRequest)
  return false;
#undef DO_
}

void CMsgGCPartnerRechargeRedirectURLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerRechargeRedirectURLRequest)
  // optional uint32 def_index = 1;
  if (has_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->def_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerRechargeRedirectURLRequest)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerRechargeRedirectURLRequest)
  // optional uint32 def_index = 1;
  if (has_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->def_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerRechargeRedirectURLRequest)
  return target;
}

int CMsgGCPartnerRechargeRedirectURLRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 def_index = 1;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerRechargeRedirectURLRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_def_index()) {
      set_def_index(from.def_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLRequest::IsInitialized() const {

  return true;
}

void CMsgGCPartnerRechargeRedirectURLRequest::Swap(CMsgGCPartnerRechargeRedirectURLRequest* other) {
  if (other != this) {
    std::swap(def_index_, other->def_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerRechargeRedirectURLRequest_descriptor_;
  metadata.reflection = CMsgGCPartnerRechargeRedirectURLRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCPartnerRechargeRedirectURLResponse::kResultFieldNumber;
const int CMsgGCPartnerRechargeRedirectURLResponse::kUrlFieldNumber;
#endif  // !_MSC_VER

CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerRechargeRedirectURLResponse)
}

void CMsgGCPartnerRechargeRedirectURLResponse::InitAsDefaultInstance() {
}

CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse(const CMsgGCPartnerRechargeRedirectURLResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerRechargeRedirectURLResponse)
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 1;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerRechargeRedirectURLResponse::~CMsgGCPartnerRechargeRedirectURLResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerRechargeRedirectURLResponse)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedDtor() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerRechargeRedirectURLResponse_descriptor_;
}

const CMsgGCPartnerRechargeRedirectURLResponse& CMsgGCPartnerRechargeRedirectURLResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerRechargeRedirectURLResponse* CMsgGCPartnerRechargeRedirectURLResponse::default_instance_ = NULL;

CMsgGCPartnerRechargeRedirectURLResponse* CMsgGCPartnerRechargeRedirectURLResponse::New() const {
  return new CMsgGCPartnerRechargeRedirectURLResponse;
}

void CMsgGCPartnerRechargeRedirectURLResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 1;
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerRechargeRedirectURLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerRechargeRedirectURLResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // optional string url = 2;
      case 2: {
        if (tag == 18) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerRechargeRedirectURLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerRechargeRedirectURLResponse)
  return false;
#undef DO_
}

void CMsgGCPartnerRechargeRedirectURLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerRechargeRedirectURLResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerRechargeRedirectURLResponse)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerRechargeRedirectURLResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerRechargeRedirectURLResponse)
  return target;
}

int CMsgGCPartnerRechargeRedirectURLResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerRechargeRedirectURLResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLResponse::IsInitialized() const {

  return true;
}

void CMsgGCPartnerRechargeRedirectURLResponse::Swap(CMsgGCPartnerRechargeRedirectURLResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(url_, other->url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerRechargeRedirectURLResponse_descriptor_;
  metadata.reflection = CMsgGCPartnerRechargeRedirectURLResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kAccountIdFieldNumber;
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kDeletedItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::InitAsDefaultInstance() {
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  deleted_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData::~CMsgGCEconSQLWorkItemEmbeddedRollbackData() {
  // @@protoc_insertion_point(destructor:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  SharedDtor();
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCEconSQLWorkItemEmbeddedRollbackData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_;
}

const CMsgGCEconSQLWorkItemEmbeddedRollbackData& CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData* CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_ = NULL;

CMsgGCEconSQLWorkItemEmbeddedRollbackData* CMsgGCEconSQLWorkItemEmbeddedRollbackData::New() const {
  return new CMsgGCEconSQLWorkItemEmbeddedRollbackData;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCEconSQLWorkItemEmbeddedRollbackData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(deleted_item_id_, account_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_deleted_item_id;
        break;
      }

      // optional uint64 deleted_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_deleted_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deleted_item_id_)));
          set_has_deleted_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return false;
#undef DO_
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 deleted_item_id = 2;
  if (has_deleted_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deleted_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

::google::protobuf::uint8* CMsgGCEconSQLWorkItemEmbeddedRollbackData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 deleted_item_id = 2;
  if (has_deleted_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deleted_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return target;
}

int CMsgGCEconSQLWorkItemEmbeddedRollbackData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint64 deleted_item_id = 2;
    if (has_deleted_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->deleted_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCEconSQLWorkItemEmbeddedRollbackData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCEconSQLWorkItemEmbeddedRollbackData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_deleted_item_id()) {
      set_deleted_item_id(from.deleted_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::IsInitialized() const {

  return true;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Swap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(deleted_item_id_, other->deleted_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCEconSQLWorkItemEmbeddedRollbackData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_;
  metadata.reflection = CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgCraftStatue::kHeroidFieldNumber;
const int CMsgCraftStatue::kSequencenameFieldNumber;
const int CMsgCraftStatue::kCycleFieldNumber;
const int CMsgCraftStatue::kDescriptionFieldNumber;
const int CMsgCraftStatue::kPedestalItemdefFieldNumber;
const int CMsgCraftStatue::kToolidFieldNumber;
#endif  // !_MSC_VER

CMsgCraftStatue::CMsgCraftStatue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCraftStatue)
}

void CMsgCraftStatue::InitAsDefaultInstance() {
}

CMsgCraftStatue::CMsgCraftStatue(const CMsgCraftStatue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgCraftStatue)
}

void CMsgCraftStatue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  heroid_ = 0u;
  sequencename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cycle_ = 0;
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pedestal_itemdef_ = 0u;
  toolid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgCraftStatue::~CMsgCraftStatue() {
  // @@protoc_insertion_point(destructor:CMsgCraftStatue)
  SharedDtor();
}

void CMsgCraftStatue::SharedDtor() {
  if (sequencename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequencename_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (this != default_instance_) {
  }
}

void CMsgCraftStatue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCraftStatue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgCraftStatue_descriptor_;
}

const CMsgCraftStatue& CMsgCraftStatue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgCraftStatue* CMsgCraftStatue::default_instance_ = NULL;

CMsgCraftStatue* CMsgCraftStatue::New() const {
  return new CMsgCraftStatue;
}

void CMsgCraftStatue::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgCraftStatue*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(heroid_, cycle_);
    ZR_(toolid_, pedestal_itemdef_);
    if (has_sequencename()) {
      if (sequencename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sequencename_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        description_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgCraftStatue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCraftStatue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sequencename;
        break;
      }

      // optional string sequencename = 2;
      case 2: {
        if (tag == 18) {
         parse_sequencename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequencename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sequencename().data(), this->sequencename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sequencename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_cycle;
        break;
      }

      // optional float cycle = 3;
      case 3: {
        if (tag == 29) {
         parse_cycle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cycle_)));
          set_has_cycle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }

      // optional string description = 4;
      case 4: {
        if (tag == 34) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pedestal_itemdef;
        break;
      }

      // optional uint32 pedestal_itemdef = 5;
      case 5: {
        if (tag == 40) {
         parse_pedestal_itemdef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pedestal_itemdef_)));
          set_has_pedestal_itemdef();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_toolid;
        break;
      }

      // optional uint64 toolid = 6;
      case 6: {
        if (tag == 48) {
         parse_toolid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &toolid_)));
          set_has_toolid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCraftStatue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCraftStatue)
  return false;
#undef DO_
}

void CMsgCraftStatue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCraftStatue)
  // optional uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // optional string sequencename = 2;
  if (has_sequencename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), this->sequencename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sequencename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sequencename(), output);
  }

  // optional float cycle = 3;
  if (has_cycle()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cycle(), output);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (has_pedestal_itemdef()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pedestal_itemdef(), output);
  }

  // optional uint64 toolid = 6;
  if (has_toolid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->toolid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCraftStatue)
}

::google::protobuf::uint8* CMsgCraftStatue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftStatue)
  // optional uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // optional string sequencename = 2;
  if (has_sequencename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), this->sequencename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sequencename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequencename(), target);
  }

  // optional float cycle = 3;
  if (has_cycle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cycle(), target);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (has_pedestal_itemdef()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pedestal_itemdef(), target);
  }

  // optional uint64 toolid = 6;
  if (has_toolid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->toolid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftStatue)
  return target;
}

int CMsgCraftStatue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // optional string sequencename = 2;
    if (has_sequencename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequencename());
    }

    // optional float cycle = 3;
    if (has_cycle()) {
      total_size += 1 + 4;
    }

    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint32 pedestal_itemdef = 5;
    if (has_pedestal_itemdef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pedestal_itemdef());
    }

    // optional uint64 toolid = 6;
    if (has_toolid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->toolid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCraftStatue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgCraftStatue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgCraftStatue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgCraftStatue::MergeFrom(const CMsgCraftStatue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_sequencename()) {
      set_sequencename(from.sequencename());
    }
    if (from.has_cycle()) {
      set_cycle(from.cycle());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_pedestal_itemdef()) {
      set_pedestal_itemdef(from.pedestal_itemdef());
    }
    if (from.has_toolid()) {
      set_toolid(from.toolid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgCraftStatue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftStatue::CopyFrom(const CMsgCraftStatue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftStatue::IsInitialized() const {

  return true;
}

void CMsgCraftStatue::Swap(CMsgCraftStatue* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(sequencename_, other->sequencename_);
    std::swap(cycle_, other->cycle_);
    std::swap(description_, other->description_);
    std::swap(pedestal_itemdef_, other->pedestal_itemdef_);
    std::swap(toolid_, other->toolid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgCraftStatue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgCraftStatue_descriptor_;
  metadata.reflection = CMsgCraftStatue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRedeemCode::kCodeFieldNumber;
#endif  // !_MSC_VER

CMsgRedeemCode::CMsgRedeemCode()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRedeemCode)
}

void CMsgRedeemCode::InitAsDefaultInstance() {
}

CMsgRedeemCode::CMsgRedeemCode(const CMsgRedeemCode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRedeemCode)
}

void CMsgRedeemCode::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRedeemCode::~CMsgRedeemCode() {
  // @@protoc_insertion_point(destructor:CMsgRedeemCode)
  SharedDtor();
}

void CMsgRedeemCode::SharedDtor() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (this != default_instance_) {
  }
}

void CMsgRedeemCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRedeemCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRedeemCode_descriptor_;
}

const CMsgRedeemCode& CMsgRedeemCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRedeemCode* CMsgRedeemCode::default_instance_ = NULL;

CMsgRedeemCode* CMsgRedeemCode::New() const {
  return new CMsgRedeemCode;
}

void CMsgRedeemCode::Clear() {
  if (has_code()) {
    if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      code_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRedeemCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRedeemCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRedeemCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRedeemCode)
  return false;
#undef DO_
}

void CMsgRedeemCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRedeemCode)
  // optional string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRedeemCode)
}

::google::protobuf::uint8* CMsgRedeemCode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRedeemCode)
  // optional string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRedeemCode)
  return target;
}

int CMsgRedeemCode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRedeemCode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRedeemCode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRedeemCode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRedeemCode::MergeFrom(const CMsgRedeemCode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRedeemCode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCode::CopyFrom(const CMsgRedeemCode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCode::IsInitialized() const {

  return true;
}

void CMsgRedeemCode::Swap(CMsgRedeemCode* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRedeemCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRedeemCode_descriptor_;
  metadata.reflection = CMsgRedeemCode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRedeemCodeResponse::kResponseFieldNumber;
#endif  // !_MSC_VER

CMsgRedeemCodeResponse::CMsgRedeemCodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRedeemCodeResponse)
}

void CMsgRedeemCodeResponse::InitAsDefaultInstance() {
}

CMsgRedeemCodeResponse::CMsgRedeemCodeResponse(const CMsgRedeemCodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRedeemCodeResponse)
}

void CMsgRedeemCodeResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRedeemCodeResponse::~CMsgRedeemCodeResponse() {
  // @@protoc_insertion_point(destructor:CMsgRedeemCodeResponse)
  SharedDtor();
}

void CMsgRedeemCodeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRedeemCodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRedeemCodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRedeemCodeResponse_descriptor_;
}

const CMsgRedeemCodeResponse& CMsgRedeemCodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRedeemCodeResponse* CMsgRedeemCodeResponse::default_instance_ = NULL;

CMsgRedeemCodeResponse* CMsgRedeemCodeResponse::New() const {
  return new CMsgRedeemCodeResponse;
}

void CMsgRedeemCodeResponse::Clear() {
  response_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRedeemCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRedeemCodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
          set_has_response();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRedeemCodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRedeemCodeResponse)
  return false;
#undef DO_
}

void CMsgRedeemCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRedeemCodeResponse)
  // optional uint32 response = 1;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRedeemCodeResponse)
}

::google::protobuf::uint8* CMsgRedeemCodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRedeemCodeResponse)
  // optional uint32 response = 1;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRedeemCodeResponse)
  return target;
}

int CMsgRedeemCodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRedeemCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRedeemCodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRedeemCodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRedeemCodeResponse::MergeFrom(const CMsgRedeemCodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRedeemCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCodeResponse::CopyFrom(const CMsgRedeemCodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCodeResponse::IsInitialized() const {

  return true;
}

void CMsgRedeemCodeResponse::Swap(CMsgRedeemCodeResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRedeemCodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRedeemCodeResponse_descriptor_;
  metadata.reflection = CMsgRedeemCodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgDevNewItemRequest::kItemDefNameFieldNumber;
const int CMsgDevNewItemRequest::kLootListNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrDefNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrValueFieldNumber;
#endif  // !_MSC_VER

CMsgDevNewItemRequest::CMsgDevNewItemRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDevNewItemRequest)
}

void CMsgDevNewItemRequest::InitAsDefaultInstance() {
}

CMsgDevNewItemRequest::CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDevNewItemRequest)
}

void CMsgDevNewItemRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_def_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loot_list_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDevNewItemRequest::~CMsgDevNewItemRequest() {
  // @@protoc_insertion_point(destructor:CMsgDevNewItemRequest)
  SharedDtor();
}

void CMsgDevNewItemRequest::SharedDtor() {
  if (item_def_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_def_name_;
  }
  if (loot_list_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loot_list_name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgDevNewItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDevNewItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDevNewItemRequest_descriptor_;
}

const CMsgDevNewItemRequest& CMsgDevNewItemRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgDevNewItemRequest* CMsgDevNewItemRequest::default_instance_ = NULL;

CMsgDevNewItemRequest* CMsgDevNewItemRequest::New() const {
  return new CMsgDevNewItemRequest;
}

void CMsgDevNewItemRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_item_def_name()) {
      if (item_def_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        item_def_name_->clear();
      }
    }
    if (has_loot_list_name()) {
      if (loot_list_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loot_list_name_->clear();
      }
    }
  }
  attr_def_name_.Clear();
  attr_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgDevNewItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDevNewItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_def_name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_def_name().data(), this->item_def_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "item_def_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loot_list_name;
        break;
      }

      // optional string loot_list_name = 4;
      case 4: {
        if (tag == 34) {
         parse_loot_list_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loot_list_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_list_name().data(), this->loot_list_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loot_list_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_attr_def_name;
        break;
      }

      // repeated string attr_def_name = 5;
      case 5: {
        if (tag == 42) {
         parse_attr_def_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_def_name(this->attr_def_name_size() - 1).data(),
            this->attr_def_name(this->attr_def_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attr_def_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_attr_def_name;
        if (input->ExpectTag(50)) goto parse_attr_value;
        break;
      }

      // repeated string attr_value = 6;
      case 6: {
        if (tag == 50) {
         parse_attr_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_value(this->attr_value_size() - 1).data(),
            this->attr_value(this->attr_value_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attr_value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attr_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDevNewItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDevNewItemRequest)
  return false;
#undef DO_
}

void CMsgDevNewItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDevNewItemRequest)
  // optional string item_def_name = 3;
  if (has_item_def_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), this->item_def_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_def_name(), output);
  }

  // optional string loot_list_name = 4;
  if (has_loot_list_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), this->loot_list_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loot_list_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->loot_list_name(), output);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0; i < this->attr_def_name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->attr_def_name(i).data(), this->attr_def_name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "attr_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->attr_def_name(i), output);
  }

  // repeated string attr_value = 6;
  for (int i = 0; i < this->attr_value_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->attr_value(i).data(), this->attr_value(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "attr_value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->attr_value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDevNewItemRequest)
}

::google::protobuf::uint8* CMsgDevNewItemRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDevNewItemRequest)
  // optional string item_def_name = 3;
  if (has_item_def_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), this->item_def_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_def_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_def_name(), target);
  }

  // optional string loot_list_name = 4;
  if (has_loot_list_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), this->loot_list_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loot_list_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->loot_list_name(), target);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0; i < this->attr_def_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_def_name(i).data(), this->attr_def_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attr_def_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->attr_def_name(i), target);
  }

  // repeated string attr_value = 6;
  for (int i = 0; i < this->attr_value_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_value(i).data(), this->attr_value(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attr_value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->attr_value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDevNewItemRequest)
  return target;
}

int CMsgDevNewItemRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string item_def_name = 3;
    if (has_item_def_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_def_name());
    }

    // optional string loot_list_name = 4;
    if (has_loot_list_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loot_list_name());
    }

  }
  // repeated string attr_def_name = 5;
  total_size += 1 * this->attr_def_name_size();
  for (int i = 0; i < this->attr_def_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_def_name(i));
  }

  // repeated string attr_value = 6;
  total_size += 1 * this->attr_value_size();
  for (int i = 0; i < this->attr_value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_value(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDevNewItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgDevNewItemRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgDevNewItemRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequest::MergeFrom(const CMsgDevNewItemRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_def_name_.MergeFrom(from.attr_def_name_);
  attr_value_.MergeFrom(from.attr_value_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def_name()) {
      set_item_def_name(from.item_def_name());
    }
    if (from.has_loot_list_name()) {
      set_loot_list_name(from.loot_list_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgDevNewItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequest::CopyFrom(const CMsgDevNewItemRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequest::IsInitialized() const {

  return true;
}

void CMsgDevNewItemRequest::Swap(CMsgDevNewItemRequest* other) {
  if (other != this) {
    std::swap(item_def_name_, other->item_def_name_);
    std::swap(loot_list_name_, other->loot_list_name_);
    attr_def_name_.Swap(&other->attr_def_name_);
    attr_value_.Swap(&other->attr_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgDevNewItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDevNewItemRequest_descriptor_;
  metadata.reflection = CMsgDevNewItemRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgDevNewItemRequestResponse::kSuccessFieldNumber;
#endif  // !_MSC_VER

CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDevNewItemRequestResponse)
}

void CMsgDevNewItemRequestResponse::InitAsDefaultInstance() {
}

CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse(const CMsgDevNewItemRequestResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDevNewItemRequestResponse)
}

void CMsgDevNewItemRequestResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDevNewItemRequestResponse::~CMsgDevNewItemRequestResponse() {
  // @@protoc_insertion_point(destructor:CMsgDevNewItemRequestResponse)
  SharedDtor();
}

void CMsgDevNewItemRequestResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgDevNewItemRequestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDevNewItemRequestResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDevNewItemRequestResponse_descriptor_;
}

const CMsgDevNewItemRequestResponse& CMsgDevNewItemRequestResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgDevNewItemRequestResponse* CMsgDevNewItemRequestResponse::default_instance_ = NULL;

CMsgDevNewItemRequestResponse* CMsgDevNewItemRequestResponse::New() const {
  return new CMsgDevNewItemRequestResponse;
}

void CMsgDevNewItemRequestResponse::Clear() {
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgDevNewItemRequestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDevNewItemRequestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDevNewItemRequestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDevNewItemRequestResponse)
  return false;
#undef DO_
}

void CMsgDevNewItemRequestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDevNewItemRequestResponse)
  // optional bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDevNewItemRequestResponse)
}

::google::protobuf::uint8* CMsgDevNewItemRequestResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDevNewItemRequestResponse)
  // optional bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDevNewItemRequestResponse)
  return target;
}

int CMsgDevNewItemRequestResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDevNewItemRequestResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgDevNewItemRequestResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgDevNewItemRequestResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequestResponse::MergeFrom(const CMsgDevNewItemRequestResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgDevNewItemRequestResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequestResponse::CopyFrom(const CMsgDevNewItemRequestResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequestResponse::IsInitialized() const {

  return true;
}

void CMsgDevNewItemRequestResponse::Swap(CMsgDevNewItemRequestResponse* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgDevNewItemRequestResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDevNewItemRequestResponse_descriptor_;
  metadata.reflection = CMsgDevNewItemRequestResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCAddGiftItem::kAccountIdFieldNumber;
const int CMsgGCAddGiftItem::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCAddGiftItem::CMsgGCAddGiftItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCAddGiftItem)
}

void CMsgGCAddGiftItem::InitAsDefaultInstance() {
}

CMsgGCAddGiftItem::CMsgGCAddGiftItem(const CMsgGCAddGiftItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCAddGiftItem)
}

void CMsgGCAddGiftItem::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCAddGiftItem::~CMsgGCAddGiftItem() {
  // @@protoc_insertion_point(destructor:CMsgGCAddGiftItem)
  SharedDtor();
}

void CMsgGCAddGiftItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCAddGiftItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCAddGiftItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCAddGiftItem_descriptor_;
}

const CMsgGCAddGiftItem& CMsgGCAddGiftItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCAddGiftItem* CMsgGCAddGiftItem::default_instance_ = NULL;

CMsgGCAddGiftItem* CMsgGCAddGiftItem::New() const {
  return new CMsgGCAddGiftItem;
}

void CMsgGCAddGiftItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCAddGiftItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, account_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCAddGiftItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCAddGiftItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCAddGiftItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCAddGiftItem)
  return false;
#undef DO_
}

void CMsgGCAddGiftItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCAddGiftItem)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCAddGiftItem)
}

::google::protobuf::uint8* CMsgGCAddGiftItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCAddGiftItem)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCAddGiftItem)
  return target;
}

int CMsgGCAddGiftItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCAddGiftItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCAddGiftItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCAddGiftItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCAddGiftItem::MergeFrom(const CMsgGCAddGiftItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCAddGiftItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCAddGiftItem::CopyFrom(const CMsgGCAddGiftItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCAddGiftItem::IsInitialized() const {

  return true;
}

void CMsgGCAddGiftItem::Swap(CMsgGCAddGiftItem* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCAddGiftItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCAddGiftItem_descriptor_;
  metadata.reflection = CMsgGCAddGiftItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCWrapAndDeliverGift::kItemIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiveToAccountIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiftMessageFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCWrapAndDeliverGift)
}

void CMsgClientToGCWrapAndDeliverGift::InitAsDefaultInstance() {
}

CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift(const CMsgClientToGCWrapAndDeliverGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCWrapAndDeliverGift)
}

void CMsgClientToGCWrapAndDeliverGift::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  give_to_account_id_ = 0u;
  gift_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCWrapAndDeliverGift::~CMsgClientToGCWrapAndDeliverGift() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCWrapAndDeliverGift)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGift::SharedDtor() {
  if (gift_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gift_message_;
  }
  if (this != default_instance_) {
  }
}

void CMsgClientToGCWrapAndDeliverGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCWrapAndDeliverGift_descriptor_;
}

const CMsgClientToGCWrapAndDeliverGift& CMsgClientToGCWrapAndDeliverGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCWrapAndDeliverGift* CMsgClientToGCWrapAndDeliverGift::default_instance_ = NULL;

CMsgClientToGCWrapAndDeliverGift* CMsgClientToGCWrapAndDeliverGift::New() const {
  return new CMsgClientToGCWrapAndDeliverGift;
}

void CMsgClientToGCWrapAndDeliverGift::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    item_id_ = GOOGLE_ULONGLONG(0);
    give_to_account_id_ = 0u;
    if (has_gift_message()) {
      if (gift_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gift_message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCWrapAndDeliverGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCWrapAndDeliverGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_give_to_account_id;
        break;
      }

      // optional uint32 give_to_account_id = 2;
      case 2: {
        if (tag == 16) {
         parse_give_to_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &give_to_account_id_)));
          set_has_give_to_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gift_message;
        break;
      }

      // optional string gift_message = 3;
      case 3: {
        if (tag == 26) {
         parse_gift_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gift_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gift_message().data(), this->gift_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gift_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCWrapAndDeliverGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCWrapAndDeliverGift)
  return false;
#undef DO_
}

void CMsgClientToGCWrapAndDeliverGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCWrapAndDeliverGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 give_to_account_id = 2;
  if (has_give_to_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->give_to_account_id(), output);
  }

  // optional string gift_message = 3;
  if (has_gift_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), this->gift_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gift_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gift_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCWrapAndDeliverGift)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCWrapAndDeliverGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 give_to_account_id = 2;
  if (has_give_to_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->give_to_account_id(), target);
  }

  // optional string gift_message = 3;
  if (has_gift_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), this->gift_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gift_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gift_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCWrapAndDeliverGift)
  return target;
}

int CMsgClientToGCWrapAndDeliverGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 give_to_account_id = 2;
    if (has_give_to_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->give_to_account_id());
    }

    // optional string gift_message = 3;
    if (has_gift_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gift_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCWrapAndDeliverGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_give_to_account_id()) {
      set_give_to_account_id(from.give_to_account_id());
    }
    if (from.has_gift_message()) {
      set_gift_message(from.gift_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGift::IsInitialized() const {

  return true;
}

void CMsgClientToGCWrapAndDeliverGift::Swap(CMsgClientToGCWrapAndDeliverGift* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(give_to_account_id_, other->give_to_account_id_);
    std::swap(gift_message_, other->gift_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCWrapAndDeliverGift_descriptor_;
  metadata.reflection = CMsgClientToGCWrapAndDeliverGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCWrapAndDeliverGiftResponse::kResponseFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingWindowHoursFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kTradeRestrictionFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCWrapAndDeliverGiftResponse)
}

void CMsgClientToGCWrapAndDeliverGiftResponse::InitAsDefaultInstance() {
}

CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse(const CMsgClientToGCWrapAndDeliverGiftResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCWrapAndDeliverGiftResponse)
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  gifting_charge_uses_ = 0u;
  gifting_charge_max_ = 0;
  gifting_uses_ = 0u;
  gifting_max_ = 0;
  gifting_window_hours_ = 0u;
  trade_restriction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCWrapAndDeliverGiftResponse::~CMsgClientToGCWrapAndDeliverGiftResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCWrapAndDeliverGiftResponse)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGiftResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_;
}

const CMsgClientToGCWrapAndDeliverGiftResponse& CMsgClientToGCWrapAndDeliverGiftResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCWrapAndDeliverGiftResponse* CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_ = NULL;

CMsgClientToGCWrapAndDeliverGiftResponse* CMsgClientToGCWrapAndDeliverGiftResponse::New() const {
  return new CMsgClientToGCWrapAndDeliverGiftResponse;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCWrapAndDeliverGiftResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(response_, trade_restriction_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCWrapAndDeliverGiftResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCWrapAndDeliverGiftResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgResponse_IsValid(value)) {
            set_response(static_cast< ::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gifting_charge_uses;
        break;
      }

      // optional uint32 gifting_charge_uses = 2;
      case 2: {
        if (tag == 16) {
         parse_gifting_charge_uses:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_charge_uses_)));
          set_has_gifting_charge_uses();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gifting_charge_max;
        break;
      }

      // optional int32 gifting_charge_max = 3;
      case 3: {
        if (tag == 24) {
         parse_gifting_charge_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_charge_max_)));
          set_has_gifting_charge_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gifting_uses;
        break;
      }

      // optional uint32 gifting_uses = 4;
      case 4: {
        if (tag == 32) {
         parse_gifting_uses:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_uses_)));
          set_has_gifting_uses();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gifting_max;
        break;
      }

      // optional int32 gifting_max = 5;
      case 5: {
        if (tag == 40) {
         parse_gifting_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_max_)));
          set_has_gifting_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_gifting_window_hours;
        break;
      }

      // optional uint32 gifting_window_hours = 6;
      case 6: {
        if (tag == 48) {
         parse_gifting_window_hours:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_window_hours_)));
          set_has_gifting_window_hours();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_trade_restriction;
        break;
      }

      // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 7: {
        if (tag == 56) {
         parse_trade_restriction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_trade_restriction(static_cast< ::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCWrapAndDeliverGiftResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCWrapAndDeliverGiftResponse)
  return false;
#undef DO_
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCWrapAndDeliverGiftResponse)
  // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (has_gifting_charge_uses()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gifting_charge_uses(), output);
  }

  // optional int32 gifting_charge_max = 3;
  if (has_gifting_charge_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gifting_charge_max(), output);
  }

  // optional uint32 gifting_uses = 4;
  if (has_gifting_uses()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gifting_uses(), output);
  }

  // optional int32 gifting_max = 5;
  if (has_gifting_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gifting_max(), output);
  }

  // optional uint32 gifting_window_hours = 6;
  if (has_gifting_window_hours()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gifting_window_hours(), output);
  }

  // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_trade_restriction()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->trade_restriction(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCWrapAndDeliverGiftResponse)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGiftResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCWrapAndDeliverGiftResponse)
  // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (has_gifting_charge_uses()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gifting_charge_uses(), target);
  }

  // optional int32 gifting_charge_max = 3;
  if (has_gifting_charge_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gifting_charge_max(), target);
  }

  // optional uint32 gifting_uses = 4;
  if (has_gifting_uses()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gifting_uses(), target);
  }

  // optional int32 gifting_max = 5;
  if (has_gifting_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gifting_max(), target);
  }

  // optional uint32 gifting_window_hours = 6;
  if (has_gifting_window_hours()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gifting_window_hours(), target);
  }

  // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_trade_restriction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->trade_restriction(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCWrapAndDeliverGiftResponse)
  return target;
}

int CMsgClientToGCWrapAndDeliverGiftResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint32 gifting_charge_uses = 2;
    if (has_gifting_charge_uses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_charge_uses());
    }

    // optional int32 gifting_charge_max = 3;
    if (has_gifting_charge_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_charge_max());
    }

    // optional uint32 gifting_uses = 4;
    if (has_gifting_uses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_uses());
    }

    // optional int32 gifting_max = 5;
    if (has_gifting_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_max());
    }

    // optional uint32 gifting_window_hours = 6;
    if (has_gifting_window_hours()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_window_hours());
    }

    // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (has_trade_restriction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trade_restriction());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGiftResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCWrapAndDeliverGiftResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_gifting_charge_uses()) {
      set_gifting_charge_uses(from.gifting_charge_uses());
    }
    if (from.has_gifting_charge_max()) {
      set_gifting_charge_max(from.gifting_charge_max());
    }
    if (from.has_gifting_uses()) {
      set_gifting_uses(from.gifting_uses());
    }
    if (from.has_gifting_max()) {
      set_gifting_max(from.gifting_max());
    }
    if (from.has_gifting_window_hours()) {
      set_gifting_window_hours(from.gifting_window_hours());
    }
    if (from.has_trade_restriction()) {
      set_trade_restriction(from.trade_restriction());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGiftResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::Swap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(gifting_charge_uses_, other->gifting_charge_uses_);
    std::swap(gifting_charge_max_, other->gifting_charge_max_);
    std::swap(gifting_uses_, other->gifting_uses_);
    std::swap(gifting_max_, other->gifting_max_);
    std::swap(gifting_window_hours_, other->gifting_window_hours_);
    std::swap(trade_restriction_, other->trade_restriction_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGiftResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_;
  metadata.reflection = CMsgClientToGCWrapAndDeliverGiftResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnwrapGift::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnwrapGift)
}

void CMsgClientToGCUnwrapGift::InitAsDefaultInstance() {
}

CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift(const CMsgClientToGCUnwrapGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnwrapGift)
}

void CMsgClientToGCUnwrapGift::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnwrapGift::~CMsgClientToGCUnwrapGift() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnwrapGift)
  SharedDtor();
}

void CMsgClientToGCUnwrapGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnwrapGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnwrapGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnwrapGift_descriptor_;
}

const CMsgClientToGCUnwrapGift& CMsgClientToGCUnwrapGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnwrapGift* CMsgClientToGCUnwrapGift::default_instance_ = NULL;

CMsgClientToGCUnwrapGift* CMsgClientToGCUnwrapGift::New() const {
  return new CMsgClientToGCUnwrapGift;
}

void CMsgClientToGCUnwrapGift::Clear() {
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnwrapGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnwrapGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnwrapGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnwrapGift)
  return false;
#undef DO_
}

void CMsgClientToGCUnwrapGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnwrapGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnwrapGift)
}

::google::protobuf::uint8* CMsgClientToGCUnwrapGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnwrapGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnwrapGift)
  return target;
}

int CMsgClientToGCUnwrapGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnwrapGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnwrapGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnwrapGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnwrapGift::MergeFrom(const CMsgClientToGCUnwrapGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnwrapGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnwrapGift::CopyFrom(const CMsgClientToGCUnwrapGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnwrapGift::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnwrapGift::Swap(CMsgClientToGCUnwrapGift* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnwrapGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnwrapGift_descriptor_;
  metadata.reflection = CMsgClientToGCUnwrapGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToClientBundleUnpacked::kBundleItemIdFieldNumber;
const int CMsgGCToClientBundleUnpacked::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgGCToClientBundleUnpacked::CMsgGCToClientBundleUnpacked()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToClientBundleUnpacked)
}

void CMsgGCToClientBundleUnpacked::InitAsDefaultInstance() {
}

CMsgGCToClientBundleUnpacked::CMsgGCToClientBundleUnpacked(const CMsgGCToClientBundleUnpacked& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientBundleUnpacked)
}

void CMsgGCToClientBundleUnpacked::SharedCtor() {
  _cached_size_ = 0;
  bundle_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToClientBundleUnpacked::~CMsgGCToClientBundleUnpacked() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientBundleUnpacked)
  SharedDtor();
}

void CMsgGCToClientBundleUnpacked::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToClientBundleUnpacked::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToClientBundleUnpacked::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToClientBundleUnpacked_descriptor_;
}

const CMsgGCToClientBundleUnpacked& CMsgGCToClientBundleUnpacked::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToClientBundleUnpacked* CMsgGCToClientBundleUnpacked::default_instance_ = NULL;

CMsgGCToClientBundleUnpacked* CMsgGCToClientBundleUnpacked::New() const {
  return new CMsgGCToClientBundleUnpacked;
}

void CMsgGCToClientBundleUnpacked::Clear() {
  bundle_item_id_ = GOOGLE_ULONGLONG(0);
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToClientBundleUnpacked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToClientBundleUnpacked)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 bundle_item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bundle_item_id_)));
          set_has_bundle_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (tag == 16) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_item_ids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToClientBundleUnpacked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToClientBundleUnpacked)
  return false;
#undef DO_
}

void CMsgGCToClientBundleUnpacked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToClientBundleUnpacked)
  // optional uint64 bundle_item_id = 1;
  if (has_bundle_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->bundle_item_id(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToClientBundleUnpacked)
}

::google::protobuf::uint8* CMsgGCToClientBundleUnpacked::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientBundleUnpacked)
  // optional uint64 bundle_item_id = 1;
  if (has_bundle_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->bundle_item_id(), target);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientBundleUnpacked)
  return target;
}

int CMsgGCToClientBundleUnpacked::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 bundle_item_id = 1;
    if (has_bundle_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bundle_item_id());
    }

  }
  // repeated uint64 item_ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToClientBundleUnpacked::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToClientBundleUnpacked* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToClientBundleUnpacked*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToClientBundleUnpacked::MergeFrom(const CMsgGCToClientBundleUnpacked& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bundle_item_id()) {
      set_bundle_item_id(from.bundle_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToClientBundleUnpacked::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientBundleUnpacked::CopyFrom(const CMsgGCToClientBundleUnpacked& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientBundleUnpacked::IsInitialized() const {

  return true;
}

void CMsgGCToClientBundleUnpacked::Swap(CMsgGCToClientBundleUnpacked* other) {
  if (other != this) {
    std::swap(bundle_item_id_, other->bundle_item_id_);
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToClientBundleUnpacked::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToClientBundleUnpacked_descriptor_;
  metadata.reflection = CMsgGCToClientBundleUnpacked_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToClientStoreTransactionCompleted::kTxnIdFieldNumber;
const int CMsgGCToClientStoreTransactionCompleted::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToClientStoreTransactionCompleted)
}

void CMsgGCToClientStoreTransactionCompleted::InitAsDefaultInstance() {
}

CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted(const CMsgGCToClientStoreTransactionCompleted& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientStoreTransactionCompleted)
}

void CMsgGCToClientStoreTransactionCompleted::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToClientStoreTransactionCompleted::~CMsgGCToClientStoreTransactionCompleted() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientStoreTransactionCompleted)
  SharedDtor();
}

void CMsgGCToClientStoreTransactionCompleted::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToClientStoreTransactionCompleted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToClientStoreTransactionCompleted::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToClientStoreTransactionCompleted_descriptor_;
}

const CMsgGCToClientStoreTransactionCompleted& CMsgGCToClientStoreTransactionCompleted::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToClientStoreTransactionCompleted* CMsgGCToClientStoreTransactionCompleted::default_instance_ = NULL;

CMsgGCToClientStoreTransactionCompleted* CMsgGCToClientStoreTransactionCompleted::New() const {
  return new CMsgGCToClientStoreTransactionCompleted;
}

void CMsgGCToClientStoreTransactionCompleted::Clear() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToClientStoreTransactionCompleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToClientStoreTransactionCompleted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
          set_has_txn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (tag == 16) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_item_ids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToClientStoreTransactionCompleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToClientStoreTransactionCompleted)
  return false;
#undef DO_
}

void CMsgGCToClientStoreTransactionCompleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToClientStoreTransactionCompleted)
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToClientStoreTransactionCompleted)
}

::google::protobuf::uint8* CMsgGCToClientStoreTransactionCompleted::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientStoreTransactionCompleted)
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientStoreTransactionCompleted)
  return target;
}

int CMsgGCToClientStoreTransactionCompleted::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 txn_id = 1;
    if (has_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_id());
    }

  }
  // repeated uint64 item_ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToClientStoreTransactionCompleted* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToClientStoreTransactionCompleted*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_txn_id()) {
      set_txn_id(from.txn_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientStoreTransactionCompleted::IsInitialized() const {

  return true;
}

void CMsgGCToClientStoreTransactionCompleted::Swap(CMsgGCToClientStoreTransactionCompleted* other) {
  if (other != this) {
    std::swap(txn_id_, other->txn_id_);
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToClientStoreTransactionCompleted::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToClientStoreTransactionCompleted_descriptor_;
  metadata.reflection = CMsgGCToClientStoreTransactionCompleted_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCEquipItems::kEquipsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCEquipItems::CMsgClientToGCEquipItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCEquipItems)
}

void CMsgClientToGCEquipItems::InitAsDefaultInstance() {
}

CMsgClientToGCEquipItems::CMsgClientToGCEquipItems(const CMsgClientToGCEquipItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCEquipItems)
}

void CMsgClientToGCEquipItems::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCEquipItems::~CMsgClientToGCEquipItems() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCEquipItems)
  SharedDtor();
}

void CMsgClientToGCEquipItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCEquipItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCEquipItems_descriptor_;
}

const CMsgClientToGCEquipItems& CMsgClientToGCEquipItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCEquipItems* CMsgClientToGCEquipItems::default_instance_ = NULL;

CMsgClientToGCEquipItems* CMsgClientToGCEquipItems::New() const {
  return new CMsgClientToGCEquipItems;
}

void CMsgClientToGCEquipItems::Clear() {
  equips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCEquipItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCEquipItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgAdjustItemEquippedState equips = 1;
      case 1: {
        if (tag == 10) {
         parse_equips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_equips;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCEquipItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCEquipItems)
  return false;
#undef DO_
}

void CMsgClientToGCEquipItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCEquipItems)
  // repeated .CMsgAdjustItemEquippedState equips = 1;
  for (int i = 0; i < this->equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equips(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCEquipItems)
}

::google::protobuf::uint8* CMsgClientToGCEquipItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCEquipItems)
  // repeated .CMsgAdjustItemEquippedState equips = 1;
  for (int i = 0; i < this->equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equips(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCEquipItems)
  return target;
}

int CMsgClientToGCEquipItems::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgAdjustItemEquippedState equips = 1;
  total_size += 1 * this->equips_size();
  for (int i = 0; i < this->equips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equips(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCEquipItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCEquipItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCEquipItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItems::MergeFrom(const CMsgClientToGCEquipItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  equips_.MergeFrom(from.equips_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCEquipItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItems::CopyFrom(const CMsgClientToGCEquipItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItems::IsInitialized() const {

  return true;
}

void CMsgClientToGCEquipItems::Swap(CMsgClientToGCEquipItems* other) {
  if (other != this) {
    equips_.Swap(&other->equips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCEquipItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCEquipItems_descriptor_;
  metadata.reflection = CMsgClientToGCEquipItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCEquipItemsResponse::kSoCacheVersionIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCEquipItemsResponse)
}

void CMsgClientToGCEquipItemsResponse::InitAsDefaultInstance() {
}

CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse(const CMsgClientToGCEquipItemsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCEquipItemsResponse)
}

void CMsgClientToGCEquipItemsResponse::SharedCtor() {
  _cached_size_ = 0;
  so_cache_version_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCEquipItemsResponse::~CMsgClientToGCEquipItemsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCEquipItemsResponse)
  SharedDtor();
}

void CMsgClientToGCEquipItemsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCEquipItemsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItemsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCEquipItemsResponse_descriptor_;
}

const CMsgClientToGCEquipItemsResponse& CMsgClientToGCEquipItemsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCEquipItemsResponse* CMsgClientToGCEquipItemsResponse::default_instance_ = NULL;

CMsgClientToGCEquipItemsResponse* CMsgClientToGCEquipItemsResponse::New() const {
  return new CMsgClientToGCEquipItemsResponse;
}

void CMsgClientToGCEquipItemsResponse::Clear() {
  so_cache_version_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCEquipItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCEquipItemsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 so_cache_version_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &so_cache_version_id_)));
          set_has_so_cache_version_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCEquipItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCEquipItemsResponse)
  return false;
#undef DO_
}

void CMsgClientToGCEquipItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCEquipItemsResponse)
  // optional fixed64 so_cache_version_id = 1;
  if (has_so_cache_version_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->so_cache_version_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCEquipItemsResponse)
}

::google::protobuf::uint8* CMsgClientToGCEquipItemsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCEquipItemsResponse)
  // optional fixed64 so_cache_version_id = 1;
  if (has_so_cache_version_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->so_cache_version_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCEquipItemsResponse)
  return target;
}

int CMsgClientToGCEquipItemsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed64 so_cache_version_id = 1;
    if (has_so_cache_version_id()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCEquipItemsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCEquipItemsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const CMsgClientToGCEquipItemsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_so_cache_version_id()) {
      set_so_cache_version_id(from.so_cache_version_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const CMsgClientToGCEquipItemsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItemsResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCEquipItemsResponse::Swap(CMsgClientToGCEquipItemsResponse* other) {
  if (other != this) {
    std::swap(so_cache_version_id_, other->so_cache_version_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCEquipItemsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCEquipItemsResponse_descriptor_;
  metadata.reflection = CMsgClientToGCEquipItemsResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnlockItemStyle::kItemToUnlockFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kConsumableItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockItemStyle)
}

void CMsgClientToGCUnlockItemStyle::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle(const CMsgClientToGCUnlockItemStyle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockItemStyle)
}

void CMsgClientToGCUnlockItemStyle::SharedCtor() {
  _cached_size_ = 0;
  item_to_unlock_ = GOOGLE_ULONGLONG(0);
  style_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockItemStyle::~CMsgClientToGCUnlockItemStyle() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockItemStyle)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockItemStyle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockItemStyle_descriptor_;
}

const CMsgClientToGCUnlockItemStyle& CMsgClientToGCUnlockItemStyle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockItemStyle* CMsgClientToGCUnlockItemStyle::default_instance_ = NULL;

CMsgClientToGCUnlockItemStyle* CMsgClientToGCUnlockItemStyle::New() const {
  return new CMsgClientToGCUnlockItemStyle;
}

void CMsgClientToGCUnlockItemStyle::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    item_to_unlock_ = GOOGLE_ULONGLONG(0);
    style_index_ = 0u;
  }
  consumable_item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockItemStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockItemStyle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_to_unlock = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_to_unlock_)));
          set_has_item_to_unlock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_style_index;
        break;
      }

      // optional uint32 style_index = 2;
      case 2: {
        if (tag == 16) {
         parse_style_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
          set_has_style_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_consumable_item_ids;
        break;
      }

      // repeated uint64 consumable_item_ids = 3;
      case 3: {
        if (tag == 24) {
         parse_consumable_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_consumable_item_ids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_consumable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_consumable_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockItemStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockItemStyle)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockItemStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockItemStyle)
  // optional uint64 item_to_unlock = 1;
  if (has_item_to_unlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_to_unlock(), output);
  }

  // optional uint32 style_index = 2;
  if (has_style_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->style_index(), output);
  }

  // repeated uint64 consumable_item_ids = 3;
  for (int i = 0; i < this->consumable_item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->consumable_item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockItemStyle)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockItemStyle)
  // optional uint64 item_to_unlock = 1;
  if (has_item_to_unlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_to_unlock(), target);
  }

  // optional uint32 style_index = 2;
  if (has_style_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->style_index(), target);
  }

  // repeated uint64 consumable_item_ids = 3;
  for (int i = 0; i < this->consumable_item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->consumable_item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockItemStyle)
  return target;
}

int CMsgClientToGCUnlockItemStyle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_to_unlock = 1;
    if (has_item_to_unlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_to_unlock());
    }

    // optional uint32 style_index = 2;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  // repeated uint64 consumable_item_ids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->consumable_item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->consumable_item_ids(i));
    }
    total_size += 1 * this->consumable_item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockItemStyle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const CMsgClientToGCUnlockItemStyle& from) {
  GOOGLE_CHECK_NE(&from, this);
  consumable_item_ids_.MergeFrom(from.consumable_item_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_to_unlock()) {
      set_item_to_unlock(from.item_to_unlock());
    }
    if (from.has_style_index()) {
      set_style_index(from.style_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const CMsgClientToGCUnlockItemStyle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyle::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockItemStyle::Swap(CMsgClientToGCUnlockItemStyle* other) {
  if (other != this) {
    std::swap(item_to_unlock_, other->item_to_unlock_);
    std::swap(style_index_, other->style_index_);
    consumable_item_ids_.Swap(&other->consumable_item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockItemStyle_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockItemStyle_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor_;
}
bool CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Succeeded;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_PreReq;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAfford;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantCommit;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantLockCache;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordAttrib;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordGem;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_NoCompendiumLevel;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_AlreadyUnlocked;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MIN;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MAX;
const int CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgClientToGCUnlockItemStyleResponse::kResponseFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kItemIdFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStylePrereqFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockItemStyleResponse)
}

void CMsgClientToGCUnlockItemStyleResponse::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse(const CMsgClientToGCUnlockItemStyleResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockItemStyleResponse)
}

void CMsgClientToGCUnlockItemStyleResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  style_index_ = 0u;
  style_prereq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockItemStyleResponse::~CMsgClientToGCUnlockItemStyleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockItemStyleResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyleResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockItemStyleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockItemStyleResponse_descriptor_;
}

const CMsgClientToGCUnlockItemStyleResponse& CMsgClientToGCUnlockItemStyleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockItemStyleResponse* CMsgClientToGCUnlockItemStyleResponse::default_instance_ = NULL;

CMsgClientToGCUnlockItemStyleResponse* CMsgClientToGCUnlockItemStyleResponse::New() const {
  return new CMsgClientToGCUnlockItemStyleResponse;
}

void CMsgClientToGCUnlockItemStyleResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCUnlockItemStyleResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, style_prereq_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockItemStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockItemStyleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(value)) {
            set_response(static_cast< ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_style_index;
        break;
      }

      // optional uint32 style_index = 3;
      case 3: {
        if (tag == 24) {
         parse_style_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
          set_has_style_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_style_prereq;
        break;
      }

      // optional uint32 style_prereq = 4;
      case 4: {
        if (tag == 32) {
         parse_style_prereq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_prereq_)));
          set_has_style_prereq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockItemStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockItemStyleResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockItemStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockItemStyleResponse)
  // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 style_index = 3;
  if (has_style_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->style_index(), output);
  }

  // optional uint32 style_prereq = 4;
  if (has_style_prereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_prereq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockItemStyleResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyleResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockItemStyleResponse)
  // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 style_index = 3;
  if (has_style_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->style_index(), target);
  }

  // optional uint32 style_prereq = 4;
  if (has_style_prereq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_prereq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockItemStyleResponse)
  return target;
}

int CMsgClientToGCUnlockItemStyleResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 style_index = 3;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

    // optional uint32 style_prereq = 4;
    if (has_style_prereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_prereq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyleResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockItemStyleResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_style_index()) {
      set_style_index(from.style_index());
    }
    if (from.has_style_prereq()) {
      set_style_prereq(from.style_prereq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyleResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockItemStyleResponse::Swap(CMsgClientToGCUnlockItemStyleResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(item_id_, other->item_id_);
    std::swap(style_index_, other->style_index_);
    std::swap(style_prereq_, other->style_prereq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockItemStyleResponse_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockItemStyleResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCSetItemInventoryCategory::kItemIdsFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kSetToValueFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kRemoveCategoriesFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kAddCategoriesFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCSetItemInventoryCategory)
}

void CMsgClientToGCSetItemInventoryCategory::InitAsDefaultInstance() {
}

CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory(const CMsgClientToGCSetItemInventoryCategory& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetItemInventoryCategory)
}

void CMsgClientToGCSetItemInventoryCategory::SharedCtor() {
  _cached_size_ = 0;
  set_to_value_ = 0u;
  remove_categories_ = 0u;
  add_categories_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCSetItemInventoryCategory::~CMsgClientToGCSetItemInventoryCategory() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetItemInventoryCategory)
  SharedDtor();
}

void CMsgClientToGCSetItemInventoryCategory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCSetItemInventoryCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemInventoryCategory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCSetItemInventoryCategory_descriptor_;
}

const CMsgClientToGCSetItemInventoryCategory& CMsgClientToGCSetItemInventoryCategory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCSetItemInventoryCategory* CMsgClientToGCSetItemInventoryCategory::default_instance_ = NULL;

CMsgClientToGCSetItemInventoryCategory* CMsgClientToGCSetItemInventoryCategory::New() const {
  return new CMsgClientToGCSetItemInventoryCategory;
}

void CMsgClientToGCSetItemInventoryCategory::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCSetItemInventoryCategory*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(set_to_value_, add_categories_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCSetItemInventoryCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCSetItemInventoryCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectTag(16)) goto parse_set_to_value;
        break;
      }

      // optional uint32 set_to_value = 2;
      case 2: {
        if (tag == 16) {
         parse_set_to_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &set_to_value_)));
          set_has_set_to_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_remove_categories;
        break;
      }

      // optional uint32 remove_categories = 3;
      case 3: {
        if (tag == 24) {
         parse_remove_categories:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remove_categories_)));
          set_has_remove_categories();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_add_categories;
        break;
      }

      // optional uint32 add_categories = 4;
      case 4: {
        if (tag == 32) {
         parse_add_categories:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_categories_)));
          set_has_add_categories();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCSetItemInventoryCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCSetItemInventoryCategory)
  return false;
#undef DO_
}

void CMsgClientToGCSetItemInventoryCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCSetItemInventoryCategory)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  // optional uint32 set_to_value = 2;
  if (has_set_to_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->set_to_value(), output);
  }

  // optional uint32 remove_categories = 3;
  if (has_remove_categories()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->remove_categories(), output);
  }

  // optional uint32 add_categories = 4;
  if (has_add_categories()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->add_categories(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCSetItemInventoryCategory)
}

::google::protobuf::uint8* CMsgClientToGCSetItemInventoryCategory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetItemInventoryCategory)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  // optional uint32 set_to_value = 2;
  if (has_set_to_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->set_to_value(), target);
  }

  // optional uint32 remove_categories = 3;
  if (has_remove_categories()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->remove_categories(), target);
  }

  // optional uint32 add_categories = 4;
  if (has_add_categories()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->add_categories(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetItemInventoryCategory)
  return target;
}

int CMsgClientToGCSetItemInventoryCategory::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 set_to_value = 2;
    if (has_set_to_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->set_to_value());
    }

    // optional uint32 remove_categories = 3;
    if (has_remove_categories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remove_categories());
    }

    // optional uint32 add_categories = 4;
    if (has_add_categories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->add_categories());
    }

  }
  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCSetItemInventoryCategory* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCSetItemInventoryCategory*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_set_to_value()) {
      set_set_to_value(from.set_to_value());
    }
    if (from.has_remove_categories()) {
      set_remove_categories(from.remove_categories());
    }
    if (from.has_add_categories()) {
      set_add_categories(from.add_categories());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemInventoryCategory::IsInitialized() const {

  return true;
}

void CMsgClientToGCSetItemInventoryCategory::Swap(CMsgClientToGCSetItemInventoryCategory* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(set_to_value_, other->set_to_value_);
    std::swap(remove_categories_, other->remove_categories_);
    std::swap(add_categories_, other->add_categories_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCSetItemInventoryCategory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCSetItemInventoryCategory_descriptor_;
  metadata.reflection = CMsgClientToGCSetItemInventoryCategory_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnlockCrate::kCrateItemIdFieldNumber;
const int CMsgClientToGCUnlockCrate::kKeyItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockCrate)
}

void CMsgClientToGCUnlockCrate::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate(const CMsgClientToGCUnlockCrate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockCrate)
}

void CMsgClientToGCUnlockCrate::SharedCtor() {
  _cached_size_ = 0;
  crate_item_id_ = GOOGLE_ULONGLONG(0);
  key_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockCrate::~CMsgClientToGCUnlockCrate() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockCrate)
  SharedDtor();
}

void CMsgClientToGCUnlockCrate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockCrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockCrate_descriptor_;
}

const CMsgClientToGCUnlockCrate& CMsgClientToGCUnlockCrate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockCrate* CMsgClientToGCUnlockCrate::default_instance_ = NULL;

CMsgClientToGCUnlockCrate* CMsgClientToGCUnlockCrate::New() const {
  return new CMsgClientToGCUnlockCrate;
}

void CMsgClientToGCUnlockCrate::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCUnlockCrate*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(crate_item_id_, key_item_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockCrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockCrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 crate_item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &crate_item_id_)));
          set_has_crate_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_key_item_id;
        break;
      }

      // optional uint64 key_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_key_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_item_id_)));
          set_has_key_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockCrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockCrate)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockCrate)
  // optional uint64 crate_item_id = 1;
  if (has_crate_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->crate_item_id(), output);
  }

  // optional uint64 key_item_id = 2;
  if (has_key_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->key_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockCrate)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockCrate)
  // optional uint64 crate_item_id = 1;
  if (has_crate_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->crate_item_id(), target);
  }

  // optional uint64 key_item_id = 2;
  if (has_key_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->key_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockCrate)
  return target;
}

int CMsgClientToGCUnlockCrate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 crate_item_id = 1;
    if (has_crate_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->crate_item_id());
    }

    // optional uint64 key_item_id = 2;
    if (has_key_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->key_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockCrate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrate::MergeFrom(const CMsgClientToGCUnlockCrate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_crate_item_id()) {
      set_crate_item_id(from.crate_item_id());
    }
    if (from.has_key_item_id()) {
      set_key_item_id(from.key_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockCrate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrate::CopyFrom(const CMsgClientToGCUnlockCrate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrate::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockCrate::Swap(CMsgClientToGCUnlockCrate* other) {
  if (other != this) {
    std::swap(crate_item_id_, other->crate_item_id_);
    std::swap(key_item_id_, other->key_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockCrate_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockCrate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnlockCrateResponse_Item::kItemIdFieldNumber;
const int CMsgClientToGCUnlockCrateResponse_Item::kDefIndexFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockCrateResponse.Item)
}

void CMsgClientToGCUnlockCrateResponse_Item::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item(const CMsgClientToGCUnlockCrateResponse_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockCrateResponse.Item)
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  def_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockCrateResponse_Item::~CMsgClientToGCUnlockCrateResponse_Item() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockCrateResponse.Item)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockCrateResponse_Item_descriptor_;
}

const CMsgClientToGCUnlockCrateResponse_Item& CMsgClientToGCUnlockCrateResponse_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse_Item::default_instance_ = NULL;

CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse_Item::New() const {
  return new CMsgClientToGCUnlockCrateResponse_Item;
}

void CMsgClientToGCUnlockCrateResponse_Item::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCUnlockCrateResponse_Item*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, def_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockCrateResponse_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockCrateResponse.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_def_index;
        break;
      }

      // optional uint32 def_index = 2;
      case 2: {
        if (tag == 16) {
         parse_def_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
          set_has_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockCrateResponse.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockCrateResponse.Item)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrateResponse_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockCrateResponse.Item)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 def_index = 2;
  if (has_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->def_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockCrateResponse.Item)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockCrateResponse.Item)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 def_index = 2;
  if (has_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->def_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockCrateResponse.Item)
  return target;
}

int CMsgClientToGCUnlockCrateResponse_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 2;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockCrateResponse_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_def_index()) {
      set_def_index(from.def_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse_Item::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockCrateResponse_Item::Swap(CMsgClientToGCUnlockCrateResponse_Item* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(def_index_, other->def_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockCrateResponse_Item_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockCrateResponse_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgClientToGCUnlockCrateResponse::kResultFieldNumber;
const int CMsgClientToGCUnlockCrateResponse::kGrantedItemsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockCrateResponse)
}

void CMsgClientToGCUnlockCrateResponse::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse(const CMsgClientToGCUnlockCrateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockCrateResponse)
}

void CMsgClientToGCUnlockCrateResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockCrateResponse::~CMsgClientToGCUnlockCrateResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockCrateResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockCrateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockCrateResponse_descriptor_;
}

const CMsgClientToGCUnlockCrateResponse& CMsgClientToGCUnlockCrateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockCrateResponse* CMsgClientToGCUnlockCrateResponse::default_instance_ = NULL;

CMsgClientToGCUnlockCrateResponse* CMsgClientToGCUnlockCrateResponse::New() const {
  return new CMsgClientToGCUnlockCrateResponse;
}

void CMsgClientToGCUnlockCrateResponse::Clear() {
  result_ = 0;
  granted_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockCrateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockCrateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgResponse_IsValid(value)) {
            set_result(static_cast< ::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_granted_items;
        break;
      }

      // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
      case 2: {
        if (tag == 18) {
         parse_granted_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_granted_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_granted_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockCrateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockCrateResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockCrateResponse)
  // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (int i = 0; i < this->granted_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->granted_items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockCrateResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockCrateResponse)
  // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (int i = 0; i < this->granted_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->granted_items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockCrateResponse)
  return target;
}

int CMsgClientToGCUnlockCrateResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  total_size += 1 * this->granted_items_size();
  for (int i = 0; i < this->granted_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->granted_items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockCrateResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const CMsgClientToGCUnlockCrateResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  granted_items_.MergeFrom(from.granted_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const CMsgClientToGCUnlockCrateResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockCrateResponse::Swap(CMsgClientToGCUnlockCrateResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    granted_items_.Swap(&other->granted_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockCrateResponse_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockCrateResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCRemoveItemAttributeMsg::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCRemoveItemAttributeMsg::CMsgGCRemoveItemAttributeMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRemoveItemAttributeMsg)
}

void CMsgGCRemoveItemAttributeMsg::InitAsDefaultInstance() {
}

CMsgGCRemoveItemAttributeMsg::CMsgGCRemoveItemAttributeMsg(const CMsgGCRemoveItemAttributeMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRemoveItemAttributeMsg)
}

void CMsgGCRemoveItemAttributeMsg::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRemoveItemAttributeMsg::~CMsgGCRemoveItemAttributeMsg() {
  // @@protoc_insertion_point(destructor:CMsgGCRemoveItemAttributeMsg)
  SharedDtor();
}

void CMsgGCRemoveItemAttributeMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRemoveItemAttributeMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRemoveItemAttributeMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRemoveItemAttributeMsg_descriptor_;
}

const CMsgGCRemoveItemAttributeMsg& CMsgGCRemoveItemAttributeMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRemoveItemAttributeMsg* CMsgGCRemoveItemAttributeMsg::default_instance_ = NULL;

CMsgGCRemoveItemAttributeMsg* CMsgGCRemoveItemAttributeMsg::New() const {
  return new CMsgGCRemoveItemAttributeMsg;
}

void CMsgGCRemoveItemAttributeMsg::Clear() {
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRemoveItemAttributeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRemoveItemAttributeMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRemoveItemAttributeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRemoveItemAttributeMsg)
  return false;
#undef DO_
}

void CMsgGCRemoveItemAttributeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRemoveItemAttributeMsg)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRemoveItemAttributeMsg)
}

::google::protobuf::uint8* CMsgGCRemoveItemAttributeMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRemoveItemAttributeMsg)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRemoveItemAttributeMsg)
  return target;
}

int CMsgGCRemoveItemAttributeMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRemoveItemAttributeMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRemoveItemAttributeMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRemoveItemAttributeMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRemoveItemAttributeMsg::MergeFrom(const CMsgGCRemoveItemAttributeMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRemoveItemAttributeMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRemoveItemAttributeMsg::CopyFrom(const CMsgGCRemoveItemAttributeMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRemoveItemAttributeMsg::IsInitialized() const {

  return true;
}

void CMsgGCRemoveItemAttributeMsg::Swap(CMsgGCRemoveItemAttributeMsg* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRemoveItemAttributeMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRemoveItemAttributeMsg_descriptor_;
  metadata.reflection = CMsgGCRemoveItemAttributeMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCNameItem::kSubjectItemIdFieldNumber;
const int CMsgGCNameItem::kToolItemIdFieldNumber;
const int CMsgGCNameItem::kNameFieldNumber;
#endif  // !_MSC_VER

CMsgGCNameItem::CMsgGCNameItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCNameItem)
}

void CMsgGCNameItem::InitAsDefaultInstance() {
}

CMsgGCNameItem::CMsgGCNameItem(const CMsgGCNameItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCNameItem)
}

void CMsgGCNameItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  subject_item_id_ = GOOGLE_ULONGLONG(0);
  tool_item_id_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCNameItem::~CMsgGCNameItem() {
  // @@protoc_insertion_point(destructor:CMsgGCNameItem)
  SharedDtor();
}

void CMsgGCNameItem::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCNameItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCNameItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCNameItem_descriptor_;
}

const CMsgGCNameItem& CMsgGCNameItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCNameItem* CMsgGCNameItem::default_instance_ = NULL;

CMsgGCNameItem* CMsgGCNameItem::New() const {
  return new CMsgGCNameItem;
}

void CMsgGCNameItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCNameItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(subject_item_id_, tool_item_id_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCNameItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCNameItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 subject_item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subject_item_id_)));
          set_has_subject_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tool_item_id;
        break;
      }

      // optional uint64 tool_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_tool_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tool_item_id_)));
          set_has_tool_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCNameItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCNameItem)
  return false;
#undef DO_
}

void CMsgGCNameItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCNameItem)
  // optional uint64 subject_item_id = 1;
  if (has_subject_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->subject_item_id(), output);
  }

  // optional uint64 tool_item_id = 2;
  if (has_tool_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tool_item_id(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCNameItem)
}

::google::protobuf::uint8* CMsgGCNameItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCNameItem)
  // optional uint64 subject_item_id = 1;
  if (has_subject_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->subject_item_id(), target);
  }

  // optional uint64 tool_item_id = 2;
  if (has_tool_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tool_item_id(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCNameItem)
  return target;
}

int CMsgGCNameItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 subject_item_id = 1;
    if (has_subject_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->subject_item_id());
    }

    // optional uint64 tool_item_id = 2;
    if (has_tool_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tool_item_id());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCNameItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCNameItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCNameItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCNameItem::MergeFrom(const CMsgGCNameItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_subject_item_id()) {
      set_subject_item_id(from.subject_item_id());
    }
    if (from.has_tool_item_id()) {
      set_tool_item_id(from.tool_item_id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCNameItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCNameItem::CopyFrom(const CMsgGCNameItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCNameItem::IsInitialized() const {

  return true;
}

void CMsgGCNameItem::Swap(CMsgGCNameItem* other) {
  if (other != this) {
    std::swap(subject_item_id_, other->subject_item_id_);
    std::swap(tool_item_id_, other->tool_item_id_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCNameItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCNameItem_descriptor_;
  metadata.reflection = CMsgGCNameItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCSetItemPosition::kItemIdFieldNumber;
const int CMsgGCSetItemPosition::kNewPositionFieldNumber;
#endif  // !_MSC_VER

CMsgGCSetItemPosition::CMsgGCSetItemPosition()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCSetItemPosition)
}

void CMsgGCSetItemPosition::InitAsDefaultInstance() {
}

CMsgGCSetItemPosition::CMsgGCSetItemPosition(const CMsgGCSetItemPosition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCSetItemPosition)
}

void CMsgGCSetItemPosition::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  new_position_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCSetItemPosition::~CMsgGCSetItemPosition() {
  // @@protoc_insertion_point(destructor:CMsgGCSetItemPosition)
  SharedDtor();
}

void CMsgGCSetItemPosition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCSetItemPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCSetItemPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCSetItemPosition_descriptor_;
}

const CMsgGCSetItemPosition& CMsgGCSetItemPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCSetItemPosition* CMsgGCSetItemPosition::default_instance_ = NULL;

CMsgGCSetItemPosition* CMsgGCSetItemPosition::New() const {
  return new CMsgGCSetItemPosition;
}

void CMsgGCSetItemPosition::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCSetItemPosition*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, new_position_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCSetItemPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCSetItemPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_new_position;
        break;
      }

      // optional uint32 new_position = 2;
      case 2: {
        if (tag == 16) {
         parse_new_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_position_)));
          set_has_new_position();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCSetItemPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCSetItemPosition)
  return false;
#undef DO_
}

void CMsgGCSetItemPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCSetItemPosition)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_position = 2;
  if (has_new_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_position(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCSetItemPosition)
}

::google::protobuf::uint8* CMsgGCSetItemPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCSetItemPosition)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_position = 2;
  if (has_new_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_position(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCSetItemPosition)
  return target;
}

int CMsgGCSetItemPosition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_position = 2;
    if (has_new_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_position());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCSetItemPosition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCSetItemPosition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCSetItemPosition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCSetItemPosition::MergeFrom(const CMsgGCSetItemPosition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_new_position()) {
      set_new_position(from.new_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCSetItemPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCSetItemPosition::CopyFrom(const CMsgGCSetItemPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCSetItemPosition::IsInitialized() const {

  return true;
}

void CMsgGCSetItemPosition::Swap(CMsgGCSetItemPosition* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(new_position_, other->new_position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCSetItemPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCSetItemPosition_descriptor_;
  metadata.reflection = CMsgGCSetItemPosition_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
