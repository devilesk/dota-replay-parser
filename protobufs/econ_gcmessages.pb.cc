// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "econ_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgApplyAutograph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgApplyAutograph_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgAdjustItemEquippedState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAdjustItemEquippedState_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgEconPlayerStrangeCountAdjustment_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_FinalizePurchase_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_RefundPurchase_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgCraftingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgCraftingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesDataResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse_Price_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesDataResponse_Price_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCPingRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCPingRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCPingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCPingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserSessionServer_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserSessionServerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembers_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserServerMembers_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserServerMembersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNames_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLookupMultipleAccountNames_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLookupMultipleAccountNamesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse_Account_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLookupMultipleAccountNamesResponse_Account_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserPCBangNo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGetUserPCBangNoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestCrateItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestCrateItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRequestCrateItemsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRequestCrateItemsResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgRequestCrateItemsResponse_EResult_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCCanUseDropRateBonus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCCanUseDropRateBonus_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSQLAddDropRateBonus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSQLAddDropRateBonus_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSQLUpgradeBattleBooster_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSQLUpgradeBattleBooster_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCRefreshSOCache_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCRefreshSOCache_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCCheckAccountTradeStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCCheckAccountTradeStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCGrantSelfMadeItemToAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgUseItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgUseItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgServerUseItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgServerUseItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgUseMultipleItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgUseMultipleItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerBalanceRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerBalanceResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCStoreRechargeRedirect_LineItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCStoreRechargeRedirect_LineItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerRechargeRedirectURLRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCPartnerRechargeRedirectURLResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgCraftStatue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgCraftStatue_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRedeemCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRedeemCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgRedeemCodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRedeemCodeResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgRedeemCodeResponse_EResultCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgDevNewItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDevNewItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgDevNewItemRequestResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDevNewItemRequestResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCAddGiftItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCAddGiftItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCWrapAndDeliverGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCWrapAndDeliverGiftResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnwrapGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnwrapGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCGetGiftPermissions_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissionsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCGetGiftPermissionsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnpackBundle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnpackBundle_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnpackBundleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnpackBundleResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToClientStoreTransactionCompleted_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToClientStoreTransactionCompleted_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCEquipItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItemsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCEquipItemsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemStyle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCSetItemStyle_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemStyleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCSetItemStyleResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockItemStyle_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockItemStyleResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemInventoryCategory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCSetItemInventoryCategory_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockCrate_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockCrateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCUnlockCrateResponse_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCRemoveItemAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCRemoveItemAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCRemoveItemAttributeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCRemoveItemAttributeResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCNameItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCNameItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCNameItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCNameItemResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgClientToGCNameItemResponse_ENameItem_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCSetItemPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCSetItemPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* CAttribute_ItemDynamicRecipeComponent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CAttribute_ItemDynamicRecipeComponent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_Empty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_Empty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_Effect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_Effect_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_Color_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_Color_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_Strange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_Strange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_Spectator_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_Spectator_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_AssetModifier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_AssetModifier_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_Autograph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_Autograph_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProtoItemSocket_StaticVisuals_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProtoItemSocket_StaticVisuals_reflection_ = NULL;
const ::google::protobuf::Descriptor* CAttribute_String_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CAttribute_String_reflection_ = NULL;
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CWorkshop_GetItemDailyRevenue_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CWorkshop_GetItemDailyRevenue_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSQLGCToGCGrantBackpackSlots_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSQLGCToGCGrantBackpackSlots_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCLookupAccountName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCLookupAccountName_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCLookupAccountNameResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCLookupAccountNameResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCDevRevokeUserItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCDevRevokeUserItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipe_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCCreateStaticRecipe_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipe_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCCreateStaticRecipe_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCCreateStaticRecipeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_OutputItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCCreateStaticRecipeResponse_OutputItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_InputError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCCreateStaticRecipeResponse_InputError_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgProcessTransactionOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgProcessTransactionOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgProcessTransactionOrder_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgProcessTransactionOrder_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessCDKeyTransaction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCStoreProcessCDKeyTransaction_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessCDKeyTransactionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCStoreProcessCDKeyTransactionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessSettlement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCStoreProcessSettlement_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessSettlementResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCStoreProcessSettlementResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCBroadcastConsoleCommand_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCBroadcastConsoleCommand_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCConsoleOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCConsoleOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCConsoleOutput_OutputLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCConsoleOutput_OutputLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgItemAges_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgItemAges_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgItemAges_MaxItemIDTimestamp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgItemAges_MaxItemIDTimestamp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCInternalTestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCInternalTestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCToGCClientServerVersionsUpdated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCToGCClientServerVersionsUpdated_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Finalize_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Refund_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCMsgInitiateTradeResponse_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_econ_5fgcmessages_2eproto() {
  protobuf_AddDesc_econ_5fgcmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "econ_gcmessages.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgApplyAutograph_descriptor_ = file->message_type(0);
  static const int CMsgApplyAutograph_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, autograph_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, item_item_id_),
  };
  CMsgApplyAutograph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgApplyAutograph_descriptor_,
      CMsgApplyAutograph::default_instance_,
      CMsgApplyAutograph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgApplyAutograph));
  CMsgAdjustItemEquippedState_descriptor_ = file->message_type(1);
  static const int CMsgAdjustItemEquippedState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, new_class_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, new_slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, style_index_),
  };
  CMsgAdjustItemEquippedState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgAdjustItemEquippedState_descriptor_,
      CMsgAdjustItemEquippedState::default_instance_,
      CMsgAdjustItemEquippedState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgAdjustItemEquippedState));
  CMsgEconPlayerStrangeCountAdjustment_descriptor_ = file->message_type(2);
  static const int CMsgEconPlayerStrangeCountAdjustment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, strange_count_adjustments_),
  };
  CMsgEconPlayerStrangeCountAdjustment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgEconPlayerStrangeCountAdjustment_descriptor_,
      CMsgEconPlayerStrangeCountAdjustment::default_instance_,
      CMsgEconPlayerStrangeCountAdjustment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgEconPlayerStrangeCountAdjustment));
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_ = CMsgEconPlayerStrangeCountAdjustment_descriptor_->nested_type(0);
  static const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, event_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, adjustment_),
  };
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_,
      CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_,
      CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment));
  CMsgRequestItemPurgatory_FinalizePurchase_descriptor_ = file->message_type(3);
  static const int CMsgRequestItemPurgatory_FinalizePurchase_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, item_ids_),
  };
  CMsgRequestItemPurgatory_FinalizePurchase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_FinalizePurchase_descriptor_,
      CMsgRequestItemPurgatory_FinalizePurchase::default_instance_,
      CMsgRequestItemPurgatory_FinalizePurchase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_FinalizePurchase));
  CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_ = file->message_type(4);
  static const int CMsgRequestItemPurgatory_FinalizePurchaseResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, item_ids_),
  };
  CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_,
      CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_,
      CMsgRequestItemPurgatory_FinalizePurchaseResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_FinalizePurchaseResponse));
  CMsgRequestItemPurgatory_RefundPurchase_descriptor_ = file->message_type(5);
  static const int CMsgRequestItemPurgatory_RefundPurchase_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, item_ids_),
  };
  CMsgRequestItemPurgatory_RefundPurchase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_RefundPurchase_descriptor_,
      CMsgRequestItemPurgatory_RefundPurchase::default_instance_,
      CMsgRequestItemPurgatory_RefundPurchase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_RefundPurchase));
  CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_ = file->message_type(6);
  static const int CMsgRequestItemPurgatory_RefundPurchaseResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, result_),
  };
  CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_,
      CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_,
      CMsgRequestItemPurgatory_RefundPurchaseResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestItemPurgatory_RefundPurchaseResponse));
  CMsgCraftingResponse_descriptor_ = file->message_type(7);
  static const int CMsgCraftingResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, item_ids_),
  };
  CMsgCraftingResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgCraftingResponse_descriptor_,
      CMsgCraftingResponse::default_instance_,
      CMsgCraftingResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgCraftingResponse));
  CMsgGCRequestStoreSalesData_descriptor_ = file->message_type(8);
  static const int CMsgGCRequestStoreSalesData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, currency_),
  };
  CMsgGCRequestStoreSalesData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesData_descriptor_,
      CMsgGCRequestStoreSalesData::default_instance_,
      CMsgGCRequestStoreSalesData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesData));
  CMsgGCRequestStoreSalesDataResponse_descriptor_ = file->message_type(9);
  static const int CMsgGCRequestStoreSalesDataResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, sale_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, expiration_time_),
  };
  CMsgGCRequestStoreSalesDataResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesDataResponse_descriptor_,
      CMsgGCRequestStoreSalesDataResponse::default_instance_,
      CMsgGCRequestStoreSalesDataResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesDataResponse));
  CMsgGCRequestStoreSalesDataResponse_Price_descriptor_ = CMsgGCRequestStoreSalesDataResponse_descriptor_->nested_type(0);
  static const int CMsgGCRequestStoreSalesDataResponse_Price_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, price_),
  };
  CMsgGCRequestStoreSalesDataResponse_Price_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesDataResponse_Price_descriptor_,
      CMsgGCRequestStoreSalesDataResponse_Price::default_instance_,
      CMsgGCRequestStoreSalesDataResponse_Price_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesDataResponse_Price));
  CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_ = file->message_type(10);
  static const int CMsgGCRequestStoreSalesDataUpToDateResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, expiration_time_),
  };
  CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_,
      CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_,
      CMsgGCRequestStoreSalesDataUpToDateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCRequestStoreSalesDataUpToDateResponse));
  CMsgGCToGCPingRequest_descriptor_ = file->message_type(11);
  static const int CMsgGCToGCPingRequest_offsets_[1] = {
  };
  CMsgGCToGCPingRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCPingRequest_descriptor_,
      CMsgGCToGCPingRequest::default_instance_,
      CMsgGCToGCPingRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCPingRequest));
  CMsgGCToGCPingResponse_descriptor_ = file->message_type(12);
  static const int CMsgGCToGCPingResponse_offsets_[1] = {
  };
  CMsgGCToGCPingResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCPingResponse_descriptor_,
      CMsgGCToGCPingResponse::default_instance_,
      CMsgGCToGCPingResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCPingResponse));
  CMsgGCToGCGetUserSessionServer_descriptor_ = file->message_type(13);
  static const int CMsgGCToGCGetUserSessionServer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, account_id_),
  };
  CMsgGCToGCGetUserSessionServer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserSessionServer_descriptor_,
      CMsgGCToGCGetUserSessionServer::default_instance_,
      CMsgGCToGCGetUserSessionServer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserSessionServer));
  CMsgGCToGCGetUserSessionServerResponse_descriptor_ = file->message_type(14);
  static const int CMsgGCToGCGetUserSessionServerResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, server_steam_id_),
  };
  CMsgGCToGCGetUserSessionServerResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserSessionServerResponse_descriptor_,
      CMsgGCToGCGetUserSessionServerResponse::default_instance_,
      CMsgGCToGCGetUserSessionServerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserSessionServerResponse));
  CMsgGCToGCGetUserServerMembers_descriptor_ = file->message_type(15);
  static const int CMsgGCToGCGetUserServerMembers_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, max_spectators_),
  };
  CMsgGCToGCGetUserServerMembers_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserServerMembers_descriptor_,
      CMsgGCToGCGetUserServerMembers::default_instance_,
      CMsgGCToGCGetUserServerMembers_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserServerMembers));
  CMsgGCToGCGetUserServerMembersResponse_descriptor_ = file->message_type(16);
  static const int CMsgGCToGCGetUserServerMembersResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, member_account_id_),
  };
  CMsgGCToGCGetUserServerMembersResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserServerMembersResponse_descriptor_,
      CMsgGCToGCGetUserServerMembersResponse::default_instance_,
      CMsgGCToGCGetUserServerMembersResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserServerMembersResponse));
  CMsgLookupMultipleAccountNames_descriptor_ = file->message_type(17);
  static const int CMsgLookupMultipleAccountNames_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, accountids_),
  };
  CMsgLookupMultipleAccountNames_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLookupMultipleAccountNames_descriptor_,
      CMsgLookupMultipleAccountNames::default_instance_,
      CMsgLookupMultipleAccountNames_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLookupMultipleAccountNames));
  CMsgLookupMultipleAccountNamesResponse_descriptor_ = file->message_type(18);
  static const int CMsgLookupMultipleAccountNamesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, accounts_),
  };
  CMsgLookupMultipleAccountNamesResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLookupMultipleAccountNamesResponse_descriptor_,
      CMsgLookupMultipleAccountNamesResponse::default_instance_,
      CMsgLookupMultipleAccountNamesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLookupMultipleAccountNamesResponse));
  CMsgLookupMultipleAccountNamesResponse_Account_descriptor_ = CMsgLookupMultipleAccountNamesResponse_descriptor_->nested_type(0);
  static const int CMsgLookupMultipleAccountNamesResponse_Account_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, persona_),
  };
  CMsgLookupMultipleAccountNamesResponse_Account_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLookupMultipleAccountNamesResponse_Account_descriptor_,
      CMsgLookupMultipleAccountNamesResponse_Account::default_instance_,
      CMsgLookupMultipleAccountNamesResponse_Account_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLookupMultipleAccountNamesResponse_Account));
  CMsgGCToGCGetUserPCBangNo_descriptor_ = file->message_type(19);
  static const int CMsgGCToGCGetUserPCBangNo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, account_id_),
  };
  CMsgGCToGCGetUserPCBangNo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserPCBangNo_descriptor_,
      CMsgGCToGCGetUserPCBangNo::default_instance_,
      CMsgGCToGCGetUserPCBangNo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserPCBangNo));
  CMsgGCToGCGetUserPCBangNoResponse_descriptor_ = file->message_type(20);
  static const int CMsgGCToGCGetUserPCBangNoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, pc_bang_no_),
  };
  CMsgGCToGCGetUserPCBangNoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGetUserPCBangNoResponse_descriptor_,
      CMsgGCToGCGetUserPCBangNoResponse::default_instance_,
      CMsgGCToGCGetUserPCBangNoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGetUserPCBangNoResponse));
  CMsgRequestCrateItems_descriptor_ = file->message_type(21);
  static const int CMsgRequestCrateItems_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, crate_item_def_),
  };
  CMsgRequestCrateItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestCrateItems_descriptor_,
      CMsgRequestCrateItems::default_instance_,
      CMsgRequestCrateItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestCrateItems));
  CMsgRequestCrateItemsResponse_descriptor_ = file->message_type(22);
  static const int CMsgRequestCrateItemsResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, item_defs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, peek_item_def_),
  };
  CMsgRequestCrateItemsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRequestCrateItemsResponse_descriptor_,
      CMsgRequestCrateItemsResponse::default_instance_,
      CMsgRequestCrateItemsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRequestCrateItemsResponse));
  CMsgRequestCrateItemsResponse_EResult_descriptor_ = CMsgRequestCrateItemsResponse_descriptor_->enum_type(0);
  CMsgGCToGCCanUseDropRateBonus_descriptor_ = file->message_type(23);
  static const int CMsgGCToGCCanUseDropRateBonus_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, drop_rate_bonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, booster_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, exclusive_item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, allow_equal_rate_),
  };
  CMsgGCToGCCanUseDropRateBonus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCCanUseDropRateBonus_descriptor_,
      CMsgGCToGCCanUseDropRateBonus::default_instance_,
      CMsgGCToGCCanUseDropRateBonus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCCanUseDropRateBonus));
  CMsgSQLAddDropRateBonus_descriptor_ = file->message_type(24);
  static const int CMsgSQLAddDropRateBonus_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, drop_rate_bonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, booster_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, seconds_duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, end_time_stamp_),
  };
  CMsgSQLAddDropRateBonus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSQLAddDropRateBonus_descriptor_,
      CMsgSQLAddDropRateBonus::default_instance_,
      CMsgSQLAddDropRateBonus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSQLAddDropRateBonus));
  CMsgSQLUpgradeBattleBooster_descriptor_ = file->message_type(25);
  static const int CMsgSQLUpgradeBattleBooster_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, bonus_to_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, booster_type_),
  };
  CMsgSQLUpgradeBattleBooster_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSQLUpgradeBattleBooster_descriptor_,
      CMsgSQLUpgradeBattleBooster::default_instance_,
      CMsgSQLUpgradeBattleBooster_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSQLUpgradeBattleBooster));
  CMsgGCToGCRefreshSOCache_descriptor_ = file->message_type(26);
  static const int CMsgGCToGCRefreshSOCache_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, reload_),
  };
  CMsgGCToGCRefreshSOCache_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCRefreshSOCache_descriptor_,
      CMsgGCToGCRefreshSOCache::default_instance_,
      CMsgGCToGCRefreshSOCache_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCRefreshSOCache));
  CMsgGCToGCCheckAccountTradeStatus_descriptor_ = file->message_type(27);
  static const int CMsgGCToGCCheckAccountTradeStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, initiator_),
  };
  CMsgGCToGCCheckAccountTradeStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCCheckAccountTradeStatus_descriptor_,
      CMsgGCToGCCheckAccountTradeStatus::default_instance_,
      CMsgGCToGCCheckAccountTradeStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCCheckAccountTradeStatus));
  CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_ = file->message_type(28);
  static const int CMsgGCToGCCheckAccountTradeStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, can_trade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, error_code_),
  };
  CMsgGCToGCCheckAccountTradeStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_,
      CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_,
      CMsgGCToGCCheckAccountTradeStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCCheckAccountTradeStatusResponse));
  CMsgGCToGCGrantAccountRolledItems_descriptor_ = file->message_type(29);
  static const int CMsgGCToGCGrantAccountRolledItems_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, audit_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, audit_data_),
  };
  CMsgGCToGCGrantAccountRolledItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_descriptor_,
      CMsgGCToGCGrantAccountRolledItems::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems));
  CMsgGCToGCGrantAccountRolledItems_Item_descriptor_ = CMsgGCToGCGrantAccountRolledItems_descriptor_->nested_type(0);
  static const int CMsgGCToGCGrantAccountRolledItems_Item_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, loot_lists_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, ignore_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, dynamic_attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, additional_audit_entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, inventory_token_),
  };
  CMsgGCToGCGrantAccountRolledItems_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_Item_descriptor_,
      CMsgGCToGCGrantAccountRolledItems_Item::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems_Item));
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_ = CMsgGCToGCGrantAccountRolledItems_Item_descriptor_->nested_type(0);
  static const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_float_),
  };
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_,
      CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute));
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_ = CMsgGCToGCGrantAccountRolledItems_Item_descriptor_->nested_type(1);
  static const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, owner_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_data_),
  };
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_,
      CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_,
      CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry));
  CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_ = file->message_type(30);
  static const int CMsgGCToGCGrantSelfMadeItemToAccount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, item_def_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, accountid_),
  };
  CMsgGCToGCGrantSelfMadeItemToAccount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_,
      CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_,
      CMsgGCToGCGrantSelfMadeItemToAccount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCGrantSelfMadeItemToAccount));
  CMsgUseItem_descriptor_ = file->message_type(31);
  static const int CMsgUseItem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, target_steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, gift__potential_targets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, duel__class_lock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, initiator_steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, itempack__ack_immediately_),
  };
  CMsgUseItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgUseItem_descriptor_,
      CMsgUseItem::default_instance_,
      CMsgUseItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgUseItem));
  CMsgServerUseItem_descriptor_ = file->message_type(32);
  static const int CMsgServerUseItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, initiator_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, use_item_msg_),
  };
  CMsgServerUseItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgServerUseItem_descriptor_,
      CMsgServerUseItem::default_instance_,
      CMsgServerUseItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgServerUseItem));
  CMsgUseMultipleItems_descriptor_ = file->message_type(33);
  static const int CMsgUseMultipleItems_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseMultipleItems, item_ids_),
  };
  CMsgUseMultipleItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgUseMultipleItems_descriptor_,
      CMsgUseMultipleItems::default_instance_,
      CMsgUseMultipleItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseMultipleItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseMultipleItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgUseMultipleItems));
  CMsgGCPartnerBalanceRequest_descriptor_ = file->message_type(34);
  static const int CMsgGCPartnerBalanceRequest_offsets_[1] = {
  };
  CMsgGCPartnerBalanceRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerBalanceRequest_descriptor_,
      CMsgGCPartnerBalanceRequest::default_instance_,
      CMsgGCPartnerBalanceRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerBalanceRequest));
  CMsgGCPartnerBalanceResponse_descriptor_ = file->message_type(35);
  static const int CMsgGCPartnerBalanceResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, balance_),
  };
  CMsgGCPartnerBalanceResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerBalanceResponse_descriptor_,
      CMsgGCPartnerBalanceResponse::default_instance_,
      CMsgGCPartnerBalanceResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerBalanceResponse));
  CGCStoreRechargeRedirect_LineItem_descriptor_ = file->message_type(36);
  static const int CGCStoreRechargeRedirect_LineItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, item_def_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, quantity_),
  };
  CGCStoreRechargeRedirect_LineItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGCStoreRechargeRedirect_LineItem_descriptor_,
      CGCStoreRechargeRedirect_LineItem::default_instance_,
      CGCStoreRechargeRedirect_LineItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGCStoreRechargeRedirect_LineItem));
  CMsgGCPartnerRechargeRedirectURLRequest_descriptor_ = file->message_type(37);
  static const int CMsgGCPartnerRechargeRedirectURLRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, line_items_),
  };
  CMsgGCPartnerRechargeRedirectURLRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerRechargeRedirectURLRequest_descriptor_,
      CMsgGCPartnerRechargeRedirectURLRequest::default_instance_,
      CMsgGCPartnerRechargeRedirectURLRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerRechargeRedirectURLRequest));
  CMsgGCPartnerRechargeRedirectURLResponse_descriptor_ = file->message_type(38);
  static const int CMsgGCPartnerRechargeRedirectURLResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, url_),
  };
  CMsgGCPartnerRechargeRedirectURLResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCPartnerRechargeRedirectURLResponse_descriptor_,
      CMsgGCPartnerRechargeRedirectURLResponse::default_instance_,
      CMsgGCPartnerRechargeRedirectURLResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCPartnerRechargeRedirectURLResponse));
  CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_ = file->message_type(39);
  static const int CMsgGCEconSQLWorkItemEmbeddedRollbackData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, deleted_item_id_),
  };
  CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_,
      CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_,
      CMsgGCEconSQLWorkItemEmbeddedRollbackData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCEconSQLWorkItemEmbeddedRollbackData));
  CMsgCraftStatue_descriptor_ = file->message_type(40);
  static const int CMsgCraftStatue_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, sequencename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, cycle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, pedestal_itemdef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, toolid_),
  };
  CMsgCraftStatue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgCraftStatue_descriptor_,
      CMsgCraftStatue::default_instance_,
      CMsgCraftStatue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgCraftStatue));
  CMsgRedeemCode_descriptor_ = file->message_type(41);
  static const int CMsgRedeemCode_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, code_),
  };
  CMsgRedeemCode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRedeemCode_descriptor_,
      CMsgRedeemCode::default_instance_,
      CMsgRedeemCode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRedeemCode));
  CMsgRedeemCodeResponse_descriptor_ = file->message_type(42);
  static const int CMsgRedeemCodeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, item_id_),
  };
  CMsgRedeemCodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRedeemCodeResponse_descriptor_,
      CMsgRedeemCodeResponse::default_instance_,
      CMsgRedeemCodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRedeemCodeResponse));
  CMsgRedeemCodeResponse_EResultCode_descriptor_ = CMsgRedeemCodeResponse_descriptor_->enum_type(0);
  CMsgDevNewItemRequest_descriptor_ = file->message_type(43);
  static const int CMsgDevNewItemRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, item_def_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, loot_list_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, attr_def_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, attr_value_),
  };
  CMsgDevNewItemRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgDevNewItemRequest_descriptor_,
      CMsgDevNewItemRequest::default_instance_,
      CMsgDevNewItemRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgDevNewItemRequest));
  CMsgDevNewItemRequestResponse_descriptor_ = file->message_type(44);
  static const int CMsgDevNewItemRequestResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, success_),
  };
  CMsgDevNewItemRequestResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgDevNewItemRequestResponse_descriptor_,
      CMsgDevNewItemRequestResponse::default_instance_,
      CMsgDevNewItemRequestResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgDevNewItemRequestResponse));
  CMsgGCAddGiftItem_descriptor_ = file->message_type(45);
  static const int CMsgGCAddGiftItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, item_id_),
  };
  CMsgGCAddGiftItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCAddGiftItem_descriptor_,
      CMsgGCAddGiftItem::default_instance_,
      CMsgGCAddGiftItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCAddGiftItem));
  CMsgClientToGCWrapAndDeliverGift_descriptor_ = file->message_type(46);
  static const int CMsgClientToGCWrapAndDeliverGift_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, give_to_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, gift_message_),
  };
  CMsgClientToGCWrapAndDeliverGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCWrapAndDeliverGift_descriptor_,
      CMsgClientToGCWrapAndDeliverGift::default_instance_,
      CMsgClientToGCWrapAndDeliverGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCWrapAndDeliverGift));
  CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_ = file->message_type(47);
  static const int CMsgClientToGCWrapAndDeliverGiftResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_uses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_uses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_window_hours_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, trade_restriction_),
  };
  CMsgClientToGCWrapAndDeliverGiftResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_,
      CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_,
      CMsgClientToGCWrapAndDeliverGiftResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCWrapAndDeliverGiftResponse));
  CMsgClientToGCUnwrapGift_descriptor_ = file->message_type(48);
  static const int CMsgClientToGCUnwrapGift_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, item_id_),
  };
  CMsgClientToGCUnwrapGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnwrapGift_descriptor_,
      CMsgClientToGCUnwrapGift::default_instance_,
      CMsgClientToGCUnwrapGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnwrapGift));
  CMsgClientToGCGetGiftPermissions_descriptor_ = file->message_type(49);
  static const int CMsgClientToGCGetGiftPermissions_offsets_[1] = {
  };
  CMsgClientToGCGetGiftPermissions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCGetGiftPermissions_descriptor_,
      CMsgClientToGCGetGiftPermissions::default_instance_,
      CMsgClientToGCGetGiftPermissions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCGetGiftPermissions));
  CMsgClientToGCGetGiftPermissionsResponse_descriptor_ = file->message_type(50);
  static const int CMsgClientToGCGetGiftPermissionsResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, is_unlimited_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, has_two_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, sender_permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, friendship_age_requirement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, friendship_age_requirement_two_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, friend_permissions_),
  };
  CMsgClientToGCGetGiftPermissionsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCGetGiftPermissionsResponse_descriptor_,
      CMsgClientToGCGetGiftPermissionsResponse::default_instance_,
      CMsgClientToGCGetGiftPermissionsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCGetGiftPermissionsResponse));
  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_descriptor_ = CMsgClientToGCGetGiftPermissionsResponse_descriptor_->nested_type(0);
  static const int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, permission_),
  };
  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_descriptor_,
      CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance_,
      CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission));
  CMsgClientToGCUnpackBundle_descriptor_ = file->message_type(51);
  static const int CMsgClientToGCUnpackBundle_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundle, item_id_),
  };
  CMsgClientToGCUnpackBundle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnpackBundle_descriptor_,
      CMsgClientToGCUnpackBundle::default_instance_,
      CMsgClientToGCUnpackBundle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnpackBundle));
  CMsgClientToGCUnpackBundleResponse_descriptor_ = file->message_type(52);
  static const int CMsgClientToGCUnpackBundleResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, unpacked_item_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, response_),
  };
  CMsgClientToGCUnpackBundleResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnpackBundleResponse_descriptor_,
      CMsgClientToGCUnpackBundleResponse::default_instance_,
      CMsgClientToGCUnpackBundleResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnpackBundleResponse));
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor_ = CMsgClientToGCUnpackBundleResponse_descriptor_->enum_type(0);
  CMsgGCToClientStoreTransactionCompleted_descriptor_ = file->message_type(53);
  static const int CMsgGCToClientStoreTransactionCompleted_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, txn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, item_ids_),
  };
  CMsgGCToClientStoreTransactionCompleted_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToClientStoreTransactionCompleted_descriptor_,
      CMsgGCToClientStoreTransactionCompleted::default_instance_,
      CMsgGCToClientStoreTransactionCompleted_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToClientStoreTransactionCompleted));
  CMsgClientToGCEquipItems_descriptor_ = file->message_type(54);
  static const int CMsgClientToGCEquipItems_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, equips_),
  };
  CMsgClientToGCEquipItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCEquipItems_descriptor_,
      CMsgClientToGCEquipItems::default_instance_,
      CMsgClientToGCEquipItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCEquipItems));
  CMsgClientToGCEquipItemsResponse_descriptor_ = file->message_type(55);
  static const int CMsgClientToGCEquipItemsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, so_cache_version_id_),
  };
  CMsgClientToGCEquipItemsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCEquipItemsResponse_descriptor_,
      CMsgClientToGCEquipItemsResponse::default_instance_,
      CMsgClientToGCEquipItemsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCEquipItemsResponse));
  CMsgClientToGCSetItemStyle_descriptor_ = file->message_type(56);
  static const int CMsgClientToGCSetItemStyle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, style_index_),
  };
  CMsgClientToGCSetItemStyle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCSetItemStyle_descriptor_,
      CMsgClientToGCSetItemStyle::default_instance_,
      CMsgClientToGCSetItemStyle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCSetItemStyle));
  CMsgClientToGCSetItemStyleResponse_descriptor_ = file->message_type(57);
  static const int CMsgClientToGCSetItemStyleResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyleResponse, response_),
  };
  CMsgClientToGCSetItemStyleResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCSetItemStyleResponse_descriptor_,
      CMsgClientToGCSetItemStyleResponse::default_instance_,
      CMsgClientToGCSetItemStyleResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyleResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyleResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCSetItemStyleResponse));
  CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor_ = CMsgClientToGCSetItemStyleResponse_descriptor_->enum_type(0);
  CMsgClientToGCUnlockItemStyle_descriptor_ = file->message_type(58);
  static const int CMsgClientToGCUnlockItemStyle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, item_to_unlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, style_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, consumable_item_ids_),
  };
  CMsgClientToGCUnlockItemStyle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockItemStyle_descriptor_,
      CMsgClientToGCUnlockItemStyle::default_instance_,
      CMsgClientToGCUnlockItemStyle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockItemStyle));
  CMsgClientToGCUnlockItemStyleResponse_descriptor_ = file->message_type(59);
  static const int CMsgClientToGCUnlockItemStyleResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, style_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, style_prereq_),
  };
  CMsgClientToGCUnlockItemStyleResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockItemStyleResponse_descriptor_,
      CMsgClientToGCUnlockItemStyleResponse::default_instance_,
      CMsgClientToGCUnlockItemStyleResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockItemStyleResponse));
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor_ = CMsgClientToGCUnlockItemStyleResponse_descriptor_->enum_type(0);
  CMsgClientToGCSetItemInventoryCategory_descriptor_ = file->message_type(60);
  static const int CMsgClientToGCSetItemInventoryCategory_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, item_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, set_to_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, remove_categories_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, add_categories_),
  };
  CMsgClientToGCSetItemInventoryCategory_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCSetItemInventoryCategory_descriptor_,
      CMsgClientToGCSetItemInventoryCategory::default_instance_,
      CMsgClientToGCSetItemInventoryCategory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCSetItemInventoryCategory));
  CMsgClientToGCUnlockCrate_descriptor_ = file->message_type(61);
  static const int CMsgClientToGCUnlockCrate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, crate_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, key_item_id_),
  };
  CMsgClientToGCUnlockCrate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockCrate_descriptor_,
      CMsgClientToGCUnlockCrate::default_instance_,
      CMsgClientToGCUnlockCrate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockCrate));
  CMsgClientToGCUnlockCrateResponse_descriptor_ = file->message_type(62);
  static const int CMsgClientToGCUnlockCrateResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, granted_items_),
  };
  CMsgClientToGCUnlockCrateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockCrateResponse_descriptor_,
      CMsgClientToGCUnlockCrateResponse::default_instance_,
      CMsgClientToGCUnlockCrateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockCrateResponse));
  CMsgClientToGCUnlockCrateResponse_Item_descriptor_ = CMsgClientToGCUnlockCrateResponse_descriptor_->nested_type(0);
  static const int CMsgClientToGCUnlockCrateResponse_Item_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, def_index_),
  };
  CMsgClientToGCUnlockCrateResponse_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCUnlockCrateResponse_Item_descriptor_,
      CMsgClientToGCUnlockCrateResponse_Item::default_instance_,
      CMsgClientToGCUnlockCrateResponse_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCUnlockCrateResponse_Item));
  CMsgClientToGCRemoveItemAttribute_descriptor_ = file->message_type(63);
  static const int CMsgClientToGCRemoveItemAttribute_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttribute, item_id_),
  };
  CMsgClientToGCRemoveItemAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCRemoveItemAttribute_descriptor_,
      CMsgClientToGCRemoveItemAttribute::default_instance_,
      CMsgClientToGCRemoveItemAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCRemoveItemAttribute));
  CMsgClientToGCRemoveItemAttributeResponse_descriptor_ = file->message_type(64);
  static const int CMsgClientToGCRemoveItemAttributeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, item_id_),
  };
  CMsgClientToGCRemoveItemAttributeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCRemoveItemAttributeResponse_descriptor_,
      CMsgClientToGCRemoveItemAttributeResponse::default_instance_,
      CMsgClientToGCRemoveItemAttributeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCRemoveItemAttributeResponse));
  CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor_ = CMsgClientToGCRemoveItemAttributeResponse_descriptor_->enum_type(0);
  CMsgClientToGCNameItem_descriptor_ = file->message_type(65);
  static const int CMsgClientToGCNameItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, subject_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, tool_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, name_),
  };
  CMsgClientToGCNameItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCNameItem_descriptor_,
      CMsgClientToGCNameItem::default_instance_,
      CMsgClientToGCNameItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCNameItem));
  CMsgClientToGCNameItemResponse_descriptor_ = file->message_type(66);
  static const int CMsgClientToGCNameItemResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, item_id_),
  };
  CMsgClientToGCNameItemResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCNameItemResponse_descriptor_,
      CMsgClientToGCNameItemResponse::default_instance_,
      CMsgClientToGCNameItemResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCNameItemResponse));
  CMsgClientToGCNameItemResponse_ENameItem_descriptor_ = CMsgClientToGCNameItemResponse_descriptor_->enum_type(0);
  CMsgGCSetItemPosition_descriptor_ = file->message_type(67);
  static const int CMsgGCSetItemPosition_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, new_position_),
  };
  CMsgGCSetItemPosition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCSetItemPosition_descriptor_,
      CMsgGCSetItemPosition::default_instance_,
      CMsgGCSetItemPosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCSetItemPosition));
  CAttribute_ItemDynamicRecipeComponent_descriptor_ = file->message_type(68);
  static const int CAttribute_ItemDynamicRecipeComponent_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, attributes_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, items_fulfilled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_rarity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, lootlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, fulfilled_item_id_),
  };
  CAttribute_ItemDynamicRecipeComponent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CAttribute_ItemDynamicRecipeComponent_descriptor_,
      CAttribute_ItemDynamicRecipeComponent::default_instance_,
      CAttribute_ItemDynamicRecipeComponent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CAttribute_ItemDynamicRecipeComponent));
  CProtoItemSocket_descriptor_ = file->message_type(69);
  static const int CProtoItemSocket_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, attr_def_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, required_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, required_hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, gem_def_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, not_tradable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, required_item_slot_),
  };
  CProtoItemSocket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_descriptor_,
      CProtoItemSocket::default_instance_,
      CProtoItemSocket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket));
  CProtoItemSocket_Empty_descriptor_ = file->message_type(70);
  static const int CProtoItemSocket_Empty_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Empty, socket_),
  };
  CProtoItemSocket_Empty_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_Empty_descriptor_,
      CProtoItemSocket_Empty::default_instance_,
      CProtoItemSocket_Empty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Empty, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Empty, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_Empty));
  CProtoItemSocket_Effect_descriptor_ = file->message_type(71);
  static const int CProtoItemSocket_Effect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, effect_),
  };
  CProtoItemSocket_Effect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_Effect_descriptor_,
      CProtoItemSocket_Effect::default_instance_,
      CProtoItemSocket_Effect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_Effect));
  CProtoItemSocket_Color_descriptor_ = file->message_type(72);
  static const int CProtoItemSocket_Color_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, green_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, blue_),
  };
  CProtoItemSocket_Color_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_Color_descriptor_,
      CProtoItemSocket_Color::default_instance_,
      CProtoItemSocket_Color_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_Color));
  CProtoItemSocket_Strange_descriptor_ = file->message_type(73);
  static const int CProtoItemSocket_Strange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, strange_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, strange_value_),
  };
  CProtoItemSocket_Strange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_Strange_descriptor_,
      CProtoItemSocket_Strange::default_instance_,
      CProtoItemSocket_Strange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_Strange));
  CProtoItemSocket_Spectator_descriptor_ = file->message_type(74);
  static const int CProtoItemSocket_Spectator_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, games_viewed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, corporation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, team_id_),
  };
  CProtoItemSocket_Spectator_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_Spectator_descriptor_,
      CProtoItemSocket_Spectator::default_instance_,
      CProtoItemSocket_Spectator_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_Spectator));
  CProtoItemSocket_AssetModifier_descriptor_ = file->message_type(75);
  static const int CProtoItemSocket_AssetModifier_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, asset_modifier_),
  };
  CProtoItemSocket_AssetModifier_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_AssetModifier_descriptor_,
      CProtoItemSocket_AssetModifier::default_instance_,
      CProtoItemSocket_AssetModifier_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_AssetModifier));
  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor_ = file->message_type(76);
  static const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, asset_modifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, anim_modifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, ability_effect_),
  };
  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor_,
      CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance_,
      CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY));
  CProtoItemSocket_Autograph_descriptor_ = file->message_type(77);
  static const int CProtoItemSocket_Autograph_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, autograph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, autograph_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, autograph_score_),
  };
  CProtoItemSocket_Autograph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_Autograph_descriptor_,
      CProtoItemSocket_Autograph::default_instance_,
      CProtoItemSocket_Autograph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_Autograph));
  CProtoItemSocket_StaticVisuals_descriptor_ = file->message_type(78);
  static const int CProtoItemSocket_StaticVisuals_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_StaticVisuals, socket_),
  };
  CProtoItemSocket_StaticVisuals_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CProtoItemSocket_StaticVisuals_descriptor_,
      CProtoItemSocket_StaticVisuals::default_instance_,
      CProtoItemSocket_StaticVisuals_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_StaticVisuals, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_StaticVisuals, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CProtoItemSocket_StaticVisuals));
  CAttribute_String_descriptor_ = file->message_type(79);
  static const int CAttribute_String_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_String, value_),
  };
  CAttribute_String_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CAttribute_String_descriptor_,
      CAttribute_String::default_instance_,
      CAttribute_String_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_String, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_String, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CAttribute_String));
  CWorkshop_GetItemDailyRevenue_Request_descriptor_ = file->message_type(80);
  static const int CWorkshop_GetItemDailyRevenue_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, date_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, date_end_),
  };
  CWorkshop_GetItemDailyRevenue_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CWorkshop_GetItemDailyRevenue_Request_descriptor_,
      CWorkshop_GetItemDailyRevenue_Request::default_instance_,
      CWorkshop_GetItemDailyRevenue_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CWorkshop_GetItemDailyRevenue_Request));
  CWorkshop_GetItemDailyRevenue_Response_descriptor_ = file->message_type(81);
  static const int CWorkshop_GetItemDailyRevenue_Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response, country_revenue_),
  };
  CWorkshop_GetItemDailyRevenue_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CWorkshop_GetItemDailyRevenue_Response_descriptor_,
      CWorkshop_GetItemDailyRevenue_Response::default_instance_,
      CWorkshop_GetItemDailyRevenue_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CWorkshop_GetItemDailyRevenue_Response));
  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_descriptor_ = CWorkshop_GetItemDailyRevenue_Response_descriptor_->nested_type(0);
  static const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, country_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, revenue_usd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, units_),
  };
  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_descriptor_,
      CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance_,
      CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue));
  CMsgSQLGCToGCGrantBackpackSlots_descriptor_ = file->message_type(82);
  static const int CMsgSQLGCToGCGrantBackpackSlots_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, add_slots_),
  };
  CMsgSQLGCToGCGrantBackpackSlots_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSQLGCToGCGrantBackpackSlots_descriptor_,
      CMsgSQLGCToGCGrantBackpackSlots::default_instance_,
      CMsgSQLGCToGCGrantBackpackSlots_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSQLGCToGCGrantBackpackSlots));
  CMsgClientToGCLookupAccountName_descriptor_ = file->message_type(83);
  static const int CMsgClientToGCLookupAccountName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountName, account_id_),
  };
  CMsgClientToGCLookupAccountName_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCLookupAccountName_descriptor_,
      CMsgClientToGCLookupAccountName::default_instance_,
      CMsgClientToGCLookupAccountName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountName, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountName, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCLookupAccountName));
  CMsgClientToGCLookupAccountNameResponse_descriptor_ = file->message_type(84);
  static const int CMsgClientToGCLookupAccountNameResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, account_name_),
  };
  CMsgClientToGCLookupAccountNameResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCLookupAccountNameResponse_descriptor_,
      CMsgClientToGCLookupAccountNameResponse::default_instance_,
      CMsgClientToGCLookupAccountNameResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCLookupAccountNameResponse));
  CMsgGCToGCDevRevokeUserItems_descriptor_ = file->message_type(85);
  static const int CMsgGCToGCDevRevokeUserItems_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCDevRevokeUserItems, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCDevRevokeUserItems, audit_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCDevRevokeUserItems, delete_audit_history_),
  };
  CMsgGCToGCDevRevokeUserItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCDevRevokeUserItems_descriptor_,
      CMsgGCToGCDevRevokeUserItems::default_instance_,
      CMsgGCToGCDevRevokeUserItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCDevRevokeUserItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCDevRevokeUserItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCDevRevokeUserItems));
  CMsgClientToGCCreateStaticRecipe_descriptor_ = file->message_type(86);
  static const int CMsgClientToGCCreateStaticRecipe_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, recipe_def_index_),
  };
  CMsgClientToGCCreateStaticRecipe_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCCreateStaticRecipe_descriptor_,
      CMsgClientToGCCreateStaticRecipe::default_instance_,
      CMsgClientToGCCreateStaticRecipe_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCCreateStaticRecipe));
  CMsgClientToGCCreateStaticRecipe_Item_descriptor_ = CMsgClientToGCCreateStaticRecipe_descriptor_->nested_type(0);
  static const int CMsgClientToGCCreateStaticRecipe_Item_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, slot_id_),
  };
  CMsgClientToGCCreateStaticRecipe_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCCreateStaticRecipe_Item_descriptor_,
      CMsgClientToGCCreateStaticRecipe_Item::default_instance_,
      CMsgClientToGCCreateStaticRecipe_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCCreateStaticRecipe_Item));
  CMsgClientToGCCreateStaticRecipeResponse_descriptor_ = file->message_type(87);
  static const int CMsgClientToGCCreateStaticRecipeResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, output_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, input_errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, additional_outputs_),
  };
  CMsgClientToGCCreateStaticRecipeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCCreateStaticRecipeResponse_descriptor_,
      CMsgClientToGCCreateStaticRecipeResponse::default_instance_,
      CMsgClientToGCCreateStaticRecipeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCCreateStaticRecipeResponse));
  CMsgClientToGCCreateStaticRecipeResponse_OutputItem_descriptor_ = CMsgClientToGCCreateStaticRecipeResponse_descriptor_->nested_type(0);
  static const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, def_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, slot_id_),
  };
  CMsgClientToGCCreateStaticRecipeResponse_OutputItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCCreateStaticRecipeResponse_OutputItem_descriptor_,
      CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance_,
      CMsgClientToGCCreateStaticRecipeResponse_OutputItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCCreateStaticRecipeResponse_OutputItem));
  CMsgClientToGCCreateStaticRecipeResponse_InputError_descriptor_ = CMsgClientToGCCreateStaticRecipeResponse_descriptor_->nested_type(1);
  static const int CMsgClientToGCCreateStaticRecipeResponse_InputError_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, error_),
  };
  CMsgClientToGCCreateStaticRecipeResponse_InputError_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCCreateStaticRecipeResponse_InputError_descriptor_,
      CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance_,
      CMsgClientToGCCreateStaticRecipeResponse_InputError_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCCreateStaticRecipeResponse_InputError));
  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_descriptor_ = CMsgClientToGCCreateStaticRecipeResponse_descriptor_->nested_type(2);
  static const int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, value_),
  };
  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_descriptor_,
      CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance_,
      CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput));
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor_ = CMsgClientToGCCreateStaticRecipeResponse_descriptor_->enum_type(0);
  CMsgProcessTransactionOrder_descriptor_ = file->message_type(88);
  static const int CMsgProcessTransactionOrder_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, txn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, steam_txn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, partner_txn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, steam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, time_stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, watermark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, purchase_report_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, items_),
  };
  CMsgProcessTransactionOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgProcessTransactionOrder_descriptor_,
      CMsgProcessTransactionOrder::default_instance_,
      CMsgProcessTransactionOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgProcessTransactionOrder));
  CMsgProcessTransactionOrder_Item_descriptor_ = CMsgProcessTransactionOrder_descriptor_->nested_type(0);
  static const int CMsgProcessTransactionOrder_Item_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, item_def_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, item_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, category_desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, store_purchase_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, source_reference_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, parent_stack_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, default_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, is_user_facing_),
  };
  CMsgProcessTransactionOrder_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgProcessTransactionOrder_Item_descriptor_,
      CMsgProcessTransactionOrder_Item::default_instance_,
      CMsgProcessTransactionOrder_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgProcessTransactionOrder_Item));
  CMsgGCToGCStoreProcessCDKeyTransaction_descriptor_ = file->message_type(89);
  static const int CMsgGCToGCStoreProcessCDKeyTransaction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, reason_code_),
  };
  CMsgGCToGCStoreProcessCDKeyTransaction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCStoreProcessCDKeyTransaction_descriptor_,
      CMsgGCToGCStoreProcessCDKeyTransaction::default_instance_,
      CMsgGCToGCStoreProcessCDKeyTransaction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCStoreProcessCDKeyTransaction));
  CMsgGCToGCStoreProcessCDKeyTransactionResponse_descriptor_ = file->message_type(90);
  static const int CMsgGCToGCStoreProcessCDKeyTransactionResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransactionResponse, success_),
  };
  CMsgGCToGCStoreProcessCDKeyTransactionResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCStoreProcessCDKeyTransactionResponse_descriptor_,
      CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance_,
      CMsgGCToGCStoreProcessCDKeyTransactionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransactionResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransactionResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCStoreProcessCDKeyTransactionResponse));
  CMsgGCToGCStoreProcessSettlement_descriptor_ = file->message_type(91);
  static const int CMsgGCToGCStoreProcessSettlement_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, partner_),
  };
  CMsgGCToGCStoreProcessSettlement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCStoreProcessSettlement_descriptor_,
      CMsgGCToGCStoreProcessSettlement::default_instance_,
      CMsgGCToGCStoreProcessSettlement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCStoreProcessSettlement));
  CMsgGCToGCStoreProcessSettlementResponse_descriptor_ = file->message_type(92);
  static const int CMsgGCToGCStoreProcessSettlementResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlementResponse, success_),
  };
  CMsgGCToGCStoreProcessSettlementResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCStoreProcessSettlementResponse_descriptor_,
      CMsgGCToGCStoreProcessSettlementResponse::default_instance_,
      CMsgGCToGCStoreProcessSettlementResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlementResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlementResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCStoreProcessSettlementResponse));
  CMsgGCToGCBroadcastConsoleCommand_descriptor_ = file->message_type(93);
  static const int CMsgGCToGCBroadcastConsoleCommand_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, con_command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, report_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, sending_gc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, output_initiator_),
  };
  CMsgGCToGCBroadcastConsoleCommand_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCBroadcastConsoleCommand_descriptor_,
      CMsgGCToGCBroadcastConsoleCommand::default_instance_,
      CMsgGCToGCBroadcastConsoleCommand_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCBroadcastConsoleCommand));
  CMsgGCToGCConsoleOutput_descriptor_ = file->message_type(94);
  static const int CMsgGCToGCConsoleOutput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, initiator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, sending_gc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, msgs_),
  };
  CMsgGCToGCConsoleOutput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCConsoleOutput_descriptor_,
      CMsgGCToGCConsoleOutput::default_instance_,
      CMsgGCToGCConsoleOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCConsoleOutput));
  CMsgGCToGCConsoleOutput_OutputLine_descriptor_ = CMsgGCToGCConsoleOutput_descriptor_->nested_type(0);
  static const int CMsgGCToGCConsoleOutput_OutputLine_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, spew_level_),
  };
  CMsgGCToGCConsoleOutput_OutputLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCConsoleOutput_OutputLine_descriptor_,
      CMsgGCToGCConsoleOutput_OutputLine::default_instance_,
      CMsgGCToGCConsoleOutput_OutputLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCConsoleOutput_OutputLine));
  CMsgItemAges_descriptor_ = file->message_type(95);
  static const int CMsgItemAges_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges, max_item_id_timestamps_),
  };
  CMsgItemAges_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgItemAges_descriptor_,
      CMsgItemAges::default_instance_,
      CMsgItemAges_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgItemAges));
  CMsgItemAges_MaxItemIDTimestamp_descriptor_ = CMsgItemAges_descriptor_->nested_type(0);
  static const int CMsgItemAges_MaxItemIDTimestamp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, max_item_id_),
  };
  CMsgItemAges_MaxItemIDTimestamp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgItemAges_MaxItemIDTimestamp_descriptor_,
      CMsgItemAges_MaxItemIDTimestamp::default_instance_,
      CMsgItemAges_MaxItemIDTimestamp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgItemAges_MaxItemIDTimestamp));
  CMsgGCToGCInternalTestMsg_descriptor_ = file->message_type(96);
  static const int CMsgGCToGCInternalTestMsg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, sending_gc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, sender_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, message_body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, job_id_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, job_id_target_),
  };
  CMsgGCToGCInternalTestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCInternalTestMsg_descriptor_,
      CMsgGCToGCInternalTestMsg::default_instance_,
      CMsgGCToGCInternalTestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCInternalTestMsg));
  CMsgGCToGCClientServerVersionsUpdated_descriptor_ = file->message_type(97);
  static const int CMsgGCToGCClientServerVersionsUpdated_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, client_min_allowed_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, client_active_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, server_active_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, server_deployed_version_),
  };
  CMsgGCToGCClientServerVersionsUpdated_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCToGCClientServerVersionsUpdated_descriptor_,
      CMsgGCToGCClientServerVersionsUpdated::default_instance_,
      CMsgGCToGCClientServerVersionsUpdated_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCToGCClientServerVersionsUpdated));
  EGCItemMsg_descriptor_ = file->enum_type(0);
  EItemPurgatoryResponse_Finalize_descriptor_ = file->enum_type(1);
  EItemPurgatoryResponse_Refund_descriptor_ = file->enum_type(2);
  EGCMsgInitiateTradeResponse_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_econ_5fgcmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgApplyAutograph_descriptor_, &CMsgApplyAutograph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgAdjustItemEquippedState_descriptor_, &CMsgAdjustItemEquippedState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgEconPlayerStrangeCountAdjustment_descriptor_, &CMsgEconPlayerStrangeCountAdjustment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_, &CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_FinalizePurchase_descriptor_, &CMsgRequestItemPurgatory_FinalizePurchase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_, &CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_RefundPurchase_descriptor_, &CMsgRequestItemPurgatory_RefundPurchase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_, &CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgCraftingResponse_descriptor_, &CMsgCraftingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesData_descriptor_, &CMsgGCRequestStoreSalesData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesDataResponse_descriptor_, &CMsgGCRequestStoreSalesDataResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesDataResponse_Price_descriptor_, &CMsgGCRequestStoreSalesDataResponse_Price::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_, &CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCPingRequest_descriptor_, &CMsgGCToGCPingRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCPingResponse_descriptor_, &CMsgGCToGCPingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserSessionServer_descriptor_, &CMsgGCToGCGetUserSessionServer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserSessionServerResponse_descriptor_, &CMsgGCToGCGetUserSessionServerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserServerMembers_descriptor_, &CMsgGCToGCGetUserServerMembers::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserServerMembersResponse_descriptor_, &CMsgGCToGCGetUserServerMembersResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLookupMultipleAccountNames_descriptor_, &CMsgLookupMultipleAccountNames::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLookupMultipleAccountNamesResponse_descriptor_, &CMsgLookupMultipleAccountNamesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLookupMultipleAccountNamesResponse_Account_descriptor_, &CMsgLookupMultipleAccountNamesResponse_Account::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserPCBangNo_descriptor_, &CMsgGCToGCGetUserPCBangNo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGetUserPCBangNoResponse_descriptor_, &CMsgGCToGCGetUserPCBangNoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestCrateItems_descriptor_, &CMsgRequestCrateItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRequestCrateItemsResponse_descriptor_, &CMsgRequestCrateItemsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCCanUseDropRateBonus_descriptor_, &CMsgGCToGCCanUseDropRateBonus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSQLAddDropRateBonus_descriptor_, &CMsgSQLAddDropRateBonus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSQLUpgradeBattleBooster_descriptor_, &CMsgSQLUpgradeBattleBooster::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCRefreshSOCache_descriptor_, &CMsgGCToGCRefreshSOCache::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCCheckAccountTradeStatus_descriptor_, &CMsgGCToGCCheckAccountTradeStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_, &CMsgGCToGCCheckAccountTradeStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_descriptor_, &CMsgGCToGCGrantAccountRolledItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_Item_descriptor_, &CMsgGCToGCGrantAccountRolledItems_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_, &CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_, &CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_, &CMsgGCToGCGrantSelfMadeItemToAccount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgUseItem_descriptor_, &CMsgUseItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgServerUseItem_descriptor_, &CMsgServerUseItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgUseMultipleItems_descriptor_, &CMsgUseMultipleItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerBalanceRequest_descriptor_, &CMsgGCPartnerBalanceRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerBalanceResponse_descriptor_, &CMsgGCPartnerBalanceResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGCStoreRechargeRedirect_LineItem_descriptor_, &CGCStoreRechargeRedirect_LineItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerRechargeRedirectURLRequest_descriptor_, &CMsgGCPartnerRechargeRedirectURLRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCPartnerRechargeRedirectURLResponse_descriptor_, &CMsgGCPartnerRechargeRedirectURLResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_, &CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgCraftStatue_descriptor_, &CMsgCraftStatue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRedeemCode_descriptor_, &CMsgRedeemCode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRedeemCodeResponse_descriptor_, &CMsgRedeemCodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgDevNewItemRequest_descriptor_, &CMsgDevNewItemRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgDevNewItemRequestResponse_descriptor_, &CMsgDevNewItemRequestResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCAddGiftItem_descriptor_, &CMsgGCAddGiftItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCWrapAndDeliverGift_descriptor_, &CMsgClientToGCWrapAndDeliverGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_, &CMsgClientToGCWrapAndDeliverGiftResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnwrapGift_descriptor_, &CMsgClientToGCUnwrapGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCGetGiftPermissions_descriptor_, &CMsgClientToGCGetGiftPermissions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCGetGiftPermissionsResponse_descriptor_, &CMsgClientToGCGetGiftPermissionsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_descriptor_, &CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnpackBundle_descriptor_, &CMsgClientToGCUnpackBundle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnpackBundleResponse_descriptor_, &CMsgClientToGCUnpackBundleResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToClientStoreTransactionCompleted_descriptor_, &CMsgGCToClientStoreTransactionCompleted::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCEquipItems_descriptor_, &CMsgClientToGCEquipItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCEquipItemsResponse_descriptor_, &CMsgClientToGCEquipItemsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCSetItemStyle_descriptor_, &CMsgClientToGCSetItemStyle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCSetItemStyleResponse_descriptor_, &CMsgClientToGCSetItemStyleResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockItemStyle_descriptor_, &CMsgClientToGCUnlockItemStyle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockItemStyleResponse_descriptor_, &CMsgClientToGCUnlockItemStyleResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCSetItemInventoryCategory_descriptor_, &CMsgClientToGCSetItemInventoryCategory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockCrate_descriptor_, &CMsgClientToGCUnlockCrate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockCrateResponse_descriptor_, &CMsgClientToGCUnlockCrateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCUnlockCrateResponse_Item_descriptor_, &CMsgClientToGCUnlockCrateResponse_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCRemoveItemAttribute_descriptor_, &CMsgClientToGCRemoveItemAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCRemoveItemAttributeResponse_descriptor_, &CMsgClientToGCRemoveItemAttributeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCNameItem_descriptor_, &CMsgClientToGCNameItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCNameItemResponse_descriptor_, &CMsgClientToGCNameItemResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCSetItemPosition_descriptor_, &CMsgGCSetItemPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CAttribute_ItemDynamicRecipeComponent_descriptor_, &CAttribute_ItemDynamicRecipeComponent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_descriptor_, &CProtoItemSocket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_Empty_descriptor_, &CProtoItemSocket_Empty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_Effect_descriptor_, &CProtoItemSocket_Effect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_Color_descriptor_, &CProtoItemSocket_Color::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_Strange_descriptor_, &CProtoItemSocket_Strange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_Spectator_descriptor_, &CProtoItemSocket_Spectator::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_AssetModifier_descriptor_, &CProtoItemSocket_AssetModifier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor_, &CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_Autograph_descriptor_, &CProtoItemSocket_Autograph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CProtoItemSocket_StaticVisuals_descriptor_, &CProtoItemSocket_StaticVisuals::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CAttribute_String_descriptor_, &CAttribute_String::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CWorkshop_GetItemDailyRevenue_Request_descriptor_, &CWorkshop_GetItemDailyRevenue_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CWorkshop_GetItemDailyRevenue_Response_descriptor_, &CWorkshop_GetItemDailyRevenue_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_descriptor_, &CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSQLGCToGCGrantBackpackSlots_descriptor_, &CMsgSQLGCToGCGrantBackpackSlots::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCLookupAccountName_descriptor_, &CMsgClientToGCLookupAccountName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCLookupAccountNameResponse_descriptor_, &CMsgClientToGCLookupAccountNameResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCDevRevokeUserItems_descriptor_, &CMsgGCToGCDevRevokeUserItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCCreateStaticRecipe_descriptor_, &CMsgClientToGCCreateStaticRecipe::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCCreateStaticRecipe_Item_descriptor_, &CMsgClientToGCCreateStaticRecipe_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCCreateStaticRecipeResponse_descriptor_, &CMsgClientToGCCreateStaticRecipeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCCreateStaticRecipeResponse_OutputItem_descriptor_, &CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCCreateStaticRecipeResponse_InputError_descriptor_, &CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_descriptor_, &CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgProcessTransactionOrder_descriptor_, &CMsgProcessTransactionOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgProcessTransactionOrder_Item_descriptor_, &CMsgProcessTransactionOrder_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCStoreProcessCDKeyTransaction_descriptor_, &CMsgGCToGCStoreProcessCDKeyTransaction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCStoreProcessCDKeyTransactionResponse_descriptor_, &CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCStoreProcessSettlement_descriptor_, &CMsgGCToGCStoreProcessSettlement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCStoreProcessSettlementResponse_descriptor_, &CMsgGCToGCStoreProcessSettlementResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCBroadcastConsoleCommand_descriptor_, &CMsgGCToGCBroadcastConsoleCommand::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCConsoleOutput_descriptor_, &CMsgGCToGCConsoleOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCConsoleOutput_OutputLine_descriptor_, &CMsgGCToGCConsoleOutput_OutputLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgItemAges_descriptor_, &CMsgItemAges::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgItemAges_MaxItemIDTimestamp_descriptor_, &CMsgItemAges_MaxItemIDTimestamp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCInternalTestMsg_descriptor_, &CMsgGCToGCInternalTestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCToGCClientServerVersionsUpdated_descriptor_, &CMsgGCToGCClientServerVersionsUpdated::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_econ_5fgcmessages_2eproto() {
  delete CMsgApplyAutograph::default_instance_;
  delete CMsgApplyAutograph_reflection_;
  delete CMsgAdjustItemEquippedState::default_instance_;
  delete CMsgAdjustItemEquippedState_reflection_;
  delete CMsgEconPlayerStrangeCountAdjustment::default_instance_;
  delete CMsgEconPlayerStrangeCountAdjustment_reflection_;
  delete CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_;
  delete CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_;
  delete CMsgRequestItemPurgatory_FinalizePurchase::default_instance_;
  delete CMsgRequestItemPurgatory_FinalizePurchase_reflection_;
  delete CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_;
  delete CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_;
  delete CMsgRequestItemPurgatory_RefundPurchase::default_instance_;
  delete CMsgRequestItemPurgatory_RefundPurchase_reflection_;
  delete CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_;
  delete CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_;
  delete CMsgCraftingResponse::default_instance_;
  delete CMsgCraftingResponse_reflection_;
  delete CMsgGCRequestStoreSalesData::default_instance_;
  delete CMsgGCRequestStoreSalesData_reflection_;
  delete CMsgGCRequestStoreSalesDataResponse::default_instance_;
  delete CMsgGCRequestStoreSalesDataResponse_reflection_;
  delete CMsgGCRequestStoreSalesDataResponse_Price::default_instance_;
  delete CMsgGCRequestStoreSalesDataResponse_Price_reflection_;
  delete CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_;
  delete CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_;
  delete CMsgGCToGCPingRequest::default_instance_;
  delete CMsgGCToGCPingRequest_reflection_;
  delete CMsgGCToGCPingResponse::default_instance_;
  delete CMsgGCToGCPingResponse_reflection_;
  delete CMsgGCToGCGetUserSessionServer::default_instance_;
  delete CMsgGCToGCGetUserSessionServer_reflection_;
  delete CMsgGCToGCGetUserSessionServerResponse::default_instance_;
  delete CMsgGCToGCGetUserSessionServerResponse_reflection_;
  delete CMsgGCToGCGetUserServerMembers::default_instance_;
  delete CMsgGCToGCGetUserServerMembers_reflection_;
  delete CMsgGCToGCGetUserServerMembersResponse::default_instance_;
  delete CMsgGCToGCGetUserServerMembersResponse_reflection_;
  delete CMsgLookupMultipleAccountNames::default_instance_;
  delete CMsgLookupMultipleAccountNames_reflection_;
  delete CMsgLookupMultipleAccountNamesResponse::default_instance_;
  delete CMsgLookupMultipleAccountNamesResponse_reflection_;
  delete CMsgLookupMultipleAccountNamesResponse_Account::default_instance_;
  delete CMsgLookupMultipleAccountNamesResponse_Account_reflection_;
  delete CMsgGCToGCGetUserPCBangNo::default_instance_;
  delete CMsgGCToGCGetUserPCBangNo_reflection_;
  delete CMsgGCToGCGetUserPCBangNoResponse::default_instance_;
  delete CMsgGCToGCGetUserPCBangNoResponse_reflection_;
  delete CMsgRequestCrateItems::default_instance_;
  delete CMsgRequestCrateItems_reflection_;
  delete CMsgRequestCrateItemsResponse::default_instance_;
  delete CMsgRequestCrateItemsResponse_reflection_;
  delete CMsgGCToGCCanUseDropRateBonus::default_instance_;
  delete CMsgGCToGCCanUseDropRateBonus_reflection_;
  delete CMsgSQLAddDropRateBonus::default_instance_;
  delete CMsgSQLAddDropRateBonus_reflection_;
  delete CMsgSQLUpgradeBattleBooster::default_instance_;
  delete CMsgSQLUpgradeBattleBooster_reflection_;
  delete CMsgGCToGCRefreshSOCache::default_instance_;
  delete CMsgGCToGCRefreshSOCache_reflection_;
  delete CMsgGCToGCCheckAccountTradeStatus::default_instance_;
  delete CMsgGCToGCCheckAccountTradeStatus_reflection_;
  delete CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_;
  delete CMsgGCToGCCheckAccountTradeStatusResponse_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems_Item::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_;
  delete CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_;
  delete CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_;
  delete CMsgGCToGCGrantSelfMadeItemToAccount_reflection_;
  delete CMsgUseItem::default_instance_;
  delete CMsgUseItem_reflection_;
  delete CMsgServerUseItem::default_instance_;
  delete CMsgServerUseItem_reflection_;
  delete CMsgUseMultipleItems::default_instance_;
  delete CMsgUseMultipleItems_reflection_;
  delete CMsgGCPartnerBalanceRequest::default_instance_;
  delete CMsgGCPartnerBalanceRequest_reflection_;
  delete CMsgGCPartnerBalanceResponse::default_instance_;
  delete CMsgGCPartnerBalanceResponse_reflection_;
  delete CGCStoreRechargeRedirect_LineItem::default_instance_;
  delete CGCStoreRechargeRedirect_LineItem_reflection_;
  delete CMsgGCPartnerRechargeRedirectURLRequest::default_instance_;
  delete CMsgGCPartnerRechargeRedirectURLRequest_reflection_;
  delete CMsgGCPartnerRechargeRedirectURLResponse::default_instance_;
  delete CMsgGCPartnerRechargeRedirectURLResponse_reflection_;
  delete CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_;
  delete CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_;
  delete CMsgCraftStatue::default_instance_;
  delete CMsgCraftStatue_reflection_;
  delete CMsgRedeemCode::default_instance_;
  delete CMsgRedeemCode_reflection_;
  delete CMsgRedeemCodeResponse::default_instance_;
  delete CMsgRedeemCodeResponse_reflection_;
  delete CMsgDevNewItemRequest::default_instance_;
  delete CMsgDevNewItemRequest_reflection_;
  delete CMsgDevNewItemRequestResponse::default_instance_;
  delete CMsgDevNewItemRequestResponse_reflection_;
  delete CMsgGCAddGiftItem::default_instance_;
  delete CMsgGCAddGiftItem_reflection_;
  delete CMsgClientToGCWrapAndDeliverGift::default_instance_;
  delete CMsgClientToGCWrapAndDeliverGift_reflection_;
  delete CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_;
  delete CMsgClientToGCWrapAndDeliverGiftResponse_reflection_;
  delete CMsgClientToGCUnwrapGift::default_instance_;
  delete CMsgClientToGCUnwrapGift_reflection_;
  delete CMsgClientToGCGetGiftPermissions::default_instance_;
  delete CMsgClientToGCGetGiftPermissions_reflection_;
  delete CMsgClientToGCGetGiftPermissionsResponse::default_instance_;
  delete CMsgClientToGCGetGiftPermissionsResponse_reflection_;
  delete CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance_;
  delete CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_reflection_;
  delete CMsgClientToGCUnpackBundle::default_instance_;
  delete CMsgClientToGCUnpackBundle_reflection_;
  delete CMsgClientToGCUnpackBundleResponse::default_instance_;
  delete CMsgClientToGCUnpackBundleResponse_reflection_;
  delete CMsgGCToClientStoreTransactionCompleted::default_instance_;
  delete CMsgGCToClientStoreTransactionCompleted_reflection_;
  delete CMsgClientToGCEquipItems::default_instance_;
  delete CMsgClientToGCEquipItems_reflection_;
  delete CMsgClientToGCEquipItemsResponse::default_instance_;
  delete CMsgClientToGCEquipItemsResponse_reflection_;
  delete CMsgClientToGCSetItemStyle::default_instance_;
  delete CMsgClientToGCSetItemStyle_reflection_;
  delete CMsgClientToGCSetItemStyleResponse::default_instance_;
  delete CMsgClientToGCSetItemStyleResponse_reflection_;
  delete CMsgClientToGCUnlockItemStyle::default_instance_;
  delete CMsgClientToGCUnlockItemStyle_reflection_;
  delete CMsgClientToGCUnlockItemStyleResponse::default_instance_;
  delete CMsgClientToGCUnlockItemStyleResponse_reflection_;
  delete CMsgClientToGCSetItemInventoryCategory::default_instance_;
  delete CMsgClientToGCSetItemInventoryCategory_reflection_;
  delete CMsgClientToGCUnlockCrate::default_instance_;
  delete CMsgClientToGCUnlockCrate_reflection_;
  delete CMsgClientToGCUnlockCrateResponse::default_instance_;
  delete CMsgClientToGCUnlockCrateResponse_reflection_;
  delete CMsgClientToGCUnlockCrateResponse_Item::default_instance_;
  delete CMsgClientToGCUnlockCrateResponse_Item_reflection_;
  delete CMsgClientToGCRemoveItemAttribute::default_instance_;
  delete CMsgClientToGCRemoveItemAttribute_reflection_;
  delete CMsgClientToGCRemoveItemAttributeResponse::default_instance_;
  delete CMsgClientToGCRemoveItemAttributeResponse_reflection_;
  delete CMsgClientToGCNameItem::default_instance_;
  delete CMsgClientToGCNameItem_reflection_;
  delete CMsgClientToGCNameItemResponse::default_instance_;
  delete CMsgClientToGCNameItemResponse_reflection_;
  delete CMsgGCSetItemPosition::default_instance_;
  delete CMsgGCSetItemPosition_reflection_;
  delete CAttribute_ItemDynamicRecipeComponent::default_instance_;
  delete CAttribute_ItemDynamicRecipeComponent_reflection_;
  delete CProtoItemSocket::default_instance_;
  delete CProtoItemSocket_reflection_;
  delete CProtoItemSocket_Empty::default_instance_;
  delete CProtoItemSocket_Empty_reflection_;
  delete CProtoItemSocket_Effect::default_instance_;
  delete CProtoItemSocket_Effect_reflection_;
  delete CProtoItemSocket_Color::default_instance_;
  delete CProtoItemSocket_Color_reflection_;
  delete CProtoItemSocket_Strange::default_instance_;
  delete CProtoItemSocket_Strange_reflection_;
  delete CProtoItemSocket_Spectator::default_instance_;
  delete CProtoItemSocket_Spectator_reflection_;
  delete CProtoItemSocket_AssetModifier::default_instance_;
  delete CProtoItemSocket_AssetModifier_reflection_;
  delete CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance_;
  delete CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_reflection_;
  delete CProtoItemSocket_Autograph::default_instance_;
  delete CProtoItemSocket_Autograph_reflection_;
  delete CProtoItemSocket_StaticVisuals::default_instance_;
  delete CProtoItemSocket_StaticVisuals_reflection_;
  delete CAttribute_String::default_instance_;
  delete CAttribute_String_reflection_;
  delete CWorkshop_GetItemDailyRevenue_Request::default_instance_;
  delete CWorkshop_GetItemDailyRevenue_Request_reflection_;
  delete CWorkshop_GetItemDailyRevenue_Response::default_instance_;
  delete CWorkshop_GetItemDailyRevenue_Response_reflection_;
  delete CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance_;
  delete CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_reflection_;
  delete CMsgSQLGCToGCGrantBackpackSlots::default_instance_;
  delete CMsgSQLGCToGCGrantBackpackSlots_reflection_;
  delete CMsgClientToGCLookupAccountName::default_instance_;
  delete CMsgClientToGCLookupAccountName_reflection_;
  delete CMsgClientToGCLookupAccountNameResponse::default_instance_;
  delete CMsgClientToGCLookupAccountNameResponse_reflection_;
  delete CMsgGCToGCDevRevokeUserItems::default_instance_;
  delete CMsgGCToGCDevRevokeUserItems_reflection_;
  delete CMsgClientToGCCreateStaticRecipe::default_instance_;
  delete CMsgClientToGCCreateStaticRecipe_reflection_;
  delete CMsgClientToGCCreateStaticRecipe_Item::default_instance_;
  delete CMsgClientToGCCreateStaticRecipe_Item_reflection_;
  delete CMsgClientToGCCreateStaticRecipeResponse::default_instance_;
  delete CMsgClientToGCCreateStaticRecipeResponse_reflection_;
  delete CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance_;
  delete CMsgClientToGCCreateStaticRecipeResponse_OutputItem_reflection_;
  delete CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance_;
  delete CMsgClientToGCCreateStaticRecipeResponse_InputError_reflection_;
  delete CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance_;
  delete CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_reflection_;
  delete CMsgProcessTransactionOrder::default_instance_;
  delete CMsgProcessTransactionOrder_reflection_;
  delete CMsgProcessTransactionOrder_Item::default_instance_;
  delete CMsgProcessTransactionOrder_Item_reflection_;
  delete CMsgGCToGCStoreProcessCDKeyTransaction::default_instance_;
  delete CMsgGCToGCStoreProcessCDKeyTransaction_reflection_;
  delete CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance_;
  delete CMsgGCToGCStoreProcessCDKeyTransactionResponse_reflection_;
  delete CMsgGCToGCStoreProcessSettlement::default_instance_;
  delete CMsgGCToGCStoreProcessSettlement_reflection_;
  delete CMsgGCToGCStoreProcessSettlementResponse::default_instance_;
  delete CMsgGCToGCStoreProcessSettlementResponse_reflection_;
  delete CMsgGCToGCBroadcastConsoleCommand::default_instance_;
  delete CMsgGCToGCBroadcastConsoleCommand_reflection_;
  delete CMsgGCToGCConsoleOutput::default_instance_;
  delete CMsgGCToGCConsoleOutput_reflection_;
  delete CMsgGCToGCConsoleOutput_OutputLine::default_instance_;
  delete CMsgGCToGCConsoleOutput_OutputLine_reflection_;
  delete CMsgItemAges::default_instance_;
  delete CMsgItemAges_reflection_;
  delete CMsgItemAges_MaxItemIDTimestamp::default_instance_;
  delete CMsgItemAges_MaxItemIDTimestamp_reflection_;
  delete CMsgGCToGCInternalTestMsg::default_instance_;
  delete CMsgGCToGCInternalTestMsg_reflection_;
  delete CMsgGCToGCClientServerVersionsUpdated::default_instance_;
  delete CMsgGCToGCClientServerVersionsUpdated_reflection_;
}

void protobuf_AddDesc_econ_5fgcmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_steammessages_2eproto();
  ::protobuf_AddDesc_econ_5fshared_5fenums_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025econ_gcmessages.proto\032\023steammessages.p"
    "roto\032\027econ_shared_enums.proto\"E\n\022CMsgApp"
    "lyAutograph\022\031\n\021autograph_item_id\030\001 \001(\004\022\024"
    "\n\014item_item_id\030\002 \001(\004\"h\n\033CMsgAdjustItemEq"
    "uippedState\022\017\n\007item_id\030\001 \001(\004\022\021\n\tnew_clas"
    "s\030\002 \001(\r\022\020\n\010new_slot\030\003 \001(\r\022\023\n\013style_index"
    "\030\004 \001(\r\"\360\001\n$CMsgEconPlayerStrangeCountAdj"
    "ustment\022\022\n\naccount_id\030\001 \001(\r\022`\n\031strange_c"
    "ount_adjustments\030\002 \003(\0132=.CMsgEconPlayerS"
    "trangeCountAdjustment.CStrangeCountAdjus"
    "tment\032R\n\027CStrangeCountAdjustment\022\022\n\neven"
    "t_type\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\022\022\n\nadjustm"
    "ent\030\003 \001(\r\"=\n)CMsgRequestItemPurgatory_Fi"
    "nalizePurchase\022\020\n\010item_ids\030\001 \003(\004\"U\n1CMsg"
    "RequestItemPurgatory_FinalizePurchaseRes"
    "ponse\022\016\n\006result\030\001 \001(\r\022\020\n\010item_ids\030\002 \003(\004\""
    ";\n\'CMsgRequestItemPurgatory_RefundPurcha"
    "se\022\020\n\010item_ids\030\001 \003(\004\"A\n/CMsgRequestItemP"
    "urgatory_RefundPurchaseResponse\022\016\n\006resul"
    "t\030\001 \001(\r\"(\n\024CMsgCraftingResponse\022\020\n\010item_"
    "ids\030\001 \003(\004\"@\n\033CMsgGCRequestStoreSalesData"
    "\022\017\n\007version\030\001 \001(\r\022\020\n\010currency\030\002 \001(\r\"\271\001\n#"
    "CMsgGCRequestStoreSalesDataResponse\022>\n\ns"
    "ale_price\030\001 \003(\0132*.CMsgGCRequestStoreSale"
    "sDataResponse.Price\022\017\n\007version\030\002 \001(\r\022\027\n\017"
    "expiration_time\030\003 \001(\r\032(\n\005Price\022\020\n\010item_d"
    "ef\030\001 \001(\r\022\r\n\005price\030\002 \001(\r\"W\n+CMsgGCRequest"
    "StoreSalesDataUpToDateResponse\022\017\n\007versio"
    "n\030\001 \001(\r\022\027\n\017expiration_time\030\002 \001(\r\"\027\n\025CMsg"
    "GCToGCPingRequest\"\030\n\026CMsgGCToGCPingRespo"
    "nse\"4\n\036CMsgGCToGCGetUserSessionServer\022\022\n"
    "\naccount_id\030\001 \001(\r\"A\n&CMsgGCToGCGetUserSe"
    "ssionServerResponse\022\027\n\017server_steam_id\030\001"
    " \001(\006\"L\n\036CMsgGCToGCGetUserServerMembers\022\022"
    "\n\naccount_id\030\001 \001(\r\022\026\n\016max_spectators\030\002 \001"
    "(\r\"C\n&CMsgGCToGCGetUserServerMembersResp"
    "onse\022\031\n\021member_account_id\030\001 \003(\r\"8\n\036CMsgL"
    "ookupMultipleAccountNames\022\026\n\naccountids\030"
    "\001 \003(\rB\002\020\001\"\232\001\n&CMsgLookupMultipleAccountN"
    "amesResponse\022A\n\010accounts\030\001 \003(\0132/.CMsgLoo"
    "kupMultipleAccountNamesResponse.Account\032"
    "-\n\007Account\022\021\n\taccountid\030\001 \001(\r\022\017\n\007persona"
    "\030\002 \001(\t\"/\n\031CMsgGCToGCGetUserPCBangNo\022\022\n\na"
    "ccount_id\030\001 \001(\r\"7\n!CMsgGCToGCGetUserPCBa"
    "ngNoResponse\022\022\n\npc_bang_no\030\001 \001(\r\"/\n\025CMsg"
    "RequestCrateItems\022\026\n\016crate_item_def\030\001 \001("
    "\r\"\205\001\n\035CMsgRequestCrateItemsResponse\022\020\n\010r"
    "esponse\030\001 \001(\r\022\021\n\titem_defs\030\002 \003(\r\022\025\n\rpeek"
    "_item_def\030\003 \001(\r\"(\n\007EResult\022\017\n\013k_Succeede"
    "d\020\000\022\014\n\010k_Failed\020\001\"\230\001\n\035CMsgGCToGCCanUseDr"
    "opRateBonus\022\022\n\naccount_id\030\001 \001(\r\022\027\n\017drop_"
    "rate_bonus\030\002 \001(\002\022\024\n\014booster_type\030\003 \001(\r\022\032"
    "\n\022exclusive_item_def\030\004 \001(\r\022\030\n\020allow_equa"
    "l_rate\030\005 \001(\010\"\261\001\n\027CMsgSQLAddDropRateBonus"
    "\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\022\020\n"
    "\010item_def\030\003 \001(\r\022\027\n\017drop_rate_bonus\030\004 \001(\002"
    "\022\024\n\014booster_type\030\005 \001(\r\022\030\n\020seconds_durati"
    "on\030\006 \001(\r\022\026\n\016end_time_stamp\030\007 \001(\r\"o\n\033CMsg"
    "SQLUpgradeBattleBooster\022\022\n\naccount_id\030\001 "
    "\001(\r\022\020\n\010item_def\030\002 \001(\r\022\024\n\014bonus_to_add\030\003 "
    "\001(\002\022\024\n\014booster_type\030\004 \001(\r\">\n\030CMsgGCToGCR"
    "efreshSOCache\022\022\n\naccount_id\030\001 \001(\r\022\016\n\006rel"
    "oad\030\002 \001(\010\"J\n!CMsgGCToGCCheckAccountTrade"
    "Status\022\022\n\naccount_id\030\001 \001(\r\022\021\n\tinitiator\030"
    "\002 \001(\010\"R\n)CMsgGCToGCCheckAccountTradeStat"
    "usResponse\022\021\n\tcan_trade\030\001 \001(\010\022\022\n\nerror_c"
    "ode\030\002 \001(\r\"\346\004\n!CMsgGCToGCGrantAccountRoll"
    "edItems\022\022\n\naccount_id\030\001 \001(\r\0226\n\005items\030\002 \003"
    "(\0132\'.CMsgGCToGCGrantAccountRolledItems.I"
    "tem\022\024\n\014audit_action\030\003 \001(\r\022\022\n\naudit_data\030"
    "\004 \001(\004\032\312\003\n\004Item\022\020\n\010item_def\030\001 \001(\r\022\022\n\nloot"
    "_lists\030\002 \003(\t\022\024\n\014ignore_limit\030\003 \001(\010\022\016\n\006or"
    "igin\030\004 \001(\r\022T\n\022dynamic_attributes\030\005 \003(\01328"
    ".CMsgGCToGCGrantAccountRolledItems.Item."
    "DynamicAttribute\022^\n\030additional_audit_ent"
    "ries\030\006 \003(\0132<.CMsgGCToGCGrantAccountRolle"
    "dItems.Item.AdditionalAuditEntry\022\027\n\017inve"
    "ntory_token\030\007 \001(\r\032K\n\020DynamicAttribute\022\014\n"
    "\004name\030\001 \001(\t\022\024\n\014value_uint32\030\002 \001(\r\022\023\n\013val"
    "ue_float\030\003 \001(\002\032Z\n\024AdditionalAuditEntry\022\030"
    "\n\020owner_account_id\030\001 \001(\r\022\024\n\014audit_action"
    "\030\002 \001(\r\022\022\n\naudit_data\030\003 \001(\004\"Q\n$CMsgGCToGC"
    "GrantSelfMadeItemToAccount\022\026\n\016item_def_i"
    "ndex\030\001 \001(\r\022\021\n\taccountid\030\002 \001(\r\"\261\001\n\013CMsgUs"
    "eItem\022\017\n\007item_id\030\001 \001(\004\022\027\n\017target_steam_i"
    "d\030\002 \001(\006\022\037\n\027gift__potential_targets\030\003 \003(\r"
    "\022\030\n\020duel__class_lock\030\004 \001(\r\022\032\n\022initiator_"
    "steam_id\030\005 \001(\004\022!\n\031itempack__ack_immediat"
    "ely\030\006 \001(\010\"U\n\021CMsgServerUseItem\022\034\n\024initia"
    "tor_account_id\030\001 \001(\r\022\"\n\014use_item_msg\030\002 \001"
    "(\0132\014.CMsgUseItem\"(\n\024CMsgUseMultipleItems"
    "\022\020\n\010item_ids\030\001 \003(\004\"\035\n\033CMsgGCPartnerBalan"
    "ceRequest\"p\n\034CMsgGCPartnerBalanceRespons"
    "e\022\?\n\006result\030\001 \001(\0162\032.EGCPartnerRequestRes"
    "ponse:\023k_EPartnerRequestOK\022\017\n\007balance\030\002 "
    "\001(\r\"J\n!CGCStoreRechargeRedirect_LineItem"
    "\022\023\n\013item_def_id\030\001 \001(\r\022\020\n\010quantity\030\002 \001(\r\""
    "a\n\'CMsgGCPartnerRechargeRedirectURLReque"
    "st\0226\n\nline_items\030\001 \003(\0132\".CGCStoreRecharg"
    "eRedirect_LineItem\"x\n(CMsgGCPartnerRecha"
    "rgeRedirectURLResponse\022\?\n\006result\030\001 \001(\0162\032"
    ".EGCPartnerRequestResponse:\023k_EPartnerRe"
    "questOK\022\013\n\003url\030\002 \001(\t\"X\n)CMsgGCEconSQLWor"
    "kItemEmbeddedRollbackData\022\022\n\naccount_id\030"
    "\001 \001(\r\022\027\n\017deleted_item_id\030\002 \001(\004\"\205\001\n\017CMsgC"
    "raftStatue\022\016\n\006heroid\030\001 \001(\r\022\024\n\014sequencena"
    "me\030\002 \001(\t\022\r\n\005cycle\030\003 \001(\002\022\023\n\013description\030\004"
    " \001(\t\022\030\n\020pedestal_itemdef\030\005 \001(\r\022\016\n\006toolid"
    "\030\006 \001(\004\"\036\n\016CMsgRedeemCode\022\014\n\004code\030\001 \001(\t\"\255"
    "\001\n\026CMsgRedeemCodeResponse\022\020\n\010response\030\001 "
    "\001(\r\022\017\n\007item_id\030\002 \001(\004\"p\n\013EResultCode\022\017\n\013k"
    "_Succeeded\020\000\022\031\n\025k_Failed_CodeNotFound\020\001\022"
    "\034\n\030k_Failed_CodeAlreadyUsed\020\002\022\027\n\023k_Faile"
    "d_OtherError\020\003\"q\n\025CMsgDevNewItemRequest\022"
    "\025\n\ritem_def_name\030\003 \001(\t\022\026\n\016loot_list_name"
    "\030\004 \001(\t\022\025\n\rattr_def_name\030\005 \003(\t\022\022\n\nattr_va"
    "lue\030\006 \003(\t\"0\n\035CMsgDevNewItemRequestRespon"
    "se\022\017\n\007success\030\001 \001(\010\"8\n\021CMsgGCAddGiftItem"
    "\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\"e\n"
    " CMsgClientToGCWrapAndDeliverGift\022\017\n\007ite"
    "m_id\030\001 \001(\004\022\032\n\022give_to_account_id\030\002 \001(\r\022\024"
    "\n\014gift_message\030\003 \001(\t\"\304\002\n(CMsgClientToGCW"
    "rapAndDeliverGiftResponse\0225\n\010response\030\001 "
    "\001(\0162\017.EGCMsgResponse:\022k_EGCMsgResponseOK"
    "\022\033\n\023gifting_charge_uses\030\002 \001(\r\022\032\n\022gifting"
    "_charge_max\030\003 \001(\005\022\024\n\014gifting_uses\030\004 \001(\r\022"
    "\023\n\013gifting_max\030\005 \001(\005\022\034\n\024gifting_window_h"
    "ours\030\006 \001(\r\022_\n\021trade_restriction\030\007 \001(\0162\034."
    "EGCMsgInitiateTradeResponse:&k_EGCMsgIni"
    "tiateTradeResponse_Accepted\"+\n\030CMsgClien"
    "tToGCUnwrapGift\022\017\n\007item_id\030\001 \001(\004\"\"\n CMsg"
    "ClientToGCGetGiftPermissions\"\347\003\n(CMsgCli"
    "entToGCGetGiftPermissionsResponse\022\024\n\014is_"
    "unlimited\030\001 \001(\010\022\026\n\016has_two_factor\030\003 \001(\010\022"
    "_\n\021sender_permission\030\006 \001(\0162\034.EGCMsgIniti"
    "ateTradeResponse:&k_EGCMsgInitiateTradeR"
    "esponse_Accepted\022\"\n\032friendship_age_requi"
    "rement\030\007 \001(\r\022-\n%friendship_age_requireme"
    "nt_two_factor\030\010 \001(\r\022V\n\022friend_permission"
    "s\030\t \003(\0132:.CMsgClientToGCGetGiftPermissio"
    "nsResponse.FriendPermission\032\200\001\n\020FriendPe"
    "rmission\022\022\n\naccount_id\030\001 \001(\r\022X\n\npermissi"
    "on\030\002 \001(\0162\034.EGCMsgInitiateTradeResponse:&"
    "k_EGCMsgInitiateTradeResponse_Accepted\"-"
    "\n\032CMsgClientToGCUnpackBundle\022\017\n\007item_id\030"
    "\001 \001(\004\"\332\003\n\"CMsgClientToGCUnpackBundleResp"
    "onse\022\031\n\021unpacked_item_ids\030\001 \003(\004\022]\n\010respo"
    "nse\030\002 \001(\01621.CMsgClientToGCUnpackBundleRe"
    "sponse.EUnpackBundle:\030k_UnpackBundle_Suc"
    "ceeded\"\271\002\n\rEUnpackBundle\022\034\n\030k_UnpackBund"
    "le_Succeeded\020\000\022)\n%k_UnpackBundle_Failed_"
    "ItemIsNotBundle\020\001\0225\n1k_UnpackBundle_Fail"
    "ed_UnableToCreateContainedItem\020\002\022&\n\"k_Un"
    "packBundle_Failed_SOCacheError\020\003\022\'\n#k_Un"
    "packBundle_Failed_ItemIsInvalid\020\004\022)\n%k_U"
    "npackBundle_Failed_BadItemQuantity\020\005\022,\n("
    "k_UnpackBundle_Failed_UnableToDeleteItem"
    "\020\006\"K\n\'CMsgGCToClientStoreTransactionComp"
    "leted\022\016\n\006txn_id\030\001 \001(\004\022\020\n\010item_ids\030\002 \003(\004\""
    "H\n\030CMsgClientToGCEquipItems\022,\n\006equips\030\001 "
    "\003(\0132\034.CMsgAdjustItemEquippedState\"\?\n CMs"
    "gClientToGCEquipItemsResponse\022\033\n\023so_cach"
    "e_version_id\030\001 \001(\006\"B\n\032CMsgClientToGCSetI"
    "temStyle\022\017\n\007item_id\030\001 \001(\004\022\023\n\013style_index"
    "\030\002 \001(\r\"\336\001\n\"CMsgClientToGCSetItemStyleRes"
    "ponse\022U\n\010response\030\001 \001(\0162-.CMsgClientToGC"
    "SetItemStyleResponse.ESetStyle:\024k_SetSty"
    "le_Succeeded\"a\n\tESetStyle\022\030\n\024k_SetStyle_"
    "Succeeded\020\000\022\025\n\021k_SetStyle_Failed\020\001\022#\n\037k_"
    "SetStyle_Failed_StyleIsLocked\020\002\"i\n\035CMsgC"
    "lientToGCUnlockItemStyle\022\026\n\016item_to_unlo"
    "ck\030\001 \001(\004\022\023\n\013style_index\030\002 \001(\r\022\033\n\023consuma"
    "ble_item_ids\030\003 \003(\004\"\242\005\n%CMsgClientToGCUnl"
    "ockItemStyleResponse\022^\n\010response\030\001 \001(\01623"
    ".CMsgClientToGCUnlockItemStyleResponse.E"
    "UnlockStyle:\027k_UnlockStyle_Succeeded\022\017\n\007"
    "item_id\030\002 \001(\004\022\023\n\013style_index\030\003 \001(\r\022\024\n\014st"
    "yle_prereq\030\004 \001(\r\"\334\003\n\014EUnlockStyle\022\033\n\027k_U"
    "nlockStyle_Succeeded\020\000\022\037\n\033k_UnlockStyle_"
    "Failed_PreReq\020\001\022#\n\037k_UnlockStyle_Failed_"
    "CantAfford\020\002\022#\n\037k_UnlockStyle_Failed_Can"
    "tCommit\020\003\022&\n\"k_UnlockStyle_Failed_CantLo"
    "ckCache\020\004\022)\n%k_UnlockStyle_Failed_CantAf"
    "fordAttrib\020\005\022&\n\"k_UnlockStyle_Failed_Can"
    "tAffordGem\020\006\022*\n&k_UnlockStyle_Failed_NoC"
    "ompendiumLevel\020\007\022(\n$k_UnlockStyle_Failed"
    "_AlreadyUnlocked\020\010\022#\n\037k_UnlockStyle_Fail"
    "ed_OtherError\020\t\022&\n\"k_UnlockStyle_Failed_"
    "ItemIsInvalid\020\n\022&\n\"k_UnlockStyle_Failed_"
    "ToolIsInvalid\020\013\"\203\001\n&CMsgClientToGCSetIte"
    "mInventoryCategory\022\020\n\010item_ids\030\001 \003(\004\022\024\n\014"
    "set_to_value\030\002 \001(\r\022\031\n\021remove_categories\030"
    "\003 \001(\r\022\026\n\016add_categories\030\004 \001(\r\"G\n\031CMsgCli"
    "entToGCUnlockCrate\022\025\n\rcrate_item_id\030\001 \001("
    "\004\022\023\n\013key_item_id\030\002 \001(\004\"\304\001\n!CMsgClientToG"
    "CUnlockCrateResponse\0223\n\006result\030\001 \001(\0162\017.E"
    "GCMsgResponse:\022k_EGCMsgResponseOK\022>\n\rgra"
    "nted_items\030\002 \003(\0132\'.CMsgClientToGCUnlockC"
    "rateResponse.Item\032*\n\004Item\022\017\n\007item_id\030\001 \001"
    "(\004\022\021\n\tdef_index\030\002 \001(\r\"4\n!CMsgClientToGCR"
    "emoveItemAttribute\022\017\n\007item_id\030\001 \001(\004\"\262\003\n)"
    "CMsgClientToGCRemoveItemAttributeRespons"
    "e\022r\n\010response\030\001 \001(\0162\?.CMsgClientToGCRemo"
    "veItemAttributeResponse.ERemoveItemAttri"
    "bute:\037k_RemoveItemAttribute_Succeeded\022\017\n"
    "\007item_id\030\002 \001(\004\"\377\001\n\024ERemoveItemAttribute\022"
    "#\n\037k_RemoveItemAttribute_Succeeded\020\000\022 \n\034"
    "k_RemoveItemAttribute_Failed\020\001\022.\n*k_Remo"
    "veItemAttribute_Failed_ItemIsInvalid\020\002\0229"
    "\n5k_RemoveItemAttribute_Failed_Attribute"
    "CannotBeRemoved\020\003\0225\n1k_RemoveItemAttribu"
    "te_Failed_AttributeDoesntExist\020\004\"U\n\026CMsg"
    "ClientToGCNameItem\022\027\n\017subject_item_id\030\001 "
    "\001(\004\022\024\n\014tool_item_id\030\002 \001(\004\022\014\n\004name\030\003 \001(\t\""
    "\262\002\n\036CMsgClientToGCNameItemResponse\022Q\n\010re"
    "sponse\030\001 \001(\0162).CMsgClientToGCNameItemRes"
    "ponse.ENameItem:\024k_NameItem_Succeeded\022\017\n"
    "\007item_id\030\002 \001(\004\"\253\001\n\tENameItem\022\030\n\024k_NameIt"
    "em_Succeeded\020\000\022\025\n\021k_NameItem_Failed\020\001\022#\n"
    "\037k_NameItem_Failed_ToolIsInvalid\020\002\022#\n\037k_"
    "NameItem_Failed_ItemIsInvalid\020\003\022#\n\037k_Nam"
    "eItem_Failed_NameIsInvalid\020\004\">\n\025CMsgGCSe"
    "tItemPosition\022\017\n\007item_id\030\001 \001(\004\022\024\n\014new_po"
    "sition\030\002 \001(\r\"\355\001\n%CAttribute_ItemDynamicR"
    "ecipeComponent\022\020\n\010item_def\030\001 \001(\r\022\024\n\014item"
    "_quality\030\002 \001(\r\022\022\n\nitem_flags\030\003 \001(\r\022\031\n\021at"
    "tributes_string\030\004 \001(\t\022\022\n\nitem_count\030\005 \001("
    "\r\022\027\n\017items_fulfilled\030\006 \001(\r\022\023\n\013item_rarit"
    "y\030\007 \001(\r\022\020\n\010lootlist\030\010 \001(\t\022\031\n\021fulfilled_i"
    "tem_id\030\t \001(\004\"\262\001\n\020CProtoItemSocket\022\017\n\007ite"
    "m_id\030\001 \001(\004\022\026\n\016attr_def_index\030\002 \001(\r\022\025\n\rre"
    "quired_type\030\003 \001(\r\022\025\n\rrequired_hero\030\004 \001(\t"
    "\022\025\n\rgem_def_index\030\005 \001(\r\022\024\n\014not_tradable\030"
    "\006 \001(\010\022\032\n\022required_item_slot\030\007 \001(\t\";\n\026CPr"
    "otoItemSocket_Empty\022!\n\006socket\030\001 \001(\0132\021.CP"
    "rotoItemSocket\"L\n\027CProtoItemSocket_Effec"
    "t\022!\n\006socket\030\001 \001(\0132\021.CProtoItemSocket\022\016\n\006"
    "effect\030\002 \001(\r\"e\n\026CProtoItemSocket_Color\022!"
    "\n\006socket\030\001 \001(\0132\021.CProtoItemSocket\022\013\n\003red"
    "\030\002 \001(\r\022\r\n\005green\030\003 \001(\r\022\014\n\004blue\030\004 \001(\r\"j\n\030C"
    "ProtoItemSocket_Strange\022!\n\006socket\030\001 \001(\0132"
    "\021.CProtoItemSocket\022\024\n\014strange_type\030\002 \001(\r"
    "\022\025\n\rstrange_value\030\003 \001(\r\"\221\001\n\032CProtoItemSo"
    "cket_Spectator\022!\n\006socket\030\001 \001(\0132\021.CProtoI"
    "temSocket\022\024\n\014games_viewed\030\002 \001(\r\022\026\n\016corpo"
    "ration_id\030\003 \001(\r\022\021\n\tleague_id\030\004 \001(\r\022\017\n\007te"
    "am_id\030\005 \001(\r\"[\n\036CProtoItemSocket_AssetMod"
    "ifier\022!\n\006socket\030\001 \001(\0132\021.CProtoItemSocket"
    "\022\026\n\016asset_modifier\030\002 \001(\r\"\247\001\n;CProtoItemS"
    "ocket_AssetModifier_DESERIALIZE_FROM_STR"
    "ING_ONLY\022!\n\006socket\030\001 \001(\0132\021.CProtoItemSoc"
    "ket\022\026\n\016asset_modifier\030\002 \001(\r\022\025\n\ranim_modi"
    "fier\030\003 \001(\r\022\026\n\016ability_effect\030\004 \001(\r\"\201\001\n\032C"
    "ProtoItemSocket_Autograph\022!\n\006socket\030\001 \001("
    "\0132\021.CProtoItemSocket\022\021\n\tautograph\030\002 \001(\t\022"
    "\024\n\014autograph_id\030\003 \001(\r\022\027\n\017autograph_score"
    "\030\004 \001(\r\"C\n\036CProtoItemSocket_StaticVisuals"
    "\022!\n\006socket\030\001 \001(\0132\021.CProtoItemSocket\"\"\n\021C"
    "Attribute_String\022\r\n\005value\030\001 \001(\t\"m\n%CWork"
    "shop_GetItemDailyRevenue_Request\022\r\n\005appi"
    "d\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\r\022\022\n\ndate_start\030\003"
    " \001(\r\022\020\n\010date_end\030\004 \001(\r\"\335\001\n&CWorkshop_Get"
    "ItemDailyRevenue_Response\022T\n\017country_rev"
    "enue\030\001 \003(\0132;.CWorkshop_GetItemDailyReven"
    "ue_Response.CountryDailyRevenue\032]\n\023Count"
    "ryDailyRevenue\022\024\n\014country_code\030\001 \001(\t\022\014\n\004"
    "date\030\002 \001(\r\022\023\n\013revenue_usd\030\003 \001(\003\022\r\n\005units"
    "\030\004 \001(\005\"H\n\037CMsgSQLGCToGCGrantBackpackSlot"
    "s\022\022\n\naccount_id\030\001 \001(\r\022\021\n\tadd_slots\030\002 \001(\r"
    "\"5\n\037CMsgClientToGCLookupAccountName\022\022\n\na"
    "ccount_id\030\001 \001(\r\"S\n\'CMsgClientToGCLookupA"
    "ccountNameResponse\022\022\n\naccount_id\030\001 \001(\r\022\024"
    "\n\014account_name\030\002 \001(\t\"d\n\034CMsgGCToGCDevRev"
    "okeUserItems\022\022\n\naccount_id\030\001 \001(\r\022\022\n\naudi"
    "t_data\030\002 \001(\004\022\034\n\024delete_audit_history\030\003 \001"
    "(\010\"\235\001\n CMsgClientToGCCreateStaticRecipe\022"
    "5\n\005items\030\001 \003(\0132&.CMsgClientToGCCreateSta"
    "ticRecipe.Item\022\030\n\020recipe_def_index\030\002 \001(\r"
    "\032(\n\004Item\022\017\n\007item_id\030\001 \001(\004\022\017\n\007slot_id\030\002 \001"
    "(\r\"\374\005\n(CMsgClientToGCCreateStaticRecipeR"
    "esponse\022X\n\010response\030\001 \001(\01623.CMsgClientTo"
    "GCCreateStaticRecipeResponse.EResponse:\021"
    "eResponse_Success\022J\n\014output_items\030\002 \003(\0132"
    "4.CMsgClientToGCCreateStaticRecipeRespon"
    "se.OutputItem\022J\n\014input_errors\030\003 \003(\01324.CM"
    "sgClientToGCCreateStaticRecipeResponse.I"
    "nputError\022V\n\022additional_outputs\030\004 \003(\0132:."
    "CMsgClientToGCCreateStaticRecipeResponse"
    ".AdditionalOutput\032A\n\nOutputItem\022\021\n\tdef_i"
    "ndex\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\022\017\n\007slot_id\030\003"
    " \001(\r\032t\n\nInputError\022\017\n\007slot_id\030\001 \001(\r\022U\n\005e"
    "rror\030\002 \001(\01623.CMsgClientToGCCreateStaticR"
    "ecipeResponse.EResponse:\021eResponse_Succe"
    "ss\0322\n\020AdditionalOutput\022\017\n\007slot_id\030\001 \001(\r\022"
    "\r\n\005value\030\002 \001(\004\"\230\001\n\tEResponse\022\025\n\021eRespons"
    "e_Success\020\000\022\036\n\032eResponse_OfferingDisable"
    "d\020\001\022\032\n\026eResponse_InvalidItems\020\002\022\033\n\027eResp"
    "onse_InternalError\020\003\022\033\n\027eResponse_Missin"
    "gLeague\020\004\"\333\003\n\033CMsgProcessTransactionOrde"
    "r\022\016\n\006txn_id\030\001 \001(\004\022\024\n\014steam_txn_id\030\002 \001(\004\022"
    "\026\n\016partner_txn_id\030\003 \001(\004\022\020\n\010steam_id\030\004 \001("
    "\006\022\022\n\ntime_stamp\030\005 \001(\r\022\021\n\twatermark\030\006 \001(\004"
    "\022\036\n\026purchase_report_status\030\007 \001(\005\022\020\n\010curr"
    "ency\030\010 \001(\r\0220\n\005items\030\t \003(\0132!.CMsgProcessT"
    "ransactionOrder.Item\032\340\001\n\004Item\022\026\n\016item_de"
    "f_index\030\001 \001(\r\022\022\n\nitem_price\030\002 \001(\r\022\020\n\010qua"
    "ntity\030\003 \001(\r\022\025\n\rcategory_desc\030\004 \001(\t\022\033\n\023st"
    "ore_purchase_type\030\005 \001(\r\022\033\n\023source_refere"
    "nce_id\030\006 \001(\004\022\032\n\022parent_stack_index\030\007 \001(\005"
    "\022\025\n\rdefault_price\030\010 \001(\010\022\026\n\016is_user_facin"
    "g\030\t \001(\010\"j\n&CMsgGCToGCStoreProcessCDKeyTr"
    "ansaction\022+\n\005order\030\001 \001(\0132\034.CMsgProcessTr"
    "ansactionOrder\022\023\n\013reason_code\030\002 \001(\r\"A\n.C"
    "MsgGCToGCStoreProcessCDKeyTransactionRes"
    "ponse\022\017\n\007success\030\001 \001(\010\"`\n CMsgGCToGCStor"
    "eProcessSettlement\022+\n\005order\030\001 \001(\0132\034.CMsg"
    "ProcessTransactionOrder\022\017\n\007partner\030\002 \001(\r"
    "\";\n(CMsgGCToGCStoreProcessSettlementResp"
    "onse\022\017\n\007success\030\001 \001(\010\"}\n!CMsgGCToGCBroad"
    "castConsoleCommand\022\023\n\013con_command\030\001 \001(\t\022"
    "\025\n\rreport_output\030\002 \001(\010\022\022\n\nsending_gc\030\003 \001"
    "(\r\022\030\n\020output_initiator\030\004 \001(\t\"\243\001\n\027CMsgGCT"
    "oGCConsoleOutput\022\021\n\tinitiator\030\001 \001(\t\022\022\n\ns"
    "ending_gc\030\002 \001(\r\0221\n\004msgs\030\003 \003(\0132#.CMsgGCTo"
    "GCConsoleOutput.OutputLine\032.\n\nOutputLine"
    "\022\014\n\004text\030\001 \001(\t\022\022\n\nspew_level\030\002 \001(\r\"\216\001\n\014C"
    "MsgItemAges\022@\n\026max_item_id_timestamps\030\001 "
    "\003(\0132 .CMsgItemAges.MaxItemIDTimestamp\032<\n"
    "\022MaxItemIDTimestamp\022\021\n\ttimestamp\030\001 \001(\r\022\023"
    "\n\013max_item_id\030\002 \001(\004\"\253\001\n\031CMsgGCToGCIntern"
    "alTestMsg\022\022\n\nsending_gc\030\001 \001(\r\022\021\n\tsender_"
    "id\030\002 \001(\006\022\017\n\007context\030\003 \001(\r\022\022\n\nmessage_id\030"
    "\004 \001(\r\022\024\n\014message_body\030\005 \001(\014\022\025\n\rjob_id_so"
    "urce\030\006 \001(\006\022\025\n\rjob_id_target\030\007 \001(\006\"\252\001\n%CM"
    "sgGCToGCClientServerVersionsUpdated\022\"\n\032c"
    "lient_min_allowed_version\030\001 \001(\r\022\035\n\025clien"
    "t_active_version\030\002 \001(\r\022\035\n\025server_active_"
    "version\030\003 \001(\r\022\037\n\027server_deployed_version"
    "\030\004 \001(\r*\3064\n\nEGCItemMsg\022\021\n\014k_EMsgGCBase\020\350\007"
    "\022\034\n\027k_EMsgGCSetItemPosition\020\351\007\022\023\n\016k_EMsg"
    "GCDelete\020\354\007\022$\n\037k_EMsgGCVerifyCacheSubscr"
    "iption\020\355\007\022\035\n\030k_EMsgClientToGCNameItem\020\356\007"
    "\022\026\n\021k_EMsgGCPaintItem\020\361\007\022\036\n\031k_EMsgGCPain"
    "tItemResponse\020\362\007\022\"\n\035k_EMsgGCGoldenWrench"
    "Broadcast\020\363\007\022\030\n\023k_EMsgGCMOTDRequest\020\364\007\022 "
    "\n\033k_EMsgGCMOTDRequestResponse\020\365\007\022\'\n\"k_EM"
    "sgGCAddItemToSocket_DEPRECATED\020\366\007\022/\n*k_E"
    "MsgGCAddItemToSocketResponse_DEPRECATED\020"
    "\367\007\022+\n&k_EMsgGCAddSocketToBaseItem_DEPREC"
    "ATED\020\370\007\022\'\n\"k_EMsgGCAddSocketToItem_DEPRE"
    "CATED\020\371\007\022/\n*k_EMsgGCAddSocketToItemRespo"
    "nse_DEPRECATED\020\372\007\022\031\n\024k_EMsgGCNameBaseIte"
    "m\020\373\007\022!\n\034k_EMsgGCNameBaseItemResponse\020\374\007\022"
    "(\n#k_EMsgGCRemoveSocketItem_DEPRECATED\020\375"
    "\007\0220\n+k_EMsgGCRemoveSocketItemResponse_DE"
    "PRECATED\020\376\007\022!\n\034k_EMsgGCCustomizeItemText"
    "ure\020\377\007\022)\n$k_EMsgGCCustomizeItemTextureRe"
    "sponse\020\200\010\022\033\n\026k_EMsgGCUseItemRequest\020\201\010\022\034"
    "\n\027k_EMsgGCUseItemResponse\020\202\010\022\030\n\023k_EMsgGC"
    "GiftedItems\020\203\010\022\033\n\026k_EMsgGCRemoveItemName"
    "\020\206\010\022\034\n\027k_EMsgGCRemoveItemPaint\020\207\010\022\036\n\031k_E"
    "MsgGCUnwrapGiftRequest\020\215\010\022\037\n\032k_EMsgGCUnw"
    "rapGiftResponse\020\216\010\022$\n\037k_EMsgGCSetItemSty"
    "le_DEPRECATED\020\217\010\022\036\n\031k_EMsgGCUsedClaimCod"
    "eItem\020\220\010\022\026\n\021k_EMsgGCSortItems\020\221\010\022*\n%k_EM"
    "sgGC_RevolvingLootList_DEPRECATED\020\222\010\022\035\n\030"
    "k_EMsgGCUpdateItemSchema\020\231\010\022 \n\033k_EMsgGCR"
    "emoveCustomTexture\020\233\010\022(\n#k_EMsgGCRemoveC"
    "ustomTextureResponse\020\234\010\022\035\n\030k_EMsgGCRemov"
    "eMakersMark\020\235\010\022%\n k_EMsgGCRemoveMakersMa"
    "rkResponse\020\236\010\022#\n\036k_EMsgGCRemoveUniqueCra"
    "ftIndex\020\237\010\022+\n&k_EMsgGCRemoveUniqueCraftI"
    "ndexResponse\020\240\010\022\033\n\026k_EMsgGCSaxxyBroadcas"
    "t\020\241\010\022!\n\034k_EMsgGCBackpackSortFinished\020\242\010\022"
    "$\n\037k_EMsgGCAdjustItemEquippedState\020\243\010\022\030\n"
    "\023k_EMsgGCCollectItem\020\245\010\022\035\n\030k_EMsgGCItemA"
    "cknowledged\020\246\010\022)\n$k_EMsgGCPresets_Select"
    "PresetForClass\020\247\010\022$\n\037k_EMsgGCPresets_Set"
    "ItemPosition\020\250\010\022.\n)k_EMsgGCPresets_Selec"
    "tPresetForClassReply\020\253\010\022%\n k_EMsgClientT"
    "oGCNameItemResponse\020\254\010\022#\n\036k_EMsgGCApplyC"
    "onsumableEffects\020\255\010\022 \n\033k_EMsgGCConsumabl"
    "eExhausted\020\256\010\022\036\n\031k_EMsgGCShowItemsPicked"
    "Up\020\257\010\022&\n!k_EMsgGCClientDisplayNotificati"
    "on\020\260\010\022\035\n\030k_EMsgGCApplyStrangePart\020\261\010\022(\n#"
    "k_EMsgGC_IncrementKillCountResponse\020\263\010\022 "
    "\n\033k_EMsgGCApplyPennantUpgrade\020\264\010\022\035\n\030k_EM"
    "sgGCSetItemPositions\020\265\010\022)\n$k_EMsgGCSetIt"
    "emPositions_RateLimited\020\310\010\022\034\n\027k_EMsgGCAp"
    "plyEggEssence\020\266\010\022#\n\036k_EMsgGCNameEggEssen"
    "ceResponse\020\267\010\022*\n%k_EMsgGCFulfillDynamicR"
    "ecipeComponent\020\272\010\0222\n-k_EMsgGCFulfillDyna"
    "micRecipeComponentResponse\020\273\010\022$\n\037k_EMsgG"
    "CClientRequestMarketData\020\274\010\022,\n\'k_EMsgGCC"
    "lientRequestMarketDataResponse\020\275\010\022\030\n\023k_E"
    "MsgGCExtractGems\020\276\010\022\026\n\021k_EMsgGCAddSocket"
    "\020\277\010\022\034\n\027k_EMsgGCAddItemToSocket\020\300\010\022$\n\037k_E"
    "MsgGCAddItemToSocketResponse\020\301\010\022\036\n\031k_EMs"
    "gGCAddSocketResponse\020\302\010\022!\n\034k_EMsgGCReset"
    "StrangeGemCount\020\303\010\022\036\n\031k_EMsgGCRequestCra"
    "teItems\020\304\010\022&\n!k_EMsgGCRequestCrateItemsR"
    "esponse\020\305\010\022 \n\033k_EMsgGCExtractGemsRespons"
    "e\020\306\010\022)\n$k_EMsgGCResetStrangeGemCountResp"
    "onse\020\307\010\022!\n\034k_EMsgGCServerUseItemRequest\020"
    "\317\010\022\030\n\023k_EMsgGCAddGiftItem\020\320\010\022\"\n\035k_EMsgGC"
    "RemoveItemGiftMessage\020\321\010\022*\n%k_EMsgGCRemo"
    "veItemGiftMessageResponse\020\322\010\022&\n!k_EMsgGC"
    "RemoveItemGifterAccountId\020\323\010\022.\n)k_EMsgGC"
    "RemoveItemGifterAccountIdResponse\020\324\010\022/\n*"
    "k_EMsgClientToGCRemoveItemGifterAttribut"
    "es\020\325\010\022#\n\036k_EMsgClientToGCRemoveItemName\020"
    "\326\010\022*\n%k_EMsgClientToGCRemoveItemDescript"
    "ion\020\327\010\0220\n+k_EMsgClientToGCRemoveItemAttr"
    "ibuteResponse\020\330\010\022\030\n\023k_EMsgGCTradingBase\020"
    "\334\013\022)\n$k_EMsgGCTrading_InitiateTradeReque"
    "st\020\335\013\022*\n%k_EMsgGCTrading_InitiateTradeRe"
    "sponse\020\336\013\022!\n\034k_EMsgGCTrading_StartSessio"
    "n\020\337\013\022\"\n\035k_EMsgGCTrading_SessionClosed\020\345\013"
    "\0221\n,k_EMsgGCTrading_InitiateTradeRequest"
    "Response\020\352\013\022)\n$k_EMsgGCServerBrowser_Fav"
    "oriteServer\020\301\014\022*\n%k_EMsgGCServerBrowser_"
    "BlacklistServer\020\302\014\022\036\n\031k_EMsgGCServerRent"
    "alsBase\020\244\r\022\037\n\032k_EMsgGCDev_NewItemRequest"
    "\020\321\017\022\'\n\"k_EMsgGCDev_NewItemRequestRespons"
    "e\020\322\017\022\035\n\030k_EMsgGCStoreGetUserData\020\304\023\022%\n k"
    "_EMsgGCStoreGetUserDataResponse\020\305\023\022\"\n\035k_"
    "EMsgGCStorePurchaseFinalize\020\310\023\022*\n%k_EMsg"
    "GCStorePurchaseFinalizeResponse\020\311\023\022 \n\033k_"
    "EMsgGCStorePurchaseCancel\020\312\023\022(\n#k_EMsgGC"
    "StorePurchaseCancelResponse\020\313\023\022\036\n\031k_EMsg"
    "GCStorePurchaseInit\020\316\023\022&\n!k_EMsgGCStoreP"
    "urchaseInitResponse\020\317\023\022\"\n\035k_EMsgGCBanned"
    "WordListRequest\020\320\023\022#\n\036k_EMsgGCBannedWord"
    "ListResponse\020\321\023\022(\n#k_EMsgGCToGCBannedWor"
    "dListBroadcast\020\322\023\022&\n!k_EMsgGCToGCBannedW"
    "ordListUpdated\020\323\023\022\036\n\031k_EMsgGCToGCDirtySD"
    "OCache\020\324\023\022&\n!k_EMsgGCToGCDirtyMultipleSD"
    "OCache\020\325\023\022\"\n\035k_EMsgGCToGCUpdateSQLKeyVal"
    "ue\020\326\023\022(\n#k_EMsgGCToGCBroadcastConsoleCom"
    "mand\020\331\023\022!\n\034k_EMsgGCServerVersionUpdated\020"
    "\332\023\022\033\n\026k_EMsgGCApplyAutograph\020\333\023\022%\n k_EMs"
    "gGCToGCWebAPIAccountChanged\020\334\023\022!\n\034k_EMsg"
    "GCClientVersionUpdated\020\340\023\022+\n&k_EMsgGCIte"
    "mPurgatory_FinalizePurchase\020\343\023\0223\n.k_EMsg"
    "GCItemPurgatory_FinalizePurchaseResponse"
    "\020\344\023\022)\n$k_EMsgGCItemPurgatory_RefundPurch"
    "ase\020\345\023\0221\n,k_EMsgGCItemPurgatory_RefundPu"
    "rchaseResponse\020\346\023\022.\n)k_EMsgGCToGCPlayerS"
    "trangeCountAdjustments\020\347\023\022\"\n\035k_EMsgGCReq"
    "uestStoreSalesData\020\350\023\022*\n%k_EMsgGCRequest"
    "StoreSalesDataResponse\020\351\023\0222\n-k_EMsgGCReq"
    "uestStoreSalesDataUpToDateResponse\020\352\023\022\034\n"
    "\027k_EMsgGCToGCPingRequest\020\353\023\022\035\n\030k_EMsgGCT"
    "oGCPingResponse\020\354\023\022%\n k_EMsgGCToGCGetUse"
    "rSessionServer\020\355\023\022-\n(k_EMsgGCToGCGetUser"
    "SessionServerResponse\020\356\023\022%\n k_EMsgGCToGC"
    "GetUserServerMembers\020\357\023\022-\n(k_EMsgGCToGCG"
    "etUserServerMembersResponse\020\360\023\022 \n\033k_EMsg"
    "GCToGCGetUserPCBangNo\020\361\023\022(\n#k_EMsgGCToGC"
    "GetUserPCBangNoResponse\020\362\023\022$\n\037k_EMsgGCTo"
    "GCCanUseDropRateBonus\020\363\023\022\036\n\031k_EMsgSQLAdd"
    "DropRateBonus\020\364\023\022\037\n\032k_EMsgGCToGCRefreshS"
    "OCache\020\365\023\022&\n!k_EMsgGCToGCApplyLocalizati"
    "onDiff\020\366\023\022.\n)k_EMsgGCToGCApplyLocalizati"
    "onDiffResponse\020\367\023\022(\n#k_EMsgGCToGCCheckAc"
    "countTradeStatus\020\370\023\0220\n+k_EMsgGCToGCCheck"
    "AccountTradeStatusResponse\020\371\023\022(\n#k_EMsgG"
    "CToGCGrantAccountRolledItems\020\372\023\022+\n&k_EMs"
    "gGCToGCGrantSelfMadeItemToAccount\020\373\023\022\"\n\035"
    "k_EMsgGCPartnerBalanceRequest\020\375\023\022#\n\036k_EM"
    "sgGCPartnerBalanceResponse\020\376\023\022.\n)k_EMsgG"
    "CPartnerRechargeRedirectURLRequest\020\377\023\022/\n"
    "*k_EMsgGCPartnerRechargeRedirectURLRespo"
    "nse\020\200\024\022\030\n\023k_EMsgGCStatueCraft\020\201\024\022\027\n\022k_EM"
    "sgGCRedeemCode\020\202\024\022\037\n\032k_EMsgGCRedeemCodeR"
    "esponse\020\203\024\022(\n#k_EMsgGCToGCItemConsumptio"
    "nRollback\020\204\024\022\'\n\"k_EMsgClientToGCWrapAndD"
    "eliverGift\020\205\024\022/\n*k_EMsgClientToGCWrapAnd"
    "DeliverGiftResponse\020\206\024\022)\n$k_EMsgClientTo"
    "GCUnpackBundleResponse\020\207\024\022.\n)k_EMsgGCToC"
    "lientStoreTransactionCompleted\020\210\024\022\037\n\032k_E"
    "MsgClientToGCEquipItems\020\211\024\022\'\n\"k_EMsgClie"
    "ntToGCEquipItemsResponse\020\212\024\022$\n\037k_EMsgCli"
    "entToGCUnlockItemStyle\020\213\024\022,\n\'k_EMsgClien"
    "tToGCUnlockItemStyleResponse\020\214\024\022-\n(k_EMs"
    "gClientToGCSetItemInventoryCategory\020\215\024\022 "
    "\n\033k_EMsgClientToGCUnlockCrate\020\216\024\022(\n#k_EM"
    "sgClientToGCUnlockCrateResponse\020\217\024\022!\n\034k_"
    "EMsgClientToGCUnpackBundle\020\220\024\022!\n\034k_EMsgC"
    "lientToGCSetItemStyle\020\221\024\022)\n$k_EMsgClient"
    "ToGCSetItemStyleResponse\020\222\024\022&\n!k_EMsgSQL"
    "GCToGCGrantBackpackSlots\020\224\024\022&\n!k_EMsgCli"
    "entToGCLookupAccountName\020\225\024\022.\n)k_EMsgCli"
    "entToGCLookupAccountNameResponse\020\226\024\022#\n\036k"
    "_EMsgGCToGCDevRevokeUserItems\020\227\024\022\'\n\"k_EM"
    "sgClientToGCCreateStaticRecipe\020\230\024\022/\n*k_E"
    "MsgClientToGCCreateStaticRecipeResponse\020"
    "\231\024\022-\n(k_EMsgGCToGCStoreProcessCDKeyTrans"
    "action\020\232\024\0225\n0k_EMsgGCToGCStoreProcessCDK"
    "eyTransactionResponse\020\233\024\022\'\n\"k_EMsgGCToGC"
    "StoreProcessSettlement\020\234\024\022/\n*k_EMsgGCToG"
    "CStoreProcessSettlementResponse\020\235\024\022\036\n\031k_"
    "EMsgGCToGCConsoleOutput\020\236\024\022\035\n\030k_EMsgGCTo"
    "ClientItemAges\020\237\024\022 \n\033k_EMsgGCToGCInterna"
    "lTestMsg\020\240\024\022,\n\'k_EMsgGCToGCClientServerV"
    "ersionsUpdated\020\241\024\022$\n\037k_EMsgGCUseMultiple"
    "ItemsRequest\020\242\024*\363\002\n\037EItemPurgatoryRespon"
    "se_Finalize\022.\n*k_ItemPurgatoryResponse_F"
    "inalize_Succeeded\020\000\0226\n2k_ItemPurgatoryRe"
    "sponse_Finalize_Failed_Incomplete\020\001\022\?\n;k"
    "_ItemPurgatoryResponse_Finalize_Failed_I"
    "temsNotInPurgatory\020\002\022=\n9k_ItemPurgatoryR"
    "esponse_Finalize_Failed_CouldNotFindItem"
    "s\020\003\0225\n1k_ItemPurgatoryResponse_Finalize_"
    "Failed_NoSOCache\020\004\0221\n-k_ItemPurgatoryRes"
    "ponse_Finalize_BackpackFull\020\005*\347\002\n\035EItemP"
    "urgatoryResponse_Refund\022,\n(k_ItemPurgato"
    "ryResponse_Refund_Succeeded\020\000\022<\n8k_ItemP"
    "urgatoryResponse_Refund_Failed_ItemNotIn"
    "Purgatory\020\001\022:\n6k_ItemPurgatoryResponse_R"
    "efund_Failed_CouldNotFindItem\020\002\0223\n/k_Ite"
    "mPurgatoryResponse_Refund_Failed_NoSOCac"
    "he\020\003\0222\n.k_ItemPurgatoryResponse_Refund_F"
    "ailed_NoDetail\020\004\0225\n1k_ItemPurgatoryRespo"
    "nse_Refund_Failed_NexonWebAPI\020\005*\200\n\n\033EGCM"
    "sgInitiateTradeResponse\022*\n&k_EGCMsgIniti"
    "ateTradeResponse_Accepted\020\000\022*\n&k_EGCMsgI"
    "nitiateTradeResponse_Declined\020\001\0226\n2k_EGC"
    "MsgInitiateTradeResponse_VAC_Banned_Init"
    "iator\020\002\0223\n/k_EGCMsgInitiateTradeResponse"
    "_VAC_Banned_Target\020\003\0228\n4k_EGCMsgInitiate"
    "TradeResponse_Target_Already_Trading\020\004\022*"
    "\n&k_EGCMsgInitiateTradeResponse_Disabled"
    "\020\005\022-\n)k_EGCMsgInitiateTradeResponse_NotL"
    "oggedIn\020\006\022(\n$k_EGCMsgInitiateTradeRespon"
    "se_Cancel\020\007\022)\n%k_EGCMsgInitiateTradeResp"
    "onse_TooSoon\020\010\0220\n,k_EGCMsgInitiateTradeR"
    "esponse_TooSoonPenalty\020\t\0228\n4k_EGCMsgInit"
    "iateTradeResponse_Trade_Banned_Initiator"
    "\020\n\0225\n1k_EGCMsgInitiateTradeResponse_Trad"
    "e_Banned_Target\020\013\022C\n\?k_EGCMsgInitiateTra"
    "deResponse_Free_Account_Initiator_DEPREC"
    "ATED\020\014\022:\n6k_EGCMsgInitiateTradeResponse_"
    "Shared_Account_Initiator\020\r\0225\n1k_EGCMsgIn"
    "itiateTradeResponse_Service_Unavailable\020"
    "\016\0220\n,k_EGCMsgInitiateTradeResponse_Targe"
    "t_Blocked\020\017\0223\n/k_EGCMsgInitiateTradeResp"
    "onse_NeedVerifiedEmail\020\020\0220\n,k_EGCMsgInit"
    "iateTradeResponse_NeedSteamGuard\020\021\0224\n0k_"
    "EGCMsgInitiateTradeResponse_SteamGuardDu"
    "ration\020\022\0221\n-k_EGCMsgInitiateTradeRespons"
    "e_TheyCannotTrade\020\023\0227\n3k_EGCMsgInitiateT"
    "radeResponse_Recent_Password_Reset\020\024\0222\n."
    "k_EGCMsgInitiateTradeResponse_Using_New_"
    "Device\020\025\0225\n1k_EGCMsgInitiateTradeRespons"
    "e_Sent_Invalid_Cookie\020\026\0221\n-k_EGCMsgIniti"
    "ateTradeResponse_TooRecentFriend\020\027B\005H\001\200\001"
    "\000", 22281);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "econ_gcmessages.proto", &protobuf_RegisterTypes);
  CMsgApplyAutograph::default_instance_ = new CMsgApplyAutograph();
  CMsgAdjustItemEquippedState::default_instance_ = new CMsgAdjustItemEquippedState();
  CMsgEconPlayerStrangeCountAdjustment::default_instance_ = new CMsgEconPlayerStrangeCountAdjustment();
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_ = new CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment();
  CMsgRequestItemPurgatory_FinalizePurchase::default_instance_ = new CMsgRequestItemPurgatory_FinalizePurchase();
  CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_ = new CMsgRequestItemPurgatory_FinalizePurchaseResponse();
  CMsgRequestItemPurgatory_RefundPurchase::default_instance_ = new CMsgRequestItemPurgatory_RefundPurchase();
  CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_ = new CMsgRequestItemPurgatory_RefundPurchaseResponse();
  CMsgCraftingResponse::default_instance_ = new CMsgCraftingResponse();
  CMsgGCRequestStoreSalesData::default_instance_ = new CMsgGCRequestStoreSalesData();
  CMsgGCRequestStoreSalesDataResponse::default_instance_ = new CMsgGCRequestStoreSalesDataResponse();
  CMsgGCRequestStoreSalesDataResponse_Price::default_instance_ = new CMsgGCRequestStoreSalesDataResponse_Price();
  CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_ = new CMsgGCRequestStoreSalesDataUpToDateResponse();
  CMsgGCToGCPingRequest::default_instance_ = new CMsgGCToGCPingRequest();
  CMsgGCToGCPingResponse::default_instance_ = new CMsgGCToGCPingResponse();
  CMsgGCToGCGetUserSessionServer::default_instance_ = new CMsgGCToGCGetUserSessionServer();
  CMsgGCToGCGetUserSessionServerResponse::default_instance_ = new CMsgGCToGCGetUserSessionServerResponse();
  CMsgGCToGCGetUserServerMembers::default_instance_ = new CMsgGCToGCGetUserServerMembers();
  CMsgGCToGCGetUserServerMembersResponse::default_instance_ = new CMsgGCToGCGetUserServerMembersResponse();
  CMsgLookupMultipleAccountNames::default_instance_ = new CMsgLookupMultipleAccountNames();
  CMsgLookupMultipleAccountNamesResponse::default_instance_ = new CMsgLookupMultipleAccountNamesResponse();
  CMsgLookupMultipleAccountNamesResponse_Account::default_instance_ = new CMsgLookupMultipleAccountNamesResponse_Account();
  CMsgGCToGCGetUserPCBangNo::default_instance_ = new CMsgGCToGCGetUserPCBangNo();
  CMsgGCToGCGetUserPCBangNoResponse::default_instance_ = new CMsgGCToGCGetUserPCBangNoResponse();
  CMsgRequestCrateItems::default_instance_ = new CMsgRequestCrateItems();
  CMsgRequestCrateItemsResponse::default_instance_ = new CMsgRequestCrateItemsResponse();
  CMsgGCToGCCanUseDropRateBonus::default_instance_ = new CMsgGCToGCCanUseDropRateBonus();
  CMsgSQLAddDropRateBonus::default_instance_ = new CMsgSQLAddDropRateBonus();
  CMsgSQLUpgradeBattleBooster::default_instance_ = new CMsgSQLUpgradeBattleBooster();
  CMsgGCToGCRefreshSOCache::default_instance_ = new CMsgGCToGCRefreshSOCache();
  CMsgGCToGCCheckAccountTradeStatus::default_instance_ = new CMsgGCToGCCheckAccountTradeStatus();
  CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_ = new CMsgGCToGCCheckAccountTradeStatusResponse();
  CMsgGCToGCGrantAccountRolledItems::default_instance_ = new CMsgGCToGCGrantAccountRolledItems();
  CMsgGCToGCGrantAccountRolledItems_Item::default_instance_ = new CMsgGCToGCGrantAccountRolledItems_Item();
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_ = new CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute();
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_ = new CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry();
  CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_ = new CMsgGCToGCGrantSelfMadeItemToAccount();
  CMsgUseItem::default_instance_ = new CMsgUseItem();
  CMsgServerUseItem::default_instance_ = new CMsgServerUseItem();
  CMsgUseMultipleItems::default_instance_ = new CMsgUseMultipleItems();
  CMsgGCPartnerBalanceRequest::default_instance_ = new CMsgGCPartnerBalanceRequest();
  CMsgGCPartnerBalanceResponse::default_instance_ = new CMsgGCPartnerBalanceResponse();
  CGCStoreRechargeRedirect_LineItem::default_instance_ = new CGCStoreRechargeRedirect_LineItem();
  CMsgGCPartnerRechargeRedirectURLRequest::default_instance_ = new CMsgGCPartnerRechargeRedirectURLRequest();
  CMsgGCPartnerRechargeRedirectURLResponse::default_instance_ = new CMsgGCPartnerRechargeRedirectURLResponse();
  CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_ = new CMsgGCEconSQLWorkItemEmbeddedRollbackData();
  CMsgCraftStatue::default_instance_ = new CMsgCraftStatue();
  CMsgRedeemCode::default_instance_ = new CMsgRedeemCode();
  CMsgRedeemCodeResponse::default_instance_ = new CMsgRedeemCodeResponse();
  CMsgDevNewItemRequest::default_instance_ = new CMsgDevNewItemRequest();
  CMsgDevNewItemRequestResponse::default_instance_ = new CMsgDevNewItemRequestResponse();
  CMsgGCAddGiftItem::default_instance_ = new CMsgGCAddGiftItem();
  CMsgClientToGCWrapAndDeliverGift::default_instance_ = new CMsgClientToGCWrapAndDeliverGift();
  CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_ = new CMsgClientToGCWrapAndDeliverGiftResponse();
  CMsgClientToGCUnwrapGift::default_instance_ = new CMsgClientToGCUnwrapGift();
  CMsgClientToGCGetGiftPermissions::default_instance_ = new CMsgClientToGCGetGiftPermissions();
  CMsgClientToGCGetGiftPermissionsResponse::default_instance_ = new CMsgClientToGCGetGiftPermissionsResponse();
  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance_ = new CMsgClientToGCGetGiftPermissionsResponse_FriendPermission();
  CMsgClientToGCUnpackBundle::default_instance_ = new CMsgClientToGCUnpackBundle();
  CMsgClientToGCUnpackBundleResponse::default_instance_ = new CMsgClientToGCUnpackBundleResponse();
  CMsgGCToClientStoreTransactionCompleted::default_instance_ = new CMsgGCToClientStoreTransactionCompleted();
  CMsgClientToGCEquipItems::default_instance_ = new CMsgClientToGCEquipItems();
  CMsgClientToGCEquipItemsResponse::default_instance_ = new CMsgClientToGCEquipItemsResponse();
  CMsgClientToGCSetItemStyle::default_instance_ = new CMsgClientToGCSetItemStyle();
  CMsgClientToGCSetItemStyleResponse::default_instance_ = new CMsgClientToGCSetItemStyleResponse();
  CMsgClientToGCUnlockItemStyle::default_instance_ = new CMsgClientToGCUnlockItemStyle();
  CMsgClientToGCUnlockItemStyleResponse::default_instance_ = new CMsgClientToGCUnlockItemStyleResponse();
  CMsgClientToGCSetItemInventoryCategory::default_instance_ = new CMsgClientToGCSetItemInventoryCategory();
  CMsgClientToGCUnlockCrate::default_instance_ = new CMsgClientToGCUnlockCrate();
  CMsgClientToGCUnlockCrateResponse::default_instance_ = new CMsgClientToGCUnlockCrateResponse();
  CMsgClientToGCUnlockCrateResponse_Item::default_instance_ = new CMsgClientToGCUnlockCrateResponse_Item();
  CMsgClientToGCRemoveItemAttribute::default_instance_ = new CMsgClientToGCRemoveItemAttribute();
  CMsgClientToGCRemoveItemAttributeResponse::default_instance_ = new CMsgClientToGCRemoveItemAttributeResponse();
  CMsgClientToGCNameItem::default_instance_ = new CMsgClientToGCNameItem();
  CMsgClientToGCNameItemResponse::default_instance_ = new CMsgClientToGCNameItemResponse();
  CMsgGCSetItemPosition::default_instance_ = new CMsgGCSetItemPosition();
  CAttribute_ItemDynamicRecipeComponent::default_instance_ = new CAttribute_ItemDynamicRecipeComponent();
  CProtoItemSocket::default_instance_ = new CProtoItemSocket();
  CProtoItemSocket_Empty::default_instance_ = new CProtoItemSocket_Empty();
  CProtoItemSocket_Effect::default_instance_ = new CProtoItemSocket_Effect();
  CProtoItemSocket_Color::default_instance_ = new CProtoItemSocket_Color();
  CProtoItemSocket_Strange::default_instance_ = new CProtoItemSocket_Strange();
  CProtoItemSocket_Spectator::default_instance_ = new CProtoItemSocket_Spectator();
  CProtoItemSocket_AssetModifier::default_instance_ = new CProtoItemSocket_AssetModifier();
  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance_ = new CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY();
  CProtoItemSocket_Autograph::default_instance_ = new CProtoItemSocket_Autograph();
  CProtoItemSocket_StaticVisuals::default_instance_ = new CProtoItemSocket_StaticVisuals();
  CAttribute_String::default_instance_ = new CAttribute_String();
  CWorkshop_GetItemDailyRevenue_Request::default_instance_ = new CWorkshop_GetItemDailyRevenue_Request();
  CWorkshop_GetItemDailyRevenue_Response::default_instance_ = new CWorkshop_GetItemDailyRevenue_Response();
  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance_ = new CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue();
  CMsgSQLGCToGCGrantBackpackSlots::default_instance_ = new CMsgSQLGCToGCGrantBackpackSlots();
  CMsgClientToGCLookupAccountName::default_instance_ = new CMsgClientToGCLookupAccountName();
  CMsgClientToGCLookupAccountNameResponse::default_instance_ = new CMsgClientToGCLookupAccountNameResponse();
  CMsgGCToGCDevRevokeUserItems::default_instance_ = new CMsgGCToGCDevRevokeUserItems();
  CMsgClientToGCCreateStaticRecipe::default_instance_ = new CMsgClientToGCCreateStaticRecipe();
  CMsgClientToGCCreateStaticRecipe_Item::default_instance_ = new CMsgClientToGCCreateStaticRecipe_Item();
  CMsgClientToGCCreateStaticRecipeResponse::default_instance_ = new CMsgClientToGCCreateStaticRecipeResponse();
  CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance_ = new CMsgClientToGCCreateStaticRecipeResponse_OutputItem();
  CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance_ = new CMsgClientToGCCreateStaticRecipeResponse_InputError();
  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance_ = new CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput();
  CMsgProcessTransactionOrder::default_instance_ = new CMsgProcessTransactionOrder();
  CMsgProcessTransactionOrder_Item::default_instance_ = new CMsgProcessTransactionOrder_Item();
  CMsgGCToGCStoreProcessCDKeyTransaction::default_instance_ = new CMsgGCToGCStoreProcessCDKeyTransaction();
  CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance_ = new CMsgGCToGCStoreProcessCDKeyTransactionResponse();
  CMsgGCToGCStoreProcessSettlement::default_instance_ = new CMsgGCToGCStoreProcessSettlement();
  CMsgGCToGCStoreProcessSettlementResponse::default_instance_ = new CMsgGCToGCStoreProcessSettlementResponse();
  CMsgGCToGCBroadcastConsoleCommand::default_instance_ = new CMsgGCToGCBroadcastConsoleCommand();
  CMsgGCToGCConsoleOutput::default_instance_ = new CMsgGCToGCConsoleOutput();
  CMsgGCToGCConsoleOutput_OutputLine::default_instance_ = new CMsgGCToGCConsoleOutput_OutputLine();
  CMsgItemAges::default_instance_ = new CMsgItemAges();
  CMsgItemAges_MaxItemIDTimestamp::default_instance_ = new CMsgItemAges_MaxItemIDTimestamp();
  CMsgGCToGCInternalTestMsg::default_instance_ = new CMsgGCToGCInternalTestMsg();
  CMsgGCToGCClientServerVersionsUpdated::default_instance_ = new CMsgGCToGCClientServerVersionsUpdated();
  CMsgApplyAutograph::default_instance_->InitAsDefaultInstance();
  CMsgAdjustItemEquippedState::default_instance_->InitAsDefaultInstance();
  CMsgEconPlayerStrangeCountAdjustment::default_instance_->InitAsDefaultInstance();
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_FinalizePurchase::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_RefundPurchase::default_instance_->InitAsDefaultInstance();
  CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_->InitAsDefaultInstance();
  CMsgCraftingResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesData::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesDataResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesDataResponse_Price::default_instance_->InitAsDefaultInstance();
  CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCPingRequest::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCPingResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserSessionServer::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserSessionServerResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserServerMembers::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserServerMembersResponse::default_instance_->InitAsDefaultInstance();
  CMsgLookupMultipleAccountNames::default_instance_->InitAsDefaultInstance();
  CMsgLookupMultipleAccountNamesResponse::default_instance_->InitAsDefaultInstance();
  CMsgLookupMultipleAccountNamesResponse_Account::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserPCBangNo::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGetUserPCBangNoResponse::default_instance_->InitAsDefaultInstance();
  CMsgRequestCrateItems::default_instance_->InitAsDefaultInstance();
  CMsgRequestCrateItemsResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCCanUseDropRateBonus::default_instance_->InitAsDefaultInstance();
  CMsgSQLAddDropRateBonus::default_instance_->InitAsDefaultInstance();
  CMsgSQLUpgradeBattleBooster::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCRefreshSOCache::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCCheckAccountTradeStatus::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems_Item::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_->InitAsDefaultInstance();
  CMsgUseItem::default_instance_->InitAsDefaultInstance();
  CMsgServerUseItem::default_instance_->InitAsDefaultInstance();
  CMsgUseMultipleItems::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerBalanceRequest::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerBalanceResponse::default_instance_->InitAsDefaultInstance();
  CGCStoreRechargeRedirect_LineItem::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerRechargeRedirectURLRequest::default_instance_->InitAsDefaultInstance();
  CMsgGCPartnerRechargeRedirectURLResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_->InitAsDefaultInstance();
  CMsgCraftStatue::default_instance_->InitAsDefaultInstance();
  CMsgRedeemCode::default_instance_->InitAsDefaultInstance();
  CMsgRedeemCodeResponse::default_instance_->InitAsDefaultInstance();
  CMsgDevNewItemRequest::default_instance_->InitAsDefaultInstance();
  CMsgDevNewItemRequestResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCAddGiftItem::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCWrapAndDeliverGift::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnwrapGift::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCGetGiftPermissions::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCGetGiftPermissionsResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnpackBundle::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnpackBundleResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToClientStoreTransactionCompleted::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCEquipItems::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCEquipItemsResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCSetItemStyle::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCSetItemStyleResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockItemStyle::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockItemStyleResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCSetItemInventoryCategory::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockCrate::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockCrateResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCUnlockCrateResponse_Item::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCRemoveItemAttribute::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCRemoveItemAttributeResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCNameItem::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCNameItemResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCSetItemPosition::default_instance_->InitAsDefaultInstance();
  CAttribute_ItemDynamicRecipeComponent::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_Empty::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_Effect::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_Color::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_Strange::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_Spectator::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_AssetModifier::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_Autograph::default_instance_->InitAsDefaultInstance();
  CProtoItemSocket_StaticVisuals::default_instance_->InitAsDefaultInstance();
  CAttribute_String::default_instance_->InitAsDefaultInstance();
  CWorkshop_GetItemDailyRevenue_Request::default_instance_->InitAsDefaultInstance();
  CWorkshop_GetItemDailyRevenue_Response::default_instance_->InitAsDefaultInstance();
  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance_->InitAsDefaultInstance();
  CMsgSQLGCToGCGrantBackpackSlots::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCLookupAccountName::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCLookupAccountNameResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCDevRevokeUserItems::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCCreateStaticRecipe::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCCreateStaticRecipe_Item::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCCreateStaticRecipeResponse::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance_->InitAsDefaultInstance();
  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance_->InitAsDefaultInstance();
  CMsgProcessTransactionOrder::default_instance_->InitAsDefaultInstance();
  CMsgProcessTransactionOrder_Item::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCStoreProcessCDKeyTransaction::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCStoreProcessSettlement::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCStoreProcessSettlementResponse::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCBroadcastConsoleCommand::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCConsoleOutput::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCConsoleOutput_OutputLine::default_instance_->InitAsDefaultInstance();
  CMsgItemAges::default_instance_->InitAsDefaultInstance();
  CMsgItemAges_MaxItemIDTimestamp::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCInternalTestMsg::default_instance_->InitAsDefaultInstance();
  CMsgGCToGCClientServerVersionsUpdated::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_econ_5fgcmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_econ_5fgcmessages_2eproto {
  StaticDescriptorInitializer_econ_5fgcmessages_2eproto() {
    protobuf_AddDesc_econ_5fgcmessages_2eproto();
  }
} static_descriptor_initializer_econ_5fgcmessages_2eproto_;
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCItemMsg_descriptor_;
}
bool EGCItemMsg_IsValid(int value) {
  switch(value) {
    case 1000:
    case 1001:
    case 1004:
    case 1005:
    case 1006:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1030:
    case 1031:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1049:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1509:
    case 1514:
    case 1601:
    case 1602:
    case 1700:
    case 2001:
    case 2002:
    case 2500:
    case 2501:
    case 2504:
    case 2505:
    case 2506:
    case 2507:
    case 2510:
    case 2511:
    case 2512:
    case 2513:
    case 2514:
    case 2515:
    case 2516:
    case 2517:
    case 2518:
    case 2521:
    case 2522:
    case 2523:
    case 2524:
    case 2528:
    case 2531:
    case 2532:
    case 2533:
    case 2534:
    case 2535:
    case 2536:
    case 2537:
    case 2538:
    case 2539:
    case 2540:
    case 2541:
    case 2542:
    case 2543:
    case 2544:
    case 2545:
    case 2546:
    case 2547:
    case 2548:
    case 2549:
    case 2550:
    case 2551:
    case 2552:
    case 2553:
    case 2554:
    case 2555:
    case 2557:
    case 2558:
    case 2559:
    case 2560:
    case 2561:
    case 2562:
    case 2563:
    case 2564:
    case 2565:
    case 2566:
    case 2567:
    case 2568:
    case 2569:
    case 2570:
    case 2571:
    case 2572:
    case 2573:
    case 2574:
    case 2575:
    case 2576:
    case 2577:
    case 2578:
    case 2580:
    case 2581:
    case 2582:
    case 2583:
    case 2584:
    case 2585:
    case 2586:
    case 2587:
    case 2588:
    case 2589:
    case 2590:
    case 2591:
    case 2592:
    case 2593:
    case 2594:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Finalize_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EItemPurgatoryResponse_Finalize_descriptor_;
}
bool EItemPurgatoryResponse_Finalize_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Refund_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EItemPurgatoryResponse_Refund_descriptor_;
}
bool EItemPurgatoryResponse_Refund_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCMsgInitiateTradeResponse_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCMsgInitiateTradeResponse_descriptor_;
}
bool EGCMsgInitiateTradeResponse_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgApplyAutograph::kAutographItemIdFieldNumber;
const int CMsgApplyAutograph::kItemItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgApplyAutograph::CMsgApplyAutograph()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgApplyAutograph)
}

void CMsgApplyAutograph::InitAsDefaultInstance() {
}

CMsgApplyAutograph::CMsgApplyAutograph(const CMsgApplyAutograph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgApplyAutograph)
}

void CMsgApplyAutograph::SharedCtor() {
  _cached_size_ = 0;
  autograph_item_id_ = GOOGLE_ULONGLONG(0);
  item_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgApplyAutograph::~CMsgApplyAutograph() {
  // @@protoc_insertion_point(destructor:CMsgApplyAutograph)
  SharedDtor();
}

void CMsgApplyAutograph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgApplyAutograph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyAutograph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgApplyAutograph_descriptor_;
}

const CMsgApplyAutograph& CMsgApplyAutograph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgApplyAutograph* CMsgApplyAutograph::default_instance_ = NULL;

CMsgApplyAutograph* CMsgApplyAutograph::New() const {
  return new CMsgApplyAutograph;
}

void CMsgApplyAutograph::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgApplyAutograph*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(autograph_item_id_, item_item_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgApplyAutograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgApplyAutograph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 autograph_item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &autograph_item_id_)));
          set_has_autograph_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_item_id;
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
          set_has_item_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgApplyAutograph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgApplyAutograph)
  return false;
#undef DO_
}

void CMsgApplyAutograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgApplyAutograph)
  // optional uint64 autograph_item_id = 1;
  if (has_autograph_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->autograph_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgApplyAutograph)
}

::google::protobuf::uint8* CMsgApplyAutograph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplyAutograph)
  // optional uint64 autograph_item_id = 1;
  if (has_autograph_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->autograph_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplyAutograph)
  return target;
}

int CMsgApplyAutograph::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 autograph_item_id = 1;
    if (has_autograph_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->autograph_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (has_item_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyAutograph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgApplyAutograph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgApplyAutograph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgApplyAutograph::MergeFrom(const CMsgApplyAutograph& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_autograph_item_id()) {
      set_autograph_item_id(from.autograph_item_id());
    }
    if (from.has_item_item_id()) {
      set_item_item_id(from.item_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgApplyAutograph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyAutograph::CopyFrom(const CMsgApplyAutograph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyAutograph::IsInitialized() const {

  return true;
}

void CMsgApplyAutograph::Swap(CMsgApplyAutograph* other) {
  if (other != this) {
    std::swap(autograph_item_id_, other->autograph_item_id_);
    std::swap(item_item_id_, other->item_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgApplyAutograph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgApplyAutograph_descriptor_;
  metadata.reflection = CMsgApplyAutograph_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgAdjustItemEquippedState::kItemIdFieldNumber;
const int CMsgAdjustItemEquippedState::kNewClassFieldNumber;
const int CMsgAdjustItemEquippedState::kNewSlotFieldNumber;
const int CMsgAdjustItemEquippedState::kStyleIndexFieldNumber;
#endif  // !_MSC_VER

CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAdjustItemEquippedState)
}

void CMsgAdjustItemEquippedState::InitAsDefaultInstance() {
}

CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgAdjustItemEquippedState)
}

void CMsgAdjustItemEquippedState::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  new_class_ = 0u;
  new_slot_ = 0u;
  style_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAdjustItemEquippedState::~CMsgAdjustItemEquippedState() {
  // @@protoc_insertion_point(destructor:CMsgAdjustItemEquippedState)
  SharedDtor();
}

void CMsgAdjustItemEquippedState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAdjustItemEquippedState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAdjustItemEquippedState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAdjustItemEquippedState_descriptor_;
}

const CMsgAdjustItemEquippedState& CMsgAdjustItemEquippedState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgAdjustItemEquippedState* CMsgAdjustItemEquippedState::default_instance_ = NULL;

CMsgAdjustItemEquippedState* CMsgAdjustItemEquippedState::New() const {
  return new CMsgAdjustItemEquippedState;
}

void CMsgAdjustItemEquippedState::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgAdjustItemEquippedState*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, style_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgAdjustItemEquippedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAdjustItemEquippedState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_new_class;
        break;
      }

      // optional uint32 new_class = 2;
      case 2: {
        if (tag == 16) {
         parse_new_class:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_class_)));
          set_has_new_class();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_new_slot;
        break;
      }

      // optional uint32 new_slot = 3;
      case 3: {
        if (tag == 24) {
         parse_new_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_slot_)));
          set_has_new_slot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_style_index;
        break;
      }

      // optional uint32 style_index = 4;
      case 4: {
        if (tag == 32) {
         parse_style_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
          set_has_style_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAdjustItemEquippedState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAdjustItemEquippedState)
  return false;
#undef DO_
}

void CMsgAdjustItemEquippedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAdjustItemEquippedState)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_class = 2;
  if (has_new_class()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_class(), output);
  }

  // optional uint32 new_slot = 3;
  if (has_new_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->new_slot(), output);
  }

  // optional uint32 style_index = 4;
  if (has_style_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAdjustItemEquippedState)
}

::google::protobuf::uint8* CMsgAdjustItemEquippedState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAdjustItemEquippedState)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_class = 2;
  if (has_new_class()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_class(), target);
  }

  // optional uint32 new_slot = 3;
  if (has_new_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->new_slot(), target);
  }

  // optional uint32 style_index = 4;
  if (has_style_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAdjustItemEquippedState)
  return target;
}

int CMsgAdjustItemEquippedState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_class = 2;
    if (has_new_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_class());
    }

    // optional uint32 new_slot = 3;
    if (has_new_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_slot());
    }

    // optional uint32 style_index = 4;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAdjustItemEquippedState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgAdjustItemEquippedState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgAdjustItemEquippedState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAdjustItemEquippedState::MergeFrom(const CMsgAdjustItemEquippedState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_new_class()) {
      set_new_class(from.new_class());
    }
    if (from.has_new_slot()) {
      set_new_slot(from.new_slot());
    }
    if (from.has_style_index()) {
      set_style_index(from.style_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgAdjustItemEquippedState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAdjustItemEquippedState::CopyFrom(const CMsgAdjustItemEquippedState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAdjustItemEquippedState::IsInitialized() const {

  return true;
}

void CMsgAdjustItemEquippedState::Swap(CMsgAdjustItemEquippedState* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(new_class_, other->new_class_);
    std::swap(new_slot_, other->new_slot_);
    std::swap(style_index_, other->style_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgAdjustItemEquippedState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAdjustItemEquippedState_descriptor_;
  metadata.reflection = CMsgAdjustItemEquippedState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kEventTypeFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kItemIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kAdjustmentFieldNumber;
#endif  // !_MSC_VER

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InitAsDefaultInstance() {
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedCtor() {
  _cached_size_ = 0;
  event_type_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  adjustment_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_;
}

const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance_ = NULL;

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::New() const {
  return new CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, adjustment_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
          set_has_event_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_adjustment;
        break;
      }

      // optional uint32 adjustment = 3;
      case 3: {
        if (tag == 24) {
         parse_adjustment:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adjustment_)));
          set_has_adjustment();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return false;
#undef DO_
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  // optional uint32 event_type = 1;
  if (has_event_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_type(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 adjustment = 3;
  if (has_adjustment()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->adjustment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  // optional uint32 event_type = 1;
  if (has_event_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_type(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 adjustment = 3;
  if (has_adjustment()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->adjustment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return target;
}

int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 event_type = 1;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_type());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 adjustment = 3;
    if (has_adjustment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adjustment());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_type()) {
      set_event_type(from.event_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_adjustment()) {
      set_adjustment(from.adjustment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::IsInitialized() const {

  return true;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
  if (other != this) {
    std::swap(event_type_, other->event_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(adjustment_, other->adjustment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_descriptor_;
  metadata.reflection = CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgEconPlayerStrangeCountAdjustment::kAccountIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment::kStrangeCountAdjustmentsFieldNumber;
#endif  // !_MSC_VER

CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgEconPlayerStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment::InitAsDefaultInstance() {
}

CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgEconPlayerStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgEconPlayerStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:CMsgEconPlayerStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgEconPlayerStrangeCountAdjustment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgEconPlayerStrangeCountAdjustment_descriptor_;
}

const CMsgEconPlayerStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgEconPlayerStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::default_instance_ = NULL;

CMsgEconPlayerStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::New() const {
  return new CMsgEconPlayerStrangeCountAdjustment;
}

void CMsgEconPlayerStrangeCountAdjustment::Clear() {
  account_id_ = 0u;
  strange_count_adjustments_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgEconPlayerStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgEconPlayerStrangeCountAdjustment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strange_count_adjustments;
        break;
      }

      // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
      case 2: {
        if (tag == 18) {
         parse_strange_count_adjustments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_strange_count_adjustments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strange_count_adjustments;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgEconPlayerStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgEconPlayerStrangeCountAdjustment)
  return false;
#undef DO_
}

void CMsgEconPlayerStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgEconPlayerStrangeCountAdjustment)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (int i = 0; i < this->strange_count_adjustments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->strange_count_adjustments(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgEconPlayerStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEconPlayerStrangeCountAdjustment)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (int i = 0; i < this->strange_count_adjustments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->strange_count_adjustments(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEconPlayerStrangeCountAdjustment)
  return target;
}

int CMsgEconPlayerStrangeCountAdjustment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  total_size += 1 * this->strange_count_adjustments_size();
  for (int i = 0; i < this->strange_count_adjustments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->strange_count_adjustments(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgEconPlayerStrangeCountAdjustment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
  GOOGLE_CHECK_NE(&from, this);
  strange_count_adjustments_.MergeFrom(from.strange_count_adjustments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment::IsInitialized() const {

  return true;
}

void CMsgEconPlayerStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    strange_count_adjustments_.Swap(&other->strange_count_adjustments_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgEconPlayerStrangeCountAdjustment_descriptor_;
  metadata.reflection = CMsgEconPlayerStrangeCountAdjustment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_FinalizePurchase::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_FinalizePurchase)
}

void CMsgRequestItemPurgatory_FinalizePurchase::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase(const CMsgRequestItemPurgatory_FinalizePurchase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_FinalizePurchase)
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_FinalizePurchase::~CMsgRequestItemPurgatory_FinalizePurchase() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_FinalizePurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_FinalizePurchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_FinalizePurchase_descriptor_;
}

const CMsgRequestItemPurgatory_FinalizePurchase& CMsgRequestItemPurgatory_FinalizePurchase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_FinalizePurchase* CMsgRequestItemPurgatory_FinalizePurchase::default_instance_ = NULL;

CMsgRequestItemPurgatory_FinalizePurchase* CMsgRequestItemPurgatory_FinalizePurchase::New() const {
  return new CMsgRequestItemPurgatory_FinalizePurchase;
}

void CMsgRequestItemPurgatory_FinalizePurchase::Clear() {
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_FinalizePurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_FinalizePurchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_FinalizePurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_FinalizePurchase)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_FinalizePurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_FinalizePurchase)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_FinalizePurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_FinalizePurchase)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_FinalizePurchase)
  return target;
}

int CMsgRequestItemPurgatory_FinalizePurchase::ByteSize() const {
  int total_size = 0;

  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_FinalizePurchase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchase::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchase::Swap(CMsgRequestItemPurgatory_FinalizePurchase* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_FinalizePurchase_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_FinalizePurchase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_FinalizePurchaseResponse::kResultFieldNumber;
const int CMsgRequestItemPurgatory_FinalizePurchaseResponse::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse::~CMsgRequestItemPurgatory_FinalizePurchaseResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchaseResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_;
}

const CMsgRequestItemPurgatory_FinalizePurchaseResponse& CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse* CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance_ = NULL;

CMsgRequestItemPurgatory_FinalizePurchaseResponse* CMsgRequestItemPurgatory_FinalizePurchaseResponse::New() const {
  return new CMsgRequestItemPurgatory_FinalizePurchaseResponse;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Clear() {
  result_ = 0u;
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (tag == 16) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_item_ids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchaseResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return target;
}

int CMsgRequestItemPurgatory_FinalizePurchaseResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  // repeated uint64 item_ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchaseResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_FinalizePurchaseResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Swap(CMsgRequestItemPurgatory_FinalizePurchaseResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchaseResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_FinalizePurchaseResponse_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_FinalizePurchaseResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_RefundPurchase::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_RefundPurchase)
}

void CMsgRequestItemPurgatory_RefundPurchase::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase(const CMsgRequestItemPurgatory_RefundPurchase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_RefundPurchase)
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_RefundPurchase::~CMsgRequestItemPurgatory_RefundPurchase() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_RefundPurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_RefundPurchase_descriptor_;
}

const CMsgRequestItemPurgatory_RefundPurchase& CMsgRequestItemPurgatory_RefundPurchase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_RefundPurchase* CMsgRequestItemPurgatory_RefundPurchase::default_instance_ = NULL;

CMsgRequestItemPurgatory_RefundPurchase* CMsgRequestItemPurgatory_RefundPurchase::New() const {
  return new CMsgRequestItemPurgatory_RefundPurchase;
}

void CMsgRequestItemPurgatory_RefundPurchase::Clear() {
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_RefundPurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_RefundPurchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_RefundPurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_RefundPurchase)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_RefundPurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_RefundPurchase)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_RefundPurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_RefundPurchase)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_RefundPurchase)
  return target;
}

int CMsgRequestItemPurgatory_RefundPurchase::ByteSize() const {
  int total_size = 0;

  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_RefundPurchase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchase::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_RefundPurchase::Swap(CMsgRequestItemPurgatory_RefundPurchase* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_RefundPurchase_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_RefundPurchase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestItemPurgatory_RefundPurchaseResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::InitAsDefaultInstance() {
}

CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestItemPurgatory_RefundPurchaseResponse::~CMsgRequestItemPurgatory_RefundPurchaseResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchaseResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_;
}

const CMsgRequestItemPurgatory_RefundPurchaseResponse& CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestItemPurgatory_RefundPurchaseResponse* CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance_ = NULL;

CMsgRequestItemPurgatory_RefundPurchaseResponse* CMsgRequestItemPurgatory_RefundPurchaseResponse::New() const {
  return new CMsgRequestItemPurgatory_RefundPurchaseResponse;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchaseResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return target;
}

int CMsgRequestItemPurgatory_RefundPurchaseResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchaseResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestItemPurgatory_RefundPurchaseResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::IsInitialized() const {

  return true;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Swap(CMsgRequestItemPurgatory_RefundPurchaseResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchaseResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestItemPurgatory_RefundPurchaseResponse_descriptor_;
  metadata.reflection = CMsgRequestItemPurgatory_RefundPurchaseResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgCraftingResponse::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgCraftingResponse::CMsgCraftingResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCraftingResponse)
}

void CMsgCraftingResponse::InitAsDefaultInstance() {
}

CMsgCraftingResponse::CMsgCraftingResponse(const CMsgCraftingResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgCraftingResponse)
}

void CMsgCraftingResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgCraftingResponse::~CMsgCraftingResponse() {
  // @@protoc_insertion_point(destructor:CMsgCraftingResponse)
  SharedDtor();
}

void CMsgCraftingResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgCraftingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCraftingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgCraftingResponse_descriptor_;
}

const CMsgCraftingResponse& CMsgCraftingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgCraftingResponse* CMsgCraftingResponse::default_instance_ = NULL;

CMsgCraftingResponse* CMsgCraftingResponse::New() const {
  return new CMsgCraftingResponse;
}

void CMsgCraftingResponse::Clear() {
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgCraftingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCraftingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCraftingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCraftingResponse)
  return false;
#undef DO_
}

void CMsgCraftingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCraftingResponse)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCraftingResponse)
}

::google::protobuf::uint8* CMsgCraftingResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftingResponse)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftingResponse)
  return target;
}

int CMsgCraftingResponse::ByteSize() const {
  int total_size = 0;

  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCraftingResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgCraftingResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgCraftingResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgCraftingResponse::MergeFrom(const CMsgCraftingResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgCraftingResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftingResponse::CopyFrom(const CMsgCraftingResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftingResponse::IsInitialized() const {

  return true;
}

void CMsgCraftingResponse::Swap(CMsgCraftingResponse* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgCraftingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgCraftingResponse_descriptor_;
  metadata.reflection = CMsgCraftingResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesData::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesData::kCurrencyFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesData)
}

void CMsgGCRequestStoreSalesData::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData(const CMsgGCRequestStoreSalesData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesData)
}

void CMsgGCRequestStoreSalesData::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  currency_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesData::~CMsgGCRequestStoreSalesData() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesData)
  SharedDtor();
}

void CMsgGCRequestStoreSalesData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesData_descriptor_;
}

const CMsgGCRequestStoreSalesData& CMsgGCRequestStoreSalesData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesData* CMsgGCRequestStoreSalesData::default_instance_ = NULL;

CMsgGCRequestStoreSalesData* CMsgGCRequestStoreSalesData::New() const {
  return new CMsgGCRequestStoreSalesData;
}

void CMsgGCRequestStoreSalesData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(version_, currency_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_currency;
        break;
      }

      // optional uint32 currency = 2;
      case 2: {
        if (tag == 16) {
         parse_currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesData)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesData)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 currency = 2;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currency(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesData)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesData)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 currency = 2;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currency(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesData)
  return target;
}

int CMsgGCRequestStoreSalesData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 currency = 2;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesData::MergeFrom(const CMsgGCRequestStoreSalesData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesData::CopyFrom(const CMsgGCRequestStoreSalesData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesData::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesData::Swap(CMsgGCRequestStoreSalesData* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(currency_, other->currency_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesData_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesDataResponse_Price::kItemDefFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse_Price::kPriceFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesDataResponse.Price)
}

void CMsgGCRequestStoreSalesDataResponse_Price::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price(const CMsgGCRequestStoreSalesDataResponse_Price& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataResponse.Price)
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedCtor() {
  _cached_size_ = 0;
  item_def_ = 0u;
  price_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesDataResponse_Price::~CMsgGCRequestStoreSalesDataResponse_Price() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataResponse.Price)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse_Price::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesDataResponse_Price_descriptor_;
}

const CMsgGCRequestStoreSalesDataResponse_Price& CMsgGCRequestStoreSalesDataResponse_Price::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse_Price::default_instance_ = NULL;

CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse_Price::New() const {
  return new CMsgGCRequestStoreSalesDataResponse_Price;
}

void CMsgGCRequestStoreSalesDataResponse_Price::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesDataResponse_Price*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_def_, price_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesDataResponse_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesDataResponse.Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_price;
        break;
      }

      // optional uint32 price = 2;
      case 2: {
        if (tag == 16) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesDataResponse.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesDataResponse.Price)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataResponse_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesDataResponse.Price)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 price = 2;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesDataResponse.Price)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse_Price::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataResponse.Price)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 price = 2;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataResponse.Price)
  return target;
}

int CMsgGCRequestStoreSalesDataResponse_Price::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 price = 2;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse_Price* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesDataResponse_Price*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse_Price::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesDataResponse_Price::Swap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
  if (other != this) {
    std::swap(item_def_, other->item_def_);
    std::swap(price_, other->price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse_Price::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesDataResponse_Price_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesDataResponse_Price_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesDataResponse::kSalePriceFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kExpirationTimeFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesDataResponse)
}

void CMsgGCRequestStoreSalesDataResponse::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse(const CMsgGCRequestStoreSalesDataResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataResponse)
}

void CMsgGCRequestStoreSalesDataResponse::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  expiration_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesDataResponse::~CMsgGCRequestStoreSalesDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesDataResponse_descriptor_;
}

const CMsgGCRequestStoreSalesDataResponse& CMsgGCRequestStoreSalesDataResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesDataResponse* CMsgGCRequestStoreSalesDataResponse::default_instance_ = NULL;

CMsgGCRequestStoreSalesDataResponse* CMsgGCRequestStoreSalesDataResponse::New() const {
  return new CMsgGCRequestStoreSalesDataResponse;
}

void CMsgGCRequestStoreSalesDataResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesDataResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(version_, expiration_time_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  sale_price_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
      case 1: {
        if (tag == 10) {
         parse_sale_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sale_price()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_sale_price;
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // optional uint32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_expiration_time;
        break;
      }

      // optional uint32 expiration_time = 3;
      case 3: {
        if (tag == 24) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesDataResponse)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesDataResponse)
  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (int i = 0; i < this->sale_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sale_price(i), output);
  }

  // optional uint32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // optional uint32 expiration_time = 3;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiration_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesDataResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataResponse)
  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (int i = 0; i < this->sale_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sale_price(i), target);
  }

  // optional uint32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // optional uint32 expiration_time = 3;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiration_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataResponse)
  return target;
}

int CMsgGCRequestStoreSalesDataResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 3;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  total_size += 1 * this->sale_price_size();
  for (int i = 0; i < this->sale_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sale_price(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesDataResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  sale_price_.MergeFrom(from.sale_price_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesDataResponse::Swap(CMsgGCRequestStoreSalesDataResponse* other) {
  if (other != this) {
    sale_price_.Swap(&other->sale_price_);
    std::swap(version_, other->version_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesDataResponse_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesDataResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kExpirationTimeFieldNumber;
#endif  // !_MSC_VER

CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::InitAsDefaultInstance() {
}

CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse(const CMsgGCRequestStoreSalesDataUpToDateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  expiration_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCRequestStoreSalesDataUpToDateResponse::~CMsgGCRequestStoreSalesDataUpToDateResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataUpToDateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_;
}

const CMsgGCRequestStoreSalesDataUpToDateResponse& CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCRequestStoreSalesDataUpToDateResponse* CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance_ = NULL;

CMsgGCRequestStoreSalesDataUpToDateResponse* CMsgGCRequestStoreSalesDataUpToDateResponse::New() const {
  return new CMsgGCRequestStoreSalesDataUpToDateResponse;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCRequestStoreSalesDataUpToDateResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(version_, expiration_time_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_expiration_time;
        break;
      }

      // optional uint32 expiration_time = 2;
      case 2: {
        if (tag == 16) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestStoreSalesDataUpToDateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestStoreSalesDataUpToDateResponse)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 expiration_time = 2;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->expiration_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestStoreSalesDataUpToDateResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataUpToDateResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 expiration_time = 2;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->expiration_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataUpToDateResponse)
  return target;
}

int CMsgGCRequestStoreSalesDataUpToDateResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 2;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataUpToDateResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCRequestStoreSalesDataUpToDateResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::IsInitialized() const {

  return true;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Swap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataUpToDateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCRequestStoreSalesDataUpToDateResponse_descriptor_;
  metadata.reflection = CMsgGCRequestStoreSalesDataUpToDateResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGCToGCPingRequest::CMsgGCToGCPingRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCPingRequest)
}

void CMsgGCToGCPingRequest::InitAsDefaultInstance() {
}

CMsgGCToGCPingRequest::CMsgGCToGCPingRequest(const CMsgGCToGCPingRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCPingRequest)
}

void CMsgGCToGCPingRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCPingRequest::~CMsgGCToGCPingRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCPingRequest)
  SharedDtor();
}

void CMsgGCToGCPingRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCPingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCPingRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCPingRequest_descriptor_;
}

const CMsgGCToGCPingRequest& CMsgGCToGCPingRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCPingRequest* CMsgGCToGCPingRequest::default_instance_ = NULL;

CMsgGCToGCPingRequest* CMsgGCToGCPingRequest::New() const {
  return new CMsgGCToGCPingRequest;
}

void CMsgGCToGCPingRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCPingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCPingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCPingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCPingRequest)
  return false;
#undef DO_
}

void CMsgGCToGCPingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCPingRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCPingRequest)
}

::google::protobuf::uint8* CMsgGCToGCPingRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCPingRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCPingRequest)
  return target;
}

int CMsgGCToGCPingRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCPingRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCPingRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCPingRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingRequest::MergeFrom(const CMsgGCToGCPingRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCPingRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingRequest::CopyFrom(const CMsgGCToGCPingRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingRequest::IsInitialized() const {

  return true;
}

void CMsgGCToGCPingRequest::Swap(CMsgGCToGCPingRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCPingRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCPingRequest_descriptor_;
  metadata.reflection = CMsgGCToGCPingRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGCToGCPingResponse::CMsgGCToGCPingResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCPingResponse)
}

void CMsgGCToGCPingResponse::InitAsDefaultInstance() {
}

CMsgGCToGCPingResponse::CMsgGCToGCPingResponse(const CMsgGCToGCPingResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCPingResponse)
}

void CMsgGCToGCPingResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCPingResponse::~CMsgGCToGCPingResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCPingResponse)
  SharedDtor();
}

void CMsgGCToGCPingResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCPingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCPingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCPingResponse_descriptor_;
}

const CMsgGCToGCPingResponse& CMsgGCToGCPingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCPingResponse* CMsgGCToGCPingResponse::default_instance_ = NULL;

CMsgGCToGCPingResponse* CMsgGCToGCPingResponse::New() const {
  return new CMsgGCToGCPingResponse;
}

void CMsgGCToGCPingResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCPingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCPingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCPingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCPingResponse)
  return false;
#undef DO_
}

void CMsgGCToGCPingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCPingResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCPingResponse)
}

::google::protobuf::uint8* CMsgGCToGCPingResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCPingResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCPingResponse)
  return target;
}

int CMsgGCToGCPingResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCPingResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCPingResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCPingResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingResponse::MergeFrom(const CMsgGCToGCPingResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCPingResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingResponse::CopyFrom(const CMsgGCToGCPingResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCPingResponse::Swap(CMsgGCToGCPingResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCPingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCPingResponse_descriptor_;
  metadata.reflection = CMsgGCToGCPingResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserSessionServer::kAccountIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserSessionServer)
}

void CMsgGCToGCGetUserSessionServer::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer(const CMsgGCToGCGetUserSessionServer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserSessionServer)
}

void CMsgGCToGCGetUserSessionServer::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserSessionServer::~CMsgGCToGCGetUserSessionServer() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserSessionServer)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserSessionServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserSessionServer_descriptor_;
}

const CMsgGCToGCGetUserSessionServer& CMsgGCToGCGetUserSessionServer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserSessionServer* CMsgGCToGCGetUserSessionServer::default_instance_ = NULL;

CMsgGCToGCGetUserSessionServer* CMsgGCToGCGetUserSessionServer::New() const {
  return new CMsgGCToGCGetUserSessionServer;
}

void CMsgGCToGCGetUserSessionServer::Clear() {
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserSessionServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserSessionServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserSessionServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserSessionServer)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserSessionServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserSessionServer)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserSessionServer)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserSessionServer)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserSessionServer)
  return target;
}

int CMsgGCToGCGetUserSessionServer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserSessionServer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const CMsgGCToGCGetUserSessionServer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const CMsgGCToGCGetUserSessionServer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServer::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserSessionServer::Swap(CMsgGCToGCGetUserSessionServer* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserSessionServer_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserSessionServer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserSessionServerResponse::kServerSteamIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserSessionServerResponse)
}

void CMsgGCToGCGetUserSessionServerResponse::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse(const CMsgGCToGCGetUserSessionServerResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserSessionServerResponse)
}

void CMsgGCToGCGetUserSessionServerResponse::SharedCtor() {
  _cached_size_ = 0;
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserSessionServerResponse::~CMsgGCToGCGetUserSessionServerResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserSessionServerResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServerResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserSessionServerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserSessionServerResponse_descriptor_;
}

const CMsgGCToGCGetUserSessionServerResponse& CMsgGCToGCGetUserSessionServerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserSessionServerResponse* CMsgGCToGCGetUserSessionServerResponse::default_instance_ = NULL;

CMsgGCToGCGetUserSessionServerResponse* CMsgGCToGCGetUserSessionServerResponse::New() const {
  return new CMsgGCToGCGetUserSessionServerResponse;
}

void CMsgGCToGCGetUserSessionServerResponse::Clear() {
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserSessionServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserSessionServerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 server_steam_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_steam_id_)));
          set_has_server_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserSessionServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserSessionServerResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserSessionServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserSessionServerResponse)
  // optional fixed64 server_steam_id = 1;
  if (has_server_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->server_steam_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserSessionServerResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServerResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserSessionServerResponse)
  // optional fixed64 server_steam_id = 1;
  if (has_server_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->server_steam_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserSessionServerResponse)
  return target;
}

int CMsgGCToGCGetUserSessionServerResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed64 server_steam_id = 1;
    if (has_server_steam_id()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServerResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserSessionServerResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_steam_id()) {
      set_server_steam_id(from.server_steam_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServerResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserSessionServerResponse::Swap(CMsgGCToGCGetUserSessionServerResponse* other) {
  if (other != this) {
    std::swap(server_steam_id_, other->server_steam_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServerResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserSessionServerResponse_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserSessionServerResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserServerMembers::kAccountIdFieldNumber;
const int CMsgGCToGCGetUserServerMembers::kMaxSpectatorsFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserServerMembers)
}

void CMsgGCToGCGetUserServerMembers::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers(const CMsgGCToGCGetUserServerMembers& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserServerMembers)
}

void CMsgGCToGCGetUserServerMembers::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  max_spectators_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserServerMembers::~CMsgGCToGCGetUserServerMembers() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserServerMembers)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembers::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserServerMembers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembers::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserServerMembers_descriptor_;
}

const CMsgGCToGCGetUserServerMembers& CMsgGCToGCGetUserServerMembers::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserServerMembers* CMsgGCToGCGetUserServerMembers::default_instance_ = NULL;

CMsgGCToGCGetUserServerMembers* CMsgGCToGCGetUserServerMembers::New() const {
  return new CMsgGCToGCGetUserServerMembers;
}

void CMsgGCToGCGetUserServerMembers::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGetUserServerMembers*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, max_spectators_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserServerMembers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserServerMembers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_spectators;
        break;
      }

      // optional uint32 max_spectators = 2;
      case 2: {
        if (tag == 16) {
         parse_max_spectators:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_spectators_)));
          set_has_max_spectators();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserServerMembers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserServerMembers)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserServerMembers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserServerMembers)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 max_spectators = 2;
  if (has_max_spectators()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_spectators(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserServerMembers)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembers::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserServerMembers)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 max_spectators = 2;
  if (has_max_spectators()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_spectators(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserServerMembers)
  return target;
}

int CMsgGCToGCGetUserServerMembers::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 max_spectators = 2;
    if (has_max_spectators()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_spectators());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembers* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserServerMembers*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const CMsgGCToGCGetUserServerMembers& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_max_spectators()) {
      set_max_spectators(from.max_spectators());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const CMsgGCToGCGetUserServerMembers& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembers::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserServerMembers::Swap(CMsgGCToGCGetUserServerMembers* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(max_spectators_, other->max_spectators_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembers::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserServerMembers_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserServerMembers_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserServerMembersResponse::kMemberAccountIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserServerMembersResponse)
}

void CMsgGCToGCGetUserServerMembersResponse::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse(const CMsgGCToGCGetUserServerMembersResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserServerMembersResponse)
}

void CMsgGCToGCGetUserServerMembersResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserServerMembersResponse::~CMsgGCToGCGetUserServerMembersResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserServerMembersResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembersResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserServerMembersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserServerMembersResponse_descriptor_;
}

const CMsgGCToGCGetUserServerMembersResponse& CMsgGCToGCGetUserServerMembersResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserServerMembersResponse* CMsgGCToGCGetUserServerMembersResponse::default_instance_ = NULL;

CMsgGCToGCGetUserServerMembersResponse* CMsgGCToGCGetUserServerMembersResponse::New() const {
  return new CMsgGCToGCGetUserServerMembersResponse;
}

void CMsgGCToGCGetUserServerMembersResponse::Clear() {
  member_account_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserServerMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserServerMembersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 member_account_id = 1;
      case 1: {
        if (tag == 8) {
         parse_member_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_member_account_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_account_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_member_account_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserServerMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserServerMembersResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserServerMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserServerMembersResponse)
  // repeated uint32 member_account_id = 1;
  for (int i = 0; i < this->member_account_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->member_account_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserServerMembersResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembersResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserServerMembersResponse)
  // repeated uint32 member_account_id = 1;
  for (int i = 0; i < this->member_account_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->member_account_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserServerMembersResponse)
  return target;
}

int CMsgGCToGCGetUserServerMembersResponse::ByteSize() const {
  int total_size = 0;

  // repeated uint32 member_account_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->member_account_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->member_account_id(i));
    }
    total_size += 1 * this->member_account_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembersResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserServerMembersResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_account_id_.MergeFrom(from.member_account_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembersResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserServerMembersResponse::Swap(CMsgGCToGCGetUserServerMembersResponse* other) {
  if (other != this) {
    member_account_id_.Swap(&other->member_account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserServerMembersResponse_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserServerMembersResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgLookupMultipleAccountNames::kAccountidsFieldNumber;
#endif  // !_MSC_VER

CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLookupMultipleAccountNames)
}

void CMsgLookupMultipleAccountNames::InitAsDefaultInstance() {
}

CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames(const CMsgLookupMultipleAccountNames& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNames)
}

void CMsgLookupMultipleAccountNames::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLookupMultipleAccountNames::~CMsgLookupMultipleAccountNames() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNames)
  SharedDtor();
}

void CMsgLookupMultipleAccountNames::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgLookupMultipleAccountNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNames::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLookupMultipleAccountNames_descriptor_;
}

const CMsgLookupMultipleAccountNames& CMsgLookupMultipleAccountNames::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgLookupMultipleAccountNames* CMsgLookupMultipleAccountNames::default_instance_ = NULL;

CMsgLookupMultipleAccountNames* CMsgLookupMultipleAccountNames::New() const {
  return new CMsgLookupMultipleAccountNames;
}

void CMsgLookupMultipleAccountNames::Clear() {
  accountids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLookupMultipleAccountNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLookupMultipleAccountNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 accountids = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accountids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_accountids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLookupMultipleAccountNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLookupMultipleAccountNames)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLookupMultipleAccountNames)
  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_accountids_cached_byte_size_);
  }
  for (int i = 0; i < this->accountids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->accountids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLookupMultipleAccountNames)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNames::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNames)
  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _accountids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->accountids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->accountids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNames)
  return target;
}

int CMsgLookupMultipleAccountNames::ByteSize() const {
  int total_size = 0;

  // repeated uint32 accountids = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->accountids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->accountids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _accountids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNames::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNames* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLookupMultipleAccountNames*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNames::MergeFrom(const CMsgLookupMultipleAccountNames& from) {
  GOOGLE_CHECK_NE(&from, this);
  accountids_.MergeFrom(from.accountids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLookupMultipleAccountNames::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const CMsgLookupMultipleAccountNames& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNames::IsInitialized() const {

  return true;
}

void CMsgLookupMultipleAccountNames::Swap(CMsgLookupMultipleAccountNames* other) {
  if (other != this) {
    accountids_.Swap(&other->accountids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNames::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLookupMultipleAccountNames_descriptor_;
  metadata.reflection = CMsgLookupMultipleAccountNames_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgLookupMultipleAccountNamesResponse_Account::kAccountidFieldNumber;
const int CMsgLookupMultipleAccountNamesResponse_Account::kPersonaFieldNumber;
#endif  // !_MSC_VER

CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLookupMultipleAccountNamesResponse.Account)
}

void CMsgLookupMultipleAccountNamesResponse_Account::InitAsDefaultInstance() {
}

CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account(const CMsgLookupMultipleAccountNamesResponse_Account& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNamesResponse.Account)
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = 0u;
  persona_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLookupMultipleAccountNamesResponse_Account::~CMsgLookupMultipleAccountNamesResponse_Account() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNamesResponse.Account)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedDtor() {
  if (persona_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_;
  }
  if (this != default_instance_) {
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse_Account::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLookupMultipleAccountNamesResponse_Account_descriptor_;
}

const CMsgLookupMultipleAccountNamesResponse_Account& CMsgLookupMultipleAccountNamesResponse_Account::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse_Account::default_instance_ = NULL;

CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse_Account::New() const {
  return new CMsgLookupMultipleAccountNamesResponse_Account;
}

void CMsgLookupMultipleAccountNamesResponse_Account::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    accountid_ = 0u;
    if (has_persona()) {
      if (persona_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        persona_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLookupMultipleAccountNamesResponse_Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLookupMultipleAccountNamesResponse.Account)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_persona;
        break;
      }

      // optional string persona = 2;
      case 2: {
        if (tag == 18) {
         parse_persona:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona().data(), this->persona().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "persona");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLookupMultipleAccountNamesResponse.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLookupMultipleAccountNamesResponse.Account)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNamesResponse_Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLookupMultipleAccountNamesResponse.Account)
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional string persona = 2;
  if (has_persona()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), this->persona().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "persona");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLookupMultipleAccountNamesResponse.Account)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse_Account::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNamesResponse.Account)
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional string persona = 2;
  if (has_persona()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), this->persona().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "persona");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNamesResponse.Account)
  return target;
}

int CMsgLookupMultipleAccountNamesResponse_Account::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional string persona = 2;
    if (has_persona()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse_Account* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLookupMultipleAccountNamesResponse_Account*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
    if (from.has_persona()) {
      set_persona(from.persona());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse_Account::IsInitialized() const {

  return true;
}

void CMsgLookupMultipleAccountNamesResponse_Account::Swap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
  if (other != this) {
    std::swap(accountid_, other->accountid_);
    std::swap(persona_, other->persona_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse_Account::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLookupMultipleAccountNamesResponse_Account_descriptor_;
  metadata.reflection = CMsgLookupMultipleAccountNamesResponse_Account_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgLookupMultipleAccountNamesResponse::kAccountsFieldNumber;
#endif  // !_MSC_VER

CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLookupMultipleAccountNamesResponse)
}

void CMsgLookupMultipleAccountNamesResponse::InitAsDefaultInstance() {
}

CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse(const CMsgLookupMultipleAccountNamesResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNamesResponse)
}

void CMsgLookupMultipleAccountNamesResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLookupMultipleAccountNamesResponse::~CMsgLookupMultipleAccountNamesResponse() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNamesResponse)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgLookupMultipleAccountNamesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLookupMultipleAccountNamesResponse_descriptor_;
}

const CMsgLookupMultipleAccountNamesResponse& CMsgLookupMultipleAccountNamesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgLookupMultipleAccountNamesResponse* CMsgLookupMultipleAccountNamesResponse::default_instance_ = NULL;

CMsgLookupMultipleAccountNamesResponse* CMsgLookupMultipleAccountNamesResponse::New() const {
  return new CMsgLookupMultipleAccountNamesResponse;
}

void CMsgLookupMultipleAccountNamesResponse::Clear() {
  accounts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLookupMultipleAccountNamesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLookupMultipleAccountNamesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
      case 1: {
        if (tag == 10) {
         parse_accounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_accounts;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLookupMultipleAccountNamesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLookupMultipleAccountNamesResponse)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNamesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLookupMultipleAccountNamesResponse)
  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (int i = 0; i < this->accounts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accounts(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLookupMultipleAccountNamesResponse)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNamesResponse)
  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (int i = 0; i < this->accounts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->accounts(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNamesResponse)
  return target;
}

int CMsgLookupMultipleAccountNamesResponse::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  total_size += 1 * this->accounts_size();
  for (int i = 0; i < this->accounts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->accounts(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLookupMultipleAccountNamesResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  accounts_.MergeFrom(from.accounts_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse::IsInitialized() const {

  return true;
}

void CMsgLookupMultipleAccountNamesResponse::Swap(CMsgLookupMultipleAccountNamesResponse* other) {
  if (other != this) {
    accounts_.Swap(&other->accounts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLookupMultipleAccountNamesResponse_descriptor_;
  metadata.reflection = CMsgLookupMultipleAccountNamesResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserPCBangNo::kAccountIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserPCBangNo::CMsgGCToGCGetUserPCBangNo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserPCBangNo)
}

void CMsgGCToGCGetUserPCBangNo::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserPCBangNo::CMsgGCToGCGetUserPCBangNo(const CMsgGCToGCGetUserPCBangNo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserPCBangNo)
}

void CMsgGCToGCGetUserPCBangNo::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserPCBangNo::~CMsgGCToGCGetUserPCBangNo() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserPCBangNo)
  SharedDtor();
}

void CMsgGCToGCGetUserPCBangNo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserPCBangNo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserPCBangNo_descriptor_;
}

const CMsgGCToGCGetUserPCBangNo& CMsgGCToGCGetUserPCBangNo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserPCBangNo* CMsgGCToGCGetUserPCBangNo::default_instance_ = NULL;

CMsgGCToGCGetUserPCBangNo* CMsgGCToGCGetUserPCBangNo::New() const {
  return new CMsgGCToGCGetUserPCBangNo;
}

void CMsgGCToGCGetUserPCBangNo::Clear() {
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserPCBangNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserPCBangNo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserPCBangNo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserPCBangNo)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserPCBangNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserPCBangNo)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserPCBangNo)
}

::google::protobuf::uint8* CMsgGCToGCGetUserPCBangNo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserPCBangNo)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserPCBangNo)
  return target;
}

int CMsgGCToGCGetUserPCBangNo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserPCBangNo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserPCBangNo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserPCBangNo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserPCBangNo::MergeFrom(const CMsgGCToGCGetUserPCBangNo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserPCBangNo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserPCBangNo::CopyFrom(const CMsgGCToGCGetUserPCBangNo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserPCBangNo::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserPCBangNo::Swap(CMsgGCToGCGetUserPCBangNo* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserPCBangNo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserPCBangNo_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserPCBangNo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGetUserPCBangNoResponse::kPcBangNoFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGetUserPCBangNoResponse::CMsgGCToGCGetUserPCBangNoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGetUserPCBangNoResponse)
}

void CMsgGCToGCGetUserPCBangNoResponse::InitAsDefaultInstance() {
}

CMsgGCToGCGetUserPCBangNoResponse::CMsgGCToGCGetUserPCBangNoResponse(const CMsgGCToGCGetUserPCBangNoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserPCBangNoResponse)
}

void CMsgGCToGCGetUserPCBangNoResponse::SharedCtor() {
  _cached_size_ = 0;
  pc_bang_no_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGetUserPCBangNoResponse::~CMsgGCToGCGetUserPCBangNoResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserPCBangNoResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserPCBangNoResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGetUserPCBangNoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGetUserPCBangNoResponse_descriptor_;
}

const CMsgGCToGCGetUserPCBangNoResponse& CMsgGCToGCGetUserPCBangNoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGetUserPCBangNoResponse* CMsgGCToGCGetUserPCBangNoResponse::default_instance_ = NULL;

CMsgGCToGCGetUserPCBangNoResponse* CMsgGCToGCGetUserPCBangNoResponse::New() const {
  return new CMsgGCToGCGetUserPCBangNoResponse;
}

void CMsgGCToGCGetUserPCBangNoResponse::Clear() {
  pc_bang_no_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGetUserPCBangNoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGetUserPCBangNoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pc_bang_no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pc_bang_no_)));
          set_has_pc_bang_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGetUserPCBangNoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGetUserPCBangNoResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserPCBangNoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGetUserPCBangNoResponse)
  // optional uint32 pc_bang_no = 1;
  if (has_pc_bang_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pc_bang_no(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGetUserPCBangNoResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserPCBangNoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserPCBangNoResponse)
  // optional uint32 pc_bang_no = 1;
  if (has_pc_bang_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pc_bang_no(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserPCBangNoResponse)
  return target;
}

int CMsgGCToGCGetUserPCBangNoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 pc_bang_no = 1;
    if (has_pc_bang_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pc_bang_no());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserPCBangNoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGetUserPCBangNoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGetUserPCBangNoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserPCBangNoResponse::MergeFrom(const CMsgGCToGCGetUserPCBangNoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pc_bang_no()) {
      set_pc_bang_no(from.pc_bang_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGetUserPCBangNoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserPCBangNoResponse::CopyFrom(const CMsgGCToGCGetUserPCBangNoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserPCBangNoResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCGetUserPCBangNoResponse::Swap(CMsgGCToGCGetUserPCBangNoResponse* other) {
  if (other != this) {
    std::swap(pc_bang_no_, other->pc_bang_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGetUserPCBangNoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGetUserPCBangNoResponse_descriptor_;
  metadata.reflection = CMsgGCToGCGetUserPCBangNoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRequestCrateItems::kCrateItemDefFieldNumber;
#endif  // !_MSC_VER

CMsgRequestCrateItems::CMsgRequestCrateItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestCrateItems)
}

void CMsgRequestCrateItems::InitAsDefaultInstance() {
}

CMsgRequestCrateItems::CMsgRequestCrateItems(const CMsgRequestCrateItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestCrateItems)
}

void CMsgRequestCrateItems::SharedCtor() {
  _cached_size_ = 0;
  crate_item_def_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestCrateItems::~CMsgRequestCrateItems() {
  // @@protoc_insertion_point(destructor:CMsgRequestCrateItems)
  SharedDtor();
}

void CMsgRequestCrateItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestCrateItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestCrateItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestCrateItems_descriptor_;
}

const CMsgRequestCrateItems& CMsgRequestCrateItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestCrateItems* CMsgRequestCrateItems::default_instance_ = NULL;

CMsgRequestCrateItems* CMsgRequestCrateItems::New() const {
  return new CMsgRequestCrateItems;
}

void CMsgRequestCrateItems::Clear() {
  crate_item_def_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestCrateItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestCrateItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crate_item_def_)));
          set_has_crate_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestCrateItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestCrateItems)
  return false;
#undef DO_
}

void CMsgRequestCrateItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestCrateItems)
  // optional uint32 crate_item_def = 1;
  if (has_crate_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->crate_item_def(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestCrateItems)
}

::google::protobuf::uint8* CMsgRequestCrateItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestCrateItems)
  // optional uint32 crate_item_def = 1;
  if (has_crate_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->crate_item_def(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestCrateItems)
  return target;
}

int CMsgRequestCrateItems::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 crate_item_def = 1;
    if (has_crate_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crate_item_def());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestCrateItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestCrateItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestCrateItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItems::MergeFrom(const CMsgRequestCrateItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_crate_item_def()) {
      set_crate_item_def(from.crate_item_def());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestCrateItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItems::CopyFrom(const CMsgRequestCrateItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItems::IsInitialized() const {

  return true;
}

void CMsgRequestCrateItems::Swap(CMsgRequestCrateItems* other) {
  if (other != this) {
    std::swap(crate_item_def_, other->crate_item_def_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestCrateItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestCrateItems_descriptor_;
  metadata.reflection = CMsgRequestCrateItems_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgRequestCrateItemsResponse_EResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestCrateItemsResponse_EResult_descriptor_;
}
bool CMsgRequestCrateItemsResponse_EResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::k_Succeeded;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::k_Failed;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::EResult_MIN;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::EResult_MAX;
const int CMsgRequestCrateItemsResponse::EResult_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgRequestCrateItemsResponse::kResponseFieldNumber;
const int CMsgRequestCrateItemsResponse::kItemDefsFieldNumber;
const int CMsgRequestCrateItemsResponse::kPeekItemDefFieldNumber;
#endif  // !_MSC_VER

CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestCrateItemsResponse)
}

void CMsgRequestCrateItemsResponse::InitAsDefaultInstance() {
}

CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse(const CMsgRequestCrateItemsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestCrateItemsResponse)
}

void CMsgRequestCrateItemsResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0u;
  peek_item_def_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRequestCrateItemsResponse::~CMsgRequestCrateItemsResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestCrateItemsResponse)
  SharedDtor();
}

void CMsgRequestCrateItemsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRequestCrateItemsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestCrateItemsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRequestCrateItemsResponse_descriptor_;
}

const CMsgRequestCrateItemsResponse& CMsgRequestCrateItemsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRequestCrateItemsResponse* CMsgRequestCrateItemsResponse::default_instance_ = NULL;

CMsgRequestCrateItemsResponse* CMsgRequestCrateItemsResponse::New() const {
  return new CMsgRequestCrateItemsResponse;
}

void CMsgRequestCrateItemsResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgRequestCrateItemsResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(response_, peek_item_def_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  item_defs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRequestCrateItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestCrateItemsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
          set_has_response();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_defs;
        break;
      }

      // repeated uint32 item_defs = 2;
      case 2: {
        if (tag == 16) {
         parse_item_defs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_item_defs())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_item_defs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_defs;
        if (input->ExpectTag(24)) goto parse_peek_item_def;
        break;
      }

      // optional uint32 peek_item_def = 3;
      case 3: {
        if (tag == 24) {
         parse_peek_item_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &peek_item_def_)));
          set_has_peek_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestCrateItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestCrateItemsResponse)
  return false;
#undef DO_
}

void CMsgRequestCrateItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestCrateItemsResponse)
  // optional uint32 response = 1;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // repeated uint32 item_defs = 2;
  for (int i = 0; i < this->item_defs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->item_defs(i), output);
  }

  // optional uint32 peek_item_def = 3;
  if (has_peek_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->peek_item_def(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestCrateItemsResponse)
}

::google::protobuf::uint8* CMsgRequestCrateItemsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestCrateItemsResponse)
  // optional uint32 response = 1;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // repeated uint32 item_defs = 2;
  for (int i = 0; i < this->item_defs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->item_defs(i), target);
  }

  // optional uint32 peek_item_def = 3;
  if (has_peek_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->peek_item_def(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestCrateItemsResponse)
  return target;
}

int CMsgRequestCrateItemsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

    // optional uint32 peek_item_def = 3;
    if (has_peek_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->peek_item_def());
    }

  }
  // repeated uint32 item_defs = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_defs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->item_defs(i));
    }
    total_size += 1 * this->item_defs_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestCrateItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRequestCrateItemsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRequestCrateItemsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItemsResponse::MergeFrom(const CMsgRequestCrateItemsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_defs_.MergeFrom(from.item_defs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_peek_item_def()) {
      set_peek_item_def(from.peek_item_def());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRequestCrateItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItemsResponse::CopyFrom(const CMsgRequestCrateItemsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItemsResponse::IsInitialized() const {

  return true;
}

void CMsgRequestCrateItemsResponse::Swap(CMsgRequestCrateItemsResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    item_defs_.Swap(&other->item_defs_);
    std::swap(peek_item_def_, other->peek_item_def_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRequestCrateItemsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRequestCrateItemsResponse_descriptor_;
  metadata.reflection = CMsgRequestCrateItemsResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCCanUseDropRateBonus::kAccountIdFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kExclusiveItemDefFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kAllowEqualRateFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCCanUseDropRateBonus)
}

void CMsgGCToGCCanUseDropRateBonus::InitAsDefaultInstance() {
}

CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus(const CMsgGCToGCCanUseDropRateBonus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCCanUseDropRateBonus)
}

void CMsgGCToGCCanUseDropRateBonus::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  drop_rate_bonus_ = 0;
  booster_type_ = 0u;
  exclusive_item_def_ = 0u;
  allow_equal_rate_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCCanUseDropRateBonus::~CMsgGCToGCCanUseDropRateBonus() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCCanUseDropRateBonus)
  SharedDtor();
}

void CMsgGCToGCCanUseDropRateBonus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCCanUseDropRateBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCanUseDropRateBonus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCCanUseDropRateBonus_descriptor_;
}

const CMsgGCToGCCanUseDropRateBonus& CMsgGCToGCCanUseDropRateBonus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCCanUseDropRateBonus* CMsgGCToGCCanUseDropRateBonus::default_instance_ = NULL;

CMsgGCToGCCanUseDropRateBonus* CMsgGCToGCCanUseDropRateBonus::New() const {
  return new CMsgGCToGCCanUseDropRateBonus;
}

void CMsgGCToGCCanUseDropRateBonus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCCanUseDropRateBonus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(account_id_, allow_equal_rate_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCCanUseDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCCanUseDropRateBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_drop_rate_bonus;
        break;
      }

      // optional float drop_rate_bonus = 2;
      case 2: {
        if (tag == 21) {
         parse_drop_rate_bonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
          set_has_drop_rate_bonus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_booster_type;
        break;
      }

      // optional uint32 booster_type = 3;
      case 3: {
        if (tag == 24) {
         parse_booster_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
          set_has_booster_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_exclusive_item_def;
        break;
      }

      // optional uint32 exclusive_item_def = 4;
      case 4: {
        if (tag == 32) {
         parse_exclusive_item_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exclusive_item_def_)));
          set_has_exclusive_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_allow_equal_rate;
        break;
      }

      // optional bool allow_equal_rate = 5;
      case 5: {
        if (tag == 40) {
         parse_allow_equal_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_equal_rate_)));
          set_has_allow_equal_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCCanUseDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCCanUseDropRateBonus)
  return false;
#undef DO_
}

void CMsgGCToGCCanUseDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCCanUseDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional float drop_rate_bonus = 2;
  if (has_drop_rate_bonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 3;
  if (has_booster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->booster_type(), output);
  }

  // optional uint32 exclusive_item_def = 4;
  if (has_exclusive_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exclusive_item_def(), output);
  }

  // optional bool allow_equal_rate = 5;
  if (has_allow_equal_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->allow_equal_rate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCCanUseDropRateBonus)
}

::google::protobuf::uint8* CMsgGCToGCCanUseDropRateBonus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCCanUseDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional float drop_rate_bonus = 2;
  if (has_drop_rate_bonus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 3;
  if (has_booster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->booster_type(), target);
  }

  // optional uint32 exclusive_item_def = 4;
  if (has_exclusive_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exclusive_item_def(), target);
  }

  // optional bool allow_equal_rate = 5;
  if (has_allow_equal_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->allow_equal_rate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCCanUseDropRateBonus)
  return target;
}

int CMsgGCToGCCanUseDropRateBonus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional float drop_rate_bonus = 2;
    if (has_drop_rate_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 3;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 exclusive_item_def = 4;
    if (has_exclusive_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exclusive_item_def());
    }

    // optional bool allow_equal_rate = 5;
    if (has_allow_equal_rate()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCCanUseDropRateBonus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCCanUseDropRateBonus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_drop_rate_bonus()) {
      set_drop_rate_bonus(from.drop_rate_bonus());
    }
    if (from.has_booster_type()) {
      set_booster_type(from.booster_type());
    }
    if (from.has_exclusive_item_def()) {
      set_exclusive_item_def(from.exclusive_item_def());
    }
    if (from.has_allow_equal_rate()) {
      set_allow_equal_rate(from.allow_equal_rate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCanUseDropRateBonus::IsInitialized() const {

  return true;
}

void CMsgGCToGCCanUseDropRateBonus::Swap(CMsgGCToGCCanUseDropRateBonus* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(drop_rate_bonus_, other->drop_rate_bonus_);
    std::swap(booster_type_, other->booster_type_);
    std::swap(exclusive_item_def_, other->exclusive_item_def_);
    std::swap(allow_equal_rate_, other->allow_equal_rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCCanUseDropRateBonus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCCanUseDropRateBonus_descriptor_;
  metadata.reflection = CMsgGCToGCCanUseDropRateBonus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSQLAddDropRateBonus::kAccountIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemDefFieldNumber;
const int CMsgSQLAddDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgSQLAddDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgSQLAddDropRateBonus::kSecondsDurationFieldNumber;
const int CMsgSQLAddDropRateBonus::kEndTimeStampFieldNumber;
#endif  // !_MSC_VER

CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSQLAddDropRateBonus)
}

void CMsgSQLAddDropRateBonus::InitAsDefaultInstance() {
}

CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus(const CMsgSQLAddDropRateBonus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSQLAddDropRateBonus)
}

void CMsgSQLAddDropRateBonus::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  item_def_ = 0u;
  drop_rate_bonus_ = 0;
  booster_type_ = 0u;
  seconds_duration_ = 0u;
  end_time_stamp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSQLAddDropRateBonus::~CMsgSQLAddDropRateBonus() {
  // @@protoc_insertion_point(destructor:CMsgSQLAddDropRateBonus)
  SharedDtor();
}

void CMsgSQLAddDropRateBonus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSQLAddDropRateBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLAddDropRateBonus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSQLAddDropRateBonus_descriptor_;
}

const CMsgSQLAddDropRateBonus& CMsgSQLAddDropRateBonus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgSQLAddDropRateBonus* CMsgSQLAddDropRateBonus::default_instance_ = NULL;

CMsgSQLAddDropRateBonus* CMsgSQLAddDropRateBonus::New() const {
  return new CMsgSQLAddDropRateBonus;
}

void CMsgSQLAddDropRateBonus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSQLAddDropRateBonus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(item_id_, end_time_stamp_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSQLAddDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSQLAddDropRateBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_def;
        break;
      }

      // optional uint32 item_def = 3;
      case 3: {
        if (tag == 24) {
         parse_item_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_drop_rate_bonus;
        break;
      }

      // optional float drop_rate_bonus = 4;
      case 4: {
        if (tag == 37) {
         parse_drop_rate_bonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
          set_has_drop_rate_bonus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_booster_type;
        break;
      }

      // optional uint32 booster_type = 5;
      case 5: {
        if (tag == 40) {
         parse_booster_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
          set_has_booster_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_seconds_duration;
        break;
      }

      // optional uint32 seconds_duration = 6;
      case 6: {
        if (tag == 48) {
         parse_seconds_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_duration_)));
          set_has_seconds_duration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_end_time_stamp;
        break;
      }

      // optional uint32 end_time_stamp = 7;
      case 7: {
        if (tag == 56) {
         parse_end_time_stamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_stamp_)));
          set_has_end_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSQLAddDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSQLAddDropRateBonus)
  return false;
#undef DO_
}

void CMsgSQLAddDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSQLAddDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 item_def = 3;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_def(), output);
  }

  // optional float drop_rate_bonus = 4;
  if (has_drop_rate_bonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 5;
  if (has_booster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->booster_type(), output);
  }

  // optional uint32 seconds_duration = 6;
  if (has_seconds_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->seconds_duration(), output);
  }

  // optional uint32 end_time_stamp = 7;
  if (has_end_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->end_time_stamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSQLAddDropRateBonus)
}

::google::protobuf::uint8* CMsgSQLAddDropRateBonus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSQLAddDropRateBonus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 item_def = 3;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_def(), target);
  }

  // optional float drop_rate_bonus = 4;
  if (has_drop_rate_bonus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 5;
  if (has_booster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->booster_type(), target);
  }

  // optional uint32 seconds_duration = 6;
  if (has_seconds_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->seconds_duration(), target);
  }

  // optional uint32 end_time_stamp = 7;
  if (has_end_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->end_time_stamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSQLAddDropRateBonus)
  return target;
}

int CMsgSQLAddDropRateBonus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 item_def = 3;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float drop_rate_bonus = 4;
    if (has_drop_rate_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 5;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 seconds_duration = 6;
    if (has_seconds_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds_duration());
    }

    // optional uint32 end_time_stamp = 7;
    if (has_end_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->end_time_stamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLAddDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSQLAddDropRateBonus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSQLAddDropRateBonus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSQLAddDropRateBonus::MergeFrom(const CMsgSQLAddDropRateBonus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_drop_rate_bonus()) {
      set_drop_rate_bonus(from.drop_rate_bonus());
    }
    if (from.has_booster_type()) {
      set_booster_type(from.booster_type());
    }
    if (from.has_seconds_duration()) {
      set_seconds_duration(from.seconds_duration());
    }
    if (from.has_end_time_stamp()) {
      set_end_time_stamp(from.end_time_stamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSQLAddDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLAddDropRateBonus::CopyFrom(const CMsgSQLAddDropRateBonus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLAddDropRateBonus::IsInitialized() const {

  return true;
}

void CMsgSQLAddDropRateBonus::Swap(CMsgSQLAddDropRateBonus* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_def_, other->item_def_);
    std::swap(drop_rate_bonus_, other->drop_rate_bonus_);
    std::swap(booster_type_, other->booster_type_);
    std::swap(seconds_duration_, other->seconds_duration_);
    std::swap(end_time_stamp_, other->end_time_stamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSQLAddDropRateBonus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSQLAddDropRateBonus_descriptor_;
  metadata.reflection = CMsgSQLAddDropRateBonus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSQLUpgradeBattleBooster::kAccountIdFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kItemDefFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBonusToAddFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBoosterTypeFieldNumber;
#endif  // !_MSC_VER

CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSQLUpgradeBattleBooster)
}

void CMsgSQLUpgradeBattleBooster::InitAsDefaultInstance() {
}

CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster(const CMsgSQLUpgradeBattleBooster& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSQLUpgradeBattleBooster)
}

void CMsgSQLUpgradeBattleBooster::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  item_def_ = 0u;
  bonus_to_add_ = 0;
  booster_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSQLUpgradeBattleBooster::~CMsgSQLUpgradeBattleBooster() {
  // @@protoc_insertion_point(destructor:CMsgSQLUpgradeBattleBooster)
  SharedDtor();
}

void CMsgSQLUpgradeBattleBooster::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSQLUpgradeBattleBooster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLUpgradeBattleBooster::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSQLUpgradeBattleBooster_descriptor_;
}

const CMsgSQLUpgradeBattleBooster& CMsgSQLUpgradeBattleBooster::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgSQLUpgradeBattleBooster* CMsgSQLUpgradeBattleBooster::default_instance_ = NULL;

CMsgSQLUpgradeBattleBooster* CMsgSQLUpgradeBattleBooster::New() const {
  return new CMsgSQLUpgradeBattleBooster;
}

void CMsgSQLUpgradeBattleBooster::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSQLUpgradeBattleBooster*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, booster_type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSQLUpgradeBattleBooster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSQLUpgradeBattleBooster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_def;
        break;
      }

      // optional uint32 item_def = 2;
      case 2: {
        if (tag == 16) {
         parse_item_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_bonus_to_add;
        break;
      }

      // optional float bonus_to_add = 3;
      case 3: {
        if (tag == 29) {
         parse_bonus_to_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_to_add_)));
          set_has_bonus_to_add();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_booster_type;
        break;
      }

      // optional uint32 booster_type = 4;
      case 4: {
        if (tag == 32) {
         parse_booster_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
          set_has_booster_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSQLUpgradeBattleBooster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSQLUpgradeBattleBooster)
  return false;
#undef DO_
}

void CMsgSQLUpgradeBattleBooster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSQLUpgradeBattleBooster)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 item_def = 2;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_def(), output);
  }

  // optional float bonus_to_add = 3;
  if (has_bonus_to_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bonus_to_add(), output);
  }

  // optional uint32 booster_type = 4;
  if (has_booster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->booster_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSQLUpgradeBattleBooster)
}

::google::protobuf::uint8* CMsgSQLUpgradeBattleBooster::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSQLUpgradeBattleBooster)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 item_def = 2;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_def(), target);
  }

  // optional float bonus_to_add = 3;
  if (has_bonus_to_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bonus_to_add(), target);
  }

  // optional uint32 booster_type = 4;
  if (has_booster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->booster_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSQLUpgradeBattleBooster)
  return target;
}

int CMsgSQLUpgradeBattleBooster::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_def = 2;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float bonus_to_add = 3;
    if (has_bonus_to_add()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 4;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSQLUpgradeBattleBooster* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSQLUpgradeBattleBooster*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const CMsgSQLUpgradeBattleBooster& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_bonus_to_add()) {
      set_bonus_to_add(from.bonus_to_add());
    }
    if (from.has_booster_type()) {
      set_booster_type(from.booster_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const CMsgSQLUpgradeBattleBooster& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLUpgradeBattleBooster::IsInitialized() const {

  return true;
}

void CMsgSQLUpgradeBattleBooster::Swap(CMsgSQLUpgradeBattleBooster* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(item_def_, other->item_def_);
    std::swap(bonus_to_add_, other->bonus_to_add_);
    std::swap(booster_type_, other->booster_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSQLUpgradeBattleBooster::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSQLUpgradeBattleBooster_descriptor_;
  metadata.reflection = CMsgSQLUpgradeBattleBooster_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCRefreshSOCache::kAccountIdFieldNumber;
const int CMsgGCToGCRefreshSOCache::kReloadFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCRefreshSOCache)
}

void CMsgGCToGCRefreshSOCache::InitAsDefaultInstance() {
}

CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache(const CMsgGCToGCRefreshSOCache& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCRefreshSOCache)
}

void CMsgGCToGCRefreshSOCache::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  reload_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCRefreshSOCache::~CMsgGCToGCRefreshSOCache() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCRefreshSOCache)
  SharedDtor();
}

void CMsgGCToGCRefreshSOCache::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCRefreshSOCache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCRefreshSOCache::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCRefreshSOCache_descriptor_;
}

const CMsgGCToGCRefreshSOCache& CMsgGCToGCRefreshSOCache::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCRefreshSOCache* CMsgGCToGCRefreshSOCache::default_instance_ = NULL;

CMsgGCToGCRefreshSOCache* CMsgGCToGCRefreshSOCache::New() const {
  return new CMsgGCToGCRefreshSOCache;
}

void CMsgGCToGCRefreshSOCache::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCRefreshSOCache*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, reload_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCRefreshSOCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCRefreshSOCache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reload;
        break;
      }

      // optional bool reload = 2;
      case 2: {
        if (tag == 16) {
         parse_reload:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reload_)));
          set_has_reload();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCRefreshSOCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCRefreshSOCache)
  return false;
#undef DO_
}

void CMsgGCToGCRefreshSOCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCRefreshSOCache)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool reload = 2;
  if (has_reload()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reload(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCRefreshSOCache)
}

::google::protobuf::uint8* CMsgGCToGCRefreshSOCache::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCRefreshSOCache)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool reload = 2;
  if (has_reload()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reload(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCRefreshSOCache)
  return target;
}

int CMsgGCToGCRefreshSOCache::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool reload = 2;
    if (has_reload()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCRefreshSOCache* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCRefreshSOCache*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const CMsgGCToGCRefreshSOCache& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_reload()) {
      set_reload(from.reload());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const CMsgGCToGCRefreshSOCache& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCRefreshSOCache::IsInitialized() const {

  return true;
}

void CMsgGCToGCRefreshSOCache::Swap(CMsgGCToGCRefreshSOCache* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(reload_, other->reload_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCRefreshSOCache::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCRefreshSOCache_descriptor_;
  metadata.reflection = CMsgGCToGCRefreshSOCache_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCCheckAccountTradeStatus::kAccountIdFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatus::kInitiatorFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCCheckAccountTradeStatus)
}

void CMsgGCToGCCheckAccountTradeStatus::InitAsDefaultInstance() {
}

CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus(const CMsgGCToGCCheckAccountTradeStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCCheckAccountTradeStatus)
}

void CMsgGCToGCCheckAccountTradeStatus::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  initiator_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCCheckAccountTradeStatus::~CMsgGCToGCCheckAccountTradeStatus() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCCheckAccountTradeStatus)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCCheckAccountTradeStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCCheckAccountTradeStatus_descriptor_;
}

const CMsgGCToGCCheckAccountTradeStatus& CMsgGCToGCCheckAccountTradeStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCCheckAccountTradeStatus* CMsgGCToGCCheckAccountTradeStatus::default_instance_ = NULL;

CMsgGCToGCCheckAccountTradeStatus* CMsgGCToGCCheckAccountTradeStatus::New() const {
  return new CMsgGCToGCCheckAccountTradeStatus;
}

void CMsgGCToGCCheckAccountTradeStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCCheckAccountTradeStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, initiator_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCCheckAccountTradeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCCheckAccountTradeStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_initiator;
        break;
      }

      // optional bool initiator = 2;
      case 2: {
        if (tag == 16) {
         parse_initiator:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initiator_)));
          set_has_initiator();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCCheckAccountTradeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCCheckAccountTradeStatus)
  return false;
#undef DO_
}

void CMsgGCToGCCheckAccountTradeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCCheckAccountTradeStatus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool initiator = 2;
  if (has_initiator()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->initiator(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCCheckAccountTradeStatus)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCCheckAccountTradeStatus)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool initiator = 2;
  if (has_initiator()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->initiator(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCCheckAccountTradeStatus)
  return target;
}

int CMsgGCToGCCheckAccountTradeStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool initiator = 2;
    if (has_initiator()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCCheckAccountTradeStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_initiator()) {
      set_initiator(from.initiator());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatus::IsInitialized() const {

  return true;
}

void CMsgGCToGCCheckAccountTradeStatus::Swap(CMsgGCToGCCheckAccountTradeStatus* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(initiator_, other->initiator_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCCheckAccountTradeStatus_descriptor_;
  metadata.reflection = CMsgGCToGCCheckAccountTradeStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCCheckAccountTradeStatusResponse::kCanTradeFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatusResponse::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCCheckAccountTradeStatusResponse)
}

void CMsgGCToGCCheckAccountTradeStatusResponse::InitAsDefaultInstance() {
}

CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse(const CMsgGCToGCCheckAccountTradeStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCCheckAccountTradeStatusResponse)
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  can_trade_ = false;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCCheckAccountTradeStatusResponse::~CMsgGCToGCCheckAccountTradeStatusResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCCheckAccountTradeStatusResponse)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_;
}

const CMsgGCToGCCheckAccountTradeStatusResponse& CMsgGCToGCCheckAccountTradeStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCCheckAccountTradeStatusResponse* CMsgGCToGCCheckAccountTradeStatusResponse::default_instance_ = NULL;

CMsgGCToGCCheckAccountTradeStatusResponse* CMsgGCToGCCheckAccountTradeStatusResponse::New() const {
  return new CMsgGCToGCCheckAccountTradeStatusResponse;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCCheckAccountTradeStatusResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(can_trade_, error_code_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCCheckAccountTradeStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCCheckAccountTradeStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool can_trade = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_trade_)));
          set_has_can_trade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }

      // optional uint32 error_code = 2;
      case 2: {
        if (tag == 16) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCCheckAccountTradeStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCCheckAccountTradeStatusResponse)
  return false;
#undef DO_
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCCheckAccountTradeStatusResponse)
  // optional bool can_trade = 1;
  if (has_can_trade()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->can_trade(), output);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCCheckAccountTradeStatusResponse)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCCheckAccountTradeStatusResponse)
  // optional bool can_trade = 1;
  if (has_can_trade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->can_trade(), target);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCCheckAccountTradeStatusResponse)
  return target;
}

int CMsgGCToGCCheckAccountTradeStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool can_trade = 1;
    if (has_can_trade()) {
      total_size += 1 + 1;
    }

    // optional uint32 error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCCheckAccountTradeStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_can_trade()) {
      set_can_trade(from.can_trade());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatusResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::Swap(CMsgGCToGCCheckAccountTradeStatusResponse* other) {
  if (other != this) {
    std::swap(can_trade_, other->can_trade_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCCheckAccountTradeStatusResponse_descriptor_;
  metadata.reflection = CMsgGCToGCCheckAccountTradeStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kNameFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueUint32FieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueFloatFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_uint32_ = 0u;
  value_float_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::~CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::New() const {
  return new CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(value_uint32_, value_float_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value_uint32;
        break;
      }

      // optional uint32 value_uint32 = 2;
      case 2: {
        if (tag == 16) {
         parse_value_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_uint32_)));
          set_has_value_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_value_float;
        break;
      }

      // optional float value_float = 3;
      case 3: {
        if (tag == 29) {
         parse_value_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_float_)));
          set_has_value_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 value_uint32 = 2;
  if (has_value_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value_uint32(), output);
  }

  // optional float value_float = 3;
  if (has_value_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->value_float(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 value_uint32 = 2;
  if (has_value_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value_uint32(), target);
  }

  // optional float value_float = 3;
  if (has_value_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->value_float(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 value_uint32 = 2;
    if (has_value_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value_uint32());
    }

    // optional float value_float = 3;
    if (has_value_float()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_value_uint32()) {
      set_value_uint32(from.value_uint32());
    }
    if (from.has_value_float()) {
      set_value_float(from.value_float());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Swap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(value_uint32_, other->value_uint32_);
    std::swap(value_float_, other->value_float_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kOwnerAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditDataFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedCtor() {
  _cached_size_ = 0;
  owner_account_id_ = 0u;
  audit_action_ = 0u;
  audit_data_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::~CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::New() const {
  return new CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(owner_account_id_, audit_data_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
          set_has_owner_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_audit_action;
        break;
      }

      // optional uint32 audit_action = 2;
      case 2: {
        if (tag == 16) {
         parse_audit_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
          set_has_audit_action();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_audit_data;
        break;
      }

      // optional uint64 audit_data = 3;
      case 3: {
        if (tag == 24) {
         parse_audit_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &audit_data_)));
          set_has_audit_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  // optional uint32 owner_account_id = 1;
  if (has_owner_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_account_id(), output);
  }

  // optional uint32 audit_action = 2;
  if (has_audit_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->audit_action(), output);
  }

  // optional uint64 audit_data = 3;
  if (has_audit_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->audit_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  // optional uint32 owner_account_id = 1;
  if (has_owner_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_account_id(), target);
  }

  // optional uint32 audit_action = 2;
  if (has_audit_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->audit_action(), target);
  }

  // optional uint64 audit_data = 3;
  if (has_audit_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->audit_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 owner_account_id = 1;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional uint32 audit_action = 2;
    if (has_audit_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint64 audit_data = 3;
    if (has_audit_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->audit_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_owner_account_id()) {
      set_owner_account_id(from.owner_account_id());
    }
    if (from.has_audit_action()) {
      set_audit_action(from.audit_action());
    }
    if (from.has_audit_data()) {
      set_audit_data(from.audit_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Swap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
  if (other != this) {
    std::swap(owner_account_id_, other->owner_account_id_);
    std::swap(audit_action_, other->audit_action_);
    std::swap(audit_data_, other->audit_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems_Item::kItemDefFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kLootListsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kIgnoreLimitFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kOriginFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kDynamicAttributesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kAdditionalAuditEntriesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kInventoryTokenFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems.Item)
}

void CMsgGCToGCGrantAccountRolledItems_Item::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item(const CMsgGCToGCGrantAccountRolledItems_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems.Item)
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_def_ = 0u;
  ignore_limit_ = false;
  origin_ = 0u;
  inventory_token_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems_Item::~CMsgGCToGCGrantAccountRolledItems_Item() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems.Item)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_Item_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems_Item& CMsgGCToGCGrantAccountRolledItems_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems_Item::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems_Item::New() const {
  return new CMsgGCToGCGrantAccountRolledItems_Item;
}

void CMsgGCToGCGrantAccountRolledItems_Item::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems_Item*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_def_, ignore_limit_);
  ZR_(origin_, inventory_token_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  loot_lists_.Clear();
  dynamic_attributes_.Clear();
  additional_audit_entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loot_lists;
        break;
      }

      // repeated string loot_lists = 2;
      case 2: {
        if (tag == 18) {
         parse_loot_lists:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loot_lists()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_lists(this->loot_lists_size() - 1).data(),
            this->loot_lists(this->loot_lists_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loot_lists");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loot_lists;
        if (input->ExpectTag(24)) goto parse_ignore_limit;
        break;
      }

      // optional bool ignore_limit = 3;
      case 3: {
        if (tag == 24) {
         parse_ignore_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_limit_)));
          set_has_ignore_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_origin;
        break;
      }

      // optional uint32 origin = 4;
      case 4: {
        if (tag == 32) {
         parse_origin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_)));
          set_has_origin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dynamic_attributes;
        break;
      }

      // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
      case 5: {
        if (tag == 42) {
         parse_dynamic_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dynamic_attributes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dynamic_attributes;
        if (input->ExpectTag(50)) goto parse_additional_audit_entries;
        break;
      }

      // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
      case 6: {
        if (tag == 50) {
         parse_additional_audit_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additional_audit_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_additional_audit_entries;
        if (input->ExpectTag(56)) goto parse_inventory_token;
        break;
      }

      // optional uint32 inventory_token = 7;
      case 7: {
        if (tag == 56) {
         parse_inventory_token:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inventory_token_)));
          set_has_inventory_token();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems.Item)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems.Item)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // repeated string loot_lists = 2;
  for (int i = 0; i < this->loot_lists_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->loot_lists(i).data(), this->loot_lists(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "loot_lists");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->loot_lists(i), output);
  }

  // optional bool ignore_limit = 3;
  if (has_ignore_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ignore_limit(), output);
  }

  // optional uint32 origin = 4;
  if (has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->origin(), output);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (int i = 0; i < this->dynamic_attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dynamic_attributes(i), output);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (int i = 0; i < this->additional_audit_entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->additional_audit_entries(i), output);
  }

  // optional uint32 inventory_token = 7;
  if (has_inventory_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->inventory_token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems.Item)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems.Item)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // repeated string loot_lists = 2;
  for (int i = 0; i < this->loot_lists_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_lists(i).data(), this->loot_lists(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loot_lists");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->loot_lists(i), target);
  }

  // optional bool ignore_limit = 3;
  if (has_ignore_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ignore_limit(), target);
  }

  // optional uint32 origin = 4;
  if (has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->origin(), target);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (int i = 0; i < this->dynamic_attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->dynamic_attributes(i), target);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (int i = 0; i < this->additional_audit_entries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->additional_audit_entries(i), target);
  }

  // optional uint32 inventory_token = 7;
  if (has_inventory_token()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->inventory_token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems.Item)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional bool ignore_limit = 3;
    if (has_ignore_limit()) {
      total_size += 1 + 1;
    }

    // optional uint32 origin = 4;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin());
    }

    // optional uint32 inventory_token = 7;
    if (has_inventory_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inventory_token());
    }

  }
  // repeated string loot_lists = 2;
  total_size += 1 * this->loot_lists_size();
  for (int i = 0; i < this->loot_lists_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loot_lists(i));
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  total_size += 1 * this->dynamic_attributes_size();
  for (int i = 0; i < this->dynamic_attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dynamic_attributes(i));
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  total_size += 1 * this->additional_audit_entries_size();
  for (int i = 0; i < this->additional_audit_entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additional_audit_entries(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  loot_lists_.MergeFrom(from.loot_lists_);
  dynamic_attributes_.MergeFrom(from.dynamic_attributes_);
  additional_audit_entries_.MergeFrom(from.additional_audit_entries_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_ignore_limit()) {
      set_ignore_limit(from.ignore_limit());
    }
    if (from.has_origin()) {
      set_origin(from.origin());
    }
    if (from.has_inventory_token()) {
      set_inventory_token(from.inventory_token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item::Swap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
  if (other != this) {
    std::swap(item_def_, other->item_def_);
    loot_lists_.Swap(&other->loot_lists_);
    std::swap(ignore_limit_, other->ignore_limit_);
    std::swap(origin_, other->origin_);
    dynamic_attributes_.Swap(&other->dynamic_attributes_);
    additional_audit_entries_.Swap(&other->additional_audit_entries_);
    std::swap(inventory_token_, other->inventory_token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_Item_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCToGCGrantAccountRolledItems::kAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kItemsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditDataFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantAccountRolledItems)
}

void CMsgGCToGCGrantAccountRolledItems::InitAsDefaultInstance() {
}

CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems(const CMsgGCToGCGrantAccountRolledItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantAccountRolledItems)
}

void CMsgGCToGCGrantAccountRolledItems::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  audit_action_ = 0u;
  audit_data_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantAccountRolledItems::~CMsgGCToGCGrantAccountRolledItems() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantAccountRolledItems)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantAccountRolledItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantAccountRolledItems_descriptor_;
}

const CMsgGCToGCGrantAccountRolledItems& CMsgGCToGCGrantAccountRolledItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantAccountRolledItems* CMsgGCToGCGrantAccountRolledItems::default_instance_ = NULL;

CMsgGCToGCGrantAccountRolledItems* CMsgGCToGCGrantAccountRolledItems::New() const {
  return new CMsgGCToGCGrantAccountRolledItems;
}

void CMsgGCToGCGrantAccountRolledItems::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantAccountRolledItems*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, audit_data_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantAccountRolledItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantAccountRolledItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }

      // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
      case 2: {
        if (tag == 18) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectTag(24)) goto parse_audit_action;
        break;
      }

      // optional uint32 audit_action = 3;
      case 3: {
        if (tag == 24) {
         parse_audit_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
          set_has_audit_action();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_audit_data;
        break;
      }

      // optional uint64 audit_data = 4;
      case 4: {
        if (tag == 32) {
         parse_audit_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &audit_data_)));
          set_has_audit_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantAccountRolledItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantAccountRolledItems)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantAccountRolledItems)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // optional uint32 audit_action = 3;
  if (has_audit_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->audit_action(), output);
  }

  // optional uint64 audit_data = 4;
  if (has_audit_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->audit_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantAccountRolledItems)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantAccountRolledItems)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  // optional uint32 audit_action = 3;
  if (has_audit_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->audit_action(), target);
  }

  // optional uint64 audit_data = 4;
  if (has_audit_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->audit_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantAccountRolledItems)
  return target;
}

int CMsgGCToGCGrantAccountRolledItems::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 audit_action = 3;
    if (has_audit_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint64 audit_data = 4;
    if (has_audit_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->audit_data());
    }

  }
  // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantAccountRolledItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_audit_action()) {
      set_audit_action(from.audit_action());
    }
    if (from.has_audit_data()) {
      set_audit_data(from.audit_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantAccountRolledItems::Swap(CMsgGCToGCGrantAccountRolledItems* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    items_.Swap(&other->items_);
    std::swap(audit_action_, other->audit_action_);
    std::swap(audit_data_, other->audit_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantAccountRolledItems_descriptor_;
  metadata.reflection = CMsgGCToGCGrantAccountRolledItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCGrantSelfMadeItemToAccount::kItemDefIndexFieldNumber;
const int CMsgGCToGCGrantSelfMadeItemToAccount::kAccountidFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCGrantSelfMadeItemToAccount)
}

void CMsgGCToGCGrantSelfMadeItemToAccount::InitAsDefaultInstance() {
}

CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount(const CMsgGCToGCGrantSelfMadeItemToAccount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantSelfMadeItemToAccount)
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedCtor() {
  _cached_size_ = 0;
  item_def_index_ = 0u;
  accountid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCGrantSelfMadeItemToAccount::~CMsgGCToGCGrantSelfMadeItemToAccount() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantSelfMadeItemToAccount)
  SharedDtor();
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantSelfMadeItemToAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_;
}

const CMsgGCToGCGrantSelfMadeItemToAccount& CMsgGCToGCGrantSelfMadeItemToAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCGrantSelfMadeItemToAccount* CMsgGCToGCGrantSelfMadeItemToAccount::default_instance_ = NULL;

CMsgGCToGCGrantSelfMadeItemToAccount* CMsgGCToGCGrantSelfMadeItemToAccount::New() const {
  return new CMsgGCToGCGrantSelfMadeItemToAccount;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCGrantSelfMadeItemToAccount*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_def_index_, accountid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
          set_has_item_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_accountid;
        break;
      }

      // optional uint32 accountid = 2;
      case 2: {
        if (tag == 16) {
         parse_accountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCGrantSelfMadeItemToAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCGrantSelfMadeItemToAccount)
  return false;
#undef DO_
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  // optional uint32 item_def_index = 1;
  if (has_item_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  // optional uint32 accountid = 2;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->accountid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCGrantSelfMadeItemToAccount)
}

::google::protobuf::uint8* CMsgGCToGCGrantSelfMadeItemToAccount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  // optional uint32 item_def_index = 1;
  if (has_item_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  // optional uint32 accountid = 2;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->accountid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantSelfMadeItemToAccount)
  return target;
}

int CMsgGCToGCGrantSelfMadeItemToAccount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def_index = 1;
    if (has_item_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

    // optional uint32 accountid = 2;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCGrantSelfMadeItemToAccount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCGrantSelfMadeItemToAccount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def_index()) {
      set_item_def_index(from.item_def_index());
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::IsInitialized() const {

  return true;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Swap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
  if (other != this) {
    std::swap(item_def_index_, other->item_def_index_);
    std::swap(accountid_, other->accountid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCGrantSelfMadeItemToAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCGrantSelfMadeItemToAccount_descriptor_;
  metadata.reflection = CMsgGCToGCGrantSelfMadeItemToAccount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgUseItem::kItemIdFieldNumber;
const int CMsgUseItem::kTargetSteamIdFieldNumber;
const int CMsgUseItem::kGiftPotentialTargetsFieldNumber;
const int CMsgUseItem::kDuelClassLockFieldNumber;
const int CMsgUseItem::kInitiatorSteamIdFieldNumber;
const int CMsgUseItem::kItempackAckImmediatelyFieldNumber;
#endif  // !_MSC_VER

CMsgUseItem::CMsgUseItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgUseItem)
}

void CMsgUseItem::InitAsDefaultInstance() {
}

CMsgUseItem::CMsgUseItem(const CMsgUseItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgUseItem)
}

void CMsgUseItem::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  target_steam_id_ = GOOGLE_ULONGLONG(0);
  duel__class_lock_ = 0u;
  initiator_steam_id_ = GOOGLE_ULONGLONG(0);
  itempack__ack_immediately_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgUseItem::~CMsgUseItem() {
  // @@protoc_insertion_point(destructor:CMsgUseItem)
  SharedDtor();
}

void CMsgUseItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgUseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUseItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgUseItem_descriptor_;
}

const CMsgUseItem& CMsgUseItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgUseItem* CMsgUseItem::default_instance_ = NULL;

CMsgUseItem* CMsgUseItem::New() const {
  return new CMsgUseItem;
}

void CMsgUseItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgUseItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 59) {
    ZR_(item_id_, target_steam_id_);
    ZR_(initiator_steam_id_, itempack__ack_immediately_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  gift__potential_targets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgUseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_target_steam_id;
        break;
      }

      // optional fixed64 target_steam_id = 2;
      case 2: {
        if (tag == 17) {
         parse_target_steam_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_steam_id_)));
          set_has_target_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gift__potential_targets;
        break;
      }

      // repeated uint32 gift__potential_targets = 3;
      case 3: {
        if (tag == 24) {
         parse_gift__potential_targets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_gift__potential_targets())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gift__potential_targets())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gift__potential_targets;
        if (input->ExpectTag(32)) goto parse_duel__class_lock;
        break;
      }

      // optional uint32 duel__class_lock = 4;
      case 4: {
        if (tag == 32) {
         parse_duel__class_lock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duel__class_lock_)));
          set_has_duel__class_lock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_initiator_steam_id;
        break;
      }

      // optional uint64 initiator_steam_id = 5;
      case 5: {
        if (tag == 40) {
         parse_initiator_steam_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &initiator_steam_id_)));
          set_has_initiator_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_itempack__ack_immediately;
        break;
      }

      // optional bool itempack__ack_immediately = 6;
      case 6: {
        if (tag == 48) {
         parse_itempack__ack_immediately:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &itempack__ack_immediately_)));
          set_has_itempack__ack_immediately();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgUseItem)
  return false;
#undef DO_
}

void CMsgUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgUseItem)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional fixed64 target_steam_id = 2;
  if (has_target_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->target_steam_id(), output);
  }

  // repeated uint32 gift__potential_targets = 3;
  for (int i = 0; i < this->gift__potential_targets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->gift__potential_targets(i), output);
  }

  // optional uint32 duel__class_lock = 4;
  if (has_duel__class_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->duel__class_lock(), output);
  }

  // optional uint64 initiator_steam_id = 5;
  if (has_initiator_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->initiator_steam_id(), output);
  }

  // optional bool itempack__ack_immediately = 6;
  if (has_itempack__ack_immediately()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->itempack__ack_immediately(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgUseItem)
}

::google::protobuf::uint8* CMsgUseItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgUseItem)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional fixed64 target_steam_id = 2;
  if (has_target_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->target_steam_id(), target);
  }

  // repeated uint32 gift__potential_targets = 3;
  for (int i = 0; i < this->gift__potential_targets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->gift__potential_targets(i), target);
  }

  // optional uint32 duel__class_lock = 4;
  if (has_duel__class_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->duel__class_lock(), target);
  }

  // optional uint64 initiator_steam_id = 5;
  if (has_initiator_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->initiator_steam_id(), target);
  }

  // optional bool itempack__ack_immediately = 6;
  if (has_itempack__ack_immediately()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->itempack__ack_immediately(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgUseItem)
  return target;
}

int CMsgUseItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional fixed64 target_steam_id = 2;
    if (has_target_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 duel__class_lock = 4;
    if (has_duel__class_lock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duel__class_lock());
    }

    // optional uint64 initiator_steam_id = 5;
    if (has_initiator_steam_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->initiator_steam_id());
    }

    // optional bool itempack__ack_immediately = 6;
    if (has_itempack__ack_immediately()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 gift__potential_targets = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->gift__potential_targets_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gift__potential_targets(i));
    }
    total_size += 1 * this->gift__potential_targets_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUseItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgUseItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgUseItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgUseItem::MergeFrom(const CMsgUseItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  gift__potential_targets_.MergeFrom(from.gift__potential_targets_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_target_steam_id()) {
      set_target_steam_id(from.target_steam_id());
    }
    if (from.has_duel__class_lock()) {
      set_duel__class_lock(from.duel__class_lock());
    }
    if (from.has_initiator_steam_id()) {
      set_initiator_steam_id(from.initiator_steam_id());
    }
    if (from.has_itempack__ack_immediately()) {
      set_itempack__ack_immediately(from.itempack__ack_immediately());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgUseItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseItem::CopyFrom(const CMsgUseItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseItem::IsInitialized() const {

  return true;
}

void CMsgUseItem::Swap(CMsgUseItem* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(target_steam_id_, other->target_steam_id_);
    gift__potential_targets_.Swap(&other->gift__potential_targets_);
    std::swap(duel__class_lock_, other->duel__class_lock_);
    std::swap(initiator_steam_id_, other->initiator_steam_id_);
    std::swap(itempack__ack_immediately_, other->itempack__ack_immediately_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgUseItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgUseItem_descriptor_;
  metadata.reflection = CMsgUseItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgServerUseItem::kInitiatorAccountIdFieldNumber;
const int CMsgServerUseItem::kUseItemMsgFieldNumber;
#endif  // !_MSC_VER

CMsgServerUseItem::CMsgServerUseItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerUseItem)
}

void CMsgServerUseItem::InitAsDefaultInstance() {
  use_item_msg_ = const_cast< ::CMsgUseItem*>(&::CMsgUseItem::default_instance());
}

CMsgServerUseItem::CMsgServerUseItem(const CMsgServerUseItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgServerUseItem)
}

void CMsgServerUseItem::SharedCtor() {
  _cached_size_ = 0;
  initiator_account_id_ = 0u;
  use_item_msg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgServerUseItem::~CMsgServerUseItem() {
  // @@protoc_insertion_point(destructor:CMsgServerUseItem)
  SharedDtor();
}

void CMsgServerUseItem::SharedDtor() {
  if (this != default_instance_) {
    delete use_item_msg_;
  }
}

void CMsgServerUseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgServerUseItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgServerUseItem_descriptor_;
}

const CMsgServerUseItem& CMsgServerUseItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgServerUseItem* CMsgServerUseItem::default_instance_ = NULL;

CMsgServerUseItem* CMsgServerUseItem::New() const {
  return new CMsgServerUseItem;
}

void CMsgServerUseItem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    initiator_account_id_ = 0u;
    if (has_use_item_msg()) {
      if (use_item_msg_ != NULL) use_item_msg_->::CMsgUseItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgServerUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerUseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 initiator_account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initiator_account_id_)));
          set_has_initiator_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_use_item_msg;
        break;
      }

      // optional .CMsgUseItem use_item_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_use_item_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_use_item_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerUseItem)
  return false;
#undef DO_
}

void CMsgServerUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerUseItem)
  // optional uint32 initiator_account_id = 1;
  if (has_initiator_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->initiator_account_id(), output);
  }

  // optional .CMsgUseItem use_item_msg = 2;
  if (has_use_item_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->use_item_msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerUseItem)
}

::google::protobuf::uint8* CMsgServerUseItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerUseItem)
  // optional uint32 initiator_account_id = 1;
  if (has_initiator_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->initiator_account_id(), target);
  }

  // optional .CMsgUseItem use_item_msg = 2;
  if (has_use_item_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->use_item_msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerUseItem)
  return target;
}

int CMsgServerUseItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 initiator_account_id = 1;
    if (has_initiator_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initiator_account_id());
    }

    // optional .CMsgUseItem use_item_msg = 2;
    if (has_use_item_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->use_item_msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgServerUseItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgServerUseItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgServerUseItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgServerUseItem::MergeFrom(const CMsgServerUseItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_initiator_account_id()) {
      set_initiator_account_id(from.initiator_account_id());
    }
    if (from.has_use_item_msg()) {
      mutable_use_item_msg()->::CMsgUseItem::MergeFrom(from.use_item_msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgServerUseItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerUseItem::CopyFrom(const CMsgServerUseItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerUseItem::IsInitialized() const {

  return true;
}

void CMsgServerUseItem::Swap(CMsgServerUseItem* other) {
  if (other != this) {
    std::swap(initiator_account_id_, other->initiator_account_id_);
    std::swap(use_item_msg_, other->use_item_msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgServerUseItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgServerUseItem_descriptor_;
  metadata.reflection = CMsgServerUseItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgUseMultipleItems::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgUseMultipleItems::CMsgUseMultipleItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgUseMultipleItems)
}

void CMsgUseMultipleItems::InitAsDefaultInstance() {
}

CMsgUseMultipleItems::CMsgUseMultipleItems(const CMsgUseMultipleItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgUseMultipleItems)
}

void CMsgUseMultipleItems::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgUseMultipleItems::~CMsgUseMultipleItems() {
  // @@protoc_insertion_point(destructor:CMsgUseMultipleItems)
  SharedDtor();
}

void CMsgUseMultipleItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgUseMultipleItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUseMultipleItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgUseMultipleItems_descriptor_;
}

const CMsgUseMultipleItems& CMsgUseMultipleItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgUseMultipleItems* CMsgUseMultipleItems::default_instance_ = NULL;

CMsgUseMultipleItems* CMsgUseMultipleItems::New() const {
  return new CMsgUseMultipleItems;
}

void CMsgUseMultipleItems::Clear() {
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgUseMultipleItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgUseMultipleItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgUseMultipleItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgUseMultipleItems)
  return false;
#undef DO_
}

void CMsgUseMultipleItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgUseMultipleItems)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgUseMultipleItems)
}

::google::protobuf::uint8* CMsgUseMultipleItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgUseMultipleItems)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgUseMultipleItems)
  return target;
}

int CMsgUseMultipleItems::ByteSize() const {
  int total_size = 0;

  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUseMultipleItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgUseMultipleItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgUseMultipleItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgUseMultipleItems::MergeFrom(const CMsgUseMultipleItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgUseMultipleItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseMultipleItems::CopyFrom(const CMsgUseMultipleItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseMultipleItems::IsInitialized() const {

  return true;
}

void CMsgUseMultipleItems::Swap(CMsgUseMultipleItems* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgUseMultipleItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgUseMultipleItems_descriptor_;
  metadata.reflection = CMsgUseMultipleItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerBalanceRequest)
}

void CMsgGCPartnerBalanceRequest::InitAsDefaultInstance() {
}

CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest(const CMsgGCPartnerBalanceRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerBalanceRequest)
}

void CMsgGCPartnerBalanceRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerBalanceRequest::~CMsgGCPartnerBalanceRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerBalanceRequest)
  SharedDtor();
}

void CMsgGCPartnerBalanceRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerBalanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerBalanceRequest_descriptor_;
}

const CMsgGCPartnerBalanceRequest& CMsgGCPartnerBalanceRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerBalanceRequest* CMsgGCPartnerBalanceRequest::default_instance_ = NULL;

CMsgGCPartnerBalanceRequest* CMsgGCPartnerBalanceRequest::New() const {
  return new CMsgGCPartnerBalanceRequest;
}

void CMsgGCPartnerBalanceRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerBalanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerBalanceRequest)
  return false;
#undef DO_
}

void CMsgGCPartnerBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerBalanceRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerBalanceRequest)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerBalanceRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerBalanceRequest)
  return target;
}

int CMsgGCPartnerBalanceRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerBalanceRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerBalanceRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const CMsgGCPartnerBalanceRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceRequest::CopyFrom(const CMsgGCPartnerBalanceRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceRequest::IsInitialized() const {

  return true;
}

void CMsgGCPartnerBalanceRequest::Swap(CMsgGCPartnerBalanceRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerBalanceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerBalanceRequest_descriptor_;
  metadata.reflection = CMsgGCPartnerBalanceRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCPartnerBalanceResponse::kResultFieldNumber;
const int CMsgGCPartnerBalanceResponse::kBalanceFieldNumber;
#endif  // !_MSC_VER

CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerBalanceResponse)
}

void CMsgGCPartnerBalanceResponse::InitAsDefaultInstance() {
}

CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse(const CMsgGCPartnerBalanceResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerBalanceResponse)
}

void CMsgGCPartnerBalanceResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 1;
  balance_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerBalanceResponse::~CMsgGCPartnerBalanceResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerBalanceResponse)
  SharedDtor();
}

void CMsgGCPartnerBalanceResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerBalanceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerBalanceResponse_descriptor_;
}

const CMsgGCPartnerBalanceResponse& CMsgGCPartnerBalanceResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerBalanceResponse* CMsgGCPartnerBalanceResponse::default_instance_ = NULL;

CMsgGCPartnerBalanceResponse* CMsgGCPartnerBalanceResponse::New() const {
  return new CMsgGCPartnerBalanceResponse;
}

void CMsgGCPartnerBalanceResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 1;
    balance_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerBalanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerBalanceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_balance;
        break;
      }

      // optional uint32 balance = 2;
      case 2: {
        if (tag == 16) {
         parse_balance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_)));
          set_has_balance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerBalanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerBalanceResponse)
  return false;
#undef DO_
}

void CMsgGCPartnerBalanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerBalanceResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional uint32 balance = 2;
  if (has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->balance(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerBalanceResponse)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerBalanceResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional uint32 balance = 2;
  if (has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->balance(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerBalanceResponse)
  return target;
}

int CMsgGCPartnerBalanceResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional uint32 balance = 2;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerBalanceResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerBalanceResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const CMsgGCPartnerBalanceResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_balance()) {
      set_balance(from.balance());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const CMsgGCPartnerBalanceResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceResponse::IsInitialized() const {

  return true;
}

void CMsgGCPartnerBalanceResponse::Swap(CMsgGCPartnerBalanceResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(balance_, other->balance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerBalanceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerBalanceResponse_descriptor_;
  metadata.reflection = CMsgGCPartnerBalanceResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGCStoreRechargeRedirect_LineItem::kItemDefIdFieldNumber;
const int CGCStoreRechargeRedirect_LineItem::kQuantityFieldNumber;
#endif  // !_MSC_VER

CGCStoreRechargeRedirect_LineItem::CGCStoreRechargeRedirect_LineItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCStoreRechargeRedirect_LineItem)
}

void CGCStoreRechargeRedirect_LineItem::InitAsDefaultInstance() {
}

CGCStoreRechargeRedirect_LineItem::CGCStoreRechargeRedirect_LineItem(const CGCStoreRechargeRedirect_LineItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCStoreRechargeRedirect_LineItem)
}

void CGCStoreRechargeRedirect_LineItem::SharedCtor() {
  _cached_size_ = 0;
  item_def_id_ = 0u;
  quantity_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCStoreRechargeRedirect_LineItem::~CGCStoreRechargeRedirect_LineItem() {
  // @@protoc_insertion_point(destructor:CGCStoreRechargeRedirect_LineItem)
  SharedDtor();
}

void CGCStoreRechargeRedirect_LineItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCStoreRechargeRedirect_LineItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCStoreRechargeRedirect_LineItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCStoreRechargeRedirect_LineItem_descriptor_;
}

const CGCStoreRechargeRedirect_LineItem& CGCStoreRechargeRedirect_LineItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CGCStoreRechargeRedirect_LineItem* CGCStoreRechargeRedirect_LineItem::default_instance_ = NULL;

CGCStoreRechargeRedirect_LineItem* CGCStoreRechargeRedirect_LineItem::New() const {
  return new CGCStoreRechargeRedirect_LineItem;
}

void CGCStoreRechargeRedirect_LineItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CGCStoreRechargeRedirect_LineItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_def_id_, quantity_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGCStoreRechargeRedirect_LineItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCStoreRechargeRedirect_LineItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_id_)));
          set_has_item_def_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_quantity;
        break;
      }

      // optional uint32 quantity = 2;
      case 2: {
        if (tag == 16) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
          set_has_quantity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCStoreRechargeRedirect_LineItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCStoreRechargeRedirect_LineItem)
  return false;
#undef DO_
}

void CGCStoreRechargeRedirect_LineItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCStoreRechargeRedirect_LineItem)
  // optional uint32 item_def_id = 1;
  if (has_item_def_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_id(), output);
  }

  // optional uint32 quantity = 2;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCStoreRechargeRedirect_LineItem)
}

::google::protobuf::uint8* CGCStoreRechargeRedirect_LineItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCStoreRechargeRedirect_LineItem)
  // optional uint32 item_def_id = 1;
  if (has_item_def_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_id(), target);
  }

  // optional uint32 quantity = 2;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCStoreRechargeRedirect_LineItem)
  return target;
}

int CGCStoreRechargeRedirect_LineItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def_id = 1;
    if (has_item_def_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_id());
    }

    // optional uint32 quantity = 2;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCStoreRechargeRedirect_LineItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGCStoreRechargeRedirect_LineItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGCStoreRechargeRedirect_LineItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCStoreRechargeRedirect_LineItem::MergeFrom(const CGCStoreRechargeRedirect_LineItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def_id()) {
      set_item_def_id(from.item_def_id());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGCStoreRechargeRedirect_LineItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCStoreRechargeRedirect_LineItem::CopyFrom(const CGCStoreRechargeRedirect_LineItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCStoreRechargeRedirect_LineItem::IsInitialized() const {

  return true;
}

void CGCStoreRechargeRedirect_LineItem::Swap(CGCStoreRechargeRedirect_LineItem* other) {
  if (other != this) {
    std::swap(item_def_id_, other->item_def_id_);
    std::swap(quantity_, other->quantity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGCStoreRechargeRedirect_LineItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCStoreRechargeRedirect_LineItem_descriptor_;
  metadata.reflection = CGCStoreRechargeRedirect_LineItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCPartnerRechargeRedirectURLRequest::kLineItemsFieldNumber;
#endif  // !_MSC_VER

CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerRechargeRedirectURLRequest)
}

void CMsgGCPartnerRechargeRedirectURLRequest::InitAsDefaultInstance() {
}

CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest(const CMsgGCPartnerRechargeRedirectURLRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerRechargeRedirectURLRequest)
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerRechargeRedirectURLRequest::~CMsgGCPartnerRechargeRedirectURLRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerRechargeRedirectURLRequest)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerRechargeRedirectURLRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerRechargeRedirectURLRequest_descriptor_;
}

const CMsgGCPartnerRechargeRedirectURLRequest& CMsgGCPartnerRechargeRedirectURLRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerRechargeRedirectURLRequest* CMsgGCPartnerRechargeRedirectURLRequest::default_instance_ = NULL;

CMsgGCPartnerRechargeRedirectURLRequest* CMsgGCPartnerRechargeRedirectURLRequest::New() const {
  return new CMsgGCPartnerRechargeRedirectURLRequest;
}

void CMsgGCPartnerRechargeRedirectURLRequest::Clear() {
  line_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerRechargeRedirectURLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerRechargeRedirectURLRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CGCStoreRechargeRedirect_LineItem line_items = 1;
      case 1: {
        if (tag == 10) {
         parse_line_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_line_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_line_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerRechargeRedirectURLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerRechargeRedirectURLRequest)
  return false;
#undef DO_
}

void CMsgGCPartnerRechargeRedirectURLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerRechargeRedirectURLRequest)
  // repeated .CGCStoreRechargeRedirect_LineItem line_items = 1;
  for (int i = 0; i < this->line_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->line_items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerRechargeRedirectURLRequest)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerRechargeRedirectURLRequest)
  // repeated .CGCStoreRechargeRedirect_LineItem line_items = 1;
  for (int i = 0; i < this->line_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->line_items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerRechargeRedirectURLRequest)
  return target;
}

int CMsgGCPartnerRechargeRedirectURLRequest::ByteSize() const {
  int total_size = 0;

  // repeated .CGCStoreRechargeRedirect_LineItem line_items = 1;
  total_size += 1 * this->line_items_size();
  for (int i = 0; i < this->line_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->line_items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerRechargeRedirectURLRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  line_items_.MergeFrom(from.line_items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLRequest::IsInitialized() const {

  return true;
}

void CMsgGCPartnerRechargeRedirectURLRequest::Swap(CMsgGCPartnerRechargeRedirectURLRequest* other) {
  if (other != this) {
    line_items_.Swap(&other->line_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerRechargeRedirectURLRequest_descriptor_;
  metadata.reflection = CMsgGCPartnerRechargeRedirectURLRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCPartnerRechargeRedirectURLResponse::kResultFieldNumber;
const int CMsgGCPartnerRechargeRedirectURLResponse::kUrlFieldNumber;
#endif  // !_MSC_VER

CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCPartnerRechargeRedirectURLResponse)
}

void CMsgGCPartnerRechargeRedirectURLResponse::InitAsDefaultInstance() {
}

CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse(const CMsgGCPartnerRechargeRedirectURLResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCPartnerRechargeRedirectURLResponse)
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 1;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCPartnerRechargeRedirectURLResponse::~CMsgGCPartnerRechargeRedirectURLResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCPartnerRechargeRedirectURLResponse)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedDtor() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCPartnerRechargeRedirectURLResponse_descriptor_;
}

const CMsgGCPartnerRechargeRedirectURLResponse& CMsgGCPartnerRechargeRedirectURLResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCPartnerRechargeRedirectURLResponse* CMsgGCPartnerRechargeRedirectURLResponse::default_instance_ = NULL;

CMsgGCPartnerRechargeRedirectURLResponse* CMsgGCPartnerRechargeRedirectURLResponse::New() const {
  return new CMsgGCPartnerRechargeRedirectURLResponse;
}

void CMsgGCPartnerRechargeRedirectURLResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 1;
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCPartnerRechargeRedirectURLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCPartnerRechargeRedirectURLResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // optional string url = 2;
      case 2: {
        if (tag == 18) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCPartnerRechargeRedirectURLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCPartnerRechargeRedirectURLResponse)
  return false;
#undef DO_
}

void CMsgGCPartnerRechargeRedirectURLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCPartnerRechargeRedirectURLResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCPartnerRechargeRedirectURLResponse)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCPartnerRechargeRedirectURLResponse)
  // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCPartnerRechargeRedirectURLResponse)
  return target;
}

int CMsgGCPartnerRechargeRedirectURLResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCPartnerRechargeRedirectURLResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLResponse::IsInitialized() const {

  return true;
}

void CMsgGCPartnerRechargeRedirectURLResponse::Swap(CMsgGCPartnerRechargeRedirectURLResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(url_, other->url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCPartnerRechargeRedirectURLResponse_descriptor_;
  metadata.reflection = CMsgGCPartnerRechargeRedirectURLResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kAccountIdFieldNumber;
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kDeletedItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::InitAsDefaultInstance() {
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  deleted_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData::~CMsgGCEconSQLWorkItemEmbeddedRollbackData() {
  // @@protoc_insertion_point(destructor:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  SharedDtor();
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCEconSQLWorkItemEmbeddedRollbackData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_;
}

const CMsgGCEconSQLWorkItemEmbeddedRollbackData& CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData* CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance_ = NULL;

CMsgGCEconSQLWorkItemEmbeddedRollbackData* CMsgGCEconSQLWorkItemEmbeddedRollbackData::New() const {
  return new CMsgGCEconSQLWorkItemEmbeddedRollbackData;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCEconSQLWorkItemEmbeddedRollbackData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(deleted_item_id_, account_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_deleted_item_id;
        break;
      }

      // optional uint64 deleted_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_deleted_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deleted_item_id_)));
          set_has_deleted_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return false;
#undef DO_
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 deleted_item_id = 2;
  if (has_deleted_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deleted_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

::google::protobuf::uint8* CMsgGCEconSQLWorkItemEmbeddedRollbackData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 deleted_item_id = 2;
  if (has_deleted_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deleted_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return target;
}

int CMsgGCEconSQLWorkItemEmbeddedRollbackData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint64 deleted_item_id = 2;
    if (has_deleted_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->deleted_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCEconSQLWorkItemEmbeddedRollbackData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCEconSQLWorkItemEmbeddedRollbackData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_deleted_item_id()) {
      set_deleted_item_id(from.deleted_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::IsInitialized() const {

  return true;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Swap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(deleted_item_id_, other->deleted_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCEconSQLWorkItemEmbeddedRollbackData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCEconSQLWorkItemEmbeddedRollbackData_descriptor_;
  metadata.reflection = CMsgGCEconSQLWorkItemEmbeddedRollbackData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgCraftStatue::kHeroidFieldNumber;
const int CMsgCraftStatue::kSequencenameFieldNumber;
const int CMsgCraftStatue::kCycleFieldNumber;
const int CMsgCraftStatue::kDescriptionFieldNumber;
const int CMsgCraftStatue::kPedestalItemdefFieldNumber;
const int CMsgCraftStatue::kToolidFieldNumber;
#endif  // !_MSC_VER

CMsgCraftStatue::CMsgCraftStatue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCraftStatue)
}

void CMsgCraftStatue::InitAsDefaultInstance() {
}

CMsgCraftStatue::CMsgCraftStatue(const CMsgCraftStatue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgCraftStatue)
}

void CMsgCraftStatue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  heroid_ = 0u;
  sequencename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cycle_ = 0;
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pedestal_itemdef_ = 0u;
  toolid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgCraftStatue::~CMsgCraftStatue() {
  // @@protoc_insertion_point(destructor:CMsgCraftStatue)
  SharedDtor();
}

void CMsgCraftStatue::SharedDtor() {
  if (sequencename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequencename_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (this != default_instance_) {
  }
}

void CMsgCraftStatue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCraftStatue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgCraftStatue_descriptor_;
}

const CMsgCraftStatue& CMsgCraftStatue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgCraftStatue* CMsgCraftStatue::default_instance_ = NULL;

CMsgCraftStatue* CMsgCraftStatue::New() const {
  return new CMsgCraftStatue;
}

void CMsgCraftStatue::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgCraftStatue*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(heroid_, cycle_);
    ZR_(toolid_, pedestal_itemdef_);
    if (has_sequencename()) {
      if (sequencename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sequencename_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        description_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgCraftStatue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCraftStatue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sequencename;
        break;
      }

      // optional string sequencename = 2;
      case 2: {
        if (tag == 18) {
         parse_sequencename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequencename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sequencename().data(), this->sequencename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sequencename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_cycle;
        break;
      }

      // optional float cycle = 3;
      case 3: {
        if (tag == 29) {
         parse_cycle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cycle_)));
          set_has_cycle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }

      // optional string description = 4;
      case 4: {
        if (tag == 34) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pedestal_itemdef;
        break;
      }

      // optional uint32 pedestal_itemdef = 5;
      case 5: {
        if (tag == 40) {
         parse_pedestal_itemdef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pedestal_itemdef_)));
          set_has_pedestal_itemdef();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_toolid;
        break;
      }

      // optional uint64 toolid = 6;
      case 6: {
        if (tag == 48) {
         parse_toolid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &toolid_)));
          set_has_toolid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCraftStatue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCraftStatue)
  return false;
#undef DO_
}

void CMsgCraftStatue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCraftStatue)
  // optional uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // optional string sequencename = 2;
  if (has_sequencename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), this->sequencename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sequencename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sequencename(), output);
  }

  // optional float cycle = 3;
  if (has_cycle()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cycle(), output);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (has_pedestal_itemdef()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pedestal_itemdef(), output);
  }

  // optional uint64 toolid = 6;
  if (has_toolid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->toolid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCraftStatue)
}

::google::protobuf::uint8* CMsgCraftStatue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftStatue)
  // optional uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // optional string sequencename = 2;
  if (has_sequencename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), this->sequencename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sequencename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequencename(), target);
  }

  // optional float cycle = 3;
  if (has_cycle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cycle(), target);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (has_pedestal_itemdef()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pedestal_itemdef(), target);
  }

  // optional uint64 toolid = 6;
  if (has_toolid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->toolid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftStatue)
  return target;
}

int CMsgCraftStatue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // optional string sequencename = 2;
    if (has_sequencename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequencename());
    }

    // optional float cycle = 3;
    if (has_cycle()) {
      total_size += 1 + 4;
    }

    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint32 pedestal_itemdef = 5;
    if (has_pedestal_itemdef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pedestal_itemdef());
    }

    // optional uint64 toolid = 6;
    if (has_toolid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->toolid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCraftStatue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgCraftStatue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgCraftStatue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgCraftStatue::MergeFrom(const CMsgCraftStatue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_sequencename()) {
      set_sequencename(from.sequencename());
    }
    if (from.has_cycle()) {
      set_cycle(from.cycle());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_pedestal_itemdef()) {
      set_pedestal_itemdef(from.pedestal_itemdef());
    }
    if (from.has_toolid()) {
      set_toolid(from.toolid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgCraftStatue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftStatue::CopyFrom(const CMsgCraftStatue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftStatue::IsInitialized() const {

  return true;
}

void CMsgCraftStatue::Swap(CMsgCraftStatue* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(sequencename_, other->sequencename_);
    std::swap(cycle_, other->cycle_);
    std::swap(description_, other->description_);
    std::swap(pedestal_itemdef_, other->pedestal_itemdef_);
    std::swap(toolid_, other->toolid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgCraftStatue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgCraftStatue_descriptor_;
  metadata.reflection = CMsgCraftStatue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgRedeemCode::kCodeFieldNumber;
#endif  // !_MSC_VER

CMsgRedeemCode::CMsgRedeemCode()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRedeemCode)
}

void CMsgRedeemCode::InitAsDefaultInstance() {
}

CMsgRedeemCode::CMsgRedeemCode(const CMsgRedeemCode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRedeemCode)
}

void CMsgRedeemCode::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRedeemCode::~CMsgRedeemCode() {
  // @@protoc_insertion_point(destructor:CMsgRedeemCode)
  SharedDtor();
}

void CMsgRedeemCode::SharedDtor() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (this != default_instance_) {
  }
}

void CMsgRedeemCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRedeemCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRedeemCode_descriptor_;
}

const CMsgRedeemCode& CMsgRedeemCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRedeemCode* CMsgRedeemCode::default_instance_ = NULL;

CMsgRedeemCode* CMsgRedeemCode::New() const {
  return new CMsgRedeemCode;
}

void CMsgRedeemCode::Clear() {
  if (has_code()) {
    if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      code_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRedeemCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRedeemCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRedeemCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRedeemCode)
  return false;
#undef DO_
}

void CMsgRedeemCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRedeemCode)
  // optional string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRedeemCode)
}

::google::protobuf::uint8* CMsgRedeemCode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRedeemCode)
  // optional string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRedeemCode)
  return target;
}

int CMsgRedeemCode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRedeemCode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRedeemCode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRedeemCode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRedeemCode::MergeFrom(const CMsgRedeemCode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRedeemCode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCode::CopyFrom(const CMsgRedeemCode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCode::IsInitialized() const {

  return true;
}

void CMsgRedeemCode::Swap(CMsgRedeemCode* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRedeemCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRedeemCode_descriptor_;
  metadata.reflection = CMsgRedeemCode_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgRedeemCodeResponse_EResultCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRedeemCodeResponse_EResultCode_descriptor_;
}
bool CMsgRedeemCodeResponse_EResultCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Succeeded;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_CodeNotFound;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_CodeAlreadyUsed;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_OtherError;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::EResultCode_MIN;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::EResultCode_MAX;
const int CMsgRedeemCodeResponse::EResultCode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgRedeemCodeResponse::kResponseFieldNumber;
const int CMsgRedeemCodeResponse::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgRedeemCodeResponse::CMsgRedeemCodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRedeemCodeResponse)
}

void CMsgRedeemCodeResponse::InitAsDefaultInstance() {
}

CMsgRedeemCodeResponse::CMsgRedeemCodeResponse(const CMsgRedeemCodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRedeemCodeResponse)
}

void CMsgRedeemCodeResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRedeemCodeResponse::~CMsgRedeemCodeResponse() {
  // @@protoc_insertion_point(destructor:CMsgRedeemCodeResponse)
  SharedDtor();
}

void CMsgRedeemCodeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgRedeemCodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRedeemCodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRedeemCodeResponse_descriptor_;
}

const CMsgRedeemCodeResponse& CMsgRedeemCodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgRedeemCodeResponse* CMsgRedeemCodeResponse::default_instance_ = NULL;

CMsgRedeemCodeResponse* CMsgRedeemCodeResponse::New() const {
  return new CMsgRedeemCodeResponse;
}

void CMsgRedeemCodeResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgRedeemCodeResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, response_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRedeemCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRedeemCodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
          set_has_response();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRedeemCodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRedeemCodeResponse)
  return false;
#undef DO_
}

void CMsgRedeemCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRedeemCodeResponse)
  // optional uint32 response = 1;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRedeemCodeResponse)
}

::google::protobuf::uint8* CMsgRedeemCodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRedeemCodeResponse)
  // optional uint32 response = 1;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRedeemCodeResponse)
  return target;
}

int CMsgRedeemCodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRedeemCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRedeemCodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRedeemCodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRedeemCodeResponse::MergeFrom(const CMsgRedeemCodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRedeemCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCodeResponse::CopyFrom(const CMsgRedeemCodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCodeResponse::IsInitialized() const {

  return true;
}

void CMsgRedeemCodeResponse::Swap(CMsgRedeemCodeResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRedeemCodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRedeemCodeResponse_descriptor_;
  metadata.reflection = CMsgRedeemCodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgDevNewItemRequest::kItemDefNameFieldNumber;
const int CMsgDevNewItemRequest::kLootListNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrDefNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrValueFieldNumber;
#endif  // !_MSC_VER

CMsgDevNewItemRequest::CMsgDevNewItemRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDevNewItemRequest)
}

void CMsgDevNewItemRequest::InitAsDefaultInstance() {
}

CMsgDevNewItemRequest::CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDevNewItemRequest)
}

void CMsgDevNewItemRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_def_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loot_list_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDevNewItemRequest::~CMsgDevNewItemRequest() {
  // @@protoc_insertion_point(destructor:CMsgDevNewItemRequest)
  SharedDtor();
}

void CMsgDevNewItemRequest::SharedDtor() {
  if (item_def_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_def_name_;
  }
  if (loot_list_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loot_list_name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgDevNewItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDevNewItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDevNewItemRequest_descriptor_;
}

const CMsgDevNewItemRequest& CMsgDevNewItemRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgDevNewItemRequest* CMsgDevNewItemRequest::default_instance_ = NULL;

CMsgDevNewItemRequest* CMsgDevNewItemRequest::New() const {
  return new CMsgDevNewItemRequest;
}

void CMsgDevNewItemRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_item_def_name()) {
      if (item_def_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        item_def_name_->clear();
      }
    }
    if (has_loot_list_name()) {
      if (loot_list_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loot_list_name_->clear();
      }
    }
  }
  attr_def_name_.Clear();
  attr_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgDevNewItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDevNewItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_def_name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_def_name().data(), this->item_def_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "item_def_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loot_list_name;
        break;
      }

      // optional string loot_list_name = 4;
      case 4: {
        if (tag == 34) {
         parse_loot_list_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loot_list_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_list_name().data(), this->loot_list_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loot_list_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_attr_def_name;
        break;
      }

      // repeated string attr_def_name = 5;
      case 5: {
        if (tag == 42) {
         parse_attr_def_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_def_name(this->attr_def_name_size() - 1).data(),
            this->attr_def_name(this->attr_def_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attr_def_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_attr_def_name;
        if (input->ExpectTag(50)) goto parse_attr_value;
        break;
      }

      // repeated string attr_value = 6;
      case 6: {
        if (tag == 50) {
         parse_attr_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_value(this->attr_value_size() - 1).data(),
            this->attr_value(this->attr_value_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attr_value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attr_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDevNewItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDevNewItemRequest)
  return false;
#undef DO_
}

void CMsgDevNewItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDevNewItemRequest)
  // optional string item_def_name = 3;
  if (has_item_def_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), this->item_def_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_def_name(), output);
  }

  // optional string loot_list_name = 4;
  if (has_loot_list_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), this->loot_list_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loot_list_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->loot_list_name(), output);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0; i < this->attr_def_name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->attr_def_name(i).data(), this->attr_def_name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "attr_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->attr_def_name(i), output);
  }

  // repeated string attr_value = 6;
  for (int i = 0; i < this->attr_value_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->attr_value(i).data(), this->attr_value(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "attr_value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->attr_value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDevNewItemRequest)
}

::google::protobuf::uint8* CMsgDevNewItemRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDevNewItemRequest)
  // optional string item_def_name = 3;
  if (has_item_def_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), this->item_def_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_def_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_def_name(), target);
  }

  // optional string loot_list_name = 4;
  if (has_loot_list_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), this->loot_list_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loot_list_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->loot_list_name(), target);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0; i < this->attr_def_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_def_name(i).data(), this->attr_def_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attr_def_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->attr_def_name(i), target);
  }

  // repeated string attr_value = 6;
  for (int i = 0; i < this->attr_value_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_value(i).data(), this->attr_value(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attr_value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->attr_value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDevNewItemRequest)
  return target;
}

int CMsgDevNewItemRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string item_def_name = 3;
    if (has_item_def_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_def_name());
    }

    // optional string loot_list_name = 4;
    if (has_loot_list_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loot_list_name());
    }

  }
  // repeated string attr_def_name = 5;
  total_size += 1 * this->attr_def_name_size();
  for (int i = 0; i < this->attr_def_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_def_name(i));
  }

  // repeated string attr_value = 6;
  total_size += 1 * this->attr_value_size();
  for (int i = 0; i < this->attr_value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_value(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDevNewItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgDevNewItemRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgDevNewItemRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequest::MergeFrom(const CMsgDevNewItemRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_def_name_.MergeFrom(from.attr_def_name_);
  attr_value_.MergeFrom(from.attr_value_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def_name()) {
      set_item_def_name(from.item_def_name());
    }
    if (from.has_loot_list_name()) {
      set_loot_list_name(from.loot_list_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgDevNewItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequest::CopyFrom(const CMsgDevNewItemRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequest::IsInitialized() const {

  return true;
}

void CMsgDevNewItemRequest::Swap(CMsgDevNewItemRequest* other) {
  if (other != this) {
    std::swap(item_def_name_, other->item_def_name_);
    std::swap(loot_list_name_, other->loot_list_name_);
    attr_def_name_.Swap(&other->attr_def_name_);
    attr_value_.Swap(&other->attr_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgDevNewItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDevNewItemRequest_descriptor_;
  metadata.reflection = CMsgDevNewItemRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgDevNewItemRequestResponse::kSuccessFieldNumber;
#endif  // !_MSC_VER

CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDevNewItemRequestResponse)
}

void CMsgDevNewItemRequestResponse::InitAsDefaultInstance() {
}

CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse(const CMsgDevNewItemRequestResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgDevNewItemRequestResponse)
}

void CMsgDevNewItemRequestResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDevNewItemRequestResponse::~CMsgDevNewItemRequestResponse() {
  // @@protoc_insertion_point(destructor:CMsgDevNewItemRequestResponse)
  SharedDtor();
}

void CMsgDevNewItemRequestResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgDevNewItemRequestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDevNewItemRequestResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDevNewItemRequestResponse_descriptor_;
}

const CMsgDevNewItemRequestResponse& CMsgDevNewItemRequestResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgDevNewItemRequestResponse* CMsgDevNewItemRequestResponse::default_instance_ = NULL;

CMsgDevNewItemRequestResponse* CMsgDevNewItemRequestResponse::New() const {
  return new CMsgDevNewItemRequestResponse;
}

void CMsgDevNewItemRequestResponse::Clear() {
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgDevNewItemRequestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDevNewItemRequestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDevNewItemRequestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDevNewItemRequestResponse)
  return false;
#undef DO_
}

void CMsgDevNewItemRequestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDevNewItemRequestResponse)
  // optional bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDevNewItemRequestResponse)
}

::google::protobuf::uint8* CMsgDevNewItemRequestResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDevNewItemRequestResponse)
  // optional bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDevNewItemRequestResponse)
  return target;
}

int CMsgDevNewItemRequestResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDevNewItemRequestResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgDevNewItemRequestResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgDevNewItemRequestResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequestResponse::MergeFrom(const CMsgDevNewItemRequestResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgDevNewItemRequestResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequestResponse::CopyFrom(const CMsgDevNewItemRequestResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequestResponse::IsInitialized() const {

  return true;
}

void CMsgDevNewItemRequestResponse::Swap(CMsgDevNewItemRequestResponse* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgDevNewItemRequestResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDevNewItemRequestResponse_descriptor_;
  metadata.reflection = CMsgDevNewItemRequestResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCAddGiftItem::kAccountIdFieldNumber;
const int CMsgGCAddGiftItem::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgGCAddGiftItem::CMsgGCAddGiftItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCAddGiftItem)
}

void CMsgGCAddGiftItem::InitAsDefaultInstance() {
}

CMsgGCAddGiftItem::CMsgGCAddGiftItem(const CMsgGCAddGiftItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCAddGiftItem)
}

void CMsgGCAddGiftItem::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCAddGiftItem::~CMsgGCAddGiftItem() {
  // @@protoc_insertion_point(destructor:CMsgGCAddGiftItem)
  SharedDtor();
}

void CMsgGCAddGiftItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCAddGiftItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCAddGiftItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCAddGiftItem_descriptor_;
}

const CMsgGCAddGiftItem& CMsgGCAddGiftItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCAddGiftItem* CMsgGCAddGiftItem::default_instance_ = NULL;

CMsgGCAddGiftItem* CMsgGCAddGiftItem::New() const {
  return new CMsgGCAddGiftItem;
}

void CMsgGCAddGiftItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCAddGiftItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, account_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCAddGiftItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCAddGiftItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCAddGiftItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCAddGiftItem)
  return false;
#undef DO_
}

void CMsgGCAddGiftItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCAddGiftItem)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCAddGiftItem)
}

::google::protobuf::uint8* CMsgGCAddGiftItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCAddGiftItem)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCAddGiftItem)
  return target;
}

int CMsgGCAddGiftItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCAddGiftItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCAddGiftItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCAddGiftItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCAddGiftItem::MergeFrom(const CMsgGCAddGiftItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCAddGiftItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCAddGiftItem::CopyFrom(const CMsgGCAddGiftItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCAddGiftItem::IsInitialized() const {

  return true;
}

void CMsgGCAddGiftItem::Swap(CMsgGCAddGiftItem* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCAddGiftItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCAddGiftItem_descriptor_;
  metadata.reflection = CMsgGCAddGiftItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCWrapAndDeliverGift::kItemIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiveToAccountIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiftMessageFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCWrapAndDeliverGift)
}

void CMsgClientToGCWrapAndDeliverGift::InitAsDefaultInstance() {
}

CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift(const CMsgClientToGCWrapAndDeliverGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCWrapAndDeliverGift)
}

void CMsgClientToGCWrapAndDeliverGift::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  give_to_account_id_ = 0u;
  gift_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCWrapAndDeliverGift::~CMsgClientToGCWrapAndDeliverGift() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCWrapAndDeliverGift)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGift::SharedDtor() {
  if (gift_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gift_message_;
  }
  if (this != default_instance_) {
  }
}

void CMsgClientToGCWrapAndDeliverGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCWrapAndDeliverGift_descriptor_;
}

const CMsgClientToGCWrapAndDeliverGift& CMsgClientToGCWrapAndDeliverGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCWrapAndDeliverGift* CMsgClientToGCWrapAndDeliverGift::default_instance_ = NULL;

CMsgClientToGCWrapAndDeliverGift* CMsgClientToGCWrapAndDeliverGift::New() const {
  return new CMsgClientToGCWrapAndDeliverGift;
}

void CMsgClientToGCWrapAndDeliverGift::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    item_id_ = GOOGLE_ULONGLONG(0);
    give_to_account_id_ = 0u;
    if (has_gift_message()) {
      if (gift_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gift_message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCWrapAndDeliverGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCWrapAndDeliverGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_give_to_account_id;
        break;
      }

      // optional uint32 give_to_account_id = 2;
      case 2: {
        if (tag == 16) {
         parse_give_to_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &give_to_account_id_)));
          set_has_give_to_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gift_message;
        break;
      }

      // optional string gift_message = 3;
      case 3: {
        if (tag == 26) {
         parse_gift_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gift_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gift_message().data(), this->gift_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gift_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCWrapAndDeliverGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCWrapAndDeliverGift)
  return false;
#undef DO_
}

void CMsgClientToGCWrapAndDeliverGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCWrapAndDeliverGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 give_to_account_id = 2;
  if (has_give_to_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->give_to_account_id(), output);
  }

  // optional string gift_message = 3;
  if (has_gift_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), this->gift_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gift_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gift_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCWrapAndDeliverGift)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCWrapAndDeliverGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 give_to_account_id = 2;
  if (has_give_to_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->give_to_account_id(), target);
  }

  // optional string gift_message = 3;
  if (has_gift_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), this->gift_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gift_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gift_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCWrapAndDeliverGift)
  return target;
}

int CMsgClientToGCWrapAndDeliverGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 give_to_account_id = 2;
    if (has_give_to_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->give_to_account_id());
    }

    // optional string gift_message = 3;
    if (has_gift_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gift_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCWrapAndDeliverGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_give_to_account_id()) {
      set_give_to_account_id(from.give_to_account_id());
    }
    if (from.has_gift_message()) {
      set_gift_message(from.gift_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGift::IsInitialized() const {

  return true;
}

void CMsgClientToGCWrapAndDeliverGift::Swap(CMsgClientToGCWrapAndDeliverGift* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(give_to_account_id_, other->give_to_account_id_);
    std::swap(gift_message_, other->gift_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCWrapAndDeliverGift_descriptor_;
  metadata.reflection = CMsgClientToGCWrapAndDeliverGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCWrapAndDeliverGiftResponse::kResponseFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingWindowHoursFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kTradeRestrictionFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCWrapAndDeliverGiftResponse)
}

void CMsgClientToGCWrapAndDeliverGiftResponse::InitAsDefaultInstance() {
}

CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse(const CMsgClientToGCWrapAndDeliverGiftResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCWrapAndDeliverGiftResponse)
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  gifting_charge_uses_ = 0u;
  gifting_charge_max_ = 0;
  gifting_uses_ = 0u;
  gifting_max_ = 0;
  gifting_window_hours_ = 0u;
  trade_restriction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCWrapAndDeliverGiftResponse::~CMsgClientToGCWrapAndDeliverGiftResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCWrapAndDeliverGiftResponse)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGiftResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_;
}

const CMsgClientToGCWrapAndDeliverGiftResponse& CMsgClientToGCWrapAndDeliverGiftResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCWrapAndDeliverGiftResponse* CMsgClientToGCWrapAndDeliverGiftResponse::default_instance_ = NULL;

CMsgClientToGCWrapAndDeliverGiftResponse* CMsgClientToGCWrapAndDeliverGiftResponse::New() const {
  return new CMsgClientToGCWrapAndDeliverGiftResponse;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCWrapAndDeliverGiftResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(response_, trade_restriction_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCWrapAndDeliverGiftResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCWrapAndDeliverGiftResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgResponse_IsValid(value)) {
            set_response(static_cast< ::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gifting_charge_uses;
        break;
      }

      // optional uint32 gifting_charge_uses = 2;
      case 2: {
        if (tag == 16) {
         parse_gifting_charge_uses:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_charge_uses_)));
          set_has_gifting_charge_uses();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gifting_charge_max;
        break;
      }

      // optional int32 gifting_charge_max = 3;
      case 3: {
        if (tag == 24) {
         parse_gifting_charge_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_charge_max_)));
          set_has_gifting_charge_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gifting_uses;
        break;
      }

      // optional uint32 gifting_uses = 4;
      case 4: {
        if (tag == 32) {
         parse_gifting_uses:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_uses_)));
          set_has_gifting_uses();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gifting_max;
        break;
      }

      // optional int32 gifting_max = 5;
      case 5: {
        if (tag == 40) {
         parse_gifting_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_max_)));
          set_has_gifting_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_gifting_window_hours;
        break;
      }

      // optional uint32 gifting_window_hours = 6;
      case 6: {
        if (tag == 48) {
         parse_gifting_window_hours:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_window_hours_)));
          set_has_gifting_window_hours();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_trade_restriction;
        break;
      }

      // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 7: {
        if (tag == 56) {
         parse_trade_restriction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_trade_restriction(static_cast< ::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCWrapAndDeliverGiftResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCWrapAndDeliverGiftResponse)
  return false;
#undef DO_
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCWrapAndDeliverGiftResponse)
  // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (has_gifting_charge_uses()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gifting_charge_uses(), output);
  }

  // optional int32 gifting_charge_max = 3;
  if (has_gifting_charge_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gifting_charge_max(), output);
  }

  // optional uint32 gifting_uses = 4;
  if (has_gifting_uses()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gifting_uses(), output);
  }

  // optional int32 gifting_max = 5;
  if (has_gifting_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gifting_max(), output);
  }

  // optional uint32 gifting_window_hours = 6;
  if (has_gifting_window_hours()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gifting_window_hours(), output);
  }

  // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_trade_restriction()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->trade_restriction(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCWrapAndDeliverGiftResponse)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGiftResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCWrapAndDeliverGiftResponse)
  // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (has_gifting_charge_uses()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gifting_charge_uses(), target);
  }

  // optional int32 gifting_charge_max = 3;
  if (has_gifting_charge_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gifting_charge_max(), target);
  }

  // optional uint32 gifting_uses = 4;
  if (has_gifting_uses()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gifting_uses(), target);
  }

  // optional int32 gifting_max = 5;
  if (has_gifting_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gifting_max(), target);
  }

  // optional uint32 gifting_window_hours = 6;
  if (has_gifting_window_hours()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gifting_window_hours(), target);
  }

  // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_trade_restriction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->trade_restriction(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCWrapAndDeliverGiftResponse)
  return target;
}

int CMsgClientToGCWrapAndDeliverGiftResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint32 gifting_charge_uses = 2;
    if (has_gifting_charge_uses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_charge_uses());
    }

    // optional int32 gifting_charge_max = 3;
    if (has_gifting_charge_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_charge_max());
    }

    // optional uint32 gifting_uses = 4;
    if (has_gifting_uses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_uses());
    }

    // optional int32 gifting_max = 5;
    if (has_gifting_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_max());
    }

    // optional uint32 gifting_window_hours = 6;
    if (has_gifting_window_hours()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_window_hours());
    }

    // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (has_trade_restriction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trade_restriction());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGiftResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCWrapAndDeliverGiftResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_gifting_charge_uses()) {
      set_gifting_charge_uses(from.gifting_charge_uses());
    }
    if (from.has_gifting_charge_max()) {
      set_gifting_charge_max(from.gifting_charge_max());
    }
    if (from.has_gifting_uses()) {
      set_gifting_uses(from.gifting_uses());
    }
    if (from.has_gifting_max()) {
      set_gifting_max(from.gifting_max());
    }
    if (from.has_gifting_window_hours()) {
      set_gifting_window_hours(from.gifting_window_hours());
    }
    if (from.has_trade_restriction()) {
      set_trade_restriction(from.trade_restriction());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGiftResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::Swap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(gifting_charge_uses_, other->gifting_charge_uses_);
    std::swap(gifting_charge_max_, other->gifting_charge_max_);
    std::swap(gifting_uses_, other->gifting_uses_);
    std::swap(gifting_max_, other->gifting_max_);
    std::swap(gifting_window_hours_, other->gifting_window_hours_);
    std::swap(trade_restriction_, other->trade_restriction_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGiftResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCWrapAndDeliverGiftResponse_descriptor_;
  metadata.reflection = CMsgClientToGCWrapAndDeliverGiftResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnwrapGift::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnwrapGift)
}

void CMsgClientToGCUnwrapGift::InitAsDefaultInstance() {
}

CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift(const CMsgClientToGCUnwrapGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnwrapGift)
}

void CMsgClientToGCUnwrapGift::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnwrapGift::~CMsgClientToGCUnwrapGift() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnwrapGift)
  SharedDtor();
}

void CMsgClientToGCUnwrapGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnwrapGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnwrapGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnwrapGift_descriptor_;
}

const CMsgClientToGCUnwrapGift& CMsgClientToGCUnwrapGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnwrapGift* CMsgClientToGCUnwrapGift::default_instance_ = NULL;

CMsgClientToGCUnwrapGift* CMsgClientToGCUnwrapGift::New() const {
  return new CMsgClientToGCUnwrapGift;
}

void CMsgClientToGCUnwrapGift::Clear() {
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnwrapGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnwrapGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnwrapGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnwrapGift)
  return false;
#undef DO_
}

void CMsgClientToGCUnwrapGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnwrapGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnwrapGift)
}

::google::protobuf::uint8* CMsgClientToGCUnwrapGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnwrapGift)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnwrapGift)
  return target;
}

int CMsgClientToGCUnwrapGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnwrapGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnwrapGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnwrapGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnwrapGift::MergeFrom(const CMsgClientToGCUnwrapGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnwrapGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnwrapGift::CopyFrom(const CMsgClientToGCUnwrapGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnwrapGift::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnwrapGift::Swap(CMsgClientToGCUnwrapGift* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnwrapGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnwrapGift_descriptor_;
  metadata.reflection = CMsgClientToGCUnwrapGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgClientToGCGetGiftPermissions::CMsgClientToGCGetGiftPermissions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCGetGiftPermissions)
}

void CMsgClientToGCGetGiftPermissions::InitAsDefaultInstance() {
}

CMsgClientToGCGetGiftPermissions::CMsgClientToGCGetGiftPermissions(const CMsgClientToGCGetGiftPermissions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetGiftPermissions)
}

void CMsgClientToGCGetGiftPermissions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCGetGiftPermissions::~CMsgClientToGCGetGiftPermissions() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetGiftPermissions)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCGetGiftPermissions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCGetGiftPermissions_descriptor_;
}

const CMsgClientToGCGetGiftPermissions& CMsgClientToGCGetGiftPermissions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCGetGiftPermissions* CMsgClientToGCGetGiftPermissions::default_instance_ = NULL;

CMsgClientToGCGetGiftPermissions* CMsgClientToGCGetGiftPermissions::New() const {
  return new CMsgClientToGCGetGiftPermissions;
}

void CMsgClientToGCGetGiftPermissions::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCGetGiftPermissions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCGetGiftPermissions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCGetGiftPermissions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCGetGiftPermissions)
  return false;
#undef DO_
}

void CMsgClientToGCGetGiftPermissions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCGetGiftPermissions)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCGetGiftPermissions)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetGiftPermissions)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetGiftPermissions)
  return target;
}

int CMsgClientToGCGetGiftPermissions::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCGetGiftPermissions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCGetGiftPermissions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissions::MergeFrom(const CMsgClientToGCGetGiftPermissions& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCGetGiftPermissions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissions::CopyFrom(const CMsgClientToGCGetGiftPermissions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissions::IsInitialized() const {

  return true;
}

void CMsgClientToGCGetGiftPermissions::Swap(CMsgClientToGCGetGiftPermissions* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCGetGiftPermissions_descriptor_;
  metadata.reflection = CMsgClientToGCGetGiftPermissions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::kAccountIdFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::kPermissionFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::InitAsDefaultInstance() {
}

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  permission_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::~CMsgClientToGCGetGiftPermissionsResponse_FriendPermission() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_descriptor_;
}

const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance_ = NULL;

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::New() const {
  return new CMsgClientToGCGetGiftPermissionsResponse_FriendPermission;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCGetGiftPermissionsResponse_FriendPermission*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, permission_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_permission;
        break;
      }

      // optional .EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 2: {
        if (tag == 16) {
         parse_permission:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_permission(static_cast< ::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return false;
#undef DO_
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional .EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->permission(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional .EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->permission(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return target;
}

int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional .EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->permission());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergeFrom(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::IsInitialized() const {

  return true;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::Swap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(permission_, other->permission_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_descriptor_;
  metadata.reflection = CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgClientToGCGetGiftPermissionsResponse::kIsUnlimitedFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kHasTwoFactorFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kSenderPermissionFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendshipAgeRequirementFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendshipAgeRequirementTwoFactorFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendPermissionsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCGetGiftPermissionsResponse::CMsgClientToGCGetGiftPermissionsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCGetGiftPermissionsResponse)
}

void CMsgClientToGCGetGiftPermissionsResponse::InitAsDefaultInstance() {
}

CMsgClientToGCGetGiftPermissionsResponse::CMsgClientToGCGetGiftPermissionsResponse(const CMsgClientToGCGetGiftPermissionsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetGiftPermissionsResponse)
}

void CMsgClientToGCGetGiftPermissionsResponse::SharedCtor() {
  _cached_size_ = 0;
  is_unlimited_ = false;
  has_two_factor_ = false;
  sender_permission_ = 0;
  friendship_age_requirement_ = 0u;
  friendship_age_requirement_two_factor_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCGetGiftPermissionsResponse::~CMsgClientToGCGetGiftPermissionsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetGiftPermissionsResponse)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissionsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCGetGiftPermissionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissionsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCGetGiftPermissionsResponse_descriptor_;
}

const CMsgClientToGCGetGiftPermissionsResponse& CMsgClientToGCGetGiftPermissionsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCGetGiftPermissionsResponse* CMsgClientToGCGetGiftPermissionsResponse::default_instance_ = NULL;

CMsgClientToGCGetGiftPermissionsResponse* CMsgClientToGCGetGiftPermissionsResponse::New() const {
  return new CMsgClientToGCGetGiftPermissionsResponse;
}

void CMsgClientToGCGetGiftPermissionsResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCGetGiftPermissionsResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(is_unlimited_, friendship_age_requirement_two_factor_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  friend_permissions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCGetGiftPermissionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCGetGiftPermissionsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_unlimited = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unlimited_)));
          set_has_is_unlimited();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_has_two_factor;
        break;
      }

      // optional bool has_two_factor = 3;
      case 3: {
        if (tag == 24) {
         parse_has_two_factor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_two_factor_)));
          set_has_has_two_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sender_permission;
        break;
      }

      // optional .EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 6: {
        if (tag == 48) {
         parse_sender_permission:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_sender_permission(static_cast< ::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_friendship_age_requirement;
        break;
      }

      // optional uint32 friendship_age_requirement = 7;
      case 7: {
        if (tag == 56) {
         parse_friendship_age_requirement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendship_age_requirement_)));
          set_has_friendship_age_requirement();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_friendship_age_requirement_two_factor;
        break;
      }

      // optional uint32 friendship_age_requirement_two_factor = 8;
      case 8: {
        if (tag == 64) {
         parse_friendship_age_requirement_two_factor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendship_age_requirement_two_factor_)));
          set_has_friendship_age_requirement_two_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_friend_permissions;
        break;
      }

      // repeated .CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
      case 9: {
        if (tag == 74) {
         parse_friend_permissions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_permissions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_friend_permissions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCGetGiftPermissionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCGetGiftPermissionsResponse)
  return false;
#undef DO_
}

void CMsgClientToGCGetGiftPermissionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCGetGiftPermissionsResponse)
  // optional bool is_unlimited = 1;
  if (has_is_unlimited()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_unlimited(), output);
  }

  // optional bool has_two_factor = 3;
  if (has_has_two_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_two_factor(), output);
  }

  // optional .EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_sender_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->sender_permission(), output);
  }

  // optional uint32 friendship_age_requirement = 7;
  if (has_friendship_age_requirement()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->friendship_age_requirement(), output);
  }

  // optional uint32 friendship_age_requirement_two_factor = 8;
  if (has_friendship_age_requirement_two_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->friendship_age_requirement_two_factor(), output);
  }

  // repeated .CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  for (int i = 0; i < this->friend_permissions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->friend_permissions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCGetGiftPermissionsResponse)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissionsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetGiftPermissionsResponse)
  // optional bool is_unlimited = 1;
  if (has_is_unlimited()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_unlimited(), target);
  }

  // optional bool has_two_factor = 3;
  if (has_has_two_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_two_factor(), target);
  }

  // optional .EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (has_sender_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->sender_permission(), target);
  }

  // optional uint32 friendship_age_requirement = 7;
  if (has_friendship_age_requirement()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->friendship_age_requirement(), target);
  }

  // optional uint32 friendship_age_requirement_two_factor = 8;
  if (has_friendship_age_requirement_two_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->friendship_age_requirement_two_factor(), target);
  }

  // repeated .CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  for (int i = 0; i < this->friend_permissions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->friend_permissions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetGiftPermissionsResponse)
  return target;
}

int CMsgClientToGCGetGiftPermissionsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool is_unlimited = 1;
    if (has_is_unlimited()) {
      total_size += 1 + 1;
    }

    // optional bool has_two_factor = 3;
    if (has_has_two_factor()) {
      total_size += 1 + 1;
    }

    // optional .EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (has_sender_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sender_permission());
    }

    // optional uint32 friendship_age_requirement = 7;
    if (has_friendship_age_requirement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendship_age_requirement());
    }

    // optional uint32 friendship_age_requirement_two_factor = 8;
    if (has_friendship_age_requirement_two_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendship_age_requirement_two_factor());
    }

  }
  // repeated .CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  total_size += 1 * this->friend_permissions_size();
  for (int i = 0; i < this->friend_permissions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_permissions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCGetGiftPermissionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissionsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCGetGiftPermissionsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissionsResponse::MergeFrom(const CMsgClientToGCGetGiftPermissionsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend_permissions_.MergeFrom(from.friend_permissions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_unlimited()) {
      set_is_unlimited(from.is_unlimited());
    }
    if (from.has_has_two_factor()) {
      set_has_two_factor(from.has_two_factor());
    }
    if (from.has_sender_permission()) {
      set_sender_permission(from.sender_permission());
    }
    if (from.has_friendship_age_requirement()) {
      set_friendship_age_requirement(from.friendship_age_requirement());
    }
    if (from.has_friendship_age_requirement_two_factor()) {
      set_friendship_age_requirement_two_factor(from.friendship_age_requirement_two_factor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCGetGiftPermissionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissionsResponse::CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissionsResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCGetGiftPermissionsResponse::Swap(CMsgClientToGCGetGiftPermissionsResponse* other) {
  if (other != this) {
    std::swap(is_unlimited_, other->is_unlimited_);
    std::swap(has_two_factor_, other->has_two_factor_);
    std::swap(sender_permission_, other->sender_permission_);
    std::swap(friendship_age_requirement_, other->friendship_age_requirement_);
    std::swap(friendship_age_requirement_two_factor_, other->friendship_age_requirement_two_factor_);
    friend_permissions_.Swap(&other->friend_permissions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissionsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCGetGiftPermissionsResponse_descriptor_;
  metadata.reflection = CMsgClientToGCGetGiftPermissionsResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnpackBundle::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnpackBundle::CMsgClientToGCUnpackBundle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnpackBundle)
}

void CMsgClientToGCUnpackBundle::InitAsDefaultInstance() {
}

CMsgClientToGCUnpackBundle::CMsgClientToGCUnpackBundle(const CMsgClientToGCUnpackBundle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnpackBundle)
}

void CMsgClientToGCUnpackBundle::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnpackBundle::~CMsgClientToGCUnpackBundle() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnpackBundle)
  SharedDtor();
}

void CMsgClientToGCUnpackBundle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnpackBundle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnpackBundle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnpackBundle_descriptor_;
}

const CMsgClientToGCUnpackBundle& CMsgClientToGCUnpackBundle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnpackBundle* CMsgClientToGCUnpackBundle::default_instance_ = NULL;

CMsgClientToGCUnpackBundle* CMsgClientToGCUnpackBundle::New() const {
  return new CMsgClientToGCUnpackBundle;
}

void CMsgClientToGCUnpackBundle::Clear() {
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnpackBundle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnpackBundle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnpackBundle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnpackBundle)
  return false;
#undef DO_
}

void CMsgClientToGCUnpackBundle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnpackBundle)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnpackBundle)
}

::google::protobuf::uint8* CMsgClientToGCUnpackBundle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnpackBundle)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnpackBundle)
  return target;
}

int CMsgClientToGCUnpackBundle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnpackBundle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnpackBundle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnpackBundle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnpackBundle::MergeFrom(const CMsgClientToGCUnpackBundle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnpackBundle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnpackBundle::CopyFrom(const CMsgClientToGCUnpackBundle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnpackBundle::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnpackBundle::Swap(CMsgClientToGCUnpackBundle* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnpackBundle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnpackBundle_descriptor_;
  metadata.reflection = CMsgClientToGCUnpackBundle_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor_;
}
bool CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Succeeded;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_ItemIsNotBundle;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_UnableToCreateContainedItem;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_SOCacheError;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_ItemIsInvalid;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_BadItemQuantity;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_UnableToDeleteItem;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::EUnpackBundle_MIN;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::EUnpackBundle_MAX;
const int CMsgClientToGCUnpackBundleResponse::EUnpackBundle_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgClientToGCUnpackBundleResponse::kUnpackedItemIdsFieldNumber;
const int CMsgClientToGCUnpackBundleResponse::kResponseFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnpackBundleResponse::CMsgClientToGCUnpackBundleResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnpackBundleResponse)
}

void CMsgClientToGCUnpackBundleResponse::InitAsDefaultInstance() {
}

CMsgClientToGCUnpackBundleResponse::CMsgClientToGCUnpackBundleResponse(const CMsgClientToGCUnpackBundleResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnpackBundleResponse)
}

void CMsgClientToGCUnpackBundleResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnpackBundleResponse::~CMsgClientToGCUnpackBundleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnpackBundleResponse)
  SharedDtor();
}

void CMsgClientToGCUnpackBundleResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnpackBundleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnpackBundleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnpackBundleResponse_descriptor_;
}

const CMsgClientToGCUnpackBundleResponse& CMsgClientToGCUnpackBundleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnpackBundleResponse* CMsgClientToGCUnpackBundleResponse::default_instance_ = NULL;

CMsgClientToGCUnpackBundleResponse* CMsgClientToGCUnpackBundleResponse::New() const {
  return new CMsgClientToGCUnpackBundleResponse;
}

void CMsgClientToGCUnpackBundleResponse::Clear() {
  response_ = 0;
  unpacked_item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnpackBundleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnpackBundleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 unpacked_item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_unpacked_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_unpacked_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_unpacked_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_unpacked_item_ids;
        if (input->ExpectTag(16)) goto parse_response;
        break;
      }

      // optional .CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
      case 2: {
        if (tag == 16) {
         parse_response:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(value)) {
            set_response(static_cast< ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnpackBundleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnpackBundleResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnpackBundleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnpackBundleResponse)
  // repeated uint64 unpacked_item_ids = 1;
  for (int i = 0; i < this->unpacked_item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->unpacked_item_ids(i), output);
  }

  // optional .CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnpackBundleResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnpackBundleResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnpackBundleResponse)
  // repeated uint64 unpacked_item_ids = 1;
  for (int i = 0; i < this->unpacked_item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->unpacked_item_ids(i), target);
  }

  // optional .CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnpackBundleResponse)
  return target;
}

int CMsgClientToGCUnpackBundleResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

  }
  // repeated uint64 unpacked_item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->unpacked_item_ids(i));
    }
    total_size += 1 * this->unpacked_item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnpackBundleResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnpackBundleResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnpackBundleResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnpackBundleResponse::MergeFrom(const CMsgClientToGCUnpackBundleResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  unpacked_item_ids_.MergeFrom(from.unpacked_item_ids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnpackBundleResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnpackBundleResponse::CopyFrom(const CMsgClientToGCUnpackBundleResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnpackBundleResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnpackBundleResponse::Swap(CMsgClientToGCUnpackBundleResponse* other) {
  if (other != this) {
    unpacked_item_ids_.Swap(&other->unpacked_item_ids_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnpackBundleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnpackBundleResponse_descriptor_;
  metadata.reflection = CMsgClientToGCUnpackBundleResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToClientStoreTransactionCompleted::kTxnIdFieldNumber;
const int CMsgGCToClientStoreTransactionCompleted::kItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToClientStoreTransactionCompleted)
}

void CMsgGCToClientStoreTransactionCompleted::InitAsDefaultInstance() {
}

CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted(const CMsgGCToClientStoreTransactionCompleted& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientStoreTransactionCompleted)
}

void CMsgGCToClientStoreTransactionCompleted::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToClientStoreTransactionCompleted::~CMsgGCToClientStoreTransactionCompleted() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientStoreTransactionCompleted)
  SharedDtor();
}

void CMsgGCToClientStoreTransactionCompleted::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToClientStoreTransactionCompleted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToClientStoreTransactionCompleted::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToClientStoreTransactionCompleted_descriptor_;
}

const CMsgGCToClientStoreTransactionCompleted& CMsgGCToClientStoreTransactionCompleted::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToClientStoreTransactionCompleted* CMsgGCToClientStoreTransactionCompleted::default_instance_ = NULL;

CMsgGCToClientStoreTransactionCompleted* CMsgGCToClientStoreTransactionCompleted::New() const {
  return new CMsgGCToClientStoreTransactionCompleted;
}

void CMsgGCToClientStoreTransactionCompleted::Clear() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToClientStoreTransactionCompleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToClientStoreTransactionCompleted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
          set_has_txn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (tag == 16) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_item_ids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToClientStoreTransactionCompleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToClientStoreTransactionCompleted)
  return false;
#undef DO_
}

void CMsgGCToClientStoreTransactionCompleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToClientStoreTransactionCompleted)
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToClientStoreTransactionCompleted)
}

::google::protobuf::uint8* CMsgGCToClientStoreTransactionCompleted::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientStoreTransactionCompleted)
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientStoreTransactionCompleted)
  return target;
}

int CMsgGCToClientStoreTransactionCompleted::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 txn_id = 1;
    if (has_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_id());
    }

  }
  // repeated uint64 item_ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToClientStoreTransactionCompleted* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToClientStoreTransactionCompleted*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_txn_id()) {
      set_txn_id(from.txn_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientStoreTransactionCompleted::IsInitialized() const {

  return true;
}

void CMsgGCToClientStoreTransactionCompleted::Swap(CMsgGCToClientStoreTransactionCompleted* other) {
  if (other != this) {
    std::swap(txn_id_, other->txn_id_);
    item_ids_.Swap(&other->item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToClientStoreTransactionCompleted::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToClientStoreTransactionCompleted_descriptor_;
  metadata.reflection = CMsgGCToClientStoreTransactionCompleted_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCEquipItems::kEquipsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCEquipItems::CMsgClientToGCEquipItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCEquipItems)
}

void CMsgClientToGCEquipItems::InitAsDefaultInstance() {
}

CMsgClientToGCEquipItems::CMsgClientToGCEquipItems(const CMsgClientToGCEquipItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCEquipItems)
}

void CMsgClientToGCEquipItems::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCEquipItems::~CMsgClientToGCEquipItems() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCEquipItems)
  SharedDtor();
}

void CMsgClientToGCEquipItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCEquipItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCEquipItems_descriptor_;
}

const CMsgClientToGCEquipItems& CMsgClientToGCEquipItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCEquipItems* CMsgClientToGCEquipItems::default_instance_ = NULL;

CMsgClientToGCEquipItems* CMsgClientToGCEquipItems::New() const {
  return new CMsgClientToGCEquipItems;
}

void CMsgClientToGCEquipItems::Clear() {
  equips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCEquipItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCEquipItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgAdjustItemEquippedState equips = 1;
      case 1: {
        if (tag == 10) {
         parse_equips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_equips;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCEquipItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCEquipItems)
  return false;
#undef DO_
}

void CMsgClientToGCEquipItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCEquipItems)
  // repeated .CMsgAdjustItemEquippedState equips = 1;
  for (int i = 0; i < this->equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equips(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCEquipItems)
}

::google::protobuf::uint8* CMsgClientToGCEquipItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCEquipItems)
  // repeated .CMsgAdjustItemEquippedState equips = 1;
  for (int i = 0; i < this->equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equips(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCEquipItems)
  return target;
}

int CMsgClientToGCEquipItems::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgAdjustItemEquippedState equips = 1;
  total_size += 1 * this->equips_size();
  for (int i = 0; i < this->equips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equips(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCEquipItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCEquipItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCEquipItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItems::MergeFrom(const CMsgClientToGCEquipItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  equips_.MergeFrom(from.equips_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCEquipItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItems::CopyFrom(const CMsgClientToGCEquipItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItems::IsInitialized() const {

  return true;
}

void CMsgClientToGCEquipItems::Swap(CMsgClientToGCEquipItems* other) {
  if (other != this) {
    equips_.Swap(&other->equips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCEquipItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCEquipItems_descriptor_;
  metadata.reflection = CMsgClientToGCEquipItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCEquipItemsResponse::kSoCacheVersionIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCEquipItemsResponse)
}

void CMsgClientToGCEquipItemsResponse::InitAsDefaultInstance() {
}

CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse(const CMsgClientToGCEquipItemsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCEquipItemsResponse)
}

void CMsgClientToGCEquipItemsResponse::SharedCtor() {
  _cached_size_ = 0;
  so_cache_version_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCEquipItemsResponse::~CMsgClientToGCEquipItemsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCEquipItemsResponse)
  SharedDtor();
}

void CMsgClientToGCEquipItemsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCEquipItemsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItemsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCEquipItemsResponse_descriptor_;
}

const CMsgClientToGCEquipItemsResponse& CMsgClientToGCEquipItemsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCEquipItemsResponse* CMsgClientToGCEquipItemsResponse::default_instance_ = NULL;

CMsgClientToGCEquipItemsResponse* CMsgClientToGCEquipItemsResponse::New() const {
  return new CMsgClientToGCEquipItemsResponse;
}

void CMsgClientToGCEquipItemsResponse::Clear() {
  so_cache_version_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCEquipItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCEquipItemsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 so_cache_version_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &so_cache_version_id_)));
          set_has_so_cache_version_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCEquipItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCEquipItemsResponse)
  return false;
#undef DO_
}

void CMsgClientToGCEquipItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCEquipItemsResponse)
  // optional fixed64 so_cache_version_id = 1;
  if (has_so_cache_version_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->so_cache_version_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCEquipItemsResponse)
}

::google::protobuf::uint8* CMsgClientToGCEquipItemsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCEquipItemsResponse)
  // optional fixed64 so_cache_version_id = 1;
  if (has_so_cache_version_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->so_cache_version_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCEquipItemsResponse)
  return target;
}

int CMsgClientToGCEquipItemsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed64 so_cache_version_id = 1;
    if (has_so_cache_version_id()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCEquipItemsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCEquipItemsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const CMsgClientToGCEquipItemsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_so_cache_version_id()) {
      set_so_cache_version_id(from.so_cache_version_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const CMsgClientToGCEquipItemsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItemsResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCEquipItemsResponse::Swap(CMsgClientToGCEquipItemsResponse* other) {
  if (other != this) {
    std::swap(so_cache_version_id_, other->so_cache_version_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCEquipItemsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCEquipItemsResponse_descriptor_;
  metadata.reflection = CMsgClientToGCEquipItemsResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCSetItemStyle::kItemIdFieldNumber;
const int CMsgClientToGCSetItemStyle::kStyleIndexFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCSetItemStyle::CMsgClientToGCSetItemStyle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCSetItemStyle)
}

void CMsgClientToGCSetItemStyle::InitAsDefaultInstance() {
}

CMsgClientToGCSetItemStyle::CMsgClientToGCSetItemStyle(const CMsgClientToGCSetItemStyle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetItemStyle)
}

void CMsgClientToGCSetItemStyle::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  style_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCSetItemStyle::~CMsgClientToGCSetItemStyle() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetItemStyle)
  SharedDtor();
}

void CMsgClientToGCSetItemStyle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCSetItemStyle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemStyle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCSetItemStyle_descriptor_;
}

const CMsgClientToGCSetItemStyle& CMsgClientToGCSetItemStyle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCSetItemStyle* CMsgClientToGCSetItemStyle::default_instance_ = NULL;

CMsgClientToGCSetItemStyle* CMsgClientToGCSetItemStyle::New() const {
  return new CMsgClientToGCSetItemStyle;
}

void CMsgClientToGCSetItemStyle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCSetItemStyle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, style_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCSetItemStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCSetItemStyle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_style_index;
        break;
      }

      // optional uint32 style_index = 2;
      case 2: {
        if (tag == 16) {
         parse_style_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
          set_has_style_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCSetItemStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCSetItemStyle)
  return false;
#undef DO_
}

void CMsgClientToGCSetItemStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCSetItemStyle)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 style_index = 2;
  if (has_style_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->style_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCSetItemStyle)
}

::google::protobuf::uint8* CMsgClientToGCSetItemStyle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetItemStyle)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 style_index = 2;
  if (has_style_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->style_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetItemStyle)
  return target;
}

int CMsgClientToGCSetItemStyle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 style_index = 2;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCSetItemStyle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCSetItemStyle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCSetItemStyle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemStyle::MergeFrom(const CMsgClientToGCSetItemStyle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_style_index()) {
      set_style_index(from.style_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCSetItemStyle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemStyle::CopyFrom(const CMsgClientToGCSetItemStyle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemStyle::IsInitialized() const {

  return true;
}

void CMsgClientToGCSetItemStyle::Swap(CMsgClientToGCSetItemStyle* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(style_index_, other->style_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCSetItemStyle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCSetItemStyle_descriptor_;
  metadata.reflection = CMsgClientToGCSetItemStyle_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor_;
}
bool CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Succeeded;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Failed;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Failed_StyleIsLocked;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::ESetStyle_MIN;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::ESetStyle_MAX;
const int CMsgClientToGCSetItemStyleResponse::ESetStyle_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgClientToGCSetItemStyleResponse::kResponseFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCSetItemStyleResponse::CMsgClientToGCSetItemStyleResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCSetItemStyleResponse)
}

void CMsgClientToGCSetItemStyleResponse::InitAsDefaultInstance() {
}

CMsgClientToGCSetItemStyleResponse::CMsgClientToGCSetItemStyleResponse(const CMsgClientToGCSetItemStyleResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetItemStyleResponse)
}

void CMsgClientToGCSetItemStyleResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCSetItemStyleResponse::~CMsgClientToGCSetItemStyleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetItemStyleResponse)
  SharedDtor();
}

void CMsgClientToGCSetItemStyleResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCSetItemStyleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemStyleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCSetItemStyleResponse_descriptor_;
}

const CMsgClientToGCSetItemStyleResponse& CMsgClientToGCSetItemStyleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCSetItemStyleResponse* CMsgClientToGCSetItemStyleResponse::default_instance_ = NULL;

CMsgClientToGCSetItemStyleResponse* CMsgClientToGCSetItemStyleResponse::New() const {
  return new CMsgClientToGCSetItemStyleResponse;
}

void CMsgClientToGCSetItemStyleResponse::Clear() {
  response_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCSetItemStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCSetItemStyleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(value)) {
            set_response(static_cast< ::CMsgClientToGCSetItemStyleResponse_ESetStyle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCSetItemStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCSetItemStyleResponse)
  return false;
#undef DO_
}

void CMsgClientToGCSetItemStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCSetItemStyleResponse)
  // optional .CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCSetItemStyleResponse)
}

::google::protobuf::uint8* CMsgClientToGCSetItemStyleResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetItemStyleResponse)
  // optional .CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetItemStyleResponse)
  return target;
}

int CMsgClientToGCSetItemStyleResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCSetItemStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCSetItemStyleResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCSetItemStyleResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemStyleResponse::MergeFrom(const CMsgClientToGCSetItemStyleResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCSetItemStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemStyleResponse::CopyFrom(const CMsgClientToGCSetItemStyleResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemStyleResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCSetItemStyleResponse::Swap(CMsgClientToGCSetItemStyleResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCSetItemStyleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCSetItemStyleResponse_descriptor_;
  metadata.reflection = CMsgClientToGCSetItemStyleResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnlockItemStyle::kItemToUnlockFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kConsumableItemIdsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockItemStyle)
}

void CMsgClientToGCUnlockItemStyle::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle(const CMsgClientToGCUnlockItemStyle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockItemStyle)
}

void CMsgClientToGCUnlockItemStyle::SharedCtor() {
  _cached_size_ = 0;
  item_to_unlock_ = GOOGLE_ULONGLONG(0);
  style_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockItemStyle::~CMsgClientToGCUnlockItemStyle() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockItemStyle)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockItemStyle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockItemStyle_descriptor_;
}

const CMsgClientToGCUnlockItemStyle& CMsgClientToGCUnlockItemStyle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockItemStyle* CMsgClientToGCUnlockItemStyle::default_instance_ = NULL;

CMsgClientToGCUnlockItemStyle* CMsgClientToGCUnlockItemStyle::New() const {
  return new CMsgClientToGCUnlockItemStyle;
}

void CMsgClientToGCUnlockItemStyle::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    item_to_unlock_ = GOOGLE_ULONGLONG(0);
    style_index_ = 0u;
  }
  consumable_item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockItemStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockItemStyle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_to_unlock = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_to_unlock_)));
          set_has_item_to_unlock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_style_index;
        break;
      }

      // optional uint32 style_index = 2;
      case 2: {
        if (tag == 16) {
         parse_style_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
          set_has_style_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_consumable_item_ids;
        break;
      }

      // repeated uint64 consumable_item_ids = 3;
      case 3: {
        if (tag == 24) {
         parse_consumable_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_consumable_item_ids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_consumable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_consumable_item_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockItemStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockItemStyle)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockItemStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockItemStyle)
  // optional uint64 item_to_unlock = 1;
  if (has_item_to_unlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_to_unlock(), output);
  }

  // optional uint32 style_index = 2;
  if (has_style_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->style_index(), output);
  }

  // repeated uint64 consumable_item_ids = 3;
  for (int i = 0; i < this->consumable_item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->consumable_item_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockItemStyle)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockItemStyle)
  // optional uint64 item_to_unlock = 1;
  if (has_item_to_unlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_to_unlock(), target);
  }

  // optional uint32 style_index = 2;
  if (has_style_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->style_index(), target);
  }

  // repeated uint64 consumable_item_ids = 3;
  for (int i = 0; i < this->consumable_item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->consumable_item_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockItemStyle)
  return target;
}

int CMsgClientToGCUnlockItemStyle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_to_unlock = 1;
    if (has_item_to_unlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_to_unlock());
    }

    // optional uint32 style_index = 2;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  // repeated uint64 consumable_item_ids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->consumable_item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->consumable_item_ids(i));
    }
    total_size += 1 * this->consumable_item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockItemStyle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const CMsgClientToGCUnlockItemStyle& from) {
  GOOGLE_CHECK_NE(&from, this);
  consumable_item_ids_.MergeFrom(from.consumable_item_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_to_unlock()) {
      set_item_to_unlock(from.item_to_unlock());
    }
    if (from.has_style_index()) {
      set_style_index(from.style_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const CMsgClientToGCUnlockItemStyle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyle::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockItemStyle::Swap(CMsgClientToGCUnlockItemStyle* other) {
  if (other != this) {
    std::swap(item_to_unlock_, other->item_to_unlock_);
    std::swap(style_index_, other->style_index_);
    consumable_item_ids_.Swap(&other->consumable_item_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockItemStyle_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockItemStyle_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor_;
}
bool CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Succeeded;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_PreReq;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAfford;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantCommit;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantLockCache;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordAttrib;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordGem;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_NoCompendiumLevel;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_AlreadyUnlocked;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_OtherError;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_ItemIsInvalid;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_ToolIsInvalid;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MIN;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MAX;
const int CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgClientToGCUnlockItemStyleResponse::kResponseFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kItemIdFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStylePrereqFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockItemStyleResponse)
}

void CMsgClientToGCUnlockItemStyleResponse::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse(const CMsgClientToGCUnlockItemStyleResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockItemStyleResponse)
}

void CMsgClientToGCUnlockItemStyleResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  style_index_ = 0u;
  style_prereq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockItemStyleResponse::~CMsgClientToGCUnlockItemStyleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockItemStyleResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyleResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockItemStyleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockItemStyleResponse_descriptor_;
}

const CMsgClientToGCUnlockItemStyleResponse& CMsgClientToGCUnlockItemStyleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockItemStyleResponse* CMsgClientToGCUnlockItemStyleResponse::default_instance_ = NULL;

CMsgClientToGCUnlockItemStyleResponse* CMsgClientToGCUnlockItemStyleResponse::New() const {
  return new CMsgClientToGCUnlockItemStyleResponse;
}

void CMsgClientToGCUnlockItemStyleResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCUnlockItemStyleResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, style_prereq_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockItemStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockItemStyleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(value)) {
            set_response(static_cast< ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_style_index;
        break;
      }

      // optional uint32 style_index = 3;
      case 3: {
        if (tag == 24) {
         parse_style_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
          set_has_style_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_style_prereq;
        break;
      }

      // optional uint32 style_prereq = 4;
      case 4: {
        if (tag == 32) {
         parse_style_prereq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_prereq_)));
          set_has_style_prereq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockItemStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockItemStyleResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockItemStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockItemStyleResponse)
  // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 style_index = 3;
  if (has_style_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->style_index(), output);
  }

  // optional uint32 style_prereq = 4;
  if (has_style_prereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_prereq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockItemStyleResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyleResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockItemStyleResponse)
  // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 style_index = 3;
  if (has_style_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->style_index(), target);
  }

  // optional uint32 style_prereq = 4;
  if (has_style_prereq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_prereq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockItemStyleResponse)
  return target;
}

int CMsgClientToGCUnlockItemStyleResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 style_index = 3;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

    // optional uint32 style_prereq = 4;
    if (has_style_prereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_prereq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyleResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockItemStyleResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_style_index()) {
      set_style_index(from.style_index());
    }
    if (from.has_style_prereq()) {
      set_style_prereq(from.style_prereq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyleResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockItemStyleResponse::Swap(CMsgClientToGCUnlockItemStyleResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(item_id_, other->item_id_);
    std::swap(style_index_, other->style_index_);
    std::swap(style_prereq_, other->style_prereq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockItemStyleResponse_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockItemStyleResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCSetItemInventoryCategory::kItemIdsFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kSetToValueFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kRemoveCategoriesFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kAddCategoriesFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCSetItemInventoryCategory)
}

void CMsgClientToGCSetItemInventoryCategory::InitAsDefaultInstance() {
}

CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory(const CMsgClientToGCSetItemInventoryCategory& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetItemInventoryCategory)
}

void CMsgClientToGCSetItemInventoryCategory::SharedCtor() {
  _cached_size_ = 0;
  set_to_value_ = 0u;
  remove_categories_ = 0u;
  add_categories_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCSetItemInventoryCategory::~CMsgClientToGCSetItemInventoryCategory() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetItemInventoryCategory)
  SharedDtor();
}

void CMsgClientToGCSetItemInventoryCategory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCSetItemInventoryCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemInventoryCategory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCSetItemInventoryCategory_descriptor_;
}

const CMsgClientToGCSetItemInventoryCategory& CMsgClientToGCSetItemInventoryCategory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCSetItemInventoryCategory* CMsgClientToGCSetItemInventoryCategory::default_instance_ = NULL;

CMsgClientToGCSetItemInventoryCategory* CMsgClientToGCSetItemInventoryCategory::New() const {
  return new CMsgClientToGCSetItemInventoryCategory;
}

void CMsgClientToGCSetItemInventoryCategory::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCSetItemInventoryCategory*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(set_to_value_, add_categories_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  item_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCSetItemInventoryCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCSetItemInventoryCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_item_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_item_ids;
        if (input->ExpectTag(16)) goto parse_set_to_value;
        break;
      }

      // optional uint32 set_to_value = 2;
      case 2: {
        if (tag == 16) {
         parse_set_to_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &set_to_value_)));
          set_has_set_to_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_remove_categories;
        break;
      }

      // optional uint32 remove_categories = 3;
      case 3: {
        if (tag == 24) {
         parse_remove_categories:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remove_categories_)));
          set_has_remove_categories();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_add_categories;
        break;
      }

      // optional uint32 add_categories = 4;
      case 4: {
        if (tag == 32) {
         parse_add_categories:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_categories_)));
          set_has_add_categories();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCSetItemInventoryCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCSetItemInventoryCategory)
  return false;
#undef DO_
}

void CMsgClientToGCSetItemInventoryCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCSetItemInventoryCategory)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  // optional uint32 set_to_value = 2;
  if (has_set_to_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->set_to_value(), output);
  }

  // optional uint32 remove_categories = 3;
  if (has_remove_categories()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->remove_categories(), output);
  }

  // optional uint32 add_categories = 4;
  if (has_add_categories()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->add_categories(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCSetItemInventoryCategory)
}

::google::protobuf::uint8* CMsgClientToGCSetItemInventoryCategory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetItemInventoryCategory)
  // repeated uint64 item_ids = 1;
  for (int i = 0; i < this->item_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_ids(i), target);
  }

  // optional uint32 set_to_value = 2;
  if (has_set_to_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->set_to_value(), target);
  }

  // optional uint32 remove_categories = 3;
  if (has_remove_categories()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->remove_categories(), target);
  }

  // optional uint32 add_categories = 4;
  if (has_add_categories()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->add_categories(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetItemInventoryCategory)
  return target;
}

int CMsgClientToGCSetItemInventoryCategory::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 set_to_value = 2;
    if (has_set_to_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->set_to_value());
    }

    // optional uint32 remove_categories = 3;
    if (has_remove_categories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remove_categories());
    }

    // optional uint32 add_categories = 4;
    if (has_add_categories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->add_categories());
    }

  }
  // repeated uint64 item_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_ids(i));
    }
    total_size += 1 * this->item_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCSetItemInventoryCategory* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCSetItemInventoryCategory*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_ids_.MergeFrom(from.item_ids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_set_to_value()) {
      set_set_to_value(from.set_to_value());
    }
    if (from.has_remove_categories()) {
      set_remove_categories(from.remove_categories());
    }
    if (from.has_add_categories()) {
      set_add_categories(from.add_categories());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemInventoryCategory::IsInitialized() const {

  return true;
}

void CMsgClientToGCSetItemInventoryCategory::Swap(CMsgClientToGCSetItemInventoryCategory* other) {
  if (other != this) {
    item_ids_.Swap(&other->item_ids_);
    std::swap(set_to_value_, other->set_to_value_);
    std::swap(remove_categories_, other->remove_categories_);
    std::swap(add_categories_, other->add_categories_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCSetItemInventoryCategory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCSetItemInventoryCategory_descriptor_;
  metadata.reflection = CMsgClientToGCSetItemInventoryCategory_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnlockCrate::kCrateItemIdFieldNumber;
const int CMsgClientToGCUnlockCrate::kKeyItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockCrate)
}

void CMsgClientToGCUnlockCrate::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate(const CMsgClientToGCUnlockCrate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockCrate)
}

void CMsgClientToGCUnlockCrate::SharedCtor() {
  _cached_size_ = 0;
  crate_item_id_ = GOOGLE_ULONGLONG(0);
  key_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockCrate::~CMsgClientToGCUnlockCrate() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockCrate)
  SharedDtor();
}

void CMsgClientToGCUnlockCrate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockCrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockCrate_descriptor_;
}

const CMsgClientToGCUnlockCrate& CMsgClientToGCUnlockCrate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockCrate* CMsgClientToGCUnlockCrate::default_instance_ = NULL;

CMsgClientToGCUnlockCrate* CMsgClientToGCUnlockCrate::New() const {
  return new CMsgClientToGCUnlockCrate;
}

void CMsgClientToGCUnlockCrate::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCUnlockCrate*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(crate_item_id_, key_item_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockCrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockCrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 crate_item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &crate_item_id_)));
          set_has_crate_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_key_item_id;
        break;
      }

      // optional uint64 key_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_key_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_item_id_)));
          set_has_key_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockCrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockCrate)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockCrate)
  // optional uint64 crate_item_id = 1;
  if (has_crate_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->crate_item_id(), output);
  }

  // optional uint64 key_item_id = 2;
  if (has_key_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->key_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockCrate)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockCrate)
  // optional uint64 crate_item_id = 1;
  if (has_crate_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->crate_item_id(), target);
  }

  // optional uint64 key_item_id = 2;
  if (has_key_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->key_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockCrate)
  return target;
}

int CMsgClientToGCUnlockCrate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 crate_item_id = 1;
    if (has_crate_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->crate_item_id());
    }

    // optional uint64 key_item_id = 2;
    if (has_key_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->key_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockCrate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrate::MergeFrom(const CMsgClientToGCUnlockCrate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_crate_item_id()) {
      set_crate_item_id(from.crate_item_id());
    }
    if (from.has_key_item_id()) {
      set_key_item_id(from.key_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockCrate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrate::CopyFrom(const CMsgClientToGCUnlockCrate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrate::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockCrate::Swap(CMsgClientToGCUnlockCrate* other) {
  if (other != this) {
    std::swap(crate_item_id_, other->crate_item_id_);
    std::swap(key_item_id_, other->key_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockCrate_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockCrate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCUnlockCrateResponse_Item::kItemIdFieldNumber;
const int CMsgClientToGCUnlockCrateResponse_Item::kDefIndexFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockCrateResponse.Item)
}

void CMsgClientToGCUnlockCrateResponse_Item::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item(const CMsgClientToGCUnlockCrateResponse_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockCrateResponse.Item)
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  def_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockCrateResponse_Item::~CMsgClientToGCUnlockCrateResponse_Item() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockCrateResponse.Item)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockCrateResponse_Item_descriptor_;
}

const CMsgClientToGCUnlockCrateResponse_Item& CMsgClientToGCUnlockCrateResponse_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse_Item::default_instance_ = NULL;

CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse_Item::New() const {
  return new CMsgClientToGCUnlockCrateResponse_Item;
}

void CMsgClientToGCUnlockCrateResponse_Item::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCUnlockCrateResponse_Item*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, def_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockCrateResponse_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockCrateResponse.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_def_index;
        break;
      }

      // optional uint32 def_index = 2;
      case 2: {
        if (tag == 16) {
         parse_def_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
          set_has_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockCrateResponse.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockCrateResponse.Item)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrateResponse_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockCrateResponse.Item)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 def_index = 2;
  if (has_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->def_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockCrateResponse.Item)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockCrateResponse.Item)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 def_index = 2;
  if (has_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->def_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockCrateResponse.Item)
  return target;
}

int CMsgClientToGCUnlockCrateResponse_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 2;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockCrateResponse_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_def_index()) {
      set_def_index(from.def_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse_Item::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockCrateResponse_Item::Swap(CMsgClientToGCUnlockCrateResponse_Item* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(def_index_, other->def_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockCrateResponse_Item_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockCrateResponse_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgClientToGCUnlockCrateResponse::kResultFieldNumber;
const int CMsgClientToGCUnlockCrateResponse::kGrantedItemsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCUnlockCrateResponse)
}

void CMsgClientToGCUnlockCrateResponse::InitAsDefaultInstance() {
}

CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse(const CMsgClientToGCUnlockCrateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockCrateResponse)
}

void CMsgClientToGCUnlockCrateResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCUnlockCrateResponse::~CMsgClientToGCUnlockCrateResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockCrateResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCUnlockCrateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCUnlockCrateResponse_descriptor_;
}

const CMsgClientToGCUnlockCrateResponse& CMsgClientToGCUnlockCrateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCUnlockCrateResponse* CMsgClientToGCUnlockCrateResponse::default_instance_ = NULL;

CMsgClientToGCUnlockCrateResponse* CMsgClientToGCUnlockCrateResponse::New() const {
  return new CMsgClientToGCUnlockCrateResponse;
}

void CMsgClientToGCUnlockCrateResponse::Clear() {
  result_ = 0;
  granted_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCUnlockCrateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCUnlockCrateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EGCMsgResponse_IsValid(value)) {
            set_result(static_cast< ::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_granted_items;
        break;
      }

      // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
      case 2: {
        if (tag == 18) {
         parse_granted_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_granted_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_granted_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCUnlockCrateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCUnlockCrateResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCUnlockCrateResponse)
  // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (int i = 0; i < this->granted_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->granted_items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCUnlockCrateResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockCrateResponse)
  // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (int i = 0; i < this->granted_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->granted_items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockCrateResponse)
  return target;
}

int CMsgClientToGCUnlockCrateResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  total_size += 1 * this->granted_items_size();
  for (int i = 0; i < this->granted_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->granted_items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCUnlockCrateResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const CMsgClientToGCUnlockCrateResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  granted_items_.MergeFrom(from.granted_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const CMsgClientToGCUnlockCrateResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCUnlockCrateResponse::Swap(CMsgClientToGCUnlockCrateResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    granted_items_.Swap(&other->granted_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCUnlockCrateResponse_descriptor_;
  metadata.reflection = CMsgClientToGCUnlockCrateResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCRemoveItemAttribute::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCRemoveItemAttribute::CMsgClientToGCRemoveItemAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCRemoveItemAttribute)
}

void CMsgClientToGCRemoveItemAttribute::InitAsDefaultInstance() {
}

CMsgClientToGCRemoveItemAttribute::CMsgClientToGCRemoveItemAttribute(const CMsgClientToGCRemoveItemAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRemoveItemAttribute)
}

void CMsgClientToGCRemoveItemAttribute::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCRemoveItemAttribute::~CMsgClientToGCRemoveItemAttribute() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRemoveItemAttribute)
  SharedDtor();
}

void CMsgClientToGCRemoveItemAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCRemoveItemAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCRemoveItemAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCRemoveItemAttribute_descriptor_;
}

const CMsgClientToGCRemoveItemAttribute& CMsgClientToGCRemoveItemAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCRemoveItemAttribute* CMsgClientToGCRemoveItemAttribute::default_instance_ = NULL;

CMsgClientToGCRemoveItemAttribute* CMsgClientToGCRemoveItemAttribute::New() const {
  return new CMsgClientToGCRemoveItemAttribute;
}

void CMsgClientToGCRemoveItemAttribute::Clear() {
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCRemoveItemAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCRemoveItemAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCRemoveItemAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCRemoveItemAttribute)
  return false;
#undef DO_
}

void CMsgClientToGCRemoveItemAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCRemoveItemAttribute)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCRemoveItemAttribute)
}

::google::protobuf::uint8* CMsgClientToGCRemoveItemAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRemoveItemAttribute)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRemoveItemAttribute)
  return target;
}

int CMsgClientToGCRemoveItemAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCRemoveItemAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCRemoveItemAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCRemoveItemAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveItemAttribute::MergeFrom(const CMsgClientToGCRemoveItemAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCRemoveItemAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveItemAttribute::CopyFrom(const CMsgClientToGCRemoveItemAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveItemAttribute::IsInitialized() const {

  return true;
}

void CMsgClientToGCRemoveItemAttribute::Swap(CMsgClientToGCRemoveItemAttribute* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCRemoveItemAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCRemoveItemAttribute_descriptor_;
  metadata.reflection = CMsgClientToGCRemoveItemAttribute_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor_;
}
bool CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Succeeded;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_ItemIsInvalid;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_AttributeDoesntExist;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_MIN;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_MAX;
const int CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgClientToGCRemoveItemAttributeResponse::kResponseFieldNumber;
const int CMsgClientToGCRemoveItemAttributeResponse::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCRemoveItemAttributeResponse::CMsgClientToGCRemoveItemAttributeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCRemoveItemAttributeResponse)
}

void CMsgClientToGCRemoveItemAttributeResponse::InitAsDefaultInstance() {
}

CMsgClientToGCRemoveItemAttributeResponse::CMsgClientToGCRemoveItemAttributeResponse(const CMsgClientToGCRemoveItemAttributeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRemoveItemAttributeResponse)
}

void CMsgClientToGCRemoveItemAttributeResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCRemoveItemAttributeResponse::~CMsgClientToGCRemoveItemAttributeResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRemoveItemAttributeResponse)
  SharedDtor();
}

void CMsgClientToGCRemoveItemAttributeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCRemoveItemAttributeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCRemoveItemAttributeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCRemoveItemAttributeResponse_descriptor_;
}

const CMsgClientToGCRemoveItemAttributeResponse& CMsgClientToGCRemoveItemAttributeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCRemoveItemAttributeResponse* CMsgClientToGCRemoveItemAttributeResponse::default_instance_ = NULL;

CMsgClientToGCRemoveItemAttributeResponse* CMsgClientToGCRemoveItemAttributeResponse::New() const {
  return new CMsgClientToGCRemoveItemAttributeResponse;
}

void CMsgClientToGCRemoveItemAttributeResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCRemoveItemAttributeResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, response_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCRemoveItemAttributeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCRemoveItemAttributeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(value)) {
            set_response(static_cast< ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCRemoveItemAttributeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCRemoveItemAttributeResponse)
  return false;
#undef DO_
}

void CMsgClientToGCRemoveItemAttributeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCRemoveItemAttributeResponse)
  // optional .CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCRemoveItemAttributeResponse)
}

::google::protobuf::uint8* CMsgClientToGCRemoveItemAttributeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRemoveItemAttributeResponse)
  // optional .CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRemoveItemAttributeResponse)
  return target;
}

int CMsgClientToGCRemoveItemAttributeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCRemoveItemAttributeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCRemoveItemAttributeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCRemoveItemAttributeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveItemAttributeResponse::MergeFrom(const CMsgClientToGCRemoveItemAttributeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCRemoveItemAttributeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveItemAttributeResponse::CopyFrom(const CMsgClientToGCRemoveItemAttributeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveItemAttributeResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCRemoveItemAttributeResponse::Swap(CMsgClientToGCRemoveItemAttributeResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCRemoveItemAttributeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCRemoveItemAttributeResponse_descriptor_;
  metadata.reflection = CMsgClientToGCRemoveItemAttributeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCNameItem::kSubjectItemIdFieldNumber;
const int CMsgClientToGCNameItem::kToolItemIdFieldNumber;
const int CMsgClientToGCNameItem::kNameFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCNameItem::CMsgClientToGCNameItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCNameItem)
}

void CMsgClientToGCNameItem::InitAsDefaultInstance() {
}

CMsgClientToGCNameItem::CMsgClientToGCNameItem(const CMsgClientToGCNameItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCNameItem)
}

void CMsgClientToGCNameItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  subject_item_id_ = GOOGLE_ULONGLONG(0);
  tool_item_id_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCNameItem::~CMsgClientToGCNameItem() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCNameItem)
  SharedDtor();
}

void CMsgClientToGCNameItem::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgClientToGCNameItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCNameItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCNameItem_descriptor_;
}

const CMsgClientToGCNameItem& CMsgClientToGCNameItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCNameItem* CMsgClientToGCNameItem::default_instance_ = NULL;

CMsgClientToGCNameItem* CMsgClientToGCNameItem::New() const {
  return new CMsgClientToGCNameItem;
}

void CMsgClientToGCNameItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCNameItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(subject_item_id_, tool_item_id_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCNameItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCNameItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 subject_item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subject_item_id_)));
          set_has_subject_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tool_item_id;
        break;
      }

      // optional uint64 tool_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_tool_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tool_item_id_)));
          set_has_tool_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCNameItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCNameItem)
  return false;
#undef DO_
}

void CMsgClientToGCNameItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCNameItem)
  // optional uint64 subject_item_id = 1;
  if (has_subject_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->subject_item_id(), output);
  }

  // optional uint64 tool_item_id = 2;
  if (has_tool_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tool_item_id(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCNameItem)
}

::google::protobuf::uint8* CMsgClientToGCNameItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCNameItem)
  // optional uint64 subject_item_id = 1;
  if (has_subject_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->subject_item_id(), target);
  }

  // optional uint64 tool_item_id = 2;
  if (has_tool_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tool_item_id(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCNameItem)
  return target;
}

int CMsgClientToGCNameItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 subject_item_id = 1;
    if (has_subject_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->subject_item_id());
    }

    // optional uint64 tool_item_id = 2;
    if (has_tool_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tool_item_id());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCNameItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCNameItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCNameItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCNameItem::MergeFrom(const CMsgClientToGCNameItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_subject_item_id()) {
      set_subject_item_id(from.subject_item_id());
    }
    if (from.has_tool_item_id()) {
      set_tool_item_id(from.tool_item_id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCNameItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCNameItem::CopyFrom(const CMsgClientToGCNameItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCNameItem::IsInitialized() const {

  return true;
}

void CMsgClientToGCNameItem::Swap(CMsgClientToGCNameItem* other) {
  if (other != this) {
    std::swap(subject_item_id_, other->subject_item_id_);
    std::swap(tool_item_id_, other->tool_item_id_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCNameItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCNameItem_descriptor_;
  metadata.reflection = CMsgClientToGCNameItem_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgClientToGCNameItemResponse_ENameItem_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCNameItemResponse_ENameItem_descriptor_;
}
bool CMsgClientToGCNameItemResponse_ENameItem_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Succeeded;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_ToolIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_ItemIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_NameIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::ENameItem_MIN;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::ENameItem_MAX;
const int CMsgClientToGCNameItemResponse::ENameItem_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgClientToGCNameItemResponse::kResponseFieldNumber;
const int CMsgClientToGCNameItemResponse::kItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCNameItemResponse::CMsgClientToGCNameItemResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCNameItemResponse)
}

void CMsgClientToGCNameItemResponse::InitAsDefaultInstance() {
}

CMsgClientToGCNameItemResponse::CMsgClientToGCNameItemResponse(const CMsgClientToGCNameItemResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCNameItemResponse)
}

void CMsgClientToGCNameItemResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCNameItemResponse::~CMsgClientToGCNameItemResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCNameItemResponse)
  SharedDtor();
}

void CMsgClientToGCNameItemResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCNameItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCNameItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCNameItemResponse_descriptor_;
}

const CMsgClientToGCNameItemResponse& CMsgClientToGCNameItemResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCNameItemResponse* CMsgClientToGCNameItemResponse::default_instance_ = NULL;

CMsgClientToGCNameItemResponse* CMsgClientToGCNameItemResponse::New() const {
  return new CMsgClientToGCNameItemResponse;
}

void CMsgClientToGCNameItemResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCNameItemResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, response_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCNameItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCNameItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCNameItemResponse_ENameItem_IsValid(value)) {
            set_response(static_cast< ::CMsgClientToGCNameItemResponse_ENameItem >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCNameItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCNameItemResponse)
  return false;
#undef DO_
}

void CMsgClientToGCNameItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCNameItemResponse)
  // optional .CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCNameItemResponse)
}

::google::protobuf::uint8* CMsgClientToGCNameItemResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCNameItemResponse)
  // optional .CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCNameItemResponse)
  return target;
}

int CMsgClientToGCNameItemResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCNameItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCNameItemResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCNameItemResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCNameItemResponse::MergeFrom(const CMsgClientToGCNameItemResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCNameItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCNameItemResponse::CopyFrom(const CMsgClientToGCNameItemResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCNameItemResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCNameItemResponse::Swap(CMsgClientToGCNameItemResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCNameItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCNameItemResponse_descriptor_;
  metadata.reflection = CMsgClientToGCNameItemResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCSetItemPosition::kItemIdFieldNumber;
const int CMsgGCSetItemPosition::kNewPositionFieldNumber;
#endif  // !_MSC_VER

CMsgGCSetItemPosition::CMsgGCSetItemPosition()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCSetItemPosition)
}

void CMsgGCSetItemPosition::InitAsDefaultInstance() {
}

CMsgGCSetItemPosition::CMsgGCSetItemPosition(const CMsgGCSetItemPosition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCSetItemPosition)
}

void CMsgGCSetItemPosition::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  new_position_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCSetItemPosition::~CMsgGCSetItemPosition() {
  // @@protoc_insertion_point(destructor:CMsgGCSetItemPosition)
  SharedDtor();
}

void CMsgGCSetItemPosition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCSetItemPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCSetItemPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCSetItemPosition_descriptor_;
}

const CMsgGCSetItemPosition& CMsgGCSetItemPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCSetItemPosition* CMsgGCSetItemPosition::default_instance_ = NULL;

CMsgGCSetItemPosition* CMsgGCSetItemPosition::New() const {
  return new CMsgGCSetItemPosition;
}

void CMsgGCSetItemPosition::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCSetItemPosition*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, new_position_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCSetItemPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCSetItemPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_new_position;
        break;
      }

      // optional uint32 new_position = 2;
      case 2: {
        if (tag == 16) {
         parse_new_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_position_)));
          set_has_new_position();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCSetItemPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCSetItemPosition)
  return false;
#undef DO_
}

void CMsgGCSetItemPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCSetItemPosition)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_position = 2;
  if (has_new_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_position(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCSetItemPosition)
}

::google::protobuf::uint8* CMsgGCSetItemPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCSetItemPosition)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_position = 2;
  if (has_new_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_position(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCSetItemPosition)
  return target;
}

int CMsgGCSetItemPosition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_position = 2;
    if (has_new_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_position());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCSetItemPosition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCSetItemPosition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCSetItemPosition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCSetItemPosition::MergeFrom(const CMsgGCSetItemPosition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_new_position()) {
      set_new_position(from.new_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCSetItemPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCSetItemPosition::CopyFrom(const CMsgGCSetItemPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCSetItemPosition::IsInitialized() const {

  return true;
}

void CMsgGCSetItemPosition::Swap(CMsgGCSetItemPosition* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(new_position_, other->new_position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCSetItemPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCSetItemPosition_descriptor_;
  metadata.reflection = CMsgGCSetItemPosition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CAttribute_ItemDynamicRecipeComponent::kItemDefFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemQualityFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemFlagsFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kAttributesStringFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemCountFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemsFulfilledFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemRarityFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kLootlistFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kFulfilledItemIdFieldNumber;
#endif  // !_MSC_VER

CAttribute_ItemDynamicRecipeComponent::CAttribute_ItemDynamicRecipeComponent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CAttribute_ItemDynamicRecipeComponent)
}

void CAttribute_ItemDynamicRecipeComponent::InitAsDefaultInstance() {
}

CAttribute_ItemDynamicRecipeComponent::CAttribute_ItemDynamicRecipeComponent(const CAttribute_ItemDynamicRecipeComponent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CAttribute_ItemDynamicRecipeComponent)
}

void CAttribute_ItemDynamicRecipeComponent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_def_ = 0u;
  item_quality_ = 0u;
  item_flags_ = 0u;
  attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_count_ = 0u;
  items_fulfilled_ = 0u;
  item_rarity_ = 0u;
  lootlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulfilled_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CAttribute_ItemDynamicRecipeComponent::~CAttribute_ItemDynamicRecipeComponent() {
  // @@protoc_insertion_point(destructor:CAttribute_ItemDynamicRecipeComponent)
  SharedDtor();
}

void CAttribute_ItemDynamicRecipeComponent::SharedDtor() {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attributes_string_;
  }
  if (lootlist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lootlist_;
  }
  if (this != default_instance_) {
  }
}

void CAttribute_ItemDynamicRecipeComponent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAttribute_ItemDynamicRecipeComponent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAttribute_ItemDynamicRecipeComponent_descriptor_;
}

const CAttribute_ItemDynamicRecipeComponent& CAttribute_ItemDynamicRecipeComponent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CAttribute_ItemDynamicRecipeComponent* CAttribute_ItemDynamicRecipeComponent::default_instance_ = NULL;

CAttribute_ItemDynamicRecipeComponent* CAttribute_ItemDynamicRecipeComponent::New() const {
  return new CAttribute_ItemDynamicRecipeComponent;
}

void CAttribute_ItemDynamicRecipeComponent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CAttribute_ItemDynamicRecipeComponent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(item_def_, item_quality_);
    ZR_(item_flags_, item_rarity_);
    if (has_attributes_string()) {
      if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        attributes_string_->clear();
      }
    }
    if (has_lootlist()) {
      if (lootlist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        lootlist_->clear();
      }
    }
  }
  fulfilled_item_id_ = GOOGLE_ULONGLONG(0);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CAttribute_ItemDynamicRecipeComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CAttribute_ItemDynamicRecipeComponent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
          set_has_item_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_quality;
        break;
      }

      // optional uint32 item_quality = 2;
      case 2: {
        if (tag == 16) {
         parse_item_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_quality_)));
          set_has_item_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_flags;
        break;
      }

      // optional uint32 item_flags = 3;
      case 3: {
        if (tag == 24) {
         parse_item_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_flags_)));
          set_has_item_flags();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_attributes_string;
        break;
      }

      // optional string attributes_string = 4;
      case 4: {
        if (tag == 34) {
         parse_attributes_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attributes_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attributes_string().data(), this->attributes_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attributes_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_item_count;
        break;
      }

      // optional uint32 item_count = 5;
      case 5: {
        if (tag == 40) {
         parse_item_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_count_)));
          set_has_item_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_items_fulfilled;
        break;
      }

      // optional uint32 items_fulfilled = 6;
      case 6: {
        if (tag == 48) {
         parse_items_fulfilled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &items_fulfilled_)));
          set_has_items_fulfilled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_item_rarity;
        break;
      }

      // optional uint32 item_rarity = 7;
      case 7: {
        if (tag == 56) {
         parse_item_rarity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_rarity_)));
          set_has_item_rarity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_lootlist;
        break;
      }

      // optional string lootlist = 8;
      case 8: {
        if (tag == 66) {
         parse_lootlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lootlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lootlist().data(), this->lootlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lootlist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_fulfilled_item_id;
        break;
      }

      // optional uint64 fulfilled_item_id = 9;
      case 9: {
        if (tag == 72) {
         parse_fulfilled_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fulfilled_item_id_)));
          set_has_fulfilled_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CAttribute_ItemDynamicRecipeComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CAttribute_ItemDynamicRecipeComponent)
  return false;
#undef DO_
}

void CAttribute_ItemDynamicRecipeComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CAttribute_ItemDynamicRecipeComponent)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 item_quality = 2;
  if (has_item_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_quality(), output);
  }

  // optional uint32 item_flags = 3;
  if (has_item_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_flags(), output);
  }

  // optional string attributes_string = 4;
  if (has_attributes_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes_string().data(), this->attributes_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attributes_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->attributes_string(), output);
  }

  // optional uint32 item_count = 5;
  if (has_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->item_count(), output);
  }

  // optional uint32 items_fulfilled = 6;
  if (has_items_fulfilled()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->items_fulfilled(), output);
  }

  // optional uint32 item_rarity = 7;
  if (has_item_rarity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->item_rarity(), output);
  }

  // optional string lootlist = 8;
  if (has_lootlist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lootlist().data(), this->lootlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lootlist");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->lootlist(), output);
  }

  // optional uint64 fulfilled_item_id = 9;
  if (has_fulfilled_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->fulfilled_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CAttribute_ItemDynamicRecipeComponent)
}

::google::protobuf::uint8* CAttribute_ItemDynamicRecipeComponent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CAttribute_ItemDynamicRecipeComponent)
  // optional uint32 item_def = 1;
  if (has_item_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 item_quality = 2;
  if (has_item_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_quality(), target);
  }

  // optional uint32 item_flags = 3;
  if (has_item_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_flags(), target);
  }

  // optional string attributes_string = 4;
  if (has_attributes_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes_string().data(), this->attributes_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attributes_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->attributes_string(), target);
  }

  // optional uint32 item_count = 5;
  if (has_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->item_count(), target);
  }

  // optional uint32 items_fulfilled = 6;
  if (has_items_fulfilled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->items_fulfilled(), target);
  }

  // optional uint32 item_rarity = 7;
  if (has_item_rarity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->item_rarity(), target);
  }

  // optional string lootlist = 8;
  if (has_lootlist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lootlist().data(), this->lootlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lootlist");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->lootlist(), target);
  }

  // optional uint64 fulfilled_item_id = 9;
  if (has_fulfilled_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->fulfilled_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CAttribute_ItemDynamicRecipeComponent)
  return target;
}

int CAttribute_ItemDynamicRecipeComponent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 item_quality = 2;
    if (has_item_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_quality());
    }

    // optional uint32 item_flags = 3;
    if (has_item_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_flags());
    }

    // optional string attributes_string = 4;
    if (has_attributes_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attributes_string());
    }

    // optional uint32 item_count = 5;
    if (has_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_count());
    }

    // optional uint32 items_fulfilled = 6;
    if (has_items_fulfilled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->items_fulfilled());
    }

    // optional uint32 item_rarity = 7;
    if (has_item_rarity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_rarity());
    }

    // optional string lootlist = 8;
    if (has_lootlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lootlist());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 fulfilled_item_id = 9;
    if (has_fulfilled_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fulfilled_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAttribute_ItemDynamicRecipeComponent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CAttribute_ItemDynamicRecipeComponent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CAttribute_ItemDynamicRecipeComponent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CAttribute_ItemDynamicRecipeComponent::MergeFrom(const CAttribute_ItemDynamicRecipeComponent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def()) {
      set_item_def(from.item_def());
    }
    if (from.has_item_quality()) {
      set_item_quality(from.item_quality());
    }
    if (from.has_item_flags()) {
      set_item_flags(from.item_flags());
    }
    if (from.has_attributes_string()) {
      set_attributes_string(from.attributes_string());
    }
    if (from.has_item_count()) {
      set_item_count(from.item_count());
    }
    if (from.has_items_fulfilled()) {
      set_items_fulfilled(from.items_fulfilled());
    }
    if (from.has_item_rarity()) {
      set_item_rarity(from.item_rarity());
    }
    if (from.has_lootlist()) {
      set_lootlist(from.lootlist());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_fulfilled_item_id()) {
      set_fulfilled_item_id(from.fulfilled_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CAttribute_ItemDynamicRecipeComponent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAttribute_ItemDynamicRecipeComponent::CopyFrom(const CAttribute_ItemDynamicRecipeComponent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAttribute_ItemDynamicRecipeComponent::IsInitialized() const {

  return true;
}

void CAttribute_ItemDynamicRecipeComponent::Swap(CAttribute_ItemDynamicRecipeComponent* other) {
  if (other != this) {
    std::swap(item_def_, other->item_def_);
    std::swap(item_quality_, other->item_quality_);
    std::swap(item_flags_, other->item_flags_);
    std::swap(attributes_string_, other->attributes_string_);
    std::swap(item_count_, other->item_count_);
    std::swap(items_fulfilled_, other->items_fulfilled_);
    std::swap(item_rarity_, other->item_rarity_);
    std::swap(lootlist_, other->lootlist_);
    std::swap(fulfilled_item_id_, other->fulfilled_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CAttribute_ItemDynamicRecipeComponent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CAttribute_ItemDynamicRecipeComponent_descriptor_;
  metadata.reflection = CAttribute_ItemDynamicRecipeComponent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket::kItemIdFieldNumber;
const int CProtoItemSocket::kAttrDefIndexFieldNumber;
const int CProtoItemSocket::kRequiredTypeFieldNumber;
const int CProtoItemSocket::kRequiredHeroFieldNumber;
const int CProtoItemSocket::kGemDefIndexFieldNumber;
const int CProtoItemSocket::kNotTradableFieldNumber;
const int CProtoItemSocket::kRequiredItemSlotFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket::CProtoItemSocket()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket)
}

void CProtoItemSocket::InitAsDefaultInstance() {
}

CProtoItemSocket::CProtoItemSocket(const CProtoItemSocket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket)
}

void CProtoItemSocket::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  attr_def_index_ = 0u;
  required_type_ = 0u;
  required_hero_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gem_def_index_ = 0u;
  not_tradable_ = false;
  required_item_slot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket::~CProtoItemSocket() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket)
  SharedDtor();
}

void CProtoItemSocket::SharedDtor() {
  if (required_hero_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete required_hero_;
  }
  if (required_item_slot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete required_item_slot_;
  }
  if (this != default_instance_) {
  }
}

void CProtoItemSocket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_descriptor_;
}

const CProtoItemSocket& CProtoItemSocket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket* CProtoItemSocket::default_instance_ = NULL;

CProtoItemSocket* CProtoItemSocket::New() const {
  return new CProtoItemSocket;
}

void CProtoItemSocket::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CProtoItemSocket*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(item_id_, required_type_);
    ZR_(gem_def_index_, not_tradable_);
    if (has_required_hero()) {
      if (required_hero_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        required_hero_->clear();
      }
    }
    if (has_required_item_slot()) {
      if (required_item_slot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        required_item_slot_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attr_def_index;
        break;
      }

      // optional uint32 attr_def_index = 2;
      case 2: {
        if (tag == 16) {
         parse_attr_def_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_def_index_)));
          set_has_attr_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_required_type;
        break;
      }

      // optional uint32 required_type = 3;
      case 3: {
        if (tag == 24) {
         parse_required_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &required_type_)));
          set_has_required_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_required_hero;
        break;
      }

      // optional string required_hero = 4;
      case 4: {
        if (tag == 34) {
         parse_required_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required_hero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_hero().data(), this->required_hero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "required_hero");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gem_def_index;
        break;
      }

      // optional uint32 gem_def_index = 5;
      case 5: {
        if (tag == 40) {
         parse_gem_def_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gem_def_index_)));
          set_has_gem_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_not_tradable;
        break;
      }

      // optional bool not_tradable = 6;
      case 6: {
        if (tag == 48) {
         parse_not_tradable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &not_tradable_)));
          set_has_not_tradable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_required_item_slot;
        break;
      }

      // optional string required_item_slot = 7;
      case 7: {
        if (tag == 58) {
         parse_required_item_slot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required_item_slot()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_item_slot().data(), this->required_item_slot().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "required_item_slot");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket)
  return false;
#undef DO_
}

void CProtoItemSocket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 attr_def_index = 2;
  if (has_attr_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attr_def_index(), output);
  }

  // optional uint32 required_type = 3;
  if (has_required_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->required_type(), output);
  }

  // optional string required_hero = 4;
  if (has_required_hero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_hero().data(), this->required_hero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "required_hero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->required_hero(), output);
  }

  // optional uint32 gem_def_index = 5;
  if (has_gem_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gem_def_index(), output);
  }

  // optional bool not_tradable = 6;
  if (has_not_tradable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->not_tradable(), output);
  }

  // optional string required_item_slot = 7;
  if (has_required_item_slot()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_item_slot().data(), this->required_item_slot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "required_item_slot");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->required_item_slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket)
}

::google::protobuf::uint8* CProtoItemSocket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 attr_def_index = 2;
  if (has_attr_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attr_def_index(), target);
  }

  // optional uint32 required_type = 3;
  if (has_required_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->required_type(), target);
  }

  // optional string required_hero = 4;
  if (has_required_hero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_hero().data(), this->required_hero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "required_hero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->required_hero(), target);
  }

  // optional uint32 gem_def_index = 5;
  if (has_gem_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gem_def_index(), target);
  }

  // optional bool not_tradable = 6;
  if (has_not_tradable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->not_tradable(), target);
  }

  // optional string required_item_slot = 7;
  if (has_required_item_slot()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_item_slot().data(), this->required_item_slot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "required_item_slot");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->required_item_slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket)
  return target;
}

int CProtoItemSocket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 attr_def_index = 2;
    if (has_attr_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attr_def_index());
    }

    // optional uint32 required_type = 3;
    if (has_required_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->required_type());
    }

    // optional string required_hero = 4;
    if (has_required_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required_hero());
    }

    // optional uint32 gem_def_index = 5;
    if (has_gem_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gem_def_index());
    }

    // optional bool not_tradable = 6;
    if (has_not_tradable()) {
      total_size += 1 + 1;
    }

    // optional string required_item_slot = 7;
    if (has_required_item_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required_item_slot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket::MergeFrom(const CProtoItemSocket& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_attr_def_index()) {
      set_attr_def_index(from.attr_def_index());
    }
    if (from.has_required_type()) {
      set_required_type(from.required_type());
    }
    if (from.has_required_hero()) {
      set_required_hero(from.required_hero());
    }
    if (from.has_gem_def_index()) {
      set_gem_def_index(from.gem_def_index());
    }
    if (from.has_not_tradable()) {
      set_not_tradable(from.not_tradable());
    }
    if (from.has_required_item_slot()) {
      set_required_item_slot(from.required_item_slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket::CopyFrom(const CProtoItemSocket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket::IsInitialized() const {

  return true;
}

void CProtoItemSocket::Swap(CProtoItemSocket* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(attr_def_index_, other->attr_def_index_);
    std::swap(required_type_, other->required_type_);
    std::swap(required_hero_, other->required_hero_);
    std::swap(gem_def_index_, other->gem_def_index_);
    std::swap(not_tradable_, other->not_tradable_);
    std::swap(required_item_slot_, other->required_item_slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_descriptor_;
  metadata.reflection = CProtoItemSocket_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_Empty::kSocketFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_Empty::CProtoItemSocket_Empty()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_Empty)
}

void CProtoItemSocket_Empty::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_Empty::CProtoItemSocket_Empty(const CProtoItemSocket_Empty& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_Empty)
}

void CProtoItemSocket_Empty::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_Empty::~CProtoItemSocket_Empty() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_Empty)
  SharedDtor();
}

void CProtoItemSocket_Empty::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Empty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_Empty_descriptor_;
}

const CProtoItemSocket_Empty& CProtoItemSocket_Empty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_Empty* CProtoItemSocket_Empty::default_instance_ = NULL;

CProtoItemSocket_Empty* CProtoItemSocket_Empty::New() const {
  return new CProtoItemSocket_Empty;
}

void CProtoItemSocket_Empty::Clear() {
  if (has_socket()) {
    if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_Empty)
  return false;
#undef DO_
}

void CProtoItemSocket_Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_Empty)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_Empty)
}

::google::protobuf::uint8* CProtoItemSocket_Empty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_Empty)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_Empty)
  return target;
}

int CProtoItemSocket_Empty::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Empty::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_Empty* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_Empty*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Empty::MergeFrom(const CProtoItemSocket_Empty& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_Empty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Empty::CopyFrom(const CProtoItemSocket_Empty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Empty::IsInitialized() const {

  return true;
}

void CProtoItemSocket_Empty::Swap(CProtoItemSocket_Empty* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_Empty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_Empty_descriptor_;
  metadata.reflection = CProtoItemSocket_Empty_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_Effect::kSocketFieldNumber;
const int CProtoItemSocket_Effect::kEffectFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_Effect::CProtoItemSocket_Effect()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_Effect)
}

void CProtoItemSocket_Effect::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_Effect::CProtoItemSocket_Effect(const CProtoItemSocket_Effect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_Effect)
}

void CProtoItemSocket_Effect::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  effect_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_Effect::~CProtoItemSocket_Effect() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_Effect)
  SharedDtor();
}

void CProtoItemSocket_Effect::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_Effect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Effect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_Effect_descriptor_;
}

const CProtoItemSocket_Effect& CProtoItemSocket_Effect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_Effect* CProtoItemSocket_Effect::default_instance_ = NULL;

CProtoItemSocket_Effect* CProtoItemSocket_Effect::New() const {
  return new CProtoItemSocket_Effect;
}

void CProtoItemSocket_Effect::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_socket()) {
      if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
    }
    effect_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_Effect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_Effect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_effect;
        break;
      }

      // optional uint32 effect = 2;
      case 2: {
        if (tag == 16) {
         parse_effect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effect_)));
          set_has_effect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_Effect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_Effect)
  return false;
#undef DO_
}

void CProtoItemSocket_Effect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_Effect)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  // optional uint32 effect = 2;
  if (has_effect()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->effect(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_Effect)
}

::google::protobuf::uint8* CProtoItemSocket_Effect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_Effect)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  // optional uint32 effect = 2;
  if (has_effect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->effect(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_Effect)
  return target;
}

int CProtoItemSocket_Effect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

    // optional uint32 effect = 2;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->effect());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Effect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_Effect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_Effect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Effect::MergeFrom(const CProtoItemSocket_Effect& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (from.has_effect()) {
      set_effect(from.effect());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_Effect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Effect::CopyFrom(const CProtoItemSocket_Effect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Effect::IsInitialized() const {

  return true;
}

void CProtoItemSocket_Effect::Swap(CProtoItemSocket_Effect* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(effect_, other->effect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_Effect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_Effect_descriptor_;
  metadata.reflection = CProtoItemSocket_Effect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_Color::kSocketFieldNumber;
const int CProtoItemSocket_Color::kRedFieldNumber;
const int CProtoItemSocket_Color::kGreenFieldNumber;
const int CProtoItemSocket_Color::kBlueFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_Color::CProtoItemSocket_Color()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_Color)
}

void CProtoItemSocket_Color::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_Color::CProtoItemSocket_Color(const CProtoItemSocket_Color& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_Color)
}

void CProtoItemSocket_Color::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  red_ = 0u;
  green_ = 0u;
  blue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_Color::~CProtoItemSocket_Color() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_Color)
  SharedDtor();
}

void CProtoItemSocket_Color::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_Color::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Color::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_Color_descriptor_;
}

const CProtoItemSocket_Color& CProtoItemSocket_Color::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_Color* CProtoItemSocket_Color::default_instance_ = NULL;

CProtoItemSocket_Color* CProtoItemSocket_Color::New() const {
  return new CProtoItemSocket_Color;
}

void CProtoItemSocket_Color::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CProtoItemSocket_Color*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(red_, blue_);
    if (has_socket()) {
      if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_Color::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_Color)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_red;
        break;
      }

      // optional uint32 red = 2;
      case 2: {
        if (tag == 16) {
         parse_red:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
          set_has_red();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_green;
        break;
      }

      // optional uint32 green = 3;
      case 3: {
        if (tag == 24) {
         parse_green:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
          set_has_green();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_blue;
        break;
      }

      // optional uint32 blue = 4;
      case 4: {
        if (tag == 32) {
         parse_blue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
          set_has_blue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_Color)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_Color)
  return false;
#undef DO_
}

void CProtoItemSocket_Color::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_Color)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  // optional uint32 red = 2;
  if (has_red()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->red(), output);
  }

  // optional uint32 green = 3;
  if (has_green()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->green(), output);
  }

  // optional uint32 blue = 4;
  if (has_blue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->blue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_Color)
}

::google::protobuf::uint8* CProtoItemSocket_Color::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_Color)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  // optional uint32 red = 2;
  if (has_red()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->red(), target);
  }

  // optional uint32 green = 3;
  if (has_green()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->green(), target);
  }

  // optional uint32 blue = 4;
  if (has_blue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->blue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_Color)
  return target;
}

int CProtoItemSocket_Color::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

    // optional uint32 red = 2;
    if (has_red()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->red());
    }

    // optional uint32 green = 3;
    if (has_green()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->green());
    }

    // optional uint32 blue = 4;
    if (has_blue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Color::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_Color* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_Color*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Color::MergeFrom(const CProtoItemSocket_Color& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (from.has_red()) {
      set_red(from.red());
    }
    if (from.has_green()) {
      set_green(from.green());
    }
    if (from.has_blue()) {
      set_blue(from.blue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_Color::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Color::CopyFrom(const CProtoItemSocket_Color& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Color::IsInitialized() const {

  return true;
}

void CProtoItemSocket_Color::Swap(CProtoItemSocket_Color* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(red_, other->red_);
    std::swap(green_, other->green_);
    std::swap(blue_, other->blue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_Color::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_Color_descriptor_;
  metadata.reflection = CProtoItemSocket_Color_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_Strange::kSocketFieldNumber;
const int CProtoItemSocket_Strange::kStrangeTypeFieldNumber;
const int CProtoItemSocket_Strange::kStrangeValueFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_Strange::CProtoItemSocket_Strange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_Strange)
}

void CProtoItemSocket_Strange::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_Strange::CProtoItemSocket_Strange(const CProtoItemSocket_Strange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_Strange)
}

void CProtoItemSocket_Strange::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  strange_type_ = 0u;
  strange_value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_Strange::~CProtoItemSocket_Strange() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_Strange)
  SharedDtor();
}

void CProtoItemSocket_Strange::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_Strange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Strange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_Strange_descriptor_;
}

const CProtoItemSocket_Strange& CProtoItemSocket_Strange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_Strange* CProtoItemSocket_Strange::default_instance_ = NULL;

CProtoItemSocket_Strange* CProtoItemSocket_Strange::New() const {
  return new CProtoItemSocket_Strange;
}

void CProtoItemSocket_Strange::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CProtoItemSocket_Strange*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(strange_type_, strange_value_);
    if (has_socket()) {
      if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_Strange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_Strange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_strange_type;
        break;
      }

      // optional uint32 strange_type = 2;
      case 2: {
        if (tag == 16) {
         parse_strange_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strange_type_)));
          set_has_strange_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_strange_value;
        break;
      }

      // optional uint32 strange_value = 3;
      case 3: {
        if (tag == 24) {
         parse_strange_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strange_value_)));
          set_has_strange_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_Strange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_Strange)
  return false;
#undef DO_
}

void CProtoItemSocket_Strange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_Strange)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  // optional uint32 strange_type = 2;
  if (has_strange_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strange_type(), output);
  }

  // optional uint32 strange_value = 3;
  if (has_strange_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strange_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_Strange)
}

::google::protobuf::uint8* CProtoItemSocket_Strange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_Strange)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  // optional uint32 strange_type = 2;
  if (has_strange_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strange_type(), target);
  }

  // optional uint32 strange_value = 3;
  if (has_strange_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strange_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_Strange)
  return target;
}

int CProtoItemSocket_Strange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

    // optional uint32 strange_type = 2;
    if (has_strange_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strange_type());
    }

    // optional uint32 strange_value = 3;
    if (has_strange_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strange_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Strange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_Strange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_Strange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Strange::MergeFrom(const CProtoItemSocket_Strange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (from.has_strange_type()) {
      set_strange_type(from.strange_type());
    }
    if (from.has_strange_value()) {
      set_strange_value(from.strange_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_Strange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Strange::CopyFrom(const CProtoItemSocket_Strange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Strange::IsInitialized() const {

  return true;
}

void CProtoItemSocket_Strange::Swap(CProtoItemSocket_Strange* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(strange_type_, other->strange_type_);
    std::swap(strange_value_, other->strange_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_Strange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_Strange_descriptor_;
  metadata.reflection = CProtoItemSocket_Strange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_Spectator::kSocketFieldNumber;
const int CProtoItemSocket_Spectator::kGamesViewedFieldNumber;
const int CProtoItemSocket_Spectator::kCorporationIdFieldNumber;
const int CProtoItemSocket_Spectator::kLeagueIdFieldNumber;
const int CProtoItemSocket_Spectator::kTeamIdFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_Spectator::CProtoItemSocket_Spectator()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_Spectator)
}

void CProtoItemSocket_Spectator::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_Spectator::CProtoItemSocket_Spectator(const CProtoItemSocket_Spectator& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_Spectator)
}

void CProtoItemSocket_Spectator::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  games_viewed_ = 0u;
  corporation_id_ = 0u;
  league_id_ = 0u;
  team_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_Spectator::~CProtoItemSocket_Spectator() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_Spectator)
  SharedDtor();
}

void CProtoItemSocket_Spectator::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_Spectator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Spectator::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_Spectator_descriptor_;
}

const CProtoItemSocket_Spectator& CProtoItemSocket_Spectator::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_Spectator* CProtoItemSocket_Spectator::default_instance_ = NULL;

CProtoItemSocket_Spectator* CProtoItemSocket_Spectator::New() const {
  return new CProtoItemSocket_Spectator;
}

void CProtoItemSocket_Spectator::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CProtoItemSocket_Spectator*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(games_viewed_, team_id_);
    if (has_socket()) {
      if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_Spectator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_Spectator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_games_viewed;
        break;
      }

      // optional uint32 games_viewed = 2;
      case 2: {
        if (tag == 16) {
         parse_games_viewed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &games_viewed_)));
          set_has_games_viewed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_corporation_id;
        break;
      }

      // optional uint32 corporation_id = 3;
      case 3: {
        if (tag == 24) {
         parse_corporation_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &corporation_id_)));
          set_has_corporation_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_league_id;
        break;
      }

      // optional uint32 league_id = 4;
      case 4: {
        if (tag == 32) {
         parse_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_team_id;
        break;
      }

      // optional uint32 team_id = 5;
      case 5: {
        if (tag == 40) {
         parse_team_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_Spectator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_Spectator)
  return false;
#undef DO_
}

void CProtoItemSocket_Spectator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_Spectator)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  // optional uint32 games_viewed = 2;
  if (has_games_viewed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->games_viewed(), output);
  }

  // optional uint32 corporation_id = 3;
  if (has_corporation_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->corporation_id(), output);
  }

  // optional uint32 league_id = 4;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->league_id(), output);
  }

  // optional uint32 team_id = 5;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->team_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_Spectator)
}

::google::protobuf::uint8* CProtoItemSocket_Spectator::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_Spectator)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  // optional uint32 games_viewed = 2;
  if (has_games_viewed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->games_viewed(), target);
  }

  // optional uint32 corporation_id = 3;
  if (has_corporation_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->corporation_id(), target);
  }

  // optional uint32 league_id = 4;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->league_id(), target);
  }

  // optional uint32 team_id = 5;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->team_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_Spectator)
  return target;
}

int CProtoItemSocket_Spectator::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

    // optional uint32 games_viewed = 2;
    if (has_games_viewed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->games_viewed());
    }

    // optional uint32 corporation_id = 3;
    if (has_corporation_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->corporation_id());
    }

    // optional uint32 league_id = 4;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->league_id());
    }

    // optional uint32 team_id = 5;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Spectator::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_Spectator* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_Spectator*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Spectator::MergeFrom(const CProtoItemSocket_Spectator& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (from.has_games_viewed()) {
      set_games_viewed(from.games_viewed());
    }
    if (from.has_corporation_id()) {
      set_corporation_id(from.corporation_id());
    }
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_Spectator::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Spectator::CopyFrom(const CProtoItemSocket_Spectator& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Spectator::IsInitialized() const {

  return true;
}

void CProtoItemSocket_Spectator::Swap(CProtoItemSocket_Spectator* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(games_viewed_, other->games_viewed_);
    std::swap(corporation_id_, other->corporation_id_);
    std::swap(league_id_, other->league_id_);
    std::swap(team_id_, other->team_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_Spectator::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_Spectator_descriptor_;
  metadata.reflection = CProtoItemSocket_Spectator_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_AssetModifier::kSocketFieldNumber;
const int CProtoItemSocket_AssetModifier::kAssetModifierFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_AssetModifier::CProtoItemSocket_AssetModifier()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_AssetModifier)
}

void CProtoItemSocket_AssetModifier::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_AssetModifier::CProtoItemSocket_AssetModifier(const CProtoItemSocket_AssetModifier& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_AssetModifier)
}

void CProtoItemSocket_AssetModifier::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  asset_modifier_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_AssetModifier::~CProtoItemSocket_AssetModifier() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_AssetModifier)
  SharedDtor();
}

void CProtoItemSocket_AssetModifier::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_AssetModifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_AssetModifier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_AssetModifier_descriptor_;
}

const CProtoItemSocket_AssetModifier& CProtoItemSocket_AssetModifier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_AssetModifier* CProtoItemSocket_AssetModifier::default_instance_ = NULL;

CProtoItemSocket_AssetModifier* CProtoItemSocket_AssetModifier::New() const {
  return new CProtoItemSocket_AssetModifier;
}

void CProtoItemSocket_AssetModifier::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_socket()) {
      if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
    }
    asset_modifier_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_AssetModifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_AssetModifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_asset_modifier;
        break;
      }

      // optional uint32 asset_modifier = 2;
      case 2: {
        if (tag == 16) {
         parse_asset_modifier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_modifier_)));
          set_has_asset_modifier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_AssetModifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_AssetModifier)
  return false;
#undef DO_
}

void CProtoItemSocket_AssetModifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_AssetModifier)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  // optional uint32 asset_modifier = 2;
  if (has_asset_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->asset_modifier(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_AssetModifier)
}

::google::protobuf::uint8* CProtoItemSocket_AssetModifier::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_AssetModifier)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  // optional uint32 asset_modifier = 2;
  if (has_asset_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->asset_modifier(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_AssetModifier)
  return target;
}

int CProtoItemSocket_AssetModifier::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

    // optional uint32 asset_modifier = 2;
    if (has_asset_modifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_modifier());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_AssetModifier::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_AssetModifier* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_AssetModifier*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_AssetModifier::MergeFrom(const CProtoItemSocket_AssetModifier& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (from.has_asset_modifier()) {
      set_asset_modifier(from.asset_modifier());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_AssetModifier::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_AssetModifier::CopyFrom(const CProtoItemSocket_AssetModifier& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_AssetModifier::IsInitialized() const {

  return true;
}

void CProtoItemSocket_AssetModifier::Swap(CProtoItemSocket_AssetModifier* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(asset_modifier_, other->asset_modifier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_AssetModifier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_AssetModifier_descriptor_;
  metadata.reflection = CProtoItemSocket_AssetModifier_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kSocketFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAssetModifierFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAnimModifierFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAbilityEffectFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  asset_modifier_ = 0u;
  anim_modifier_ = 0u;
  ability_effect_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::~CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  SharedDtor();
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor_;
}

const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance_ = NULL;

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::New() const {
  return new CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(asset_modifier_, ability_effect_);
    if (has_socket()) {
      if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_asset_modifier;
        break;
      }

      // optional uint32 asset_modifier = 2;
      case 2: {
        if (tag == 16) {
         parse_asset_modifier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_modifier_)));
          set_has_asset_modifier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_anim_modifier;
        break;
      }

      // optional uint32 anim_modifier = 3;
      case 3: {
        if (tag == 24) {
         parse_anim_modifier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anim_modifier_)));
          set_has_anim_modifier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ability_effect;
        break;
      }

      // optional uint32 ability_effect = 4;
      case 4: {
        if (tag == 32) {
         parse_ability_effect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_effect_)));
          set_has_ability_effect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return false;
#undef DO_
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  // optional uint32 asset_modifier = 2;
  if (has_asset_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->asset_modifier(), output);
  }

  // optional uint32 anim_modifier = 3;
  if (has_anim_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->anim_modifier(), output);
  }

  // optional uint32 ability_effect = 4;
  if (has_ability_effect()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ability_effect(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}

::google::protobuf::uint8* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  // optional uint32 asset_modifier = 2;
  if (has_asset_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->asset_modifier(), target);
  }

  // optional uint32 anim_modifier = 3;
  if (has_anim_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->anim_modifier(), target);
  }

  // optional uint32 ability_effect = 4;
  if (has_ability_effect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ability_effect(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return target;
}

int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

    // optional uint32 asset_modifier = 2;
    if (has_asset_modifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_modifier());
    }

    // optional uint32 anim_modifier = 3;
    if (has_anim_modifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->anim_modifier());
    }

    // optional uint32 ability_effect = 4;
    if (has_ability_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_effect());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergeFrom(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (from.has_asset_modifier()) {
      set_asset_modifier(from.asset_modifier());
    }
    if (from.has_anim_modifier()) {
      set_anim_modifier(from.anim_modifier());
    }
    if (from.has_ability_effect()) {
      set_ability_effect(from.ability_effect());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CopyFrom(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::IsInitialized() const {

  return true;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::Swap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(asset_modifier_, other->asset_modifier_);
    std::swap(anim_modifier_, other->anim_modifier_);
    std::swap(ability_effect_, other->ability_effect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor_;
  metadata.reflection = CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_Autograph::kSocketFieldNumber;
const int CProtoItemSocket_Autograph::kAutographFieldNumber;
const int CProtoItemSocket_Autograph::kAutographIdFieldNumber;
const int CProtoItemSocket_Autograph::kAutographScoreFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_Autograph::CProtoItemSocket_Autograph()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_Autograph)
}

void CProtoItemSocket_Autograph::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_Autograph::CProtoItemSocket_Autograph(const CProtoItemSocket_Autograph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_Autograph)
}

void CProtoItemSocket_Autograph::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  socket_ = NULL;
  autograph_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autograph_id_ = 0u;
  autograph_score_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_Autograph::~CProtoItemSocket_Autograph() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_Autograph)
  SharedDtor();
}

void CProtoItemSocket_Autograph::SharedDtor() {
  if (autograph_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete autograph_;
  }
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_Autograph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Autograph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_Autograph_descriptor_;
}

const CProtoItemSocket_Autograph& CProtoItemSocket_Autograph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_Autograph* CProtoItemSocket_Autograph::default_instance_ = NULL;

CProtoItemSocket_Autograph* CProtoItemSocket_Autograph::New() const {
  return new CProtoItemSocket_Autograph;
}

void CProtoItemSocket_Autograph::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CProtoItemSocket_Autograph*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(autograph_id_, autograph_score_);
    if (has_socket()) {
      if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
    }
    if (has_autograph()) {
      if (autograph_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        autograph_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_Autograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_Autograph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_autograph;
        break;
      }

      // optional string autograph = 2;
      case 2: {
        if (tag == 18) {
         parse_autograph:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_autograph()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->autograph().data(), this->autograph().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "autograph");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_autograph_id;
        break;
      }

      // optional uint32 autograph_id = 3;
      case 3: {
        if (tag == 24) {
         parse_autograph_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autograph_id_)));
          set_has_autograph_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_autograph_score;
        break;
      }

      // optional uint32 autograph_score = 4;
      case 4: {
        if (tag == 32) {
         parse_autograph_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autograph_score_)));
          set_has_autograph_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_Autograph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_Autograph)
  return false;
#undef DO_
}

void CProtoItemSocket_Autograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_Autograph)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  // optional string autograph = 2;
  if (has_autograph()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->autograph().data(), this->autograph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autograph");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->autograph(), output);
  }

  // optional uint32 autograph_id = 3;
  if (has_autograph_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->autograph_id(), output);
  }

  // optional uint32 autograph_score = 4;
  if (has_autograph_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->autograph_score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_Autograph)
}

::google::protobuf::uint8* CProtoItemSocket_Autograph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_Autograph)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  // optional string autograph = 2;
  if (has_autograph()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->autograph().data(), this->autograph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autograph");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->autograph(), target);
  }

  // optional uint32 autograph_id = 3;
  if (has_autograph_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->autograph_id(), target);
  }

  // optional uint32 autograph_score = 4;
  if (has_autograph_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->autograph_score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_Autograph)
  return target;
}

int CProtoItemSocket_Autograph::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

    // optional string autograph = 2;
    if (has_autograph()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->autograph());
    }

    // optional uint32 autograph_id = 3;
    if (has_autograph_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->autograph_id());
    }

    // optional uint32 autograph_score = 4;
    if (has_autograph_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->autograph_score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Autograph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_Autograph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_Autograph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Autograph::MergeFrom(const CProtoItemSocket_Autograph& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (from.has_autograph()) {
      set_autograph(from.autograph());
    }
    if (from.has_autograph_id()) {
      set_autograph_id(from.autograph_id());
    }
    if (from.has_autograph_score()) {
      set_autograph_score(from.autograph_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_Autograph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Autograph::CopyFrom(const CProtoItemSocket_Autograph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Autograph::IsInitialized() const {

  return true;
}

void CProtoItemSocket_Autograph::Swap(CProtoItemSocket_Autograph* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(autograph_, other->autograph_);
    std::swap(autograph_id_, other->autograph_id_);
    std::swap(autograph_score_, other->autograph_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_Autograph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_Autograph_descriptor_;
  metadata.reflection = CProtoItemSocket_Autograph_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CProtoItemSocket_StaticVisuals::kSocketFieldNumber;
#endif  // !_MSC_VER

CProtoItemSocket_StaticVisuals::CProtoItemSocket_StaticVisuals()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProtoItemSocket_StaticVisuals)
}

void CProtoItemSocket_StaticVisuals::InitAsDefaultInstance() {
  socket_ = const_cast< ::CProtoItemSocket*>(&::CProtoItemSocket::default_instance());
}

CProtoItemSocket_StaticVisuals::CProtoItemSocket_StaticVisuals(const CProtoItemSocket_StaticVisuals& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProtoItemSocket_StaticVisuals)
}

void CProtoItemSocket_StaticVisuals::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProtoItemSocket_StaticVisuals::~CProtoItemSocket_StaticVisuals() {
  // @@protoc_insertion_point(destructor:CProtoItemSocket_StaticVisuals)
  SharedDtor();
}

void CProtoItemSocket_StaticVisuals::SharedDtor() {
  if (this != default_instance_) {
    delete socket_;
  }
}

void CProtoItemSocket_StaticVisuals::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_StaticVisuals::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProtoItemSocket_StaticVisuals_descriptor_;
}

const CProtoItemSocket_StaticVisuals& CProtoItemSocket_StaticVisuals::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CProtoItemSocket_StaticVisuals* CProtoItemSocket_StaticVisuals::default_instance_ = NULL;

CProtoItemSocket_StaticVisuals* CProtoItemSocket_StaticVisuals::New() const {
  return new CProtoItemSocket_StaticVisuals;
}

void CProtoItemSocket_StaticVisuals::Clear() {
  if (has_socket()) {
    if (socket_ != NULL) socket_->::CProtoItemSocket::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CProtoItemSocket_StaticVisuals::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProtoItemSocket_StaticVisuals)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CProtoItemSocket socket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProtoItemSocket_StaticVisuals)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProtoItemSocket_StaticVisuals)
  return false;
#undef DO_
}

void CProtoItemSocket_StaticVisuals::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProtoItemSocket_StaticVisuals)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->socket(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProtoItemSocket_StaticVisuals)
}

::google::protobuf::uint8* CProtoItemSocket_StaticVisuals::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProtoItemSocket_StaticVisuals)
  // optional .CProtoItemSocket socket = 1;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->socket(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProtoItemSocket_StaticVisuals)
  return target;
}

int CProtoItemSocket_StaticVisuals::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socket());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_StaticVisuals::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CProtoItemSocket_StaticVisuals* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CProtoItemSocket_StaticVisuals*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProtoItemSocket_StaticVisuals::MergeFrom(const CProtoItemSocket_StaticVisuals& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_socket()) {
      mutable_socket()->::CProtoItemSocket::MergeFrom(from.socket());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CProtoItemSocket_StaticVisuals::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_StaticVisuals::CopyFrom(const CProtoItemSocket_StaticVisuals& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_StaticVisuals::IsInitialized() const {

  return true;
}

void CProtoItemSocket_StaticVisuals::Swap(CProtoItemSocket_StaticVisuals* other) {
  if (other != this) {
    std::swap(socket_, other->socket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CProtoItemSocket_StaticVisuals::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProtoItemSocket_StaticVisuals_descriptor_;
  metadata.reflection = CProtoItemSocket_StaticVisuals_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CAttribute_String::kValueFieldNumber;
#endif  // !_MSC_VER

CAttribute_String::CAttribute_String()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CAttribute_String)
}

void CAttribute_String::InitAsDefaultInstance() {
}

CAttribute_String::CAttribute_String(const CAttribute_String& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CAttribute_String)
}

void CAttribute_String::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CAttribute_String::~CAttribute_String() {
  // @@protoc_insertion_point(destructor:CAttribute_String)
  SharedDtor();
}

void CAttribute_String::SharedDtor() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void CAttribute_String::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAttribute_String::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CAttribute_String_descriptor_;
}

const CAttribute_String& CAttribute_String::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CAttribute_String* CAttribute_String::default_instance_ = NULL;

CAttribute_String* CAttribute_String::New() const {
  return new CAttribute_String;
}

void CAttribute_String::Clear() {
  if (has_value()) {
    if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      value_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CAttribute_String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CAttribute_String)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CAttribute_String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CAttribute_String)
  return false;
#undef DO_
}

void CAttribute_String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CAttribute_String)
  // optional string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CAttribute_String)
}

::google::protobuf::uint8* CAttribute_String::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CAttribute_String)
  // optional string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CAttribute_String)
  return target;
}

int CAttribute_String::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAttribute_String::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CAttribute_String* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CAttribute_String*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CAttribute_String::MergeFrom(const CAttribute_String& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CAttribute_String::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAttribute_String::CopyFrom(const CAttribute_String& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAttribute_String::IsInitialized() const {

  return true;
}

void CAttribute_String::Swap(CAttribute_String* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CAttribute_String::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CAttribute_String_descriptor_;
  metadata.reflection = CAttribute_String_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CWorkshop_GetItemDailyRevenue_Request::kAppidFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kItemIdFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kDateStartFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kDateEndFieldNumber;
#endif  // !_MSC_VER

CWorkshop_GetItemDailyRevenue_Request::CWorkshop_GetItemDailyRevenue_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_GetItemDailyRevenue_Request)
}

void CWorkshop_GetItemDailyRevenue_Request::InitAsDefaultInstance() {
}

CWorkshop_GetItemDailyRevenue_Request::CWorkshop_GetItemDailyRevenue_Request(const CWorkshop_GetItemDailyRevenue_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_GetItemDailyRevenue_Request)
}

void CWorkshop_GetItemDailyRevenue_Request::SharedCtor() {
  _cached_size_ = 0;
  appid_ = 0u;
  item_id_ = 0u;
  date_start_ = 0u;
  date_end_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CWorkshop_GetItemDailyRevenue_Request::~CWorkshop_GetItemDailyRevenue_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_GetItemDailyRevenue_Request)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CWorkshop_GetItemDailyRevenue_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CWorkshop_GetItemDailyRevenue_Request_descriptor_;
}

const CWorkshop_GetItemDailyRevenue_Request& CWorkshop_GetItemDailyRevenue_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CWorkshop_GetItemDailyRevenue_Request* CWorkshop_GetItemDailyRevenue_Request::default_instance_ = NULL;

CWorkshop_GetItemDailyRevenue_Request* CWorkshop_GetItemDailyRevenue_Request::New() const {
  return new CWorkshop_GetItemDailyRevenue_Request;
}

void CWorkshop_GetItemDailyRevenue_Request::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CWorkshop_GetItemDailyRevenue_Request*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(appid_, date_end_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CWorkshop_GetItemDailyRevenue_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_GetItemDailyRevenue_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint32 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_date_start;
        break;
      }

      // optional uint32 date_start = 3;
      case 3: {
        if (tag == 24) {
         parse_date_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_start_)));
          set_has_date_start();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_date_end;
        break;
      }

      // optional uint32 date_end = 4;
      case 4: {
        if (tag == 32) {
         parse_date_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_end_)));
          set_has_date_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_GetItemDailyRevenue_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_GetItemDailyRevenue_Request)
  return false;
#undef DO_
}

void CWorkshop_GetItemDailyRevenue_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_GetItemDailyRevenue_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_id(), output);
  }

  // optional uint32 date_start = 3;
  if (has_date_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->date_start(), output);
  }

  // optional uint32 date_end = 4;
  if (has_date_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->date_end(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_GetItemDailyRevenue_Request)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_GetItemDailyRevenue_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_id(), target);
  }

  // optional uint32 date_start = 3;
  if (has_date_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->date_start(), target);
  }

  // optional uint32 date_end = 4;
  if (has_date_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->date_end(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_GetItemDailyRevenue_Request)
  return target;
}

int CWorkshop_GetItemDailyRevenue_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_id());
    }

    // optional uint32 date_start = 3;
    if (has_date_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_start());
    }

    // optional uint32 date_end = 4;
    if (has_date_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_end());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CWorkshop_GetItemDailyRevenue_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Request::MergeFrom(const CWorkshop_GetItemDailyRevenue_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_date_start()) {
      set_date_start(from.date_start());
    }
    if (from.has_date_end()) {
      set_date_end(from.date_end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CWorkshop_GetItemDailyRevenue_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Request::CopyFrom(const CWorkshop_GetItemDailyRevenue_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Request::IsInitialized() const {

  return true;
}

void CWorkshop_GetItemDailyRevenue_Request::Swap(CWorkshop_GetItemDailyRevenue_Request* other) {
  if (other != this) {
    std::swap(appid_, other->appid_);
    std::swap(item_id_, other->item_id_);
    std::swap(date_start_, other->date_start_);
    std::swap(date_end_, other->date_end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CWorkshop_GetItemDailyRevenue_Request_descriptor_;
  metadata.reflection = CWorkshop_GetItemDailyRevenue_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kCountryCodeFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kDateFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kRevenueUsdFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kUnitsFieldNumber;
#endif  // !_MSC_VER

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::InitAsDefaultInstance() {
}

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_ = 0u;
  revenue_usd_ = GOOGLE_LONGLONG(0);
  units_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::~CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue() {
  // @@protoc_insertion_point(destructor:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SharedDtor() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (this != default_instance_) {
  }
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_descriptor_;
}

const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance_ = NULL;

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::New() const {
  return new CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(revenue_usd_, units_);
    if (has_country_code()) {
      if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        country_code_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string country_code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), this->country_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "country_code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_date;
        break;
      }

      // optional uint32 date = 2;
      case 2: {
        if (tag == 16) {
         parse_date:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_)));
          set_has_date();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_revenue_usd;
        break;
      }

      // optional int64 revenue_usd = 3;
      case 3: {
        if (tag == 24) {
         parse_revenue_usd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revenue_usd_)));
          set_has_revenue_usd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_units;
        break;
      }

      // optional int32 units = 4;
      case 4: {
        if (tag == 32) {
         parse_units:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
          set_has_units();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return false;
#undef DO_
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  // optional string country_code = 1;
  if (has_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->country_code(), output);
  }

  // optional uint32 date = 2;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->date(), output);
  }

  // optional int64 revenue_usd = 3;
  if (has_revenue_usd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->revenue_usd(), output);
  }

  // optional int32 units = 4;
  if (has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->units(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  // optional string country_code = 1;
  if (has_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country_code(), target);
  }

  // optional uint32 date = 2;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->date(), target);
  }

  // optional int64 revenue_usd = 3;
  if (has_revenue_usd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->revenue_usd(), target);
  }

  // optional int32 units = 4;
  if (has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->units(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return target;
}

int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string country_code = 1;
    if (has_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional uint32 date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date());
    }

    // optional int64 revenue_usd = 3;
    if (has_revenue_usd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->revenue_usd());
    }

    // optional int32 units = 4;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_country_code()) {
      set_country_code(from.country_code());
    }
    if (from.has_date()) {
      set_date(from.date());
    }
    if (from.has_revenue_usd()) {
      set_revenue_usd(from.revenue_usd());
    }
    if (from.has_units()) {
      set_units(from.units());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::IsInitialized() const {

  return true;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::Swap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other) {
  if (other != this) {
    std::swap(country_code_, other->country_code_);
    std::swap(date_, other->date_);
    std::swap(revenue_usd_, other->revenue_usd_);
    std::swap(units_, other->units_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_descriptor_;
  metadata.reflection = CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CWorkshop_GetItemDailyRevenue_Response::kCountryRevenueFieldNumber;
#endif  // !_MSC_VER

CWorkshop_GetItemDailyRevenue_Response::CWorkshop_GetItemDailyRevenue_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_GetItemDailyRevenue_Response)
}

void CWorkshop_GetItemDailyRevenue_Response::InitAsDefaultInstance() {
}

CWorkshop_GetItemDailyRevenue_Response::CWorkshop_GetItemDailyRevenue_Response(const CWorkshop_GetItemDailyRevenue_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_GetItemDailyRevenue_Response)
}

void CWorkshop_GetItemDailyRevenue_Response::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CWorkshop_GetItemDailyRevenue_Response::~CWorkshop_GetItemDailyRevenue_Response() {
  // @@protoc_insertion_point(destructor:CWorkshop_GetItemDailyRevenue_Response)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CWorkshop_GetItemDailyRevenue_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CWorkshop_GetItemDailyRevenue_Response_descriptor_;
}

const CWorkshop_GetItemDailyRevenue_Response& CWorkshop_GetItemDailyRevenue_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CWorkshop_GetItemDailyRevenue_Response* CWorkshop_GetItemDailyRevenue_Response::default_instance_ = NULL;

CWorkshop_GetItemDailyRevenue_Response* CWorkshop_GetItemDailyRevenue_Response::New() const {
  return new CWorkshop_GetItemDailyRevenue_Response;
}

void CWorkshop_GetItemDailyRevenue_Response::Clear() {
  country_revenue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CWorkshop_GetItemDailyRevenue_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_GetItemDailyRevenue_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
      case 1: {
        if (tag == 10) {
         parse_country_revenue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_country_revenue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_country_revenue;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_GetItemDailyRevenue_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_GetItemDailyRevenue_Response)
  return false;
#undef DO_
}

void CWorkshop_GetItemDailyRevenue_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_GetItemDailyRevenue_Response)
  // repeated .CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (int i = 0; i < this->country_revenue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->country_revenue(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_GetItemDailyRevenue_Response)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_GetItemDailyRevenue_Response)
  // repeated .CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (int i = 0; i < this->country_revenue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->country_revenue(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_GetItemDailyRevenue_Response)
  return target;
}

int CWorkshop_GetItemDailyRevenue_Response::ByteSize() const {
  int total_size = 0;

  // repeated .CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  total_size += 1 * this->country_revenue_size();
  for (int i = 0; i < this->country_revenue_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->country_revenue(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CWorkshop_GetItemDailyRevenue_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Response::MergeFrom(const CWorkshop_GetItemDailyRevenue_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  country_revenue_.MergeFrom(from.country_revenue_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CWorkshop_GetItemDailyRevenue_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Response::CopyFrom(const CWorkshop_GetItemDailyRevenue_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Response::IsInitialized() const {

  return true;
}

void CWorkshop_GetItemDailyRevenue_Response::Swap(CWorkshop_GetItemDailyRevenue_Response* other) {
  if (other != this) {
    country_revenue_.Swap(&other->country_revenue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CWorkshop_GetItemDailyRevenue_Response_descriptor_;
  metadata.reflection = CWorkshop_GetItemDailyRevenue_Response_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSQLGCToGCGrantBackpackSlots::kAccountIdFieldNumber;
const int CMsgSQLGCToGCGrantBackpackSlots::kAddSlotsFieldNumber;
#endif  // !_MSC_VER

CMsgSQLGCToGCGrantBackpackSlots::CMsgSQLGCToGCGrantBackpackSlots()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSQLGCToGCGrantBackpackSlots)
}

void CMsgSQLGCToGCGrantBackpackSlots::InitAsDefaultInstance() {
}

CMsgSQLGCToGCGrantBackpackSlots::CMsgSQLGCToGCGrantBackpackSlots(const CMsgSQLGCToGCGrantBackpackSlots& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSQLGCToGCGrantBackpackSlots)
}

void CMsgSQLGCToGCGrantBackpackSlots::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  add_slots_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSQLGCToGCGrantBackpackSlots::~CMsgSQLGCToGCGrantBackpackSlots() {
  // @@protoc_insertion_point(destructor:CMsgSQLGCToGCGrantBackpackSlots)
  SharedDtor();
}

void CMsgSQLGCToGCGrantBackpackSlots::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSQLGCToGCGrantBackpackSlots::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLGCToGCGrantBackpackSlots::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSQLGCToGCGrantBackpackSlots_descriptor_;
}

const CMsgSQLGCToGCGrantBackpackSlots& CMsgSQLGCToGCGrantBackpackSlots::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgSQLGCToGCGrantBackpackSlots* CMsgSQLGCToGCGrantBackpackSlots::default_instance_ = NULL;

CMsgSQLGCToGCGrantBackpackSlots* CMsgSQLGCToGCGrantBackpackSlots::New() const {
  return new CMsgSQLGCToGCGrantBackpackSlots;
}

void CMsgSQLGCToGCGrantBackpackSlots::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSQLGCToGCGrantBackpackSlots*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(account_id_, add_slots_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSQLGCToGCGrantBackpackSlots::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSQLGCToGCGrantBackpackSlots)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_add_slots;
        break;
      }

      // optional uint32 add_slots = 2;
      case 2: {
        if (tag == 16) {
         parse_add_slots:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_slots_)));
          set_has_add_slots();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSQLGCToGCGrantBackpackSlots)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSQLGCToGCGrantBackpackSlots)
  return false;
#undef DO_
}

void CMsgSQLGCToGCGrantBackpackSlots::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSQLGCToGCGrantBackpackSlots)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 add_slots = 2;
  if (has_add_slots()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->add_slots(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSQLGCToGCGrantBackpackSlots)
}

::google::protobuf::uint8* CMsgSQLGCToGCGrantBackpackSlots::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSQLGCToGCGrantBackpackSlots)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 add_slots = 2;
  if (has_add_slots()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->add_slots(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSQLGCToGCGrantBackpackSlots)
  return target;
}

int CMsgSQLGCToGCGrantBackpackSlots::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 add_slots = 2;
    if (has_add_slots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->add_slots());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLGCToGCGrantBackpackSlots::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSQLGCToGCGrantBackpackSlots* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSQLGCToGCGrantBackpackSlots*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSQLGCToGCGrantBackpackSlots::MergeFrom(const CMsgSQLGCToGCGrantBackpackSlots& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_add_slots()) {
      set_add_slots(from.add_slots());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSQLGCToGCGrantBackpackSlots::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLGCToGCGrantBackpackSlots::CopyFrom(const CMsgSQLGCToGCGrantBackpackSlots& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLGCToGCGrantBackpackSlots::IsInitialized() const {

  return true;
}

void CMsgSQLGCToGCGrantBackpackSlots::Swap(CMsgSQLGCToGCGrantBackpackSlots* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(add_slots_, other->add_slots_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSQLGCToGCGrantBackpackSlots::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSQLGCToGCGrantBackpackSlots_descriptor_;
  metadata.reflection = CMsgSQLGCToGCGrantBackpackSlots_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCLookupAccountName::kAccountIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCLookupAccountName::CMsgClientToGCLookupAccountName()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCLookupAccountName)
}

void CMsgClientToGCLookupAccountName::InitAsDefaultInstance() {
}

CMsgClientToGCLookupAccountName::CMsgClientToGCLookupAccountName(const CMsgClientToGCLookupAccountName& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLookupAccountName)
}

void CMsgClientToGCLookupAccountName::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCLookupAccountName::~CMsgClientToGCLookupAccountName() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLookupAccountName)
  SharedDtor();
}

void CMsgClientToGCLookupAccountName::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCLookupAccountName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCLookupAccountName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCLookupAccountName_descriptor_;
}

const CMsgClientToGCLookupAccountName& CMsgClientToGCLookupAccountName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCLookupAccountName* CMsgClientToGCLookupAccountName::default_instance_ = NULL;

CMsgClientToGCLookupAccountName* CMsgClientToGCLookupAccountName::New() const {
  return new CMsgClientToGCLookupAccountName;
}

void CMsgClientToGCLookupAccountName::Clear() {
  account_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCLookupAccountName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCLookupAccountName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCLookupAccountName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCLookupAccountName)
  return false;
#undef DO_
}

void CMsgClientToGCLookupAccountName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCLookupAccountName)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCLookupAccountName)
}

::google::protobuf::uint8* CMsgClientToGCLookupAccountName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLookupAccountName)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLookupAccountName)
  return target;
}

int CMsgClientToGCLookupAccountName::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCLookupAccountName::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCLookupAccountName* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCLookupAccountName*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCLookupAccountName::MergeFrom(const CMsgClientToGCLookupAccountName& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCLookupAccountName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLookupAccountName::CopyFrom(const CMsgClientToGCLookupAccountName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLookupAccountName::IsInitialized() const {

  return true;
}

void CMsgClientToGCLookupAccountName::Swap(CMsgClientToGCLookupAccountName* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCLookupAccountName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCLookupAccountName_descriptor_;
  metadata.reflection = CMsgClientToGCLookupAccountName_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCLookupAccountNameResponse::kAccountIdFieldNumber;
const int CMsgClientToGCLookupAccountNameResponse::kAccountNameFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCLookupAccountNameResponse::CMsgClientToGCLookupAccountNameResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCLookupAccountNameResponse)
}

void CMsgClientToGCLookupAccountNameResponse::InitAsDefaultInstance() {
}

CMsgClientToGCLookupAccountNameResponse::CMsgClientToGCLookupAccountNameResponse(const CMsgClientToGCLookupAccountNameResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLookupAccountNameResponse)
}

void CMsgClientToGCLookupAccountNameResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_id_ = 0u;
  account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCLookupAccountNameResponse::~CMsgClientToGCLookupAccountNameResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLookupAccountNameResponse)
  SharedDtor();
}

void CMsgClientToGCLookupAccountNameResponse::SharedDtor() {
  if (account_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgClientToGCLookupAccountNameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCLookupAccountNameResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCLookupAccountNameResponse_descriptor_;
}

const CMsgClientToGCLookupAccountNameResponse& CMsgClientToGCLookupAccountNameResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCLookupAccountNameResponse* CMsgClientToGCLookupAccountNameResponse::default_instance_ = NULL;

CMsgClientToGCLookupAccountNameResponse* CMsgClientToGCLookupAccountNameResponse::New() const {
  return new CMsgClientToGCLookupAccountNameResponse;
}

void CMsgClientToGCLookupAccountNameResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    account_id_ = 0u;
    if (has_account_name()) {
      if (account_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        account_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCLookupAccountNameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCLookupAccountNameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account_name;
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (tag == 18) {
         parse_account_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCLookupAccountNameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCLookupAccountNameResponse)
  return false;
#undef DO_
}

void CMsgClientToGCLookupAccountNameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCLookupAccountNameResponse)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional string account_name = 2;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCLookupAccountNameResponse)
}

::google::protobuf::uint8* CMsgClientToGCLookupAccountNameResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLookupAccountNameResponse)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional string account_name = 2;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLookupAccountNameResponse)
  return target;
}

int CMsgClientToGCLookupAccountNameResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional string account_name = 2;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCLookupAccountNameResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCLookupAccountNameResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCLookupAccountNameResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCLookupAccountNameResponse::MergeFrom(const CMsgClientToGCLookupAccountNameResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_account_name()) {
      set_account_name(from.account_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCLookupAccountNameResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLookupAccountNameResponse::CopyFrom(const CMsgClientToGCLookupAccountNameResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLookupAccountNameResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCLookupAccountNameResponse::Swap(CMsgClientToGCLookupAccountNameResponse* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(account_name_, other->account_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCLookupAccountNameResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCLookupAccountNameResponse_descriptor_;
  metadata.reflection = CMsgClientToGCLookupAccountNameResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCDevRevokeUserItems::kAccountIdFieldNumber;
const int CMsgGCToGCDevRevokeUserItems::kAuditDataFieldNumber;
const int CMsgGCToGCDevRevokeUserItems::kDeleteAuditHistoryFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCDevRevokeUserItems::CMsgGCToGCDevRevokeUserItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCDevRevokeUserItems)
}

void CMsgGCToGCDevRevokeUserItems::InitAsDefaultInstance() {
}

CMsgGCToGCDevRevokeUserItems::CMsgGCToGCDevRevokeUserItems(const CMsgGCToGCDevRevokeUserItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCDevRevokeUserItems)
}

void CMsgGCToGCDevRevokeUserItems::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
  audit_data_ = GOOGLE_ULONGLONG(0);
  delete_audit_history_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCDevRevokeUserItems::~CMsgGCToGCDevRevokeUserItems() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCDevRevokeUserItems)
  SharedDtor();
}

void CMsgGCToGCDevRevokeUserItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCDevRevokeUserItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCDevRevokeUserItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCDevRevokeUserItems_descriptor_;
}

const CMsgGCToGCDevRevokeUserItems& CMsgGCToGCDevRevokeUserItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCDevRevokeUserItems* CMsgGCToGCDevRevokeUserItems::default_instance_ = NULL;

CMsgGCToGCDevRevokeUserItems* CMsgGCToGCDevRevokeUserItems::New() const {
  return new CMsgGCToGCDevRevokeUserItems;
}

void CMsgGCToGCDevRevokeUserItems::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCDevRevokeUserItems*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(audit_data_, delete_audit_history_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCDevRevokeUserItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCDevRevokeUserItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_audit_data;
        break;
      }

      // optional uint64 audit_data = 2;
      case 2: {
        if (tag == 16) {
         parse_audit_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &audit_data_)));
          set_has_audit_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_delete_audit_history;
        break;
      }

      // optional bool delete_audit_history = 3;
      case 3: {
        if (tag == 24) {
         parse_delete_audit_history:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_audit_history_)));
          set_has_delete_audit_history();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCDevRevokeUserItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCDevRevokeUserItems)
  return false;
#undef DO_
}

void CMsgGCToGCDevRevokeUserItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCDevRevokeUserItems)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 audit_data = 2;
  if (has_audit_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->audit_data(), output);
  }

  // optional bool delete_audit_history = 3;
  if (has_delete_audit_history()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->delete_audit_history(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCDevRevokeUserItems)
}

::google::protobuf::uint8* CMsgGCToGCDevRevokeUserItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCDevRevokeUserItems)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 audit_data = 2;
  if (has_audit_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->audit_data(), target);
  }

  // optional bool delete_audit_history = 3;
  if (has_delete_audit_history()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->delete_audit_history(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCDevRevokeUserItems)
  return target;
}

int CMsgGCToGCDevRevokeUserItems::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint64 audit_data = 2;
    if (has_audit_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->audit_data());
    }

    // optional bool delete_audit_history = 3;
    if (has_delete_audit_history()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCDevRevokeUserItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCDevRevokeUserItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCDevRevokeUserItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCDevRevokeUserItems::MergeFrom(const CMsgGCToGCDevRevokeUserItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_audit_data()) {
      set_audit_data(from.audit_data());
    }
    if (from.has_delete_audit_history()) {
      set_delete_audit_history(from.delete_audit_history());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCDevRevokeUserItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCDevRevokeUserItems::CopyFrom(const CMsgGCToGCDevRevokeUserItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCDevRevokeUserItems::IsInitialized() const {

  return true;
}

void CMsgGCToGCDevRevokeUserItems::Swap(CMsgGCToGCDevRevokeUserItems* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(audit_data_, other->audit_data_);
    std::swap(delete_audit_history_, other->delete_audit_history_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCDevRevokeUserItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCDevRevokeUserItems_descriptor_;
  metadata.reflection = CMsgGCToGCDevRevokeUserItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClientToGCCreateStaticRecipe_Item::kItemIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipe_Item::kSlotIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCCreateStaticRecipe_Item::CMsgClientToGCCreateStaticRecipe_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCCreateStaticRecipe.Item)
}

void CMsgClientToGCCreateStaticRecipe_Item::InitAsDefaultInstance() {
}

CMsgClientToGCCreateStaticRecipe_Item::CMsgClientToGCCreateStaticRecipe_Item(const CMsgClientToGCCreateStaticRecipe_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateStaticRecipe.Item)
}

void CMsgClientToGCCreateStaticRecipe_Item::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  slot_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCCreateStaticRecipe_Item::~CMsgClientToGCCreateStaticRecipe_Item() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateStaticRecipe.Item)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipe_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCCreateStaticRecipe_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipe_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCCreateStaticRecipe_Item_descriptor_;
}

const CMsgClientToGCCreateStaticRecipe_Item& CMsgClientToGCCreateStaticRecipe_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe_Item::default_instance_ = NULL;

CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe_Item::New() const {
  return new CMsgClientToGCCreateStaticRecipe_Item;
}

void CMsgClientToGCCreateStaticRecipe_Item::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCCreateStaticRecipe_Item*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, slot_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCCreateStaticRecipe_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCCreateStaticRecipe.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_slot_id;
        break;
      }

      // optional uint32 slot_id = 2;
      case 2: {
        if (tag == 16) {
         parse_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCCreateStaticRecipe.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCCreateStaticRecipe.Item)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipe_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCCreateStaticRecipe.Item)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 slot_id = 2;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->slot_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCCreateStaticRecipe.Item)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipe_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateStaticRecipe.Item)
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 slot_id = 2;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->slot_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateStaticRecipe.Item)
  return target;
}

int CMsgClientToGCCreateStaticRecipe_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 slot_id = 2;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipe_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipe_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCCreateStaticRecipe_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipe_Item::MergeFrom(const CMsgClientToGCCreateStaticRecipe_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCCreateStaticRecipe_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipe_Item::CopyFrom(const CMsgClientToGCCreateStaticRecipe_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipe_Item::IsInitialized() const {

  return true;
}

void CMsgClientToGCCreateStaticRecipe_Item::Swap(CMsgClientToGCCreateStaticRecipe_Item* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(slot_id_, other->slot_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipe_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCCreateStaticRecipe_Item_descriptor_;
  metadata.reflection = CMsgClientToGCCreateStaticRecipe_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgClientToGCCreateStaticRecipe::kItemsFieldNumber;
const int CMsgClientToGCCreateStaticRecipe::kRecipeDefIndexFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCCreateStaticRecipe::CMsgClientToGCCreateStaticRecipe()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCCreateStaticRecipe)
}

void CMsgClientToGCCreateStaticRecipe::InitAsDefaultInstance() {
}

CMsgClientToGCCreateStaticRecipe::CMsgClientToGCCreateStaticRecipe(const CMsgClientToGCCreateStaticRecipe& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateStaticRecipe)
}

void CMsgClientToGCCreateStaticRecipe::SharedCtor() {
  _cached_size_ = 0;
  recipe_def_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCCreateStaticRecipe::~CMsgClientToGCCreateStaticRecipe() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateStaticRecipe)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipe::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCCreateStaticRecipe::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipe::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCCreateStaticRecipe_descriptor_;
}

const CMsgClientToGCCreateStaticRecipe& CMsgClientToGCCreateStaticRecipe::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCCreateStaticRecipe* CMsgClientToGCCreateStaticRecipe::default_instance_ = NULL;

CMsgClientToGCCreateStaticRecipe* CMsgClientToGCCreateStaticRecipe::New() const {
  return new CMsgClientToGCCreateStaticRecipe;
}

void CMsgClientToGCCreateStaticRecipe::Clear() {
  recipe_def_index_ = 0u;
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCCreateStaticRecipe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCCreateStaticRecipe)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
      case 1: {
        if (tag == 10) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectTag(16)) goto parse_recipe_def_index;
        break;
      }

      // optional uint32 recipe_def_index = 2;
      case 2: {
        if (tag == 16) {
         parse_recipe_def_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_def_index_)));
          set_has_recipe_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCCreateStaticRecipe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCCreateStaticRecipe)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCCreateStaticRecipe)
  // repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // optional uint32 recipe_def_index = 2;
  if (has_recipe_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recipe_def_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCCreateStaticRecipe)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipe::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateStaticRecipe)
  // repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // optional uint32 recipe_def_index = 2;
  if (has_recipe_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recipe_def_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateStaticRecipe)
  return target;
}

int CMsgClientToGCCreateStaticRecipe::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 recipe_def_index = 2;
    if (has_recipe_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recipe_def_index());
    }

  }
  // repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipe::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipe* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCCreateStaticRecipe*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipe::MergeFrom(const CMsgClientToGCCreateStaticRecipe& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_recipe_def_index()) {
      set_recipe_def_index(from.recipe_def_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCCreateStaticRecipe::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipe::CopyFrom(const CMsgClientToGCCreateStaticRecipe& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipe::IsInitialized() const {

  return true;
}

void CMsgClientToGCCreateStaticRecipe::Swap(CMsgClientToGCCreateStaticRecipe* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(recipe_def_index_, other->recipe_def_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipe::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCCreateStaticRecipe_descriptor_;
  metadata.reflection = CMsgClientToGCCreateStaticRecipe_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor_;
}
bool CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_Success;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_OfferingDisabled;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_InvalidItems;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_InternalError;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_MissingLeague;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::EResponse_MIN;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::EResponse_MAX;
const int CMsgClientToGCCreateStaticRecipeResponse::EResponse_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kDefIndexFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kItemIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kSlotIdFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CMsgClientToGCCreateStaticRecipeResponse_OutputItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::InitAsDefaultInstance() {
}

CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CMsgClientToGCCreateStaticRecipeResponse_OutputItem(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SharedCtor() {
  _cached_size_ = 0;
  def_index_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  slot_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCCreateStaticRecipeResponse_OutputItem::~CMsgClientToGCCreateStaticRecipeResponse_OutputItem() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCCreateStaticRecipeResponse_OutputItem_descriptor_;
}

const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance_ = NULL;

CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::New() const {
  return new CMsgClientToGCCreateStaticRecipeResponse_OutputItem;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCCreateStaticRecipeResponse_OutputItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, slot_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 def_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
          set_has_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_slot_id;
        break;
      }

      // optional uint32 slot_id = 3;
      case 3: {
        if (tag == 24) {
         parse_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  // optional uint32 def_index = 1;
  if (has_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->def_index(), output);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 slot_id = 3;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slot_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  // optional uint32 def_index = 1;
  if (has_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->def_index(), target);
  }

  // optional uint64 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 slot_id = 3;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slot_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return target;
}

int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 def_index = 1;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 slot_id = 3;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_OutputItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCCreateStaticRecipeResponse_OutputItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_def_index()) {
      set_def_index(from.def_index());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::IsInitialized() const {

  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::Swap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other) {
  if (other != this) {
    std::swap(def_index_, other->def_index_);
    std::swap(item_id_, other->item_id_);
    std::swap(slot_id_, other->slot_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_OutputItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCCreateStaticRecipeResponse_OutputItem_descriptor_;
  metadata.reflection = CMsgClientToGCCreateStaticRecipeResponse_OutputItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgClientToGCCreateStaticRecipeResponse_InputError::kSlotIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_InputError::kErrorFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCCreateStaticRecipeResponse_InputError::CMsgClientToGCCreateStaticRecipeResponse_InputError()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCCreateStaticRecipeResponse.InputError)
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::InitAsDefaultInstance() {
}

CMsgClientToGCCreateStaticRecipeResponse_InputError::CMsgClientToGCCreateStaticRecipeResponse_InputError(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateStaticRecipeResponse.InputError)
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SharedCtor() {
  _cached_size_ = 0;
  slot_id_ = 0u;
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCCreateStaticRecipeResponse_InputError::~CMsgClientToGCCreateStaticRecipeResponse_InputError() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateStaticRecipeResponse.InputError)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_InputError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCCreateStaticRecipeResponse_InputError_descriptor_;
}

const CMsgClientToGCCreateStaticRecipeResponse_InputError& CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance_ = NULL;

CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse_InputError::New() const {
  return new CMsgClientToGCCreateStaticRecipeResponse_InputError;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCCreateStaticRecipeResponse_InputError*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(slot_id_, error_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse_InputError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCCreateStaticRecipeResponse.InputError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error;
        break;
      }

      // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
      case 2: {
        if (tag == 16) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value)) {
            set_error(static_cast< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCCreateStaticRecipeResponse.InputError)
  // optional uint32 slot_id = 1;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slot_id(), output);
  }

  // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCCreateStaticRecipeResponse.InputError)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_InputError::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateStaticRecipeResponse.InputError)
  // optional uint32 slot_id = 1;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slot_id(), target);
  }

  // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return target;
}

int CMsgClientToGCCreateStaticRecipeResponse_InputError::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 slot_id = 1;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

    // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_InputError* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCCreateStaticRecipeResponse_InputError*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_InputError::IsInitialized() const {

  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::Swap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other) {
  if (other != this) {
    std::swap(slot_id_, other->slot_id_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_InputError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCCreateStaticRecipeResponse_InputError_descriptor_;
  metadata.reflection = CMsgClientToGCCreateStaticRecipeResponse_InputError_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::kSlotIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::kValueFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::InitAsDefaultInstance() {
}

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SharedCtor() {
  _cached_size_ = 0;
  slot_id_ = 0u;
  value_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::~CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_descriptor_;
}

const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance_ = NULL;

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::New() const {
  return new CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(value_, slot_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  // optional uint32 slot_id = 1;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slot_id(), output);
  }

  // optional uint64 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  // optional uint32 slot_id = 1;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slot_id(), target);
  }

  // optional uint64 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return target;
}

int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 slot_id = 1;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

    // optional uint64 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::IsInitialized() const {

  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::Swap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other) {
  if (other != this) {
    std::swap(slot_id_, other->slot_id_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_descriptor_;
  metadata.reflection = CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgClientToGCCreateStaticRecipeResponse::kResponseFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kOutputItemsFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kInputErrorsFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kAdditionalOutputsFieldNumber;
#endif  // !_MSC_VER

CMsgClientToGCCreateStaticRecipeResponse::CMsgClientToGCCreateStaticRecipeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientToGCCreateStaticRecipeResponse)
}

void CMsgClientToGCCreateStaticRecipeResponse::InitAsDefaultInstance() {
}

CMsgClientToGCCreateStaticRecipeResponse::CMsgClientToGCCreateStaticRecipeResponse(const CMsgClientToGCCreateStaticRecipeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateStaticRecipeResponse)
}

void CMsgClientToGCCreateStaticRecipeResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClientToGCCreateStaticRecipeResponse::~CMsgClientToGCCreateStaticRecipeResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateStaticRecipeResponse)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClientToGCCreateStaticRecipeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClientToGCCreateStaticRecipeResponse_descriptor_;
}

const CMsgClientToGCCreateStaticRecipeResponse& CMsgClientToGCCreateStaticRecipeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgClientToGCCreateStaticRecipeResponse* CMsgClientToGCCreateStaticRecipeResponse::default_instance_ = NULL;

CMsgClientToGCCreateStaticRecipeResponse* CMsgClientToGCCreateStaticRecipeResponse::New() const {
  return new CMsgClientToGCCreateStaticRecipeResponse;
}

void CMsgClientToGCCreateStaticRecipeResponse::Clear() {
  response_ = 0;
  output_items_.Clear();
  input_errors_.Clear();
  additional_outputs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientToGCCreateStaticRecipeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value)) {
            set_response(static_cast< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_output_items;
        break;
      }

      // repeated .CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
      case 2: {
        if (tag == 18) {
         parse_output_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_output_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_output_items;
        if (input->ExpectTag(26)) goto parse_input_errors;
        break;
      }

      // repeated .CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
      case 3: {
        if (tag == 26) {
         parse_input_errors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_input_errors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_input_errors;
        if (input->ExpectTag(34)) goto parse_additional_outputs;
        break;
      }

      // repeated .CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
      case 4: {
        if (tag == 34) {
         parse_additional_outputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additional_outputs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_additional_outputs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientToGCCreateStaticRecipeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientToGCCreateStaticRecipeResponse)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientToGCCreateStaticRecipeResponse)
  // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  for (int i = 0; i < this->output_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->output_items(i), output);
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  for (int i = 0; i < this->input_errors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->input_errors(i), output);
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  for (int i = 0; i < this->additional_outputs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->additional_outputs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientToGCCreateStaticRecipeResponse)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateStaticRecipeResponse)
  // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  for (int i = 0; i < this->output_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->output_items(i), target);
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  for (int i = 0; i < this->input_errors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->input_errors(i), target);
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  for (int i = 0; i < this->additional_outputs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->additional_outputs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateStaticRecipeResponse)
  return target;
}

int CMsgClientToGCCreateStaticRecipeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

  }
  // repeated .CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  total_size += 1 * this->output_items_size();
  for (int i = 0; i < this->output_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->output_items(i));
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  total_size += 1 * this->input_errors_size();
  for (int i = 0; i < this->input_errors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->input_errors(i));
  }

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  total_size += 1 * this->additional_outputs_size();
  for (int i = 0; i < this->additional_outputs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additional_outputs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClientToGCCreateStaticRecipeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  output_items_.MergeFrom(from.output_items_);
  input_errors_.MergeFrom(from.input_errors_);
  additional_outputs_.MergeFrom(from.additional_outputs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClientToGCCreateStaticRecipeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse::IsInitialized() const {

  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse::Swap(CMsgClientToGCCreateStaticRecipeResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    output_items_.Swap(&other->output_items_);
    input_errors_.Swap(&other->input_errors_);
    additional_outputs_.Swap(&other->additional_outputs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClientToGCCreateStaticRecipeResponse_descriptor_;
  metadata.reflection = CMsgClientToGCCreateStaticRecipeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgProcessTransactionOrder_Item::kItemDefIndexFieldNumber;
const int CMsgProcessTransactionOrder_Item::kItemPriceFieldNumber;
const int CMsgProcessTransactionOrder_Item::kQuantityFieldNumber;
const int CMsgProcessTransactionOrder_Item::kCategoryDescFieldNumber;
const int CMsgProcessTransactionOrder_Item::kStorePurchaseTypeFieldNumber;
const int CMsgProcessTransactionOrder_Item::kSourceReferenceIdFieldNumber;
const int CMsgProcessTransactionOrder_Item::kParentStackIndexFieldNumber;
const int CMsgProcessTransactionOrder_Item::kDefaultPriceFieldNumber;
const int CMsgProcessTransactionOrder_Item::kIsUserFacingFieldNumber;
#endif  // !_MSC_VER

CMsgProcessTransactionOrder_Item::CMsgProcessTransactionOrder_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgProcessTransactionOrder.Item)
}

void CMsgProcessTransactionOrder_Item::InitAsDefaultInstance() {
}

CMsgProcessTransactionOrder_Item::CMsgProcessTransactionOrder_Item(const CMsgProcessTransactionOrder_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgProcessTransactionOrder.Item)
}

void CMsgProcessTransactionOrder_Item::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_def_index_ = 0u;
  item_price_ = 0u;
  quantity_ = 0u;
  category_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_purchase_type_ = 0u;
  source_reference_id_ = GOOGLE_ULONGLONG(0);
  parent_stack_index_ = 0;
  default_price_ = false;
  is_user_facing_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgProcessTransactionOrder_Item::~CMsgProcessTransactionOrder_Item() {
  // @@protoc_insertion_point(destructor:CMsgProcessTransactionOrder.Item)
  SharedDtor();
}

void CMsgProcessTransactionOrder_Item::SharedDtor() {
  if (category_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete category_desc_;
  }
  if (this != default_instance_) {
  }
}

void CMsgProcessTransactionOrder_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgProcessTransactionOrder_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgProcessTransactionOrder_Item_descriptor_;
}

const CMsgProcessTransactionOrder_Item& CMsgProcessTransactionOrder_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder_Item::default_instance_ = NULL;

CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder_Item::New() const {
  return new CMsgProcessTransactionOrder_Item;
}

void CMsgProcessTransactionOrder_Item::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgProcessTransactionOrder_Item*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(item_def_index_, item_price_);
    ZR_(quantity_, default_price_);
    if (has_category_desc()) {
      if (category_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        category_desc_->clear();
      }
    }
  }
  is_user_facing_ = false;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgProcessTransactionOrder_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgProcessTransactionOrder.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
          set_has_item_def_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_price;
        break;
      }

      // optional uint32 item_price = 2;
      case 2: {
        if (tag == 16) {
         parse_item_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_price_)));
          set_has_item_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_quantity;
        break;
      }

      // optional uint32 quantity = 3;
      case 3: {
        if (tag == 24) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
          set_has_quantity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_category_desc;
        break;
      }

      // optional string category_desc = 4;
      case 4: {
        if (tag == 34) {
         parse_category_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category_desc().data(), this->category_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "category_desc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_store_purchase_type;
        break;
      }

      // optional uint32 store_purchase_type = 5;
      case 5: {
        if (tag == 40) {
         parse_store_purchase_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &store_purchase_type_)));
          set_has_store_purchase_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_source_reference_id;
        break;
      }

      // optional uint64 source_reference_id = 6;
      case 6: {
        if (tag == 48) {
         parse_source_reference_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_reference_id_)));
          set_has_source_reference_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_parent_stack_index;
        break;
      }

      // optional int32 parent_stack_index = 7;
      case 7: {
        if (tag == 56) {
         parse_parent_stack_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_stack_index_)));
          set_has_parent_stack_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_default_price;
        break;
      }

      // optional bool default_price = 8;
      case 8: {
        if (tag == 64) {
         parse_default_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default_price_)));
          set_has_default_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_is_user_facing;
        break;
      }

      // optional bool is_user_facing = 9;
      case 9: {
        if (tag == 72) {
         parse_is_user_facing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_user_facing_)));
          set_has_is_user_facing();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgProcessTransactionOrder.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgProcessTransactionOrder.Item)
  return false;
#undef DO_
}

void CMsgProcessTransactionOrder_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgProcessTransactionOrder.Item)
  // optional uint32 item_def_index = 1;
  if (has_item_def_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  // optional uint32 item_price = 2;
  if (has_item_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_price(), output);
  }

  // optional uint32 quantity = 3;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quantity(), output);
  }

  // optional string category_desc = 4;
  if (has_category_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_desc().data(), this->category_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "category_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->category_desc(), output);
  }

  // optional uint32 store_purchase_type = 5;
  if (has_store_purchase_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->store_purchase_type(), output);
  }

  // optional uint64 source_reference_id = 6;
  if (has_source_reference_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->source_reference_id(), output);
  }

  // optional int32 parent_stack_index = 7;
  if (has_parent_stack_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->parent_stack_index(), output);
  }

  // optional bool default_price = 8;
  if (has_default_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->default_price(), output);
  }

  // optional bool is_user_facing = 9;
  if (has_is_user_facing()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_user_facing(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgProcessTransactionOrder.Item)
}

::google::protobuf::uint8* CMsgProcessTransactionOrder_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgProcessTransactionOrder.Item)
  // optional uint32 item_def_index = 1;
  if (has_item_def_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  // optional uint32 item_price = 2;
  if (has_item_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_price(), target);
  }

  // optional uint32 quantity = 3;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quantity(), target);
  }

  // optional string category_desc = 4;
  if (has_category_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_desc().data(), this->category_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "category_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->category_desc(), target);
  }

  // optional uint32 store_purchase_type = 5;
  if (has_store_purchase_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->store_purchase_type(), target);
  }

  // optional uint64 source_reference_id = 6;
  if (has_source_reference_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->source_reference_id(), target);
  }

  // optional int32 parent_stack_index = 7;
  if (has_parent_stack_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->parent_stack_index(), target);
  }

  // optional bool default_price = 8;
  if (has_default_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->default_price(), target);
  }

  // optional bool is_user_facing = 9;
  if (has_is_user_facing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_user_facing(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgProcessTransactionOrder.Item)
  return target;
}

int CMsgProcessTransactionOrder_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 item_def_index = 1;
    if (has_item_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

    // optional uint32 item_price = 2;
    if (has_item_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_price());
    }

    // optional uint32 quantity = 3;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

    // optional string category_desc = 4;
    if (has_category_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category_desc());
    }

    // optional uint32 store_purchase_type = 5;
    if (has_store_purchase_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->store_purchase_type());
    }

    // optional uint64 source_reference_id = 6;
    if (has_source_reference_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_reference_id());
    }

    // optional int32 parent_stack_index = 7;
    if (has_parent_stack_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parent_stack_index());
    }

    // optional bool default_price = 8;
    if (has_default_price()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool is_user_facing = 9;
    if (has_is_user_facing()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgProcessTransactionOrder_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgProcessTransactionOrder_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgProcessTransactionOrder_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgProcessTransactionOrder_Item::MergeFrom(const CMsgProcessTransactionOrder_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_def_index()) {
      set_item_def_index(from.item_def_index());
    }
    if (from.has_item_price()) {
      set_item_price(from.item_price());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
    if (from.has_category_desc()) {
      set_category_desc(from.category_desc());
    }
    if (from.has_store_purchase_type()) {
      set_store_purchase_type(from.store_purchase_type());
    }
    if (from.has_source_reference_id()) {
      set_source_reference_id(from.source_reference_id());
    }
    if (from.has_parent_stack_index()) {
      set_parent_stack_index(from.parent_stack_index());
    }
    if (from.has_default_price()) {
      set_default_price(from.default_price());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_is_user_facing()) {
      set_is_user_facing(from.is_user_facing());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgProcessTransactionOrder_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProcessTransactionOrder_Item::CopyFrom(const CMsgProcessTransactionOrder_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProcessTransactionOrder_Item::IsInitialized() const {

  return true;
}

void CMsgProcessTransactionOrder_Item::Swap(CMsgProcessTransactionOrder_Item* other) {
  if (other != this) {
    std::swap(item_def_index_, other->item_def_index_);
    std::swap(item_price_, other->item_price_);
    std::swap(quantity_, other->quantity_);
    std::swap(category_desc_, other->category_desc_);
    std::swap(store_purchase_type_, other->store_purchase_type_);
    std::swap(source_reference_id_, other->source_reference_id_);
    std::swap(parent_stack_index_, other->parent_stack_index_);
    std::swap(default_price_, other->default_price_);
    std::swap(is_user_facing_, other->is_user_facing_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgProcessTransactionOrder_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgProcessTransactionOrder_Item_descriptor_;
  metadata.reflection = CMsgProcessTransactionOrder_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgProcessTransactionOrder::kTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kSteamTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kPartnerTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kSteamIdFieldNumber;
const int CMsgProcessTransactionOrder::kTimeStampFieldNumber;
const int CMsgProcessTransactionOrder::kWatermarkFieldNumber;
const int CMsgProcessTransactionOrder::kPurchaseReportStatusFieldNumber;
const int CMsgProcessTransactionOrder::kCurrencyFieldNumber;
const int CMsgProcessTransactionOrder::kItemsFieldNumber;
#endif  // !_MSC_VER

CMsgProcessTransactionOrder::CMsgProcessTransactionOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgProcessTransactionOrder)
}

void CMsgProcessTransactionOrder::InitAsDefaultInstance() {
}

CMsgProcessTransactionOrder::CMsgProcessTransactionOrder(const CMsgProcessTransactionOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgProcessTransactionOrder)
}

void CMsgProcessTransactionOrder::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
  steam_txn_id_ = GOOGLE_ULONGLONG(0);
  partner_txn_id_ = GOOGLE_ULONGLONG(0);
  steam_id_ = GOOGLE_ULONGLONG(0);
  time_stamp_ = 0u;
  watermark_ = GOOGLE_ULONGLONG(0);
  purchase_report_status_ = 0;
  currency_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgProcessTransactionOrder::~CMsgProcessTransactionOrder() {
  // @@protoc_insertion_point(destructor:CMsgProcessTransactionOrder)
  SharedDtor();
}

void CMsgProcessTransactionOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgProcessTransactionOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgProcessTransactionOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgProcessTransactionOrder_descriptor_;
}

const CMsgProcessTransactionOrder& CMsgProcessTransactionOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgProcessTransactionOrder* CMsgProcessTransactionOrder::default_instance_ = NULL;

CMsgProcessTransactionOrder* CMsgProcessTransactionOrder::New() const {
  return new CMsgProcessTransactionOrder;
}

void CMsgProcessTransactionOrder::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgProcessTransactionOrder*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(txn_id_, purchase_report_status_);
    currency_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgProcessTransactionOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgProcessTransactionOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
          set_has_txn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_steam_txn_id;
        break;
      }

      // optional uint64 steam_txn_id = 2;
      case 2: {
        if (tag == 16) {
         parse_steam_txn_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steam_txn_id_)));
          set_has_steam_txn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_partner_txn_id;
        break;
      }

      // optional uint64 partner_txn_id = 3;
      case 3: {
        if (tag == 24) {
         parse_partner_txn_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partner_txn_id_)));
          set_has_partner_txn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_steam_id;
        break;
      }

      // optional fixed64 steam_id = 4;
      case 4: {
        if (tag == 33) {
         parse_steam_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
          set_has_steam_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time_stamp;
        break;
      }

      // optional uint32 time_stamp = 5;
      case 5: {
        if (tag == 40) {
         parse_time_stamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_stamp_)));
          set_has_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_watermark;
        break;
      }

      // optional uint64 watermark = 6;
      case 6: {
        if (tag == 48) {
         parse_watermark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &watermark_)));
          set_has_watermark();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_purchase_report_status;
        break;
      }

      // optional int32 purchase_report_status = 7;
      case 7: {
        if (tag == 56) {
         parse_purchase_report_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_report_status_)));
          set_has_purchase_report_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_currency;
        break;
      }

      // optional uint32 currency = 8;
      case 8: {
        if (tag == 64) {
         parse_currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_items;
        break;
      }

      // repeated .CMsgProcessTransactionOrder.Item items = 9;
      case 9: {
        if (tag == 74) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgProcessTransactionOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgProcessTransactionOrder)
  return false;
#undef DO_
}

void CMsgProcessTransactionOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgProcessTransactionOrder)
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // optional uint64 steam_txn_id = 2;
  if (has_steam_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->steam_txn_id(), output);
  }

  // optional uint64 partner_txn_id = 3;
  if (has_partner_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->partner_txn_id(), output);
  }

  // optional fixed64 steam_id = 4;
  if (has_steam_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steam_id(), output);
  }

  // optional uint32 time_stamp = 5;
  if (has_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time_stamp(), output);
  }

  // optional uint64 watermark = 6;
  if (has_watermark()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->watermark(), output);
  }

  // optional int32 purchase_report_status = 7;
  if (has_purchase_report_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->purchase_report_status(), output);
  }

  // optional uint32 currency = 8;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->currency(), output);
  }

  // repeated .CMsgProcessTransactionOrder.Item items = 9;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgProcessTransactionOrder)
}

::google::protobuf::uint8* CMsgProcessTransactionOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgProcessTransactionOrder)
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // optional uint64 steam_txn_id = 2;
  if (has_steam_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->steam_txn_id(), target);
  }

  // optional uint64 partner_txn_id = 3;
  if (has_partner_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->partner_txn_id(), target);
  }

  // optional fixed64 steam_id = 4;
  if (has_steam_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steam_id(), target);
  }

  // optional uint32 time_stamp = 5;
  if (has_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time_stamp(), target);
  }

  // optional uint64 watermark = 6;
  if (has_watermark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->watermark(), target);
  }

  // optional int32 purchase_report_status = 7;
  if (has_purchase_report_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->purchase_report_status(), target);
  }

  // optional uint32 currency = 8;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->currency(), target);
  }

  // repeated .CMsgProcessTransactionOrder.Item items = 9;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgProcessTransactionOrder)
  return target;
}

int CMsgProcessTransactionOrder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 txn_id = 1;
    if (has_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_id());
    }

    // optional uint64 steam_txn_id = 2;
    if (has_steam_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steam_txn_id());
    }

    // optional uint64 partner_txn_id = 3;
    if (has_partner_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->partner_txn_id());
    }

    // optional fixed64 steam_id = 4;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_stamp = 5;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_stamp());
    }

    // optional uint64 watermark = 6;
    if (has_watermark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->watermark());
    }

    // optional int32 purchase_report_status = 7;
    if (has_purchase_report_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_report_status());
    }

    // optional uint32 currency = 8;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  // repeated .CMsgProcessTransactionOrder.Item items = 9;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgProcessTransactionOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgProcessTransactionOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgProcessTransactionOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgProcessTransactionOrder::MergeFrom(const CMsgProcessTransactionOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_txn_id()) {
      set_txn_id(from.txn_id());
    }
    if (from.has_steam_txn_id()) {
      set_steam_txn_id(from.steam_txn_id());
    }
    if (from.has_partner_txn_id()) {
      set_partner_txn_id(from.partner_txn_id());
    }
    if (from.has_steam_id()) {
      set_steam_id(from.steam_id());
    }
    if (from.has_time_stamp()) {
      set_time_stamp(from.time_stamp());
    }
    if (from.has_watermark()) {
      set_watermark(from.watermark());
    }
    if (from.has_purchase_report_status()) {
      set_purchase_report_status(from.purchase_report_status());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgProcessTransactionOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProcessTransactionOrder::CopyFrom(const CMsgProcessTransactionOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProcessTransactionOrder::IsInitialized() const {

  return true;
}

void CMsgProcessTransactionOrder::Swap(CMsgProcessTransactionOrder* other) {
  if (other != this) {
    std::swap(txn_id_, other->txn_id_);
    std::swap(steam_txn_id_, other->steam_txn_id_);
    std::swap(partner_txn_id_, other->partner_txn_id_);
    std::swap(steam_id_, other->steam_id_);
    std::swap(time_stamp_, other->time_stamp_);
    std::swap(watermark_, other->watermark_);
    std::swap(purchase_report_status_, other->purchase_report_status_);
    std::swap(currency_, other->currency_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgProcessTransactionOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgProcessTransactionOrder_descriptor_;
  metadata.reflection = CMsgProcessTransactionOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCStoreProcessCDKeyTransaction::kOrderFieldNumber;
const int CMsgGCToGCStoreProcessCDKeyTransaction::kReasonCodeFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCStoreProcessCDKeyTransaction::CMsgGCToGCStoreProcessCDKeyTransaction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCStoreProcessCDKeyTransaction)
}

void CMsgGCToGCStoreProcessCDKeyTransaction::InitAsDefaultInstance() {
  order_ = const_cast< ::CMsgProcessTransactionOrder*>(&::CMsgProcessTransactionOrder::default_instance());
}

CMsgGCToGCStoreProcessCDKeyTransaction::CMsgGCToGCStoreProcessCDKeyTransaction(const CMsgGCToGCStoreProcessCDKeyTransaction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCStoreProcessCDKeyTransaction)
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SharedCtor() {
  _cached_size_ = 0;
  order_ = NULL;
  reason_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCStoreProcessCDKeyTransaction::~CMsgGCToGCStoreProcessCDKeyTransaction() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCStoreProcessCDKeyTransaction)
  SharedDtor();
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SharedDtor() {
  if (this != default_instance_) {
    delete order_;
  }
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessCDKeyTransaction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCStoreProcessCDKeyTransaction_descriptor_;
}

const CMsgGCToGCStoreProcessCDKeyTransaction& CMsgGCToGCStoreProcessCDKeyTransaction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCStoreProcessCDKeyTransaction* CMsgGCToGCStoreProcessCDKeyTransaction::default_instance_ = NULL;

CMsgGCToGCStoreProcessCDKeyTransaction* CMsgGCToGCStoreProcessCDKeyTransaction::New() const {
  return new CMsgGCToGCStoreProcessCDKeyTransaction;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_order()) {
      if (order_ != NULL) order_->::CMsgProcessTransactionOrder::Clear();
    }
    reason_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCStoreProcessCDKeyTransaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCStoreProcessCDKeyTransaction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason_code;
        break;
      }

      // optional uint32 reason_code = 2;
      case 2: {
        if (tag == 16) {
         parse_reason_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_code_)));
          set_has_reason_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCStoreProcessCDKeyTransaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCStoreProcessCDKeyTransaction)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCStoreProcessCDKeyTransaction)
  // optional .CMsgProcessTransactionOrder order = 1;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->order(), output);
  }

  // optional uint32 reason_code = 2;
  if (has_reason_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCStoreProcessCDKeyTransaction)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessCDKeyTransaction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCStoreProcessCDKeyTransaction)
  // optional .CMsgProcessTransactionOrder order = 1;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->order(), target);
  }

  // optional uint32 reason_code = 2;
  if (has_reason_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCStoreProcessCDKeyTransaction)
  return target;
}

int CMsgGCToGCStoreProcessCDKeyTransaction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgProcessTransactionOrder order = 1;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order());
    }

    // optional uint32 reason_code = 2;
    if (has_reason_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reason_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessCDKeyTransaction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCStoreProcessCDKeyTransaction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessCDKeyTransaction::MergeFrom(const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order()) {
      mutable_order()->::CMsgProcessTransactionOrder::MergeFrom(from.order());
    }
    if (from.has_reason_code()) {
      set_reason_code(from.reason_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCStoreProcessCDKeyTransaction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessCDKeyTransaction::CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessCDKeyTransaction::IsInitialized() const {

  return true;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::Swap(CMsgGCToGCStoreProcessCDKeyTransaction* other) {
  if (other != this) {
    std::swap(order_, other->order_);
    std::swap(reason_code_, other->reason_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessCDKeyTransaction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCStoreProcessCDKeyTransaction_descriptor_;
  metadata.reflection = CMsgGCToGCStoreProcessCDKeyTransaction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCStoreProcessCDKeyTransactionResponse::kSuccessFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCStoreProcessCDKeyTransactionResponse::CMsgGCToGCStoreProcessCDKeyTransactionResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::InitAsDefaultInstance() {
}

CMsgGCToGCStoreProcessCDKeyTransactionResponse::CMsgGCToGCStoreProcessCDKeyTransactionResponse(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCStoreProcessCDKeyTransactionResponse::~CMsgGCToGCStoreProcessCDKeyTransactionResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  SharedDtor();
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessCDKeyTransactionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCStoreProcessCDKeyTransactionResponse_descriptor_;
}

const CMsgGCToGCStoreProcessCDKeyTransactionResponse& CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCStoreProcessCDKeyTransactionResponse* CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance_ = NULL;

CMsgGCToGCStoreProcessCDKeyTransactionResponse* CMsgGCToGCStoreProcessCDKeyTransactionResponse::New() const {
  return new CMsgGCToGCStoreProcessCDKeyTransactionResponse;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::Clear() {
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  // optional bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessCDKeyTransactionResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  // optional bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return target;
}

int CMsgGCToGCStoreProcessCDKeyTransactionResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessCDKeyTransactionResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCStoreProcessCDKeyTransactionResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergeFrom(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::Swap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessCDKeyTransactionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCStoreProcessCDKeyTransactionResponse_descriptor_;
  metadata.reflection = CMsgGCToGCStoreProcessCDKeyTransactionResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCStoreProcessSettlement::kOrderFieldNumber;
const int CMsgGCToGCStoreProcessSettlement::kPartnerFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCStoreProcessSettlement::CMsgGCToGCStoreProcessSettlement()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCStoreProcessSettlement)
}

void CMsgGCToGCStoreProcessSettlement::InitAsDefaultInstance() {
  order_ = const_cast< ::CMsgProcessTransactionOrder*>(&::CMsgProcessTransactionOrder::default_instance());
}

CMsgGCToGCStoreProcessSettlement::CMsgGCToGCStoreProcessSettlement(const CMsgGCToGCStoreProcessSettlement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCStoreProcessSettlement)
}

void CMsgGCToGCStoreProcessSettlement::SharedCtor() {
  _cached_size_ = 0;
  order_ = NULL;
  partner_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCStoreProcessSettlement::~CMsgGCToGCStoreProcessSettlement() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCStoreProcessSettlement)
  SharedDtor();
}

void CMsgGCToGCStoreProcessSettlement::SharedDtor() {
  if (this != default_instance_) {
    delete order_;
  }
}

void CMsgGCToGCStoreProcessSettlement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessSettlement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCStoreProcessSettlement_descriptor_;
}

const CMsgGCToGCStoreProcessSettlement& CMsgGCToGCStoreProcessSettlement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCStoreProcessSettlement* CMsgGCToGCStoreProcessSettlement::default_instance_ = NULL;

CMsgGCToGCStoreProcessSettlement* CMsgGCToGCStoreProcessSettlement::New() const {
  return new CMsgGCToGCStoreProcessSettlement;
}

void CMsgGCToGCStoreProcessSettlement::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_order()) {
      if (order_ != NULL) order_->::CMsgProcessTransactionOrder::Clear();
    }
    partner_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCStoreProcessSettlement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCStoreProcessSettlement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_partner;
        break;
      }

      // optional uint32 partner = 2;
      case 2: {
        if (tag == 16) {
         parse_partner:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_)));
          set_has_partner();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCStoreProcessSettlement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCStoreProcessSettlement)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessSettlement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCStoreProcessSettlement)
  // optional .CMsgProcessTransactionOrder order = 1;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->order(), output);
  }

  // optional uint32 partner = 2;
  if (has_partner()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->partner(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCStoreProcessSettlement)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessSettlement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCStoreProcessSettlement)
  // optional .CMsgProcessTransactionOrder order = 1;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->order(), target);
  }

  // optional uint32 partner = 2;
  if (has_partner()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->partner(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCStoreProcessSettlement)
  return target;
}

int CMsgGCToGCStoreProcessSettlement::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgProcessTransactionOrder order = 1;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order());
    }

    // optional uint32 partner = 2;
    if (has_partner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessSettlement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessSettlement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCStoreProcessSettlement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessSettlement::MergeFrom(const CMsgGCToGCStoreProcessSettlement& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order()) {
      mutable_order()->::CMsgProcessTransactionOrder::MergeFrom(from.order());
    }
    if (from.has_partner()) {
      set_partner(from.partner());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCStoreProcessSettlement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessSettlement::CopyFrom(const CMsgGCToGCStoreProcessSettlement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessSettlement::IsInitialized() const {

  return true;
}

void CMsgGCToGCStoreProcessSettlement::Swap(CMsgGCToGCStoreProcessSettlement* other) {
  if (other != this) {
    std::swap(order_, other->order_);
    std::swap(partner_, other->partner_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessSettlement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCStoreProcessSettlement_descriptor_;
  metadata.reflection = CMsgGCToGCStoreProcessSettlement_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCStoreProcessSettlementResponse::kSuccessFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCStoreProcessSettlementResponse::CMsgGCToGCStoreProcessSettlementResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCStoreProcessSettlementResponse)
}

void CMsgGCToGCStoreProcessSettlementResponse::InitAsDefaultInstance() {
}

CMsgGCToGCStoreProcessSettlementResponse::CMsgGCToGCStoreProcessSettlementResponse(const CMsgGCToGCStoreProcessSettlementResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCStoreProcessSettlementResponse)
}

void CMsgGCToGCStoreProcessSettlementResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCStoreProcessSettlementResponse::~CMsgGCToGCStoreProcessSettlementResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCStoreProcessSettlementResponse)
  SharedDtor();
}

void CMsgGCToGCStoreProcessSettlementResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCStoreProcessSettlementResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessSettlementResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCStoreProcessSettlementResponse_descriptor_;
}

const CMsgGCToGCStoreProcessSettlementResponse& CMsgGCToGCStoreProcessSettlementResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCStoreProcessSettlementResponse* CMsgGCToGCStoreProcessSettlementResponse::default_instance_ = NULL;

CMsgGCToGCStoreProcessSettlementResponse* CMsgGCToGCStoreProcessSettlementResponse::New() const {
  return new CMsgGCToGCStoreProcessSettlementResponse;
}

void CMsgGCToGCStoreProcessSettlementResponse::Clear() {
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCStoreProcessSettlementResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCStoreProcessSettlementResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCStoreProcessSettlementResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCStoreProcessSettlementResponse)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessSettlementResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCStoreProcessSettlementResponse)
  // optional bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCStoreProcessSettlementResponse)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessSettlementResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCStoreProcessSettlementResponse)
  // optional bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCStoreProcessSettlementResponse)
  return target;
}

int CMsgGCToGCStoreProcessSettlementResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessSettlementResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessSettlementResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCStoreProcessSettlementResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessSettlementResponse::MergeFrom(const CMsgGCToGCStoreProcessSettlementResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCStoreProcessSettlementResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessSettlementResponse::CopyFrom(const CMsgGCToGCStoreProcessSettlementResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessSettlementResponse::IsInitialized() const {

  return true;
}

void CMsgGCToGCStoreProcessSettlementResponse::Swap(CMsgGCToGCStoreProcessSettlementResponse* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessSettlementResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCStoreProcessSettlementResponse_descriptor_;
  metadata.reflection = CMsgGCToGCStoreProcessSettlementResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCBroadcastConsoleCommand::kConCommandFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kReportOutputFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kSendingGcFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kOutputInitiatorFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCBroadcastConsoleCommand)
}

void CMsgGCToGCBroadcastConsoleCommand::InitAsDefaultInstance() {
}

CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand(const CMsgGCToGCBroadcastConsoleCommand& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCBroadcastConsoleCommand)
}

void CMsgGCToGCBroadcastConsoleCommand::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  con_command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_output_ = false;
  sending_gc_ = 0u;
  output_initiator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCBroadcastConsoleCommand::~CMsgGCToGCBroadcastConsoleCommand() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCBroadcastConsoleCommand)
  SharedDtor();
}

void CMsgGCToGCBroadcastConsoleCommand::SharedDtor() {
  if (con_command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete con_command_;
  }
  if (output_initiator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete output_initiator_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCToGCBroadcastConsoleCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCBroadcastConsoleCommand::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCBroadcastConsoleCommand_descriptor_;
}

const CMsgGCToGCBroadcastConsoleCommand& CMsgGCToGCBroadcastConsoleCommand::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCBroadcastConsoleCommand* CMsgGCToGCBroadcastConsoleCommand::default_instance_ = NULL;

CMsgGCToGCBroadcastConsoleCommand* CMsgGCToGCBroadcastConsoleCommand::New() const {
  return new CMsgGCToGCBroadcastConsoleCommand;
}

void CMsgGCToGCBroadcastConsoleCommand::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCBroadcastConsoleCommand*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(report_output_, sending_gc_);
    if (has_con_command()) {
      if (con_command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        con_command_->clear();
      }
    }
    if (has_output_initiator()) {
      if (output_initiator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        output_initiator_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCBroadcastConsoleCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCBroadcastConsoleCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string con_command = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_con_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->con_command().data(), this->con_command().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "con_command");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_report_output;
        break;
      }

      // optional bool report_output = 2;
      case 2: {
        if (tag == 16) {
         parse_report_output:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &report_output_)));
          set_has_report_output();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sending_gc;
        break;
      }

      // optional uint32 sending_gc = 3;
      case 3: {
        if (tag == 24) {
         parse_sending_gc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
          set_has_sending_gc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_output_initiator;
        break;
      }

      // optional string output_initiator = 4;
      case 4: {
        if (tag == 34) {
         parse_output_initiator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_initiator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_initiator().data(), this->output_initiator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "output_initiator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCBroadcastConsoleCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCBroadcastConsoleCommand)
  return false;
#undef DO_
}

void CMsgGCToGCBroadcastConsoleCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCBroadcastConsoleCommand)
  // optional string con_command = 1;
  if (has_con_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), this->con_command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "con_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->con_command(), output);
  }

  // optional bool report_output = 2;
  if (has_report_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->report_output(), output);
  }

  // optional uint32 sending_gc = 3;
  if (has_sending_gc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sending_gc(), output);
  }

  // optional string output_initiator = 4;
  if (has_output_initiator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_initiator().data(), this->output_initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "output_initiator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_initiator(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCBroadcastConsoleCommand)
}

::google::protobuf::uint8* CMsgGCToGCBroadcastConsoleCommand::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCBroadcastConsoleCommand)
  // optional string con_command = 1;
  if (has_con_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), this->con_command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "con_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->con_command(), target);
  }

  // optional bool report_output = 2;
  if (has_report_output()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->report_output(), target);
  }

  // optional uint32 sending_gc = 3;
  if (has_sending_gc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sending_gc(), target);
  }

  // optional string output_initiator = 4;
  if (has_output_initiator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_initiator().data(), this->output_initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "output_initiator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_initiator(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCBroadcastConsoleCommand)
  return target;
}

int CMsgGCToGCBroadcastConsoleCommand::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string con_command = 1;
    if (has_con_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->con_command());
    }

    // optional bool report_output = 2;
    if (has_report_output()) {
      total_size += 1 + 1;
    }

    // optional uint32 sending_gc = 3;
    if (has_sending_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

    // optional string output_initiator = 4;
    if (has_output_initiator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output_initiator());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCBroadcastConsoleCommand* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCBroadcastConsoleCommand*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_con_command()) {
      set_con_command(from.con_command());
    }
    if (from.has_report_output()) {
      set_report_output(from.report_output());
    }
    if (from.has_sending_gc()) {
      set_sending_gc(from.sending_gc());
    }
    if (from.has_output_initiator()) {
      set_output_initiator(from.output_initiator());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCBroadcastConsoleCommand::IsInitialized() const {

  return true;
}

void CMsgGCToGCBroadcastConsoleCommand::Swap(CMsgGCToGCBroadcastConsoleCommand* other) {
  if (other != this) {
    std::swap(con_command_, other->con_command_);
    std::swap(report_output_, other->report_output_);
    std::swap(sending_gc_, other->sending_gc_);
    std::swap(output_initiator_, other->output_initiator_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCBroadcastConsoleCommand::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCBroadcastConsoleCommand_descriptor_;
  metadata.reflection = CMsgGCToGCBroadcastConsoleCommand_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCConsoleOutput_OutputLine::kTextFieldNumber;
const int CMsgGCToGCConsoleOutput_OutputLine::kSpewLevelFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCConsoleOutput_OutputLine::CMsgGCToGCConsoleOutput_OutputLine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCConsoleOutput.OutputLine)
}

void CMsgGCToGCConsoleOutput_OutputLine::InitAsDefaultInstance() {
}

CMsgGCToGCConsoleOutput_OutputLine::CMsgGCToGCConsoleOutput_OutputLine(const CMsgGCToGCConsoleOutput_OutputLine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCConsoleOutput.OutputLine)
}

void CMsgGCToGCConsoleOutput_OutputLine::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spew_level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCConsoleOutput_OutputLine::~CMsgGCToGCConsoleOutput_OutputLine() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCConsoleOutput.OutputLine)
  SharedDtor();
}

void CMsgGCToGCConsoleOutput_OutputLine::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCToGCConsoleOutput_OutputLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCConsoleOutput_OutputLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCConsoleOutput_OutputLine_descriptor_;
}

const CMsgGCToGCConsoleOutput_OutputLine& CMsgGCToGCConsoleOutput_OutputLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput_OutputLine::default_instance_ = NULL;

CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput_OutputLine::New() const {
  return new CMsgGCToGCConsoleOutput_OutputLine;
}

void CMsgGCToGCConsoleOutput_OutputLine::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
    spew_level_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCConsoleOutput_OutputLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCConsoleOutput.OutputLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_spew_level;
        break;
      }

      // optional uint32 spew_level = 2;
      case 2: {
        if (tag == 16) {
         parse_spew_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spew_level_)));
          set_has_spew_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCConsoleOutput.OutputLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCConsoleOutput.OutputLine)
  return false;
#undef DO_
}

void CMsgGCToGCConsoleOutput_OutputLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCConsoleOutput.OutputLine)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional uint32 spew_level = 2;
  if (has_spew_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spew_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCConsoleOutput.OutputLine)
}

::google::protobuf::uint8* CMsgGCToGCConsoleOutput_OutputLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCConsoleOutput.OutputLine)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional uint32 spew_level = 2;
  if (has_spew_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spew_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCConsoleOutput.OutputLine)
  return target;
}

int CMsgGCToGCConsoleOutput_OutputLine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 spew_level = 2;
    if (has_spew_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spew_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCConsoleOutput_OutputLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCConsoleOutput_OutputLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCConsoleOutput_OutputLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCConsoleOutput_OutputLine::MergeFrom(const CMsgGCToGCConsoleOutput_OutputLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_spew_level()) {
      set_spew_level(from.spew_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCConsoleOutput_OutputLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCConsoleOutput_OutputLine::CopyFrom(const CMsgGCToGCConsoleOutput_OutputLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCConsoleOutput_OutputLine::IsInitialized() const {

  return true;
}

void CMsgGCToGCConsoleOutput_OutputLine::Swap(CMsgGCToGCConsoleOutput_OutputLine* other) {
  if (other != this) {
    std::swap(text_, other->text_);
    std::swap(spew_level_, other->spew_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCConsoleOutput_OutputLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCConsoleOutput_OutputLine_descriptor_;
  metadata.reflection = CMsgGCToGCConsoleOutput_OutputLine_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgGCToGCConsoleOutput::kInitiatorFieldNumber;
const int CMsgGCToGCConsoleOutput::kSendingGcFieldNumber;
const int CMsgGCToGCConsoleOutput::kMsgsFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCConsoleOutput::CMsgGCToGCConsoleOutput()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCConsoleOutput)
}

void CMsgGCToGCConsoleOutput::InitAsDefaultInstance() {
}

CMsgGCToGCConsoleOutput::CMsgGCToGCConsoleOutput(const CMsgGCToGCConsoleOutput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCConsoleOutput)
}

void CMsgGCToGCConsoleOutput::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  initiator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sending_gc_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCConsoleOutput::~CMsgGCToGCConsoleOutput() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCConsoleOutput)
  SharedDtor();
}

void CMsgGCToGCConsoleOutput::SharedDtor() {
  if (initiator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete initiator_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCToGCConsoleOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCConsoleOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCConsoleOutput_descriptor_;
}

const CMsgGCToGCConsoleOutput& CMsgGCToGCConsoleOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCConsoleOutput* CMsgGCToGCConsoleOutput::default_instance_ = NULL;

CMsgGCToGCConsoleOutput* CMsgGCToGCConsoleOutput::New() const {
  return new CMsgGCToGCConsoleOutput;
}

void CMsgGCToGCConsoleOutput::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_initiator()) {
      if (initiator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        initiator_->clear();
      }
    }
    sending_gc_ = 0u;
  }
  msgs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCConsoleOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCConsoleOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string initiator = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initiator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->initiator().data(), this->initiator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "initiator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sending_gc;
        break;
      }

      // optional uint32 sending_gc = 2;
      case 2: {
        if (tag == 16) {
         parse_sending_gc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
          set_has_sending_gc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msgs;
        break;
      }

      // repeated .CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
      case 3: {
        if (tag == 26) {
         parse_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msgs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCConsoleOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCConsoleOutput)
  return false;
#undef DO_
}

void CMsgGCToGCConsoleOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCConsoleOutput)
  // optional string initiator = 1;
  if (has_initiator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initiator().data(), this->initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "initiator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->initiator(), output);
  }

  // optional uint32 sending_gc = 2;
  if (has_sending_gc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sending_gc(), output);
  }

  // repeated .CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  for (int i = 0; i < this->msgs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->msgs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCConsoleOutput)
}

::google::protobuf::uint8* CMsgGCToGCConsoleOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCConsoleOutput)
  // optional string initiator = 1;
  if (has_initiator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initiator().data(), this->initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "initiator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->initiator(), target);
  }

  // optional uint32 sending_gc = 2;
  if (has_sending_gc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sending_gc(), target);
  }

  // repeated .CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  for (int i = 0; i < this->msgs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->msgs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCConsoleOutput)
  return target;
}

int CMsgGCToGCConsoleOutput::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string initiator = 1;
    if (has_initiator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initiator());
    }

    // optional uint32 sending_gc = 2;
    if (has_sending_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

  }
  // repeated .CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCConsoleOutput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCConsoleOutput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCConsoleOutput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCConsoleOutput::MergeFrom(const CMsgGCToGCConsoleOutput& from) {
  GOOGLE_CHECK_NE(&from, this);
  msgs_.MergeFrom(from.msgs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_initiator()) {
      set_initiator(from.initiator());
    }
    if (from.has_sending_gc()) {
      set_sending_gc(from.sending_gc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCConsoleOutput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCConsoleOutput::CopyFrom(const CMsgGCToGCConsoleOutput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCConsoleOutput::IsInitialized() const {

  return true;
}

void CMsgGCToGCConsoleOutput::Swap(CMsgGCToGCConsoleOutput* other) {
  if (other != this) {
    std::swap(initiator_, other->initiator_);
    std::swap(sending_gc_, other->sending_gc_);
    msgs_.Swap(&other->msgs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCConsoleOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCConsoleOutput_descriptor_;
  metadata.reflection = CMsgGCToGCConsoleOutput_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgItemAges_MaxItemIDTimestamp::kTimestampFieldNumber;
const int CMsgItemAges_MaxItemIDTimestamp::kMaxItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgItemAges_MaxItemIDTimestamp::CMsgItemAges_MaxItemIDTimestamp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgItemAges.MaxItemIDTimestamp)
}

void CMsgItemAges_MaxItemIDTimestamp::InitAsDefaultInstance() {
}

CMsgItemAges_MaxItemIDTimestamp::CMsgItemAges_MaxItemIDTimestamp(const CMsgItemAges_MaxItemIDTimestamp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgItemAges.MaxItemIDTimestamp)
}

void CMsgItemAges_MaxItemIDTimestamp::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = 0u;
  max_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgItemAges_MaxItemIDTimestamp::~CMsgItemAges_MaxItemIDTimestamp() {
  // @@protoc_insertion_point(destructor:CMsgItemAges.MaxItemIDTimestamp)
  SharedDtor();
}

void CMsgItemAges_MaxItemIDTimestamp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgItemAges_MaxItemIDTimestamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemAges_MaxItemIDTimestamp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemAges_MaxItemIDTimestamp_descriptor_;
}

const CMsgItemAges_MaxItemIDTimestamp& CMsgItemAges_MaxItemIDTimestamp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges_MaxItemIDTimestamp::default_instance_ = NULL;

CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges_MaxItemIDTimestamp::New() const {
  return new CMsgItemAges_MaxItemIDTimestamp;
}

void CMsgItemAges_MaxItemIDTimestamp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgItemAges_MaxItemIDTimestamp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(max_item_id_, timestamp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgItemAges_MaxItemIDTimestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgItemAges.MaxItemIDTimestamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_item_id;
        break;
      }

      // optional uint64 max_item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_max_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_item_id_)));
          set_has_max_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgItemAges.MaxItemIDTimestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgItemAges.MaxItemIDTimestamp)
  return false;
#undef DO_
}

void CMsgItemAges_MaxItemIDTimestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgItemAges.MaxItemIDTimestamp)
  // optional uint32 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // optional uint64 max_item_id = 2;
  if (has_max_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgItemAges.MaxItemIDTimestamp)
}

::google::protobuf::uint8* CMsgItemAges_MaxItemIDTimestamp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgItemAges.MaxItemIDTimestamp)
  // optional uint32 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // optional uint64 max_item_id = 2;
  if (has_max_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgItemAges.MaxItemIDTimestamp)
  return target;
}

int CMsgItemAges_MaxItemIDTimestamp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional uint64 max_item_id = 2;
    if (has_max_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemAges_MaxItemIDTimestamp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgItemAges_MaxItemIDTimestamp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgItemAges_MaxItemIDTimestamp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgItemAges_MaxItemIDTimestamp::MergeFrom(const CMsgItemAges_MaxItemIDTimestamp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_max_item_id()) {
      set_max_item_id(from.max_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgItemAges_MaxItemIDTimestamp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemAges_MaxItemIDTimestamp::CopyFrom(const CMsgItemAges_MaxItemIDTimestamp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemAges_MaxItemIDTimestamp::IsInitialized() const {

  return true;
}

void CMsgItemAges_MaxItemIDTimestamp::Swap(CMsgItemAges_MaxItemIDTimestamp* other) {
  if (other != this) {
    std::swap(timestamp_, other->timestamp_);
    std::swap(max_item_id_, other->max_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgItemAges_MaxItemIDTimestamp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgItemAges_MaxItemIDTimestamp_descriptor_;
  metadata.reflection = CMsgItemAges_MaxItemIDTimestamp_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgItemAges::kMaxItemIdTimestampsFieldNumber;
#endif  // !_MSC_VER

CMsgItemAges::CMsgItemAges()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgItemAges)
}

void CMsgItemAges::InitAsDefaultInstance() {
}

CMsgItemAges::CMsgItemAges(const CMsgItemAges& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgItemAges)
}

void CMsgItemAges::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgItemAges::~CMsgItemAges() {
  // @@protoc_insertion_point(destructor:CMsgItemAges)
  SharedDtor();
}

void CMsgItemAges::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgItemAges::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemAges::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemAges_descriptor_;
}

const CMsgItemAges& CMsgItemAges::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgItemAges* CMsgItemAges::default_instance_ = NULL;

CMsgItemAges* CMsgItemAges::New() const {
  return new CMsgItemAges;
}

void CMsgItemAges::Clear() {
  max_item_id_timestamps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgItemAges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgItemAges)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
      case 1: {
        if (tag == 10) {
         parse_max_item_id_timestamps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_max_item_id_timestamps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_max_item_id_timestamps;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgItemAges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgItemAges)
  return false;
#undef DO_
}

void CMsgItemAges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgItemAges)
  // repeated .CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  for (int i = 0; i < this->max_item_id_timestamps_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->max_item_id_timestamps(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgItemAges)
}

::google::protobuf::uint8* CMsgItemAges::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgItemAges)
  // repeated .CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  for (int i = 0; i < this->max_item_id_timestamps_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->max_item_id_timestamps(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgItemAges)
  return target;
}

int CMsgItemAges::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  total_size += 1 * this->max_item_id_timestamps_size();
  for (int i = 0; i < this->max_item_id_timestamps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->max_item_id_timestamps(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemAges::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgItemAges* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgItemAges*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgItemAges::MergeFrom(const CMsgItemAges& from) {
  GOOGLE_CHECK_NE(&from, this);
  max_item_id_timestamps_.MergeFrom(from.max_item_id_timestamps_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgItemAges::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemAges::CopyFrom(const CMsgItemAges& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemAges::IsInitialized() const {

  return true;
}

void CMsgItemAges::Swap(CMsgItemAges* other) {
  if (other != this) {
    max_item_id_timestamps_.Swap(&other->max_item_id_timestamps_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgItemAges::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgItemAges_descriptor_;
  metadata.reflection = CMsgItemAges_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCInternalTestMsg::kSendingGcFieldNumber;
const int CMsgGCToGCInternalTestMsg::kSenderIdFieldNumber;
const int CMsgGCToGCInternalTestMsg::kContextFieldNumber;
const int CMsgGCToGCInternalTestMsg::kMessageIdFieldNumber;
const int CMsgGCToGCInternalTestMsg::kMessageBodyFieldNumber;
const int CMsgGCToGCInternalTestMsg::kJobIdSourceFieldNumber;
const int CMsgGCToGCInternalTestMsg::kJobIdTargetFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCInternalTestMsg::CMsgGCToGCInternalTestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCInternalTestMsg)
}

void CMsgGCToGCInternalTestMsg::InitAsDefaultInstance() {
}

CMsgGCToGCInternalTestMsg::CMsgGCToGCInternalTestMsg(const CMsgGCToGCInternalTestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCInternalTestMsg)
}

void CMsgGCToGCInternalTestMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sending_gc_ = 0u;
  sender_id_ = GOOGLE_ULONGLONG(0);
  context_ = 0u;
  message_id_ = 0u;
  message_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_source_ = GOOGLE_ULONGLONG(0);
  job_id_target_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCInternalTestMsg::~CMsgGCToGCInternalTestMsg() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCInternalTestMsg)
  SharedDtor();
}

void CMsgGCToGCInternalTestMsg::SharedDtor() {
  if (message_body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_body_;
  }
  if (this != default_instance_) {
  }
}

void CMsgGCToGCInternalTestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCInternalTestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCInternalTestMsg_descriptor_;
}

const CMsgGCToGCInternalTestMsg& CMsgGCToGCInternalTestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCInternalTestMsg* CMsgGCToGCInternalTestMsg::default_instance_ = NULL;

CMsgGCToGCInternalTestMsg* CMsgGCToGCInternalTestMsg::New() const {
  return new CMsgGCToGCInternalTestMsg;
}

void CMsgGCToGCInternalTestMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCInternalTestMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(sender_id_, context_);
    ZR_(job_id_source_, message_id_);
    if (has_message_body()) {
      if (message_body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        message_body_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCInternalTestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCInternalTestMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sending_gc = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
          set_has_sending_gc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_sender_id;
        break;
      }

      // optional fixed64 sender_id = 2;
      case 2: {
        if (tag == 17) {
         parse_sender_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sender_id_)));
          set_has_sender_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_context;
        break;
      }

      // optional uint32 context = 3;
      case 3: {
        if (tag == 24) {
         parse_context:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &context_)));
          set_has_context();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_message_id;
        break;
      }

      // optional uint32 message_id = 4;
      case 4: {
        if (tag == 32) {
         parse_message_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_id_)));
          set_has_message_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_message_body;
        break;
      }

      // optional bytes message_body = 5;
      case 5: {
        if (tag == 42) {
         parse_message_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_job_id_source;
        break;
      }

      // optional fixed64 job_id_source = 6;
      case 6: {
        if (tag == 49) {
         parse_job_id_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_source_)));
          set_has_job_id_source();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_job_id_target;
        break;
      }

      // optional fixed64 job_id_target = 7;
      case 7: {
        if (tag == 57) {
         parse_job_id_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_target_)));
          set_has_job_id_target();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCInternalTestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCInternalTestMsg)
  return false;
#undef DO_
}

void CMsgGCToGCInternalTestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCInternalTestMsg)
  // optional uint32 sending_gc = 1;
  if (has_sending_gc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sending_gc(), output);
  }

  // optional fixed64 sender_id = 2;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->sender_id(), output);
  }

  // optional uint32 context = 3;
  if (has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->context(), output);
  }

  // optional uint32 message_id = 4;
  if (has_message_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->message_id(), output);
  }

  // optional bytes message_body = 5;
  if (has_message_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->message_body(), output);
  }

  // optional fixed64 job_id_source = 6;
  if (has_job_id_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(6, this->job_id_source(), output);
  }

  // optional fixed64 job_id_target = 7;
  if (has_job_id_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(7, this->job_id_target(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCInternalTestMsg)
}

::google::protobuf::uint8* CMsgGCToGCInternalTestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCInternalTestMsg)
  // optional uint32 sending_gc = 1;
  if (has_sending_gc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sending_gc(), target);
  }

  // optional fixed64 sender_id = 2;
  if (has_sender_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->sender_id(), target);
  }

  // optional uint32 context = 3;
  if (has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->context(), target);
  }

  // optional uint32 message_id = 4;
  if (has_message_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->message_id(), target);
  }

  // optional bytes message_body = 5;
  if (has_message_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->message_body(), target);
  }

  // optional fixed64 job_id_source = 6;
  if (has_job_id_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(6, this->job_id_source(), target);
  }

  // optional fixed64 job_id_target = 7;
  if (has_job_id_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(7, this->job_id_target(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCInternalTestMsg)
  return target;
}

int CMsgGCToGCInternalTestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 sending_gc = 1;
    if (has_sending_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

    // optional fixed64 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 context = 3;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->context());
    }

    // optional uint32 message_id = 4;
    if (has_message_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->message_id());
    }

    // optional bytes message_body = 5;
    if (has_message_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message_body());
    }

    // optional fixed64 job_id_source = 6;
    if (has_job_id_source()) {
      total_size += 1 + 8;
    }

    // optional fixed64 job_id_target = 7;
    if (has_job_id_target()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCInternalTestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCInternalTestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCInternalTestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCInternalTestMsg::MergeFrom(const CMsgGCToGCInternalTestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sending_gc()) {
      set_sending_gc(from.sending_gc());
    }
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_context()) {
      set_context(from.context());
    }
    if (from.has_message_id()) {
      set_message_id(from.message_id());
    }
    if (from.has_message_body()) {
      set_message_body(from.message_body());
    }
    if (from.has_job_id_source()) {
      set_job_id_source(from.job_id_source());
    }
    if (from.has_job_id_target()) {
      set_job_id_target(from.job_id_target());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCInternalTestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCInternalTestMsg::CopyFrom(const CMsgGCToGCInternalTestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCInternalTestMsg::IsInitialized() const {

  return true;
}

void CMsgGCToGCInternalTestMsg::Swap(CMsgGCToGCInternalTestMsg* other) {
  if (other != this) {
    std::swap(sending_gc_, other->sending_gc_);
    std::swap(sender_id_, other->sender_id_);
    std::swap(context_, other->context_);
    std::swap(message_id_, other->message_id_);
    std::swap(message_body_, other->message_body_);
    std::swap(job_id_source_, other->job_id_source_);
    std::swap(job_id_target_, other->job_id_target_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCInternalTestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCInternalTestMsg_descriptor_;
  metadata.reflection = CMsgGCToGCInternalTestMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCToGCClientServerVersionsUpdated::kClientMinAllowedVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kClientActiveVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kServerActiveVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kServerDeployedVersionFieldNumber;
#endif  // !_MSC_VER

CMsgGCToGCClientServerVersionsUpdated::CMsgGCToGCClientServerVersionsUpdated()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCClientServerVersionsUpdated)
}

void CMsgGCToGCClientServerVersionsUpdated::InitAsDefaultInstance() {
}

CMsgGCToGCClientServerVersionsUpdated::CMsgGCToGCClientServerVersionsUpdated(const CMsgGCToGCClientServerVersionsUpdated& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCClientServerVersionsUpdated)
}

void CMsgGCToGCClientServerVersionsUpdated::SharedCtor() {
  _cached_size_ = 0;
  client_min_allowed_version_ = 0u;
  client_active_version_ = 0u;
  server_active_version_ = 0u;
  server_deployed_version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCToGCClientServerVersionsUpdated::~CMsgGCToGCClientServerVersionsUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCClientServerVersionsUpdated)
  SharedDtor();
}

void CMsgGCToGCClientServerVersionsUpdated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCToGCClientServerVersionsUpdated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCClientServerVersionsUpdated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCToGCClientServerVersionsUpdated_descriptor_;
}

const CMsgGCToGCClientServerVersionsUpdated& CMsgGCToGCClientServerVersionsUpdated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCToGCClientServerVersionsUpdated* CMsgGCToGCClientServerVersionsUpdated::default_instance_ = NULL;

CMsgGCToGCClientServerVersionsUpdated* CMsgGCToGCClientServerVersionsUpdated::New() const {
  return new CMsgGCToGCClientServerVersionsUpdated;
}

void CMsgGCToGCClientServerVersionsUpdated::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgGCToGCClientServerVersionsUpdated*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(client_min_allowed_version_, server_deployed_version_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCToGCClientServerVersionsUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCClientServerVersionsUpdated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 client_min_allowed_version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_min_allowed_version_)));
          set_has_client_min_allowed_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_client_active_version;
        break;
      }

      // optional uint32 client_active_version = 2;
      case 2: {
        if (tag == 16) {
         parse_client_active_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_active_version_)));
          set_has_client_active_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_server_active_version;
        break;
      }

      // optional uint32 server_active_version = 3;
      case 3: {
        if (tag == 24) {
         parse_server_active_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_active_version_)));
          set_has_server_active_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_server_deployed_version;
        break;
      }

      // optional uint32 server_deployed_version = 4;
      case 4: {
        if (tag == 32) {
         parse_server_deployed_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_deployed_version_)));
          set_has_server_deployed_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCClientServerVersionsUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCClientServerVersionsUpdated)
  return false;
#undef DO_
}

void CMsgGCToGCClientServerVersionsUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCClientServerVersionsUpdated)
  // optional uint32 client_min_allowed_version = 1;
  if (has_client_min_allowed_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_min_allowed_version(), output);
  }

  // optional uint32 client_active_version = 2;
  if (has_client_active_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_active_version(), output);
  }

  // optional uint32 server_active_version = 3;
  if (has_server_active_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_active_version(), output);
  }

  // optional uint32 server_deployed_version = 4;
  if (has_server_deployed_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->server_deployed_version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCClientServerVersionsUpdated)
}

::google::protobuf::uint8* CMsgGCToGCClientServerVersionsUpdated::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCClientServerVersionsUpdated)
  // optional uint32 client_min_allowed_version = 1;
  if (has_client_min_allowed_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_min_allowed_version(), target);
  }

  // optional uint32 client_active_version = 2;
  if (has_client_active_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_active_version(), target);
  }

  // optional uint32 server_active_version = 3;
  if (has_server_active_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_active_version(), target);
  }

  // optional uint32 server_deployed_version = 4;
  if (has_server_deployed_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->server_deployed_version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCClientServerVersionsUpdated)
  return target;
}

int CMsgGCToGCClientServerVersionsUpdated::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 client_min_allowed_version = 1;
    if (has_client_min_allowed_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_min_allowed_version());
    }

    // optional uint32 client_active_version = 2;
    if (has_client_active_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_active_version());
    }

    // optional uint32 server_active_version = 3;
    if (has_server_active_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_active_version());
    }

    // optional uint32 server_deployed_version = 4;
    if (has_server_deployed_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_deployed_version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCClientServerVersionsUpdated::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCToGCClientServerVersionsUpdated* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCToGCClientServerVersionsUpdated*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCToGCClientServerVersionsUpdated::MergeFrom(const CMsgGCToGCClientServerVersionsUpdated& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_client_min_allowed_version()) {
      set_client_min_allowed_version(from.client_min_allowed_version());
    }
    if (from.has_client_active_version()) {
      set_client_active_version(from.client_active_version());
    }
    if (from.has_server_active_version()) {
      set_server_active_version(from.server_active_version());
    }
    if (from.has_server_deployed_version()) {
      set_server_deployed_version(from.server_deployed_version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCToGCClientServerVersionsUpdated::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCClientServerVersionsUpdated::CopyFrom(const CMsgGCToGCClientServerVersionsUpdated& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCClientServerVersionsUpdated::IsInitialized() const {

  return true;
}

void CMsgGCToGCClientServerVersionsUpdated::Swap(CMsgGCToGCClientServerVersionsUpdated* other) {
  if (other != this) {
    std::swap(client_min_allowed_version_, other->client_min_allowed_version_);
    std::swap(client_active_version_, other->client_active_version_);
    std::swap(server_active_version_, other->server_active_version_);
    std::swap(server_deployed_version_, other->server_deployed_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCToGCClientServerVersionsUpdated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCToGCClientServerVersionsUpdated_descriptor_;
  metadata.reflection = CMsgGCToGCClientServerVersionsUpdated_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
