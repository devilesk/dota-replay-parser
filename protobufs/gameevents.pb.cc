// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameevents.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gameevents.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgVDebugGameSessionIDEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgVDebugGameSessionIDEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgPlaceDecalEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgPlaceDecalEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClearWorldDecalsEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClearWorldDecalsEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClearEntityDecalsEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClearEntityDecalsEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgClearDecalsForSkeletonInstanceEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgClearDecalsForSkeletonInstanceEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEventList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSource1LegacyGameEventList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEventList_key_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSource1LegacyGameEventList_key_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEventList_descriptor_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSource1LegacyGameEventList_descriptor_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSource1LegacyListenEvents_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSource1LegacyListenEvents_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSource1LegacyGameEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEvent_key_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSource1LegacyGameEvent_key_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSosStartSoundEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSosStartSoundEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSosStopSoundEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSosStopSoundEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSosStopSoundEventHash_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSosStopSoundEventHash_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSosSetSoundEventParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSosSetSoundEventParams_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgSosSetLibraryStackFields_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSosSetLibraryStackFields_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EBaseGameEvents_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_gameevents_2eproto() {
  protobuf_AddDesc_gameevents_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gameevents.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgVDebugGameSessionIDEvent_descriptor_ = file->message_type(0);
  static const int CMsgVDebugGameSessionIDEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgVDebugGameSessionIDEvent, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgVDebugGameSessionIDEvent, gamesessionid_),
  };
  CMsgVDebugGameSessionIDEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgVDebugGameSessionIDEvent_descriptor_,
      CMsgVDebugGameSessionIDEvent::default_instance_,
      CMsgVDebugGameSessionIDEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgVDebugGameSessionIDEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgVDebugGameSessionIDEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgVDebugGameSessionIDEvent));
  CMsgPlaceDecalEvent_descriptor_ = file->message_type(1);
  static const int CMsgPlaceDecalEvent_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, normal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, saxis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, decalmaterialindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, entityhandleindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, skeletoninstancehash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, boneindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, translucenthit_),
  };
  CMsgPlaceDecalEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgPlaceDecalEvent_descriptor_,
      CMsgPlaceDecalEvent::default_instance_,
      CMsgPlaceDecalEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlaceDecalEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgPlaceDecalEvent));
  CMsgClearWorldDecalsEvent_descriptor_ = file->message_type(2);
  static const int CMsgClearWorldDecalsEvent_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearWorldDecalsEvent, flagstoclear_),
  };
  CMsgClearWorldDecalsEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClearWorldDecalsEvent_descriptor_,
      CMsgClearWorldDecalsEvent::default_instance_,
      CMsgClearWorldDecalsEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearWorldDecalsEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearWorldDecalsEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClearWorldDecalsEvent));
  CMsgClearEntityDecalsEvent_descriptor_ = file->message_type(3);
  static const int CMsgClearEntityDecalsEvent_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearEntityDecalsEvent, flagstoclear_),
  };
  CMsgClearEntityDecalsEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClearEntityDecalsEvent_descriptor_,
      CMsgClearEntityDecalsEvent::default_instance_,
      CMsgClearEntityDecalsEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearEntityDecalsEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearEntityDecalsEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClearEntityDecalsEvent));
  CMsgClearDecalsForSkeletonInstanceEvent_descriptor_ = file->message_type(4);
  static const int CMsgClearDecalsForSkeletonInstanceEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearDecalsForSkeletonInstanceEvent, flagstoclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearDecalsForSkeletonInstanceEvent, entityhandleindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearDecalsForSkeletonInstanceEvent, skeletoninstancehash_),
  };
  CMsgClearDecalsForSkeletonInstanceEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgClearDecalsForSkeletonInstanceEvent_descriptor_,
      CMsgClearDecalsForSkeletonInstanceEvent::default_instance_,
      CMsgClearDecalsForSkeletonInstanceEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearDecalsForSkeletonInstanceEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClearDecalsForSkeletonInstanceEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgClearDecalsForSkeletonInstanceEvent));
  CMsgSource1LegacyGameEventList_descriptor_ = file->message_type(5);
  static const int CMsgSource1LegacyGameEventList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList, descriptors_),
  };
  CMsgSource1LegacyGameEventList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSource1LegacyGameEventList_descriptor_,
      CMsgSource1LegacyGameEventList::default_instance_,
      CMsgSource1LegacyGameEventList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSource1LegacyGameEventList));
  CMsgSource1LegacyGameEventList_key_t_descriptor_ = CMsgSource1LegacyGameEventList_descriptor_->nested_type(0);
  static const int CMsgSource1LegacyGameEventList_key_t_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_key_t, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_key_t, name_),
  };
  CMsgSource1LegacyGameEventList_key_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSource1LegacyGameEventList_key_t_descriptor_,
      CMsgSource1LegacyGameEventList_key_t::default_instance_,
      CMsgSource1LegacyGameEventList_key_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_key_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_key_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSource1LegacyGameEventList_key_t));
  CMsgSource1LegacyGameEventList_descriptor_t_descriptor_ = CMsgSource1LegacyGameEventList_descriptor_->nested_type(1);
  static const int CMsgSource1LegacyGameEventList_descriptor_t_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_descriptor_t, eventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_descriptor_t, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_descriptor_t, keys_),
  };
  CMsgSource1LegacyGameEventList_descriptor_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSource1LegacyGameEventList_descriptor_t_descriptor_,
      CMsgSource1LegacyGameEventList_descriptor_t::default_instance_,
      CMsgSource1LegacyGameEventList_descriptor_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_descriptor_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEventList_descriptor_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSource1LegacyGameEventList_descriptor_t));
  CMsgSource1LegacyListenEvents_descriptor_ = file->message_type(6);
  static const int CMsgSource1LegacyListenEvents_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyListenEvents, playerslot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyListenEvents, eventarraybits_),
  };
  CMsgSource1LegacyListenEvents_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSource1LegacyListenEvents_descriptor_,
      CMsgSource1LegacyListenEvents::default_instance_,
      CMsgSource1LegacyListenEvents_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyListenEvents, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyListenEvents, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSource1LegacyListenEvents));
  CMsgSource1LegacyGameEvent_descriptor_ = file->message_type(7);
  static const int CMsgSource1LegacyGameEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent, event_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent, eventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent, keys_),
  };
  CMsgSource1LegacyGameEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSource1LegacyGameEvent_descriptor_,
      CMsgSource1LegacyGameEvent::default_instance_,
      CMsgSource1LegacyGameEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSource1LegacyGameEvent));
  CMsgSource1LegacyGameEvent_key_t_descriptor_ = CMsgSource1LegacyGameEvent_descriptor_->nested_type(0);
  static const int CMsgSource1LegacyGameEvent_key_t_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, val_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, val_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, val_long_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, val_short_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, val_byte_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, val_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, val_uint64_),
  };
  CMsgSource1LegacyGameEvent_key_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSource1LegacyGameEvent_key_t_descriptor_,
      CMsgSource1LegacyGameEvent_key_t::default_instance_,
      CMsgSource1LegacyGameEvent_key_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSource1LegacyGameEvent_key_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSource1LegacyGameEvent_key_t));
  CMsgSosStartSoundEvent_descriptor_ = file->message_type(8);
  static const int CMsgSosStartSoundEvent_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStartSoundEvent, soundevent_guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStartSoundEvent, soundevent_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStartSoundEvent, source_entity_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStartSoundEvent, seed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStartSoundEvent, packed_params_),
  };
  CMsgSosStartSoundEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSosStartSoundEvent_descriptor_,
      CMsgSosStartSoundEvent::default_instance_,
      CMsgSosStartSoundEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStartSoundEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStartSoundEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSosStartSoundEvent));
  CMsgSosStopSoundEvent_descriptor_ = file->message_type(9);
  static const int CMsgSosStopSoundEvent_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStopSoundEvent, soundevent_guid_),
  };
  CMsgSosStopSoundEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSosStopSoundEvent_descriptor_,
      CMsgSosStopSoundEvent::default_instance_,
      CMsgSosStopSoundEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStopSoundEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStopSoundEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSosStopSoundEvent));
  CMsgSosStopSoundEventHash_descriptor_ = file->message_type(10);
  static const int CMsgSosStopSoundEventHash_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStopSoundEventHash, soundevent_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStopSoundEventHash, source_entity_index_),
  };
  CMsgSosStopSoundEventHash_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSosStopSoundEventHash_descriptor_,
      CMsgSosStopSoundEventHash::default_instance_,
      CMsgSosStopSoundEventHash_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStopSoundEventHash, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosStopSoundEventHash, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSosStopSoundEventHash));
  CMsgSosSetSoundEventParams_descriptor_ = file->message_type(11);
  static const int CMsgSosSetSoundEventParams_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetSoundEventParams, soundevent_guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetSoundEventParams, packed_params_),
  };
  CMsgSosSetSoundEventParams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSosSetSoundEventParams_descriptor_,
      CMsgSosSetSoundEventParams::default_instance_,
      CMsgSosSetSoundEventParams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetSoundEventParams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetSoundEventParams, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSosSetSoundEventParams));
  CMsgSosSetLibraryStackFields_descriptor_ = file->message_type(12);
  static const int CMsgSosSetLibraryStackFields_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetLibraryStackFields, stack_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetLibraryStackFields, packed_fields_),
  };
  CMsgSosSetLibraryStackFields_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSosSetLibraryStackFields_descriptor_,
      CMsgSosSetLibraryStackFields::default_instance_,
      CMsgSosSetLibraryStackFields_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetLibraryStackFields, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSosSetLibraryStackFields, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSosSetLibraryStackFields));
  EBaseGameEvents_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gameevents_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgVDebugGameSessionIDEvent_descriptor_, &CMsgVDebugGameSessionIDEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgPlaceDecalEvent_descriptor_, &CMsgPlaceDecalEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClearWorldDecalsEvent_descriptor_, &CMsgClearWorldDecalsEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClearEntityDecalsEvent_descriptor_, &CMsgClearEntityDecalsEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgClearDecalsForSkeletonInstanceEvent_descriptor_, &CMsgClearDecalsForSkeletonInstanceEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSource1LegacyGameEventList_descriptor_, &CMsgSource1LegacyGameEventList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSource1LegacyGameEventList_key_t_descriptor_, &CMsgSource1LegacyGameEventList_key_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSource1LegacyGameEventList_descriptor_t_descriptor_, &CMsgSource1LegacyGameEventList_descriptor_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSource1LegacyListenEvents_descriptor_, &CMsgSource1LegacyListenEvents::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSource1LegacyGameEvent_descriptor_, &CMsgSource1LegacyGameEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSource1LegacyGameEvent_key_t_descriptor_, &CMsgSource1LegacyGameEvent_key_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSosStartSoundEvent_descriptor_, &CMsgSosStartSoundEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSosStopSoundEvent_descriptor_, &CMsgSosStopSoundEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSosStopSoundEventHash_descriptor_, &CMsgSosStopSoundEventHash::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSosSetSoundEventParams_descriptor_, &CMsgSosSetSoundEventParams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSosSetLibraryStackFields_descriptor_, &CMsgSosSetLibraryStackFields::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gameevents_2eproto() {
  delete CMsgVDebugGameSessionIDEvent::default_instance_;
  delete CMsgVDebugGameSessionIDEvent_reflection_;
  delete CMsgPlaceDecalEvent::default_instance_;
  delete CMsgPlaceDecalEvent_reflection_;
  delete CMsgClearWorldDecalsEvent::default_instance_;
  delete CMsgClearWorldDecalsEvent_reflection_;
  delete CMsgClearEntityDecalsEvent::default_instance_;
  delete CMsgClearEntityDecalsEvent_reflection_;
  delete CMsgClearDecalsForSkeletonInstanceEvent::default_instance_;
  delete CMsgClearDecalsForSkeletonInstanceEvent_reflection_;
  delete CMsgSource1LegacyGameEventList::default_instance_;
  delete CMsgSource1LegacyGameEventList_reflection_;
  delete CMsgSource1LegacyGameEventList_key_t::default_instance_;
  delete CMsgSource1LegacyGameEventList_key_t_reflection_;
  delete CMsgSource1LegacyGameEventList_descriptor_t::default_instance_;
  delete CMsgSource1LegacyGameEventList_descriptor_t_reflection_;
  delete CMsgSource1LegacyListenEvents::default_instance_;
  delete CMsgSource1LegacyListenEvents_reflection_;
  delete CMsgSource1LegacyGameEvent::default_instance_;
  delete CMsgSource1LegacyGameEvent_reflection_;
  delete CMsgSource1LegacyGameEvent_key_t::default_instance_;
  delete CMsgSource1LegacyGameEvent_key_t_reflection_;
  delete CMsgSosStartSoundEvent::default_instance_;
  delete CMsgSosStartSoundEvent_reflection_;
  delete CMsgSosStopSoundEvent::default_instance_;
  delete CMsgSosStopSoundEvent_reflection_;
  delete CMsgSosStopSoundEventHash::default_instance_;
  delete CMsgSosStopSoundEventHash_reflection_;
  delete CMsgSosSetSoundEventParams::default_instance_;
  delete CMsgSosSetSoundEventParams_reflection_;
  delete CMsgSosSetLibraryStackFields::default_instance_;
  delete CMsgSosSetLibraryStackFields_reflection_;
}

void protobuf_AddDesc_gameevents_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_networkbasetypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020gameevents.proto\032\026networkbasetypes.pro"
    "to\"G\n\034CMsgVDebugGameSessionIDEvent\022\020\n\010cl"
    "ientid\030\001 \001(\005\022\025\n\rgamesessionid\030\002 \001(\t\"\271\002\n\023"
    "CMsgPlaceDecalEvent\022\035\n\010position\030\001 \001(\0132\013."
    "CMsgVector\022\033\n\006normal\030\002 \001(\0132\013.CMsgVector\022"
    "\032\n\005saxis\030\003 \001(\0132\013.CMsgVector\022\032\n\022decalmate"
    "rialindex\030\004 \001(\r\022\r\n\005flags\030\005 \001(\r\022\r\n\005color\030"
    "\006 \001(\007\022\r\n\005width\030\007 \001(\002\022\016\n\006height\030\010 \001(\002\022\r\n\005"
    "depth\030\t \001(\002\022\031\n\021entityhandleindex\030\n \001(\r\022\034"
    "\n\024skeletoninstancehash\030\013 \001(\007\022\021\n\tboneinde"
    "x\030\014 \001(\005\022\026\n\016translucenthit\030\r \001(\010\"1\n\031CMsgC"
    "learWorldDecalsEvent\022\024\n\014flagstoclear\030\001 \001"
    "(\r\"2\n\032CMsgClearEntityDecalsEvent\022\024\n\014flag"
    "stoclear\030\001 \001(\r\"x\n\'CMsgClearDecalsForSkel"
    "etonInstanceEvent\022\024\n\014flagstoclear\030\001 \001(\r\022"
    "\031\n\021entityhandleindex\030\002 \001(\r\022\034\n\024skeletonin"
    "stancehash\030\003 \001(\r\"\354\001\n\036CMsgSource1LegacyGa"
    "meEventList\022A\n\013descriptors\030\001 \003(\0132,.CMsgS"
    "ource1LegacyGameEventList.descriptor_t\032#"
    "\n\005key_t\022\014\n\004type\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\032b\n\014d"
    "escriptor_t\022\017\n\007eventid\030\001 \001(\005\022\014\n\004name\030\002 \001"
    "(\t\0223\n\004keys\030\003 \003(\0132%.CMsgSource1LegacyGame"
    "EventList.key_t\"K\n\035CMsgSource1LegacyList"
    "enEvents\022\022\n\nplayerslot\030\001 \001(\005\022\026\n\016eventarr"
    "aybits\030\002 \003(\r\"\216\002\n\032CMsgSource1LegacyGameEv"
    "ent\022\022\n\nevent_name\030\001 \001(\t\022\017\n\007eventid\030\002 \001(\005"
    "\022/\n\004keys\030\003 \003(\0132!.CMsgSource1LegacyGameEv"
    "ent.key_t\032\231\001\n\005key_t\022\014\n\004type\030\001 \001(\005\022\022\n\nval"
    "_string\030\002 \001(\t\022\021\n\tval_float\030\003 \001(\002\022\020\n\010val_"
    "long\030\004 \001(\005\022\021\n\tval_short\030\005 \001(\005\022\020\n\010val_byt"
    "e\030\006 \001(\005\022\020\n\010val_bool\030\007 \001(\010\022\022\n\nval_uint64\030"
    "\010 \001(\004\"\214\001\n\026CMsgSosStartSoundEvent\022\027\n\017soun"
    "devent_guid\030\001 \001(\005\022\027\n\017soundevent_hash\030\002 \001"
    "(\007\022\033\n\023source_entity_index\030\003 \001(\005\022\014\n\004seed\030"
    "\004 \001(\005\022\025\n\rpacked_params\030\005 \001(\014\"0\n\025CMsgSosS"
    "topSoundEvent\022\027\n\017soundevent_guid\030\001 \001(\005\"Q"
    "\n\031CMsgSosStopSoundEventHash\022\027\n\017soundeven"
    "t_hash\030\001 \001(\007\022\033\n\023source_entity_index\030\002 \001("
    "\005\"L\n\032CMsgSosSetSoundEventParams\022\027\n\017sound"
    "event_guid\030\001 \001(\005\022\025\n\rpacked_params\030\005 \001(\014\""
    "I\n\034CMsgSosSetLibraryStackFields\022\022\n\nstack"
    "_hash\030\001 \001(\007\022\025\n\rpacked_fields\030\005 \001(\014*\267\003\n\017E"
    "BaseGameEvents\022 \n\033GE_VDebugGameSessionID"
    "Event\020\310\001\022\027\n\022GE_PlaceDecalEvent\020\311\001\022\035\n\030GE_"
    "ClearWorldDecalsEvent\020\312\001\022\036\n\031GE_ClearEnti"
    "tyDecalsEvent\020\313\001\022+\n&GE_ClearDecalsForSke"
    "letonInstanceEvent\020\314\001\022\"\n\035GE_Source1Legac"
    "yGameEventList\020\315\001\022!\n\034GE_Source1LegacyLis"
    "tenEvents\020\316\001\022\036\n\031GE_Source1LegacyGameEven"
    "t\020\317\001\022\032\n\025GE_SosStartSoundEvent\020\320\001\022\031\n\024GE_S"
    "osStopSoundEvent\020\321\001\022\036\n\031GE_SosSetSoundEve"
    "ntParams\020\322\001\022 \n\033GE_SosSetLibraryStackFiel"
    "ds\020\323\001\022\035\n\030GE_SosStopSoundEventHash\020\324\001B\005H\001"
    "\200\001\000", 2123);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gameevents.proto", &protobuf_RegisterTypes);
  CMsgVDebugGameSessionIDEvent::default_instance_ = new CMsgVDebugGameSessionIDEvent();
  CMsgPlaceDecalEvent::default_instance_ = new CMsgPlaceDecalEvent();
  CMsgClearWorldDecalsEvent::default_instance_ = new CMsgClearWorldDecalsEvent();
  CMsgClearEntityDecalsEvent::default_instance_ = new CMsgClearEntityDecalsEvent();
  CMsgClearDecalsForSkeletonInstanceEvent::default_instance_ = new CMsgClearDecalsForSkeletonInstanceEvent();
  CMsgSource1LegacyGameEventList::default_instance_ = new CMsgSource1LegacyGameEventList();
  CMsgSource1LegacyGameEventList_key_t::default_instance_ = new CMsgSource1LegacyGameEventList_key_t();
  CMsgSource1LegacyGameEventList_descriptor_t::default_instance_ = new CMsgSource1LegacyGameEventList_descriptor_t();
  CMsgSource1LegacyListenEvents::default_instance_ = new CMsgSource1LegacyListenEvents();
  CMsgSource1LegacyGameEvent::default_instance_ = new CMsgSource1LegacyGameEvent();
  CMsgSource1LegacyGameEvent_key_t::default_instance_ = new CMsgSource1LegacyGameEvent_key_t();
  CMsgSosStartSoundEvent::default_instance_ = new CMsgSosStartSoundEvent();
  CMsgSosStopSoundEvent::default_instance_ = new CMsgSosStopSoundEvent();
  CMsgSosStopSoundEventHash::default_instance_ = new CMsgSosStopSoundEventHash();
  CMsgSosSetSoundEventParams::default_instance_ = new CMsgSosSetSoundEventParams();
  CMsgSosSetLibraryStackFields::default_instance_ = new CMsgSosSetLibraryStackFields();
  CMsgVDebugGameSessionIDEvent::default_instance_->InitAsDefaultInstance();
  CMsgPlaceDecalEvent::default_instance_->InitAsDefaultInstance();
  CMsgClearWorldDecalsEvent::default_instance_->InitAsDefaultInstance();
  CMsgClearEntityDecalsEvent::default_instance_->InitAsDefaultInstance();
  CMsgClearDecalsForSkeletonInstanceEvent::default_instance_->InitAsDefaultInstance();
  CMsgSource1LegacyGameEventList::default_instance_->InitAsDefaultInstance();
  CMsgSource1LegacyGameEventList_key_t::default_instance_->InitAsDefaultInstance();
  CMsgSource1LegacyGameEventList_descriptor_t::default_instance_->InitAsDefaultInstance();
  CMsgSource1LegacyListenEvents::default_instance_->InitAsDefaultInstance();
  CMsgSource1LegacyGameEvent::default_instance_->InitAsDefaultInstance();
  CMsgSource1LegacyGameEvent_key_t::default_instance_->InitAsDefaultInstance();
  CMsgSosStartSoundEvent::default_instance_->InitAsDefaultInstance();
  CMsgSosStopSoundEvent::default_instance_->InitAsDefaultInstance();
  CMsgSosStopSoundEventHash::default_instance_->InitAsDefaultInstance();
  CMsgSosSetSoundEventParams::default_instance_->InitAsDefaultInstance();
  CMsgSosSetLibraryStackFields::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gameevents_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gameevents_2eproto {
  StaticDescriptorInitializer_gameevents_2eproto() {
    protobuf_AddDesc_gameevents_2eproto();
  }
} static_descriptor_initializer_gameevents_2eproto_;
const ::google::protobuf::EnumDescriptor* EBaseGameEvents_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EBaseGameEvents_descriptor_;
}
bool EBaseGameEvents_IsValid(int value) {
  switch(value) {
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgVDebugGameSessionIDEvent::kClientidFieldNumber;
const int CMsgVDebugGameSessionIDEvent::kGamesessionidFieldNumber;
#endif  // !_MSC_VER

CMsgVDebugGameSessionIDEvent::CMsgVDebugGameSessionIDEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgVDebugGameSessionIDEvent)
}

void CMsgVDebugGameSessionIDEvent::InitAsDefaultInstance() {
}

CMsgVDebugGameSessionIDEvent::CMsgVDebugGameSessionIDEvent(const CMsgVDebugGameSessionIDEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgVDebugGameSessionIDEvent)
}

void CMsgVDebugGameSessionIDEvent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clientid_ = 0;
  gamesessionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgVDebugGameSessionIDEvent::~CMsgVDebugGameSessionIDEvent() {
  // @@protoc_insertion_point(destructor:CMsgVDebugGameSessionIDEvent)
  SharedDtor();
}

void CMsgVDebugGameSessionIDEvent::SharedDtor() {
  if (gamesessionid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gamesessionid_;
  }
  if (this != default_instance_) {
  }
}

void CMsgVDebugGameSessionIDEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgVDebugGameSessionIDEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgVDebugGameSessionIDEvent_descriptor_;
}

const CMsgVDebugGameSessionIDEvent& CMsgVDebugGameSessionIDEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgVDebugGameSessionIDEvent* CMsgVDebugGameSessionIDEvent::default_instance_ = NULL;

CMsgVDebugGameSessionIDEvent* CMsgVDebugGameSessionIDEvent::New() const {
  return new CMsgVDebugGameSessionIDEvent;
}

void CMsgVDebugGameSessionIDEvent::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    clientid_ = 0;
    if (has_gamesessionid()) {
      if (gamesessionid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gamesessionid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgVDebugGameSessionIDEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgVDebugGameSessionIDEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 clientid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
          set_has_clientid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gamesessionid;
        break;
      }

      // optional string gamesessionid = 2;
      case 2: {
        if (tag == 18) {
         parse_gamesessionid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamesessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gamesessionid().data(), this->gamesessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gamesessionid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgVDebugGameSessionIDEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgVDebugGameSessionIDEvent)
  return false;
#undef DO_
}

void CMsgVDebugGameSessionIDEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgVDebugGameSessionIDEvent)
  // optional int32 clientid = 1;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientid(), output);
  }

  // optional string gamesessionid = 2;
  if (has_gamesessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamesessionid().data(), this->gamesessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gamesessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gamesessionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgVDebugGameSessionIDEvent)
}

::google::protobuf::uint8* CMsgVDebugGameSessionIDEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVDebugGameSessionIDEvent)
  // optional int32 clientid = 1;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientid(), target);
  }

  // optional string gamesessionid = 2;
  if (has_gamesessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamesessionid().data(), this->gamesessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gamesessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gamesessionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVDebugGameSessionIDEvent)
  return target;
}

int CMsgVDebugGameSessionIDEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 clientid = 1;
    if (has_clientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clientid());
    }

    // optional string gamesessionid = 2;
    if (has_gamesessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamesessionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgVDebugGameSessionIDEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgVDebugGameSessionIDEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgVDebugGameSessionIDEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgVDebugGameSessionIDEvent::MergeFrom(const CMsgVDebugGameSessionIDEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
    if (from.has_gamesessionid()) {
      set_gamesessionid(from.gamesessionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgVDebugGameSessionIDEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgVDebugGameSessionIDEvent::CopyFrom(const CMsgVDebugGameSessionIDEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgVDebugGameSessionIDEvent::IsInitialized() const {

  return true;
}

void CMsgVDebugGameSessionIDEvent::Swap(CMsgVDebugGameSessionIDEvent* other) {
  if (other != this) {
    std::swap(clientid_, other->clientid_);
    std::swap(gamesessionid_, other->gamesessionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgVDebugGameSessionIDEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgVDebugGameSessionIDEvent_descriptor_;
  metadata.reflection = CMsgVDebugGameSessionIDEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgPlaceDecalEvent::kPositionFieldNumber;
const int CMsgPlaceDecalEvent::kNormalFieldNumber;
const int CMsgPlaceDecalEvent::kSaxisFieldNumber;
const int CMsgPlaceDecalEvent::kDecalmaterialindexFieldNumber;
const int CMsgPlaceDecalEvent::kFlagsFieldNumber;
const int CMsgPlaceDecalEvent::kColorFieldNumber;
const int CMsgPlaceDecalEvent::kWidthFieldNumber;
const int CMsgPlaceDecalEvent::kHeightFieldNumber;
const int CMsgPlaceDecalEvent::kDepthFieldNumber;
const int CMsgPlaceDecalEvent::kEntityhandleindexFieldNumber;
const int CMsgPlaceDecalEvent::kSkeletoninstancehashFieldNumber;
const int CMsgPlaceDecalEvent::kBoneindexFieldNumber;
const int CMsgPlaceDecalEvent::kTranslucenthitFieldNumber;
#endif  // !_MSC_VER

CMsgPlaceDecalEvent::CMsgPlaceDecalEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPlaceDecalEvent)
}

void CMsgPlaceDecalEvent::InitAsDefaultInstance() {
  position_ = const_cast< ::CMsgVector*>(&::CMsgVector::default_instance());
  normal_ = const_cast< ::CMsgVector*>(&::CMsgVector::default_instance());
  saxis_ = const_cast< ::CMsgVector*>(&::CMsgVector::default_instance());
}

CMsgPlaceDecalEvent::CMsgPlaceDecalEvent(const CMsgPlaceDecalEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgPlaceDecalEvent)
}

void CMsgPlaceDecalEvent::SharedCtor() {
  _cached_size_ = 0;
  position_ = NULL;
  normal_ = NULL;
  saxis_ = NULL;
  decalmaterialindex_ = 0u;
  flags_ = 0u;
  color_ = 0u;
  width_ = 0;
  height_ = 0;
  depth_ = 0;
  entityhandleindex_ = 0u;
  skeletoninstancehash_ = 0u;
  boneindex_ = 0;
  translucenthit_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgPlaceDecalEvent::~CMsgPlaceDecalEvent() {
  // @@protoc_insertion_point(destructor:CMsgPlaceDecalEvent)
  SharedDtor();
}

void CMsgPlaceDecalEvent::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
    delete normal_;
    delete saxis_;
  }
}

void CMsgPlaceDecalEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgPlaceDecalEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgPlaceDecalEvent_descriptor_;
}

const CMsgPlaceDecalEvent& CMsgPlaceDecalEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgPlaceDecalEvent* CMsgPlaceDecalEvent::default_instance_ = NULL;

CMsgPlaceDecalEvent* CMsgPlaceDecalEvent::New() const {
  return new CMsgPlaceDecalEvent;
}

void CMsgPlaceDecalEvent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgPlaceDecalEvent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(decalmaterialindex_, height_);
    if (has_position()) {
      if (position_ != NULL) position_->::CMsgVector::Clear();
    }
    if (has_normal()) {
      if (normal_ != NULL) normal_->::CMsgVector::Clear();
    }
    if (has_saxis()) {
      if (saxis_ != NULL) saxis_->::CMsgVector::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(depth_, translucenthit_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgPlaceDecalEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPlaceDecalEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector position = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_normal;
        break;
      }

      // optional .CMsgVector normal = 2;
      case 2: {
        if (tag == 18) {
         parse_normal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_normal()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_saxis;
        break;
      }

      // optional .CMsgVector saxis = 3;
      case 3: {
        if (tag == 26) {
         parse_saxis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_saxis()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_decalmaterialindex;
        break;
      }

      // optional uint32 decalmaterialindex = 4;
      case 4: {
        if (tag == 32) {
         parse_decalmaterialindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &decalmaterialindex_)));
          set_has_decalmaterialindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_flags;
        break;
      }

      // optional uint32 flags = 5;
      case 5: {
        if (tag == 40) {
         parse_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
          set_has_flags();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_color;
        break;
      }

      // optional fixed32 color = 6;
      case 6: {
        if (tag == 53) {
         parse_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_width;
        break;
      }

      // optional float width = 7;
      case 7: {
        if (tag == 61) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_height;
        break;
      }

      // optional float height = 8;
      case 8: {
        if (tag == 69) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_depth;
        break;
      }

      // optional float depth = 9;
      case 9: {
        if (tag == 77) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &depth_)));
          set_has_depth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_entityhandleindex;
        break;
      }

      // optional uint32 entityhandleindex = 10;
      case 10: {
        if (tag == 80) {
         parse_entityhandleindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityhandleindex_)));
          set_has_entityhandleindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_skeletoninstancehash;
        break;
      }

      // optional fixed32 skeletoninstancehash = 11;
      case 11: {
        if (tag == 93) {
         parse_skeletoninstancehash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &skeletoninstancehash_)));
          set_has_skeletoninstancehash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_boneindex;
        break;
      }

      // optional int32 boneindex = 12;
      case 12: {
        if (tag == 96) {
         parse_boneindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boneindex_)));
          set_has_boneindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_translucenthit;
        break;
      }

      // optional bool translucenthit = 13;
      case 13: {
        if (tag == 104) {
         parse_translucenthit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &translucenthit_)));
          set_has_translucenthit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPlaceDecalEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPlaceDecalEvent)
  return false;
#undef DO_
}

void CMsgPlaceDecalEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPlaceDecalEvent)
  // optional .CMsgVector position = 1;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->position(), output);
  }

  // optional .CMsgVector normal = 2;
  if (has_normal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->normal(), output);
  }

  // optional .CMsgVector saxis = 3;
  if (has_saxis()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->saxis(), output);
  }

  // optional uint32 decalmaterialindex = 4;
  if (has_decalmaterialindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->decalmaterialindex(), output);
  }

  // optional uint32 flags = 5;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flags(), output);
  }

  // optional fixed32 color = 6;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->color(), output);
  }

  // optional float width = 7;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->width(), output);
  }

  // optional float height = 8;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->height(), output);
  }

  // optional float depth = 9;
  if (has_depth()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->depth(), output);
  }

  // optional uint32 entityhandleindex = 10;
  if (has_entityhandleindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->entityhandleindex(), output);
  }

  // optional fixed32 skeletoninstancehash = 11;
  if (has_skeletoninstancehash()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(11, this->skeletoninstancehash(), output);
  }

  // optional int32 boneindex = 12;
  if (has_boneindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->boneindex(), output);
  }

  // optional bool translucenthit = 13;
  if (has_translucenthit()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->translucenthit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPlaceDecalEvent)
}

::google::protobuf::uint8* CMsgPlaceDecalEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlaceDecalEvent)
  // optional .CMsgVector position = 1;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->position(), target);
  }

  // optional .CMsgVector normal = 2;
  if (has_normal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->normal(), target);
  }

  // optional .CMsgVector saxis = 3;
  if (has_saxis()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->saxis(), target);
  }

  // optional uint32 decalmaterialindex = 4;
  if (has_decalmaterialindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->decalmaterialindex(), target);
  }

  // optional uint32 flags = 5;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flags(), target);
  }

  // optional fixed32 color = 6;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->color(), target);
  }

  // optional float width = 7;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->width(), target);
  }

  // optional float height = 8;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->height(), target);
  }

  // optional float depth = 9;
  if (has_depth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->depth(), target);
  }

  // optional uint32 entityhandleindex = 10;
  if (has_entityhandleindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->entityhandleindex(), target);
  }

  // optional fixed32 skeletoninstancehash = 11;
  if (has_skeletoninstancehash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(11, this->skeletoninstancehash(), target);
  }

  // optional int32 boneindex = 12;
  if (has_boneindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->boneindex(), target);
  }

  // optional bool translucenthit = 13;
  if (has_translucenthit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->translucenthit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlaceDecalEvent)
  return target;
}

int CMsgPlaceDecalEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CMsgVector position = 1;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // optional .CMsgVector normal = 2;
    if (has_normal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->normal());
    }

    // optional .CMsgVector saxis = 3;
    if (has_saxis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->saxis());
    }

    // optional uint32 decalmaterialindex = 4;
    if (has_decalmaterialindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->decalmaterialindex());
    }

    // optional uint32 flags = 5;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional fixed32 color = 6;
    if (has_color()) {
      total_size += 1 + 4;
    }

    // optional float width = 7;
    if (has_width()) {
      total_size += 1 + 4;
    }

    // optional float height = 8;
    if (has_height()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional float depth = 9;
    if (has_depth()) {
      total_size += 1 + 4;
    }

    // optional uint32 entityhandleindex = 10;
    if (has_entityhandleindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entityhandleindex());
    }

    // optional fixed32 skeletoninstancehash = 11;
    if (has_skeletoninstancehash()) {
      total_size += 1 + 4;
    }

    // optional int32 boneindex = 12;
    if (has_boneindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boneindex());
    }

    // optional bool translucenthit = 13;
    if (has_translucenthit()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgPlaceDecalEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgPlaceDecalEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgPlaceDecalEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgPlaceDecalEvent::MergeFrom(const CMsgPlaceDecalEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_position()) {
      mutable_position()->::CMsgVector::MergeFrom(from.position());
    }
    if (from.has_normal()) {
      mutable_normal()->::CMsgVector::MergeFrom(from.normal());
    }
    if (from.has_saxis()) {
      mutable_saxis()->::CMsgVector::MergeFrom(from.saxis());
    }
    if (from.has_decalmaterialindex()) {
      set_decalmaterialindex(from.decalmaterialindex());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_depth()) {
      set_depth(from.depth());
    }
    if (from.has_entityhandleindex()) {
      set_entityhandleindex(from.entityhandleindex());
    }
    if (from.has_skeletoninstancehash()) {
      set_skeletoninstancehash(from.skeletoninstancehash());
    }
    if (from.has_boneindex()) {
      set_boneindex(from.boneindex());
    }
    if (from.has_translucenthit()) {
      set_translucenthit(from.translucenthit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgPlaceDecalEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPlaceDecalEvent::CopyFrom(const CMsgPlaceDecalEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPlaceDecalEvent::IsInitialized() const {

  return true;
}

void CMsgPlaceDecalEvent::Swap(CMsgPlaceDecalEvent* other) {
  if (other != this) {
    std::swap(position_, other->position_);
    std::swap(normal_, other->normal_);
    std::swap(saxis_, other->saxis_);
    std::swap(decalmaterialindex_, other->decalmaterialindex_);
    std::swap(flags_, other->flags_);
    std::swap(color_, other->color_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(depth_, other->depth_);
    std::swap(entityhandleindex_, other->entityhandleindex_);
    std::swap(skeletoninstancehash_, other->skeletoninstancehash_);
    std::swap(boneindex_, other->boneindex_);
    std::swap(translucenthit_, other->translucenthit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgPlaceDecalEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgPlaceDecalEvent_descriptor_;
  metadata.reflection = CMsgPlaceDecalEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClearWorldDecalsEvent::kFlagstoclearFieldNumber;
#endif  // !_MSC_VER

CMsgClearWorldDecalsEvent::CMsgClearWorldDecalsEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClearWorldDecalsEvent)
}

void CMsgClearWorldDecalsEvent::InitAsDefaultInstance() {
}

CMsgClearWorldDecalsEvent::CMsgClearWorldDecalsEvent(const CMsgClearWorldDecalsEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClearWorldDecalsEvent)
}

void CMsgClearWorldDecalsEvent::SharedCtor() {
  _cached_size_ = 0;
  flagstoclear_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClearWorldDecalsEvent::~CMsgClearWorldDecalsEvent() {
  // @@protoc_insertion_point(destructor:CMsgClearWorldDecalsEvent)
  SharedDtor();
}

void CMsgClearWorldDecalsEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClearWorldDecalsEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClearWorldDecalsEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClearWorldDecalsEvent_descriptor_;
}

const CMsgClearWorldDecalsEvent& CMsgClearWorldDecalsEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgClearWorldDecalsEvent* CMsgClearWorldDecalsEvent::default_instance_ = NULL;

CMsgClearWorldDecalsEvent* CMsgClearWorldDecalsEvent::New() const {
  return new CMsgClearWorldDecalsEvent;
}

void CMsgClearWorldDecalsEvent::Clear() {
  flagstoclear_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClearWorldDecalsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClearWorldDecalsEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flagstoclear_)));
          set_has_flagstoclear();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClearWorldDecalsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClearWorldDecalsEvent)
  return false;
#undef DO_
}

void CMsgClearWorldDecalsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClearWorldDecalsEvent)
  // optional uint32 flagstoclear = 1;
  if (has_flagstoclear()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flagstoclear(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClearWorldDecalsEvent)
}

::google::protobuf::uint8* CMsgClearWorldDecalsEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClearWorldDecalsEvent)
  // optional uint32 flagstoclear = 1;
  if (has_flagstoclear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flagstoclear(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClearWorldDecalsEvent)
  return target;
}

int CMsgClearWorldDecalsEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 flagstoclear = 1;
    if (has_flagstoclear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flagstoclear());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClearWorldDecalsEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClearWorldDecalsEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClearWorldDecalsEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClearWorldDecalsEvent::MergeFrom(const CMsgClearWorldDecalsEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flagstoclear()) {
      set_flagstoclear(from.flagstoclear());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClearWorldDecalsEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearWorldDecalsEvent::CopyFrom(const CMsgClearWorldDecalsEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearWorldDecalsEvent::IsInitialized() const {

  return true;
}

void CMsgClearWorldDecalsEvent::Swap(CMsgClearWorldDecalsEvent* other) {
  if (other != this) {
    std::swap(flagstoclear_, other->flagstoclear_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClearWorldDecalsEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClearWorldDecalsEvent_descriptor_;
  metadata.reflection = CMsgClearWorldDecalsEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClearEntityDecalsEvent::kFlagstoclearFieldNumber;
#endif  // !_MSC_VER

CMsgClearEntityDecalsEvent::CMsgClearEntityDecalsEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClearEntityDecalsEvent)
}

void CMsgClearEntityDecalsEvent::InitAsDefaultInstance() {
}

CMsgClearEntityDecalsEvent::CMsgClearEntityDecalsEvent(const CMsgClearEntityDecalsEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClearEntityDecalsEvent)
}

void CMsgClearEntityDecalsEvent::SharedCtor() {
  _cached_size_ = 0;
  flagstoclear_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClearEntityDecalsEvent::~CMsgClearEntityDecalsEvent() {
  // @@protoc_insertion_point(destructor:CMsgClearEntityDecalsEvent)
  SharedDtor();
}

void CMsgClearEntityDecalsEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClearEntityDecalsEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClearEntityDecalsEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClearEntityDecalsEvent_descriptor_;
}

const CMsgClearEntityDecalsEvent& CMsgClearEntityDecalsEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgClearEntityDecalsEvent* CMsgClearEntityDecalsEvent::default_instance_ = NULL;

CMsgClearEntityDecalsEvent* CMsgClearEntityDecalsEvent::New() const {
  return new CMsgClearEntityDecalsEvent;
}

void CMsgClearEntityDecalsEvent::Clear() {
  flagstoclear_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClearEntityDecalsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClearEntityDecalsEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flagstoclear_)));
          set_has_flagstoclear();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClearEntityDecalsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClearEntityDecalsEvent)
  return false;
#undef DO_
}

void CMsgClearEntityDecalsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClearEntityDecalsEvent)
  // optional uint32 flagstoclear = 1;
  if (has_flagstoclear()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flagstoclear(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClearEntityDecalsEvent)
}

::google::protobuf::uint8* CMsgClearEntityDecalsEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClearEntityDecalsEvent)
  // optional uint32 flagstoclear = 1;
  if (has_flagstoclear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flagstoclear(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClearEntityDecalsEvent)
  return target;
}

int CMsgClearEntityDecalsEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 flagstoclear = 1;
    if (has_flagstoclear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flagstoclear());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClearEntityDecalsEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClearEntityDecalsEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClearEntityDecalsEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClearEntityDecalsEvent::MergeFrom(const CMsgClearEntityDecalsEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flagstoclear()) {
      set_flagstoclear(from.flagstoclear());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClearEntityDecalsEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearEntityDecalsEvent::CopyFrom(const CMsgClearEntityDecalsEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearEntityDecalsEvent::IsInitialized() const {

  return true;
}

void CMsgClearEntityDecalsEvent::Swap(CMsgClearEntityDecalsEvent* other) {
  if (other != this) {
    std::swap(flagstoclear_, other->flagstoclear_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClearEntityDecalsEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClearEntityDecalsEvent_descriptor_;
  metadata.reflection = CMsgClearEntityDecalsEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgClearDecalsForSkeletonInstanceEvent::kFlagstoclearFieldNumber;
const int CMsgClearDecalsForSkeletonInstanceEvent::kEntityhandleindexFieldNumber;
const int CMsgClearDecalsForSkeletonInstanceEvent::kSkeletoninstancehashFieldNumber;
#endif  // !_MSC_VER

CMsgClearDecalsForSkeletonInstanceEvent::CMsgClearDecalsForSkeletonInstanceEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClearDecalsForSkeletonInstanceEvent)
}

void CMsgClearDecalsForSkeletonInstanceEvent::InitAsDefaultInstance() {
}

CMsgClearDecalsForSkeletonInstanceEvent::CMsgClearDecalsForSkeletonInstanceEvent(const CMsgClearDecalsForSkeletonInstanceEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgClearDecalsForSkeletonInstanceEvent)
}

void CMsgClearDecalsForSkeletonInstanceEvent::SharedCtor() {
  _cached_size_ = 0;
  flagstoclear_ = 0u;
  entityhandleindex_ = 0u;
  skeletoninstancehash_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgClearDecalsForSkeletonInstanceEvent::~CMsgClearDecalsForSkeletonInstanceEvent() {
  // @@protoc_insertion_point(destructor:CMsgClearDecalsForSkeletonInstanceEvent)
  SharedDtor();
}

void CMsgClearDecalsForSkeletonInstanceEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgClearDecalsForSkeletonInstanceEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClearDecalsForSkeletonInstanceEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgClearDecalsForSkeletonInstanceEvent_descriptor_;
}

const CMsgClearDecalsForSkeletonInstanceEvent& CMsgClearDecalsForSkeletonInstanceEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgClearDecalsForSkeletonInstanceEvent* CMsgClearDecalsForSkeletonInstanceEvent::default_instance_ = NULL;

CMsgClearDecalsForSkeletonInstanceEvent* CMsgClearDecalsForSkeletonInstanceEvent::New() const {
  return new CMsgClearDecalsForSkeletonInstanceEvent;
}

void CMsgClearDecalsForSkeletonInstanceEvent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgClearDecalsForSkeletonInstanceEvent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(flagstoclear_, skeletoninstancehash_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgClearDecalsForSkeletonInstanceEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClearDecalsForSkeletonInstanceEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flagstoclear_)));
          set_has_flagstoclear();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_entityhandleindex;
        break;
      }

      // optional uint32 entityhandleindex = 2;
      case 2: {
        if (tag == 16) {
         parse_entityhandleindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityhandleindex_)));
          set_has_entityhandleindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_skeletoninstancehash;
        break;
      }

      // optional uint32 skeletoninstancehash = 3;
      case 3: {
        if (tag == 24) {
         parse_skeletoninstancehash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skeletoninstancehash_)));
          set_has_skeletoninstancehash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClearDecalsForSkeletonInstanceEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClearDecalsForSkeletonInstanceEvent)
  return false;
#undef DO_
}

void CMsgClearDecalsForSkeletonInstanceEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClearDecalsForSkeletonInstanceEvent)
  // optional uint32 flagstoclear = 1;
  if (has_flagstoclear()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flagstoclear(), output);
  }

  // optional uint32 entityhandleindex = 2;
  if (has_entityhandleindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entityhandleindex(), output);
  }

  // optional uint32 skeletoninstancehash = 3;
  if (has_skeletoninstancehash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->skeletoninstancehash(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClearDecalsForSkeletonInstanceEvent)
}

::google::protobuf::uint8* CMsgClearDecalsForSkeletonInstanceEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClearDecalsForSkeletonInstanceEvent)
  // optional uint32 flagstoclear = 1;
  if (has_flagstoclear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flagstoclear(), target);
  }

  // optional uint32 entityhandleindex = 2;
  if (has_entityhandleindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entityhandleindex(), target);
  }

  // optional uint32 skeletoninstancehash = 3;
  if (has_skeletoninstancehash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->skeletoninstancehash(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClearDecalsForSkeletonInstanceEvent)
  return target;
}

int CMsgClearDecalsForSkeletonInstanceEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 flagstoclear = 1;
    if (has_flagstoclear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flagstoclear());
    }

    // optional uint32 entityhandleindex = 2;
    if (has_entityhandleindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entityhandleindex());
    }

    // optional uint32 skeletoninstancehash = 3;
    if (has_skeletoninstancehash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skeletoninstancehash());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClearDecalsForSkeletonInstanceEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgClearDecalsForSkeletonInstanceEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgClearDecalsForSkeletonInstanceEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgClearDecalsForSkeletonInstanceEvent::MergeFrom(const CMsgClearDecalsForSkeletonInstanceEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flagstoclear()) {
      set_flagstoclear(from.flagstoclear());
    }
    if (from.has_entityhandleindex()) {
      set_entityhandleindex(from.entityhandleindex());
    }
    if (from.has_skeletoninstancehash()) {
      set_skeletoninstancehash(from.skeletoninstancehash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgClearDecalsForSkeletonInstanceEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearDecalsForSkeletonInstanceEvent::CopyFrom(const CMsgClearDecalsForSkeletonInstanceEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearDecalsForSkeletonInstanceEvent::IsInitialized() const {

  return true;
}

void CMsgClearDecalsForSkeletonInstanceEvent::Swap(CMsgClearDecalsForSkeletonInstanceEvent* other) {
  if (other != this) {
    std::swap(flagstoclear_, other->flagstoclear_);
    std::swap(entityhandleindex_, other->entityhandleindex_);
    std::swap(skeletoninstancehash_, other->skeletoninstancehash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgClearDecalsForSkeletonInstanceEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgClearDecalsForSkeletonInstanceEvent_descriptor_;
  metadata.reflection = CMsgClearDecalsForSkeletonInstanceEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSource1LegacyGameEventList_key_t::kTypeFieldNumber;
const int CMsgSource1LegacyGameEventList_key_t::kNameFieldNumber;
#endif  // !_MSC_VER

CMsgSource1LegacyGameEventList_key_t::CMsgSource1LegacyGameEventList_key_t()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSource1LegacyGameEventList.key_t)
}

void CMsgSource1LegacyGameEventList_key_t::InitAsDefaultInstance() {
}

CMsgSource1LegacyGameEventList_key_t::CMsgSource1LegacyGameEventList_key_t(const CMsgSource1LegacyGameEventList_key_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSource1LegacyGameEventList.key_t)
}

void CMsgSource1LegacyGameEventList_key_t::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSource1LegacyGameEventList_key_t::~CMsgSource1LegacyGameEventList_key_t() {
  // @@protoc_insertion_point(destructor:CMsgSource1LegacyGameEventList.key_t)
  SharedDtor();
}

void CMsgSource1LegacyGameEventList_key_t::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgSource1LegacyGameEventList_key_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEventList_key_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSource1LegacyGameEventList_key_t_descriptor_;
}

const CMsgSource1LegacyGameEventList_key_t& CMsgSource1LegacyGameEventList_key_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSource1LegacyGameEventList_key_t* CMsgSource1LegacyGameEventList_key_t::default_instance_ = NULL;

CMsgSource1LegacyGameEventList_key_t* CMsgSource1LegacyGameEventList_key_t::New() const {
  return new CMsgSource1LegacyGameEventList_key_t;
}

void CMsgSource1LegacyGameEventList_key_t::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSource1LegacyGameEventList_key_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSource1LegacyGameEventList.key_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSource1LegacyGameEventList.key_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSource1LegacyGameEventList.key_t)
  return false;
#undef DO_
}

void CMsgSource1LegacyGameEventList_key_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSource1LegacyGameEventList.key_t)
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSource1LegacyGameEventList.key_t)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEventList_key_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSource1LegacyGameEventList.key_t)
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSource1LegacyGameEventList.key_t)
  return target;
}

int CMsgSource1LegacyGameEventList_key_t::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSource1LegacyGameEventList_key_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSource1LegacyGameEventList_key_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSource1LegacyGameEventList_key_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEventList_key_t::MergeFrom(const CMsgSource1LegacyGameEventList_key_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSource1LegacyGameEventList_key_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEventList_key_t::CopyFrom(const CMsgSource1LegacyGameEventList_key_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEventList_key_t::IsInitialized() const {

  return true;
}

void CMsgSource1LegacyGameEventList_key_t::Swap(CMsgSource1LegacyGameEventList_key_t* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSource1LegacyGameEventList_key_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSource1LegacyGameEventList_key_t_descriptor_;
  metadata.reflection = CMsgSource1LegacyGameEventList_key_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgSource1LegacyGameEventList_descriptor_t::kEventidFieldNumber;
const int CMsgSource1LegacyGameEventList_descriptor_t::kNameFieldNumber;
const int CMsgSource1LegacyGameEventList_descriptor_t::kKeysFieldNumber;
#endif  // !_MSC_VER

CMsgSource1LegacyGameEventList_descriptor_t::CMsgSource1LegacyGameEventList_descriptor_t()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSource1LegacyGameEventList.descriptor_t)
}

void CMsgSource1LegacyGameEventList_descriptor_t::InitAsDefaultInstance() {
}

CMsgSource1LegacyGameEventList_descriptor_t::CMsgSource1LegacyGameEventList_descriptor_t(const CMsgSource1LegacyGameEventList_descriptor_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSource1LegacyGameEventList.descriptor_t)
}

void CMsgSource1LegacyGameEventList_descriptor_t::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eventid_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSource1LegacyGameEventList_descriptor_t::~CMsgSource1LegacyGameEventList_descriptor_t() {
  // @@protoc_insertion_point(destructor:CMsgSource1LegacyGameEventList.descriptor_t)
  SharedDtor();
}

void CMsgSource1LegacyGameEventList_descriptor_t::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgSource1LegacyGameEventList_descriptor_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEventList_descriptor_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSource1LegacyGameEventList_descriptor_t_descriptor_;
}

const CMsgSource1LegacyGameEventList_descriptor_t& CMsgSource1LegacyGameEventList_descriptor_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSource1LegacyGameEventList_descriptor_t* CMsgSource1LegacyGameEventList_descriptor_t::default_instance_ = NULL;

CMsgSource1LegacyGameEventList_descriptor_t* CMsgSource1LegacyGameEventList_descriptor_t::New() const {
  return new CMsgSource1LegacyGameEventList_descriptor_t;
}

void CMsgSource1LegacyGameEventList_descriptor_t::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    eventid_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  keys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSource1LegacyGameEventList_descriptor_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSource1LegacyGameEventList.descriptor_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eventid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
          set_has_eventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_keys;
        break;
      }

      // repeated .CMsgSource1LegacyGameEventList.key_t keys = 3;
      case 3: {
        if (tag == 26) {
         parse_keys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_keys;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSource1LegacyGameEventList.descriptor_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSource1LegacyGameEventList.descriptor_t)
  return false;
#undef DO_
}

void CMsgSource1LegacyGameEventList_descriptor_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSource1LegacyGameEventList.descriptor_t)
  // optional int32 eventid = 1;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eventid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .CMsgSource1LegacyGameEventList.key_t keys = 3;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->keys(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSource1LegacyGameEventList.descriptor_t)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEventList_descriptor_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSource1LegacyGameEventList.descriptor_t)
  // optional int32 eventid = 1;
  if (has_eventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eventid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .CMsgSource1LegacyGameEventList.key_t keys = 3;
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->keys(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSource1LegacyGameEventList.descriptor_t)
  return target;
}

int CMsgSource1LegacyGameEventList_descriptor_t::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 eventid = 1;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .CMsgSource1LegacyGameEventList.key_t keys = 3;
  total_size += 1 * this->keys_size();
  for (int i = 0; i < this->keys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->keys(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSource1LegacyGameEventList_descriptor_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSource1LegacyGameEventList_descriptor_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSource1LegacyGameEventList_descriptor_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEventList_descriptor_t::MergeFrom(const CMsgSource1LegacyGameEventList_descriptor_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  keys_.MergeFrom(from.keys_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eventid()) {
      set_eventid(from.eventid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSource1LegacyGameEventList_descriptor_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEventList_descriptor_t::CopyFrom(const CMsgSource1LegacyGameEventList_descriptor_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEventList_descriptor_t::IsInitialized() const {

  return true;
}

void CMsgSource1LegacyGameEventList_descriptor_t::Swap(CMsgSource1LegacyGameEventList_descriptor_t* other) {
  if (other != this) {
    std::swap(eventid_, other->eventid_);
    std::swap(name_, other->name_);
    keys_.Swap(&other->keys_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSource1LegacyGameEventList_descriptor_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSource1LegacyGameEventList_descriptor_t_descriptor_;
  metadata.reflection = CMsgSource1LegacyGameEventList_descriptor_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgSource1LegacyGameEventList::kDescriptorsFieldNumber;
#endif  // !_MSC_VER

CMsgSource1LegacyGameEventList::CMsgSource1LegacyGameEventList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSource1LegacyGameEventList)
}

void CMsgSource1LegacyGameEventList::InitAsDefaultInstance() {
}

CMsgSource1LegacyGameEventList::CMsgSource1LegacyGameEventList(const CMsgSource1LegacyGameEventList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSource1LegacyGameEventList)
}

void CMsgSource1LegacyGameEventList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSource1LegacyGameEventList::~CMsgSource1LegacyGameEventList() {
  // @@protoc_insertion_point(destructor:CMsgSource1LegacyGameEventList)
  SharedDtor();
}

void CMsgSource1LegacyGameEventList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSource1LegacyGameEventList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEventList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSource1LegacyGameEventList_descriptor_;
}

const CMsgSource1LegacyGameEventList& CMsgSource1LegacyGameEventList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSource1LegacyGameEventList* CMsgSource1LegacyGameEventList::default_instance_ = NULL;

CMsgSource1LegacyGameEventList* CMsgSource1LegacyGameEventList::New() const {
  return new CMsgSource1LegacyGameEventList;
}

void CMsgSource1LegacyGameEventList::Clear() {
  descriptors_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSource1LegacyGameEventList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSource1LegacyGameEventList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
      case 1: {
        if (tag == 10) {
         parse_descriptors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_descriptors;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSource1LegacyGameEventList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSource1LegacyGameEventList)
  return false;
#undef DO_
}

void CMsgSource1LegacyGameEventList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSource1LegacyGameEventList)
  // repeated .CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
  for (int i = 0; i < this->descriptors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->descriptors(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSource1LegacyGameEventList)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEventList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSource1LegacyGameEventList)
  // repeated .CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
  for (int i = 0; i < this->descriptors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->descriptors(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSource1LegacyGameEventList)
  return target;
}

int CMsgSource1LegacyGameEventList::ByteSize() const {
  int total_size = 0;

  // repeated .CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
  total_size += 1 * this->descriptors_size();
  for (int i = 0; i < this->descriptors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->descriptors(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSource1LegacyGameEventList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSource1LegacyGameEventList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSource1LegacyGameEventList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEventList::MergeFrom(const CMsgSource1LegacyGameEventList& from) {
  GOOGLE_CHECK_NE(&from, this);
  descriptors_.MergeFrom(from.descriptors_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSource1LegacyGameEventList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEventList::CopyFrom(const CMsgSource1LegacyGameEventList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEventList::IsInitialized() const {

  return true;
}

void CMsgSource1LegacyGameEventList::Swap(CMsgSource1LegacyGameEventList* other) {
  if (other != this) {
    descriptors_.Swap(&other->descriptors_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSource1LegacyGameEventList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSource1LegacyGameEventList_descriptor_;
  metadata.reflection = CMsgSource1LegacyGameEventList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSource1LegacyListenEvents::kPlayerslotFieldNumber;
const int CMsgSource1LegacyListenEvents::kEventarraybitsFieldNumber;
#endif  // !_MSC_VER

CMsgSource1LegacyListenEvents::CMsgSource1LegacyListenEvents()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSource1LegacyListenEvents)
}

void CMsgSource1LegacyListenEvents::InitAsDefaultInstance() {
}

CMsgSource1LegacyListenEvents::CMsgSource1LegacyListenEvents(const CMsgSource1LegacyListenEvents& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSource1LegacyListenEvents)
}

void CMsgSource1LegacyListenEvents::SharedCtor() {
  _cached_size_ = 0;
  playerslot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSource1LegacyListenEvents::~CMsgSource1LegacyListenEvents() {
  // @@protoc_insertion_point(destructor:CMsgSource1LegacyListenEvents)
  SharedDtor();
}

void CMsgSource1LegacyListenEvents::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSource1LegacyListenEvents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSource1LegacyListenEvents::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSource1LegacyListenEvents_descriptor_;
}

const CMsgSource1LegacyListenEvents& CMsgSource1LegacyListenEvents::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSource1LegacyListenEvents* CMsgSource1LegacyListenEvents::default_instance_ = NULL;

CMsgSource1LegacyListenEvents* CMsgSource1LegacyListenEvents::New() const {
  return new CMsgSource1LegacyListenEvents;
}

void CMsgSource1LegacyListenEvents::Clear() {
  playerslot_ = 0;
  eventarraybits_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSource1LegacyListenEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSource1LegacyListenEvents)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 playerslot = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerslot_)));
          set_has_playerslot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eventarraybits;
        break;
      }

      // repeated uint32 eventarraybits = 2;
      case 2: {
        if (tag == 16) {
         parse_eventarraybits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_eventarraybits())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eventarraybits())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eventarraybits;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSource1LegacyListenEvents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSource1LegacyListenEvents)
  return false;
#undef DO_
}

void CMsgSource1LegacyListenEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSource1LegacyListenEvents)
  // optional int32 playerslot = 1;
  if (has_playerslot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerslot(), output);
  }

  // repeated uint32 eventarraybits = 2;
  for (int i = 0; i < this->eventarraybits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->eventarraybits(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSource1LegacyListenEvents)
}

::google::protobuf::uint8* CMsgSource1LegacyListenEvents::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSource1LegacyListenEvents)
  // optional int32 playerslot = 1;
  if (has_playerslot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerslot(), target);
  }

  // repeated uint32 eventarraybits = 2;
  for (int i = 0; i < this->eventarraybits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->eventarraybits(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSource1LegacyListenEvents)
  return target;
}

int CMsgSource1LegacyListenEvents::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 playerslot = 1;
    if (has_playerslot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playerslot());
    }

  }
  // repeated uint32 eventarraybits = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->eventarraybits_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->eventarraybits(i));
    }
    total_size += 1 * this->eventarraybits_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSource1LegacyListenEvents::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSource1LegacyListenEvents* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSource1LegacyListenEvents*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyListenEvents::MergeFrom(const CMsgSource1LegacyListenEvents& from) {
  GOOGLE_CHECK_NE(&from, this);
  eventarraybits_.MergeFrom(from.eventarraybits_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_playerslot()) {
      set_playerslot(from.playerslot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSource1LegacyListenEvents::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyListenEvents::CopyFrom(const CMsgSource1LegacyListenEvents& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyListenEvents::IsInitialized() const {

  return true;
}

void CMsgSource1LegacyListenEvents::Swap(CMsgSource1LegacyListenEvents* other) {
  if (other != this) {
    std::swap(playerslot_, other->playerslot_);
    eventarraybits_.Swap(&other->eventarraybits_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSource1LegacyListenEvents::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSource1LegacyListenEvents_descriptor_;
  metadata.reflection = CMsgSource1LegacyListenEvents_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSource1LegacyGameEvent_key_t::kTypeFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValStringFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValFloatFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValLongFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValShortFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValByteFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValBoolFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValUint64FieldNumber;
#endif  // !_MSC_VER

CMsgSource1LegacyGameEvent_key_t::CMsgSource1LegacyGameEvent_key_t()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSource1LegacyGameEvent.key_t)
}

void CMsgSource1LegacyGameEvent_key_t::InitAsDefaultInstance() {
}

CMsgSource1LegacyGameEvent_key_t::CMsgSource1LegacyGameEvent_key_t(const CMsgSource1LegacyGameEvent_key_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSource1LegacyGameEvent.key_t)
}

void CMsgSource1LegacyGameEvent_key_t::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  val_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_float_ = 0;
  val_long_ = 0;
  val_short_ = 0;
  val_byte_ = 0;
  val_bool_ = false;
  val_uint64_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSource1LegacyGameEvent_key_t::~CMsgSource1LegacyGameEvent_key_t() {
  // @@protoc_insertion_point(destructor:CMsgSource1LegacyGameEvent.key_t)
  SharedDtor();
}

void CMsgSource1LegacyGameEvent_key_t::SharedDtor() {
  if (val_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete val_string_;
  }
  if (this != default_instance_) {
  }
}

void CMsgSource1LegacyGameEvent_key_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEvent_key_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSource1LegacyGameEvent_key_t_descriptor_;
}

const CMsgSource1LegacyGameEvent_key_t& CMsgSource1LegacyGameEvent_key_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSource1LegacyGameEvent_key_t* CMsgSource1LegacyGameEvent_key_t::default_instance_ = NULL;

CMsgSource1LegacyGameEvent_key_t* CMsgSource1LegacyGameEvent_key_t::New() const {
  return new CMsgSource1LegacyGameEvent_key_t;
}

void CMsgSource1LegacyGameEvent_key_t::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSource1LegacyGameEvent_key_t*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(type_, val_uint64_);
    if (has_val_string()) {
      if (val_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        val_string_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSource1LegacyGameEvent_key_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSource1LegacyGameEvent.key_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_val_string;
        break;
      }

      // optional string val_string = 2;
      case 2: {
        if (tag == 18) {
         parse_val_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val_string().data(), this->val_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "val_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_val_float;
        break;
      }

      // optional float val_float = 3;
      case 3: {
        if (tag == 29) {
         parse_val_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &val_float_)));
          set_has_val_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_val_long;
        break;
      }

      // optional int32 val_long = 4;
      case 4: {
        if (tag == 32) {
         parse_val_long:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_long_)));
          set_has_val_long();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_val_short;
        break;
      }

      // optional int32 val_short = 5;
      case 5: {
        if (tag == 40) {
         parse_val_short:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_short_)));
          set_has_val_short();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_val_byte;
        break;
      }

      // optional int32 val_byte = 6;
      case 6: {
        if (tag == 48) {
         parse_val_byte:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_byte_)));
          set_has_val_byte();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_val_bool;
        break;
      }

      // optional bool val_bool = 7;
      case 7: {
        if (tag == 56) {
         parse_val_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &val_bool_)));
          set_has_val_bool();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_val_uint64;
        break;
      }

      // optional uint64 val_uint64 = 8;
      case 8: {
        if (tag == 64) {
         parse_val_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &val_uint64_)));
          set_has_val_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSource1LegacyGameEvent.key_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSource1LegacyGameEvent.key_t)
  return false;
#undef DO_
}

void CMsgSource1LegacyGameEvent_key_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSource1LegacyGameEvent.key_t)
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string val_string = 2;
  if (has_val_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), this->val_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "val_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->val_string(), output);
  }

  // optional float val_float = 3;
  if (has_val_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->val_float(), output);
  }

  // optional int32 val_long = 4;
  if (has_val_long()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->val_long(), output);
  }

  // optional int32 val_short = 5;
  if (has_val_short()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->val_short(), output);
  }

  // optional int32 val_byte = 6;
  if (has_val_byte()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->val_byte(), output);
  }

  // optional bool val_bool = 7;
  if (has_val_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->val_bool(), output);
  }

  // optional uint64 val_uint64 = 8;
  if (has_val_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->val_uint64(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSource1LegacyGameEvent.key_t)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEvent_key_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSource1LegacyGameEvent.key_t)
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string val_string = 2;
  if (has_val_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), this->val_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "val_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->val_string(), target);
  }

  // optional float val_float = 3;
  if (has_val_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->val_float(), target);
  }

  // optional int32 val_long = 4;
  if (has_val_long()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->val_long(), target);
  }

  // optional int32 val_short = 5;
  if (has_val_short()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->val_short(), target);
  }

  // optional int32 val_byte = 6;
  if (has_val_byte()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->val_byte(), target);
  }

  // optional bool val_bool = 7;
  if (has_val_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->val_bool(), target);
  }

  // optional uint64 val_uint64 = 8;
  if (has_val_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->val_uint64(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSource1LegacyGameEvent.key_t)
  return target;
}

int CMsgSource1LegacyGameEvent_key_t::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string val_string = 2;
    if (has_val_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val_string());
    }

    // optional float val_float = 3;
    if (has_val_float()) {
      total_size += 1 + 4;
    }

    // optional int32 val_long = 4;
    if (has_val_long()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_long());
    }

    // optional int32 val_short = 5;
    if (has_val_short()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_short());
    }

    // optional int32 val_byte = 6;
    if (has_val_byte()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_byte());
    }

    // optional bool val_bool = 7;
    if (has_val_bool()) {
      total_size += 1 + 1;
    }

    // optional uint64 val_uint64 = 8;
    if (has_val_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->val_uint64());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSource1LegacyGameEvent_key_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSource1LegacyGameEvent_key_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSource1LegacyGameEvent_key_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEvent_key_t::MergeFrom(const CMsgSource1LegacyGameEvent_key_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_val_string()) {
      set_val_string(from.val_string());
    }
    if (from.has_val_float()) {
      set_val_float(from.val_float());
    }
    if (from.has_val_long()) {
      set_val_long(from.val_long());
    }
    if (from.has_val_short()) {
      set_val_short(from.val_short());
    }
    if (from.has_val_byte()) {
      set_val_byte(from.val_byte());
    }
    if (from.has_val_bool()) {
      set_val_bool(from.val_bool());
    }
    if (from.has_val_uint64()) {
      set_val_uint64(from.val_uint64());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSource1LegacyGameEvent_key_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEvent_key_t::CopyFrom(const CMsgSource1LegacyGameEvent_key_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEvent_key_t::IsInitialized() const {

  return true;
}

void CMsgSource1LegacyGameEvent_key_t::Swap(CMsgSource1LegacyGameEvent_key_t* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(val_string_, other->val_string_);
    std::swap(val_float_, other->val_float_);
    std::swap(val_long_, other->val_long_);
    std::swap(val_short_, other->val_short_);
    std::swap(val_byte_, other->val_byte_);
    std::swap(val_bool_, other->val_bool_);
    std::swap(val_uint64_, other->val_uint64_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSource1LegacyGameEvent_key_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSource1LegacyGameEvent_key_t_descriptor_;
  metadata.reflection = CMsgSource1LegacyGameEvent_key_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMsgSource1LegacyGameEvent::kEventNameFieldNumber;
const int CMsgSource1LegacyGameEvent::kEventidFieldNumber;
const int CMsgSource1LegacyGameEvent::kKeysFieldNumber;
#endif  // !_MSC_VER

CMsgSource1LegacyGameEvent::CMsgSource1LegacyGameEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSource1LegacyGameEvent)
}

void CMsgSource1LegacyGameEvent::InitAsDefaultInstance() {
}

CMsgSource1LegacyGameEvent::CMsgSource1LegacyGameEvent(const CMsgSource1LegacyGameEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSource1LegacyGameEvent)
}

void CMsgSource1LegacyGameEvent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  event_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSource1LegacyGameEvent::~CMsgSource1LegacyGameEvent() {
  // @@protoc_insertion_point(destructor:CMsgSource1LegacyGameEvent)
  SharedDtor();
}

void CMsgSource1LegacyGameEvent::SharedDtor() {
  if (event_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgSource1LegacyGameEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSource1LegacyGameEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSource1LegacyGameEvent_descriptor_;
}

const CMsgSource1LegacyGameEvent& CMsgSource1LegacyGameEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSource1LegacyGameEvent* CMsgSource1LegacyGameEvent::default_instance_ = NULL;

CMsgSource1LegacyGameEvent* CMsgSource1LegacyGameEvent::New() const {
  return new CMsgSource1LegacyGameEvent;
}

void CMsgSource1LegacyGameEvent::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_event_name()) {
      if (event_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        event_name_->clear();
      }
    }
    eventid_ = 0;
  }
  keys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSource1LegacyGameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSource1LegacyGameEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->event_name().data(), this->event_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eventid;
        break;
      }

      // optional int32 eventid = 2;
      case 2: {
        if (tag == 16) {
         parse_eventid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
          set_has_eventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_keys;
        break;
      }

      // repeated .CMsgSource1LegacyGameEvent.key_t keys = 3;
      case 3: {
        if (tag == 26) {
         parse_keys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_keys;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSource1LegacyGameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSource1LegacyGameEvent)
  return false;
#undef DO_
}

void CMsgSource1LegacyGameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSource1LegacyGameEvent)
  // optional string event_name = 1;
  if (has_event_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), this->event_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_name(), output);
  }

  // optional int32 eventid = 2;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eventid(), output);
  }

  // repeated .CMsgSource1LegacyGameEvent.key_t keys = 3;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->keys(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSource1LegacyGameEvent)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSource1LegacyGameEvent)
  // optional string event_name = 1;
  if (has_event_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), this->event_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_name(), target);
  }

  // optional int32 eventid = 2;
  if (has_eventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eventid(), target);
  }

  // repeated .CMsgSource1LegacyGameEvent.key_t keys = 3;
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->keys(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSource1LegacyGameEvent)
  return target;
}

int CMsgSource1LegacyGameEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string event_name = 1;
    if (has_event_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event_name());
    }

    // optional int32 eventid = 2;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

  }
  // repeated .CMsgSource1LegacyGameEvent.key_t keys = 3;
  total_size += 1 * this->keys_size();
  for (int i = 0; i < this->keys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->keys(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSource1LegacyGameEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSource1LegacyGameEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSource1LegacyGameEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEvent::MergeFrom(const CMsgSource1LegacyGameEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  keys_.MergeFrom(from.keys_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_name()) {
      set_event_name(from.event_name());
    }
    if (from.has_eventid()) {
      set_eventid(from.eventid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSource1LegacyGameEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEvent::CopyFrom(const CMsgSource1LegacyGameEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEvent::IsInitialized() const {

  return true;
}

void CMsgSource1LegacyGameEvent::Swap(CMsgSource1LegacyGameEvent* other) {
  if (other != this) {
    std::swap(event_name_, other->event_name_);
    std::swap(eventid_, other->eventid_);
    keys_.Swap(&other->keys_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSource1LegacyGameEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSource1LegacyGameEvent_descriptor_;
  metadata.reflection = CMsgSource1LegacyGameEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSosStartSoundEvent::kSoundeventGuidFieldNumber;
const int CMsgSosStartSoundEvent::kSoundeventHashFieldNumber;
const int CMsgSosStartSoundEvent::kSourceEntityIndexFieldNumber;
const int CMsgSosStartSoundEvent::kSeedFieldNumber;
const int CMsgSosStartSoundEvent::kPackedParamsFieldNumber;
#endif  // !_MSC_VER

CMsgSosStartSoundEvent::CMsgSosStartSoundEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSosStartSoundEvent)
}

void CMsgSosStartSoundEvent::InitAsDefaultInstance() {
}

CMsgSosStartSoundEvent::CMsgSosStartSoundEvent(const CMsgSosStartSoundEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSosStartSoundEvent)
}

void CMsgSosStartSoundEvent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  soundevent_guid_ = 0;
  soundevent_hash_ = 0u;
  source_entity_index_ = 0;
  seed_ = 0;
  packed_params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSosStartSoundEvent::~CMsgSosStartSoundEvent() {
  // @@protoc_insertion_point(destructor:CMsgSosStartSoundEvent)
  SharedDtor();
}

void CMsgSosStartSoundEvent::SharedDtor() {
  if (packed_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packed_params_;
  }
  if (this != default_instance_) {
  }
}

void CMsgSosStartSoundEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSosStartSoundEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSosStartSoundEvent_descriptor_;
}

const CMsgSosStartSoundEvent& CMsgSosStartSoundEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSosStartSoundEvent* CMsgSosStartSoundEvent::default_instance_ = NULL;

CMsgSosStartSoundEvent* CMsgSosStartSoundEvent::New() const {
  return new CMsgSosStartSoundEvent;
}

void CMsgSosStartSoundEvent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSosStartSoundEvent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(soundevent_guid_, seed_);
    if (has_packed_params()) {
      if (packed_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packed_params_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSosStartSoundEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSosStartSoundEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soundevent_guid_)));
          set_has_soundevent_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_soundevent_hash;
        break;
      }

      // optional fixed32 soundevent_hash = 2;
      case 2: {
        if (tag == 21) {
         parse_soundevent_hash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &soundevent_hash_)));
          set_has_soundevent_hash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_source_entity_index;
        break;
      }

      // optional int32 source_entity_index = 3;
      case 3: {
        if (tag == 24) {
         parse_source_entity_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_entity_index_)));
          set_has_source_entity_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_seed;
        break;
      }

      // optional int32 seed = 4;
      case 4: {
        if (tag == 32) {
         parse_seed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seed_)));
          set_has_seed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_packed_params;
        break;
      }

      // optional bytes packed_params = 5;
      case 5: {
        if (tag == 42) {
         parse_packed_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packed_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSosStartSoundEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSosStartSoundEvent)
  return false;
#undef DO_
}

void CMsgSosStartSoundEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSosStartSoundEvent)
  // optional int32 soundevent_guid = 1;
  if (has_soundevent_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soundevent_guid(), output);
  }

  // optional fixed32 soundevent_hash = 2;
  if (has_soundevent_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->soundevent_hash(), output);
  }

  // optional int32 source_entity_index = 3;
  if (has_source_entity_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->source_entity_index(), output);
  }

  // optional int32 seed = 4;
  if (has_seed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->seed(), output);
  }

  // optional bytes packed_params = 5;
  if (has_packed_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->packed_params(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSosStartSoundEvent)
}

::google::protobuf::uint8* CMsgSosStartSoundEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSosStartSoundEvent)
  // optional int32 soundevent_guid = 1;
  if (has_soundevent_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soundevent_guid(), target);
  }

  // optional fixed32 soundevent_hash = 2;
  if (has_soundevent_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->soundevent_hash(), target);
  }

  // optional int32 source_entity_index = 3;
  if (has_source_entity_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->source_entity_index(), target);
  }

  // optional int32 seed = 4;
  if (has_seed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->seed(), target);
  }

  // optional bytes packed_params = 5;
  if (has_packed_params()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->packed_params(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSosStartSoundEvent)
  return target;
}

int CMsgSosStartSoundEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 soundevent_guid = 1;
    if (has_soundevent_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soundevent_guid());
    }

    // optional fixed32 soundevent_hash = 2;
    if (has_soundevent_hash()) {
      total_size += 1 + 4;
    }

    // optional int32 source_entity_index = 3;
    if (has_source_entity_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_entity_index());
    }

    // optional int32 seed = 4;
    if (has_seed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seed());
    }

    // optional bytes packed_params = 5;
    if (has_packed_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->packed_params());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSosStartSoundEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSosStartSoundEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSosStartSoundEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSosStartSoundEvent::MergeFrom(const CMsgSosStartSoundEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_soundevent_guid()) {
      set_soundevent_guid(from.soundevent_guid());
    }
    if (from.has_soundevent_hash()) {
      set_soundevent_hash(from.soundevent_hash());
    }
    if (from.has_source_entity_index()) {
      set_source_entity_index(from.source_entity_index());
    }
    if (from.has_seed()) {
      set_seed(from.seed());
    }
    if (from.has_packed_params()) {
      set_packed_params(from.packed_params());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSosStartSoundEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosStartSoundEvent::CopyFrom(const CMsgSosStartSoundEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosStartSoundEvent::IsInitialized() const {

  return true;
}

void CMsgSosStartSoundEvent::Swap(CMsgSosStartSoundEvent* other) {
  if (other != this) {
    std::swap(soundevent_guid_, other->soundevent_guid_);
    std::swap(soundevent_hash_, other->soundevent_hash_);
    std::swap(source_entity_index_, other->source_entity_index_);
    std::swap(seed_, other->seed_);
    std::swap(packed_params_, other->packed_params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSosStartSoundEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSosStartSoundEvent_descriptor_;
  metadata.reflection = CMsgSosStartSoundEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSosStopSoundEvent::kSoundeventGuidFieldNumber;
#endif  // !_MSC_VER

CMsgSosStopSoundEvent::CMsgSosStopSoundEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSosStopSoundEvent)
}

void CMsgSosStopSoundEvent::InitAsDefaultInstance() {
}

CMsgSosStopSoundEvent::CMsgSosStopSoundEvent(const CMsgSosStopSoundEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSosStopSoundEvent)
}

void CMsgSosStopSoundEvent::SharedCtor() {
  _cached_size_ = 0;
  soundevent_guid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSosStopSoundEvent::~CMsgSosStopSoundEvent() {
  // @@protoc_insertion_point(destructor:CMsgSosStopSoundEvent)
  SharedDtor();
}

void CMsgSosStopSoundEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSosStopSoundEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSosStopSoundEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSosStopSoundEvent_descriptor_;
}

const CMsgSosStopSoundEvent& CMsgSosStopSoundEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSosStopSoundEvent* CMsgSosStopSoundEvent::default_instance_ = NULL;

CMsgSosStopSoundEvent* CMsgSosStopSoundEvent::New() const {
  return new CMsgSosStopSoundEvent;
}

void CMsgSosStopSoundEvent::Clear() {
  soundevent_guid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSosStopSoundEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSosStopSoundEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soundevent_guid_)));
          set_has_soundevent_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSosStopSoundEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSosStopSoundEvent)
  return false;
#undef DO_
}

void CMsgSosStopSoundEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSosStopSoundEvent)
  // optional int32 soundevent_guid = 1;
  if (has_soundevent_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soundevent_guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSosStopSoundEvent)
}

::google::protobuf::uint8* CMsgSosStopSoundEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSosStopSoundEvent)
  // optional int32 soundevent_guid = 1;
  if (has_soundevent_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soundevent_guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSosStopSoundEvent)
  return target;
}

int CMsgSosStopSoundEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 soundevent_guid = 1;
    if (has_soundevent_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soundevent_guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSosStopSoundEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSosStopSoundEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSosStopSoundEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSosStopSoundEvent::MergeFrom(const CMsgSosStopSoundEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_soundevent_guid()) {
      set_soundevent_guid(from.soundevent_guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSosStopSoundEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosStopSoundEvent::CopyFrom(const CMsgSosStopSoundEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosStopSoundEvent::IsInitialized() const {

  return true;
}

void CMsgSosStopSoundEvent::Swap(CMsgSosStopSoundEvent* other) {
  if (other != this) {
    std::swap(soundevent_guid_, other->soundevent_guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSosStopSoundEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSosStopSoundEvent_descriptor_;
  metadata.reflection = CMsgSosStopSoundEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSosStopSoundEventHash::kSoundeventHashFieldNumber;
const int CMsgSosStopSoundEventHash::kSourceEntityIndexFieldNumber;
#endif  // !_MSC_VER

CMsgSosStopSoundEventHash::CMsgSosStopSoundEventHash()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSosStopSoundEventHash)
}

void CMsgSosStopSoundEventHash::InitAsDefaultInstance() {
}

CMsgSosStopSoundEventHash::CMsgSosStopSoundEventHash(const CMsgSosStopSoundEventHash& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSosStopSoundEventHash)
}

void CMsgSosStopSoundEventHash::SharedCtor() {
  _cached_size_ = 0;
  soundevent_hash_ = 0u;
  source_entity_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSosStopSoundEventHash::~CMsgSosStopSoundEventHash() {
  // @@protoc_insertion_point(destructor:CMsgSosStopSoundEventHash)
  SharedDtor();
}

void CMsgSosStopSoundEventHash::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSosStopSoundEventHash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSosStopSoundEventHash::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSosStopSoundEventHash_descriptor_;
}

const CMsgSosStopSoundEventHash& CMsgSosStopSoundEventHash::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSosStopSoundEventHash* CMsgSosStopSoundEventHash::default_instance_ = NULL;

CMsgSosStopSoundEventHash* CMsgSosStopSoundEventHash::New() const {
  return new CMsgSosStopSoundEventHash;
}

void CMsgSosStopSoundEventHash::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CMsgSosStopSoundEventHash*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(soundevent_hash_, source_entity_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSosStopSoundEventHash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSosStopSoundEventHash)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 soundevent_hash = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &soundevent_hash_)));
          set_has_soundevent_hash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_source_entity_index;
        break;
      }

      // optional int32 source_entity_index = 2;
      case 2: {
        if (tag == 16) {
         parse_source_entity_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_entity_index_)));
          set_has_source_entity_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSosStopSoundEventHash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSosStopSoundEventHash)
  return false;
#undef DO_
}

void CMsgSosStopSoundEventHash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSosStopSoundEventHash)
  // optional fixed32 soundevent_hash = 1;
  if (has_soundevent_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->soundevent_hash(), output);
  }

  // optional int32 source_entity_index = 2;
  if (has_source_entity_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->source_entity_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSosStopSoundEventHash)
}

::google::protobuf::uint8* CMsgSosStopSoundEventHash::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSosStopSoundEventHash)
  // optional fixed32 soundevent_hash = 1;
  if (has_soundevent_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->soundevent_hash(), target);
  }

  // optional int32 source_entity_index = 2;
  if (has_source_entity_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->source_entity_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSosStopSoundEventHash)
  return target;
}

int CMsgSosStopSoundEventHash::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed32 soundevent_hash = 1;
    if (has_soundevent_hash()) {
      total_size += 1 + 4;
    }

    // optional int32 source_entity_index = 2;
    if (has_source_entity_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_entity_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSosStopSoundEventHash::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSosStopSoundEventHash* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSosStopSoundEventHash*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSosStopSoundEventHash::MergeFrom(const CMsgSosStopSoundEventHash& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_soundevent_hash()) {
      set_soundevent_hash(from.soundevent_hash());
    }
    if (from.has_source_entity_index()) {
      set_source_entity_index(from.source_entity_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSosStopSoundEventHash::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosStopSoundEventHash::CopyFrom(const CMsgSosStopSoundEventHash& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosStopSoundEventHash::IsInitialized() const {

  return true;
}

void CMsgSosStopSoundEventHash::Swap(CMsgSosStopSoundEventHash* other) {
  if (other != this) {
    std::swap(soundevent_hash_, other->soundevent_hash_);
    std::swap(source_entity_index_, other->source_entity_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSosStopSoundEventHash::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSosStopSoundEventHash_descriptor_;
  metadata.reflection = CMsgSosStopSoundEventHash_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSosSetSoundEventParams::kSoundeventGuidFieldNumber;
const int CMsgSosSetSoundEventParams::kPackedParamsFieldNumber;
#endif  // !_MSC_VER

CMsgSosSetSoundEventParams::CMsgSosSetSoundEventParams()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSosSetSoundEventParams)
}

void CMsgSosSetSoundEventParams::InitAsDefaultInstance() {
}

CMsgSosSetSoundEventParams::CMsgSosSetSoundEventParams(const CMsgSosSetSoundEventParams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSosSetSoundEventParams)
}

void CMsgSosSetSoundEventParams::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  soundevent_guid_ = 0;
  packed_params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSosSetSoundEventParams::~CMsgSosSetSoundEventParams() {
  // @@protoc_insertion_point(destructor:CMsgSosSetSoundEventParams)
  SharedDtor();
}

void CMsgSosSetSoundEventParams::SharedDtor() {
  if (packed_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packed_params_;
  }
  if (this != default_instance_) {
  }
}

void CMsgSosSetSoundEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSosSetSoundEventParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSosSetSoundEventParams_descriptor_;
}

const CMsgSosSetSoundEventParams& CMsgSosSetSoundEventParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSosSetSoundEventParams* CMsgSosSetSoundEventParams::default_instance_ = NULL;

CMsgSosSetSoundEventParams* CMsgSosSetSoundEventParams::New() const {
  return new CMsgSosSetSoundEventParams;
}

void CMsgSosSetSoundEventParams::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    soundevent_guid_ = 0;
    if (has_packed_params()) {
      if (packed_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packed_params_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSosSetSoundEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSosSetSoundEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soundevent_guid_)));
          set_has_soundevent_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_packed_params;
        break;
      }

      // optional bytes packed_params = 5;
      case 5: {
        if (tag == 42) {
         parse_packed_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packed_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSosSetSoundEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSosSetSoundEventParams)
  return false;
#undef DO_
}

void CMsgSosSetSoundEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSosSetSoundEventParams)
  // optional int32 soundevent_guid = 1;
  if (has_soundevent_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soundevent_guid(), output);
  }

  // optional bytes packed_params = 5;
  if (has_packed_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->packed_params(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSosSetSoundEventParams)
}

::google::protobuf::uint8* CMsgSosSetSoundEventParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSosSetSoundEventParams)
  // optional int32 soundevent_guid = 1;
  if (has_soundevent_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soundevent_guid(), target);
  }

  // optional bytes packed_params = 5;
  if (has_packed_params()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->packed_params(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSosSetSoundEventParams)
  return target;
}

int CMsgSosSetSoundEventParams::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 soundevent_guid = 1;
    if (has_soundevent_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soundevent_guid());
    }

    // optional bytes packed_params = 5;
    if (has_packed_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->packed_params());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSosSetSoundEventParams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSosSetSoundEventParams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSosSetSoundEventParams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSosSetSoundEventParams::MergeFrom(const CMsgSosSetSoundEventParams& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_soundevent_guid()) {
      set_soundevent_guid(from.soundevent_guid());
    }
    if (from.has_packed_params()) {
      set_packed_params(from.packed_params());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSosSetSoundEventParams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosSetSoundEventParams::CopyFrom(const CMsgSosSetSoundEventParams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosSetSoundEventParams::IsInitialized() const {

  return true;
}

void CMsgSosSetSoundEventParams::Swap(CMsgSosSetSoundEventParams* other) {
  if (other != this) {
    std::swap(soundevent_guid_, other->soundevent_guid_);
    std::swap(packed_params_, other->packed_params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSosSetSoundEventParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSosSetSoundEventParams_descriptor_;
  metadata.reflection = CMsgSosSetSoundEventParams_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgSosSetLibraryStackFields::kStackHashFieldNumber;
const int CMsgSosSetLibraryStackFields::kPackedFieldsFieldNumber;
#endif  // !_MSC_VER

CMsgSosSetLibraryStackFields::CMsgSosSetLibraryStackFields()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSosSetLibraryStackFields)
}

void CMsgSosSetLibraryStackFields::InitAsDefaultInstance() {
}

CMsgSosSetLibraryStackFields::CMsgSosSetLibraryStackFields(const CMsgSosSetLibraryStackFields& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgSosSetLibraryStackFields)
}

void CMsgSosSetLibraryStackFields::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stack_hash_ = 0u;
  packed_fields_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSosSetLibraryStackFields::~CMsgSosSetLibraryStackFields() {
  // @@protoc_insertion_point(destructor:CMsgSosSetLibraryStackFields)
  SharedDtor();
}

void CMsgSosSetLibraryStackFields::SharedDtor() {
  if (packed_fields_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packed_fields_;
  }
  if (this != default_instance_) {
  }
}

void CMsgSosSetLibraryStackFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSosSetLibraryStackFields::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSosSetLibraryStackFields_descriptor_;
}

const CMsgSosSetLibraryStackFields& CMsgSosSetLibraryStackFields::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gameevents_2eproto();
  return *default_instance_;
}

CMsgSosSetLibraryStackFields* CMsgSosSetLibraryStackFields::default_instance_ = NULL;

CMsgSosSetLibraryStackFields* CMsgSosSetLibraryStackFields::New() const {
  return new CMsgSosSetLibraryStackFields;
}

void CMsgSosSetLibraryStackFields::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    stack_hash_ = 0u;
    if (has_packed_fields()) {
      if (packed_fields_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packed_fields_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSosSetLibraryStackFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSosSetLibraryStackFields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 stack_hash = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &stack_hash_)));
          set_has_stack_hash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_packed_fields;
        break;
      }

      // optional bytes packed_fields = 5;
      case 5: {
        if (tag == 42) {
         parse_packed_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packed_fields()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSosSetLibraryStackFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSosSetLibraryStackFields)
  return false;
#undef DO_
}

void CMsgSosSetLibraryStackFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSosSetLibraryStackFields)
  // optional fixed32 stack_hash = 1;
  if (has_stack_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->stack_hash(), output);
  }

  // optional bytes packed_fields = 5;
  if (has_packed_fields()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->packed_fields(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSosSetLibraryStackFields)
}

::google::protobuf::uint8* CMsgSosSetLibraryStackFields::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSosSetLibraryStackFields)
  // optional fixed32 stack_hash = 1;
  if (has_stack_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->stack_hash(), target);
  }

  // optional bytes packed_fields = 5;
  if (has_packed_fields()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->packed_fields(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSosSetLibraryStackFields)
  return target;
}

int CMsgSosSetLibraryStackFields::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed32 stack_hash = 1;
    if (has_stack_hash()) {
      total_size += 1 + 4;
    }

    // optional bytes packed_fields = 5;
    if (has_packed_fields()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->packed_fields());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSosSetLibraryStackFields::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSosSetLibraryStackFields* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSosSetLibraryStackFields*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSosSetLibraryStackFields::MergeFrom(const CMsgSosSetLibraryStackFields& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stack_hash()) {
      set_stack_hash(from.stack_hash());
    }
    if (from.has_packed_fields()) {
      set_packed_fields(from.packed_fields());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSosSetLibraryStackFields::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosSetLibraryStackFields::CopyFrom(const CMsgSosSetLibraryStackFields& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosSetLibraryStackFields::IsInitialized() const {

  return true;
}

void CMsgSosSetLibraryStackFields::Swap(CMsgSosSetLibraryStackFields* other) {
  if (other != this) {
    std::swap(stack_hash_, other->stack_hash_);
    std::swap(packed_fields_, other->packed_fields_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSosSetLibraryStackFields::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSosSetLibraryStackFields_descriptor_;
  metadata.reflection = CMsgSosSetLibraryStackFields_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
