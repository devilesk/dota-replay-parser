// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networkbasetypes.proto

#ifndef PROTOBUF_networkbasetypes_2eproto__INCLUDED
#define PROTOBUF_networkbasetypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "network_connection.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_networkbasetypes_2eproto();
void protobuf_AssignDesc_networkbasetypes_2eproto();
void protobuf_ShutdownFile_networkbasetypes_2eproto();

class CMsgPlayerInfo;
class CMsgQAngle;
class CMsgVector;
class CMsgVector2D;
class CMsg_CVars;
class CMsg_CVars_CVar;
class CNETMsg_Disconnect;
class CNETMsg_NOP;
class CNETMsg_SetConVar;
class CNETMsg_SignonState;
class CNETMsg_SpawnGroup_Load;
class CNETMsg_SpawnGroup_LoadCompleted;
class CNETMsg_SpawnGroup_ManifestUpdate;
class CNETMsg_SpawnGroup_SetCreationTick;
class CNETMsg_SpawnGroup_Unload;
class CNETMsg_SplitScreenUser;
class CNETMsg_StringCmd;
class CNETMsg_Tick;
class CSVCMsgList_GameEvents;
class CSVCMsgList_GameEvents_event_t;
class CSVCMsgList_UserMessages;
class CSVCMsgList_UserMessages_usermsg_t;
class CSVCMsg_GameEvent;
class CSVCMsg_GameEvent_key_t;
class CSVCMsg_GameSessionConfiguration;
class CSVCMsg_UserMessage;

enum NET_Messages {
  net_NOP = 0,
  net_Disconnect = 1,
  net_SplitScreenUser = 3,
  net_Tick = 4,
  net_StringCmd = 5,
  net_SetConVar = 6,
  net_SignonState = 7,
  net_SpawnGroup_Load = 8,
  net_SpawnGroup_ManifestUpdate = 9,
  net_SpawnGroup_SetCreationTick = 11,
  net_SpawnGroup_Unload = 12,
  net_SpawnGroup_LoadCompleted = 13
};
bool NET_Messages_IsValid(int value);
const NET_Messages NET_Messages_MIN = net_NOP;
const NET_Messages NET_Messages_MAX = net_SpawnGroup_LoadCompleted;
const int NET_Messages_ARRAYSIZE = NET_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* NET_Messages_descriptor();
inline const ::std::string& NET_Messages_Name(NET_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    NET_Messages_descriptor(), value);
}
inline bool NET_Messages_Parse(
    const ::std::string& name, NET_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NET_Messages>(
    NET_Messages_descriptor(), name, value);
}
enum SpawnGroupFlags_t {
  SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE = 1,
  SPAWN_GROUP_DONT_SPAWN_ENTITIES = 2,
  SPAWN_GROUP_SYNCHRONOUS_SPAWN = 4,
  SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP = 8,
  SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES = 16,
  SPAWN_GROUP_SAVE_ENTITIES = 32,
  SPAWN_GROUP_BLOCK_UNTIL_LOADED = 64,
  SPAWN_GROUP_LOAD_STREAMING_DATA = 128,
  SPAWN_GROUP_CREATE_NEW_SCENE_WORLD = 256
};
bool SpawnGroupFlags_t_IsValid(int value);
const SpawnGroupFlags_t SpawnGroupFlags_t_MIN = SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE;
const SpawnGroupFlags_t SpawnGroupFlags_t_MAX = SPAWN_GROUP_CREATE_NEW_SCENE_WORLD;
const int SpawnGroupFlags_t_ARRAYSIZE = SpawnGroupFlags_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpawnGroupFlags_t_descriptor();
inline const ::std::string& SpawnGroupFlags_t_Name(SpawnGroupFlags_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpawnGroupFlags_t_descriptor(), value);
}
inline bool SpawnGroupFlags_t_Parse(
    const ::std::string& name, SpawnGroupFlags_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpawnGroupFlags_t>(
    SpawnGroupFlags_t_descriptor(), name, value);
}
// ===================================================================

class CMsgVector : public ::google::protobuf::Message {
 public:
  CMsgVector();
  virtual ~CMsgVector();

  CMsgVector(const CMsgVector& from);

  inline CMsgVector& operator=(const CMsgVector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVector& default_instance();

  void Swap(CMsgVector* other);

  // implements Message ----------------------------------------------

  inline CMsgVector* New() const { return New(NULL); }

  CMsgVector* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgVector& from);
  void MergeFrom(const CMsgVector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgVector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:CMsgVector)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsgVector* default_instance_;
};
// -------------------------------------------------------------------

class CMsgVector2D : public ::google::protobuf::Message {
 public:
  CMsgVector2D();
  virtual ~CMsgVector2D();

  CMsgVector2D(const CMsgVector2D& from);

  inline CMsgVector2D& operator=(const CMsgVector2D& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVector2D& default_instance();

  void Swap(CMsgVector2D* other);

  // implements Message ----------------------------------------------

  inline CMsgVector2D* New() const { return New(NULL); }

  CMsgVector2D* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgVector2D& from);
  void MergeFrom(const CMsgVector2D& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgVector2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:CMsgVector2D)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsgVector2D* default_instance_;
};
// -------------------------------------------------------------------

class CMsgQAngle : public ::google::protobuf::Message {
 public:
  CMsgQAngle();
  virtual ~CMsgQAngle();

  CMsgQAngle(const CMsgQAngle& from);

  inline CMsgQAngle& operator=(const CMsgQAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgQAngle& default_instance();

  void Swap(CMsgQAngle* other);

  // implements Message ----------------------------------------------

  inline CMsgQAngle* New() const { return New(NULL); }

  CMsgQAngle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgQAngle& from);
  void MergeFrom(const CMsgQAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgQAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:CMsgQAngle)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsgQAngle* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPlayerInfo : public ::google::protobuf::Message {
 public:
  CMsgPlayerInfo();
  virtual ~CMsgPlayerInfo();

  CMsgPlayerInfo(const CMsgPlayerInfo& from);

  inline CMsgPlayerInfo& operator=(const CMsgPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerInfo& default_instance();

  void Swap(CMsgPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgPlayerInfo* New() const { return New(NULL); }

  CMsgPlayerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPlayerInfo& from);
  void MergeFrom(const CMsgPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional fixed64 xuid = 2;
  bool has_xuid() const;
  void clear_xuid();
  static const int kXuidFieldNumber = 2;
  ::google::protobuf::uint64 xuid() const;
  void set_xuid(::google::protobuf::uint64 value);

  // optional int32 userid = 3;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 3;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional fixed64 steamid = 4;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 4;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool fakeplayer = 5;
  bool has_fakeplayer() const;
  void clear_fakeplayer();
  static const int kFakeplayerFieldNumber = 5;
  bool fakeplayer() const;
  void set_fakeplayer(bool value);

  // optional bool ishltv = 6;
  bool has_ishltv() const;
  void clear_ishltv();
  static const int kIshltvFieldNumber = 6;
  bool ishltv() const;
  void set_ishltv(bool value);

  // @@protoc_insertion_point(class_scope:CMsgPlayerInfo)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_xuid();
  inline void clear_has_xuid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_fakeplayer();
  inline void clear_has_fakeplayer();
  inline void set_has_ishltv();
  inline void clear_has_ishltv();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 userid_;
  bool fakeplayer_;
  bool ishltv_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsgPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsg_CVars_CVar : public ::google::protobuf::Message {
 public:
  CMsg_CVars_CVar();
  virtual ~CMsg_CVars_CVar();

  CMsg_CVars_CVar(const CMsg_CVars_CVar& from);

  inline CMsg_CVars_CVar& operator=(const CMsg_CVars_CVar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars_CVar& default_instance();

  void Swap(CMsg_CVars_CVar* other);

  // implements Message ----------------------------------------------

  inline CMsg_CVars_CVar* New() const { return New(NULL); }

  CMsg_CVars_CVar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg_CVars_CVar& from);
  void MergeFrom(const CMsg_CVars_CVar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg_CVars_CVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsg_CVars.CVar)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsg_CVars_CVar* default_instance_;
};
// -------------------------------------------------------------------

class CMsg_CVars : public ::google::protobuf::Message {
 public:
  CMsg_CVars();
  virtual ~CMsg_CVars();

  CMsg_CVars(const CMsg_CVars& from);

  inline CMsg_CVars& operator=(const CMsg_CVars& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars& default_instance();

  void Swap(CMsg_CVars* other);

  // implements Message ----------------------------------------------

  inline CMsg_CVars* New() const { return New(NULL); }

  CMsg_CVars* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg_CVars& from);
  void MergeFrom(const CMsg_CVars& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg_CVars* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg_CVars_CVar CVar;

  // accessors -------------------------------------------------------

  // repeated .CMsg_CVars.CVar cvars = 1;
  int cvars_size() const;
  void clear_cvars();
  static const int kCvarsFieldNumber = 1;
  const ::CMsg_CVars_CVar& cvars(int index) const;
  ::CMsg_CVars_CVar* mutable_cvars(int index);
  ::CMsg_CVars_CVar* add_cvars();
  ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
      mutable_cvars();
  const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
      cvars() const;

  // @@protoc_insertion_point(class_scope:CMsg_CVars)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar > cvars_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsg_CVars* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_NOP : public ::google::protobuf::Message {
 public:
  CNETMsg_NOP();
  virtual ~CNETMsg_NOP();

  CNETMsg_NOP(const CNETMsg_NOP& from);

  inline CNETMsg_NOP& operator=(const CNETMsg_NOP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_NOP& default_instance();

  void Swap(CNETMsg_NOP* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_NOP* New() const { return New(NULL); }

  CNETMsg_NOP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_NOP& from);
  void MergeFrom(const CNETMsg_NOP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_NOP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CNETMsg_NOP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_NOP* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SplitScreenUser : public ::google::protobuf::Message {
 public:
  CNETMsg_SplitScreenUser();
  virtual ~CNETMsg_SplitScreenUser();

  CNETMsg_SplitScreenUser(const CNETMsg_SplitScreenUser& from);

  inline CNETMsg_SplitScreenUser& operator=(const CNETMsg_SplitScreenUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SplitScreenUser& default_instance();

  void Swap(CNETMsg_SplitScreenUser* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SplitScreenUser* New() const { return New(NULL); }

  CNETMsg_SplitScreenUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SplitScreenUser& from);
  void MergeFrom(const CNETMsg_SplitScreenUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SplitScreenUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  bool has_slot() const;
  void clear_slot();
  static const int kSlotFieldNumber = 1;
  ::google::protobuf::int32 slot() const;
  void set_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_SplitScreenUser)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 slot_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SplitScreenUser* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_Disconnect : public ::google::protobuf::Message {
 public:
  CNETMsg_Disconnect();
  virtual ~CNETMsg_Disconnect();

  CNETMsg_Disconnect(const CNETMsg_Disconnect& from);

  inline CNETMsg_Disconnect& operator=(const CNETMsg_Disconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_Disconnect& default_instance();

  void Swap(CNETMsg_Disconnect* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_Disconnect* New() const { return New(NULL); }

  CNETMsg_Disconnect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_Disconnect& from);
  void MergeFrom(const CNETMsg_Disconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_Disconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::ENetworkDisconnectionReason reason() const;
  void set_reason(::ENetworkDisconnectionReason value);

  // @@protoc_insertion_point(class_scope:CNETMsg_Disconnect)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int reason_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_Disconnect* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_Tick : public ::google::protobuf::Message {
 public:
  CNETMsg_Tick();
  virtual ~CNETMsg_Tick();

  CNETMsg_Tick(const CNETMsg_Tick& from);

  inline CNETMsg_Tick& operator=(const CNETMsg_Tick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_Tick& default_instance();

  void Swap(CNETMsg_Tick* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_Tick* New() const { return New(NULL); }

  CNETMsg_Tick* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_Tick& from);
  void MergeFrom(const CNETMsg_Tick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_Tick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::uint32 tick() const;
  void set_tick(::google::protobuf::uint32 value);

  // optional uint32 host_frametime = 2;
  bool has_host_frametime() const;
  void clear_host_frametime();
  static const int kHostFrametimeFieldNumber = 2;
  ::google::protobuf::uint32 host_frametime() const;
  void set_host_frametime(::google::protobuf::uint32 value);

  // optional uint32 host_frametime_std_deviation = 3;
  bool has_host_frametime_std_deviation() const;
  void clear_host_frametime_std_deviation();
  static const int kHostFrametimeStdDeviationFieldNumber = 3;
  ::google::protobuf::uint32 host_frametime_std_deviation() const;
  void set_host_frametime_std_deviation(::google::protobuf::uint32 value);

  // optional uint32 host_computationtime = 4;
  bool has_host_computationtime() const;
  void clear_host_computationtime();
  static const int kHostComputationtimeFieldNumber = 4;
  ::google::protobuf::uint32 host_computationtime() const;
  void set_host_computationtime(::google::protobuf::uint32 value);

  // optional uint32 host_computationtime_std_deviation = 5;
  bool has_host_computationtime_std_deviation() const;
  void clear_host_computationtime_std_deviation();
  static const int kHostComputationtimeStdDeviationFieldNumber = 5;
  ::google::protobuf::uint32 host_computationtime_std_deviation() const;
  void set_host_computationtime_std_deviation(::google::protobuf::uint32 value);

  // optional uint32 host_framestarttime_std_deviation = 6;
  bool has_host_framestarttime_std_deviation() const;
  void clear_host_framestarttime_std_deviation();
  static const int kHostFramestarttimeStdDeviationFieldNumber = 6;
  ::google::protobuf::uint32 host_framestarttime_std_deviation() const;
  void set_host_framestarttime_std_deviation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_Tick)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_host_frametime();
  inline void clear_has_host_frametime();
  inline void set_has_host_frametime_std_deviation();
  inline void clear_has_host_frametime_std_deviation();
  inline void set_has_host_computationtime();
  inline void clear_has_host_computationtime();
  inline void set_has_host_computationtime_std_deviation();
  inline void clear_has_host_computationtime_std_deviation();
  inline void set_has_host_framestarttime_std_deviation();
  inline void clear_has_host_framestarttime_std_deviation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tick_;
  ::google::protobuf::uint32 host_frametime_;
  ::google::protobuf::uint32 host_frametime_std_deviation_;
  ::google::protobuf::uint32 host_computationtime_;
  ::google::protobuf::uint32 host_computationtime_std_deviation_;
  ::google::protobuf::uint32 host_framestarttime_std_deviation_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_Tick* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_StringCmd : public ::google::protobuf::Message {
 public:
  CNETMsg_StringCmd();
  virtual ~CNETMsg_StringCmd();

  CNETMsg_StringCmd(const CNETMsg_StringCmd& from);

  inline CNETMsg_StringCmd& operator=(const CNETMsg_StringCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_StringCmd& default_instance();

  void Swap(CNETMsg_StringCmd* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_StringCmd* New() const { return New(NULL); }

  CNETMsg_StringCmd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_StringCmd& from);
  void MergeFrom(const CNETMsg_StringCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_StringCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:CNETMsg_StringCmd)
 private:
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_StringCmd* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SetConVar : public ::google::protobuf::Message {
 public:
  CNETMsg_SetConVar();
  virtual ~CNETMsg_SetConVar();

  CNETMsg_SetConVar(const CNETMsg_SetConVar& from);

  inline CNETMsg_SetConVar& operator=(const CNETMsg_SetConVar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SetConVar& default_instance();

  void Swap(CNETMsg_SetConVar* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SetConVar* New() const { return New(NULL); }

  CNETMsg_SetConVar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SetConVar& from);
  void MergeFrom(const CNETMsg_SetConVar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SetConVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsg_CVars convars = 1;
  bool has_convars() const;
  void clear_convars();
  static const int kConvarsFieldNumber = 1;
  const ::CMsg_CVars& convars() const;
  ::CMsg_CVars* mutable_convars();
  ::CMsg_CVars* release_convars();
  void set_allocated_convars(::CMsg_CVars* convars);

  // @@protoc_insertion_point(class_scope:CNETMsg_SetConVar)
 private:
  inline void set_has_convars();
  inline void clear_has_convars();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsg_CVars* convars_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SetConVar* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SignonState : public ::google::protobuf::Message {
 public:
  CNETMsg_SignonState();
  virtual ~CNETMsg_SignonState();

  CNETMsg_SignonState(const CNETMsg_SignonState& from);

  inline CNETMsg_SignonState& operator=(const CNETMsg_SignonState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SignonState& default_instance();

  void Swap(CNETMsg_SignonState* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SignonState* New() const { return New(NULL); }

  CNETMsg_SignonState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SignonState& from);
  void MergeFrom(const CNETMsg_SignonState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SignonState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 signon_state = 1;
  bool has_signon_state() const;
  void clear_signon_state();
  static const int kSignonStateFieldNumber = 1;
  ::google::protobuf::uint32 signon_state() const;
  void set_signon_state(::google::protobuf::uint32 value);

  // optional uint32 spawn_count = 2;
  bool has_spawn_count() const;
  void clear_spawn_count();
  static const int kSpawnCountFieldNumber = 2;
  ::google::protobuf::uint32 spawn_count() const;
  void set_spawn_count(::google::protobuf::uint32 value);

  // optional uint32 num_server_players = 3;
  bool has_num_server_players() const;
  void clear_num_server_players();
  static const int kNumServerPlayersFieldNumber = 3;
  ::google::protobuf::uint32 num_server_players() const;
  void set_num_server_players(::google::protobuf::uint32 value);

  // repeated string players_networkids = 4;
  int players_networkids_size() const;
  void clear_players_networkids();
  static const int kPlayersNetworkidsFieldNumber = 4;
  const ::std::string& players_networkids(int index) const;
  ::std::string* mutable_players_networkids(int index);
  void set_players_networkids(int index, const ::std::string& value);
  void set_players_networkids(int index, const char* value);
  void set_players_networkids(int index, const char* value, size_t size);
  ::std::string* add_players_networkids();
  void add_players_networkids(const ::std::string& value);
  void add_players_networkids(const char* value);
  void add_players_networkids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& players_networkids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_players_networkids();

  // optional string map_name = 5;
  bool has_map_name() const;
  void clear_map_name();
  static const int kMapNameFieldNumber = 5;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // @@protoc_insertion_point(class_scope:CNETMsg_SignonState)
 private:
  inline void set_has_signon_state();
  inline void clear_has_signon_state();
  inline void set_has_spawn_count();
  inline void clear_has_spawn_count();
  inline void set_has_num_server_players();
  inline void clear_has_num_server_players();
  inline void set_has_map_name();
  inline void clear_has_map_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 signon_state_;
  ::google::protobuf::uint32 spawn_count_;
  ::google::protobuf::RepeatedPtrField< ::std::string> players_networkids_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::uint32 num_server_players_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SignonState* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEvent_key_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEvent_key_t();
  virtual ~CSVCMsg_GameEvent_key_t();

  CSVCMsg_GameEvent_key_t(const CSVCMsg_GameEvent_key_t& from);

  inline CSVCMsg_GameEvent_key_t& operator=(const CSVCMsg_GameEvent_key_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEvent_key_t& default_instance();

  void Swap(CSVCMsg_GameEvent_key_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEvent_key_t* New() const { return New(NULL); }

  CSVCMsg_GameEvent_key_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEvent_key_t& from);
  void MergeFrom(const CSVCMsg_GameEvent_key_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameEvent_key_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string val_string = 2;
  bool has_val_string() const;
  void clear_val_string();
  static const int kValStringFieldNumber = 2;
  const ::std::string& val_string() const;
  void set_val_string(const ::std::string& value);
  void set_val_string(const char* value);
  void set_val_string(const char* value, size_t size);
  ::std::string* mutable_val_string();
  ::std::string* release_val_string();
  void set_allocated_val_string(::std::string* val_string);

  // optional float val_float = 3;
  bool has_val_float() const;
  void clear_val_float();
  static const int kValFloatFieldNumber = 3;
  float val_float() const;
  void set_val_float(float value);

  // optional int32 val_long = 4;
  bool has_val_long() const;
  void clear_val_long();
  static const int kValLongFieldNumber = 4;
  ::google::protobuf::int32 val_long() const;
  void set_val_long(::google::protobuf::int32 value);

  // optional int32 val_short = 5;
  bool has_val_short() const;
  void clear_val_short();
  static const int kValShortFieldNumber = 5;
  ::google::protobuf::int32 val_short() const;
  void set_val_short(::google::protobuf::int32 value);

  // optional int32 val_byte = 6;
  bool has_val_byte() const;
  void clear_val_byte();
  static const int kValByteFieldNumber = 6;
  ::google::protobuf::int32 val_byte() const;
  void set_val_byte(::google::protobuf::int32 value);

  // optional bool val_bool = 7;
  bool has_val_bool() const;
  void clear_val_bool();
  static const int kValBoolFieldNumber = 7;
  bool val_bool() const;
  void set_val_bool(bool value);

  // optional uint64 val_uint64 = 8;
  bool has_val_uint64() const;
  void clear_val_uint64();
  static const int kValUint64FieldNumber = 8;
  ::google::protobuf::uint64 val_uint64() const;
  void set_val_uint64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEvent.key_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_val_string();
  inline void clear_has_val_string();
  inline void set_has_val_float();
  inline void clear_has_val_float();
  inline void set_has_val_long();
  inline void clear_has_val_long();
  inline void set_has_val_short();
  inline void clear_has_val_short();
  inline void set_has_val_byte();
  inline void clear_has_val_byte();
  inline void set_has_val_bool();
  inline void clear_has_val_bool();
  inline void set_has_val_uint64();
  inline void clear_has_val_uint64();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr val_string_;
  ::google::protobuf::int32 type_;
  float val_float_;
  ::google::protobuf::int32 val_long_;
  ::google::protobuf::int32 val_short_;
  ::google::protobuf::int32 val_byte_;
  bool val_bool_;
  ::google::protobuf::uint64 val_uint64_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEvent_key_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEvent : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEvent();
  virtual ~CSVCMsg_GameEvent();

  CSVCMsg_GameEvent(const CSVCMsg_GameEvent& from);

  inline CSVCMsg_GameEvent& operator=(const CSVCMsg_GameEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEvent& default_instance();

  void Swap(CSVCMsg_GameEvent* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEvent* New() const { return New(NULL); }

  CSVCMsg_GameEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEvent& from);
  void MergeFrom(const CSVCMsg_GameEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_GameEvent_key_t key_t;

  // accessors -------------------------------------------------------

  // optional string event_name = 1;
  bool has_event_name() const;
  void clear_event_name();
  static const int kEventNameFieldNumber = 1;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // optional int32 eventid = 2;
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventidFieldNumber = 2;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 3;
  const ::CSVCMsg_GameEvent_key_t& keys(int index) const;
  ::CSVCMsg_GameEvent_key_t* mutable_keys(int index);
  ::CSVCMsg_GameEvent_key_t* add_keys();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >*
      mutable_keys();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >&
      keys() const;

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEvent)
 private:
  inline void set_has_event_name();
  inline void clear_has_event_name();
  inline void set_has_eventid();
  inline void clear_has_eventid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t > keys_;
  ::google::protobuf::int32 eventid_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEvent* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_GameEvents_event_t : public ::google::protobuf::Message {
 public:
  CSVCMsgList_GameEvents_event_t();
  virtual ~CSVCMsgList_GameEvents_event_t();

  CSVCMsgList_GameEvents_event_t(const CSVCMsgList_GameEvents_event_t& from);

  inline CSVCMsgList_GameEvents_event_t& operator=(const CSVCMsgList_GameEvents_event_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_GameEvents_event_t& default_instance();

  void Swap(CSVCMsgList_GameEvents_event_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsgList_GameEvents_event_t* New() const { return New(NULL); }

  CSVCMsgList_GameEvents_event_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_GameEvents_event_t& from);
  void MergeFrom(const CSVCMsgList_GameEvents_event_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsgList_GameEvents_event_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::int32 tick() const;
  void set_tick(::google::protobuf::int32 value);

  // optional .CSVCMsg_GameEvent event = 2;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::CSVCMsg_GameEvent& event() const;
  ::CSVCMsg_GameEvent* mutable_event();
  ::CSVCMsg_GameEvent* release_event();
  void set_allocated_event(::CSVCMsg_GameEvent* event);

  // @@protoc_insertion_point(class_scope:CSVCMsgList_GameEvents.event_t)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_event();
  inline void clear_has_event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CSVCMsg_GameEvent* event_;
  ::google::protobuf::int32 tick_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_GameEvents_event_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_GameEvents : public ::google::protobuf::Message {
 public:
  CSVCMsgList_GameEvents();
  virtual ~CSVCMsgList_GameEvents();

  CSVCMsgList_GameEvents(const CSVCMsgList_GameEvents& from);

  inline CSVCMsgList_GameEvents& operator=(const CSVCMsgList_GameEvents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_GameEvents& default_instance();

  void Swap(CSVCMsgList_GameEvents* other);

  // implements Message ----------------------------------------------

  inline CSVCMsgList_GameEvents* New() const { return New(NULL); }

  CSVCMsgList_GameEvents* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_GameEvents& from);
  void MergeFrom(const CSVCMsgList_GameEvents& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsgList_GameEvents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsgList_GameEvents_event_t event_t;

  // accessors -------------------------------------------------------

  // repeated .CSVCMsgList_GameEvents.event_t events = 1;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 1;
  const ::CSVCMsgList_GameEvents_event_t& events(int index) const;
  ::CSVCMsgList_GameEvents_event_t* mutable_events(int index);
  ::CSVCMsgList_GameEvents_event_t* add_events();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >&
      events() const;

  // @@protoc_insertion_point(class_scope:CSVCMsgList_GameEvents)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t > events_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_GameEvents* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_UserMessage : public ::google::protobuf::Message {
 public:
  CSVCMsg_UserMessage();
  virtual ~CSVCMsg_UserMessage();

  CSVCMsg_UserMessage(const CSVCMsg_UserMessage& from);

  inline CSVCMsg_UserMessage& operator=(const CSVCMsg_UserMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_UserMessage& default_instance();

  void Swap(CSVCMsg_UserMessage* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_UserMessage* New() const { return New(NULL); }

  CSVCMsg_UserMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_UserMessage& from);
  void MergeFrom(const CSVCMsg_UserMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_UserMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional bytes msg_data = 2;
  bool has_msg_data() const;
  void clear_msg_data();
  static const int kMsgDataFieldNumber = 2;
  const ::std::string& msg_data() const;
  void set_msg_data(const ::std::string& value);
  void set_msg_data(const char* value);
  void set_msg_data(const void* value, size_t size);
  ::std::string* mutable_msg_data();
  ::std::string* release_msg_data();
  void set_allocated_msg_data(::std::string* msg_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_UserMessage)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_data_;
  ::google::protobuf::int32 msg_type_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_UserMessage* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_UserMessages_usermsg_t : public ::google::protobuf::Message {
 public:
  CSVCMsgList_UserMessages_usermsg_t();
  virtual ~CSVCMsgList_UserMessages_usermsg_t();

  CSVCMsgList_UserMessages_usermsg_t(const CSVCMsgList_UserMessages_usermsg_t& from);

  inline CSVCMsgList_UserMessages_usermsg_t& operator=(const CSVCMsgList_UserMessages_usermsg_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_UserMessages_usermsg_t& default_instance();

  void Swap(CSVCMsgList_UserMessages_usermsg_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsgList_UserMessages_usermsg_t* New() const { return New(NULL); }

  CSVCMsgList_UserMessages_usermsg_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_UserMessages_usermsg_t& from);
  void MergeFrom(const CSVCMsgList_UserMessages_usermsg_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsgList_UserMessages_usermsg_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::int32 tick() const;
  void set_tick(::google::protobuf::int32 value);

  // optional .CSVCMsg_UserMessage msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::CSVCMsg_UserMessage& msg() const;
  ::CSVCMsg_UserMessage* mutable_msg();
  ::CSVCMsg_UserMessage* release_msg();
  void set_allocated_msg(::CSVCMsg_UserMessage* msg);

  // @@protoc_insertion_point(class_scope:CSVCMsgList_UserMessages.usermsg_t)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CSVCMsg_UserMessage* msg_;
  ::google::protobuf::int32 tick_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_UserMessages_usermsg_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_UserMessages : public ::google::protobuf::Message {
 public:
  CSVCMsgList_UserMessages();
  virtual ~CSVCMsgList_UserMessages();

  CSVCMsgList_UserMessages(const CSVCMsgList_UserMessages& from);

  inline CSVCMsgList_UserMessages& operator=(const CSVCMsgList_UserMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_UserMessages& default_instance();

  void Swap(CSVCMsgList_UserMessages* other);

  // implements Message ----------------------------------------------

  inline CSVCMsgList_UserMessages* New() const { return New(NULL); }

  CSVCMsgList_UserMessages* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_UserMessages& from);
  void MergeFrom(const CSVCMsgList_UserMessages& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsgList_UserMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsgList_UserMessages_usermsg_t usermsg_t;

  // accessors -------------------------------------------------------

  // repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
  int usermsgs_size() const;
  void clear_usermsgs();
  static const int kUsermsgsFieldNumber = 1;
  const ::CSVCMsgList_UserMessages_usermsg_t& usermsgs(int index) const;
  ::CSVCMsgList_UserMessages_usermsg_t* mutable_usermsgs(int index);
  ::CSVCMsgList_UserMessages_usermsg_t* add_usermsgs();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >*
      mutable_usermsgs();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >&
      usermsgs() const;

  // @@protoc_insertion_point(class_scope:CSVCMsgList_UserMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t > usermsgs_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_UserMessages* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SpawnGroup_Load : public ::google::protobuf::Message {
 public:
  CNETMsg_SpawnGroup_Load();
  virtual ~CNETMsg_SpawnGroup_Load();

  CNETMsg_SpawnGroup_Load(const CNETMsg_SpawnGroup_Load& from);

  inline CNETMsg_SpawnGroup_Load& operator=(const CNETMsg_SpawnGroup_Load& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SpawnGroup_Load& default_instance();

  void Swap(CNETMsg_SpawnGroup_Load* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SpawnGroup_Load* New() const { return New(NULL); }

  CNETMsg_SpawnGroup_Load* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SpawnGroup_Load& from);
  void MergeFrom(const CNETMsg_SpawnGroup_Load& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SpawnGroup_Load* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string worldname = 1;
  bool has_worldname() const;
  void clear_worldname();
  static const int kWorldnameFieldNumber = 1;
  const ::std::string& worldname() const;
  void set_worldname(const ::std::string& value);
  void set_worldname(const char* value);
  void set_worldname(const char* value, size_t size);
  ::std::string* mutable_worldname();
  ::std::string* release_worldname();
  void set_allocated_worldname(::std::string* worldname);

  // optional string entitylumpname = 2;
  bool has_entitylumpname() const;
  void clear_entitylumpname();
  static const int kEntitylumpnameFieldNumber = 2;
  const ::std::string& entitylumpname() const;
  void set_entitylumpname(const ::std::string& value);
  void set_entitylumpname(const char* value);
  void set_entitylumpname(const char* value, size_t size);
  ::std::string* mutable_entitylumpname();
  ::std::string* release_entitylumpname();
  void set_allocated_entitylumpname(::std::string* entitylumpname);

  // optional string entityfiltername = 3;
  bool has_entityfiltername() const;
  void clear_entityfiltername();
  static const int kEntityfilternameFieldNumber = 3;
  const ::std::string& entityfiltername() const;
  void set_entityfiltername(const ::std::string& value);
  void set_entityfiltername(const char* value);
  void set_entityfiltername(const char* value, size_t size);
  ::std::string* mutable_entityfiltername();
  ::std::string* release_entityfiltername();
  void set_allocated_entityfiltername(::std::string* entityfiltername);

  // optional uint32 spawngrouphandle = 4;
  bool has_spawngrouphandle() const;
  void clear_spawngrouphandle();
  static const int kSpawngrouphandleFieldNumber = 4;
  ::google::protobuf::uint32 spawngrouphandle() const;
  void set_spawngrouphandle(::google::protobuf::uint32 value);

  // optional uint32 spawngroupownerhandle = 5;
  bool has_spawngroupownerhandle() const;
  void clear_spawngroupownerhandle();
  static const int kSpawngroupownerhandleFieldNumber = 5;
  ::google::protobuf::uint32 spawngroupownerhandle() const;
  void set_spawngroupownerhandle(::google::protobuf::uint32 value);

  // optional .CMsgVector world_offset_pos = 6;
  bool has_world_offset_pos() const;
  void clear_world_offset_pos();
  static const int kWorldOffsetPosFieldNumber = 6;
  const ::CMsgVector& world_offset_pos() const;
  ::CMsgVector* mutable_world_offset_pos();
  ::CMsgVector* release_world_offset_pos();
  void set_allocated_world_offset_pos(::CMsgVector* world_offset_pos);

  // optional .CMsgQAngle world_offset_angle = 7;
  bool has_world_offset_angle() const;
  void clear_world_offset_angle();
  static const int kWorldOffsetAngleFieldNumber = 7;
  const ::CMsgQAngle& world_offset_angle() const;
  ::CMsgQAngle* mutable_world_offset_angle();
  ::CMsgQAngle* release_world_offset_angle();
  void set_allocated_world_offset_angle(::CMsgQAngle* world_offset_angle);

  // optional bytes spawngroupmanifest = 8;
  bool has_spawngroupmanifest() const;
  void clear_spawngroupmanifest();
  static const int kSpawngroupmanifestFieldNumber = 8;
  const ::std::string& spawngroupmanifest() const;
  void set_spawngroupmanifest(const ::std::string& value);
  void set_spawngroupmanifest(const char* value);
  void set_spawngroupmanifest(const void* value, size_t size);
  ::std::string* mutable_spawngroupmanifest();
  ::std::string* release_spawngroupmanifest();
  void set_allocated_spawngroupmanifest(::std::string* spawngroupmanifest);

  // optional uint32 flags = 9;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 9;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional int32 tickcount = 10;
  bool has_tickcount() const;
  void clear_tickcount();
  static const int kTickcountFieldNumber = 10;
  ::google::protobuf::int32 tickcount() const;
  void set_tickcount(::google::protobuf::int32 value);

  // optional bool manifestincomplete = 11;
  bool has_manifestincomplete() const;
  void clear_manifestincomplete();
  static const int kManifestincompleteFieldNumber = 11;
  bool manifestincomplete() const;
  void set_manifestincomplete(bool value);

  // optional string localnamefixup = 12;
  bool has_localnamefixup() const;
  void clear_localnamefixup();
  static const int kLocalnamefixupFieldNumber = 12;
  const ::std::string& localnamefixup() const;
  void set_localnamefixup(const ::std::string& value);
  void set_localnamefixup(const char* value);
  void set_localnamefixup(const char* value, size_t size);
  ::std::string* mutable_localnamefixup();
  ::std::string* release_localnamefixup();
  void set_allocated_localnamefixup(::std::string* localnamefixup);

  // optional string parentnamefixup = 13;
  bool has_parentnamefixup() const;
  void clear_parentnamefixup();
  static const int kParentnamefixupFieldNumber = 13;
  const ::std::string& parentnamefixup() const;
  void set_parentnamefixup(const ::std::string& value);
  void set_parentnamefixup(const char* value);
  void set_parentnamefixup(const char* value, size_t size);
  ::std::string* mutable_parentnamefixup();
  ::std::string* release_parentnamefixup();
  void set_allocated_parentnamefixup(::std::string* parentnamefixup);

  // optional int32 manifestloadpriority = 14;
  bool has_manifestloadpriority() const;
  void clear_manifestloadpriority();
  static const int kManifestloadpriorityFieldNumber = 14;
  ::google::protobuf::int32 manifestloadpriority() const;
  void set_manifestloadpriority(::google::protobuf::int32 value);

  // optional uint32 worldgroupid = 15;
  bool has_worldgroupid() const;
  void clear_worldgroupid();
  static const int kWorldgroupidFieldNumber = 15;
  ::google::protobuf::uint32 worldgroupid() const;
  void set_worldgroupid(::google::protobuf::uint32 value);

  // optional uint32 creationsequence = 16;
  bool has_creationsequence() const;
  void clear_creationsequence();
  static const int kCreationsequenceFieldNumber = 16;
  ::google::protobuf::uint32 creationsequence() const;
  void set_creationsequence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_SpawnGroup_Load)
 private:
  inline void set_has_worldname();
  inline void clear_has_worldname();
  inline void set_has_entitylumpname();
  inline void clear_has_entitylumpname();
  inline void set_has_entityfiltername();
  inline void clear_has_entityfiltername();
  inline void set_has_spawngrouphandle();
  inline void clear_has_spawngrouphandle();
  inline void set_has_spawngroupownerhandle();
  inline void clear_has_spawngroupownerhandle();
  inline void set_has_world_offset_pos();
  inline void clear_has_world_offset_pos();
  inline void set_has_world_offset_angle();
  inline void clear_has_world_offset_angle();
  inline void set_has_spawngroupmanifest();
  inline void clear_has_spawngroupmanifest();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_tickcount();
  inline void clear_has_tickcount();
  inline void set_has_manifestincomplete();
  inline void clear_has_manifestincomplete();
  inline void set_has_localnamefixup();
  inline void clear_has_localnamefixup();
  inline void set_has_parentnamefixup();
  inline void clear_has_parentnamefixup();
  inline void set_has_manifestloadpriority();
  inline void clear_has_manifestloadpriority();
  inline void set_has_worldgroupid();
  inline void clear_has_worldgroupid();
  inline void set_has_creationsequence();
  inline void clear_has_creationsequence();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr worldname_;
  ::google::protobuf::internal::ArenaStringPtr entitylumpname_;
  ::google::protobuf::internal::ArenaStringPtr entityfiltername_;
  ::google::protobuf::uint32 spawngrouphandle_;
  ::google::protobuf::uint32 spawngroupownerhandle_;
  ::CMsgVector* world_offset_pos_;
  ::CMsgQAngle* world_offset_angle_;
  ::google::protobuf::internal::ArenaStringPtr spawngroupmanifest_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::int32 tickcount_;
  ::google::protobuf::internal::ArenaStringPtr localnamefixup_;
  bool manifestincomplete_;
  ::google::protobuf::int32 manifestloadpriority_;
  ::google::protobuf::internal::ArenaStringPtr parentnamefixup_;
  ::google::protobuf::uint32 worldgroupid_;
  ::google::protobuf::uint32 creationsequence_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SpawnGroup_Load* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SpawnGroup_ManifestUpdate : public ::google::protobuf::Message {
 public:
  CNETMsg_SpawnGroup_ManifestUpdate();
  virtual ~CNETMsg_SpawnGroup_ManifestUpdate();

  CNETMsg_SpawnGroup_ManifestUpdate(const CNETMsg_SpawnGroup_ManifestUpdate& from);

  inline CNETMsg_SpawnGroup_ManifestUpdate& operator=(const CNETMsg_SpawnGroup_ManifestUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SpawnGroup_ManifestUpdate& default_instance();

  void Swap(CNETMsg_SpawnGroup_ManifestUpdate* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SpawnGroup_ManifestUpdate* New() const { return New(NULL); }

  CNETMsg_SpawnGroup_ManifestUpdate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SpawnGroup_ManifestUpdate& from);
  void MergeFrom(const CNETMsg_SpawnGroup_ManifestUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SpawnGroup_ManifestUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 spawngrouphandle = 1;
  bool has_spawngrouphandle() const;
  void clear_spawngrouphandle();
  static const int kSpawngrouphandleFieldNumber = 1;
  ::google::protobuf::uint32 spawngrouphandle() const;
  void set_spawngrouphandle(::google::protobuf::uint32 value);

  // optional bytes spawngroupmanifest = 2;
  bool has_spawngroupmanifest() const;
  void clear_spawngroupmanifest();
  static const int kSpawngroupmanifestFieldNumber = 2;
  const ::std::string& spawngroupmanifest() const;
  void set_spawngroupmanifest(const ::std::string& value);
  void set_spawngroupmanifest(const char* value);
  void set_spawngroupmanifest(const void* value, size_t size);
  ::std::string* mutable_spawngroupmanifest();
  ::std::string* release_spawngroupmanifest();
  void set_allocated_spawngroupmanifest(::std::string* spawngroupmanifest);

  // optional bool manifestincomplete = 3;
  bool has_manifestincomplete() const;
  void clear_manifestincomplete();
  static const int kManifestincompleteFieldNumber = 3;
  bool manifestincomplete() const;
  void set_manifestincomplete(bool value);

  // @@protoc_insertion_point(class_scope:CNETMsg_SpawnGroup_ManifestUpdate)
 private:
  inline void set_has_spawngrouphandle();
  inline void clear_has_spawngrouphandle();
  inline void set_has_spawngroupmanifest();
  inline void clear_has_spawngroupmanifest();
  inline void set_has_manifestincomplete();
  inline void clear_has_manifestincomplete();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr spawngroupmanifest_;
  ::google::protobuf::uint32 spawngrouphandle_;
  bool manifestincomplete_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SpawnGroup_ManifestUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SpawnGroup_SetCreationTick : public ::google::protobuf::Message {
 public:
  CNETMsg_SpawnGroup_SetCreationTick();
  virtual ~CNETMsg_SpawnGroup_SetCreationTick();

  CNETMsg_SpawnGroup_SetCreationTick(const CNETMsg_SpawnGroup_SetCreationTick& from);

  inline CNETMsg_SpawnGroup_SetCreationTick& operator=(const CNETMsg_SpawnGroup_SetCreationTick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SpawnGroup_SetCreationTick& default_instance();

  void Swap(CNETMsg_SpawnGroup_SetCreationTick* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SpawnGroup_SetCreationTick* New() const { return New(NULL); }

  CNETMsg_SpawnGroup_SetCreationTick* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SpawnGroup_SetCreationTick& from);
  void MergeFrom(const CNETMsg_SpawnGroup_SetCreationTick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SpawnGroup_SetCreationTick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 spawngrouphandle = 1;
  bool has_spawngrouphandle() const;
  void clear_spawngrouphandle();
  static const int kSpawngrouphandleFieldNumber = 1;
  ::google::protobuf::uint32 spawngrouphandle() const;
  void set_spawngrouphandle(::google::protobuf::uint32 value);

  // optional int32 tickcount = 2;
  bool has_tickcount() const;
  void clear_tickcount();
  static const int kTickcountFieldNumber = 2;
  ::google::protobuf::int32 tickcount() const;
  void set_tickcount(::google::protobuf::int32 value);

  // optional uint32 creationsequence = 3;
  bool has_creationsequence() const;
  void clear_creationsequence();
  static const int kCreationsequenceFieldNumber = 3;
  ::google::protobuf::uint32 creationsequence() const;
  void set_creationsequence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_SpawnGroup_SetCreationTick)
 private:
  inline void set_has_spawngrouphandle();
  inline void clear_has_spawngrouphandle();
  inline void set_has_tickcount();
  inline void clear_has_tickcount();
  inline void set_has_creationsequence();
  inline void clear_has_creationsequence();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 spawngrouphandle_;
  ::google::protobuf::int32 tickcount_;
  ::google::protobuf::uint32 creationsequence_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SpawnGroup_SetCreationTick* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SpawnGroup_Unload : public ::google::protobuf::Message {
 public:
  CNETMsg_SpawnGroup_Unload();
  virtual ~CNETMsg_SpawnGroup_Unload();

  CNETMsg_SpawnGroup_Unload(const CNETMsg_SpawnGroup_Unload& from);

  inline CNETMsg_SpawnGroup_Unload& operator=(const CNETMsg_SpawnGroup_Unload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SpawnGroup_Unload& default_instance();

  void Swap(CNETMsg_SpawnGroup_Unload* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SpawnGroup_Unload* New() const { return New(NULL); }

  CNETMsg_SpawnGroup_Unload* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SpawnGroup_Unload& from);
  void MergeFrom(const CNETMsg_SpawnGroup_Unload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SpawnGroup_Unload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 spawngrouphandle = 1;
  bool has_spawngrouphandle() const;
  void clear_spawngrouphandle();
  static const int kSpawngrouphandleFieldNumber = 1;
  ::google::protobuf::uint32 spawngrouphandle() const;
  void set_spawngrouphandle(::google::protobuf::uint32 value);

  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional int32 tickcount = 3;
  bool has_tickcount() const;
  void clear_tickcount();
  static const int kTickcountFieldNumber = 3;
  ::google::protobuf::int32 tickcount() const;
  void set_tickcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_SpawnGroup_Unload)
 private:
  inline void set_has_spawngrouphandle();
  inline void clear_has_spawngrouphandle();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_tickcount();
  inline void clear_has_tickcount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 spawngrouphandle_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::int32 tickcount_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SpawnGroup_Unload* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SpawnGroup_LoadCompleted : public ::google::protobuf::Message {
 public:
  CNETMsg_SpawnGroup_LoadCompleted();
  virtual ~CNETMsg_SpawnGroup_LoadCompleted();

  CNETMsg_SpawnGroup_LoadCompleted(const CNETMsg_SpawnGroup_LoadCompleted& from);

  inline CNETMsg_SpawnGroup_LoadCompleted& operator=(const CNETMsg_SpawnGroup_LoadCompleted& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SpawnGroup_LoadCompleted& default_instance();

  void Swap(CNETMsg_SpawnGroup_LoadCompleted* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SpawnGroup_LoadCompleted* New() const { return New(NULL); }

  CNETMsg_SpawnGroup_LoadCompleted* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SpawnGroup_LoadCompleted& from);
  void MergeFrom(const CNETMsg_SpawnGroup_LoadCompleted& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SpawnGroup_LoadCompleted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 spawngrouphandle = 1;
  bool has_spawngrouphandle() const;
  void clear_spawngrouphandle();
  static const int kSpawngrouphandleFieldNumber = 1;
  ::google::protobuf::uint32 spawngrouphandle() const;
  void set_spawngrouphandle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_SpawnGroup_LoadCompleted)
 private:
  inline void set_has_spawngrouphandle();
  inline void clear_has_spawngrouphandle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 spawngrouphandle_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SpawnGroup_LoadCompleted* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameSessionConfiguration : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameSessionConfiguration();
  virtual ~CSVCMsg_GameSessionConfiguration();

  CSVCMsg_GameSessionConfiguration(const CSVCMsg_GameSessionConfiguration& from);

  inline CSVCMsg_GameSessionConfiguration& operator=(const CSVCMsg_GameSessionConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameSessionConfiguration& default_instance();

  void Swap(CSVCMsg_GameSessionConfiguration* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameSessionConfiguration* New() const { return New(NULL); }

  CSVCMsg_GameSessionConfiguration* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameSessionConfiguration& from);
  void MergeFrom(const CSVCMsg_GameSessionConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameSessionConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_multiplayer = 1;
  bool has_is_multiplayer() const;
  void clear_is_multiplayer();
  static const int kIsMultiplayerFieldNumber = 1;
  bool is_multiplayer() const;
  void set_is_multiplayer(bool value);

  // optional bool is_loadsavegame = 2;
  bool has_is_loadsavegame() const;
  void clear_is_loadsavegame();
  static const int kIsLoadsavegameFieldNumber = 2;
  bool is_loadsavegame() const;
  void set_is_loadsavegame(bool value);

  // optional bool is_background_map = 3;
  bool has_is_background_map() const;
  void clear_is_background_map();
  static const int kIsBackgroundMapFieldNumber = 3;
  bool is_background_map() const;
  void set_is_background_map(bool value);

  // optional bool is_headless = 4;
  bool has_is_headless() const;
  void clear_is_headless();
  static const int kIsHeadlessFieldNumber = 4;
  bool is_headless() const;
  void set_is_headless(bool value);

  // optional uint32 min_client_limit = 5;
  bool has_min_client_limit() const;
  void clear_min_client_limit();
  static const int kMinClientLimitFieldNumber = 5;
  ::google::protobuf::uint32 min_client_limit() const;
  void set_min_client_limit(::google::protobuf::uint32 value);

  // optional uint32 max_client_limit = 6;
  bool has_max_client_limit() const;
  void clear_max_client_limit();
  static const int kMaxClientLimitFieldNumber = 6;
  ::google::protobuf::uint32 max_client_limit() const;
  void set_max_client_limit(::google::protobuf::uint32 value);

  // optional uint32 max_clients = 7;
  bool has_max_clients() const;
  void clear_max_clients();
  static const int kMaxClientsFieldNumber = 7;
  ::google::protobuf::uint32 max_clients() const;
  void set_max_clients(::google::protobuf::uint32 value);

  // optional fixed32 tick_interval = 8;
  bool has_tick_interval() const;
  void clear_tick_interval();
  static const int kTickIntervalFieldNumber = 8;
  ::google::protobuf::uint32 tick_interval() const;
  void set_tick_interval(::google::protobuf::uint32 value);

  // optional string hostname = 9;
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 9;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // optional string savegamename = 10;
  bool has_savegamename() const;
  void clear_savegamename();
  static const int kSavegamenameFieldNumber = 10;
  const ::std::string& savegamename() const;
  void set_savegamename(const ::std::string& value);
  void set_savegamename(const char* value);
  void set_savegamename(const char* value, size_t size);
  ::std::string* mutable_savegamename();
  ::std::string* release_savegamename();
  void set_allocated_savegamename(::std::string* savegamename);

  // optional string s1_mapname = 11;
  bool has_s1_mapname() const;
  void clear_s1_mapname();
  static const int kS1MapnameFieldNumber = 11;
  const ::std::string& s1_mapname() const;
  void set_s1_mapname(const ::std::string& value);
  void set_s1_mapname(const char* value);
  void set_s1_mapname(const char* value, size_t size);
  ::std::string* mutable_s1_mapname();
  ::std::string* release_s1_mapname();
  void set_allocated_s1_mapname(::std::string* s1_mapname);

  // optional string gamemode = 12;
  bool has_gamemode() const;
  void clear_gamemode();
  static const int kGamemodeFieldNumber = 12;
  const ::std::string& gamemode() const;
  void set_gamemode(const ::std::string& value);
  void set_gamemode(const char* value);
  void set_gamemode(const char* value, size_t size);
  ::std::string* mutable_gamemode();
  ::std::string* release_gamemode();
  void set_allocated_gamemode(::std::string* gamemode);

  // optional string server_ip_address = 13;
  bool has_server_ip_address() const;
  void clear_server_ip_address();
  static const int kServerIpAddressFieldNumber = 13;
  const ::std::string& server_ip_address() const;
  void set_server_ip_address(const ::std::string& value);
  void set_server_ip_address(const char* value);
  void set_server_ip_address(const char* value, size_t size);
  ::std::string* mutable_server_ip_address();
  ::std::string* release_server_ip_address();
  void set_allocated_server_ip_address(::std::string* server_ip_address);

  // optional bytes data = 14;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 14;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional bool is_localonly = 15;
  bool has_is_localonly() const;
  void clear_is_localonly();
  static const int kIsLocalonlyFieldNumber = 15;
  bool is_localonly() const;
  void set_is_localonly(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameSessionConfiguration)
 private:
  inline void set_has_is_multiplayer();
  inline void clear_has_is_multiplayer();
  inline void set_has_is_loadsavegame();
  inline void clear_has_is_loadsavegame();
  inline void set_has_is_background_map();
  inline void clear_has_is_background_map();
  inline void set_has_is_headless();
  inline void clear_has_is_headless();
  inline void set_has_min_client_limit();
  inline void clear_has_min_client_limit();
  inline void set_has_max_client_limit();
  inline void clear_has_max_client_limit();
  inline void set_has_max_clients();
  inline void clear_has_max_clients();
  inline void set_has_tick_interval();
  inline void clear_has_tick_interval();
  inline void set_has_hostname();
  inline void clear_has_hostname();
  inline void set_has_savegamename();
  inline void clear_has_savegamename();
  inline void set_has_s1_mapname();
  inline void clear_has_s1_mapname();
  inline void set_has_gamemode();
  inline void clear_has_gamemode();
  inline void set_has_server_ip_address();
  inline void clear_has_server_ip_address();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_is_localonly();
  inline void clear_has_is_localonly();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_multiplayer_;
  bool is_loadsavegame_;
  bool is_background_map_;
  bool is_headless_;
  ::google::protobuf::uint32 min_client_limit_;
  ::google::protobuf::uint32 max_client_limit_;
  ::google::protobuf::uint32 max_clients_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::internal::ArenaStringPtr savegamename_;
  ::google::protobuf::internal::ArenaStringPtr s1_mapname_;
  ::google::protobuf::uint32 tick_interval_;
  bool is_localonly_;
  ::google::protobuf::internal::ArenaStringPtr gamemode_;
  ::google::protobuf::internal::ArenaStringPtr server_ip_address_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameSessionConfiguration* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgVector

// optional float x = 1;
inline bool CMsgVector::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVector::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVector::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVector::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgVector::x() const {
  // @@protoc_insertion_point(field_get:CMsgVector.x)
  return x_;
}
inline void CMsgVector::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector.x)
}

// optional float y = 2;
inline bool CMsgVector::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVector::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVector::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVector::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgVector::y() const {
  // @@protoc_insertion_point(field_get:CMsgVector.y)
  return y_;
}
inline void CMsgVector::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector.y)
}

// optional float z = 3;
inline bool CMsgVector::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgVector::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgVector::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgVector::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float CMsgVector::z() const {
  // @@protoc_insertion_point(field_get:CMsgVector.z)
  return z_;
}
inline void CMsgVector::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector.z)
}

// -------------------------------------------------------------------

// CMsgVector2D

// optional float x = 1;
inline bool CMsgVector2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVector2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVector2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVector2D::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgVector2D::x() const {
  // @@protoc_insertion_point(field_get:CMsgVector2D.x)
  return x_;
}
inline void CMsgVector2D::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector2D.x)
}

// optional float y = 2;
inline bool CMsgVector2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVector2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVector2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVector2D::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgVector2D::y() const {
  // @@protoc_insertion_point(field_get:CMsgVector2D.y)
  return y_;
}
inline void CMsgVector2D::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector2D.y)
}

// -------------------------------------------------------------------

// CMsgQAngle

// optional float x = 1;
inline bool CMsgQAngle::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgQAngle::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgQAngle::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgQAngle::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgQAngle::x() const {
  // @@protoc_insertion_point(field_get:CMsgQAngle.x)
  return x_;
}
inline void CMsgQAngle::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgQAngle.x)
}

// optional float y = 2;
inline bool CMsgQAngle::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgQAngle::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgQAngle::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgQAngle::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgQAngle::y() const {
  // @@protoc_insertion_point(field_get:CMsgQAngle.y)
  return y_;
}
inline void CMsgQAngle::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgQAngle.y)
}

// optional float z = 3;
inline bool CMsgQAngle::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgQAngle::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgQAngle::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgQAngle::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float CMsgQAngle::z() const {
  // @@protoc_insertion_point(field_get:CMsgQAngle.z)
  return z_;
}
inline void CMsgQAngle::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:CMsgQAngle.z)
}

// -------------------------------------------------------------------

// CMsgPlayerInfo

// optional string name = 1;
inline bool CMsgPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgPlayerInfo.name)
}
inline void CMsgPlayerInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgPlayerInfo.name)
}
inline void CMsgPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgPlayerInfo.name)
}
inline ::std::string* CMsgPlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgPlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPlayerInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgPlayerInfo.name)
}

// optional fixed64 xuid = 2;
inline bool CMsgPlayerInfo::has_xuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPlayerInfo::set_has_xuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPlayerInfo::clear_has_xuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPlayerInfo::clear_xuid() {
  xuid_ = GOOGLE_ULONGLONG(0);
  clear_has_xuid();
}
inline ::google::protobuf::uint64 CMsgPlayerInfo::xuid() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerInfo.xuid)
  return xuid_;
}
inline void CMsgPlayerInfo::set_xuid(::google::protobuf::uint64 value) {
  set_has_xuid();
  xuid_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerInfo.xuid)
}

// optional int32 userid = 3;
inline bool CMsgPlayerInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPlayerInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPlayerInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPlayerInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 CMsgPlayerInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerInfo.userid)
  return userid_;
}
inline void CMsgPlayerInfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerInfo.userid)
}

// optional fixed64 steamid = 4;
inline bool CMsgPlayerInfo::has_steamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPlayerInfo::set_has_steamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPlayerInfo::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPlayerInfo::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgPlayerInfo::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerInfo.steamid)
  return steamid_;
}
inline void CMsgPlayerInfo::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerInfo.steamid)
}

// optional bool fakeplayer = 5;
inline bool CMsgPlayerInfo::has_fakeplayer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPlayerInfo::set_has_fakeplayer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPlayerInfo::clear_has_fakeplayer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPlayerInfo::clear_fakeplayer() {
  fakeplayer_ = false;
  clear_has_fakeplayer();
}
inline bool CMsgPlayerInfo::fakeplayer() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerInfo.fakeplayer)
  return fakeplayer_;
}
inline void CMsgPlayerInfo::set_fakeplayer(bool value) {
  set_has_fakeplayer();
  fakeplayer_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerInfo.fakeplayer)
}

// optional bool ishltv = 6;
inline bool CMsgPlayerInfo::has_ishltv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPlayerInfo::set_has_ishltv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPlayerInfo::clear_has_ishltv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPlayerInfo::clear_ishltv() {
  ishltv_ = false;
  clear_has_ishltv();
}
inline bool CMsgPlayerInfo::ishltv() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerInfo.ishltv)
  return ishltv_;
}
inline void CMsgPlayerInfo::set_ishltv(bool value) {
  set_has_ishltv();
  ishltv_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerInfo.ishltv)
}

// -------------------------------------------------------------------

// CMsg_CVars_CVar

// optional string name = 1;
inline bool CMsg_CVars_CVar::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg_CVars_CVar::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg_CVars_CVar::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg_CVars_CVar::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsg_CVars_CVar::name() const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.CVar.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsg_CVars.CVar.name)
}
inline void CMsg_CVars_CVar::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsg_CVars.CVar.name)
}
inline void CMsg_CVars_CVar::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsg_CVars.CVar.name)
}
inline ::std::string* CMsg_CVars_CVar::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.CVar.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsg_CVars_CVar::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsg_CVars.CVar.name)
}

// optional string value = 2;
inline bool CMsg_CVars_CVar::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg_CVars_CVar::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg_CVars_CVar::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg_CVars_CVar::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CMsg_CVars_CVar::value() const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.CVar.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsg_CVars.CVar.value)
}
inline void CMsg_CVars_CVar::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsg_CVars.CVar.value)
}
inline void CMsg_CVars_CVar::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsg_CVars.CVar.value)
}
inline ::std::string* CMsg_CVars_CVar::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.CVar.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsg_CVars_CVar::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CMsg_CVars.CVar.value)
}

// -------------------------------------------------------------------

// CMsg_CVars

// repeated .CMsg_CVars.CVar cvars = 1;
inline int CMsg_CVars::cvars_size() const {
  return cvars_.size();
}
inline void CMsg_CVars::clear_cvars() {
  cvars_.Clear();
}
inline const ::CMsg_CVars_CVar& CMsg_CVars::cvars(int index) const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.cvars)
  return cvars_.Get(index);
}
inline ::CMsg_CVars_CVar* CMsg_CVars::mutable_cvars(int index) {
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.cvars)
  return cvars_.Mutable(index);
}
inline ::CMsg_CVars_CVar* CMsg_CVars::add_cvars() {
  // @@protoc_insertion_point(field_add:CMsg_CVars.cvars)
  return cvars_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
CMsg_CVars::mutable_cvars() {
  // @@protoc_insertion_point(field_mutable_list:CMsg_CVars.cvars)
  return &cvars_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
CMsg_CVars::cvars() const {
  // @@protoc_insertion_point(field_list:CMsg_CVars.cvars)
  return cvars_;
}

// -------------------------------------------------------------------

// CNETMsg_NOP

// -------------------------------------------------------------------

// CNETMsg_SplitScreenUser

// optional int32 slot = 1;
inline bool CNETMsg_SplitScreenUser::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SplitScreenUser::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SplitScreenUser::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SplitScreenUser::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 CNETMsg_SplitScreenUser::slot() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SplitScreenUser.slot)
  return slot_;
}
inline void CNETMsg_SplitScreenUser::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SplitScreenUser.slot)
}

// -------------------------------------------------------------------

// CNETMsg_Disconnect

// optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
inline bool CNETMsg_Disconnect::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_Disconnect::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_Disconnect::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_Disconnect::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::ENetworkDisconnectionReason CNETMsg_Disconnect::reason() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Disconnect.reason)
  return static_cast< ::ENetworkDisconnectionReason >(reason_);
}
inline void CNETMsg_Disconnect::set_reason(::ENetworkDisconnectionReason value) {
  assert(::ENetworkDisconnectionReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Disconnect.reason)
}

// -------------------------------------------------------------------

// CNETMsg_Tick

// optional uint32 tick = 1;
inline bool CNETMsg_Tick::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_Tick::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_Tick::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_Tick::clear_tick() {
  tick_ = 0u;
  clear_has_tick();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::tick() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.tick)
  return tick_;
}
inline void CNETMsg_Tick::set_tick(::google::protobuf::uint32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.tick)
}

// optional uint32 host_frametime = 2;
inline bool CNETMsg_Tick::has_host_frametime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_Tick::set_has_host_frametime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_Tick::clear_has_host_frametime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_Tick::clear_host_frametime() {
  host_frametime_ = 0u;
  clear_has_host_frametime();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_frametime() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_frametime)
  return host_frametime_;
}
inline void CNETMsg_Tick::set_host_frametime(::google::protobuf::uint32 value) {
  set_has_host_frametime();
  host_frametime_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_frametime)
}

// optional uint32 host_frametime_std_deviation = 3;
inline bool CNETMsg_Tick::has_host_frametime_std_deviation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_Tick::set_has_host_frametime_std_deviation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_Tick::clear_has_host_frametime_std_deviation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_Tick::clear_host_frametime_std_deviation() {
  host_frametime_std_deviation_ = 0u;
  clear_has_host_frametime_std_deviation();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_frametime_std_deviation() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_frametime_std_deviation)
  return host_frametime_std_deviation_;
}
inline void CNETMsg_Tick::set_host_frametime_std_deviation(::google::protobuf::uint32 value) {
  set_has_host_frametime_std_deviation();
  host_frametime_std_deviation_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_frametime_std_deviation)
}

// optional uint32 host_computationtime = 4;
inline bool CNETMsg_Tick::has_host_computationtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CNETMsg_Tick::set_has_host_computationtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CNETMsg_Tick::clear_has_host_computationtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CNETMsg_Tick::clear_host_computationtime() {
  host_computationtime_ = 0u;
  clear_has_host_computationtime();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_computationtime() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_computationtime)
  return host_computationtime_;
}
inline void CNETMsg_Tick::set_host_computationtime(::google::protobuf::uint32 value) {
  set_has_host_computationtime();
  host_computationtime_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_computationtime)
}

// optional uint32 host_computationtime_std_deviation = 5;
inline bool CNETMsg_Tick::has_host_computationtime_std_deviation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CNETMsg_Tick::set_has_host_computationtime_std_deviation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CNETMsg_Tick::clear_has_host_computationtime_std_deviation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CNETMsg_Tick::clear_host_computationtime_std_deviation() {
  host_computationtime_std_deviation_ = 0u;
  clear_has_host_computationtime_std_deviation();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_computationtime_std_deviation() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_computationtime_std_deviation)
  return host_computationtime_std_deviation_;
}
inline void CNETMsg_Tick::set_host_computationtime_std_deviation(::google::protobuf::uint32 value) {
  set_has_host_computationtime_std_deviation();
  host_computationtime_std_deviation_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_computationtime_std_deviation)
}

// optional uint32 host_framestarttime_std_deviation = 6;
inline bool CNETMsg_Tick::has_host_framestarttime_std_deviation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CNETMsg_Tick::set_has_host_framestarttime_std_deviation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CNETMsg_Tick::clear_has_host_framestarttime_std_deviation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CNETMsg_Tick::clear_host_framestarttime_std_deviation() {
  host_framestarttime_std_deviation_ = 0u;
  clear_has_host_framestarttime_std_deviation();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_framestarttime_std_deviation() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_framestarttime_std_deviation)
  return host_framestarttime_std_deviation_;
}
inline void CNETMsg_Tick::set_host_framestarttime_std_deviation(::google::protobuf::uint32 value) {
  set_has_host_framestarttime_std_deviation();
  host_framestarttime_std_deviation_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_framestarttime_std_deviation)
}

// -------------------------------------------------------------------

// CNETMsg_StringCmd

// optional string command = 1;
inline bool CNETMsg_StringCmd::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_StringCmd::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_StringCmd::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_StringCmd::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
inline const ::std::string& CNETMsg_StringCmd::command() const {
  // @@protoc_insertion_point(field_get:CNETMsg_StringCmd.command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_StringCmd::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_StringCmd.command)
}
inline void CNETMsg_StringCmd::set_command(const char* value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_StringCmd.command)
}
inline void CNETMsg_StringCmd::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_StringCmd.command)
}
inline ::std::string* CNETMsg_StringCmd::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:CNETMsg_StringCmd.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_StringCmd::release_command() {
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_StringCmd::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_StringCmd.command)
}

// -------------------------------------------------------------------

// CNETMsg_SetConVar

// optional .CMsg_CVars convars = 1;
inline bool CNETMsg_SetConVar::has_convars() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SetConVar::set_has_convars() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SetConVar::clear_has_convars() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SetConVar::clear_convars() {
  if (convars_ != NULL) convars_->::CMsg_CVars::Clear();
  clear_has_convars();
}
inline const ::CMsg_CVars& CNETMsg_SetConVar::convars() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SetConVar.convars)
  return convars_ != NULL ? *convars_ : *default_instance_->convars_;
}
inline ::CMsg_CVars* CNETMsg_SetConVar::mutable_convars() {
  set_has_convars();
  if (convars_ == NULL) {
    convars_ = new ::CMsg_CVars;
  }
  // @@protoc_insertion_point(field_mutable:CNETMsg_SetConVar.convars)
  return convars_;
}
inline ::CMsg_CVars* CNETMsg_SetConVar::release_convars() {
  clear_has_convars();
  ::CMsg_CVars* temp = convars_;
  convars_ = NULL;
  return temp;
}
inline void CNETMsg_SetConVar::set_allocated_convars(::CMsg_CVars* convars) {
  delete convars_;
  convars_ = convars;
  if (convars) {
    set_has_convars();
  } else {
    clear_has_convars();
  }
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SetConVar.convars)
}

// -------------------------------------------------------------------

// CNETMsg_SignonState

// optional uint32 signon_state = 1;
inline bool CNETMsg_SignonState::has_signon_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SignonState::set_has_signon_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SignonState::clear_has_signon_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SignonState::clear_signon_state() {
  signon_state_ = 0u;
  clear_has_signon_state();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::signon_state() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.signon_state)
  return signon_state_;
}
inline void CNETMsg_SignonState::set_signon_state(::google::protobuf::uint32 value) {
  set_has_signon_state();
  signon_state_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.signon_state)
}

// optional uint32 spawn_count = 2;
inline bool CNETMsg_SignonState::has_spawn_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_SignonState::set_has_spawn_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_SignonState::clear_has_spawn_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_SignonState::clear_spawn_count() {
  spawn_count_ = 0u;
  clear_has_spawn_count();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::spawn_count() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.spawn_count)
  return spawn_count_;
}
inline void CNETMsg_SignonState::set_spawn_count(::google::protobuf::uint32 value) {
  set_has_spawn_count();
  spawn_count_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.spawn_count)
}

// optional uint32 num_server_players = 3;
inline bool CNETMsg_SignonState::has_num_server_players() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_SignonState::set_has_num_server_players() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_SignonState::clear_has_num_server_players() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_SignonState::clear_num_server_players() {
  num_server_players_ = 0u;
  clear_has_num_server_players();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::num_server_players() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.num_server_players)
  return num_server_players_;
}
inline void CNETMsg_SignonState::set_num_server_players(::google::protobuf::uint32 value) {
  set_has_num_server_players();
  num_server_players_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.num_server_players)
}

// repeated string players_networkids = 4;
inline int CNETMsg_SignonState::players_networkids_size() const {
  return players_networkids_.size();
}
inline void CNETMsg_SignonState::clear_players_networkids() {
  players_networkids_.Clear();
}
inline const ::std::string& CNETMsg_SignonState::players_networkids(int index) const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.players_networkids)
  return players_networkids_.Get(index);
}
inline ::std::string* CNETMsg_SignonState::mutable_players_networkids(int index) {
  // @@protoc_insertion_point(field_mutable:CNETMsg_SignonState.players_networkids)
  return players_networkids_.Mutable(index);
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.players_networkids)
  players_networkids_.Mutable(index)->assign(value);
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const char* value) {
  players_networkids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CNETMsg_SignonState.players_networkids)
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const char* value, size_t size) {
  players_networkids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SignonState.players_networkids)
}
inline ::std::string* CNETMsg_SignonState::add_players_networkids() {
  return players_networkids_.Add();
}
inline void CNETMsg_SignonState::add_players_networkids(const ::std::string& value) {
  players_networkids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CNETMsg_SignonState.players_networkids)
}
inline void CNETMsg_SignonState::add_players_networkids(const char* value) {
  players_networkids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CNETMsg_SignonState.players_networkids)
}
inline void CNETMsg_SignonState::add_players_networkids(const char* value, size_t size) {
  players_networkids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CNETMsg_SignonState.players_networkids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CNETMsg_SignonState::players_networkids() const {
  // @@protoc_insertion_point(field_list:CNETMsg_SignonState.players_networkids)
  return players_networkids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CNETMsg_SignonState::mutable_players_networkids() {
  // @@protoc_insertion_point(field_mutable_list:CNETMsg_SignonState.players_networkids)
  return &players_networkids_;
}

// optional string map_name = 5;
inline bool CNETMsg_SignonState::has_map_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CNETMsg_SignonState::set_has_map_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CNETMsg_SignonState::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CNETMsg_SignonState::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_name();
}
inline const ::std::string& CNETMsg_SignonState::map_name() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.map_name)
  return map_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SignonState::set_map_name(const ::std::string& value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.map_name)
}
inline void CNETMsg_SignonState::set_map_name(const char* value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SignonState.map_name)
}
inline void CNETMsg_SignonState::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SignonState.map_name)
}
inline ::std::string* CNETMsg_SignonState::mutable_map_name() {
  set_has_map_name();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SignonState.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SignonState::release_map_name() {
  clear_has_map_name();
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SignonState::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    set_has_map_name();
  } else {
    clear_has_map_name();
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SignonState.map_name)
}

// -------------------------------------------------------------------

// CSVCMsg_GameEvent_key_t

// optional int32 type = 1;
inline bool CSVCMsg_GameEvent_key_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEvent_key_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.type)
  return type_;
}
inline void CSVCMsg_GameEvent_key_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.type)
}

// optional string val_string = 2;
inline bool CSVCMsg_GameEvent_key_t::has_val_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_string() {
  val_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_val_string();
}
inline const ::std::string& CSVCMsg_GameEvent_key_t::val_string() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_string)
  return val_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const ::std::string& value) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_string)
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const char* value) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEvent.key_t.val_string)
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const char* value, size_t size) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEvent.key_t.val_string)
}
inline ::std::string* CSVCMsg_GameEvent_key_t::mutable_val_string() {
  set_has_val_string();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEvent.key_t.val_string)
  return val_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEvent_key_t::release_val_string() {
  clear_has_val_string();
  return val_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent_key_t::set_allocated_val_string(::std::string* val_string) {
  if (val_string != NULL) {
    set_has_val_string();
  } else {
    clear_has_val_string();
  }
  val_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val_string);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEvent.key_t.val_string)
}

// optional float val_float = 3;
inline bool CSVCMsg_GameEvent_key_t::has_val_float() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_float() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_float() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_float() {
  val_float_ = 0;
  clear_has_val_float();
}
inline float CSVCMsg_GameEvent_key_t::val_float() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_float)
  return val_float_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_float(float value) {
  set_has_val_float();
  val_float_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_float)
}

// optional int32 val_long = 4;
inline bool CSVCMsg_GameEvent_key_t::has_val_long() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_long() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_long() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_long() {
  val_long_ = 0;
  clear_has_val_long();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_long() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_long)
  return val_long_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_long(::google::protobuf::int32 value) {
  set_has_val_long();
  val_long_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_long)
}

// optional int32 val_short = 5;
inline bool CSVCMsg_GameEvent_key_t::has_val_short() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_short() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_short() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_short() {
  val_short_ = 0;
  clear_has_val_short();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_short() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_short)
  return val_short_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_short(::google::protobuf::int32 value) {
  set_has_val_short();
  val_short_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_short)
}

// optional int32 val_byte = 6;
inline bool CSVCMsg_GameEvent_key_t::has_val_byte() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_byte() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_byte() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_byte() {
  val_byte_ = 0;
  clear_has_val_byte();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_byte() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_byte)
  return val_byte_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_byte(::google::protobuf::int32 value) {
  set_has_val_byte();
  val_byte_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_byte)
}

// optional bool val_bool = 7;
inline bool CSVCMsg_GameEvent_key_t::has_val_bool() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_bool() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_bool() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_bool() {
  val_bool_ = false;
  clear_has_val_bool();
}
inline bool CSVCMsg_GameEvent_key_t::val_bool() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_bool)
  return val_bool_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_bool(bool value) {
  set_has_val_bool();
  val_bool_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_bool)
}

// optional uint64 val_uint64 = 8;
inline bool CSVCMsg_GameEvent_key_t::has_val_uint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_uint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_uint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_uint64() {
  val_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_val_uint64();
}
inline ::google::protobuf::uint64 CSVCMsg_GameEvent_key_t::val_uint64() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_uint64)
  return val_uint64_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_uint64(::google::protobuf::uint64 value) {
  set_has_val_uint64();
  val_uint64_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_uint64)
}

// -------------------------------------------------------------------

// CSVCMsg_GameEvent

// optional string event_name = 1;
inline bool CSVCMsg_GameEvent::has_event_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEvent::set_has_event_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEvent::clear_has_event_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEvent::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_event_name();
}
inline const ::std::string& CSVCMsg_GameEvent::event_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.event_name)
  return event_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent::set_event_name(const ::std::string& value) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.event_name)
}
inline void CSVCMsg_GameEvent::set_event_name(const char* value) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEvent.event_name)
}
inline void CSVCMsg_GameEvent::set_event_name(const char* value, size_t size) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEvent.event_name)
}
inline ::std::string* CSVCMsg_GameEvent::mutable_event_name() {
  set_has_event_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEvent.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEvent::release_event_name() {
  clear_has_event_name();
  return event_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent::set_allocated_event_name(::std::string* event_name) {
  if (event_name != NULL) {
    set_has_event_name();
  } else {
    clear_has_event_name();
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEvent.event_name)
}

// optional int32 eventid = 2;
inline bool CSVCMsg_GameEvent::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEvent::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEvent::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEvent::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent::eventid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.eventid)
  return eventid_;
}
inline void CSVCMsg_GameEvent::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.eventid)
}

// repeated .CSVCMsg_GameEvent.key_t keys = 3;
inline int CSVCMsg_GameEvent::keys_size() const {
  return keys_.size();
}
inline void CSVCMsg_GameEvent::clear_keys() {
  keys_.Clear();
}
inline const ::CSVCMsg_GameEvent_key_t& CSVCMsg_GameEvent::keys(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.keys)
  return keys_.Get(index);
}
inline ::CSVCMsg_GameEvent_key_t* CSVCMsg_GameEvent::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEvent.keys)
  return keys_.Mutable(index);
}
inline ::CSVCMsg_GameEvent_key_t* CSVCMsg_GameEvent::add_keys() {
  // @@protoc_insertion_point(field_add:CSVCMsg_GameEvent.keys)
  return keys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >*
CSVCMsg_GameEvent::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_GameEvent.keys)
  return &keys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >&
CSVCMsg_GameEvent::keys() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_GameEvent.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CSVCMsgList_GameEvents_event_t

// optional int32 tick = 1;
inline bool CSVCMsgList_GameEvents_event_t::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsgList_GameEvents_event_t::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_tick() {
  tick_ = 0;
  clear_has_tick();
}
inline ::google::protobuf::int32 CSVCMsgList_GameEvents_event_t::tick() const {
  // @@protoc_insertion_point(field_get:CSVCMsgList_GameEvents.event_t.tick)
  return tick_;
}
inline void CSVCMsgList_GameEvents_event_t::set_tick(::google::protobuf::int32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsgList_GameEvents.event_t.tick)
}

// optional .CSVCMsg_GameEvent event = 2;
inline bool CSVCMsgList_GameEvents_event_t::has_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsgList_GameEvents_event_t::set_has_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_has_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_event() {
  if (event_ != NULL) event_->::CSVCMsg_GameEvent::Clear();
  clear_has_event();
}
inline const ::CSVCMsg_GameEvent& CSVCMsgList_GameEvents_event_t::event() const {
  // @@protoc_insertion_point(field_get:CSVCMsgList_GameEvents.event_t.event)
  return event_ != NULL ? *event_ : *default_instance_->event_;
}
inline ::CSVCMsg_GameEvent* CSVCMsgList_GameEvents_event_t::mutable_event() {
  set_has_event();
  if (event_ == NULL) {
    event_ = new ::CSVCMsg_GameEvent;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsgList_GameEvents.event_t.event)
  return event_;
}
inline ::CSVCMsg_GameEvent* CSVCMsgList_GameEvents_event_t::release_event() {
  clear_has_event();
  ::CSVCMsg_GameEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline void CSVCMsgList_GameEvents_event_t::set_allocated_event(::CSVCMsg_GameEvent* event) {
  delete event_;
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsgList_GameEvents.event_t.event)
}

// -------------------------------------------------------------------

// CSVCMsgList_GameEvents

// repeated .CSVCMsgList_GameEvents.event_t events = 1;
inline int CSVCMsgList_GameEvents::events_size() const {
  return events_.size();
}
inline void CSVCMsgList_GameEvents::clear_events() {
  events_.Clear();
}
inline const ::CSVCMsgList_GameEvents_event_t& CSVCMsgList_GameEvents::events(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsgList_GameEvents.events)
  return events_.Get(index);
}
inline ::CSVCMsgList_GameEvents_event_t* CSVCMsgList_GameEvents::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsgList_GameEvents.events)
  return events_.Mutable(index);
}
inline ::CSVCMsgList_GameEvents_event_t* CSVCMsgList_GameEvents::add_events() {
  // @@protoc_insertion_point(field_add:CSVCMsgList_GameEvents.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >*
CSVCMsgList_GameEvents::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsgList_GameEvents.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >&
CSVCMsgList_GameEvents::events() const {
  // @@protoc_insertion_point(field_list:CSVCMsgList_GameEvents.events)
  return events_;
}

// -------------------------------------------------------------------

// CSVCMsg_UserMessage

// optional int32 msg_type = 1;
inline bool CSVCMsg_UserMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_UserMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_UserMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_UserMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 CSVCMsg_UserMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UserMessage.msg_type)
  return msg_type_;
}
inline void CSVCMsg_UserMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_UserMessage.msg_type)
}

// optional bytes msg_data = 2;
inline bool CSVCMsg_UserMessage::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_UserMessage::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_UserMessage::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_UserMessage::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_data();
}
inline const ::std::string& CSVCMsg_UserMessage::msg_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UserMessage.msg_data)
  return msg_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_UserMessage::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_UserMessage.msg_data)
}
inline void CSVCMsg_UserMessage::set_msg_data(const char* value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_UserMessage.msg_data)
}
inline void CSVCMsg_UserMessage::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_UserMessage.msg_data)
}
inline ::std::string* CSVCMsg_UserMessage::mutable_msg_data() {
  set_has_msg_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_UserMessage.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_UserMessage::release_msg_data() {
  clear_has_msg_data();
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_UserMessage::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    set_has_msg_data();
  } else {
    clear_has_msg_data();
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_UserMessage.msg_data)
}

// -------------------------------------------------------------------

// CSVCMsgList_UserMessages_usermsg_t

// optional int32 tick = 1;
inline bool CSVCMsgList_UserMessages_usermsg_t::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_tick() {
  tick_ = 0;
  clear_has_tick();
}
inline ::google::protobuf::int32 CSVCMsgList_UserMessages_usermsg_t::tick() const {
  // @@protoc_insertion_point(field_get:CSVCMsgList_UserMessages.usermsg_t.tick)
  return tick_;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_tick(::google::protobuf::int32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsgList_UserMessages.usermsg_t.tick)
}

// optional .CSVCMsg_UserMessage msg = 2;
inline bool CSVCMsgList_UserMessages_usermsg_t::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_msg() {
  if (msg_ != NULL) msg_->::CSVCMsg_UserMessage::Clear();
  clear_has_msg();
}
inline const ::CSVCMsg_UserMessage& CSVCMsgList_UserMessages_usermsg_t::msg() const {
  // @@protoc_insertion_point(field_get:CSVCMsgList_UserMessages.usermsg_t.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::CSVCMsg_UserMessage* CSVCMsgList_UserMessages_usermsg_t::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::CSVCMsg_UserMessage;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsgList_UserMessages.usermsg_t.msg)
  return msg_;
}
inline ::CSVCMsg_UserMessage* CSVCMsgList_UserMessages_usermsg_t::release_msg() {
  clear_has_msg();
  ::CSVCMsg_UserMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_allocated_msg(::CSVCMsg_UserMessage* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsgList_UserMessages.usermsg_t.msg)
}

// -------------------------------------------------------------------

// CSVCMsgList_UserMessages

// repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
inline int CSVCMsgList_UserMessages::usermsgs_size() const {
  return usermsgs_.size();
}
inline void CSVCMsgList_UserMessages::clear_usermsgs() {
  usermsgs_.Clear();
}
inline const ::CSVCMsgList_UserMessages_usermsg_t& CSVCMsgList_UserMessages::usermsgs(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsgList_UserMessages.usermsgs)
  return usermsgs_.Get(index);
}
inline ::CSVCMsgList_UserMessages_usermsg_t* CSVCMsgList_UserMessages::mutable_usermsgs(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsgList_UserMessages.usermsgs)
  return usermsgs_.Mutable(index);
}
inline ::CSVCMsgList_UserMessages_usermsg_t* CSVCMsgList_UserMessages::add_usermsgs() {
  // @@protoc_insertion_point(field_add:CSVCMsgList_UserMessages.usermsgs)
  return usermsgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >*
CSVCMsgList_UserMessages::mutable_usermsgs() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsgList_UserMessages.usermsgs)
  return &usermsgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >&
CSVCMsgList_UserMessages::usermsgs() const {
  // @@protoc_insertion_point(field_list:CSVCMsgList_UserMessages.usermsgs)
  return usermsgs_;
}

// -------------------------------------------------------------------

// CNETMsg_SpawnGroup_Load

// optional string worldname = 1;
inline bool CNETMsg_SpawnGroup_Load::has_worldname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_worldname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_worldname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SpawnGroup_Load::clear_worldname() {
  worldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_worldname();
}
inline const ::std::string& CNETMsg_SpawnGroup_Load::worldname() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.worldname)
  return worldname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_worldname(const ::std::string& value) {
  set_has_worldname();
  worldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.worldname)
}
inline void CNETMsg_SpawnGroup_Load::set_worldname(const char* value) {
  set_has_worldname();
  worldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SpawnGroup_Load.worldname)
}
inline void CNETMsg_SpawnGroup_Load::set_worldname(const char* value, size_t size) {
  set_has_worldname();
  worldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SpawnGroup_Load.worldname)
}
inline ::std::string* CNETMsg_SpawnGroup_Load::mutable_worldname() {
  set_has_worldname();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.worldname)
  return worldname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SpawnGroup_Load::release_worldname() {
  clear_has_worldname();
  return worldname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_worldname(::std::string* worldname) {
  if (worldname != NULL) {
    set_has_worldname();
  } else {
    clear_has_worldname();
  }
  worldname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), worldname);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.worldname)
}

// optional string entitylumpname = 2;
inline bool CNETMsg_SpawnGroup_Load::has_entitylumpname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_entitylumpname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_entitylumpname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_SpawnGroup_Load::clear_entitylumpname() {
  entitylumpname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entitylumpname();
}
inline const ::std::string& CNETMsg_SpawnGroup_Load::entitylumpname() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.entitylumpname)
  return entitylumpname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_entitylumpname(const ::std::string& value) {
  set_has_entitylumpname();
  entitylumpname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.entitylumpname)
}
inline void CNETMsg_SpawnGroup_Load::set_entitylumpname(const char* value) {
  set_has_entitylumpname();
  entitylumpname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SpawnGroup_Load.entitylumpname)
}
inline void CNETMsg_SpawnGroup_Load::set_entitylumpname(const char* value, size_t size) {
  set_has_entitylumpname();
  entitylumpname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SpawnGroup_Load.entitylumpname)
}
inline ::std::string* CNETMsg_SpawnGroup_Load::mutable_entitylumpname() {
  set_has_entitylumpname();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.entitylumpname)
  return entitylumpname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SpawnGroup_Load::release_entitylumpname() {
  clear_has_entitylumpname();
  return entitylumpname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_entitylumpname(::std::string* entitylumpname) {
  if (entitylumpname != NULL) {
    set_has_entitylumpname();
  } else {
    clear_has_entitylumpname();
  }
  entitylumpname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entitylumpname);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.entitylumpname)
}

// optional string entityfiltername = 3;
inline bool CNETMsg_SpawnGroup_Load::has_entityfiltername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_entityfiltername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_entityfiltername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_SpawnGroup_Load::clear_entityfiltername() {
  entityfiltername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityfiltername();
}
inline const ::std::string& CNETMsg_SpawnGroup_Load::entityfiltername() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.entityfiltername)
  return entityfiltername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_entityfiltername(const ::std::string& value) {
  set_has_entityfiltername();
  entityfiltername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.entityfiltername)
}
inline void CNETMsg_SpawnGroup_Load::set_entityfiltername(const char* value) {
  set_has_entityfiltername();
  entityfiltername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SpawnGroup_Load.entityfiltername)
}
inline void CNETMsg_SpawnGroup_Load::set_entityfiltername(const char* value, size_t size) {
  set_has_entityfiltername();
  entityfiltername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SpawnGroup_Load.entityfiltername)
}
inline ::std::string* CNETMsg_SpawnGroup_Load::mutable_entityfiltername() {
  set_has_entityfiltername();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.entityfiltername)
  return entityfiltername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SpawnGroup_Load::release_entityfiltername() {
  clear_has_entityfiltername();
  return entityfiltername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_entityfiltername(::std::string* entityfiltername) {
  if (entityfiltername != NULL) {
    set_has_entityfiltername();
  } else {
    clear_has_entityfiltername();
  }
  entityfiltername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityfiltername);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.entityfiltername)
}

// optional uint32 spawngrouphandle = 4;
inline bool CNETMsg_SpawnGroup_Load::has_spawngrouphandle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_spawngrouphandle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_spawngrouphandle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CNETMsg_SpawnGroup_Load::clear_spawngrouphandle() {
  spawngrouphandle_ = 0u;
  clear_has_spawngrouphandle();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_Load::spawngrouphandle() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.spawngrouphandle)
  return spawngrouphandle_;
}
inline void CNETMsg_SpawnGroup_Load::set_spawngrouphandle(::google::protobuf::uint32 value) {
  set_has_spawngrouphandle();
  spawngrouphandle_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.spawngrouphandle)
}

// optional uint32 spawngroupownerhandle = 5;
inline bool CNETMsg_SpawnGroup_Load::has_spawngroupownerhandle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_spawngroupownerhandle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_spawngroupownerhandle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CNETMsg_SpawnGroup_Load::clear_spawngroupownerhandle() {
  spawngroupownerhandle_ = 0u;
  clear_has_spawngroupownerhandle();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_Load::spawngroupownerhandle() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.spawngroupownerhandle)
  return spawngroupownerhandle_;
}
inline void CNETMsg_SpawnGroup_Load::set_spawngroupownerhandle(::google::protobuf::uint32 value) {
  set_has_spawngroupownerhandle();
  spawngroupownerhandle_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.spawngroupownerhandle)
}

// optional .CMsgVector world_offset_pos = 6;
inline bool CNETMsg_SpawnGroup_Load::has_world_offset_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_world_offset_pos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_world_offset_pos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CNETMsg_SpawnGroup_Load::clear_world_offset_pos() {
  if (world_offset_pos_ != NULL) world_offset_pos_->::CMsgVector::Clear();
  clear_has_world_offset_pos();
}
inline const ::CMsgVector& CNETMsg_SpawnGroup_Load::world_offset_pos() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.world_offset_pos)
  return world_offset_pos_ != NULL ? *world_offset_pos_ : *default_instance_->world_offset_pos_;
}
inline ::CMsgVector* CNETMsg_SpawnGroup_Load::mutable_world_offset_pos() {
  set_has_world_offset_pos();
  if (world_offset_pos_ == NULL) {
    world_offset_pos_ = new ::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.world_offset_pos)
  return world_offset_pos_;
}
inline ::CMsgVector* CNETMsg_SpawnGroup_Load::release_world_offset_pos() {
  clear_has_world_offset_pos();
  ::CMsgVector* temp = world_offset_pos_;
  world_offset_pos_ = NULL;
  return temp;
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_world_offset_pos(::CMsgVector* world_offset_pos) {
  delete world_offset_pos_;
  world_offset_pos_ = world_offset_pos;
  if (world_offset_pos) {
    set_has_world_offset_pos();
  } else {
    clear_has_world_offset_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.world_offset_pos)
}

// optional .CMsgQAngle world_offset_angle = 7;
inline bool CNETMsg_SpawnGroup_Load::has_world_offset_angle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_world_offset_angle() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_world_offset_angle() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CNETMsg_SpawnGroup_Load::clear_world_offset_angle() {
  if (world_offset_angle_ != NULL) world_offset_angle_->::CMsgQAngle::Clear();
  clear_has_world_offset_angle();
}
inline const ::CMsgQAngle& CNETMsg_SpawnGroup_Load::world_offset_angle() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.world_offset_angle)
  return world_offset_angle_ != NULL ? *world_offset_angle_ : *default_instance_->world_offset_angle_;
}
inline ::CMsgQAngle* CNETMsg_SpawnGroup_Load::mutable_world_offset_angle() {
  set_has_world_offset_angle();
  if (world_offset_angle_ == NULL) {
    world_offset_angle_ = new ::CMsgQAngle;
  }
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.world_offset_angle)
  return world_offset_angle_;
}
inline ::CMsgQAngle* CNETMsg_SpawnGroup_Load::release_world_offset_angle() {
  clear_has_world_offset_angle();
  ::CMsgQAngle* temp = world_offset_angle_;
  world_offset_angle_ = NULL;
  return temp;
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_world_offset_angle(::CMsgQAngle* world_offset_angle) {
  delete world_offset_angle_;
  world_offset_angle_ = world_offset_angle;
  if (world_offset_angle) {
    set_has_world_offset_angle();
  } else {
    clear_has_world_offset_angle();
  }
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.world_offset_angle)
}

// optional bytes spawngroupmanifest = 8;
inline bool CNETMsg_SpawnGroup_Load::has_spawngroupmanifest() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_spawngroupmanifest() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_spawngroupmanifest() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CNETMsg_SpawnGroup_Load::clear_spawngroupmanifest() {
  spawngroupmanifest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_spawngroupmanifest();
}
inline const ::std::string& CNETMsg_SpawnGroup_Load::spawngroupmanifest() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.spawngroupmanifest)
  return spawngroupmanifest_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_spawngroupmanifest(const ::std::string& value) {
  set_has_spawngroupmanifest();
  spawngroupmanifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.spawngroupmanifest)
}
inline void CNETMsg_SpawnGroup_Load::set_spawngroupmanifest(const char* value) {
  set_has_spawngroupmanifest();
  spawngroupmanifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SpawnGroup_Load.spawngroupmanifest)
}
inline void CNETMsg_SpawnGroup_Load::set_spawngroupmanifest(const void* value, size_t size) {
  set_has_spawngroupmanifest();
  spawngroupmanifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SpawnGroup_Load.spawngroupmanifest)
}
inline ::std::string* CNETMsg_SpawnGroup_Load::mutable_spawngroupmanifest() {
  set_has_spawngroupmanifest();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.spawngroupmanifest)
  return spawngroupmanifest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SpawnGroup_Load::release_spawngroupmanifest() {
  clear_has_spawngroupmanifest();
  return spawngroupmanifest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_spawngroupmanifest(::std::string* spawngroupmanifest) {
  if (spawngroupmanifest != NULL) {
    set_has_spawngroupmanifest();
  } else {
    clear_has_spawngroupmanifest();
  }
  spawngroupmanifest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spawngroupmanifest);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.spawngroupmanifest)
}

// optional uint32 flags = 9;
inline bool CNETMsg_SpawnGroup_Load::has_flags() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_flags() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_flags() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CNETMsg_SpawnGroup_Load::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_Load::flags() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.flags)
  return flags_;
}
inline void CNETMsg_SpawnGroup_Load::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.flags)
}

// optional int32 tickcount = 10;
inline bool CNETMsg_SpawnGroup_Load::has_tickcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_tickcount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_tickcount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CNETMsg_SpawnGroup_Load::clear_tickcount() {
  tickcount_ = 0;
  clear_has_tickcount();
}
inline ::google::protobuf::int32 CNETMsg_SpawnGroup_Load::tickcount() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.tickcount)
  return tickcount_;
}
inline void CNETMsg_SpawnGroup_Load::set_tickcount(::google::protobuf::int32 value) {
  set_has_tickcount();
  tickcount_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.tickcount)
}

// optional bool manifestincomplete = 11;
inline bool CNETMsg_SpawnGroup_Load::has_manifestincomplete() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_manifestincomplete() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_manifestincomplete() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CNETMsg_SpawnGroup_Load::clear_manifestincomplete() {
  manifestincomplete_ = false;
  clear_has_manifestincomplete();
}
inline bool CNETMsg_SpawnGroup_Load::manifestincomplete() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.manifestincomplete)
  return manifestincomplete_;
}
inline void CNETMsg_SpawnGroup_Load::set_manifestincomplete(bool value) {
  set_has_manifestincomplete();
  manifestincomplete_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.manifestincomplete)
}

// optional string localnamefixup = 12;
inline bool CNETMsg_SpawnGroup_Load::has_localnamefixup() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_localnamefixup() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_localnamefixup() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CNETMsg_SpawnGroup_Load::clear_localnamefixup() {
  localnamefixup_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_localnamefixup();
}
inline const ::std::string& CNETMsg_SpawnGroup_Load::localnamefixup() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.localnamefixup)
  return localnamefixup_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_localnamefixup(const ::std::string& value) {
  set_has_localnamefixup();
  localnamefixup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.localnamefixup)
}
inline void CNETMsg_SpawnGroup_Load::set_localnamefixup(const char* value) {
  set_has_localnamefixup();
  localnamefixup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SpawnGroup_Load.localnamefixup)
}
inline void CNETMsg_SpawnGroup_Load::set_localnamefixup(const char* value, size_t size) {
  set_has_localnamefixup();
  localnamefixup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SpawnGroup_Load.localnamefixup)
}
inline ::std::string* CNETMsg_SpawnGroup_Load::mutable_localnamefixup() {
  set_has_localnamefixup();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.localnamefixup)
  return localnamefixup_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SpawnGroup_Load::release_localnamefixup() {
  clear_has_localnamefixup();
  return localnamefixup_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_localnamefixup(::std::string* localnamefixup) {
  if (localnamefixup != NULL) {
    set_has_localnamefixup();
  } else {
    clear_has_localnamefixup();
  }
  localnamefixup_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localnamefixup);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.localnamefixup)
}

// optional string parentnamefixup = 13;
inline bool CNETMsg_SpawnGroup_Load::has_parentnamefixup() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_parentnamefixup() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_parentnamefixup() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_parentnamefixup() {
  parentnamefixup_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parentnamefixup();
}
inline const ::std::string& CNETMsg_SpawnGroup_Load::parentnamefixup() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.parentnamefixup)
  return parentnamefixup_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_parentnamefixup(const ::std::string& value) {
  set_has_parentnamefixup();
  parentnamefixup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.parentnamefixup)
}
inline void CNETMsg_SpawnGroup_Load::set_parentnamefixup(const char* value) {
  set_has_parentnamefixup();
  parentnamefixup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SpawnGroup_Load.parentnamefixup)
}
inline void CNETMsg_SpawnGroup_Load::set_parentnamefixup(const char* value, size_t size) {
  set_has_parentnamefixup();
  parentnamefixup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SpawnGroup_Load.parentnamefixup)
}
inline ::std::string* CNETMsg_SpawnGroup_Load::mutable_parentnamefixup() {
  set_has_parentnamefixup();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_Load.parentnamefixup)
  return parentnamefixup_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SpawnGroup_Load::release_parentnamefixup() {
  clear_has_parentnamefixup();
  return parentnamefixup_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_Load::set_allocated_parentnamefixup(::std::string* parentnamefixup) {
  if (parentnamefixup != NULL) {
    set_has_parentnamefixup();
  } else {
    clear_has_parentnamefixup();
  }
  parentnamefixup_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parentnamefixup);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_Load.parentnamefixup)
}

// optional int32 manifestloadpriority = 14;
inline bool CNETMsg_SpawnGroup_Load::has_manifestloadpriority() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_manifestloadpriority() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_manifestloadpriority() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_manifestloadpriority() {
  manifestloadpriority_ = 0;
  clear_has_manifestloadpriority();
}
inline ::google::protobuf::int32 CNETMsg_SpawnGroup_Load::manifestloadpriority() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.manifestloadpriority)
  return manifestloadpriority_;
}
inline void CNETMsg_SpawnGroup_Load::set_manifestloadpriority(::google::protobuf::int32 value) {
  set_has_manifestloadpriority();
  manifestloadpriority_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.manifestloadpriority)
}

// optional uint32 worldgroupid = 15;
inline bool CNETMsg_SpawnGroup_Load::has_worldgroupid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_worldgroupid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_worldgroupid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_worldgroupid() {
  worldgroupid_ = 0u;
  clear_has_worldgroupid();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_Load::worldgroupid() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.worldgroupid)
  return worldgroupid_;
}
inline void CNETMsg_SpawnGroup_Load::set_worldgroupid(::google::protobuf::uint32 value) {
  set_has_worldgroupid();
  worldgroupid_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.worldgroupid)
}

// optional uint32 creationsequence = 16;
inline bool CNETMsg_SpawnGroup_Load::has_creationsequence() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CNETMsg_SpawnGroup_Load::set_has_creationsequence() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_has_creationsequence() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CNETMsg_SpawnGroup_Load::clear_creationsequence() {
  creationsequence_ = 0u;
  clear_has_creationsequence();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_Load::creationsequence() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Load.creationsequence)
  return creationsequence_;
}
inline void CNETMsg_SpawnGroup_Load::set_creationsequence(::google::protobuf::uint32 value) {
  set_has_creationsequence();
  creationsequence_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Load.creationsequence)
}

// -------------------------------------------------------------------

// CNETMsg_SpawnGroup_ManifestUpdate

// optional uint32 spawngrouphandle = 1;
inline bool CNETMsg_SpawnGroup_ManifestUpdate::has_spawngrouphandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_has_spawngrouphandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::clear_has_spawngrouphandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::clear_spawngrouphandle() {
  spawngrouphandle_ = 0u;
  clear_has_spawngrouphandle();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_ManifestUpdate::spawngrouphandle() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_ManifestUpdate.spawngrouphandle)
  return spawngrouphandle_;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_spawngrouphandle(::google::protobuf::uint32 value) {
  set_has_spawngrouphandle();
  spawngrouphandle_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_ManifestUpdate.spawngrouphandle)
}

// optional bytes spawngroupmanifest = 2;
inline bool CNETMsg_SpawnGroup_ManifestUpdate::has_spawngroupmanifest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_has_spawngroupmanifest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::clear_has_spawngroupmanifest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::clear_spawngroupmanifest() {
  spawngroupmanifest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_spawngroupmanifest();
}
inline const ::std::string& CNETMsg_SpawnGroup_ManifestUpdate::spawngroupmanifest() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_ManifestUpdate.spawngroupmanifest)
  return spawngroupmanifest_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_spawngroupmanifest(const ::std::string& value) {
  set_has_spawngroupmanifest();
  spawngroupmanifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_ManifestUpdate.spawngroupmanifest)
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_spawngroupmanifest(const char* value) {
  set_has_spawngroupmanifest();
  spawngroupmanifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SpawnGroup_ManifestUpdate.spawngroupmanifest)
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_spawngroupmanifest(const void* value, size_t size) {
  set_has_spawngroupmanifest();
  spawngroupmanifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SpawnGroup_ManifestUpdate.spawngroupmanifest)
}
inline ::std::string* CNETMsg_SpawnGroup_ManifestUpdate::mutable_spawngroupmanifest() {
  set_has_spawngroupmanifest();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SpawnGroup_ManifestUpdate.spawngroupmanifest)
  return spawngroupmanifest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SpawnGroup_ManifestUpdate::release_spawngroupmanifest() {
  clear_has_spawngroupmanifest();
  return spawngroupmanifest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_allocated_spawngroupmanifest(::std::string* spawngroupmanifest) {
  if (spawngroupmanifest != NULL) {
    set_has_spawngroupmanifest();
  } else {
    clear_has_spawngroupmanifest();
  }
  spawngroupmanifest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spawngroupmanifest);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SpawnGroup_ManifestUpdate.spawngroupmanifest)
}

// optional bool manifestincomplete = 3;
inline bool CNETMsg_SpawnGroup_ManifestUpdate::has_manifestincomplete() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_has_manifestincomplete() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::clear_has_manifestincomplete() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::clear_manifestincomplete() {
  manifestincomplete_ = false;
  clear_has_manifestincomplete();
}
inline bool CNETMsg_SpawnGroup_ManifestUpdate::manifestincomplete() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_ManifestUpdate.manifestincomplete)
  return manifestincomplete_;
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::set_manifestincomplete(bool value) {
  set_has_manifestincomplete();
  manifestincomplete_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_ManifestUpdate.manifestincomplete)
}

// -------------------------------------------------------------------

// CNETMsg_SpawnGroup_SetCreationTick

// optional uint32 spawngrouphandle = 1;
inline bool CNETMsg_SpawnGroup_SetCreationTick::has_spawngrouphandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::set_has_spawngrouphandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::clear_has_spawngrouphandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::clear_spawngrouphandle() {
  spawngrouphandle_ = 0u;
  clear_has_spawngrouphandle();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_SetCreationTick::spawngrouphandle() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_SetCreationTick.spawngrouphandle)
  return spawngrouphandle_;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::set_spawngrouphandle(::google::protobuf::uint32 value) {
  set_has_spawngrouphandle();
  spawngrouphandle_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_SetCreationTick.spawngrouphandle)
}

// optional int32 tickcount = 2;
inline bool CNETMsg_SpawnGroup_SetCreationTick::has_tickcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::set_has_tickcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::clear_has_tickcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::clear_tickcount() {
  tickcount_ = 0;
  clear_has_tickcount();
}
inline ::google::protobuf::int32 CNETMsg_SpawnGroup_SetCreationTick::tickcount() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_SetCreationTick.tickcount)
  return tickcount_;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::set_tickcount(::google::protobuf::int32 value) {
  set_has_tickcount();
  tickcount_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_SetCreationTick.tickcount)
}

// optional uint32 creationsequence = 3;
inline bool CNETMsg_SpawnGroup_SetCreationTick::has_creationsequence() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::set_has_creationsequence() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::clear_has_creationsequence() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::clear_creationsequence() {
  creationsequence_ = 0u;
  clear_has_creationsequence();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_SetCreationTick::creationsequence() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_SetCreationTick.creationsequence)
  return creationsequence_;
}
inline void CNETMsg_SpawnGroup_SetCreationTick::set_creationsequence(::google::protobuf::uint32 value) {
  set_has_creationsequence();
  creationsequence_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_SetCreationTick.creationsequence)
}

// -------------------------------------------------------------------

// CNETMsg_SpawnGroup_Unload

// optional uint32 spawngrouphandle = 1;
inline bool CNETMsg_SpawnGroup_Unload::has_spawngrouphandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SpawnGroup_Unload::set_has_spawngrouphandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SpawnGroup_Unload::clear_has_spawngrouphandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SpawnGroup_Unload::clear_spawngrouphandle() {
  spawngrouphandle_ = 0u;
  clear_has_spawngrouphandle();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_Unload::spawngrouphandle() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Unload.spawngrouphandle)
  return spawngrouphandle_;
}
inline void CNETMsg_SpawnGroup_Unload::set_spawngrouphandle(::google::protobuf::uint32 value) {
  set_has_spawngrouphandle();
  spawngrouphandle_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Unload.spawngrouphandle)
}

// optional uint32 flags = 2;
inline bool CNETMsg_SpawnGroup_Unload::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_SpawnGroup_Unload::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_SpawnGroup_Unload::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_SpawnGroup_Unload::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_Unload::flags() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Unload.flags)
  return flags_;
}
inline void CNETMsg_SpawnGroup_Unload::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Unload.flags)
}

// optional int32 tickcount = 3;
inline bool CNETMsg_SpawnGroup_Unload::has_tickcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_SpawnGroup_Unload::set_has_tickcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_SpawnGroup_Unload::clear_has_tickcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_SpawnGroup_Unload::clear_tickcount() {
  tickcount_ = 0;
  clear_has_tickcount();
}
inline ::google::protobuf::int32 CNETMsg_SpawnGroup_Unload::tickcount() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_Unload.tickcount)
  return tickcount_;
}
inline void CNETMsg_SpawnGroup_Unload::set_tickcount(::google::protobuf::int32 value) {
  set_has_tickcount();
  tickcount_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_Unload.tickcount)
}

// -------------------------------------------------------------------

// CNETMsg_SpawnGroup_LoadCompleted

// optional uint32 spawngrouphandle = 1;
inline bool CNETMsg_SpawnGroup_LoadCompleted::has_spawngrouphandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SpawnGroup_LoadCompleted::set_has_spawngrouphandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SpawnGroup_LoadCompleted::clear_has_spawngrouphandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SpawnGroup_LoadCompleted::clear_spawngrouphandle() {
  spawngrouphandle_ = 0u;
  clear_has_spawngrouphandle();
}
inline ::google::protobuf::uint32 CNETMsg_SpawnGroup_LoadCompleted::spawngrouphandle() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SpawnGroup_LoadCompleted.spawngrouphandle)
  return spawngrouphandle_;
}
inline void CNETMsg_SpawnGroup_LoadCompleted::set_spawngrouphandle(::google::protobuf::uint32 value) {
  set_has_spawngrouphandle();
  spawngrouphandle_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SpawnGroup_LoadCompleted.spawngrouphandle)
}

// -------------------------------------------------------------------

// CSVCMsg_GameSessionConfiguration

// optional bool is_multiplayer = 1;
inline bool CSVCMsg_GameSessionConfiguration::has_is_multiplayer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_is_multiplayer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_is_multiplayer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_is_multiplayer() {
  is_multiplayer_ = false;
  clear_has_is_multiplayer();
}
inline bool CSVCMsg_GameSessionConfiguration::is_multiplayer() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.is_multiplayer)
  return is_multiplayer_;
}
inline void CSVCMsg_GameSessionConfiguration::set_is_multiplayer(bool value) {
  set_has_is_multiplayer();
  is_multiplayer_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.is_multiplayer)
}

// optional bool is_loadsavegame = 2;
inline bool CSVCMsg_GameSessionConfiguration::has_is_loadsavegame() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_is_loadsavegame() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_is_loadsavegame() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_is_loadsavegame() {
  is_loadsavegame_ = false;
  clear_has_is_loadsavegame();
}
inline bool CSVCMsg_GameSessionConfiguration::is_loadsavegame() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.is_loadsavegame)
  return is_loadsavegame_;
}
inline void CSVCMsg_GameSessionConfiguration::set_is_loadsavegame(bool value) {
  set_has_is_loadsavegame();
  is_loadsavegame_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.is_loadsavegame)
}

// optional bool is_background_map = 3;
inline bool CSVCMsg_GameSessionConfiguration::has_is_background_map() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_is_background_map() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_is_background_map() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_is_background_map() {
  is_background_map_ = false;
  clear_has_is_background_map();
}
inline bool CSVCMsg_GameSessionConfiguration::is_background_map() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.is_background_map)
  return is_background_map_;
}
inline void CSVCMsg_GameSessionConfiguration::set_is_background_map(bool value) {
  set_has_is_background_map();
  is_background_map_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.is_background_map)
}

// optional bool is_headless = 4;
inline bool CSVCMsg_GameSessionConfiguration::has_is_headless() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_is_headless() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_is_headless() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_is_headless() {
  is_headless_ = false;
  clear_has_is_headless();
}
inline bool CSVCMsg_GameSessionConfiguration::is_headless() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.is_headless)
  return is_headless_;
}
inline void CSVCMsg_GameSessionConfiguration::set_is_headless(bool value) {
  set_has_is_headless();
  is_headless_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.is_headless)
}

// optional uint32 min_client_limit = 5;
inline bool CSVCMsg_GameSessionConfiguration::has_min_client_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_min_client_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_min_client_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_min_client_limit() {
  min_client_limit_ = 0u;
  clear_has_min_client_limit();
}
inline ::google::protobuf::uint32 CSVCMsg_GameSessionConfiguration::min_client_limit() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.min_client_limit)
  return min_client_limit_;
}
inline void CSVCMsg_GameSessionConfiguration::set_min_client_limit(::google::protobuf::uint32 value) {
  set_has_min_client_limit();
  min_client_limit_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.min_client_limit)
}

// optional uint32 max_client_limit = 6;
inline bool CSVCMsg_GameSessionConfiguration::has_max_client_limit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_max_client_limit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_max_client_limit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_max_client_limit() {
  max_client_limit_ = 0u;
  clear_has_max_client_limit();
}
inline ::google::protobuf::uint32 CSVCMsg_GameSessionConfiguration::max_client_limit() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.max_client_limit)
  return max_client_limit_;
}
inline void CSVCMsg_GameSessionConfiguration::set_max_client_limit(::google::protobuf::uint32 value) {
  set_has_max_client_limit();
  max_client_limit_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.max_client_limit)
}

// optional uint32 max_clients = 7;
inline bool CSVCMsg_GameSessionConfiguration::has_max_clients() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_max_clients() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_max_clients() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_max_clients() {
  max_clients_ = 0u;
  clear_has_max_clients();
}
inline ::google::protobuf::uint32 CSVCMsg_GameSessionConfiguration::max_clients() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.max_clients)
  return max_clients_;
}
inline void CSVCMsg_GameSessionConfiguration::set_max_clients(::google::protobuf::uint32 value) {
  set_has_max_clients();
  max_clients_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.max_clients)
}

// optional fixed32 tick_interval = 8;
inline bool CSVCMsg_GameSessionConfiguration::has_tick_interval() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_tick_interval() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_tick_interval() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_tick_interval() {
  tick_interval_ = 0u;
  clear_has_tick_interval();
}
inline ::google::protobuf::uint32 CSVCMsg_GameSessionConfiguration::tick_interval() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.tick_interval)
  return tick_interval_;
}
inline void CSVCMsg_GameSessionConfiguration::set_tick_interval(::google::protobuf::uint32 value) {
  set_has_tick_interval();
  tick_interval_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.tick_interval)
}

// optional string hostname = 9;
inline bool CSVCMsg_GameSessionConfiguration::has_hostname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_hostname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostname();
}
inline const ::std::string& CSVCMsg_GameSessionConfiguration::hostname() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.hostname)
  return hostname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_hostname(const ::std::string& value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.hostname)
}
inline void CSVCMsg_GameSessionConfiguration::set_hostname(const char* value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameSessionConfiguration.hostname)
}
inline void CSVCMsg_GameSessionConfiguration::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameSessionConfiguration.hostname)
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::mutable_hostname() {
  set_has_hostname();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameSessionConfiguration.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::release_hostname() {
  clear_has_hostname();
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    set_has_hostname();
  } else {
    clear_has_hostname();
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameSessionConfiguration.hostname)
}

// optional string savegamename = 10;
inline bool CSVCMsg_GameSessionConfiguration::has_savegamename() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_savegamename() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_savegamename() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_savegamename() {
  savegamename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_savegamename();
}
inline const ::std::string& CSVCMsg_GameSessionConfiguration::savegamename() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.savegamename)
  return savegamename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_savegamename(const ::std::string& value) {
  set_has_savegamename();
  savegamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.savegamename)
}
inline void CSVCMsg_GameSessionConfiguration::set_savegamename(const char* value) {
  set_has_savegamename();
  savegamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameSessionConfiguration.savegamename)
}
inline void CSVCMsg_GameSessionConfiguration::set_savegamename(const char* value, size_t size) {
  set_has_savegamename();
  savegamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameSessionConfiguration.savegamename)
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::mutable_savegamename() {
  set_has_savegamename();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameSessionConfiguration.savegamename)
  return savegamename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::release_savegamename() {
  clear_has_savegamename();
  return savegamename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_allocated_savegamename(::std::string* savegamename) {
  if (savegamename != NULL) {
    set_has_savegamename();
  } else {
    clear_has_savegamename();
  }
  savegamename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), savegamename);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameSessionConfiguration.savegamename)
}

// optional string s1_mapname = 11;
inline bool CSVCMsg_GameSessionConfiguration::has_s1_mapname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_s1_mapname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_s1_mapname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_s1_mapname() {
  s1_mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s1_mapname();
}
inline const ::std::string& CSVCMsg_GameSessionConfiguration::s1_mapname() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.s1_mapname)
  return s1_mapname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_s1_mapname(const ::std::string& value) {
  set_has_s1_mapname();
  s1_mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.s1_mapname)
}
inline void CSVCMsg_GameSessionConfiguration::set_s1_mapname(const char* value) {
  set_has_s1_mapname();
  s1_mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameSessionConfiguration.s1_mapname)
}
inline void CSVCMsg_GameSessionConfiguration::set_s1_mapname(const char* value, size_t size) {
  set_has_s1_mapname();
  s1_mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameSessionConfiguration.s1_mapname)
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::mutable_s1_mapname() {
  set_has_s1_mapname();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameSessionConfiguration.s1_mapname)
  return s1_mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::release_s1_mapname() {
  clear_has_s1_mapname();
  return s1_mapname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_allocated_s1_mapname(::std::string* s1_mapname) {
  if (s1_mapname != NULL) {
    set_has_s1_mapname();
  } else {
    clear_has_s1_mapname();
  }
  s1_mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s1_mapname);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameSessionConfiguration.s1_mapname)
}

// optional string gamemode = 12;
inline bool CSVCMsg_GameSessionConfiguration::has_gamemode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_gamemode() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_gamemode() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_gamemode() {
  gamemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gamemode();
}
inline const ::std::string& CSVCMsg_GameSessionConfiguration::gamemode() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.gamemode)
  return gamemode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_gamemode(const ::std::string& value) {
  set_has_gamemode();
  gamemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.gamemode)
}
inline void CSVCMsg_GameSessionConfiguration::set_gamemode(const char* value) {
  set_has_gamemode();
  gamemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameSessionConfiguration.gamemode)
}
inline void CSVCMsg_GameSessionConfiguration::set_gamemode(const char* value, size_t size) {
  set_has_gamemode();
  gamemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameSessionConfiguration.gamemode)
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::mutable_gamemode() {
  set_has_gamemode();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameSessionConfiguration.gamemode)
  return gamemode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::release_gamemode() {
  clear_has_gamemode();
  return gamemode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_allocated_gamemode(::std::string* gamemode) {
  if (gamemode != NULL) {
    set_has_gamemode();
  } else {
    clear_has_gamemode();
  }
  gamemode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamemode);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameSessionConfiguration.gamemode)
}

// optional string server_ip_address = 13;
inline bool CSVCMsg_GameSessionConfiguration::has_server_ip_address() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_server_ip_address() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_server_ip_address() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_server_ip_address() {
  server_ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_ip_address();
}
inline const ::std::string& CSVCMsg_GameSessionConfiguration::server_ip_address() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.server_ip_address)
  return server_ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_server_ip_address(const ::std::string& value) {
  set_has_server_ip_address();
  server_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.server_ip_address)
}
inline void CSVCMsg_GameSessionConfiguration::set_server_ip_address(const char* value) {
  set_has_server_ip_address();
  server_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameSessionConfiguration.server_ip_address)
}
inline void CSVCMsg_GameSessionConfiguration::set_server_ip_address(const char* value, size_t size) {
  set_has_server_ip_address();
  server_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameSessionConfiguration.server_ip_address)
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::mutable_server_ip_address() {
  set_has_server_ip_address();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameSessionConfiguration.server_ip_address)
  return server_ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::release_server_ip_address() {
  clear_has_server_ip_address();
  return server_ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_allocated_server_ip_address(::std::string* server_ip_address) {
  if (server_ip_address != NULL) {
    set_has_server_ip_address();
  } else {
    clear_has_server_ip_address();
  }
  server_ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip_address);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameSessionConfiguration.server_ip_address)
}

// optional bytes data = 14;
inline bool CSVCMsg_GameSessionConfiguration::has_data() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_data() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_data() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CSVCMsg_GameSessionConfiguration::data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.data)
}
inline void CSVCMsg_GameSessionConfiguration::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameSessionConfiguration.data)
}
inline void CSVCMsg_GameSessionConfiguration::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameSessionConfiguration.data)
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameSessionConfiguration.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameSessionConfiguration::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameSessionConfiguration::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameSessionConfiguration.data)
}

// optional bool is_localonly = 15;
inline bool CSVCMsg_GameSessionConfiguration::has_is_localonly() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSVCMsg_GameSessionConfiguration::set_has_is_localonly() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_has_is_localonly() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSVCMsg_GameSessionConfiguration::clear_is_localonly() {
  is_localonly_ = false;
  clear_has_is_localonly();
}
inline bool CSVCMsg_GameSessionConfiguration::is_localonly() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameSessionConfiguration.is_localonly)
  return is_localonly_;
}
inline void CSVCMsg_GameSessionConfiguration::set_is_localonly(bool value) {
  set_has_is_localonly();
  is_localonly_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameSessionConfiguration.is_localonly)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NET_Messages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NET_Messages>() {
  return ::NET_Messages_descriptor();
}
template <> struct is_proto_enum< ::SpawnGroupFlags_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SpawnGroupFlags_t>() {
  return ::SpawnGroupFlags_t_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_networkbasetypes_2eproto__INCLUDED
